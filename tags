!_TAG_EXTRA_DESCRIPTION	anonymous	/Include tags for non-named objects like lambda/
!_TAG_EXTRA_DESCRIPTION	fileScope	/Include tags of file scope/
!_TAG_EXTRA_DESCRIPTION	pseudo	/Include pseudo tags/
!_TAG_EXTRA_DESCRIPTION	subparser	/Include tags generated by subparsers/
!_TAG_FIELD_DESCRIPTION	epoch	/the last modified time of the input file (only for F\/file kind tag)/
!_TAG_FIELD_DESCRIPTION	file	/File-restricted scoping/
!_TAG_FIELD_DESCRIPTION	input	/input file/
!_TAG_FIELD_DESCRIPTION	name	/tag name/
!_TAG_FIELD_DESCRIPTION	pattern	/pattern/
!_TAG_FIELD_DESCRIPTION	typeref	/Type and name of a variable or typedef/
!_TAG_FIELD_DESCRIPTION!C++	name	/aliased names/
!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_KIND_DESCRIPTION!C	d,macro	/macro definitions/
!_TAG_KIND_DESCRIPTION!C	e,enumerator	/enumerators (values inside an enumeration)/
!_TAG_KIND_DESCRIPTION!C	f,function	/function definitions/
!_TAG_KIND_DESCRIPTION!C	g,enum	/enumeration names/
!_TAG_KIND_DESCRIPTION!C	h,header	/included header files/
!_TAG_KIND_DESCRIPTION!C	m,member	/struct, and union members/
!_TAG_KIND_DESCRIPTION!C	s,struct	/structure names/
!_TAG_KIND_DESCRIPTION!C	t,typedef	/typedefs/
!_TAG_KIND_DESCRIPTION!C	u,union	/union names/
!_TAG_KIND_DESCRIPTION!C	v,variable	/variable definitions/
!_TAG_KIND_DESCRIPTION!C++	c,class	/classes/
!_TAG_KIND_DESCRIPTION!C++	d,macro	/macro definitions/
!_TAG_KIND_DESCRIPTION!C++	e,enumerator	/enumerators (values inside an enumeration)/
!_TAG_KIND_DESCRIPTION!C++	f,function	/function definitions/
!_TAG_KIND_DESCRIPTION!C++	g,enum	/enumeration names/
!_TAG_KIND_DESCRIPTION!C++	h,header	/included header files/
!_TAG_KIND_DESCRIPTION!C++	m,member	/class, struct, and union members/
!_TAG_KIND_DESCRIPTION!C++	n,namespace	/namespaces/
!_TAG_KIND_DESCRIPTION!C++	s,struct	/structure names/
!_TAG_KIND_DESCRIPTION!C++	t,typedef	/typedefs/
!_TAG_KIND_DESCRIPTION!C++	u,union	/union names/
!_TAG_KIND_DESCRIPTION!C++	v,variable	/variable definitions/
!_TAG_KIND_DESCRIPTION!CMake	D,option	/options specified with -D/
!_TAG_KIND_DESCRIPTION!CMake	f,function	/functions/
!_TAG_KIND_DESCRIPTION!CMake	m,macro	/macros/
!_TAG_KIND_DESCRIPTION!CMake	p,project	/projects/
!_TAG_KIND_DESCRIPTION!CMake	t,target	/targets/
!_TAG_KIND_DESCRIPTION!CMake	v,variable	/variable definitions/
!_TAG_KIND_DESCRIPTION!Yaml	a,anchor	/anchors/
!_TAG_OUTPUT_EXCMD	mixed	/number, pattern, mixed, or combineV2/
!_TAG_OUTPUT_FILESEP	slash	/slash or backslash/
!_TAG_OUTPUT_MODE	u-ctags	/u-ctags or e-ctags/
!_TAG_OUTPUT_VERSION	0.0	/current.age/
!_TAG_PARSER_VERSION!C	1.1	/current.age/
!_TAG_PARSER_VERSION!C++	1.1	/current.age/
!_TAG_PARSER_VERSION!CMake	0.0	/current.age/
!_TAG_PARSER_VERSION!Yaml	0.0	/current.age/
!_TAG_PATTERN_LENGTH_LIMIT	96	/0 for no limit/
!_TAG_PROC_CWD	D:/42/Art/Programs/C++/New/WrongVirus2/src/	//
!_TAG_PROGRAM_AUTHOR	Universal Ctags Team	//
!_TAG_PROGRAM_NAME	Universal Ctags	/Derived from Exuberant Ctags/
!_TAG_PROGRAM_URL	https://ctags.io/	/official site/
!_TAG_PROGRAM_VERSION	6.1.0	/v6.1.0/
!_TAG_ROLE_DESCRIPTION!C!function	foreigndecl	/declared in foreign languages/
!_TAG_ROLE_DESCRIPTION!C!header	local	/local header/
!_TAG_ROLE_DESCRIPTION!C!header	system	/system header/
!_TAG_ROLE_DESCRIPTION!C!macro	undef	/undefined/
!_TAG_ROLE_DESCRIPTION!C!struct	foreigndecl	/declared in foreign languages/
!_TAG_ROLE_DESCRIPTION!C++!header	local	/local header/
!_TAG_ROLE_DESCRIPTION!C++!header	system	/system header/
!_TAG_ROLE_DESCRIPTION!C++!macro	undef	/undefined/
!_TAG_ROLE_DESCRIPTION!Yaml!anchor	alias	/alias/
APIENTRY	./GL/glew.h	/^#    define APIENTRY /;"	d
APIENTRY	./GL/glew.h	/^#    define APIENTRY$/;"	d
APIENTRY	./GL/glew.h	/^#define APIENTRY$/;"	d
ARCHITECTURE_ID	./glm/build/CMakeFiles/3.31.0-rc1/CompilerIdC/CMakeCCompilerId.c	/^#   define ARCHITECTURE_ID /;"	d	file:
ARCHITECTURE_ID	./glm/build/CMakeFiles/3.31.0-rc1/CompilerIdC/CMakeCCompilerId.c	/^#  define ARCHITECTURE_ID /;"	d	file:
ARCHITECTURE_ID	./glm/build/CMakeFiles/3.31.0-rc1/CompilerIdC/CMakeCCompilerId.c	/^#  define ARCHITECTURE_ID$/;"	d	file:
ARCHITECTURE_ID	./glm/build/CMakeFiles/3.31.0-rc1/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^#   define ARCHITECTURE_ID /;"	d	file:
ARCHITECTURE_ID	./glm/build/CMakeFiles/3.31.0-rc1/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^#  define ARCHITECTURE_ID /;"	d	file:
ARCHITECTURE_ID	./glm/build/CMakeFiles/3.31.0-rc1/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^#  define ARCHITECTURE_ID$/;"	d	file:
CALLBACK	./GL/glew.h	/^#    define CALLBACK /;"	d
CALLBACK	./GL/glew.h	/^#    define CALLBACK$/;"	d
CMAKE_AR	./glm/build/CMakeFiles/3.31.0-rc1/CMakeCCompiler.cmake	/^set(CMAKE_AR "C:\/Program Files (x86)\/Microsoft Visual Studio\/2022\/BuildTools\/VC\/Tools\/MSV/;"	v
CMAKE_AR	./glm/build/CMakeFiles/3.31.0-rc1/CMakeCXXCompiler.cmake	/^set(CMAKE_AR "C:\/Program Files (x86)\/Microsoft Visual Studio\/2022\/BuildTools\/VC\/Tools\/MSV/;"	v
CMAKE_C11_COMPILE_FEATURES	./glm/build/CMakeFiles/3.31.0-rc1/CMakeCCompiler.cmake	/^set(CMAKE_C11_COMPILE_FEATURES "c_std_11;c_static_assert")$/;"	v
CMAKE_C17_COMPILE_FEATURES	./glm/build/CMakeFiles/3.31.0-rc1/CMakeCCompiler.cmake	/^set(CMAKE_C17_COMPILE_FEATURES "c_std_17")$/;"	v
CMAKE_C23_COMPILE_FEATURES	./glm/build/CMakeFiles/3.31.0-rc1/CMakeCCompiler.cmake	/^set(CMAKE_C23_COMPILE_FEATURES "")$/;"	v
CMAKE_C90_COMPILE_FEATURES	./glm/build/CMakeFiles/3.31.0-rc1/CMakeCCompiler.cmake	/^set(CMAKE_C90_COMPILE_FEATURES "c_std_90;c_function_prototypes")$/;"	v
CMAKE_C99_COMPILE_FEATURES	./glm/build/CMakeFiles/3.31.0-rc1/CMakeCCompiler.cmake	/^set(CMAKE_C99_COMPILE_FEATURES "c_std_99;c_restrict;c_variadic_macros")$/;"	v
CMAKE_CL_SHOWINCLUDES_PREFIX	./glm/build/CMakeFiles/3.31.0-rc1/CMakeCCompiler.cmake	/^  set(CMAKE_CL_SHOWINCLUDES_PREFIX "${CMAKE_C_CL_SHOWINCLUDES_PREFIX}")$/;"	v
CMAKE_CL_SHOWINCLUDES_PREFIX	./glm/build/CMakeFiles/3.31.0-rc1/CMakeCXXCompiler.cmake	/^  set(CMAKE_CL_SHOWINCLUDES_PREFIX "${CMAKE_CXX_CL_SHOWINCLUDES_PREFIX}")$/;"	v
CMAKE_COMPILER_IS_GNUCC	./glm/build/CMakeFiles/3.31.0-rc1/CMakeCCompiler.cmake	/^set(CMAKE_COMPILER_IS_GNUCC )$/;"	v
CMAKE_COMPILER_IS_GNUCXX	./glm/build/CMakeFiles/3.31.0-rc1/CMakeCXXCompiler.cmake	/^set(CMAKE_COMPILER_IS_GNUCXX )$/;"	v
CMAKE_CROSSCOMPILING	./glm/build/CMakeFiles/3.31.0-rc1/CMakeSystem.cmake	/^set(CMAKE_CROSSCOMPILING "FALSE")$/;"	v
CMAKE_CROSSCOMPILING	./glm/build/cmake_install.cmake	/^  set(CMAKE_CROSSCOMPILING "FALSE")$/;"	v
CMAKE_CXX11_COMPILE_FEATURES	./glm/build/CMakeFiles/3.31.0-rc1/CMakeCXXCompiler.cmake	/^set(CMAKE_CXX11_COMPILE_FEATURES "cxx_std_11;cxx_alias_templates;cxx_alignas;cxx_alignof;cxx_att/;"	v
CMAKE_CXX14_COMPILE_FEATURES	./glm/build/CMakeFiles/3.31.0-rc1/CMakeCXXCompiler.cmake	/^set(CMAKE_CXX14_COMPILE_FEATURES "cxx_std_14;cxx_aggregate_default_initializers;cxx_attribute_de/;"	v
CMAKE_CXX17_COMPILE_FEATURES	./glm/build/CMakeFiles/3.31.0-rc1/CMakeCXXCompiler.cmake	/^set(CMAKE_CXX17_COMPILE_FEATURES "cxx_std_17")$/;"	v
CMAKE_CXX20_COMPILE_FEATURES	./glm/build/CMakeFiles/3.31.0-rc1/CMakeCXXCompiler.cmake	/^set(CMAKE_CXX20_COMPILE_FEATURES "cxx_std_20")$/;"	v
CMAKE_CXX23_COMPILER_IMPORT_STD_NOT_FOUND_MESSAGE	./glm/build/CMakeFiles/3.31.0-rc1/CMakeCXXCompiler.cmake	/^set(CMAKE_CXX23_COMPILER_IMPORT_STD_NOT_FOUND_MESSAGE "Unsupported generator: Visual Studio 17 2/;"	v
CMAKE_CXX23_COMPILE_FEATURES	./glm/build/CMakeFiles/3.31.0-rc1/CMakeCXXCompiler.cmake	/^set(CMAKE_CXX23_COMPILE_FEATURES "cxx_std_23")$/;"	v
CMAKE_CXX26_COMPILE_FEATURES	./glm/build/CMakeFiles/3.31.0-rc1/CMakeCXXCompiler.cmake	/^set(CMAKE_CXX26_COMPILE_FEATURES "")$/;"	v
CMAKE_CXX98_COMPILE_FEATURES	./glm/build/CMakeFiles/3.31.0-rc1/CMakeCXXCompiler.cmake	/^set(CMAKE_CXX98_COMPILE_FEATURES "cxx_std_98;cxx_template_template_parameters")$/;"	v
CMAKE_CXX_ABI_COMPILED	./glm/build/CMakeFiles/3.31.0-rc1/CMakeCXXCompiler.cmake	/^set(CMAKE_CXX_ABI_COMPILED TRUE)$/;"	v
CMAKE_CXX_BYTE_ORDER	./glm/build/CMakeFiles/3.31.0-rc1/CMakeCXXCompiler.cmake	/^set(CMAKE_CXX_BYTE_ORDER "LITTLE_ENDIAN")$/;"	v
CMAKE_CXX_CL_SHOWINCLUDES_PREFIX	./glm/build/CMakeFiles/3.31.0-rc1/CMakeCXXCompiler.cmake	/^set(CMAKE_CXX_CL_SHOWINCLUDES_PREFIX "")$/;"	v
CMAKE_CXX_COMPILER	./glm/build/CMakeFiles/3.31.0-rc1/CMakeCXXCompiler.cmake	/^set(CMAKE_CXX_COMPILER "C:\/Program Files (x86)\/Microsoft Visual Studio\/2022\/BuildTools\/VC\//;"	v
CMAKE_CXX_COMPILER_ABI	./glm/build/CMakeFiles/3.31.0-rc1/CMakeCXXCompiler.cmake	/^set(CMAKE_CXX_COMPILER_ABI "")$/;"	v
CMAKE_CXX_COMPILER_AR	./glm/build/CMakeFiles/3.31.0-rc1/CMakeCXXCompiler.cmake	/^set(CMAKE_CXX_COMPILER_AR "")$/;"	v
CMAKE_CXX_COMPILER_ARCHITECTURE_ID	./glm/build/CMakeFiles/3.31.0-rc1/CMakeCXXCompiler.cmake	/^set(CMAKE_CXX_COMPILER_ARCHITECTURE_ID x64)$/;"	v
CMAKE_CXX_COMPILER_ARG1	./glm/build/CMakeFiles/3.31.0-rc1/CMakeCXXCompiler.cmake	/^set(CMAKE_CXX_COMPILER_ARG1 "")$/;"	v
CMAKE_CXX_COMPILER_CLANG_RESOURCE_DIR	./glm/build/CMakeFiles/3.31.0-rc1/CMakeCXXCompiler.cmake	/^set(CMAKE_CXX_COMPILER_CLANG_RESOURCE_DIR "")$/;"	v
CMAKE_CXX_COMPILER_ENV_VAR	./glm/build/CMakeFiles/3.31.0-rc1/CMakeCXXCompiler.cmake	/^set(CMAKE_CXX_COMPILER_ENV_VAR "CXX")$/;"	v
CMAKE_CXX_COMPILER_FRONTEND_VARIANT	./glm/build/CMakeFiles/3.31.0-rc1/CMakeCXXCompiler.cmake	/^set(CMAKE_CXX_COMPILER_FRONTEND_VARIANT "MSVC")$/;"	v
CMAKE_CXX_COMPILER_ID	./glm/build/CMakeFiles/3.31.0-rc1/CMakeCXXCompiler.cmake	/^set(CMAKE_CXX_COMPILER_ID "MSVC")$/;"	v
CMAKE_CXX_COMPILER_ID_RUN	./glm/build/CMakeFiles/3.31.0-rc1/CMakeCXXCompiler.cmake	/^set(CMAKE_CXX_COMPILER_ID_RUN 1)$/;"	v
CMAKE_CXX_COMPILER_IMPORT_STD	./glm/build/CMakeFiles/3.31.0-rc1/CMakeCXXCompiler.cmake	/^set(CMAKE_CXX_COMPILER_IMPORT_STD "")$/;"	v
CMAKE_CXX_COMPILER_LINKER	./glm/build/CMakeFiles/3.31.0-rc1/CMakeCXXCompiler.cmake	/^set(CMAKE_CXX_COMPILER_LINKER "C:\/Program Files (x86)\/Microsoft Visual Studio\/2022\/BuildTool/;"	v
CMAKE_CXX_COMPILER_LINKER_FRONTEND_VARIANT	./glm/build/CMakeFiles/3.31.0-rc1/CMakeCXXCompiler.cmake	/^set(CMAKE_CXX_COMPILER_LINKER_FRONTEND_VARIANT MSVC)$/;"	v
CMAKE_CXX_COMPILER_LINKER_ID	./glm/build/CMakeFiles/3.31.0-rc1/CMakeCXXCompiler.cmake	/^set(CMAKE_CXX_COMPILER_LINKER_ID "MSVC")$/;"	v
CMAKE_CXX_COMPILER_LINKER_VERSION	./glm/build/CMakeFiles/3.31.0-rc1/CMakeCXXCompiler.cmake	/^set(CMAKE_CXX_COMPILER_LINKER_VERSION 14.41.34123.0)$/;"	v
CMAKE_CXX_COMPILER_LOADED	./glm/build/CMakeFiles/3.31.0-rc1/CMakeCXXCompiler.cmake	/^set(CMAKE_CXX_COMPILER_LOADED 1)$/;"	v
CMAKE_CXX_COMPILER_RANLIB	./glm/build/CMakeFiles/3.31.0-rc1/CMakeCXXCompiler.cmake	/^set(CMAKE_CXX_COMPILER_RANLIB "")$/;"	v
CMAKE_CXX_COMPILER_VERSION	./glm/build/CMakeFiles/3.31.0-rc1/CMakeCXXCompiler.cmake	/^set(CMAKE_CXX_COMPILER_VERSION "19.41.34123.0")$/;"	v
CMAKE_CXX_COMPILER_VERSION_INTERNAL	./glm/build/CMakeFiles/3.31.0-rc1/CMakeCXXCompiler.cmake	/^set(CMAKE_CXX_COMPILER_VERSION_INTERNAL "")$/;"	v
CMAKE_CXX_COMPILER_WORKS	./glm/build/CMakeFiles/3.31.0-rc1/CMakeCXXCompiler.cmake	/^set(CMAKE_CXX_COMPILER_WORKS TRUE)$/;"	v
CMAKE_CXX_COMPILER_WRAPPER	./glm/build/CMakeFiles/3.31.0-rc1/CMakeCXXCompiler.cmake	/^set(CMAKE_CXX_COMPILER_WRAPPER "")$/;"	v
CMAKE_CXX_COMPILE_FEATURES	./glm/build/CMakeFiles/3.31.0-rc1/CMakeCXXCompiler.cmake	/^set(CMAKE_CXX_COMPILE_FEATURES "cxx_std_98;cxx_template_template_parameters;cxx_std_11;cxx_alias/;"	v
CMAKE_CXX_EXTENSIONS_COMPUTED_DEFAULT	./glm/build/CMakeFiles/3.31.0-rc1/CMakeCXXCompiler.cmake	/^set(CMAKE_CXX_EXTENSIONS_COMPUTED_DEFAULT "OFF")$/;"	v
CMAKE_CXX_IGNORE_EXTENSIONS	./glm/build/CMakeFiles/3.31.0-rc1/CMakeCXXCompiler.cmake	/^set(CMAKE_CXX_IGNORE_EXTENSIONS inl;h;hpp;HPP;H;o;O;obj;OBJ;def;DEF;rc;RC)$/;"	v
CMAKE_CXX_IMPLICIT_INCLUDE_DIRECTORIES	./glm/build/CMakeFiles/3.31.0-rc1/CMakeCXXCompiler.cmake	/^set(CMAKE_CXX_IMPLICIT_INCLUDE_DIRECTORIES "")$/;"	v
CMAKE_CXX_IMPLICIT_LINK_DIRECTORIES	./glm/build/CMakeFiles/3.31.0-rc1/CMakeCXXCompiler.cmake	/^set(CMAKE_CXX_IMPLICIT_LINK_DIRECTORIES "")$/;"	v
CMAKE_CXX_IMPLICIT_LINK_FRAMEWORK_DIRECTORIES	./glm/build/CMakeFiles/3.31.0-rc1/CMakeCXXCompiler.cmake	/^set(CMAKE_CXX_IMPLICIT_LINK_FRAMEWORK_DIRECTORIES "")$/;"	v
CMAKE_CXX_IMPLICIT_LINK_LIBRARIES	./glm/build/CMakeFiles/3.31.0-rc1/CMakeCXXCompiler.cmake	/^set(CMAKE_CXX_IMPLICIT_LINK_LIBRARIES "")$/;"	v
CMAKE_CXX_LIBRARY_ARCHITECTURE	./glm/build/CMakeFiles/3.31.0-rc1/CMakeCXXCompiler.cmake	/^set(CMAKE_CXX_LIBRARY_ARCHITECTURE "")$/;"	v
CMAKE_CXX_LINKER_DEPFILE_SUPPORTED	./glm/build/CMakeFiles/3.31.0-rc1/CMakeCXXCompiler.cmake	/^set(CMAKE_CXX_LINKER_DEPFILE_SUPPORTED )$/;"	v
CMAKE_CXX_LINKER_PREFERENCE	./glm/build/CMakeFiles/3.31.0-rc1/CMakeCXXCompiler.cmake	/^set(CMAKE_CXX_LINKER_PREFERENCE 30)$/;"	v
CMAKE_CXX_LINKER_PREFERENCE_PROPAGATES	./glm/build/CMakeFiles/3.31.0-rc1/CMakeCXXCompiler.cmake	/^set(CMAKE_CXX_LINKER_PREFERENCE_PROPAGATES 1)$/;"	v
CMAKE_CXX_PLATFORM_ID	./glm/build/CMakeFiles/3.31.0-rc1/CMakeCXXCompiler.cmake	/^set(CMAKE_CXX_PLATFORM_ID "Windows")$/;"	v
CMAKE_CXX_SIMULATE_ID	./glm/build/CMakeFiles/3.31.0-rc1/CMakeCXXCompiler.cmake	/^set(CMAKE_CXX_SIMULATE_ID "")$/;"	v
CMAKE_CXX_SIMULATE_VERSION	./glm/build/CMakeFiles/3.31.0-rc1/CMakeCXXCompiler.cmake	/^set(CMAKE_CXX_SIMULATE_VERSION "")$/;"	v
CMAKE_CXX_SIZEOF_DATA_PTR	./glm/build/CMakeFiles/3.31.0-rc1/CMakeCXXCompiler.cmake	/^set(CMAKE_CXX_SIZEOF_DATA_PTR "8")$/;"	v
CMAKE_CXX_SOURCE_FILE_EXTENSIONS	./glm/build/CMakeFiles/3.31.0-rc1/CMakeCXXCompiler.cmake	/^set(CMAKE_CXX_SOURCE_FILE_EXTENSIONS C;M;c++;cc;cpp;cxx;m;mm;mpp;CPP;ixx;cppm;ccm;cxxm;c++m)$/;"	v
CMAKE_CXX_STANDARD_COMPUTED_DEFAULT	./glm/build/CMakeFiles/3.31.0-rc1/CMakeCXXCompiler.cmake	/^set(CMAKE_CXX_STANDARD_COMPUTED_DEFAULT "14")$/;"	v
CMAKE_CXX_STANDARD_LATEST	./glm/build/CMakeFiles/3.31.0-rc1/CMakeCXXCompiler.cmake	/^set(CMAKE_CXX_STANDARD_LATEST "23")$/;"	v
CMAKE_C_ABI_COMPILED	./glm/build/CMakeFiles/3.31.0-rc1/CMakeCCompiler.cmake	/^set(CMAKE_C_ABI_COMPILED TRUE)$/;"	v
CMAKE_C_BYTE_ORDER	./glm/build/CMakeFiles/3.31.0-rc1/CMakeCCompiler.cmake	/^set(CMAKE_C_BYTE_ORDER "LITTLE_ENDIAN")$/;"	v
CMAKE_C_CL_SHOWINCLUDES_PREFIX	./glm/build/CMakeFiles/3.31.0-rc1/CMakeCCompiler.cmake	/^set(CMAKE_C_CL_SHOWINCLUDES_PREFIX "")$/;"	v
CMAKE_C_COMPILER	./glm/build/CMakeFiles/3.31.0-rc1/CMakeCCompiler.cmake	/^set(CMAKE_C_COMPILER "C:\/Program Files (x86)\/Microsoft Visual Studio\/2022\/BuildTools\/VC\/To/;"	v
CMAKE_C_COMPILER_ABI	./glm/build/CMakeFiles/3.31.0-rc1/CMakeCCompiler.cmake	/^set(CMAKE_C_COMPILER_ABI "")$/;"	v
CMAKE_C_COMPILER_AR	./glm/build/CMakeFiles/3.31.0-rc1/CMakeCCompiler.cmake	/^set(CMAKE_C_COMPILER_AR "")$/;"	v
CMAKE_C_COMPILER_ARCHITECTURE_ID	./glm/build/CMakeFiles/3.31.0-rc1/CMakeCCompiler.cmake	/^set(CMAKE_C_COMPILER_ARCHITECTURE_ID x64)$/;"	v
CMAKE_C_COMPILER_ARG1	./glm/build/CMakeFiles/3.31.0-rc1/CMakeCCompiler.cmake	/^set(CMAKE_C_COMPILER_ARG1 "")$/;"	v
CMAKE_C_COMPILER_ENV_VAR	./glm/build/CMakeFiles/3.31.0-rc1/CMakeCCompiler.cmake	/^set(CMAKE_C_COMPILER_ENV_VAR "CC")$/;"	v
CMAKE_C_COMPILER_FRONTEND_VARIANT	./glm/build/CMakeFiles/3.31.0-rc1/CMakeCCompiler.cmake	/^set(CMAKE_C_COMPILER_FRONTEND_VARIANT "MSVC")$/;"	v
CMAKE_C_COMPILER_ID	./glm/build/CMakeFiles/3.31.0-rc1/CMakeCCompiler.cmake	/^set(CMAKE_C_COMPILER_ID "MSVC")$/;"	v
CMAKE_C_COMPILER_ID_RUN	./glm/build/CMakeFiles/3.31.0-rc1/CMakeCCompiler.cmake	/^set(CMAKE_C_COMPILER_ID_RUN 1)$/;"	v
CMAKE_C_COMPILER_LINKER	./glm/build/CMakeFiles/3.31.0-rc1/CMakeCCompiler.cmake	/^set(CMAKE_C_COMPILER_LINKER "C:\/Program Files (x86)\/Microsoft Visual Studio\/2022\/BuildTools\//;"	v
CMAKE_C_COMPILER_LINKER_FRONTEND_VARIANT	./glm/build/CMakeFiles/3.31.0-rc1/CMakeCCompiler.cmake	/^set(CMAKE_C_COMPILER_LINKER_FRONTEND_VARIANT MSVC)$/;"	v
CMAKE_C_COMPILER_LINKER_ID	./glm/build/CMakeFiles/3.31.0-rc1/CMakeCCompiler.cmake	/^set(CMAKE_C_COMPILER_LINKER_ID "MSVC")$/;"	v
CMAKE_C_COMPILER_LINKER_VERSION	./glm/build/CMakeFiles/3.31.0-rc1/CMakeCCompiler.cmake	/^set(CMAKE_C_COMPILER_LINKER_VERSION 14.41.34123.0)$/;"	v
CMAKE_C_COMPILER_LOADED	./glm/build/CMakeFiles/3.31.0-rc1/CMakeCCompiler.cmake	/^set(CMAKE_C_COMPILER_LOADED 1)$/;"	v
CMAKE_C_COMPILER_RANLIB	./glm/build/CMakeFiles/3.31.0-rc1/CMakeCCompiler.cmake	/^set(CMAKE_C_COMPILER_RANLIB "")$/;"	v
CMAKE_C_COMPILER_VERSION	./glm/build/CMakeFiles/3.31.0-rc1/CMakeCCompiler.cmake	/^set(CMAKE_C_COMPILER_VERSION "19.41.34123.0")$/;"	v
CMAKE_C_COMPILER_VERSION_INTERNAL	./glm/build/CMakeFiles/3.31.0-rc1/CMakeCCompiler.cmake	/^set(CMAKE_C_COMPILER_VERSION_INTERNAL "")$/;"	v
CMAKE_C_COMPILER_WORKS	./glm/build/CMakeFiles/3.31.0-rc1/CMakeCCompiler.cmake	/^set(CMAKE_C_COMPILER_WORKS TRUE)$/;"	v
CMAKE_C_COMPILER_WRAPPER	./glm/build/CMakeFiles/3.31.0-rc1/CMakeCCompiler.cmake	/^set(CMAKE_C_COMPILER_WRAPPER "")$/;"	v
CMAKE_C_COMPILE_FEATURES	./glm/build/CMakeFiles/3.31.0-rc1/CMakeCCompiler.cmake	/^set(CMAKE_C_COMPILE_FEATURES "c_std_90;c_function_prototypes;c_std_99;c_restrict;c_variadic_macr/;"	v
CMAKE_C_EXTENSIONS_COMPUTED_DEFAULT	./glm/build/CMakeFiles/3.31.0-rc1/CMakeCCompiler.cmake	/^set(CMAKE_C_EXTENSIONS_COMPUTED_DEFAULT "OFF")$/;"	v
CMAKE_C_IGNORE_EXTENSIONS	./glm/build/CMakeFiles/3.31.0-rc1/CMakeCCompiler.cmake	/^set(CMAKE_C_IGNORE_EXTENSIONS h;H;o;O;obj;OBJ;def;DEF;rc;RC)$/;"	v
CMAKE_C_IMPLICIT_INCLUDE_DIRECTORIES	./glm/build/CMakeFiles/3.31.0-rc1/CMakeCCompiler.cmake	/^set(CMAKE_C_IMPLICIT_INCLUDE_DIRECTORIES "")$/;"	v
CMAKE_C_IMPLICIT_LINK_DIRECTORIES	./glm/build/CMakeFiles/3.31.0-rc1/CMakeCCompiler.cmake	/^set(CMAKE_C_IMPLICIT_LINK_DIRECTORIES "")$/;"	v
CMAKE_C_IMPLICIT_LINK_FRAMEWORK_DIRECTORIES	./glm/build/CMakeFiles/3.31.0-rc1/CMakeCCompiler.cmake	/^set(CMAKE_C_IMPLICIT_LINK_FRAMEWORK_DIRECTORIES "")$/;"	v
CMAKE_C_IMPLICIT_LINK_LIBRARIES	./glm/build/CMakeFiles/3.31.0-rc1/CMakeCCompiler.cmake	/^set(CMAKE_C_IMPLICIT_LINK_LIBRARIES "")$/;"	v
CMAKE_C_LIBRARY_ARCHITECTURE	./glm/build/CMakeFiles/3.31.0-rc1/CMakeCCompiler.cmake	/^set(CMAKE_C_LIBRARY_ARCHITECTURE "")$/;"	v
CMAKE_C_LINKER_DEPFILE_SUPPORTED	./glm/build/CMakeFiles/3.31.0-rc1/CMakeCCompiler.cmake	/^set(CMAKE_C_LINKER_DEPFILE_SUPPORTED )$/;"	v
CMAKE_C_LINKER_PREFERENCE	./glm/build/CMakeFiles/3.31.0-rc1/CMakeCCompiler.cmake	/^set(CMAKE_C_LINKER_PREFERENCE 10)$/;"	v
CMAKE_C_PLATFORM_ID	./glm/build/CMakeFiles/3.31.0-rc1/CMakeCCompiler.cmake	/^set(CMAKE_C_PLATFORM_ID "Windows")$/;"	v
CMAKE_C_SIMULATE_ID	./glm/build/CMakeFiles/3.31.0-rc1/CMakeCCompiler.cmake	/^set(CMAKE_C_SIMULATE_ID "")$/;"	v
CMAKE_C_SIMULATE_VERSION	./glm/build/CMakeFiles/3.31.0-rc1/CMakeCCompiler.cmake	/^set(CMAKE_C_SIMULATE_VERSION "")$/;"	v
CMAKE_C_SIZEOF_DATA_PTR	./glm/build/CMakeFiles/3.31.0-rc1/CMakeCCompiler.cmake	/^set(CMAKE_C_SIZEOF_DATA_PTR "8")$/;"	v
CMAKE_C_SOURCE_FILE_EXTENSIONS	./glm/build/CMakeFiles/3.31.0-rc1/CMakeCCompiler.cmake	/^set(CMAKE_C_SOURCE_FILE_EXTENSIONS c;m)$/;"	v
CMAKE_C_STANDARD_COMPUTED_DEFAULT	./glm/build/CMakeFiles/3.31.0-rc1/CMakeCCompiler.cmake	/^set(CMAKE_C_STANDARD_COMPUTED_DEFAULT "90")$/;"	v
CMAKE_C_STANDARD_LATEST	./glm/build/CMakeFiles/3.31.0-rc1/CMakeCCompiler.cmake	/^set(CMAKE_C_STANDARD_LATEST "17")$/;"	v
CMAKE_HOST_SYSTEM	./glm/build/CMakeFiles/3.31.0-rc1/CMakeSystem.cmake	/^set(CMAKE_HOST_SYSTEM "Windows-10.0.19045")$/;"	v
CMAKE_HOST_SYSTEM_NAME	./glm/build/CMakeFiles/3.31.0-rc1/CMakeSystem.cmake	/^set(CMAKE_HOST_SYSTEM_NAME "Windows")$/;"	v
CMAKE_HOST_SYSTEM_PROCESSOR	./glm/build/CMakeFiles/3.31.0-rc1/CMakeSystem.cmake	/^set(CMAKE_HOST_SYSTEM_PROCESSOR "AMD64")$/;"	v
CMAKE_HOST_SYSTEM_VERSION	./glm/build/CMakeFiles/3.31.0-rc1/CMakeSystem.cmake	/^set(CMAKE_HOST_SYSTEM_VERSION "10.0.19045")$/;"	v
CMAKE_INSTALL_COMPONENT	./glm/build/cmake_install.cmake	/^    set(CMAKE_INSTALL_COMPONENT "${COMPONENT}")$/;"	v
CMAKE_INSTALL_COMPONENT	./glm/build/cmake_install.cmake	/^    set(CMAKE_INSTALL_COMPONENT)$/;"	v
CMAKE_INSTALL_CONFIG_NAME	./glm/build/cmake_install.cmake	/^    set(CMAKE_INSTALL_CONFIG_NAME "Release")$/;"	v
CMAKE_INSTALL_MANIFEST	./glm/build/cmake_install.cmake	/^    set(CMAKE_INSTALL_MANIFEST "install_manifest_${CMAKE_INSTALL_COMPONENT}.txt")$/;"	v
CMAKE_INSTALL_MANIFEST	./glm/build/cmake_install.cmake	/^    set(CMAKE_INSTALL_MANIFEST "install_manifest_${CMAKE_INST_COMP_HASH}.txt")$/;"	v
CMAKE_INSTALL_MANIFEST	./glm/build/cmake_install.cmake	/^  set(CMAKE_INSTALL_MANIFEST "install_manifest.txt")$/;"	v
CMAKE_INSTALL_PREFIX	./glm/build/cmake_install.cmake	/^  set(CMAKE_INSTALL_PREFIX "C:\/Program Files (x86)\/Project")$/;"	v
CMAKE_INTERNAL_PLATFORM_ABI	./glm/build/CMakeFiles/3.31.0-rc1/CMakeCCompiler.cmake	/^  set(CMAKE_INTERNAL_PLATFORM_ABI "${CMAKE_C_COMPILER_ABI}")$/;"	v
CMAKE_INTERNAL_PLATFORM_ABI	./glm/build/CMakeFiles/3.31.0-rc1/CMakeCXXCompiler.cmake	/^  set(CMAKE_INTERNAL_PLATFORM_ABI "${CMAKE_CXX_COMPILER_ABI}")$/;"	v
CMAKE_LIBRARY_ARCHITECTURE	./glm/build/CMakeFiles/3.31.0-rc1/CMakeCCompiler.cmake	/^  set(CMAKE_LIBRARY_ARCHITECTURE "")$/;"	v
CMAKE_LIBRARY_ARCHITECTURE	./glm/build/CMakeFiles/3.31.0-rc1/CMakeCXXCompiler.cmake	/^  set(CMAKE_LIBRARY_ARCHITECTURE "")$/;"	v
CMAKE_LINKER	./glm/build/CMakeFiles/3.31.0-rc1/CMakeCCompiler.cmake	/^set(CMAKE_LINKER "C:\/Program Files (x86)\/Microsoft Visual Studio\/2022\/BuildTools\/VC\/Tools\//;"	v
CMAKE_LINKER	./glm/build/CMakeFiles/3.31.0-rc1/CMakeCXXCompiler.cmake	/^set(CMAKE_LINKER "C:\/Program Files (x86)\/Microsoft Visual Studio\/2022\/BuildTools\/VC\/Tools\//;"	v
CMAKE_LINKER_LINK	./glm/build/CMakeFiles/3.31.0-rc1/CMakeCCompiler.cmake	/^set(CMAKE_LINKER_LINK "C:\/Program Files (x86)\/Microsoft Visual Studio\/2022\/BuildTools\/VC\/T/;"	v
CMAKE_LINKER_LINK	./glm/build/CMakeFiles/3.31.0-rc1/CMakeCXXCompiler.cmake	/^set(CMAKE_LINKER_LINK "C:\/Program Files (x86)\/Microsoft Visual Studio\/2022\/BuildTools\/VC\/T/;"	v
CMAKE_LINKER_LLD	./glm/build/CMakeFiles/3.31.0-rc1/CMakeCCompiler.cmake	/^set(CMAKE_LINKER_LLD "lld-link")$/;"	v
CMAKE_LINKER_LLD	./glm/build/CMakeFiles/3.31.0-rc1/CMakeCXXCompiler.cmake	/^set(CMAKE_LINKER_LLD "lld-link")$/;"	v
CMAKE_MT	./glm/build/CMakeFiles/3.31.0-rc1/CMakeCCompiler.cmake	/^set(CMAKE_MT "CMAKE_MT-NOTFOUND")$/;"	v
CMAKE_MT	./glm/build/CMakeFiles/3.31.0-rc1/CMakeCXXCompiler.cmake	/^set(CMAKE_MT "CMAKE_MT-NOTFOUND")$/;"	v
CMAKE_RANLIB	./glm/build/CMakeFiles/3.31.0-rc1/CMakeCCompiler.cmake	/^set(CMAKE_RANLIB ":")$/;"	v
CMAKE_RANLIB	./glm/build/CMakeFiles/3.31.0-rc1/CMakeCXXCompiler.cmake	/^set(CMAKE_RANLIB ":")$/;"	v
CMAKE_RC_COMPILER	./glm/build/CMakeFiles/3.31.0-rc1/CMakeRCCompiler.cmake	/^set(CMAKE_RC_COMPILER "rc")$/;"	v
CMAKE_RC_COMPILER_ARG1	./glm/build/CMakeFiles/3.31.0-rc1/CMakeRCCompiler.cmake	/^set(CMAKE_RC_COMPILER_ARG1 "")$/;"	v
CMAKE_RC_COMPILER_ENV_VAR	./glm/build/CMakeFiles/3.31.0-rc1/CMakeRCCompiler.cmake	/^set(CMAKE_RC_COMPILER_ENV_VAR "RC")$/;"	v
CMAKE_RC_COMPILER_LOADED	./glm/build/CMakeFiles/3.31.0-rc1/CMakeRCCompiler.cmake	/^set(CMAKE_RC_COMPILER_LOADED 1)$/;"	v
CMAKE_RC_OUTPUT_EXTENSION	./glm/build/CMakeFiles/3.31.0-rc1/CMakeRCCompiler.cmake	/^set(CMAKE_RC_OUTPUT_EXTENSION .res)$/;"	v
CMAKE_RC_SOURCE_FILE_EXTENSIONS	./glm/build/CMakeFiles/3.31.0-rc1/CMakeRCCompiler.cmake	/^set(CMAKE_RC_SOURCE_FILE_EXTENSIONS rc;RC)$/;"	v
CMAKE_SIZEOF_VOID_P	./glm/build/CMakeFiles/3.31.0-rc1/CMakeCCompiler.cmake	/^  set(CMAKE_SIZEOF_VOID_P "${CMAKE_C_SIZEOF_DATA_PTR}")$/;"	v
CMAKE_SIZEOF_VOID_P	./glm/build/CMakeFiles/3.31.0-rc1/CMakeCXXCompiler.cmake	/^  set(CMAKE_SIZEOF_VOID_P "${CMAKE_CXX_SIZEOF_DATA_PTR}")$/;"	v
CMAKE_SYSTEM	./glm/build/CMakeFiles/3.31.0-rc1/CMakeSystem.cmake	/^set(CMAKE_SYSTEM "Windows-10.0.19045")$/;"	v
CMAKE_SYSTEM_LOADED	./glm/build/CMakeFiles/3.31.0-rc1/CMakeSystem.cmake	/^set(CMAKE_SYSTEM_LOADED 1)$/;"	v
CMAKE_SYSTEM_NAME	./glm/build/CMakeFiles/3.31.0-rc1/CMakeSystem.cmake	/^set(CMAKE_SYSTEM_NAME "Windows")$/;"	v
CMAKE_SYSTEM_PROCESSOR	./glm/build/CMakeFiles/3.31.0-rc1/CMakeSystem.cmake	/^set(CMAKE_SYSTEM_PROCESSOR "AMD64")$/;"	v
CMAKE_SYSTEM_VERSION	./glm/build/CMakeFiles/3.31.0-rc1/CMakeSystem.cmake	/^set(CMAKE_SYSTEM_VERSION "10.0.19045")$/;"	v
CMAKE_TAPI	./glm/build/CMakeFiles/3.31.0-rc1/CMakeCCompiler.cmake	/^set(CMAKE_TAPI "")$/;"	v
CMAKE_TAPI	./glm/build/CMakeFiles/3.31.0-rc1/CMakeCXXCompiler.cmake	/^set(CMAKE_TAPI "")$/;"	v
COMPILER_ID	./glm/build/CMakeFiles/3.31.0-rc1/CompilerIdC/CMakeCCompilerId.c	/^# define COMPILER_ID /;"	d	file:
COMPILER_ID	./glm/build/CMakeFiles/3.31.0-rc1/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^# define COMPILER_ID /;"	d	file:
COMPILER_VERSION	./glm/build/CMakeFiles/3.31.0-rc1/CompilerIdC/CMakeCCompilerId.c	/^#   define COMPILER_VERSION /;"	d	file:
COMPILER_VERSION	./glm/build/CMakeFiles/3.31.0-rc1/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^#   define COMPILER_VERSION /;"	d	file:
COMPILER_VERSION_INTERNAL	./glm/build/CMakeFiles/3.31.0-rc1/CompilerIdC/CMakeCCompilerId.c	/^#   define COMPILER_VERSION_INTERNAL /;"	d	file:
COMPILER_VERSION_INTERNAL	./glm/build/CMakeFiles/3.31.0-rc1/CompilerIdC/CMakeCCompilerId.c	/^#  define COMPILER_VERSION_INTERNAL /;"	d	file:
COMPILER_VERSION_INTERNAL	./glm/build/CMakeFiles/3.31.0-rc1/CompilerIdC/CMakeCCompilerId.c	/^# define COMPILER_VERSION_INTERNAL /;"	d	file:
COMPILER_VERSION_INTERNAL	./glm/build/CMakeFiles/3.31.0-rc1/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^#   define COMPILER_VERSION_INTERNAL /;"	d	file:
COMPILER_VERSION_INTERNAL	./glm/build/CMakeFiles/3.31.0-rc1/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^#  define COMPILER_VERSION_INTERNAL /;"	d	file:
COMPILER_VERSION_INTERNAL	./glm/build/CMakeFiles/3.31.0-rc1/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^# define COMPILER_VERSION_INTERNAL /;"	d	file:
COMPILER_VERSION_INTERNAL_STR	./glm/build/CMakeFiles/3.31.0-rc1/CompilerIdC/CMakeCCompilerId.c	/^# define COMPILER_VERSION_INTERNAL_STR /;"	d	file:
COMPILER_VERSION_INTERNAL_STR	./glm/build/CMakeFiles/3.31.0-rc1/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^# define COMPILER_VERSION_INTERNAL_STR /;"	d	file:
COMPILER_VERSION_MAJOR	./glm/build/CMakeFiles/3.31.0-rc1/CompilerIdC/CMakeCCompilerId.c	/^  # define COMPILER_VERSION_MAJOR /;"	d	file:
COMPILER_VERSION_MAJOR	./glm/build/CMakeFiles/3.31.0-rc1/CompilerIdC/CMakeCCompilerId.c	/^#   define COMPILER_VERSION_MAJOR /;"	d	file:
COMPILER_VERSION_MAJOR	./glm/build/CMakeFiles/3.31.0-rc1/CompilerIdC/CMakeCCompilerId.c	/^#  define COMPILER_VERSION_MAJOR /;"	d	file:
COMPILER_VERSION_MAJOR	./glm/build/CMakeFiles/3.31.0-rc1/CompilerIdC/CMakeCCompilerId.c	/^# define COMPILER_VERSION_MAJOR /;"	d	file:
COMPILER_VERSION_MAJOR	./glm/build/CMakeFiles/3.31.0-rc1/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^  # define COMPILER_VERSION_MAJOR /;"	d	file:
COMPILER_VERSION_MAJOR	./glm/build/CMakeFiles/3.31.0-rc1/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^#   define COMPILER_VERSION_MAJOR /;"	d	file:
COMPILER_VERSION_MAJOR	./glm/build/CMakeFiles/3.31.0-rc1/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^#  define COMPILER_VERSION_MAJOR /;"	d	file:
COMPILER_VERSION_MAJOR	./glm/build/CMakeFiles/3.31.0-rc1/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^# define COMPILER_VERSION_MAJOR /;"	d	file:
COMPILER_VERSION_MINOR	./glm/build/CMakeFiles/3.31.0-rc1/CompilerIdC/CMakeCCompilerId.c	/^  # define COMPILER_VERSION_MINOR /;"	d	file:
COMPILER_VERSION_MINOR	./glm/build/CMakeFiles/3.31.0-rc1/CompilerIdC/CMakeCCompilerId.c	/^#   define COMPILER_VERSION_MINOR /;"	d	file:
COMPILER_VERSION_MINOR	./glm/build/CMakeFiles/3.31.0-rc1/CompilerIdC/CMakeCCompilerId.c	/^#  define COMPILER_VERSION_MINOR /;"	d	file:
COMPILER_VERSION_MINOR	./glm/build/CMakeFiles/3.31.0-rc1/CompilerIdC/CMakeCCompilerId.c	/^# define COMPILER_VERSION_MINOR /;"	d	file:
COMPILER_VERSION_MINOR	./glm/build/CMakeFiles/3.31.0-rc1/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^  # define COMPILER_VERSION_MINOR /;"	d	file:
COMPILER_VERSION_MINOR	./glm/build/CMakeFiles/3.31.0-rc1/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^#   define COMPILER_VERSION_MINOR /;"	d	file:
COMPILER_VERSION_MINOR	./glm/build/CMakeFiles/3.31.0-rc1/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^#  define COMPILER_VERSION_MINOR /;"	d	file:
COMPILER_VERSION_MINOR	./glm/build/CMakeFiles/3.31.0-rc1/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^# define COMPILER_VERSION_MINOR /;"	d	file:
COMPILER_VERSION_PATCH	./glm/build/CMakeFiles/3.31.0-rc1/CompilerIdC/CMakeCCompilerId.c	/^  # define COMPILER_VERSION_PATCH /;"	d	file:
COMPILER_VERSION_PATCH	./glm/build/CMakeFiles/3.31.0-rc1/CompilerIdC/CMakeCCompilerId.c	/^#   define COMPILER_VERSION_PATCH /;"	d	file:
COMPILER_VERSION_PATCH	./glm/build/CMakeFiles/3.31.0-rc1/CompilerIdC/CMakeCCompilerId.c	/^#  define COMPILER_VERSION_PATCH /;"	d	file:
COMPILER_VERSION_PATCH	./glm/build/CMakeFiles/3.31.0-rc1/CompilerIdC/CMakeCCompilerId.c	/^# define COMPILER_VERSION_PATCH /;"	d	file:
COMPILER_VERSION_PATCH	./glm/build/CMakeFiles/3.31.0-rc1/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^  # define COMPILER_VERSION_PATCH /;"	d	file:
COMPILER_VERSION_PATCH	./glm/build/CMakeFiles/3.31.0-rc1/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^#   define COMPILER_VERSION_PATCH /;"	d	file:
COMPILER_VERSION_PATCH	./glm/build/CMakeFiles/3.31.0-rc1/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^#  define COMPILER_VERSION_PATCH /;"	d	file:
COMPILER_VERSION_PATCH	./glm/build/CMakeFiles/3.31.0-rc1/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^# define COMPILER_VERSION_PATCH /;"	d	file:
COMPILER_VERSION_TWEAK	./glm/build/CMakeFiles/3.31.0-rc1/CompilerIdC/CMakeCCompilerId.c	/^#  define COMPILER_VERSION_TWEAK /;"	d	file:
COMPILER_VERSION_TWEAK	./glm/build/CMakeFiles/3.31.0-rc1/CompilerIdC/CMakeCCompilerId.c	/^# define COMPILER_VERSION_TWEAK /;"	d	file:
COMPILER_VERSION_TWEAK	./glm/build/CMakeFiles/3.31.0-rc1/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^#  define COMPILER_VERSION_TWEAK /;"	d	file:
COMPILER_VERSION_TWEAK	./glm/build/CMakeFiles/3.31.0-rc1/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^# define COMPILER_VERSION_TWEAK /;"	d	file:
CXX_STD	./glm/build/CMakeFiles/3.31.0-rc1/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^#    define CXX_STD /;"	d	file:
CXX_STD	./glm/build/CMakeFiles/3.31.0-rc1/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^#    define CXX_STD CXX_STD_/;"	d	file:
CXX_STD	./glm/build/CMakeFiles/3.31.0-rc1/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^#  define CXX_STD /;"	d	file:
CXX_STD	./glm/build/CMakeFiles/3.31.0-rc1/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^#  define CXX_STD CXX_STD_/;"	d	file:
CXX_STD_11	./glm/build/CMakeFiles/3.31.0-rc1/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^#define CXX_STD_11 /;"	d	file:
CXX_STD_14	./glm/build/CMakeFiles/3.31.0-rc1/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^#define CXX_STD_14 /;"	d	file:
CXX_STD_17	./glm/build/CMakeFiles/3.31.0-rc1/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^#define CXX_STD_17 /;"	d	file:
CXX_STD_20	./glm/build/CMakeFiles/3.31.0-rc1/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^#define CXX_STD_20 /;"	d	file:
CXX_STD_23	./glm/build/CMakeFiles/3.31.0-rc1/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^#define CXX_STD_23 /;"	d	file:
CXX_STD_98	./glm/build/CMakeFiles/3.31.0-rc1/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^#define CXX_STD_98 /;"	d	file:
C_STD	./glm/build/CMakeFiles/3.31.0-rc1/CompilerIdC/CMakeCCompilerId.c	/^#  define C_STD /;"	d	file:
C_STD_11	./glm/build/CMakeFiles/3.31.0-rc1/CompilerIdC/CMakeCCompilerId.c	/^#define C_STD_11 /;"	d	file:
C_STD_17	./glm/build/CMakeFiles/3.31.0-rc1/CompilerIdC/CMakeCCompilerId.c	/^#define C_STD_17 /;"	d	file:
C_STD_23	./glm/build/CMakeFiles/3.31.0-rc1/CompilerIdC/CMakeCCompilerId.c	/^#define C_STD_23 /;"	d	file:
C_STD_99	./glm/build/CMakeFiles/3.31.0-rc1/CompilerIdC/CMakeCCompilerId.c	/^#define C_STD_99 /;"	d	file:
C_VERSION	./glm/build/CMakeFiles/3.31.0-rc1/CompilerIdC/CMakeCCompilerId.c	/^#  define C_VERSION /;"	d	file:
C_VERSION	./glm/build/CMakeFiles/3.31.0-rc1/CompilerIdC/CMakeCCompilerId.c	/^#  define C_VERSION$/;"	d	file:
C_VERSION	./glm/build/CMakeFiles/3.31.0-rc1/CompilerIdC/CMakeCCompilerId.c	/^# define C_VERSION /;"	d	file:
DEC	./glm/build/CMakeFiles/3.31.0-rc1/CompilerIdC/CMakeCCompilerId.c	/^#define DEC(/;"	d	file:
DEC	./glm/build/CMakeFiles/3.31.0-rc1/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^#define DEC(/;"	d	file:
Data	./glm/gtc/packing.inl	/^		struct Data$/;"	s	union:glm::detail::i10i10i10i2	file:
Data	./glm/gtc/packing.inl	/^		struct Data$/;"	s	union:glm::detail::u10u10u10u2	file:
Data	./glm/gtc/packing.inl	/^		struct Data$/;"	s	union:glm::detail::u3u3u2	file:
Data	./glm/gtc/packing.inl	/^		struct Data$/;"	s	union:glm::detail::u4u4	file:
Data	./glm/gtc/packing.inl	/^		struct Data$/;"	s	union:glm::detail::u4u4u4u4	file:
Data	./glm/gtc/packing.inl	/^		struct Data$/;"	s	union:glm::detail::u5u5u5u1	file:
Data	./glm/gtc/packing.inl	/^		struct Data$/;"	s	union:glm::detail::u5u6u5	file:
Data	./glm/gtc/packing.inl	/^		struct Data$/;"	s	union:glm::detail::u9u9u9e5	file:
DeviceName	./GL/wglew.h	/^  CHAR DeviceName[32]; $/;"	m	struct:_GPU_DEVICE	typeref:typename:CHAR[32]
DeviceString	./GL/wglew.h	/^  CHAR DeviceString[128]; $/;"	m	struct:_GPU_DEVICE	typeref:typename:CHAR[128]
EGLAPI	./GL/eglew.h	/^#define EGLAPI /;"	d
EGLAPIENTRY	./GL/eglew.h	/^#define EGLAPIENTRY$/;"	d
EGLAttrib	./GL/eglew.h	/^typedef intptr_t EGLAttrib;$/;"	t	typeref:typename:intptr_t
EGLAttribKHR	./GL/eglew.h	/^typedef intptr_t EGLAttribKHR;$/;"	t	typeref:typename:intptr_t
EGLBoolean	./GL/eglew.h	/^typedef unsigned int EGLBoolean;$/;"	t	typeref:typename:unsigned int
EGLClientBuffer	./GL/eglew.h	/^typedef void *EGLClientBuffer;$/;"	t	typeref:typename:void *
EGLConfig	./GL/eglew.h	/^typedef void *EGLConfig;$/;"	t	typeref:typename:void *
EGLContext	./GL/eglew.h	/^typedef void *EGLContext;$/;"	t	typeref:typename:void *
EGLDEBUGPROCKHR	./GL/eglew.h	/^typedef void (EGLAPIENTRY  *EGLDEBUGPROCKHR)(EGLenum error,const char *command,EGLint messageTyp/;"	t	typeref:typename:void (EGLAPIENTRY *)(EGLenum error,const char * command,EGLint messageType,EGLLabelKHR threadLabel,EGLLabelKHR objectLabel,const char * message)
EGLDeviceEXT	./GL/eglew.h	/^typedef void *EGLDeviceEXT;$/;"	t	typeref:typename:void *
EGLDisplay	./GL/eglew.h	/^typedef void *EGLDisplay;$/;"	t	typeref:typename:void *
EGLEW_ANDROID_GLES_layers	./GL/eglew.h	/^#define EGLEW_ANDROID_GLES_layers EGLEW_GET_VAR(__EGLEW_ANDROID_GLES_layers)/;"	d
EGLEW_ANDROID_blob_cache	./GL/eglew.h	/^#define EGLEW_ANDROID_blob_cache EGLEW_GET_VAR(__EGLEW_ANDROID_blob_cache)/;"	d
EGLEW_ANDROID_create_native_client_buffer	./GL/eglew.h	/^#define EGLEW_ANDROID_create_native_client_buffer EGLEW_GET_VAR(__EGLEW_ANDROID_create_native_cl/;"	d
EGLEW_ANDROID_framebuffer_target	./GL/eglew.h	/^#define EGLEW_ANDROID_framebuffer_target EGLEW_GET_VAR(__EGLEW_ANDROID_framebuffer_target)/;"	d
EGLEW_ANDROID_front_buffer_auto_refresh	./GL/eglew.h	/^#define EGLEW_ANDROID_front_buffer_auto_refresh EGLEW_GET_VAR(__EGLEW_ANDROID_front_buffer_auto_/;"	d
EGLEW_ANDROID_get_frame_timestamps	./GL/eglew.h	/^#define EGLEW_ANDROID_get_frame_timestamps EGLEW_GET_VAR(__EGLEW_ANDROID_get_frame_timestamps)/;"	d
EGLEW_ANDROID_get_native_client_buffer	./GL/eglew.h	/^#define EGLEW_ANDROID_get_native_client_buffer EGLEW_GET_VAR(__EGLEW_ANDROID_get_native_client_b/;"	d
EGLEW_ANDROID_image_native_buffer	./GL/eglew.h	/^#define EGLEW_ANDROID_image_native_buffer EGLEW_GET_VAR(__EGLEW_ANDROID_image_native_buffer)/;"	d
EGLEW_ANDROID_native_fence_sync	./GL/eglew.h	/^#define EGLEW_ANDROID_native_fence_sync EGLEW_GET_VAR(__EGLEW_ANDROID_native_fence_sync)/;"	d
EGLEW_ANDROID_presentation_time	./GL/eglew.h	/^#define EGLEW_ANDROID_presentation_time EGLEW_GET_VAR(__EGLEW_ANDROID_presentation_time)/;"	d
EGLEW_ANDROID_recordable	./GL/eglew.h	/^#define EGLEW_ANDROID_recordable EGLEW_GET_VAR(__EGLEW_ANDROID_recordable)/;"	d
EGLEW_ANGLE_d3d_share_handle_client_buffer	./GL/eglew.h	/^#define EGLEW_ANGLE_d3d_share_handle_client_buffer EGLEW_GET_VAR(__EGLEW_ANGLE_d3d_share_handle_/;"	d
EGLEW_ANGLE_device_d3d	./GL/eglew.h	/^#define EGLEW_ANGLE_device_d3d EGLEW_GET_VAR(__EGLEW_ANGLE_device_d3d)/;"	d
EGLEW_ANGLE_query_surface_pointer	./GL/eglew.h	/^#define EGLEW_ANGLE_query_surface_pointer EGLEW_GET_VAR(__EGLEW_ANGLE_query_surface_pointer)/;"	d
EGLEW_ANGLE_surface_d3d_texture_2d_share_handle	./GL/eglew.h	/^#define EGLEW_ANGLE_surface_d3d_texture_2d_share_handle EGLEW_GET_VAR(__EGLEW_ANGLE_surface_d3d_/;"	d
EGLEW_ANGLE_window_fixed_size	./GL/eglew.h	/^#define EGLEW_ANGLE_window_fixed_size EGLEW_GET_VAR(__EGLEW_ANGLE_window_fixed_size)/;"	d
EGLEW_ARM_image_format	./GL/eglew.h	/^#define EGLEW_ARM_image_format EGLEW_GET_VAR(__EGLEW_ARM_image_format)/;"	d
EGLEW_ARM_implicit_external_sync	./GL/eglew.h	/^#define EGLEW_ARM_implicit_external_sync EGLEW_GET_VAR(__EGLEW_ARM_implicit_external_sync)/;"	d
EGLEW_ARM_pixmap_multisample_discard	./GL/eglew.h	/^#define EGLEW_ARM_pixmap_multisample_discard EGLEW_GET_VAR(__EGLEW_ARM_pixmap_multisample_discar/;"	d
EGLEW_EXT_bind_to_front	./GL/eglew.h	/^#define EGLEW_EXT_bind_to_front EGLEW_GET_VAR(__EGLEW_EXT_bind_to_front)/;"	d
EGLEW_EXT_buffer_age	./GL/eglew.h	/^#define EGLEW_EXT_buffer_age EGLEW_GET_VAR(__EGLEW_EXT_buffer_age)/;"	d
EGLEW_EXT_client_extensions	./GL/eglew.h	/^#define EGLEW_EXT_client_extensions EGLEW_GET_VAR(__EGLEW_EXT_client_extensions)/;"	d
EGLEW_EXT_client_sync	./GL/eglew.h	/^#define EGLEW_EXT_client_sync EGLEW_GET_VAR(__EGLEW_EXT_client_sync)/;"	d
EGLEW_EXT_compositor	./GL/eglew.h	/^#define EGLEW_EXT_compositor EGLEW_GET_VAR(__EGLEW_EXT_compositor)/;"	d
EGLEW_EXT_create_context_robustness	./GL/eglew.h	/^#define EGLEW_EXT_create_context_robustness EGLEW_GET_VAR(__EGLEW_EXT_create_context_robustness)/;"	d
EGLEW_EXT_device_base	./GL/eglew.h	/^#define EGLEW_EXT_device_base EGLEW_GET_VAR(__EGLEW_EXT_device_base)/;"	d
EGLEW_EXT_device_drm	./GL/eglew.h	/^#define EGLEW_EXT_device_drm EGLEW_GET_VAR(__EGLEW_EXT_device_drm)/;"	d
EGLEW_EXT_device_enumeration	./GL/eglew.h	/^#define EGLEW_EXT_device_enumeration EGLEW_GET_VAR(__EGLEW_EXT_device_enumeration)/;"	d
EGLEW_EXT_device_openwf	./GL/eglew.h	/^#define EGLEW_EXT_device_openwf EGLEW_GET_VAR(__EGLEW_EXT_device_openwf)/;"	d
EGLEW_EXT_device_query	./GL/eglew.h	/^#define EGLEW_EXT_device_query EGLEW_GET_VAR(__EGLEW_EXT_device_query)/;"	d
EGLEW_EXT_gl_colorspace_bt2020_linear	./GL/eglew.h	/^#define EGLEW_EXT_gl_colorspace_bt2020_linear EGLEW_GET_VAR(__EGLEW_EXT_gl_colorspace_bt2020_lin/;"	d
EGLEW_EXT_gl_colorspace_bt2020_pq	./GL/eglew.h	/^#define EGLEW_EXT_gl_colorspace_bt2020_pq EGLEW_GET_VAR(__EGLEW_EXT_gl_colorspace_bt2020_pq)/;"	d
EGLEW_EXT_gl_colorspace_display_p3	./GL/eglew.h	/^#define EGLEW_EXT_gl_colorspace_display_p3 EGLEW_GET_VAR(__EGLEW_EXT_gl_colorspace_display_p3)/;"	d
EGLEW_EXT_gl_colorspace_display_p3_linear	./GL/eglew.h	/^#define EGLEW_EXT_gl_colorspace_display_p3_linear EGLEW_GET_VAR(__EGLEW_EXT_gl_colorspace_displa/;"	d
EGLEW_EXT_gl_colorspace_display_p3_passthrough	./GL/eglew.h	/^#define EGLEW_EXT_gl_colorspace_display_p3_passthrough EGLEW_GET_VAR(__EGLEW_EXT_gl_colorspace_d/;"	d
EGLEW_EXT_gl_colorspace_scrgb	./GL/eglew.h	/^#define EGLEW_EXT_gl_colorspace_scrgb EGLEW_GET_VAR(__EGLEW_EXT_gl_colorspace_scrgb)/;"	d
EGLEW_EXT_gl_colorspace_scrgb_linear	./GL/eglew.h	/^#define EGLEW_EXT_gl_colorspace_scrgb_linear EGLEW_GET_VAR(__EGLEW_EXT_gl_colorspace_scrgb_linea/;"	d
EGLEW_EXT_image_dma_buf_import	./GL/eglew.h	/^#define EGLEW_EXT_image_dma_buf_import EGLEW_GET_VAR(__EGLEW_EXT_image_dma_buf_import)/;"	d
EGLEW_EXT_image_dma_buf_import_modifiers	./GL/eglew.h	/^#define EGLEW_EXT_image_dma_buf_import_modifiers EGLEW_GET_VAR(__EGLEW_EXT_image_dma_buf_import_/;"	d
EGLEW_EXT_image_gl_colorspace	./GL/eglew.h	/^#define EGLEW_EXT_image_gl_colorspace EGLEW_GET_VAR(__EGLEW_EXT_image_gl_colorspace)/;"	d
EGLEW_EXT_image_implicit_sync_control	./GL/eglew.h	/^#define EGLEW_EXT_image_implicit_sync_control EGLEW_GET_VAR(__EGLEW_EXT_image_implicit_sync_cont/;"	d
EGLEW_EXT_multiview_window	./GL/eglew.h	/^#define EGLEW_EXT_multiview_window EGLEW_GET_VAR(__EGLEW_EXT_multiview_window)/;"	d
EGLEW_EXT_output_base	./GL/eglew.h	/^#define EGLEW_EXT_output_base EGLEW_GET_VAR(__EGLEW_EXT_output_base)/;"	d
EGLEW_EXT_output_drm	./GL/eglew.h	/^#define EGLEW_EXT_output_drm EGLEW_GET_VAR(__EGLEW_EXT_output_drm)/;"	d
EGLEW_EXT_output_openwf	./GL/eglew.h	/^#define EGLEW_EXT_output_openwf EGLEW_GET_VAR(__EGLEW_EXT_output_openwf)/;"	d
EGLEW_EXT_pixel_format_float	./GL/eglew.h	/^#define EGLEW_EXT_pixel_format_float EGLEW_GET_VAR(__EGLEW_EXT_pixel_format_float)/;"	d
EGLEW_EXT_platform_base	./GL/eglew.h	/^#define EGLEW_EXT_platform_base EGLEW_GET_VAR(__EGLEW_EXT_platform_base)/;"	d
EGLEW_EXT_platform_device	./GL/eglew.h	/^#define EGLEW_EXT_platform_device EGLEW_GET_VAR(__EGLEW_EXT_platform_device)/;"	d
EGLEW_EXT_platform_wayland	./GL/eglew.h	/^#define EGLEW_EXT_platform_wayland EGLEW_GET_VAR(__EGLEW_EXT_platform_wayland)/;"	d
EGLEW_EXT_platform_x11	./GL/eglew.h	/^#define EGLEW_EXT_platform_x11 EGLEW_GET_VAR(__EGLEW_EXT_platform_x11)/;"	d
EGLEW_EXT_protected_content	./GL/eglew.h	/^#define EGLEW_EXT_protected_content EGLEW_GET_VAR(__EGLEW_EXT_protected_content)/;"	d
EGLEW_EXT_protected_surface	./GL/eglew.h	/^#define EGLEW_EXT_protected_surface EGLEW_GET_VAR(__EGLEW_EXT_protected_surface)/;"	d
EGLEW_EXT_stream_consumer_egloutput	./GL/eglew.h	/^#define EGLEW_EXT_stream_consumer_egloutput EGLEW_GET_VAR(__EGLEW_EXT_stream_consumer_egloutput)/;"	d
EGLEW_EXT_surface_CTA861_3_metadata	./GL/eglew.h	/^#define EGLEW_EXT_surface_CTA861_3_metadata EGLEW_GET_VAR(__EGLEW_EXT_surface_CTA861_3_metadata)/;"	d
EGLEW_EXT_surface_SMPTE2086_metadata	./GL/eglew.h	/^#define EGLEW_EXT_surface_SMPTE2086_metadata EGLEW_GET_VAR(__EGLEW_EXT_surface_SMPTE2086_metadat/;"	d
EGLEW_EXT_swap_buffers_with_damage	./GL/eglew.h	/^#define EGLEW_EXT_swap_buffers_with_damage EGLEW_GET_VAR(__EGLEW_EXT_swap_buffers_with_damage)/;"	d
EGLEW_EXT_sync_reuse	./GL/eglew.h	/^#define EGLEW_EXT_sync_reuse EGLEW_GET_VAR(__EGLEW_EXT_sync_reuse)/;"	d
EGLEW_EXT_yuv_surface	./GL/eglew.h	/^#define EGLEW_EXT_yuv_surface EGLEW_GET_VAR(__EGLEW_EXT_yuv_surface)/;"	d
EGLEW_FUN_EXPORT	./GL/eglew.h	/^#define EGLEW_FUN_EXPORT /;"	d
EGLEW_GET_FUN	./GL/eglew.h	/^#define EGLEW_GET_FUN(/;"	d
EGLEW_GET_VAR	./GL/eglew.h	/^#define EGLEW_GET_VAR(/;"	d
EGLEW_HI_clientpixmap	./GL/eglew.h	/^#define EGLEW_HI_clientpixmap EGLEW_GET_VAR(__EGLEW_HI_clientpixmap)/;"	d
EGLEW_HI_colorformats	./GL/eglew.h	/^#define EGLEW_HI_colorformats EGLEW_GET_VAR(__EGLEW_HI_colorformats)/;"	d
EGLEW_IMG_context_priority	./GL/eglew.h	/^#define EGLEW_IMG_context_priority EGLEW_GET_VAR(__EGLEW_IMG_context_priority)/;"	d
EGLEW_IMG_image_plane_attribs	./GL/eglew.h	/^#define EGLEW_IMG_image_plane_attribs EGLEW_GET_VAR(__EGLEW_IMG_image_plane_attribs)/;"	d
EGLEW_KHR_cl_event	./GL/eglew.h	/^#define EGLEW_KHR_cl_event EGLEW_GET_VAR(__EGLEW_KHR_cl_event)/;"	d
EGLEW_KHR_cl_event2	./GL/eglew.h	/^#define EGLEW_KHR_cl_event2 EGLEW_GET_VAR(__EGLEW_KHR_cl_event2)/;"	d
EGLEW_KHR_client_get_all_proc_addresses	./GL/eglew.h	/^#define EGLEW_KHR_client_get_all_proc_addresses EGLEW_GET_VAR(__EGLEW_KHR_client_get_all_proc_ad/;"	d
EGLEW_KHR_config_attribs	./GL/eglew.h	/^#define EGLEW_KHR_config_attribs EGLEW_GET_VAR(__EGLEW_KHR_config_attribs)/;"	d
EGLEW_KHR_context_flush_control	./GL/eglew.h	/^#define EGLEW_KHR_context_flush_control EGLEW_GET_VAR(__EGLEW_KHR_context_flush_control)/;"	d
EGLEW_KHR_create_context	./GL/eglew.h	/^#define EGLEW_KHR_create_context EGLEW_GET_VAR(__EGLEW_KHR_create_context)/;"	d
EGLEW_KHR_create_context_no_error	./GL/eglew.h	/^#define EGLEW_KHR_create_context_no_error EGLEW_GET_VAR(__EGLEW_KHR_create_context_no_error)/;"	d
EGLEW_KHR_debug	./GL/eglew.h	/^#define EGLEW_KHR_debug EGLEW_GET_VAR(__EGLEW_KHR_debug)/;"	d
EGLEW_KHR_display_reference	./GL/eglew.h	/^#define EGLEW_KHR_display_reference EGLEW_GET_VAR(__EGLEW_KHR_display_reference)/;"	d
EGLEW_KHR_fence_sync	./GL/eglew.h	/^#define EGLEW_KHR_fence_sync EGLEW_GET_VAR(__EGLEW_KHR_fence_sync)/;"	d
EGLEW_KHR_get_all_proc_addresses	./GL/eglew.h	/^#define EGLEW_KHR_get_all_proc_addresses EGLEW_GET_VAR(__EGLEW_KHR_get_all_proc_addresses)/;"	d
EGLEW_KHR_gl_colorspace	./GL/eglew.h	/^#define EGLEW_KHR_gl_colorspace EGLEW_GET_VAR(__EGLEW_KHR_gl_colorspace)/;"	d
EGLEW_KHR_gl_renderbuffer_image	./GL/eglew.h	/^#define EGLEW_KHR_gl_renderbuffer_image EGLEW_GET_VAR(__EGLEW_KHR_gl_renderbuffer_image)/;"	d
EGLEW_KHR_gl_texture_2D_image	./GL/eglew.h	/^#define EGLEW_KHR_gl_texture_2D_image EGLEW_GET_VAR(__EGLEW_KHR_gl_texture_2D_image)/;"	d
EGLEW_KHR_gl_texture_3D_image	./GL/eglew.h	/^#define EGLEW_KHR_gl_texture_3D_image EGLEW_GET_VAR(__EGLEW_KHR_gl_texture_3D_image)/;"	d
EGLEW_KHR_gl_texture_cubemap_image	./GL/eglew.h	/^#define EGLEW_KHR_gl_texture_cubemap_image EGLEW_GET_VAR(__EGLEW_KHR_gl_texture_cubemap_image)/;"	d
EGLEW_KHR_image	./GL/eglew.h	/^#define EGLEW_KHR_image EGLEW_GET_VAR(__EGLEW_KHR_image)/;"	d
EGLEW_KHR_image_base	./GL/eglew.h	/^#define EGLEW_KHR_image_base EGLEW_GET_VAR(__EGLEW_KHR_image_base)/;"	d
EGLEW_KHR_image_pixmap	./GL/eglew.h	/^#define EGLEW_KHR_image_pixmap EGLEW_GET_VAR(__EGLEW_KHR_image_pixmap)/;"	d
EGLEW_KHR_lock_surface	./GL/eglew.h	/^#define EGLEW_KHR_lock_surface EGLEW_GET_VAR(__EGLEW_KHR_lock_surface)/;"	d
EGLEW_KHR_lock_surface2	./GL/eglew.h	/^#define EGLEW_KHR_lock_surface2 EGLEW_GET_VAR(__EGLEW_KHR_lock_surface2)/;"	d
EGLEW_KHR_lock_surface3	./GL/eglew.h	/^#define EGLEW_KHR_lock_surface3 EGLEW_GET_VAR(__EGLEW_KHR_lock_surface3)/;"	d
EGLEW_KHR_mutable_render_buffer	./GL/eglew.h	/^#define EGLEW_KHR_mutable_render_buffer EGLEW_GET_VAR(__EGLEW_KHR_mutable_render_buffer)/;"	d
EGLEW_KHR_no_config_context	./GL/eglew.h	/^#define EGLEW_KHR_no_config_context EGLEW_GET_VAR(__EGLEW_KHR_no_config_context)/;"	d
EGLEW_KHR_partial_update	./GL/eglew.h	/^#define EGLEW_KHR_partial_update EGLEW_GET_VAR(__EGLEW_KHR_partial_update)/;"	d
EGLEW_KHR_platform_android	./GL/eglew.h	/^#define EGLEW_KHR_platform_android EGLEW_GET_VAR(__EGLEW_KHR_platform_android)/;"	d
EGLEW_KHR_platform_gbm	./GL/eglew.h	/^#define EGLEW_KHR_platform_gbm EGLEW_GET_VAR(__EGLEW_KHR_platform_gbm)/;"	d
EGLEW_KHR_platform_wayland	./GL/eglew.h	/^#define EGLEW_KHR_platform_wayland EGLEW_GET_VAR(__EGLEW_KHR_platform_wayland)/;"	d
EGLEW_KHR_platform_x11	./GL/eglew.h	/^#define EGLEW_KHR_platform_x11 EGLEW_GET_VAR(__EGLEW_KHR_platform_x11)/;"	d
EGLEW_KHR_reusable_sync	./GL/eglew.h	/^#define EGLEW_KHR_reusable_sync EGLEW_GET_VAR(__EGLEW_KHR_reusable_sync)/;"	d
EGLEW_KHR_stream	./GL/eglew.h	/^#define EGLEW_KHR_stream EGLEW_GET_VAR(__EGLEW_KHR_stream)/;"	d
EGLEW_KHR_stream_attrib	./GL/eglew.h	/^#define EGLEW_KHR_stream_attrib EGLEW_GET_VAR(__EGLEW_KHR_stream_attrib)/;"	d
EGLEW_KHR_stream_consumer_gltexture	./GL/eglew.h	/^#define EGLEW_KHR_stream_consumer_gltexture EGLEW_GET_VAR(__EGLEW_KHR_stream_consumer_gltexture)/;"	d
EGLEW_KHR_stream_cross_process_fd	./GL/eglew.h	/^#define EGLEW_KHR_stream_cross_process_fd EGLEW_GET_VAR(__EGLEW_KHR_stream_cross_process_fd)/;"	d
EGLEW_KHR_stream_fifo	./GL/eglew.h	/^#define EGLEW_KHR_stream_fifo EGLEW_GET_VAR(__EGLEW_KHR_stream_fifo)/;"	d
EGLEW_KHR_stream_producer_aldatalocator	./GL/eglew.h	/^#define EGLEW_KHR_stream_producer_aldatalocator EGLEW_GET_VAR(__EGLEW_KHR_stream_producer_aldata/;"	d
EGLEW_KHR_stream_producer_eglsurface	./GL/eglew.h	/^#define EGLEW_KHR_stream_producer_eglsurface EGLEW_GET_VAR(__EGLEW_KHR_stream_producer_eglsurfac/;"	d
EGLEW_KHR_surfaceless_context	./GL/eglew.h	/^#define EGLEW_KHR_surfaceless_context EGLEW_GET_VAR(__EGLEW_KHR_surfaceless_context)/;"	d
EGLEW_KHR_swap_buffers_with_damage	./GL/eglew.h	/^#define EGLEW_KHR_swap_buffers_with_damage EGLEW_GET_VAR(__EGLEW_KHR_swap_buffers_with_damage)/;"	d
EGLEW_KHR_vg_parent_image	./GL/eglew.h	/^#define EGLEW_KHR_vg_parent_image EGLEW_GET_VAR(__EGLEW_KHR_vg_parent_image)/;"	d
EGLEW_KHR_wait_sync	./GL/eglew.h	/^#define EGLEW_KHR_wait_sync EGLEW_GET_VAR(__EGLEW_KHR_wait_sync)/;"	d
EGLEW_MESA_drm_image	./GL/eglew.h	/^#define EGLEW_MESA_drm_image EGLEW_GET_VAR(__EGLEW_MESA_drm_image)/;"	d
EGLEW_MESA_image_dma_buf_export	./GL/eglew.h	/^#define EGLEW_MESA_image_dma_buf_export EGLEW_GET_VAR(__EGLEW_MESA_image_dma_buf_export)/;"	d
EGLEW_MESA_platform_gbm	./GL/eglew.h	/^#define EGLEW_MESA_platform_gbm EGLEW_GET_VAR(__EGLEW_MESA_platform_gbm)/;"	d
EGLEW_MESA_platform_surfaceless	./GL/eglew.h	/^#define EGLEW_MESA_platform_surfaceless EGLEW_GET_VAR(__EGLEW_MESA_platform_surfaceless)/;"	d
EGLEW_MESA_query_driver	./GL/eglew.h	/^#define EGLEW_MESA_query_driver EGLEW_GET_VAR(__EGLEW_MESA_query_driver)/;"	d
EGLEW_NOK_swap_region	./GL/eglew.h	/^#define EGLEW_NOK_swap_region EGLEW_GET_VAR(__EGLEW_NOK_swap_region)/;"	d
EGLEW_NOK_swap_region2	./GL/eglew.h	/^#define EGLEW_NOK_swap_region2 EGLEW_GET_VAR(__EGLEW_NOK_swap_region2)/;"	d
EGLEW_NOK_texture_from_pixmap	./GL/eglew.h	/^#define EGLEW_NOK_texture_from_pixmap EGLEW_GET_VAR(__EGLEW_NOK_texture_from_pixmap)/;"	d
EGLEW_NV_3dvision_surface	./GL/eglew.h	/^#define EGLEW_NV_3dvision_surface EGLEW_GET_VAR(__EGLEW_NV_3dvision_surface)/;"	d
EGLEW_NV_context_priority_realtime	./GL/eglew.h	/^#define EGLEW_NV_context_priority_realtime EGLEW_GET_VAR(__EGLEW_NV_context_priority_realtime)/;"	d
EGLEW_NV_coverage_sample	./GL/eglew.h	/^#define EGLEW_NV_coverage_sample EGLEW_GET_VAR(__EGLEW_NV_coverage_sample)/;"	d
EGLEW_NV_coverage_sample_resolve	./GL/eglew.h	/^#define EGLEW_NV_coverage_sample_resolve EGLEW_GET_VAR(__EGLEW_NV_coverage_sample_resolve)/;"	d
EGLEW_NV_cuda_event	./GL/eglew.h	/^#define EGLEW_NV_cuda_event EGLEW_GET_VAR(__EGLEW_NV_cuda_event)/;"	d
EGLEW_NV_depth_nonlinear	./GL/eglew.h	/^#define EGLEW_NV_depth_nonlinear EGLEW_GET_VAR(__EGLEW_NV_depth_nonlinear)/;"	d
EGLEW_NV_device_cuda	./GL/eglew.h	/^#define EGLEW_NV_device_cuda EGLEW_GET_VAR(__EGLEW_NV_device_cuda)/;"	d
EGLEW_NV_native_query	./GL/eglew.h	/^#define EGLEW_NV_native_query EGLEW_GET_VAR(__EGLEW_NV_native_query)/;"	d
EGLEW_NV_post_convert_rounding	./GL/eglew.h	/^#define EGLEW_NV_post_convert_rounding EGLEW_GET_VAR(__EGLEW_NV_post_convert_rounding)/;"	d
EGLEW_NV_post_sub_buffer	./GL/eglew.h	/^#define EGLEW_NV_post_sub_buffer EGLEW_GET_VAR(__EGLEW_NV_post_sub_buffer)/;"	d
EGLEW_NV_quadruple_buffer	./GL/eglew.h	/^#define EGLEW_NV_quadruple_buffer EGLEW_GET_VAR(__EGLEW_NV_quadruple_buffer)/;"	d
EGLEW_NV_robustness_video_memory_purge	./GL/eglew.h	/^#define EGLEW_NV_robustness_video_memory_purge EGLEW_GET_VAR(__EGLEW_NV_robustness_video_memory_/;"	d
EGLEW_NV_stream_consumer_gltexture_yuv	./GL/eglew.h	/^#define EGLEW_NV_stream_consumer_gltexture_yuv EGLEW_GET_VAR(__EGLEW_NV_stream_consumer_gltextur/;"	d
EGLEW_NV_stream_cross_display	./GL/eglew.h	/^#define EGLEW_NV_stream_cross_display EGLEW_GET_VAR(__EGLEW_NV_stream_cross_display)/;"	d
EGLEW_NV_stream_cross_object	./GL/eglew.h	/^#define EGLEW_NV_stream_cross_object EGLEW_GET_VAR(__EGLEW_NV_stream_cross_object)/;"	d
EGLEW_NV_stream_cross_partition	./GL/eglew.h	/^#define EGLEW_NV_stream_cross_partition EGLEW_GET_VAR(__EGLEW_NV_stream_cross_partition)/;"	d
EGLEW_NV_stream_cross_process	./GL/eglew.h	/^#define EGLEW_NV_stream_cross_process EGLEW_GET_VAR(__EGLEW_NV_stream_cross_process)/;"	d
EGLEW_NV_stream_cross_system	./GL/eglew.h	/^#define EGLEW_NV_stream_cross_system EGLEW_GET_VAR(__EGLEW_NV_stream_cross_system)/;"	d
EGLEW_NV_stream_dma	./GL/eglew.h	/^#define EGLEW_NV_stream_dma EGLEW_GET_VAR(__EGLEW_NV_stream_dma)/;"	d
EGLEW_NV_stream_fifo_next	./GL/eglew.h	/^#define EGLEW_NV_stream_fifo_next EGLEW_GET_VAR(__EGLEW_NV_stream_fifo_next)/;"	d
EGLEW_NV_stream_fifo_synchronous	./GL/eglew.h	/^#define EGLEW_NV_stream_fifo_synchronous EGLEW_GET_VAR(__EGLEW_NV_stream_fifo_synchronous)/;"	d
EGLEW_NV_stream_flush	./GL/eglew.h	/^#define EGLEW_NV_stream_flush EGLEW_GET_VAR(__EGLEW_NV_stream_flush)/;"	d
EGLEW_NV_stream_frame_limits	./GL/eglew.h	/^#define EGLEW_NV_stream_frame_limits EGLEW_GET_VAR(__EGLEW_NV_stream_frame_limits)/;"	d
EGLEW_NV_stream_metadata	./GL/eglew.h	/^#define EGLEW_NV_stream_metadata EGLEW_GET_VAR(__EGLEW_NV_stream_metadata)/;"	d
EGLEW_NV_stream_origin	./GL/eglew.h	/^#define EGLEW_NV_stream_origin EGLEW_GET_VAR(__EGLEW_NV_stream_origin)/;"	d
EGLEW_NV_stream_remote	./GL/eglew.h	/^#define EGLEW_NV_stream_remote EGLEW_GET_VAR(__EGLEW_NV_stream_remote)/;"	d
EGLEW_NV_stream_reset	./GL/eglew.h	/^#define EGLEW_NV_stream_reset EGLEW_GET_VAR(__EGLEW_NV_stream_reset)/;"	d
EGLEW_NV_stream_socket	./GL/eglew.h	/^#define EGLEW_NV_stream_socket EGLEW_GET_VAR(__EGLEW_NV_stream_socket)/;"	d
EGLEW_NV_stream_socket_inet	./GL/eglew.h	/^#define EGLEW_NV_stream_socket_inet EGLEW_GET_VAR(__EGLEW_NV_stream_socket_inet)/;"	d
EGLEW_NV_stream_socket_unix	./GL/eglew.h	/^#define EGLEW_NV_stream_socket_unix EGLEW_GET_VAR(__EGLEW_NV_stream_socket_unix)/;"	d
EGLEW_NV_stream_sync	./GL/eglew.h	/^#define EGLEW_NV_stream_sync EGLEW_GET_VAR(__EGLEW_NV_stream_sync)/;"	d
EGLEW_NV_sync	./GL/eglew.h	/^#define EGLEW_NV_sync EGLEW_GET_VAR(__EGLEW_NV_sync)/;"	d
EGLEW_NV_system_time	./GL/eglew.h	/^#define EGLEW_NV_system_time EGLEW_GET_VAR(__EGLEW_NV_system_time)/;"	d
EGLEW_NV_triple_buffer	./GL/eglew.h	/^#define EGLEW_NV_triple_buffer EGLEW_GET_VAR(__EGLEW_NV_triple_buffer)/;"	d
EGLEW_TIZEN_image_native_buffer	./GL/eglew.h	/^#define EGLEW_TIZEN_image_native_buffer EGLEW_GET_VAR(__EGLEW_TIZEN_image_native_buffer)/;"	d
EGLEW_TIZEN_image_native_surface	./GL/eglew.h	/^#define EGLEW_TIZEN_image_native_surface EGLEW_GET_VAR(__EGLEW_TIZEN_image_native_surface)/;"	d
EGLEW_VAR_EXPORT	./GL/eglew.h	/^#define EGLEW_VAR_EXPORT /;"	d
EGLEW_VERSION_1_0	./GL/eglew.h	/^#define EGLEW_VERSION_1_0 EGLEW_GET_VAR(__EGLEW_VERSION_1_0)/;"	d
EGLEW_VERSION_1_1	./GL/eglew.h	/^#define EGLEW_VERSION_1_1 EGLEW_GET_VAR(__EGLEW_VERSION_1_1)/;"	d
EGLEW_VERSION_1_2	./GL/eglew.h	/^#define EGLEW_VERSION_1_2 EGLEW_GET_VAR(__EGLEW_VERSION_1_2)/;"	d
EGLEW_VERSION_1_3	./GL/eglew.h	/^#define EGLEW_VERSION_1_3 EGLEW_GET_VAR(__EGLEW_VERSION_1_3)/;"	d
EGLEW_VERSION_1_4	./GL/eglew.h	/^#define EGLEW_VERSION_1_4 EGLEW_GET_VAR(__EGLEW_VERSION_1_4)/;"	d
EGLEW_VERSION_1_5	./GL/eglew.h	/^#define EGLEW_VERSION_1_5 EGLEW_GET_VAR(__EGLEW_VERSION_1_5)/;"	d
EGLEW_WL_bind_wayland_display	./GL/eglew.h	/^#define EGLEW_WL_bind_wayland_display EGLEW_GET_VAR(__EGLEW_WL_bind_wayland_display)/;"	d
EGLEW_WL_create_wayland_buffer_from_image	./GL/eglew.h	/^#define EGLEW_WL_create_wayland_buffer_from_image EGLEW_GET_VAR(__EGLEW_WL_create_wayland_buffer/;"	d
EGLGetBlobFuncANDROID	./GL/eglew.h	/^typedef EGLsizeiANDROID (*EGLGetBlobFuncANDROID) (const void *key, EGLsizeiANDROID keySize, void/;"	t	typeref:typename:EGLsizeiANDROID (*)(const void * key,EGLsizeiANDROID keySize,void * value,EGLsizeiANDROID valueSize)
EGLImage	./GL/eglew.h	/^typedef void *EGLImage;$/;"	t	typeref:typename:void *
EGLImageKHR	./GL/eglew.h	/^typedef void *EGLImageKHR;$/;"	t	typeref:typename:void *
EGLLabelKHR	./GL/eglew.h	/^typedef void *EGLLabelKHR;$/;"	t	typeref:typename:void *
EGLNativeFileDescriptorKHR	./GL/eglew.h	/^typedef int EGLNativeFileDescriptorKHR;$/;"	t	typeref:typename:int
EGLObjectKHR	./GL/eglew.h	/^typedef void *EGLObjectKHR;$/;"	t	typeref:typename:void *
EGLOutputLayerEXT	./GL/eglew.h	/^typedef void *EGLOutputLayerEXT;$/;"	t	typeref:typename:void *
EGLOutputPortEXT	./GL/eglew.h	/^typedef void *EGLOutputPortEXT;$/;"	t	typeref:typename:void *
EGLSetBlobFuncANDROID	./GL/eglew.h	/^typedef void (*EGLSetBlobFuncANDROID) (const void *key, EGLsizeiANDROID keySize, const void *val/;"	t	typeref:typename:void (*)(const void * key,EGLsizeiANDROID keySize,const void * value,EGLsizeiANDROID valueSize)
EGLStreamKHR	./GL/eglew.h	/^typedef void *EGLStreamKHR;$/;"	t	typeref:typename:void *
EGLSurface	./GL/eglew.h	/^typedef void *EGLSurface;$/;"	t	typeref:typename:void *
EGLSync	./GL/eglew.h	/^typedef void *EGLSync;$/;"	t	typeref:typename:void *
EGLSyncKHR	./GL/eglew.h	/^typedef void *EGLSyncKHR;$/;"	t	typeref:typename:void *
EGLSyncNV	./GL/eglew.h	/^typedef void *EGLSyncNV;$/;"	t	typeref:typename:void *
EGLTime	./GL/eglew.h	/^typedef khronos_utime_nanoseconds_t EGLTime;$/;"	t	typeref:typename:khronos_utime_nanoseconds_t
EGLTimeKHR	./GL/eglew.h	/^typedef khronos_utime_nanoseconds_t EGLTimeKHR;$/;"	t	typeref:typename:khronos_utime_nanoseconds_t
EGLTimeNV	./GL/eglew.h	/^typedef khronos_utime_nanoseconds_t EGLTimeNV;$/;"	t	typeref:typename:khronos_utime_nanoseconds_t
EGL_ALPHA_FORMAT	./GL/eglew.h	/^#define EGL_ALPHA_FORMAT /;"	d
EGL_ALPHA_FORMAT_NONPRE	./GL/eglew.h	/^#define EGL_ALPHA_FORMAT_NONPRE /;"	d
EGL_ALPHA_FORMAT_PRE	./GL/eglew.h	/^#define EGL_ALPHA_FORMAT_PRE /;"	d
EGL_ALPHA_MASK_SIZE	./GL/eglew.h	/^#define EGL_ALPHA_MASK_SIZE /;"	d
EGL_ALPHA_SIZE	./GL/eglew.h	/^#define EGL_ALPHA_SIZE /;"	d
EGL_ALREADY_SIGNALED_NV	./GL/eglew.h	/^#define EGL_ALREADY_SIGNALED_NV /;"	d
EGL_ANDROID_GLES_layers	./GL/eglew.h	/^#define EGL_ANDROID_GLES_layers /;"	d
EGL_ANDROID_blob_cache	./GL/eglew.h	/^#define EGL_ANDROID_blob_cache /;"	d
EGL_ANDROID_create_native_client_buffer	./GL/eglew.h	/^#define EGL_ANDROID_create_native_client_buffer /;"	d
EGL_ANDROID_framebuffer_target	./GL/eglew.h	/^#define EGL_ANDROID_framebuffer_target /;"	d
EGL_ANDROID_front_buffer_auto_refresh	./GL/eglew.h	/^#define EGL_ANDROID_front_buffer_auto_refresh /;"	d
EGL_ANDROID_get_frame_timestamps	./GL/eglew.h	/^#define EGL_ANDROID_get_frame_timestamps /;"	d
EGL_ANDROID_get_native_client_buffer	./GL/eglew.h	/^#define EGL_ANDROID_get_native_client_buffer /;"	d
EGL_ANDROID_image_native_buffer	./GL/eglew.h	/^#define EGL_ANDROID_image_native_buffer /;"	d
EGL_ANDROID_native_fence_sync	./GL/eglew.h	/^#define EGL_ANDROID_native_fence_sync /;"	d
EGL_ANDROID_presentation_time	./GL/eglew.h	/^#define EGL_ANDROID_presentation_time /;"	d
EGL_ANDROID_recordable	./GL/eglew.h	/^#define EGL_ANDROID_recordable /;"	d
EGL_ANGLE_d3d_share_handle_client_buffer	./GL/eglew.h	/^#define EGL_ANGLE_d3d_share_handle_client_buffer /;"	d
EGL_ANGLE_device_d3d	./GL/eglew.h	/^#define EGL_ANGLE_device_d3d /;"	d
EGL_ANGLE_query_surface_pointer	./GL/eglew.h	/^#define EGL_ANGLE_query_surface_pointer /;"	d
EGL_ANGLE_surface_d3d_texture_2d_share_handle	./GL/eglew.h	/^#define EGL_ANGLE_surface_d3d_texture_2d_share_handle /;"	d
EGL_ANGLE_window_fixed_size	./GL/eglew.h	/^#define EGL_ANGLE_window_fixed_size /;"	d
EGL_ARM_image_format	./GL/eglew.h	/^#define EGL_ARM_image_format /;"	d
EGL_ARM_implicit_external_sync	./GL/eglew.h	/^#define EGL_ARM_implicit_external_sync /;"	d
EGL_ARM_pixmap_multisample_discard	./GL/eglew.h	/^#define EGL_ARM_pixmap_multisample_discard /;"	d
EGL_AUTO_STEREO_NV	./GL/eglew.h	/^#define EGL_AUTO_STEREO_NV /;"	d
EGL_BACK_BUFFER	./GL/eglew.h	/^#define EGL_BACK_BUFFER /;"	d
EGL_BAD_ACCESS	./GL/eglew.h	/^#define EGL_BAD_ACCESS /;"	d
EGL_BAD_ALLOC	./GL/eglew.h	/^#define EGL_BAD_ALLOC /;"	d
EGL_BAD_ATTRIBUTE	./GL/eglew.h	/^#define EGL_BAD_ATTRIBUTE /;"	d
EGL_BAD_CONFIG	./GL/eglew.h	/^#define EGL_BAD_CONFIG /;"	d
EGL_BAD_CONTEXT	./GL/eglew.h	/^#define EGL_BAD_CONTEXT /;"	d
EGL_BAD_CURRENT_SURFACE	./GL/eglew.h	/^#define EGL_BAD_CURRENT_SURFACE /;"	d
EGL_BAD_DEVICE_EXT	./GL/eglew.h	/^#define EGL_BAD_DEVICE_EXT /;"	d
EGL_BAD_DISPLAY	./GL/eglew.h	/^#define EGL_BAD_DISPLAY /;"	d
EGL_BAD_MATCH	./GL/eglew.h	/^#define EGL_BAD_MATCH /;"	d
EGL_BAD_NATIVE_PIXMAP	./GL/eglew.h	/^#define EGL_BAD_NATIVE_PIXMAP /;"	d
EGL_BAD_NATIVE_WINDOW	./GL/eglew.h	/^#define EGL_BAD_NATIVE_WINDOW /;"	d
EGL_BAD_OUTPUT_LAYER_EXT	./GL/eglew.h	/^#define EGL_BAD_OUTPUT_LAYER_EXT /;"	d
EGL_BAD_OUTPUT_PORT_EXT	./GL/eglew.h	/^#define EGL_BAD_OUTPUT_PORT_EXT /;"	d
EGL_BAD_PARAMETER	./GL/eglew.h	/^#define EGL_BAD_PARAMETER /;"	d
EGL_BAD_STATE_KHR	./GL/eglew.h	/^#define EGL_BAD_STATE_KHR /;"	d
EGL_BAD_STREAM_KHR	./GL/eglew.h	/^#define EGL_BAD_STREAM_KHR /;"	d
EGL_BAD_SURFACE	./GL/eglew.h	/^#define EGL_BAD_SURFACE /;"	d
EGL_BIND_TO_TEXTURE_RGB	./GL/eglew.h	/^#define EGL_BIND_TO_TEXTURE_RGB /;"	d
EGL_BIND_TO_TEXTURE_RGBA	./GL/eglew.h	/^#define EGL_BIND_TO_TEXTURE_RGBA /;"	d
EGL_BITMAP_ORIGIN_KHR	./GL/eglew.h	/^#define EGL_BITMAP_ORIGIN_KHR /;"	d
EGL_BITMAP_PITCH_KHR	./GL/eglew.h	/^#define EGL_BITMAP_PITCH_KHR /;"	d
EGL_BITMAP_PIXEL_ALPHA_OFFSET_KHR	./GL/eglew.h	/^#define EGL_BITMAP_PIXEL_ALPHA_OFFSET_KHR /;"	d
EGL_BITMAP_PIXEL_BLUE_OFFSET_KHR	./GL/eglew.h	/^#define EGL_BITMAP_PIXEL_BLUE_OFFSET_KHR /;"	d
EGL_BITMAP_PIXEL_GREEN_OFFSET_KHR	./GL/eglew.h	/^#define EGL_BITMAP_PIXEL_GREEN_OFFSET_KHR /;"	d
EGL_BITMAP_PIXEL_LUMINANCE_OFFSET_KHR	./GL/eglew.h	/^#define EGL_BITMAP_PIXEL_LUMINANCE_OFFSET_KHR /;"	d
EGL_BITMAP_PIXEL_RED_OFFSET_KHR	./GL/eglew.h	/^#define EGL_BITMAP_PIXEL_RED_OFFSET_KHR /;"	d
EGL_BITMAP_PIXEL_SIZE_KHR	./GL/eglew.h	/^#define EGL_BITMAP_PIXEL_SIZE_KHR /;"	d
EGL_BITMAP_POINTER_KHR	./GL/eglew.h	/^#define EGL_BITMAP_POINTER_KHR /;"	d
EGL_BLUE_SIZE	./GL/eglew.h	/^#define EGL_BLUE_SIZE /;"	d
EGL_BOTTOM_NV	./GL/eglew.h	/^#define EGL_BOTTOM_NV /;"	d
EGL_BUFFER_AGE_EXT	./GL/eglew.h	/^#define EGL_BUFFER_AGE_EXT /;"	d
EGL_BUFFER_AGE_KHR	./GL/eglew.h	/^#define EGL_BUFFER_AGE_KHR /;"	d
EGL_BUFFER_DESTROYED	./GL/eglew.h	/^#define EGL_BUFFER_DESTROYED /;"	d
EGL_BUFFER_PRESERVED	./GL/eglew.h	/^#define EGL_BUFFER_PRESERVED /;"	d
EGL_BUFFER_SIZE	./GL/eglew.h	/^#define EGL_BUFFER_SIZE /;"	d
EGL_CLIENT_APIS	./GL/eglew.h	/^#define EGL_CLIENT_APIS /;"	d
EGL_CLIENT_PIXMAP_POINTER_HI	./GL/eglew.h	/^#define EGL_CLIENT_PIXMAP_POINTER_HI /;"	d
EGL_CL_EVENT_HANDLE	./GL/eglew.h	/^#define EGL_CL_EVENT_HANDLE /;"	d
EGL_CL_EVENT_HANDLE_KHR	./GL/eglew.h	/^#define EGL_CL_EVENT_HANDLE_KHR /;"	d
EGL_COLORSPACE	./GL/eglew.h	/^#define EGL_COLORSPACE /;"	d
EGL_COLORSPACE_LINEAR	./GL/eglew.h	/^#define EGL_COLORSPACE_LINEAR /;"	d
EGL_COLOR_ARGB_HI	./GL/eglew.h	/^#define EGL_COLOR_ARGB_HI /;"	d
EGL_COLOR_BUFFER_TYPE	./GL/eglew.h	/^#define EGL_COLOR_BUFFER_TYPE /;"	d
EGL_COLOR_COMPONENT_TYPE_EXT	./GL/eglew.h	/^#define EGL_COLOR_COMPONENT_TYPE_EXT /;"	d
EGL_COLOR_COMPONENT_TYPE_FIXED_EXT	./GL/eglew.h	/^#define EGL_COLOR_COMPONENT_TYPE_FIXED_EXT /;"	d
EGL_COLOR_COMPONENT_TYPE_FLOAT_EXT	./GL/eglew.h	/^#define EGL_COLOR_COMPONENT_TYPE_FLOAT_EXT /;"	d
EGL_COLOR_COMPONENT_TYPE_INTEGER_ARM	./GL/eglew.h	/^#define EGL_COLOR_COMPONENT_TYPE_INTEGER_ARM /;"	d
EGL_COLOR_COMPONENT_TYPE_UNSIGNED_INTEGER_ARM	./GL/eglew.h	/^#define EGL_COLOR_COMPONENT_TYPE_UNSIGNED_INTEGER_ARM /;"	d
EGL_COLOR_FORMAT_HI	./GL/eglew.h	/^#define EGL_COLOR_FORMAT_HI /;"	d
EGL_COLOR_RGBA_HI	./GL/eglew.h	/^#define EGL_COLOR_RGBA_HI /;"	d
EGL_COLOR_RGB_HI	./GL/eglew.h	/^#define EGL_COLOR_RGB_HI /;"	d
EGL_COMPOSITE_DEADLINE_ANDROID	./GL/eglew.h	/^#define EGL_COMPOSITE_DEADLINE_ANDROID /;"	d
EGL_COMPOSITE_INTERVAL_ANDROID	./GL/eglew.h	/^#define EGL_COMPOSITE_INTERVAL_ANDROID /;"	d
EGL_COMPOSITE_TO_PRESENT_LATENCY_ANDROID	./GL/eglew.h	/^#define EGL_COMPOSITE_TO_PRESENT_LATENCY_ANDROID /;"	d
EGL_COMPOSITION_LATCH_TIME_ANDROID	./GL/eglew.h	/^#define EGL_COMPOSITION_LATCH_TIME_ANDROID /;"	d
EGL_COMPOSITOR_DROP_NEWEST_FRAME_EXT	./GL/eglew.h	/^#define EGL_COMPOSITOR_DROP_NEWEST_FRAME_EXT /;"	d
EGL_COMPOSITOR_KEEP_NEWEST_FRAME_EXT	./GL/eglew.h	/^#define EGL_COMPOSITOR_KEEP_NEWEST_FRAME_EXT /;"	d
EGL_CONDITION_SATISFIED	./GL/eglew.h	/^#define EGL_CONDITION_SATISFIED /;"	d
EGL_CONDITION_SATISFIED_KHR	./GL/eglew.h	/^#define EGL_CONDITION_SATISFIED_KHR /;"	d
EGL_CONDITION_SATISFIED_NV	./GL/eglew.h	/^#define EGL_CONDITION_SATISFIED_NV /;"	d
EGL_CONFIG_CAVEAT	./GL/eglew.h	/^#define EGL_CONFIG_CAVEAT /;"	d
EGL_CONFIG_ID	./GL/eglew.h	/^#define EGL_CONFIG_ID /;"	d
EGL_CONFORMANT	./GL/eglew.h	/^#define EGL_CONFORMANT /;"	d
EGL_CONFORMANT_KHR	./GL/eglew.h	/^#define EGL_CONFORMANT_KHR /;"	d
EGL_CONSUMER_ACQUIRE_TIMEOUT_USEC_KHR	./GL/eglew.h	/^#define EGL_CONSUMER_ACQUIRE_TIMEOUT_USEC_KHR /;"	d
EGL_CONSUMER_AUTO_ORIENTATION_NV	./GL/eglew.h	/^#define EGL_CONSUMER_AUTO_ORIENTATION_NV /;"	d
EGL_CONSUMER_FRAME_KHR	./GL/eglew.h	/^#define EGL_CONSUMER_FRAME_KHR /;"	d
EGL_CONSUMER_LATENCY_USEC_KHR	./GL/eglew.h	/^#define EGL_CONSUMER_LATENCY_USEC_KHR /;"	d
EGL_CONSUMER_MAX_FRAME_HINT_NV	./GL/eglew.h	/^#define EGL_CONSUMER_MAX_FRAME_HINT_NV /;"	d
EGL_CONSUMER_METADATA_NV	./GL/eglew.h	/^#define EGL_CONSUMER_METADATA_NV /;"	d
EGL_CONTEXT_CLIENT_TYPE	./GL/eglew.h	/^#define EGL_CONTEXT_CLIENT_TYPE /;"	d
EGL_CONTEXT_CLIENT_VERSION	./GL/eglew.h	/^#define EGL_CONTEXT_CLIENT_VERSION /;"	d
EGL_CONTEXT_FLAGS_KHR	./GL/eglew.h	/^#define EGL_CONTEXT_FLAGS_KHR /;"	d
EGL_CONTEXT_LOST	./GL/eglew.h	/^#define EGL_CONTEXT_LOST /;"	d
EGL_CONTEXT_MAJOR_VERSION	./GL/eglew.h	/^#define EGL_CONTEXT_MAJOR_VERSION /;"	d
EGL_CONTEXT_MAJOR_VERSION_KHR	./GL/eglew.h	/^#define EGL_CONTEXT_MAJOR_VERSION_KHR /;"	d
EGL_CONTEXT_MINOR_VERSION	./GL/eglew.h	/^#define EGL_CONTEXT_MINOR_VERSION /;"	d
EGL_CONTEXT_MINOR_VERSION_KHR	./GL/eglew.h	/^#define EGL_CONTEXT_MINOR_VERSION_KHR /;"	d
EGL_CONTEXT_OPENGL_COMPATIBILITY_PROFILE_BIT	./GL/eglew.h	/^#define EGL_CONTEXT_OPENGL_COMPATIBILITY_PROFILE_BIT /;"	d
EGL_CONTEXT_OPENGL_COMPATIBILITY_PROFILE_BIT_KHR	./GL/eglew.h	/^#define EGL_CONTEXT_OPENGL_COMPATIBILITY_PROFILE_BIT_KHR /;"	d
EGL_CONTEXT_OPENGL_CORE_PROFILE_BIT	./GL/eglew.h	/^#define EGL_CONTEXT_OPENGL_CORE_PROFILE_BIT /;"	d
EGL_CONTEXT_OPENGL_CORE_PROFILE_BIT_KHR	./GL/eglew.h	/^#define EGL_CONTEXT_OPENGL_CORE_PROFILE_BIT_KHR /;"	d
EGL_CONTEXT_OPENGL_DEBUG	./GL/eglew.h	/^#define EGL_CONTEXT_OPENGL_DEBUG /;"	d
EGL_CONTEXT_OPENGL_DEBUG_BIT_KHR	./GL/eglew.h	/^#define EGL_CONTEXT_OPENGL_DEBUG_BIT_KHR /;"	d
EGL_CONTEXT_OPENGL_FORWARD_COMPATIBLE	./GL/eglew.h	/^#define EGL_CONTEXT_OPENGL_FORWARD_COMPATIBLE /;"	d
EGL_CONTEXT_OPENGL_FORWARD_COMPATIBLE_BIT_KHR	./GL/eglew.h	/^#define EGL_CONTEXT_OPENGL_FORWARD_COMPATIBLE_BIT_KHR /;"	d
EGL_CONTEXT_OPENGL_NO_ERROR_KHR	./GL/eglew.h	/^#define EGL_CONTEXT_OPENGL_NO_ERROR_KHR /;"	d
EGL_CONTEXT_OPENGL_PROFILE_MASK	./GL/eglew.h	/^#define EGL_CONTEXT_OPENGL_PROFILE_MASK /;"	d
EGL_CONTEXT_OPENGL_PROFILE_MASK_KHR	./GL/eglew.h	/^#define EGL_CONTEXT_OPENGL_PROFILE_MASK_KHR /;"	d
EGL_CONTEXT_OPENGL_RESET_NOTIFICATION_STRATEGY	./GL/eglew.h	/^#define EGL_CONTEXT_OPENGL_RESET_NOTIFICATION_STRATEGY /;"	d
EGL_CONTEXT_OPENGL_RESET_NOTIFICATION_STRATEGY_EXT	./GL/eglew.h	/^#define EGL_CONTEXT_OPENGL_RESET_NOTIFICATION_STRATEGY_EXT /;"	d
EGL_CONTEXT_OPENGL_RESET_NOTIFICATION_STRATEGY_KHR	./GL/eglew.h	/^#define EGL_CONTEXT_OPENGL_RESET_NOTIFICATION_STRATEGY_KHR /;"	d
EGL_CONTEXT_OPENGL_ROBUST_ACCESS	./GL/eglew.h	/^#define EGL_CONTEXT_OPENGL_ROBUST_ACCESS /;"	d
EGL_CONTEXT_OPENGL_ROBUST_ACCESS_BIT_KHR	./GL/eglew.h	/^#define EGL_CONTEXT_OPENGL_ROBUST_ACCESS_BIT_KHR /;"	d
EGL_CONTEXT_OPENGL_ROBUST_ACCESS_EXT	./GL/eglew.h	/^#define EGL_CONTEXT_OPENGL_ROBUST_ACCESS_EXT /;"	d
EGL_CONTEXT_PRIORITY_HIGH_IMG	./GL/eglew.h	/^#define EGL_CONTEXT_PRIORITY_HIGH_IMG /;"	d
EGL_CONTEXT_PRIORITY_LEVEL_IMG	./GL/eglew.h	/^#define EGL_CONTEXT_PRIORITY_LEVEL_IMG /;"	d
EGL_CONTEXT_PRIORITY_LOW_IMG	./GL/eglew.h	/^#define EGL_CONTEXT_PRIORITY_LOW_IMG /;"	d
EGL_CONTEXT_PRIORITY_MEDIUM_IMG	./GL/eglew.h	/^#define EGL_CONTEXT_PRIORITY_MEDIUM_IMG /;"	d
EGL_CONTEXT_PRIORITY_REALTIME_NV	./GL/eglew.h	/^#define EGL_CONTEXT_PRIORITY_REALTIME_NV /;"	d
EGL_CONTEXT_RELEASE_BEHAVIOR_FLUSH_KHR	./GL/eglew.h	/^#define EGL_CONTEXT_RELEASE_BEHAVIOR_FLUSH_KHR /;"	d
EGL_CONTEXT_RELEASE_BEHAVIOR_KHR	./GL/eglew.h	/^#define EGL_CONTEXT_RELEASE_BEHAVIOR_KHR /;"	d
EGL_CONTEXT_RELEASE_BEHAVIOR_NONE_KHR	./GL/eglew.h	/^#define EGL_CONTEXT_RELEASE_BEHAVIOR_NONE_KHR /;"	d
EGL_CORE_NATIVE_ENGINE	./GL/eglew.h	/^#define EGL_CORE_NATIVE_ENGINE /;"	d
EGL_COVERAGE_BUFFERS_NV	./GL/eglew.h	/^#define EGL_COVERAGE_BUFFERS_NV /;"	d
EGL_COVERAGE_SAMPLES_NV	./GL/eglew.h	/^#define EGL_COVERAGE_SAMPLES_NV /;"	d
EGL_COVERAGE_SAMPLE_RESOLVE_DEFAULT_NV	./GL/eglew.h	/^#define EGL_COVERAGE_SAMPLE_RESOLVE_DEFAULT_NV /;"	d
EGL_COVERAGE_SAMPLE_RESOLVE_NONE_NV	./GL/eglew.h	/^#define EGL_COVERAGE_SAMPLE_RESOLVE_NONE_NV /;"	d
EGL_COVERAGE_SAMPLE_RESOLVE_NV	./GL/eglew.h	/^#define EGL_COVERAGE_SAMPLE_RESOLVE_NV /;"	d
EGL_CTA861_3_MAX_CONTENT_LIGHT_LEVEL_EXT	./GL/eglew.h	/^#define EGL_CTA861_3_MAX_CONTENT_LIGHT_LEVEL_EXT /;"	d
EGL_CTA861_3_MAX_FRAME_AVERAGE_LEVEL_EXT	./GL/eglew.h	/^#define EGL_CTA861_3_MAX_FRAME_AVERAGE_LEVEL_EXT /;"	d
EGL_CUDA_DEVICE_NV	./GL/eglew.h	/^#define EGL_CUDA_DEVICE_NV /;"	d
EGL_CUDA_EVENT_HANDLE_NV	./GL/eglew.h	/^#define EGL_CUDA_EVENT_HANDLE_NV /;"	d
EGL_D3D11_DEVICE_ANGLE	./GL/eglew.h	/^#define EGL_D3D11_DEVICE_ANGLE /;"	d
EGL_D3D9_DEVICE_ANGLE	./GL/eglew.h	/^#define EGL_D3D9_DEVICE_ANGLE /;"	d
EGL_D3D_TEXTURE_2D_SHARE_HANDLE_ANGLE	./GL/eglew.h	/^#define EGL_D3D_TEXTURE_2D_SHARE_HANDLE_ANGLE /;"	d
EGL_DEBUG_CALLBACK_KHR	./GL/eglew.h	/^#define EGL_DEBUG_CALLBACK_KHR /;"	d
EGL_DEBUG_MSG_CRITICAL_KHR	./GL/eglew.h	/^#define EGL_DEBUG_MSG_CRITICAL_KHR /;"	d
EGL_DEBUG_MSG_ERROR_KHR	./GL/eglew.h	/^#define EGL_DEBUG_MSG_ERROR_KHR /;"	d
EGL_DEBUG_MSG_INFO_KHR	./GL/eglew.h	/^#define EGL_DEBUG_MSG_INFO_KHR /;"	d
EGL_DEBUG_MSG_WARN_KHR	./GL/eglew.h	/^#define EGL_DEBUG_MSG_WARN_KHR /;"	d
EGL_DEFAULT_DISPLAY	./GL/eglew.h	/^#define EGL_DEFAULT_DISPLAY /;"	d
EGL_DEPTH_ENCODING_NONE_NV	./GL/eglew.h	/^#define EGL_DEPTH_ENCODING_NONE_NV /;"	d
EGL_DEPTH_ENCODING_NONLINEAR_NV	./GL/eglew.h	/^#define EGL_DEPTH_ENCODING_NONLINEAR_NV /;"	d
EGL_DEPTH_ENCODING_NV	./GL/eglew.h	/^#define EGL_DEPTH_ENCODING_NV /;"	d
EGL_DEPTH_SIZE	./GL/eglew.h	/^#define EGL_DEPTH_SIZE /;"	d
EGL_DEQUEUE_READY_TIME_ANDROID	./GL/eglew.h	/^#define EGL_DEQUEUE_READY_TIME_ANDROID /;"	d
EGL_DEVICE_EXT	./GL/eglew.h	/^#define EGL_DEVICE_EXT /;"	d
EGL_DISCARD_SAMPLES_ARM	./GL/eglew.h	/^#define EGL_DISCARD_SAMPLES_ARM /;"	d
EGL_DISPLAY_PRESENT_TIME_ANDROID	./GL/eglew.h	/^#define EGL_DISPLAY_PRESENT_TIME_ANDROID /;"	d
EGL_DISPLAY_SCALING	./GL/eglew.h	/^#define EGL_DISPLAY_SCALING /;"	d
EGL_DMA_BUF_PLANE0_FD_EXT	./GL/eglew.h	/^#define EGL_DMA_BUF_PLANE0_FD_EXT /;"	d
EGL_DMA_BUF_PLANE0_MODIFIER_HI_EXT	./GL/eglew.h	/^#define EGL_DMA_BUF_PLANE0_MODIFIER_HI_EXT /;"	d
EGL_DMA_BUF_PLANE0_MODIFIER_LO_EXT	./GL/eglew.h	/^#define EGL_DMA_BUF_PLANE0_MODIFIER_LO_EXT /;"	d
EGL_DMA_BUF_PLANE0_OFFSET_EXT	./GL/eglew.h	/^#define EGL_DMA_BUF_PLANE0_OFFSET_EXT /;"	d
EGL_DMA_BUF_PLANE0_PITCH_EXT	./GL/eglew.h	/^#define EGL_DMA_BUF_PLANE0_PITCH_EXT /;"	d
EGL_DMA_BUF_PLANE1_FD_EXT	./GL/eglew.h	/^#define EGL_DMA_BUF_PLANE1_FD_EXT /;"	d
EGL_DMA_BUF_PLANE1_MODIFIER_HI_EXT	./GL/eglew.h	/^#define EGL_DMA_BUF_PLANE1_MODIFIER_HI_EXT /;"	d
EGL_DMA_BUF_PLANE1_MODIFIER_LO_EXT	./GL/eglew.h	/^#define EGL_DMA_BUF_PLANE1_MODIFIER_LO_EXT /;"	d
EGL_DMA_BUF_PLANE1_OFFSET_EXT	./GL/eglew.h	/^#define EGL_DMA_BUF_PLANE1_OFFSET_EXT /;"	d
EGL_DMA_BUF_PLANE1_PITCH_EXT	./GL/eglew.h	/^#define EGL_DMA_BUF_PLANE1_PITCH_EXT /;"	d
EGL_DMA_BUF_PLANE2_FD_EXT	./GL/eglew.h	/^#define EGL_DMA_BUF_PLANE2_FD_EXT /;"	d
EGL_DMA_BUF_PLANE2_MODIFIER_HI_EXT	./GL/eglew.h	/^#define EGL_DMA_BUF_PLANE2_MODIFIER_HI_EXT /;"	d
EGL_DMA_BUF_PLANE2_MODIFIER_LO_EXT	./GL/eglew.h	/^#define EGL_DMA_BUF_PLANE2_MODIFIER_LO_EXT /;"	d
EGL_DMA_BUF_PLANE2_OFFSET_EXT	./GL/eglew.h	/^#define EGL_DMA_BUF_PLANE2_OFFSET_EXT /;"	d
EGL_DMA_BUF_PLANE2_PITCH_EXT	./GL/eglew.h	/^#define EGL_DMA_BUF_PLANE2_PITCH_EXT /;"	d
EGL_DMA_BUF_PLANE3_FD_EXT	./GL/eglew.h	/^#define EGL_DMA_BUF_PLANE3_FD_EXT /;"	d
EGL_DMA_BUF_PLANE3_MODIFIER_HI_EXT	./GL/eglew.h	/^#define EGL_DMA_BUF_PLANE3_MODIFIER_HI_EXT /;"	d
EGL_DMA_BUF_PLANE3_MODIFIER_LO_EXT	./GL/eglew.h	/^#define EGL_DMA_BUF_PLANE3_MODIFIER_LO_EXT /;"	d
EGL_DMA_BUF_PLANE3_OFFSET_EXT	./GL/eglew.h	/^#define EGL_DMA_BUF_PLANE3_OFFSET_EXT /;"	d
EGL_DMA_BUF_PLANE3_PITCH_EXT	./GL/eglew.h	/^#define EGL_DMA_BUF_PLANE3_PITCH_EXT /;"	d
EGL_DONT_CARE	./GL/eglew.h	/^#define EGL_DONT_CARE /;"	d
EGL_DRAW	./GL/eglew.h	/^#define EGL_DRAW /;"	d
EGL_DRM_BUFFER_FORMAT_ARGB32_MESA	./GL/eglew.h	/^#define EGL_DRM_BUFFER_FORMAT_ARGB32_MESA /;"	d
EGL_DRM_BUFFER_FORMAT_MESA	./GL/eglew.h	/^#define EGL_DRM_BUFFER_FORMAT_MESA /;"	d
EGL_DRM_BUFFER_MESA	./GL/eglew.h	/^#define EGL_DRM_BUFFER_MESA /;"	d
EGL_DRM_BUFFER_STRIDE_MESA	./GL/eglew.h	/^#define EGL_DRM_BUFFER_STRIDE_MESA /;"	d
EGL_DRM_BUFFER_USE_CURSOR_MESA	./GL/eglew.h	/^#define EGL_DRM_BUFFER_USE_CURSOR_MESA /;"	d
EGL_DRM_BUFFER_USE_MESA	./GL/eglew.h	/^#define EGL_DRM_BUFFER_USE_MESA /;"	d
EGL_DRM_BUFFER_USE_SCANOUT_MESA	./GL/eglew.h	/^#define EGL_DRM_BUFFER_USE_SCANOUT_MESA /;"	d
EGL_DRM_BUFFER_USE_SHARE_MESA	./GL/eglew.h	/^#define EGL_DRM_BUFFER_USE_SHARE_MESA /;"	d
EGL_DRM_CONNECTOR_EXT	./GL/eglew.h	/^#define EGL_DRM_CONNECTOR_EXT /;"	d
EGL_DRM_CRTC_EXT	./GL/eglew.h	/^#define EGL_DRM_CRTC_EXT /;"	d
EGL_DRM_DEVICE_FILE_EXT	./GL/eglew.h	/^#define EGL_DRM_DEVICE_FILE_EXT /;"	d
EGL_DRM_MASTER_FD_EXT	./GL/eglew.h	/^#define EGL_DRM_MASTER_FD_EXT /;"	d
EGL_DRM_PLANE_EXT	./GL/eglew.h	/^#define EGL_DRM_PLANE_EXT /;"	d
EGL_EXTENSIONS	./GL/eglew.h	/^#define EGL_EXTENSIONS /;"	d
EGL_EXTERNAL_REF_ID_EXT	./GL/eglew.h	/^#define EGL_EXTERNAL_REF_ID_EXT /;"	d
EGL_EXT_bind_to_front	./GL/eglew.h	/^#define EGL_EXT_bind_to_front /;"	d
EGL_EXT_buffer_age	./GL/eglew.h	/^#define EGL_EXT_buffer_age /;"	d
EGL_EXT_client_extensions	./GL/eglew.h	/^#define EGL_EXT_client_extensions /;"	d
EGL_EXT_client_sync	./GL/eglew.h	/^#define EGL_EXT_client_sync /;"	d
EGL_EXT_compositor	./GL/eglew.h	/^#define EGL_EXT_compositor /;"	d
EGL_EXT_create_context_robustness	./GL/eglew.h	/^#define EGL_EXT_create_context_robustness /;"	d
EGL_EXT_device_base	./GL/eglew.h	/^#define EGL_EXT_device_base /;"	d
EGL_EXT_device_drm	./GL/eglew.h	/^#define EGL_EXT_device_drm /;"	d
EGL_EXT_device_enumeration	./GL/eglew.h	/^#define EGL_EXT_device_enumeration /;"	d
EGL_EXT_device_openwf	./GL/eglew.h	/^#define EGL_EXT_device_openwf /;"	d
EGL_EXT_device_query	./GL/eglew.h	/^#define EGL_EXT_device_query /;"	d
EGL_EXT_gl_colorspace_bt2020_linear	./GL/eglew.h	/^#define EGL_EXT_gl_colorspace_bt2020_linear /;"	d
EGL_EXT_gl_colorspace_bt2020_pq	./GL/eglew.h	/^#define EGL_EXT_gl_colorspace_bt2020_pq /;"	d
EGL_EXT_gl_colorspace_display_p3	./GL/eglew.h	/^#define EGL_EXT_gl_colorspace_display_p3 /;"	d
EGL_EXT_gl_colorspace_display_p3_linear	./GL/eglew.h	/^#define EGL_EXT_gl_colorspace_display_p3_linear /;"	d
EGL_EXT_gl_colorspace_display_p3_passthrough	./GL/eglew.h	/^#define EGL_EXT_gl_colorspace_display_p3_passthrough /;"	d
EGL_EXT_gl_colorspace_scrgb	./GL/eglew.h	/^#define EGL_EXT_gl_colorspace_scrgb /;"	d
EGL_EXT_gl_colorspace_scrgb_linear	./GL/eglew.h	/^#define EGL_EXT_gl_colorspace_scrgb_linear /;"	d
EGL_EXT_image_dma_buf_import	./GL/eglew.h	/^#define EGL_EXT_image_dma_buf_import /;"	d
EGL_EXT_image_dma_buf_import_modifiers	./GL/eglew.h	/^#define EGL_EXT_image_dma_buf_import_modifiers /;"	d
EGL_EXT_image_gl_colorspace	./GL/eglew.h	/^#define EGL_EXT_image_gl_colorspace /;"	d
EGL_EXT_image_implicit_sync_control	./GL/eglew.h	/^#define EGL_EXT_image_implicit_sync_control /;"	d
EGL_EXT_multiview_window	./GL/eglew.h	/^#define EGL_EXT_multiview_window /;"	d
EGL_EXT_output_base	./GL/eglew.h	/^#define EGL_EXT_output_base /;"	d
EGL_EXT_output_drm	./GL/eglew.h	/^#define EGL_EXT_output_drm /;"	d
EGL_EXT_output_openwf	./GL/eglew.h	/^#define EGL_EXT_output_openwf /;"	d
EGL_EXT_pixel_format_float	./GL/eglew.h	/^#define EGL_EXT_pixel_format_float /;"	d
EGL_EXT_platform_base	./GL/eglew.h	/^#define EGL_EXT_platform_base /;"	d
EGL_EXT_platform_device	./GL/eglew.h	/^#define EGL_EXT_platform_device /;"	d
EGL_EXT_platform_wayland	./GL/eglew.h	/^#define EGL_EXT_platform_wayland /;"	d
EGL_EXT_platform_x11	./GL/eglew.h	/^#define EGL_EXT_platform_x11 /;"	d
EGL_EXT_protected_content	./GL/eglew.h	/^#define EGL_EXT_protected_content /;"	d
EGL_EXT_protected_surface	./GL/eglew.h	/^#define EGL_EXT_protected_surface /;"	d
EGL_EXT_stream_consumer_egloutput	./GL/eglew.h	/^#define EGL_EXT_stream_consumer_egloutput /;"	d
EGL_EXT_surface_CTA861_3_metadata	./GL/eglew.h	/^#define EGL_EXT_surface_CTA861_3_metadata /;"	d
EGL_EXT_surface_SMPTE2086_metadata	./GL/eglew.h	/^#define EGL_EXT_surface_SMPTE2086_metadata /;"	d
EGL_EXT_swap_buffers_with_damage	./GL/eglew.h	/^#define EGL_EXT_swap_buffers_with_damage /;"	d
EGL_EXT_sync_reuse	./GL/eglew.h	/^#define EGL_EXT_sync_reuse /;"	d
EGL_EXT_yuv_surface	./GL/eglew.h	/^#define EGL_EXT_yuv_surface /;"	d
EGL_FALSE	./GL/eglew.h	/^#define EGL_FALSE /;"	d
EGL_FIRST_COMPOSITION_GPU_FINISHED_TIME_ANDROID	./GL/eglew.h	/^#define EGL_FIRST_COMPOSITION_GPU_FINISHED_TIME_ANDROID /;"	d
EGL_FIRST_COMPOSITION_START_TIME_ANDROID	./GL/eglew.h	/^#define EGL_FIRST_COMPOSITION_START_TIME_ANDROID /;"	d
EGL_FIXED_SIZE_ANGLE	./GL/eglew.h	/^#define EGL_FIXED_SIZE_ANGLE /;"	d
EGL_FOREVER	./GL/eglew.h	/^#define EGL_FOREVER /;"	d
EGL_FOREVER_KHR	./GL/eglew.h	/^#define EGL_FOREVER_KHR /;"	d
EGL_FOREVER_NV	./GL/eglew.h	/^#define EGL_FOREVER_NV /;"	d
EGL_FORMAT_RGBA_8888_EXACT_KHR	./GL/eglew.h	/^#define EGL_FORMAT_RGBA_8888_EXACT_KHR /;"	d
EGL_FORMAT_RGBA_8888_KHR	./GL/eglew.h	/^#define EGL_FORMAT_RGBA_8888_KHR /;"	d
EGL_FORMAT_RGB_565_EXACT_KHR	./GL/eglew.h	/^#define EGL_FORMAT_RGB_565_EXACT_KHR /;"	d
EGL_FORMAT_RGB_565_KHR	./GL/eglew.h	/^#define EGL_FORMAT_RGB_565_KHR /;"	d
EGL_FRAMEBUFFER_TARGET_ANDROID	./GL/eglew.h	/^#define EGL_FRAMEBUFFER_TARGET_ANDROID /;"	d
EGL_FRONT_BUFFER_AUTO_REFRESH_ANDROID	./GL/eglew.h	/^#define EGL_FRONT_BUFFER_AUTO_REFRESH_ANDROID /;"	d
EGL_FRONT_BUFFER_EXT	./GL/eglew.h	/^#define EGL_FRONT_BUFFER_EXT /;"	d
EGL_GENERATE_RESET_ON_VIDEO_MEMORY_PURGE_NV	./GL/eglew.h	/^#define EGL_GENERATE_RESET_ON_VIDEO_MEMORY_PURGE_NV /;"	d
EGL_GL_COLORSPACE	./GL/eglew.h	/^#define EGL_GL_COLORSPACE /;"	d
EGL_GL_COLORSPACE_BT2020_LINEAR_EXT	./GL/eglew.h	/^#define EGL_GL_COLORSPACE_BT2020_LINEAR_EXT /;"	d
EGL_GL_COLORSPACE_BT2020_PQ_EXT	./GL/eglew.h	/^#define EGL_GL_COLORSPACE_BT2020_PQ_EXT /;"	d
EGL_GL_COLORSPACE_DEFAULT_EXT	./GL/eglew.h	/^#define EGL_GL_COLORSPACE_DEFAULT_EXT /;"	d
EGL_GL_COLORSPACE_DISPLAY_P3_EXT	./GL/eglew.h	/^#define EGL_GL_COLORSPACE_DISPLAY_P3_EXT /;"	d
EGL_GL_COLORSPACE_DISPLAY_P3_LINEAR_EXT	./GL/eglew.h	/^#define EGL_GL_COLORSPACE_DISPLAY_P3_LINEAR_EXT /;"	d
EGL_GL_COLORSPACE_DISPLAY_P3_PASSTHROUGH_EXT	./GL/eglew.h	/^#define EGL_GL_COLORSPACE_DISPLAY_P3_PASSTHROUGH_EXT /;"	d
EGL_GL_COLORSPACE_KHR	./GL/eglew.h	/^#define EGL_GL_COLORSPACE_KHR /;"	d
EGL_GL_COLORSPACE_LINEAR	./GL/eglew.h	/^#define EGL_GL_COLORSPACE_LINEAR /;"	d
EGL_GL_COLORSPACE_LINEAR_KHR	./GL/eglew.h	/^#define EGL_GL_COLORSPACE_LINEAR_KHR /;"	d
EGL_GL_COLORSPACE_SCRGB_EXT	./GL/eglew.h	/^#define EGL_GL_COLORSPACE_SCRGB_EXT /;"	d
EGL_GL_COLORSPACE_SCRGB_LINEAR_EXT	./GL/eglew.h	/^#define EGL_GL_COLORSPACE_SCRGB_LINEAR_EXT /;"	d
EGL_GL_COLORSPACE_SRGB	./GL/eglew.h	/^#define EGL_GL_COLORSPACE_SRGB /;"	d
EGL_GL_COLORSPACE_SRGB_KHR	./GL/eglew.h	/^#define EGL_GL_COLORSPACE_SRGB_KHR /;"	d
EGL_GL_RENDERBUFFER	./GL/eglew.h	/^#define EGL_GL_RENDERBUFFER /;"	d
EGL_GL_RENDERBUFFER_KHR	./GL/eglew.h	/^#define EGL_GL_RENDERBUFFER_KHR /;"	d
EGL_GL_TEXTURE_2D	./GL/eglew.h	/^#define EGL_GL_TEXTURE_2D /;"	d
EGL_GL_TEXTURE_2D_KHR	./GL/eglew.h	/^#define EGL_GL_TEXTURE_2D_KHR /;"	d
EGL_GL_TEXTURE_3D	./GL/eglew.h	/^#define EGL_GL_TEXTURE_3D /;"	d
EGL_GL_TEXTURE_3D_KHR	./GL/eglew.h	/^#define EGL_GL_TEXTURE_3D_KHR /;"	d
EGL_GL_TEXTURE_CUBE_MAP_NEGATIVE_X	./GL/eglew.h	/^#define EGL_GL_TEXTURE_CUBE_MAP_NEGATIVE_X /;"	d
EGL_GL_TEXTURE_CUBE_MAP_NEGATIVE_X_KHR	./GL/eglew.h	/^#define EGL_GL_TEXTURE_CUBE_MAP_NEGATIVE_X_KHR /;"	d
EGL_GL_TEXTURE_CUBE_MAP_NEGATIVE_Y	./GL/eglew.h	/^#define EGL_GL_TEXTURE_CUBE_MAP_NEGATIVE_Y /;"	d
EGL_GL_TEXTURE_CUBE_MAP_NEGATIVE_Y_KHR	./GL/eglew.h	/^#define EGL_GL_TEXTURE_CUBE_MAP_NEGATIVE_Y_KHR /;"	d
EGL_GL_TEXTURE_CUBE_MAP_NEGATIVE_Z	./GL/eglew.h	/^#define EGL_GL_TEXTURE_CUBE_MAP_NEGATIVE_Z /;"	d
EGL_GL_TEXTURE_CUBE_MAP_NEGATIVE_Z_KHR	./GL/eglew.h	/^#define EGL_GL_TEXTURE_CUBE_MAP_NEGATIVE_Z_KHR /;"	d
EGL_GL_TEXTURE_CUBE_MAP_POSITIVE_X	./GL/eglew.h	/^#define EGL_GL_TEXTURE_CUBE_MAP_POSITIVE_X /;"	d
EGL_GL_TEXTURE_CUBE_MAP_POSITIVE_X_KHR	./GL/eglew.h	/^#define EGL_GL_TEXTURE_CUBE_MAP_POSITIVE_X_KHR /;"	d
EGL_GL_TEXTURE_CUBE_MAP_POSITIVE_Y	./GL/eglew.h	/^#define EGL_GL_TEXTURE_CUBE_MAP_POSITIVE_Y /;"	d
EGL_GL_TEXTURE_CUBE_MAP_POSITIVE_Y_KHR	./GL/eglew.h	/^#define EGL_GL_TEXTURE_CUBE_MAP_POSITIVE_Y_KHR /;"	d
EGL_GL_TEXTURE_CUBE_MAP_POSITIVE_Z	./GL/eglew.h	/^#define EGL_GL_TEXTURE_CUBE_MAP_POSITIVE_Z /;"	d
EGL_GL_TEXTURE_CUBE_MAP_POSITIVE_Z_KHR	./GL/eglew.h	/^#define EGL_GL_TEXTURE_CUBE_MAP_POSITIVE_Z_KHR /;"	d
EGL_GL_TEXTURE_LEVEL	./GL/eglew.h	/^#define EGL_GL_TEXTURE_LEVEL /;"	d
EGL_GL_TEXTURE_LEVEL_KHR	./GL/eglew.h	/^#define EGL_GL_TEXTURE_LEVEL_KHR /;"	d
EGL_GL_TEXTURE_ZOFFSET	./GL/eglew.h	/^#define EGL_GL_TEXTURE_ZOFFSET /;"	d
EGL_GL_TEXTURE_ZOFFSET_KHR	./GL/eglew.h	/^#define EGL_GL_TEXTURE_ZOFFSET_KHR /;"	d
EGL_GREEN_SIZE	./GL/eglew.h	/^#define EGL_GREEN_SIZE /;"	d
EGL_HEIGHT	./GL/eglew.h	/^#define EGL_HEIGHT /;"	d
EGL_HI_clientpixmap	./GL/eglew.h	/^#define EGL_HI_clientpixmap /;"	d
EGL_HI_colorformats	./GL/eglew.h	/^#define EGL_HI_colorformats /;"	d
EGL_HORIZONTAL_RESOLUTION	./GL/eglew.h	/^#define EGL_HORIZONTAL_RESOLUTION /;"	d
EGL_IMAGE_PRESERVED	./GL/eglew.h	/^#define EGL_IMAGE_PRESERVED /;"	d
EGL_IMAGE_PRESERVED_KHR	./GL/eglew.h	/^#define EGL_IMAGE_PRESERVED_KHR /;"	d
EGL_IMG_context_priority	./GL/eglew.h	/^#define EGL_IMG_context_priority /;"	d
EGL_IMG_image_plane_attribs	./GL/eglew.h	/^#define EGL_IMG_image_plane_attribs /;"	d
EGL_IMPORT_EXPLICIT_SYNC_EXT	./GL/eglew.h	/^#define EGL_IMPORT_EXPLICIT_SYNC_EXT /;"	d
EGL_IMPORT_IMPLICIT_SYNC_EXT	./GL/eglew.h	/^#define EGL_IMPORT_IMPLICIT_SYNC_EXT /;"	d
EGL_IMPORT_SYNC_TYPE_EXT	./GL/eglew.h	/^#define EGL_IMPORT_SYNC_TYPE_EXT /;"	d
EGL_ITU_REC2020_EXT	./GL/eglew.h	/^#define EGL_ITU_REC2020_EXT /;"	d
EGL_ITU_REC601_EXT	./GL/eglew.h	/^#define EGL_ITU_REC601_EXT /;"	d
EGL_ITU_REC709_EXT	./GL/eglew.h	/^#define EGL_ITU_REC709_EXT /;"	d
EGL_KHR_cl_event	./GL/eglew.h	/^#define EGL_KHR_cl_event /;"	d
EGL_KHR_cl_event2	./GL/eglew.h	/^#define EGL_KHR_cl_event2 /;"	d
EGL_KHR_client_get_all_proc_addresses	./GL/eglew.h	/^#define EGL_KHR_client_get_all_proc_addresses /;"	d
EGL_KHR_config_attribs	./GL/eglew.h	/^#define EGL_KHR_config_attribs /;"	d
EGL_KHR_context_flush_control	./GL/eglew.h	/^#define EGL_KHR_context_flush_control /;"	d
EGL_KHR_create_context	./GL/eglew.h	/^#define EGL_KHR_create_context /;"	d
EGL_KHR_create_context_no_error	./GL/eglew.h	/^#define EGL_KHR_create_context_no_error /;"	d
EGL_KHR_debug	./GL/eglew.h	/^#define EGL_KHR_debug /;"	d
EGL_KHR_display_reference	./GL/eglew.h	/^#define EGL_KHR_display_reference /;"	d
EGL_KHR_fence_sync	./GL/eglew.h	/^#define EGL_KHR_fence_sync /;"	d
EGL_KHR_get_all_proc_addresses	./GL/eglew.h	/^#define EGL_KHR_get_all_proc_addresses /;"	d
EGL_KHR_gl_colorspace	./GL/eglew.h	/^#define EGL_KHR_gl_colorspace /;"	d
EGL_KHR_gl_renderbuffer_image	./GL/eglew.h	/^#define EGL_KHR_gl_renderbuffer_image /;"	d
EGL_KHR_gl_texture_2D_image	./GL/eglew.h	/^#define EGL_KHR_gl_texture_2D_image /;"	d
EGL_KHR_gl_texture_3D_image	./GL/eglew.h	/^#define EGL_KHR_gl_texture_3D_image /;"	d
EGL_KHR_gl_texture_cubemap_image	./GL/eglew.h	/^#define EGL_KHR_gl_texture_cubemap_image /;"	d
EGL_KHR_image	./GL/eglew.h	/^#define EGL_KHR_image /;"	d
EGL_KHR_image_base	./GL/eglew.h	/^#define EGL_KHR_image_base /;"	d
EGL_KHR_image_pixmap	./GL/eglew.h	/^#define EGL_KHR_image_pixmap /;"	d
EGL_KHR_lock_surface	./GL/eglew.h	/^#define EGL_KHR_lock_surface /;"	d
EGL_KHR_lock_surface2	./GL/eglew.h	/^#define EGL_KHR_lock_surface2 /;"	d
EGL_KHR_lock_surface3	./GL/eglew.h	/^#define EGL_KHR_lock_surface3 /;"	d
EGL_KHR_mutable_render_buffer	./GL/eglew.h	/^#define EGL_KHR_mutable_render_buffer /;"	d
EGL_KHR_no_config_context	./GL/eglew.h	/^#define EGL_KHR_no_config_context /;"	d
EGL_KHR_partial_update	./GL/eglew.h	/^#define EGL_KHR_partial_update /;"	d
EGL_KHR_platform_android	./GL/eglew.h	/^#define EGL_KHR_platform_android /;"	d
EGL_KHR_platform_gbm	./GL/eglew.h	/^#define EGL_KHR_platform_gbm /;"	d
EGL_KHR_platform_wayland	./GL/eglew.h	/^#define EGL_KHR_platform_wayland /;"	d
EGL_KHR_platform_x11	./GL/eglew.h	/^#define EGL_KHR_platform_x11 /;"	d
EGL_KHR_reusable_sync	./GL/eglew.h	/^#define EGL_KHR_reusable_sync /;"	d
EGL_KHR_stream	./GL/eglew.h	/^#define EGL_KHR_stream /;"	d
EGL_KHR_stream_attrib	./GL/eglew.h	/^#define EGL_KHR_stream_attrib /;"	d
EGL_KHR_stream_consumer_gltexture	./GL/eglew.h	/^#define EGL_KHR_stream_consumer_gltexture /;"	d
EGL_KHR_stream_cross_process_fd	./GL/eglew.h	/^#define EGL_KHR_stream_cross_process_fd /;"	d
EGL_KHR_stream_fifo	./GL/eglew.h	/^#define EGL_KHR_stream_fifo /;"	d
EGL_KHR_stream_producer_aldatalocator	./GL/eglew.h	/^#define EGL_KHR_stream_producer_aldatalocator /;"	d
EGL_KHR_stream_producer_eglsurface	./GL/eglew.h	/^#define EGL_KHR_stream_producer_eglsurface /;"	d
EGL_KHR_surfaceless_context	./GL/eglew.h	/^#define EGL_KHR_surfaceless_context /;"	d
EGL_KHR_swap_buffers_with_damage	./GL/eglew.h	/^#define EGL_KHR_swap_buffers_with_damage /;"	d
EGL_KHR_vg_parent_image	./GL/eglew.h	/^#define EGL_KHR_vg_parent_image /;"	d
EGL_KHR_wait_sync	./GL/eglew.h	/^#define EGL_KHR_wait_sync /;"	d
EGL_LARGEST_PBUFFER	./GL/eglew.h	/^#define EGL_LARGEST_PBUFFER /;"	d
EGL_LAST_COMPOSITION_START_TIME_ANDROID	./GL/eglew.h	/^#define EGL_LAST_COMPOSITION_START_TIME_ANDROID /;"	d
EGL_LEFT_NV	./GL/eglew.h	/^#define EGL_LEFT_NV /;"	d
EGL_LEVEL	./GL/eglew.h	/^#define EGL_LEVEL /;"	d
EGL_LINUX_DMA_BUF_EXT	./GL/eglew.h	/^#define EGL_LINUX_DMA_BUF_EXT /;"	d
EGL_LINUX_DRM_FOURCC_EXT	./GL/eglew.h	/^#define EGL_LINUX_DRM_FOURCC_EXT /;"	d
EGL_LOCK_SURFACE_BIT_KHR	./GL/eglew.h	/^#define EGL_LOCK_SURFACE_BIT_KHR /;"	d
EGL_LOCK_USAGE_HINT_KHR	./GL/eglew.h	/^#define EGL_LOCK_USAGE_HINT_KHR /;"	d
EGL_LOSE_CONTEXT_ON_RESET	./GL/eglew.h	/^#define EGL_LOSE_CONTEXT_ON_RESET /;"	d
EGL_LOSE_CONTEXT_ON_RESET_EXT	./GL/eglew.h	/^#define EGL_LOSE_CONTEXT_ON_RESET_EXT /;"	d
EGL_LOSE_CONTEXT_ON_RESET_KHR	./GL/eglew.h	/^#define EGL_LOSE_CONTEXT_ON_RESET_KHR /;"	d
EGL_LOWER_LEFT_KHR	./GL/eglew.h	/^#define EGL_LOWER_LEFT_KHR /;"	d
EGL_LUMINANCE_BUFFER	./GL/eglew.h	/^#define EGL_LUMINANCE_BUFFER /;"	d
EGL_LUMINANCE_SIZE	./GL/eglew.h	/^#define EGL_LUMINANCE_SIZE /;"	d
EGL_MAP_PRESERVE_PIXELS_KHR	./GL/eglew.h	/^#define EGL_MAP_PRESERVE_PIXELS_KHR /;"	d
EGL_MATCH_FORMAT_KHR	./GL/eglew.h	/^#define EGL_MATCH_FORMAT_KHR /;"	d
EGL_MATCH_NATIVE_PIXMAP	./GL/eglew.h	/^#define EGL_MATCH_NATIVE_PIXMAP /;"	d
EGL_MAX_PBUFFER_HEIGHT	./GL/eglew.h	/^#define EGL_MAX_PBUFFER_HEIGHT /;"	d
EGL_MAX_PBUFFER_PIXELS	./GL/eglew.h	/^#define EGL_MAX_PBUFFER_PIXELS /;"	d
EGL_MAX_PBUFFER_WIDTH	./GL/eglew.h	/^#define EGL_MAX_PBUFFER_WIDTH /;"	d
EGL_MAX_STREAM_METADATA_BLOCKS_NV	./GL/eglew.h	/^#define EGL_MAX_STREAM_METADATA_BLOCKS_NV /;"	d
EGL_MAX_STREAM_METADATA_BLOCK_SIZE_NV	./GL/eglew.h	/^#define EGL_MAX_STREAM_METADATA_BLOCK_SIZE_NV /;"	d
EGL_MAX_STREAM_METADATA_TOTAL_SIZE_NV	./GL/eglew.h	/^#define EGL_MAX_STREAM_METADATA_TOTAL_SIZE_NV /;"	d
EGL_MAX_SWAP_INTERVAL	./GL/eglew.h	/^#define EGL_MAX_SWAP_INTERVAL /;"	d
EGL_MESA_drm_image	./GL/eglew.h	/^#define EGL_MESA_drm_image /;"	d
EGL_MESA_image_dma_buf_export	./GL/eglew.h	/^#define EGL_MESA_image_dma_buf_export /;"	d
EGL_MESA_platform_gbm	./GL/eglew.h	/^#define EGL_MESA_platform_gbm /;"	d
EGL_MESA_platform_surfaceless	./GL/eglew.h	/^#define EGL_MESA_platform_surfaceless /;"	d
EGL_MESA_query_driver	./GL/eglew.h	/^#define EGL_MESA_query_driver /;"	d
EGL_METADATA0_SIZE_NV	./GL/eglew.h	/^#define EGL_METADATA0_SIZE_NV /;"	d
EGL_METADATA0_TYPE_NV	./GL/eglew.h	/^#define EGL_METADATA0_TYPE_NV /;"	d
EGL_METADATA1_SIZE_NV	./GL/eglew.h	/^#define EGL_METADATA1_SIZE_NV /;"	d
EGL_METADATA1_TYPE_NV	./GL/eglew.h	/^#define EGL_METADATA1_TYPE_NV /;"	d
EGL_METADATA2_SIZE_NV	./GL/eglew.h	/^#define EGL_METADATA2_SIZE_NV /;"	d
EGL_METADATA2_TYPE_NV	./GL/eglew.h	/^#define EGL_METADATA2_TYPE_NV /;"	d
EGL_METADATA3_SIZE_NV	./GL/eglew.h	/^#define EGL_METADATA3_SIZE_NV /;"	d
EGL_METADATA3_TYPE_NV	./GL/eglew.h	/^#define EGL_METADATA3_TYPE_NV /;"	d
EGL_METADATA_SCALING_EXT	./GL/eglew.h	/^#define EGL_METADATA_SCALING_EXT /;"	d
EGL_MIN_SWAP_INTERVAL	./GL/eglew.h	/^#define EGL_MIN_SWAP_INTERVAL /;"	d
EGL_MIPMAP_LEVEL	./GL/eglew.h	/^#define EGL_MIPMAP_LEVEL /;"	d
EGL_MIPMAP_TEXTURE	./GL/eglew.h	/^#define EGL_MIPMAP_TEXTURE /;"	d
EGL_MULTISAMPLE_RESOLVE	./GL/eglew.h	/^#define EGL_MULTISAMPLE_RESOLVE /;"	d
EGL_MULTISAMPLE_RESOLVE_BOX	./GL/eglew.h	/^#define EGL_MULTISAMPLE_RESOLVE_BOX /;"	d
EGL_MULTISAMPLE_RESOLVE_BOX_BIT	./GL/eglew.h	/^#define EGL_MULTISAMPLE_RESOLVE_BOX_BIT /;"	d
EGL_MULTISAMPLE_RESOLVE_DEFAULT	./GL/eglew.h	/^#define EGL_MULTISAMPLE_RESOLVE_DEFAULT /;"	d
EGL_MULTIVIEW_VIEW_COUNT_EXT	./GL/eglew.h	/^#define EGL_MULTIVIEW_VIEW_COUNT_EXT /;"	d
EGL_MUTABLE_RENDER_BUFFER_BIT_KHR	./GL/eglew.h	/^#define EGL_MUTABLE_RENDER_BUFFER_BIT_KHR /;"	d
EGL_NATIVE_BUFFER_ANDROID	./GL/eglew.h	/^#define EGL_NATIVE_BUFFER_ANDROID /;"	d
EGL_NATIVE_BUFFER_MULTIPLANE_SEPARATE_IMG	./GL/eglew.h	/^#define EGL_NATIVE_BUFFER_MULTIPLANE_SEPARATE_IMG /;"	d
EGL_NATIVE_BUFFER_PLANE_OFFSET_IMG	./GL/eglew.h	/^#define EGL_NATIVE_BUFFER_PLANE_OFFSET_IMG /;"	d
EGL_NATIVE_BUFFER_TIZEN	./GL/eglew.h	/^#define EGL_NATIVE_BUFFER_TIZEN /;"	d
EGL_NATIVE_BUFFER_USAGE_ANDROID	./GL/eglew.h	/^#define EGL_NATIVE_BUFFER_USAGE_ANDROID /;"	d
EGL_NATIVE_BUFFER_USAGE_PROTECTED_BIT_ANDROID	./GL/eglew.h	/^#define EGL_NATIVE_BUFFER_USAGE_PROTECTED_BIT_ANDROID /;"	d
EGL_NATIVE_BUFFER_USAGE_RENDERBUFFER_BIT_ANDROID	./GL/eglew.h	/^#define EGL_NATIVE_BUFFER_USAGE_RENDERBUFFER_BIT_ANDROID /;"	d
EGL_NATIVE_BUFFER_USAGE_TEXTURE_BIT_ANDROID	./GL/eglew.h	/^#define EGL_NATIVE_BUFFER_USAGE_TEXTURE_BIT_ANDROID /;"	d
EGL_NATIVE_PIXMAP_KHR	./GL/eglew.h	/^#define EGL_NATIVE_PIXMAP_KHR /;"	d
EGL_NATIVE_RENDERABLE	./GL/eglew.h	/^#define EGL_NATIVE_RENDERABLE /;"	d
EGL_NATIVE_SURFACE_TIZEN	./GL/eglew.h	/^#define EGL_NATIVE_SURFACE_TIZEN /;"	d
EGL_NATIVE_VISUAL_ID	./GL/eglew.h	/^#define EGL_NATIVE_VISUAL_ID /;"	d
EGL_NATIVE_VISUAL_TYPE	./GL/eglew.h	/^#define EGL_NATIVE_VISUAL_TYPE /;"	d
EGL_NOK_swap_region	./GL/eglew.h	/^#define EGL_NOK_swap_region /;"	d
EGL_NOK_swap_region2	./GL/eglew.h	/^#define EGL_NOK_swap_region2 /;"	d
EGL_NOK_texture_from_pixmap	./GL/eglew.h	/^#define EGL_NOK_texture_from_pixmap /;"	d
EGL_NONE	./GL/eglew.h	/^#define EGL_NONE /;"	d
EGL_NON_CONFORMANT_CONFIG	./GL/eglew.h	/^#define EGL_NON_CONFORMANT_CONFIG /;"	d
EGL_NOT_INITIALIZED	./GL/eglew.h	/^#define EGL_NOT_INITIALIZED /;"	d
EGL_NO_CONTEXT	./GL/eglew.h	/^#define EGL_NO_CONTEXT /;"	d
EGL_NO_DISPLAY	./GL/eglew.h	/^#define EGL_NO_DISPLAY /;"	d
EGL_NO_IMAGE	./GL/eglew.h	/^#define EGL_NO_IMAGE /;"	d
EGL_NO_RESET_NOTIFICATION	./GL/eglew.h	/^#define EGL_NO_RESET_NOTIFICATION /;"	d
EGL_NO_RESET_NOTIFICATION_EXT	./GL/eglew.h	/^#define EGL_NO_RESET_NOTIFICATION_EXT /;"	d
EGL_NO_RESET_NOTIFICATION_KHR	./GL/eglew.h	/^#define EGL_NO_RESET_NOTIFICATION_KHR /;"	d
EGL_NO_SURFACE	./GL/eglew.h	/^#define EGL_NO_SURFACE /;"	d
EGL_NO_SYNC	./GL/eglew.h	/^#define EGL_NO_SYNC /;"	d
EGL_NO_TEXTURE	./GL/eglew.h	/^#define EGL_NO_TEXTURE /;"	d
EGL_NV_3dvision_surface	./GL/eglew.h	/^#define EGL_NV_3dvision_surface /;"	d
EGL_NV_context_priority_realtime	./GL/eglew.h	/^#define EGL_NV_context_priority_realtime /;"	d
EGL_NV_coverage_sample	./GL/eglew.h	/^#define EGL_NV_coverage_sample /;"	d
EGL_NV_coverage_sample_resolve	./GL/eglew.h	/^#define EGL_NV_coverage_sample_resolve /;"	d
EGL_NV_cuda_event	./GL/eglew.h	/^#define EGL_NV_cuda_event /;"	d
EGL_NV_depth_nonlinear	./GL/eglew.h	/^#define EGL_NV_depth_nonlinear /;"	d
EGL_NV_device_cuda	./GL/eglew.h	/^#define EGL_NV_device_cuda /;"	d
EGL_NV_native_query	./GL/eglew.h	/^#define EGL_NV_native_query /;"	d
EGL_NV_post_convert_rounding	./GL/eglew.h	/^#define EGL_NV_post_convert_rounding /;"	d
EGL_NV_post_sub_buffer	./GL/eglew.h	/^#define EGL_NV_post_sub_buffer /;"	d
EGL_NV_quadruple_buffer	./GL/eglew.h	/^#define EGL_NV_quadruple_buffer /;"	d
EGL_NV_robustness_video_memory_purge	./GL/eglew.h	/^#define EGL_NV_robustness_video_memory_purge /;"	d
EGL_NV_stream_consumer_gltexture_yuv	./GL/eglew.h	/^#define EGL_NV_stream_consumer_gltexture_yuv /;"	d
EGL_NV_stream_cross_display	./GL/eglew.h	/^#define EGL_NV_stream_cross_display /;"	d
EGL_NV_stream_cross_object	./GL/eglew.h	/^#define EGL_NV_stream_cross_object /;"	d
EGL_NV_stream_cross_partition	./GL/eglew.h	/^#define EGL_NV_stream_cross_partition /;"	d
EGL_NV_stream_cross_process	./GL/eglew.h	/^#define EGL_NV_stream_cross_process /;"	d
EGL_NV_stream_cross_system	./GL/eglew.h	/^#define EGL_NV_stream_cross_system /;"	d
EGL_NV_stream_dma	./GL/eglew.h	/^#define EGL_NV_stream_dma /;"	d
EGL_NV_stream_fifo_next	./GL/eglew.h	/^#define EGL_NV_stream_fifo_next /;"	d
EGL_NV_stream_fifo_synchronous	./GL/eglew.h	/^#define EGL_NV_stream_fifo_synchronous /;"	d
EGL_NV_stream_flush	./GL/eglew.h	/^#define EGL_NV_stream_flush /;"	d
EGL_NV_stream_frame_limits	./GL/eglew.h	/^#define EGL_NV_stream_frame_limits /;"	d
EGL_NV_stream_metadata	./GL/eglew.h	/^#define EGL_NV_stream_metadata /;"	d
EGL_NV_stream_origin	./GL/eglew.h	/^#define EGL_NV_stream_origin /;"	d
EGL_NV_stream_remote	./GL/eglew.h	/^#define EGL_NV_stream_remote /;"	d
EGL_NV_stream_reset	./GL/eglew.h	/^#define EGL_NV_stream_reset /;"	d
EGL_NV_stream_socket	./GL/eglew.h	/^#define EGL_NV_stream_socket /;"	d
EGL_NV_stream_socket_inet	./GL/eglew.h	/^#define EGL_NV_stream_socket_inet /;"	d
EGL_NV_stream_socket_unix	./GL/eglew.h	/^#define EGL_NV_stream_socket_unix /;"	d
EGL_NV_stream_sync	./GL/eglew.h	/^#define EGL_NV_stream_sync /;"	d
EGL_NV_sync	./GL/eglew.h	/^#define EGL_NV_sync /;"	d
EGL_NV_system_time	./GL/eglew.h	/^#define EGL_NV_system_time /;"	d
EGL_NV_triple_buffer	./GL/eglew.h	/^#define EGL_NV_triple_buffer /;"	d
EGL_OBJECT_CONTEXT_KHR	./GL/eglew.h	/^#define EGL_OBJECT_CONTEXT_KHR /;"	d
EGL_OBJECT_DISPLAY_KHR	./GL/eglew.h	/^#define EGL_OBJECT_DISPLAY_KHR /;"	d
EGL_OBJECT_IMAGE_KHR	./GL/eglew.h	/^#define EGL_OBJECT_IMAGE_KHR /;"	d
EGL_OBJECT_STREAM_KHR	./GL/eglew.h	/^#define EGL_OBJECT_STREAM_KHR /;"	d
EGL_OBJECT_SURFACE_KHR	./GL/eglew.h	/^#define EGL_OBJECT_SURFACE_KHR /;"	d
EGL_OBJECT_SYNC_KHR	./GL/eglew.h	/^#define EGL_OBJECT_SYNC_KHR /;"	d
EGL_OBJECT_THREAD_KHR	./GL/eglew.h	/^#define EGL_OBJECT_THREAD_KHR /;"	d
EGL_OPENGL_API	./GL/eglew.h	/^#define EGL_OPENGL_API /;"	d
EGL_OPENGL_BIT	./GL/eglew.h	/^#define EGL_OPENGL_BIT /;"	d
EGL_OPENGL_ES2_BIT	./GL/eglew.h	/^#define EGL_OPENGL_ES2_BIT /;"	d
EGL_OPENGL_ES3_BIT	./GL/eglew.h	/^#define EGL_OPENGL_ES3_BIT /;"	d
EGL_OPENGL_ES3_BIT_KHR	./GL/eglew.h	/^#define EGL_OPENGL_ES3_BIT_KHR /;"	d
EGL_OPENGL_ES_API	./GL/eglew.h	/^#define EGL_OPENGL_ES_API /;"	d
EGL_OPENGL_ES_BIT	./GL/eglew.h	/^#define EGL_OPENGL_ES_BIT /;"	d
EGL_OPENVG_API	./GL/eglew.h	/^#define EGL_OPENVG_API /;"	d
EGL_OPENVG_BIT	./GL/eglew.h	/^#define EGL_OPENVG_BIT /;"	d
EGL_OPENVG_IMAGE	./GL/eglew.h	/^#define EGL_OPENVG_IMAGE /;"	d
EGL_OPENWF_DEVICE_ID_EXT	./GL/eglew.h	/^#define EGL_OPENWF_DEVICE_ID_EXT /;"	d
EGL_OPENWF_PIPELINE_ID_EXT	./GL/eglew.h	/^#define EGL_OPENWF_PIPELINE_ID_EXT /;"	d
EGL_OPENWF_PORT_ID_EXT	./GL/eglew.h	/^#define EGL_OPENWF_PORT_ID_EXT /;"	d
EGL_OPTIMAL_FORMAT_BIT_KHR	./GL/eglew.h	/^#define EGL_OPTIMAL_FORMAT_BIT_KHR /;"	d
EGL_PBUFFER_BIT	./GL/eglew.h	/^#define EGL_PBUFFER_BIT /;"	d
EGL_PENDING_FRAME_NV	./GL/eglew.h	/^#define EGL_PENDING_FRAME_NV /;"	d
EGL_PENDING_METADATA_NV	./GL/eglew.h	/^#define EGL_PENDING_METADATA_NV /;"	d
EGL_PIXEL_ASPECT_RATIO	./GL/eglew.h	/^#define EGL_PIXEL_ASPECT_RATIO /;"	d
EGL_PIXMAP_BIT	./GL/eglew.h	/^#define EGL_PIXMAP_BIT /;"	d
EGL_PLATFORM_ANDROID_KHR	./GL/eglew.h	/^#define EGL_PLATFORM_ANDROID_KHR /;"	d
EGL_PLATFORM_DEVICE_EXT	./GL/eglew.h	/^#define EGL_PLATFORM_DEVICE_EXT /;"	d
EGL_PLATFORM_GBM_KHR	./GL/eglew.h	/^#define EGL_PLATFORM_GBM_KHR /;"	d
EGL_PLATFORM_GBM_MESA	./GL/eglew.h	/^#define EGL_PLATFORM_GBM_MESA /;"	d
EGL_PLATFORM_SURFACELESS_MESA	./GL/eglew.h	/^#define EGL_PLATFORM_SURFACELESS_MESA /;"	d
EGL_PLATFORM_WAYLAND_EXT	./GL/eglew.h	/^#define EGL_PLATFORM_WAYLAND_EXT /;"	d
EGL_PLATFORM_WAYLAND_KHR	./GL/eglew.h	/^#define EGL_PLATFORM_WAYLAND_KHR /;"	d
EGL_PLATFORM_X11_EXT	./GL/eglew.h	/^#define EGL_PLATFORM_X11_EXT /;"	d
EGL_PLATFORM_X11_KHR	./GL/eglew.h	/^#define EGL_PLATFORM_X11_KHR /;"	d
EGL_PLATFORM_X11_SCREEN_EXT	./GL/eglew.h	/^#define EGL_PLATFORM_X11_SCREEN_EXT /;"	d
EGL_PLATFORM_X11_SCREEN_KHR	./GL/eglew.h	/^#define EGL_PLATFORM_X11_SCREEN_KHR /;"	d
EGL_POST_SUB_BUFFER_SUPPORTED_NV	./GL/eglew.h	/^#define EGL_POST_SUB_BUFFER_SUPPORTED_NV /;"	d
EGL_PRIMARY_COMPOSITOR_CONTEXT_EXT	./GL/eglew.h	/^#define EGL_PRIMARY_COMPOSITOR_CONTEXT_EXT /;"	d
EGL_PRODUCER_AUTO_ORIENTATION_NV	./GL/eglew.h	/^#define EGL_PRODUCER_AUTO_ORIENTATION_NV /;"	d
EGL_PRODUCER_FRAME_KHR	./GL/eglew.h	/^#define EGL_PRODUCER_FRAME_KHR /;"	d
EGL_PRODUCER_MAX_FRAME_HINT_NV	./GL/eglew.h	/^#define EGL_PRODUCER_MAX_FRAME_HINT_NV /;"	d
EGL_PRODUCER_METADATA_NV	./GL/eglew.h	/^#define EGL_PRODUCER_METADATA_NV /;"	d
EGL_PROTECTED_CONTENT_EXT	./GL/eglew.h	/^#define EGL_PROTECTED_CONTENT_EXT /;"	d
EGL_QUADRUPLE_BUFFER_NV	./GL/eglew.h	/^#define EGL_QUADRUPLE_BUFFER_NV /;"	d
EGL_READ	./GL/eglew.h	/^#define EGL_READ /;"	d
EGL_READS_DONE_TIME_ANDROID	./GL/eglew.h	/^#define EGL_READS_DONE_TIME_ANDROID /;"	d
EGL_READ_SURFACE_BIT_KHR	./GL/eglew.h	/^#define EGL_READ_SURFACE_BIT_KHR /;"	d
EGL_RECORDABLE_ANDROID	./GL/eglew.h	/^#define EGL_RECORDABLE_ANDROID /;"	d
EGL_RED_SIZE	./GL/eglew.h	/^#define EGL_RED_SIZE /;"	d
EGL_RENDERABLE_TYPE	./GL/eglew.h	/^#define EGL_RENDERABLE_TYPE /;"	d
EGL_RENDERING_COMPLETE_TIME_ANDROID	./GL/eglew.h	/^#define EGL_RENDERING_COMPLETE_TIME_ANDROID /;"	d
EGL_RENDER_BUFFER	./GL/eglew.h	/^#define EGL_RENDER_BUFFER /;"	d
EGL_REQUESTED_PRESENT_TIME_ANDROID	./GL/eglew.h	/^#define EGL_REQUESTED_PRESENT_TIME_ANDROID /;"	d
EGL_RGB_BUFFER	./GL/eglew.h	/^#define EGL_RGB_BUFFER /;"	d
EGL_RIGHT_NV	./GL/eglew.h	/^#define EGL_RIGHT_NV /;"	d
EGL_SAMPLES	./GL/eglew.h	/^#define EGL_SAMPLES /;"	d
EGL_SAMPLE_BUFFERS	./GL/eglew.h	/^#define EGL_SAMPLE_BUFFERS /;"	d
EGL_SAMPLE_RANGE_HINT_EXT	./GL/eglew.h	/^#define EGL_SAMPLE_RANGE_HINT_EXT /;"	d
EGL_SIGNALED	./GL/eglew.h	/^#define EGL_SIGNALED /;"	d
EGL_SIGNALED_KHR	./GL/eglew.h	/^#define EGL_SIGNALED_KHR /;"	d
EGL_SIGNALED_NV	./GL/eglew.h	/^#define EGL_SIGNALED_NV /;"	d
EGL_SINGLE_BUFFER	./GL/eglew.h	/^#define EGL_SINGLE_BUFFER /;"	d
EGL_SLOW_CONFIG	./GL/eglew.h	/^#define EGL_SLOW_CONFIG /;"	d
EGL_SMPTE2086_DISPLAY_PRIMARY_BX_EXT	./GL/eglew.h	/^#define EGL_SMPTE2086_DISPLAY_PRIMARY_BX_EXT /;"	d
EGL_SMPTE2086_DISPLAY_PRIMARY_BY_EXT	./GL/eglew.h	/^#define EGL_SMPTE2086_DISPLAY_PRIMARY_BY_EXT /;"	d
EGL_SMPTE2086_DISPLAY_PRIMARY_GX_EXT	./GL/eglew.h	/^#define EGL_SMPTE2086_DISPLAY_PRIMARY_GX_EXT /;"	d
EGL_SMPTE2086_DISPLAY_PRIMARY_GY_EXT	./GL/eglew.h	/^#define EGL_SMPTE2086_DISPLAY_PRIMARY_GY_EXT /;"	d
EGL_SMPTE2086_DISPLAY_PRIMARY_RX_EXT	./GL/eglew.h	/^#define EGL_SMPTE2086_DISPLAY_PRIMARY_RX_EXT /;"	d
EGL_SMPTE2086_DISPLAY_PRIMARY_RY_EXT	./GL/eglew.h	/^#define EGL_SMPTE2086_DISPLAY_PRIMARY_RY_EXT /;"	d
EGL_SMPTE2086_MAX_LUMINANCE_EXT	./GL/eglew.h	/^#define EGL_SMPTE2086_MAX_LUMINANCE_EXT /;"	d
EGL_SMPTE2086_MIN_LUMINANCE_EXT	./GL/eglew.h	/^#define EGL_SMPTE2086_MIN_LUMINANCE_EXT /;"	d
EGL_SMPTE2086_WHITE_POINT_X_EXT	./GL/eglew.h	/^#define EGL_SMPTE2086_WHITE_POINT_X_EXT /;"	d
EGL_SMPTE2086_WHITE_POINT_Y_EXT	./GL/eglew.h	/^#define EGL_SMPTE2086_WHITE_POINT_Y_EXT /;"	d
EGL_SOCKET_HANDLE_NV	./GL/eglew.h	/^#define EGL_SOCKET_HANDLE_NV /;"	d
EGL_SOCKET_TYPE_INET_NV	./GL/eglew.h	/^#define EGL_SOCKET_TYPE_INET_NV /;"	d
EGL_SOCKET_TYPE_NV	./GL/eglew.h	/^#define EGL_SOCKET_TYPE_NV /;"	d
EGL_SOCKET_TYPE_UNIX_NV	./GL/eglew.h	/^#define EGL_SOCKET_TYPE_UNIX_NV /;"	d
EGL_STENCIL_SIZE	./GL/eglew.h	/^#define EGL_STENCIL_SIZE /;"	d
EGL_STREAM_BIT_KHR	./GL/eglew.h	/^#define EGL_STREAM_BIT_KHR /;"	d
EGL_STREAM_CONSUMER_NV	./GL/eglew.h	/^#define EGL_STREAM_CONSUMER_NV /;"	d
EGL_STREAM_CROSS_DISPLAY_NV	./GL/eglew.h	/^#define EGL_STREAM_CROSS_DISPLAY_NV /;"	d
EGL_STREAM_CROSS_OBJECT_NV	./GL/eglew.h	/^#define EGL_STREAM_CROSS_OBJECT_NV /;"	d
EGL_STREAM_CROSS_PARTITION_NV	./GL/eglew.h	/^#define EGL_STREAM_CROSS_PARTITION_NV /;"	d
EGL_STREAM_CROSS_PROCESS_NV	./GL/eglew.h	/^#define EGL_STREAM_CROSS_PROCESS_NV /;"	d
EGL_STREAM_CROSS_SYSTEM_NV	./GL/eglew.h	/^#define EGL_STREAM_CROSS_SYSTEM_NV /;"	d
EGL_STREAM_DMA_NV	./GL/eglew.h	/^#define EGL_STREAM_DMA_NV /;"	d
EGL_STREAM_DMA_SERVER_NV	./GL/eglew.h	/^#define EGL_STREAM_DMA_SERVER_NV /;"	d
EGL_STREAM_ENDPOINT_NV	./GL/eglew.h	/^#define EGL_STREAM_ENDPOINT_NV /;"	d
EGL_STREAM_FIFO_LENGTH_KHR	./GL/eglew.h	/^#define EGL_STREAM_FIFO_LENGTH_KHR /;"	d
EGL_STREAM_FIFO_SYNCHRONOUS_NV	./GL/eglew.h	/^#define EGL_STREAM_FIFO_SYNCHRONOUS_NV /;"	d
EGL_STREAM_FRAME_MAJOR_AXIS_NV	./GL/eglew.h	/^#define EGL_STREAM_FRAME_MAJOR_AXIS_NV /;"	d
EGL_STREAM_FRAME_ORIGIN_X_NV	./GL/eglew.h	/^#define EGL_STREAM_FRAME_ORIGIN_X_NV /;"	d
EGL_STREAM_FRAME_ORIGIN_Y_NV	./GL/eglew.h	/^#define EGL_STREAM_FRAME_ORIGIN_Y_NV /;"	d
EGL_STREAM_LOCAL_NV	./GL/eglew.h	/^#define EGL_STREAM_LOCAL_NV /;"	d
EGL_STREAM_PRODUCER_NV	./GL/eglew.h	/^#define EGL_STREAM_PRODUCER_NV /;"	d
EGL_STREAM_PROTOCOL_FD_NV	./GL/eglew.h	/^#define EGL_STREAM_PROTOCOL_FD_NV /;"	d
EGL_STREAM_PROTOCOL_NV	./GL/eglew.h	/^#define EGL_STREAM_PROTOCOL_NV /;"	d
EGL_STREAM_PROTOCOL_SOCKET_NV	./GL/eglew.h	/^#define EGL_STREAM_PROTOCOL_SOCKET_NV /;"	d
EGL_STREAM_STATE_CONNECTING_KHR	./GL/eglew.h	/^#define EGL_STREAM_STATE_CONNECTING_KHR /;"	d
EGL_STREAM_STATE_CREATED_KHR	./GL/eglew.h	/^#define EGL_STREAM_STATE_CREATED_KHR /;"	d
EGL_STREAM_STATE_DISCONNECTED_KHR	./GL/eglew.h	/^#define EGL_STREAM_STATE_DISCONNECTED_KHR /;"	d
EGL_STREAM_STATE_EMPTY_KHR	./GL/eglew.h	/^#define EGL_STREAM_STATE_EMPTY_KHR /;"	d
EGL_STREAM_STATE_INITIALIZING_NV	./GL/eglew.h	/^#define EGL_STREAM_STATE_INITIALIZING_NV /;"	d
EGL_STREAM_STATE_KHR	./GL/eglew.h	/^#define EGL_STREAM_STATE_KHR /;"	d
EGL_STREAM_STATE_NEW_FRAME_AVAILABLE_KHR	./GL/eglew.h	/^#define EGL_STREAM_STATE_NEW_FRAME_AVAILABLE_KHR /;"	d
EGL_STREAM_STATE_OLD_FRAME_AVAILABLE_KHR	./GL/eglew.h	/^#define EGL_STREAM_STATE_OLD_FRAME_AVAILABLE_KHR /;"	d
EGL_STREAM_TIME_CONSUMER_KHR	./GL/eglew.h	/^#define EGL_STREAM_TIME_CONSUMER_KHR /;"	d
EGL_STREAM_TIME_NOW_KHR	./GL/eglew.h	/^#define EGL_STREAM_TIME_NOW_KHR /;"	d
EGL_STREAM_TIME_PENDING_NV	./GL/eglew.h	/^#define EGL_STREAM_TIME_PENDING_NV /;"	d
EGL_STREAM_TIME_PRODUCER_KHR	./GL/eglew.h	/^#define EGL_STREAM_TIME_PRODUCER_KHR /;"	d
EGL_STREAM_TYPE_NV	./GL/eglew.h	/^#define EGL_STREAM_TYPE_NV /;"	d
EGL_SUCCESS	./GL/eglew.h	/^#define EGL_SUCCESS /;"	d
EGL_SUPPORT_RESET_NV	./GL/eglew.h	/^#define EGL_SUPPORT_RESET_NV /;"	d
EGL_SUPPORT_REUSE_NV	./GL/eglew.h	/^#define EGL_SUPPORT_REUSE_NV /;"	d
EGL_SURFACE_TYPE	./GL/eglew.h	/^#define EGL_SURFACE_TYPE /;"	d
EGL_SWAP_BEHAVIOR	./GL/eglew.h	/^#define EGL_SWAP_BEHAVIOR /;"	d
EGL_SWAP_BEHAVIOR_PRESERVED_BIT	./GL/eglew.h	/^#define EGL_SWAP_BEHAVIOR_PRESERVED_BIT /;"	d
EGL_SWAP_INTERVAL_EXT	./GL/eglew.h	/^#define EGL_SWAP_INTERVAL_EXT /;"	d
EGL_SYNC_CLIENT_EXT	./GL/eglew.h	/^#define EGL_SYNC_CLIENT_EXT /;"	d
EGL_SYNC_CLIENT_SIGNAL_EXT	./GL/eglew.h	/^#define EGL_SYNC_CLIENT_SIGNAL_EXT /;"	d
EGL_SYNC_CL_EVENT	./GL/eglew.h	/^#define EGL_SYNC_CL_EVENT /;"	d
EGL_SYNC_CL_EVENT_COMPLETE	./GL/eglew.h	/^#define EGL_SYNC_CL_EVENT_COMPLETE /;"	d
EGL_SYNC_CL_EVENT_COMPLETE_KHR	./GL/eglew.h	/^#define EGL_SYNC_CL_EVENT_COMPLETE_KHR /;"	d
EGL_SYNC_CL_EVENT_KHR	./GL/eglew.h	/^#define EGL_SYNC_CL_EVENT_KHR /;"	d
EGL_SYNC_CONDITION	./GL/eglew.h	/^#define EGL_SYNC_CONDITION /;"	d
EGL_SYNC_CONDITION_KHR	./GL/eglew.h	/^#define EGL_SYNC_CONDITION_KHR /;"	d
EGL_SYNC_CONDITION_NV	./GL/eglew.h	/^#define EGL_SYNC_CONDITION_NV /;"	d
EGL_SYNC_CUDA_EVENT_COMPLETE_NV	./GL/eglew.h	/^#define EGL_SYNC_CUDA_EVENT_COMPLETE_NV /;"	d
EGL_SYNC_CUDA_EVENT_NV	./GL/eglew.h	/^#define EGL_SYNC_CUDA_EVENT_NV /;"	d
EGL_SYNC_FENCE	./GL/eglew.h	/^#define EGL_SYNC_FENCE /;"	d
EGL_SYNC_FENCE_KHR	./GL/eglew.h	/^#define EGL_SYNC_FENCE_KHR /;"	d
EGL_SYNC_FENCE_NV	./GL/eglew.h	/^#define EGL_SYNC_FENCE_NV /;"	d
EGL_SYNC_FLUSH_COMMANDS_BIT	./GL/eglew.h	/^#define EGL_SYNC_FLUSH_COMMANDS_BIT /;"	d
EGL_SYNC_FLUSH_COMMANDS_BIT_KHR	./GL/eglew.h	/^#define EGL_SYNC_FLUSH_COMMANDS_BIT_KHR /;"	d
EGL_SYNC_FLUSH_COMMANDS_BIT_NV	./GL/eglew.h	/^#define EGL_SYNC_FLUSH_COMMANDS_BIT_NV /;"	d
EGL_SYNC_NATIVE_FENCE_ANDROID	./GL/eglew.h	/^#define EGL_SYNC_NATIVE_FENCE_ANDROID /;"	d
EGL_SYNC_NATIVE_FENCE_FD_ANDROID	./GL/eglew.h	/^#define EGL_SYNC_NATIVE_FENCE_FD_ANDROID /;"	d
EGL_SYNC_NATIVE_FENCE_SIGNALED_ANDROID	./GL/eglew.h	/^#define EGL_SYNC_NATIVE_FENCE_SIGNALED_ANDROID /;"	d
EGL_SYNC_NEW_FRAME_NV	./GL/eglew.h	/^#define EGL_SYNC_NEW_FRAME_NV /;"	d
EGL_SYNC_PRIOR_COMMANDS_COMPLETE	./GL/eglew.h	/^#define EGL_SYNC_PRIOR_COMMANDS_COMPLETE /;"	d
EGL_SYNC_PRIOR_COMMANDS_COMPLETE_KHR	./GL/eglew.h	/^#define EGL_SYNC_PRIOR_COMMANDS_COMPLETE_KHR /;"	d
EGL_SYNC_PRIOR_COMMANDS_COMPLETE_NV	./GL/eglew.h	/^#define EGL_SYNC_PRIOR_COMMANDS_COMPLETE_NV /;"	d
EGL_SYNC_PRIOR_COMMANDS_IMPLICIT_EXTERNAL_ARM	./GL/eglew.h	/^#define EGL_SYNC_PRIOR_COMMANDS_IMPLICIT_EXTERNAL_ARM /;"	d
EGL_SYNC_REUSABLE_KHR	./GL/eglew.h	/^#define EGL_SYNC_REUSABLE_KHR /;"	d
EGL_SYNC_STATUS	./GL/eglew.h	/^#define EGL_SYNC_STATUS /;"	d
EGL_SYNC_STATUS_KHR	./GL/eglew.h	/^#define EGL_SYNC_STATUS_KHR /;"	d
EGL_SYNC_STATUS_NV	./GL/eglew.h	/^#define EGL_SYNC_STATUS_NV /;"	d
EGL_SYNC_TYPE	./GL/eglew.h	/^#define EGL_SYNC_TYPE /;"	d
EGL_SYNC_TYPE_KHR	./GL/eglew.h	/^#define EGL_SYNC_TYPE_KHR /;"	d
EGL_SYNC_TYPE_NV	./GL/eglew.h	/^#define EGL_SYNC_TYPE_NV /;"	d
EGL_TEXTURE_2D	./GL/eglew.h	/^#define EGL_TEXTURE_2D /;"	d
EGL_TEXTURE_EXTERNAL_WL	./GL/eglew.h	/^#define EGL_TEXTURE_EXTERNAL_WL /;"	d
EGL_TEXTURE_FORMAT	./GL/eglew.h	/^#define EGL_TEXTURE_FORMAT /;"	d
EGL_TEXTURE_RGB	./GL/eglew.h	/^#define EGL_TEXTURE_RGB /;"	d
EGL_TEXTURE_RGBA	./GL/eglew.h	/^#define EGL_TEXTURE_RGBA /;"	d
EGL_TEXTURE_TARGET	./GL/eglew.h	/^#define EGL_TEXTURE_TARGET /;"	d
EGL_TEXTURE_Y_UV_WL	./GL/eglew.h	/^#define EGL_TEXTURE_Y_UV_WL /;"	d
EGL_TEXTURE_Y_U_V_WL	./GL/eglew.h	/^#define EGL_TEXTURE_Y_U_V_WL /;"	d
EGL_TEXTURE_Y_XUXV_WL	./GL/eglew.h	/^#define EGL_TEXTURE_Y_XUXV_WL /;"	d
EGL_TIMEOUT_EXPIRED	./GL/eglew.h	/^#define EGL_TIMEOUT_EXPIRED /;"	d
EGL_TIMEOUT_EXPIRED_KHR	./GL/eglew.h	/^#define EGL_TIMEOUT_EXPIRED_KHR /;"	d
EGL_TIMEOUT_EXPIRED_NV	./GL/eglew.h	/^#define EGL_TIMEOUT_EXPIRED_NV /;"	d
EGL_TIMESTAMPS_ANDROID	./GL/eglew.h	/^#define EGL_TIMESTAMPS_ANDROID /;"	d
EGL_TIZEN_image_native_buffer	./GL/eglew.h	/^#define EGL_TIZEN_image_native_buffer /;"	d
EGL_TIZEN_image_native_surface	./GL/eglew.h	/^#define EGL_TIZEN_image_native_surface /;"	d
EGL_TOP_NV	./GL/eglew.h	/^#define EGL_TOP_NV /;"	d
EGL_TRACK_REFERENCES_KHR	./GL/eglew.h	/^#define EGL_TRACK_REFERENCES_KHR /;"	d
EGL_TRANSPARENT_BLUE_VALUE	./GL/eglew.h	/^#define EGL_TRANSPARENT_BLUE_VALUE /;"	d
EGL_TRANSPARENT_GREEN_VALUE	./GL/eglew.h	/^#define EGL_TRANSPARENT_GREEN_VALUE /;"	d
EGL_TRANSPARENT_RED_VALUE	./GL/eglew.h	/^#define EGL_TRANSPARENT_RED_VALUE /;"	d
EGL_TRANSPARENT_RGB	./GL/eglew.h	/^#define EGL_TRANSPARENT_RGB /;"	d
EGL_TRANSPARENT_TYPE	./GL/eglew.h	/^#define EGL_TRANSPARENT_TYPE /;"	d
EGL_TRIPLE_BUFFER_NV	./GL/eglew.h	/^#define EGL_TRIPLE_BUFFER_NV /;"	d
EGL_TRUE	./GL/eglew.h	/^#define EGL_TRUE /;"	d
EGL_UNKNOWN	./GL/eglew.h	/^#define EGL_UNKNOWN /;"	d
EGL_UNSIGNALED	./GL/eglew.h	/^#define EGL_UNSIGNALED /;"	d
EGL_UNSIGNALED_KHR	./GL/eglew.h	/^#define EGL_UNSIGNALED_KHR /;"	d
EGL_UNSIGNALED_NV	./GL/eglew.h	/^#define EGL_UNSIGNALED_NV /;"	d
EGL_UPPER_LEFT_KHR	./GL/eglew.h	/^#define EGL_UPPER_LEFT_KHR /;"	d
EGL_VENDOR	./GL/eglew.h	/^#define EGL_VENDOR /;"	d
EGL_VERSION	./GL/eglew.h	/^#define EGL_VERSION /;"	d
EGL_VERSION_1_0	./GL/eglew.h	/^#define EGL_VERSION_1_0 /;"	d
EGL_VERSION_1_1	./GL/eglew.h	/^#define EGL_VERSION_1_1 /;"	d
EGL_VERSION_1_2	./GL/eglew.h	/^#define EGL_VERSION_1_2 /;"	d
EGL_VERSION_1_3	./GL/eglew.h	/^#define EGL_VERSION_1_3 /;"	d
EGL_VERSION_1_4	./GL/eglew.h	/^#define EGL_VERSION_1_4 /;"	d
EGL_VERSION_1_5	./GL/eglew.h	/^#define EGL_VERSION_1_5 /;"	d
EGL_VERTICAL_RESOLUTION	./GL/eglew.h	/^#define EGL_VERTICAL_RESOLUTION /;"	d
EGL_VG_ALPHA_FORMAT	./GL/eglew.h	/^#define EGL_VG_ALPHA_FORMAT /;"	d
EGL_VG_ALPHA_FORMAT_NONPRE	./GL/eglew.h	/^#define EGL_VG_ALPHA_FORMAT_NONPRE /;"	d
EGL_VG_ALPHA_FORMAT_PRE	./GL/eglew.h	/^#define EGL_VG_ALPHA_FORMAT_PRE /;"	d
EGL_VG_ALPHA_FORMAT_PRE_BIT	./GL/eglew.h	/^#define EGL_VG_ALPHA_FORMAT_PRE_BIT /;"	d
EGL_VG_ALPHA_FORMAT_PRE_BIT_KHR	./GL/eglew.h	/^#define EGL_VG_ALPHA_FORMAT_PRE_BIT_KHR /;"	d
EGL_VG_COLORSPACE	./GL/eglew.h	/^#define EGL_VG_COLORSPACE /;"	d
EGL_VG_COLORSPACE_LINEAR	./GL/eglew.h	/^#define EGL_VG_COLORSPACE_LINEAR /;"	d
EGL_VG_COLORSPACE_LINEAR_BIT	./GL/eglew.h	/^#define EGL_VG_COLORSPACE_LINEAR_BIT /;"	d
EGL_VG_COLORSPACE_LINEAR_BIT_KHR	./GL/eglew.h	/^#define EGL_VG_COLORSPACE_LINEAR_BIT_KHR /;"	d
EGL_VG_PARENT_IMAGE_KHR	./GL/eglew.h	/^#define EGL_VG_PARENT_IMAGE_KHR /;"	d
EGL_WAYLAND_BUFFER_WL	./GL/eglew.h	/^#define EGL_WAYLAND_BUFFER_WL /;"	d
EGL_WAYLAND_PLANE_WL	./GL/eglew.h	/^#define EGL_WAYLAND_PLANE_WL /;"	d
EGL_WAYLAND_Y_INVERTED_WL	./GL/eglew.h	/^#define EGL_WAYLAND_Y_INVERTED_WL /;"	d
EGL_WIDTH	./GL/eglew.h	/^#define EGL_WIDTH /;"	d
EGL_WINDOW_BIT	./GL/eglew.h	/^#define EGL_WINDOW_BIT /;"	d
EGL_WL_bind_wayland_display	./GL/eglew.h	/^#define EGL_WL_bind_wayland_display /;"	d
EGL_WL_create_wayland_buffer_from_image	./GL/eglew.h	/^#define EGL_WL_create_wayland_buffer_from_image /;"	d
EGL_WRITE_SURFACE_BIT_KHR	./GL/eglew.h	/^#define EGL_WRITE_SURFACE_BIT_KHR /;"	d
EGL_X_AXIS_NV	./GL/eglew.h	/^#define EGL_X_AXIS_NV /;"	d
EGL_YUV_BUFFER_EXT	./GL/eglew.h	/^#define EGL_YUV_BUFFER_EXT /;"	d
EGL_YUV_CHROMA_HORIZONTAL_SITING_HINT_EXT	./GL/eglew.h	/^#define EGL_YUV_CHROMA_HORIZONTAL_SITING_HINT_EXT /;"	d
EGL_YUV_CHROMA_SITING_0_5_EXT	./GL/eglew.h	/^#define EGL_YUV_CHROMA_SITING_0_5_EXT /;"	d
EGL_YUV_CHROMA_SITING_0_EXT	./GL/eglew.h	/^#define EGL_YUV_CHROMA_SITING_0_EXT /;"	d
EGL_YUV_CHROMA_VERTICAL_SITING_HINT_EXT	./GL/eglew.h	/^#define EGL_YUV_CHROMA_VERTICAL_SITING_HINT_EXT /;"	d
EGL_YUV_COLOR_SPACE_HINT_EXT	./GL/eglew.h	/^#define EGL_YUV_COLOR_SPACE_HINT_EXT /;"	d
EGL_YUV_CSC_STANDARD_2020_EXT	./GL/eglew.h	/^#define EGL_YUV_CSC_STANDARD_2020_EXT /;"	d
EGL_YUV_CSC_STANDARD_601_EXT	./GL/eglew.h	/^#define EGL_YUV_CSC_STANDARD_601_EXT /;"	d
EGL_YUV_CSC_STANDARD_709_EXT	./GL/eglew.h	/^#define EGL_YUV_CSC_STANDARD_709_EXT /;"	d
EGL_YUV_CSC_STANDARD_EXT	./GL/eglew.h	/^#define EGL_YUV_CSC_STANDARD_EXT /;"	d
EGL_YUV_DEPTH_RANGE_EXT	./GL/eglew.h	/^#define EGL_YUV_DEPTH_RANGE_EXT /;"	d
EGL_YUV_DEPTH_RANGE_FULL_EXT	./GL/eglew.h	/^#define EGL_YUV_DEPTH_RANGE_FULL_EXT /;"	d
EGL_YUV_DEPTH_RANGE_LIMITED_EXT	./GL/eglew.h	/^#define EGL_YUV_DEPTH_RANGE_LIMITED_EXT /;"	d
EGL_YUV_FULL_RANGE_EXT	./GL/eglew.h	/^#define EGL_YUV_FULL_RANGE_EXT /;"	d
EGL_YUV_NARROW_RANGE_EXT	./GL/eglew.h	/^#define EGL_YUV_NARROW_RANGE_EXT /;"	d
EGL_YUV_NUMBER_OF_PLANES_EXT	./GL/eglew.h	/^#define EGL_YUV_NUMBER_OF_PLANES_EXT /;"	d
EGL_YUV_ORDER_AYUV_EXT	./GL/eglew.h	/^#define EGL_YUV_ORDER_AYUV_EXT /;"	d
EGL_YUV_ORDER_EXT	./GL/eglew.h	/^#define EGL_YUV_ORDER_EXT /;"	d
EGL_YUV_ORDER_UYVY_EXT	./GL/eglew.h	/^#define EGL_YUV_ORDER_UYVY_EXT /;"	d
EGL_YUV_ORDER_VYUY_EXT	./GL/eglew.h	/^#define EGL_YUV_ORDER_VYUY_EXT /;"	d
EGL_YUV_ORDER_YUV_EXT	./GL/eglew.h	/^#define EGL_YUV_ORDER_YUV_EXT /;"	d
EGL_YUV_ORDER_YUYV_EXT	./GL/eglew.h	/^#define EGL_YUV_ORDER_YUYV_EXT /;"	d
EGL_YUV_ORDER_YVU_EXT	./GL/eglew.h	/^#define EGL_YUV_ORDER_YVU_EXT /;"	d
EGL_YUV_ORDER_YVYU_EXT	./GL/eglew.h	/^#define EGL_YUV_ORDER_YVYU_EXT /;"	d
EGL_YUV_PLANE0_TEXTURE_UNIT_NV	./GL/eglew.h	/^#define EGL_YUV_PLANE0_TEXTURE_UNIT_NV /;"	d
EGL_YUV_PLANE1_TEXTURE_UNIT_NV	./GL/eglew.h	/^#define EGL_YUV_PLANE1_TEXTURE_UNIT_NV /;"	d
EGL_YUV_PLANE2_TEXTURE_UNIT_NV	./GL/eglew.h	/^#define EGL_YUV_PLANE2_TEXTURE_UNIT_NV /;"	d
EGL_YUV_PLANE_BPP_0_EXT	./GL/eglew.h	/^#define EGL_YUV_PLANE_BPP_0_EXT /;"	d
EGL_YUV_PLANE_BPP_10_EXT	./GL/eglew.h	/^#define EGL_YUV_PLANE_BPP_10_EXT /;"	d
EGL_YUV_PLANE_BPP_8_EXT	./GL/eglew.h	/^#define EGL_YUV_PLANE_BPP_8_EXT /;"	d
EGL_YUV_PLANE_BPP_EXT	./GL/eglew.h	/^#define EGL_YUV_PLANE_BPP_EXT /;"	d
EGL_YUV_SUBSAMPLE_4_2_0_EXT	./GL/eglew.h	/^#define EGL_YUV_SUBSAMPLE_4_2_0_EXT /;"	d
EGL_YUV_SUBSAMPLE_4_2_2_EXT	./GL/eglew.h	/^#define EGL_YUV_SUBSAMPLE_4_2_2_EXT /;"	d
EGL_YUV_SUBSAMPLE_4_4_4_EXT	./GL/eglew.h	/^#define EGL_YUV_SUBSAMPLE_4_4_4_EXT /;"	d
EGL_YUV_SUBSAMPLE_EXT	./GL/eglew.h	/^#define EGL_YUV_SUBSAMPLE_EXT /;"	d
EGL_Y_AXIS_NV	./GL/eglew.h	/^#define EGL_Y_AXIS_NV /;"	d
EGL_Y_INVERTED_NOK	./GL/eglew.h	/^#define EGL_Y_INVERTED_NOK /;"	d
EGLenum	./GL/eglew.h	/^typedef unsigned int EGLenum;$/;"	t	typeref:typename:unsigned int
EGLint	./GL/eglew.h	/^typedef int32_t EGLint;$/;"	t	typeref:typename:int32_t
EGLnsecsANDROID	./GL/eglew.h	/^typedef khronos_stime_nanoseconds_t EGLnsecsANDROID;$/;"	t	typeref:typename:khronos_stime_nanoseconds_t
EGLsizeiANDROID	./GL/eglew.h	/^typedef khronos_ssize_t EGLsizeiANDROID;$/;"	t	typeref:typename:khronos_ssize_t
EGLuint64KHR	./GL/eglew.h	/^typedef khronos_uint64_t EGLuint64KHR;$/;"	t	typeref:typename:khronos_uint64_t
EGLuint64NV	./GL/eglew.h	/^typedef khronos_utime_nanoseconds_t EGLuint64NV;$/;"	t	typeref:typename:khronos_utime_nanoseconds_t
ERROR_INCOMPATIBLE_DEVICE_CONTEXTS_ARB	./GL/wglew.h	/^#define ERROR_INCOMPATIBLE_DEVICE_CONTEXTS_ARB /;"	d
ERROR_INVALID_PIXEL_TYPE_ARB	./GL/wglew.h	/^#define ERROR_INVALID_PIXEL_TYPE_ARB /;"	d
ERROR_INVALID_PIXEL_TYPE_EXT	./GL/wglew.h	/^#define ERROR_INVALID_PIXEL_TYPE_EXT /;"	d
ERROR_INVALID_PROFILE_ARB	./GL/wglew.h	/^#define ERROR_INVALID_PROFILE_ARB /;"	d
ERROR_INVALID_VERSION_ARB	./GL/wglew.h	/^#define ERROR_INVALID_VERSION_ARB /;"	d
FMADD_LANE	./glm/simd/neon.h	/^#	define FMADD_LANE(/;"	d
Flags	./GL/wglew.h	/^  DWORD Flags; $/;"	m	struct:_GPU_DEVICE	typeref:typename:DWORD
GENTYPE	./glm/detail/qualifier.hpp	/^		static const genTypeEnum GENTYPE = GENTYPE_MAT;$/;"	m	struct:glm::detail::genTypeTrait	typeref:typename:const genTypeEnum
GENTYPE	./glm/detail/type_quat.inl	/^		static const genTypeEnum GENTYPE = GENTYPE_QUAT;$/;"	m	struct:glm::detail::genTypeTrait	typeref:typename:const genTypeEnum	file:
GENTYPE_MAT	./glm/detail/qualifier.hpp	/^		GENTYPE_MAT,$/;"	e	enum:glm::detail::genTypeEnum
GENTYPE_QUAT	./glm/detail/qualifier.hpp	/^		GENTYPE_QUAT$/;"	e	enum:glm::detail::genTypeEnum
GENTYPE_VEC	./glm/detail/qualifier.hpp	/^		GENTYPE_VEC,$/;"	e	enum:glm::detail::genTypeEnum
GLAPI	./GL/glew.h	/^#    define GLAPI /;"	d
GLAPI	./GL/glew.h	/^#define GLAPI /;"	d
GLAPIENTRY	./GL/glew.h	/^#      define GLAPIENTRY /;"	d
GLAPIENTRY	./GL/glew.h	/^#    define GLAPIENTRY /;"	d
GLAPIENTRY	./GL/glew.h	/^#define GLAPIENTRY$/;"	d
GLDEBUGPROC	./GL/glew.h	/^typedef void (GLAPIENTRY *GLDEBUGPROC)(GLenum source, GLenum type, GLuint id, GLenum severity, G/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum source,GLenum type,GLuint id,GLenum severity,GLsizei length,const GLchar * message,const void * userParam)
GLDEBUGPROCAMD	./GL/glew.h	/^typedef void (GLAPIENTRY *GLDEBUGPROCAMD)(GLuint id, GLenum category, GLenum severity, GLsizei l/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint id,GLenum category,GLenum severity,GLsizei length,const GLchar * message,void * userParam)
GLDEBUGPROCARB	./GL/glew.h	/^typedef void (GLAPIENTRY *GLDEBUGPROCARB)(GLenum source, GLenum type, GLuint id, GLenum severity/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum source,GLenum type,GLuint id,GLenum severity,GLsizei length,const GLchar * message,const void * userParam)
GLEWAPI	./GL/glew.h	/^#    define GLEWAPI /;"	d
GLEWAPI	./GL/glew.h	/^#   define GLEWAPI /;"	d
GLEWAPI	./GL/glew.h	/^#  define GLEWAPI /;"	d
GLEWAPI	./GL/wglew.h	/^#    define GLEWAPI /;"	d
GLEWAPI	./GL/wglew.h	/^#  define GLEWAPI /;"	d
GLEWAPIENTRY	./GL/glew.h	/^#      define GLEWAPIENTRY /;"	d
GLEWAPIENTRY	./GL/glew.h	/^#    define GLEWAPIENTRY /;"	d
GLEWAPIENTRY	./GL/glew.h	/^#define GLEWAPIENTRY$/;"	d
GLEW_3DFX_multisample	./GL/glew.h	/^#define GLEW_3DFX_multisample GLEW_GET_VAR(__GLEW_3DFX_multisample)/;"	d
GLEW_3DFX_tbuffer	./GL/glew.h	/^#define GLEW_3DFX_tbuffer GLEW_GET_VAR(__GLEW_3DFX_tbuffer)/;"	d
GLEW_3DFX_texture_compression_FXT1	./GL/glew.h	/^#define GLEW_3DFX_texture_compression_FXT1 GLEW_GET_VAR(__GLEW_3DFX_texture_compression_FXT1)/;"	d
GLEW_AMD_blend_minmax_factor	./GL/glew.h	/^#define GLEW_AMD_blend_minmax_factor GLEW_GET_VAR(__GLEW_AMD_blend_minmax_factor)/;"	d
GLEW_AMD_compressed_3DC_texture	./GL/glew.h	/^#define GLEW_AMD_compressed_3DC_texture GLEW_GET_VAR(__GLEW_AMD_compressed_3DC_texture)/;"	d
GLEW_AMD_compressed_ATC_texture	./GL/glew.h	/^#define GLEW_AMD_compressed_ATC_texture GLEW_GET_VAR(__GLEW_AMD_compressed_ATC_texture)/;"	d
GLEW_AMD_conservative_depth	./GL/glew.h	/^#define GLEW_AMD_conservative_depth GLEW_GET_VAR(__GLEW_AMD_conservative_depth)/;"	d
GLEW_AMD_debug_output	./GL/glew.h	/^#define GLEW_AMD_debug_output GLEW_GET_VAR(__GLEW_AMD_debug_output)/;"	d
GLEW_AMD_depth_clamp_separate	./GL/glew.h	/^#define GLEW_AMD_depth_clamp_separate GLEW_GET_VAR(__GLEW_AMD_depth_clamp_separate)/;"	d
GLEW_AMD_draw_buffers_blend	./GL/glew.h	/^#define GLEW_AMD_draw_buffers_blend GLEW_GET_VAR(__GLEW_AMD_draw_buffers_blend)/;"	d
GLEW_AMD_framebuffer_multisample_advanced	./GL/glew.h	/^#define GLEW_AMD_framebuffer_multisample_advanced GLEW_GET_VAR(__GLEW_AMD_framebuffer_multisampl/;"	d
GLEW_AMD_framebuffer_sample_positions	./GL/glew.h	/^#define GLEW_AMD_framebuffer_sample_positions GLEW_GET_VAR(__GLEW_AMD_framebuffer_sample_positio/;"	d
GLEW_AMD_gcn_shader	./GL/glew.h	/^#define GLEW_AMD_gcn_shader GLEW_GET_VAR(__GLEW_AMD_gcn_shader)/;"	d
GLEW_AMD_gpu_shader_half_float	./GL/glew.h	/^#define GLEW_AMD_gpu_shader_half_float GLEW_GET_VAR(__GLEW_AMD_gpu_shader_half_float)/;"	d
GLEW_AMD_gpu_shader_half_float_fetch	./GL/glew.h	/^#define GLEW_AMD_gpu_shader_half_float_fetch GLEW_GET_VAR(__GLEW_AMD_gpu_shader_half_float_fetch/;"	d
GLEW_AMD_gpu_shader_int16	./GL/glew.h	/^#define GLEW_AMD_gpu_shader_int16 GLEW_GET_VAR(__GLEW_AMD_gpu_shader_int16)/;"	d
GLEW_AMD_gpu_shader_int64	./GL/glew.h	/^#define GLEW_AMD_gpu_shader_int64 GLEW_GET_VAR(__GLEW_AMD_gpu_shader_int64)/;"	d
GLEW_AMD_interleaved_elements	./GL/glew.h	/^#define GLEW_AMD_interleaved_elements GLEW_GET_VAR(__GLEW_AMD_interleaved_elements)/;"	d
GLEW_AMD_multi_draw_indirect	./GL/glew.h	/^#define GLEW_AMD_multi_draw_indirect GLEW_GET_VAR(__GLEW_AMD_multi_draw_indirect)/;"	d
GLEW_AMD_name_gen_delete	./GL/glew.h	/^#define GLEW_AMD_name_gen_delete GLEW_GET_VAR(__GLEW_AMD_name_gen_delete)/;"	d
GLEW_AMD_occlusion_query_event	./GL/glew.h	/^#define GLEW_AMD_occlusion_query_event GLEW_GET_VAR(__GLEW_AMD_occlusion_query_event)/;"	d
GLEW_AMD_performance_monitor	./GL/glew.h	/^#define GLEW_AMD_performance_monitor GLEW_GET_VAR(__GLEW_AMD_performance_monitor)/;"	d
GLEW_AMD_pinned_memory	./GL/glew.h	/^#define GLEW_AMD_pinned_memory GLEW_GET_VAR(__GLEW_AMD_pinned_memory)/;"	d
GLEW_AMD_program_binary_Z400	./GL/glew.h	/^#define GLEW_AMD_program_binary_Z400 GLEW_GET_VAR(__GLEW_AMD_program_binary_Z400)/;"	d
GLEW_AMD_query_buffer_object	./GL/glew.h	/^#define GLEW_AMD_query_buffer_object GLEW_GET_VAR(__GLEW_AMD_query_buffer_object)/;"	d
GLEW_AMD_sample_positions	./GL/glew.h	/^#define GLEW_AMD_sample_positions GLEW_GET_VAR(__GLEW_AMD_sample_positions)/;"	d
GLEW_AMD_seamless_cubemap_per_texture	./GL/glew.h	/^#define GLEW_AMD_seamless_cubemap_per_texture GLEW_GET_VAR(__GLEW_AMD_seamless_cubemap_per_textu/;"	d
GLEW_AMD_shader_atomic_counter_ops	./GL/glew.h	/^#define GLEW_AMD_shader_atomic_counter_ops GLEW_GET_VAR(__GLEW_AMD_shader_atomic_counter_ops)/;"	d
GLEW_AMD_shader_ballot	./GL/glew.h	/^#define GLEW_AMD_shader_ballot GLEW_GET_VAR(__GLEW_AMD_shader_ballot)/;"	d
GLEW_AMD_shader_explicit_vertex_parameter	./GL/glew.h	/^#define GLEW_AMD_shader_explicit_vertex_parameter GLEW_GET_VAR(__GLEW_AMD_shader_explicit_vertex/;"	d
GLEW_AMD_shader_image_load_store_lod	./GL/glew.h	/^#define GLEW_AMD_shader_image_load_store_lod GLEW_GET_VAR(__GLEW_AMD_shader_image_load_store_lod/;"	d
GLEW_AMD_shader_stencil_export	./GL/glew.h	/^#define GLEW_AMD_shader_stencil_export GLEW_GET_VAR(__GLEW_AMD_shader_stencil_export)/;"	d
GLEW_AMD_shader_stencil_value_export	./GL/glew.h	/^#define GLEW_AMD_shader_stencil_value_export GLEW_GET_VAR(__GLEW_AMD_shader_stencil_value_export/;"	d
GLEW_AMD_shader_trinary_minmax	./GL/glew.h	/^#define GLEW_AMD_shader_trinary_minmax GLEW_GET_VAR(__GLEW_AMD_shader_trinary_minmax)/;"	d
GLEW_AMD_sparse_texture	./GL/glew.h	/^#define GLEW_AMD_sparse_texture GLEW_GET_VAR(__GLEW_AMD_sparse_texture)/;"	d
GLEW_AMD_stencil_operation_extended	./GL/glew.h	/^#define GLEW_AMD_stencil_operation_extended GLEW_GET_VAR(__GLEW_AMD_stencil_operation_extended)/;"	d
GLEW_AMD_texture_gather_bias_lod	./GL/glew.h	/^#define GLEW_AMD_texture_gather_bias_lod GLEW_GET_VAR(__GLEW_AMD_texture_gather_bias_lod)/;"	d
GLEW_AMD_texture_texture4	./GL/glew.h	/^#define GLEW_AMD_texture_texture4 GLEW_GET_VAR(__GLEW_AMD_texture_texture4)/;"	d
GLEW_AMD_transform_feedback3_lines_triangles	./GL/glew.h	/^#define GLEW_AMD_transform_feedback3_lines_triangles GLEW_GET_VAR(__GLEW_AMD_transform_feedback3/;"	d
GLEW_AMD_transform_feedback4	./GL/glew.h	/^#define GLEW_AMD_transform_feedback4 GLEW_GET_VAR(__GLEW_AMD_transform_feedback4)/;"	d
GLEW_AMD_vertex_shader_layer	./GL/glew.h	/^#define GLEW_AMD_vertex_shader_layer GLEW_GET_VAR(__GLEW_AMD_vertex_shader_layer)/;"	d
GLEW_AMD_vertex_shader_tessellator	./GL/glew.h	/^#define GLEW_AMD_vertex_shader_tessellator GLEW_GET_VAR(__GLEW_AMD_vertex_shader_tessellator)/;"	d
GLEW_AMD_vertex_shader_viewport_index	./GL/glew.h	/^#define GLEW_AMD_vertex_shader_viewport_index GLEW_GET_VAR(__GLEW_AMD_vertex_shader_viewport_ind/;"	d
GLEW_ANDROID_extension_pack_es31a	./GL/glew.h	/^#define GLEW_ANDROID_extension_pack_es31a GLEW_GET_VAR(__GLEW_ANDROID_extension_pack_es31a)/;"	d
GLEW_ANGLE_depth_texture	./GL/glew.h	/^#define GLEW_ANGLE_depth_texture GLEW_GET_VAR(__GLEW_ANGLE_depth_texture)/;"	d
GLEW_ANGLE_framebuffer_blit	./GL/glew.h	/^#define GLEW_ANGLE_framebuffer_blit GLEW_GET_VAR(__GLEW_ANGLE_framebuffer_blit)/;"	d
GLEW_ANGLE_framebuffer_multisample	./GL/glew.h	/^#define GLEW_ANGLE_framebuffer_multisample GLEW_GET_VAR(__GLEW_ANGLE_framebuffer_multisample)/;"	d
GLEW_ANGLE_instanced_arrays	./GL/glew.h	/^#define GLEW_ANGLE_instanced_arrays GLEW_GET_VAR(__GLEW_ANGLE_instanced_arrays)/;"	d
GLEW_ANGLE_pack_reverse_row_order	./GL/glew.h	/^#define GLEW_ANGLE_pack_reverse_row_order GLEW_GET_VAR(__GLEW_ANGLE_pack_reverse_row_order)/;"	d
GLEW_ANGLE_program_binary	./GL/glew.h	/^#define GLEW_ANGLE_program_binary GLEW_GET_VAR(__GLEW_ANGLE_program_binary)/;"	d
GLEW_ANGLE_texture_compression_dxt1	./GL/glew.h	/^#define GLEW_ANGLE_texture_compression_dxt1 GLEW_GET_VAR(__GLEW_ANGLE_texture_compression_dxt1)/;"	d
GLEW_ANGLE_texture_compression_dxt3	./GL/glew.h	/^#define GLEW_ANGLE_texture_compression_dxt3 GLEW_GET_VAR(__GLEW_ANGLE_texture_compression_dxt3)/;"	d
GLEW_ANGLE_texture_compression_dxt5	./GL/glew.h	/^#define GLEW_ANGLE_texture_compression_dxt5 GLEW_GET_VAR(__GLEW_ANGLE_texture_compression_dxt5)/;"	d
GLEW_ANGLE_texture_usage	./GL/glew.h	/^#define GLEW_ANGLE_texture_usage GLEW_GET_VAR(__GLEW_ANGLE_texture_usage)/;"	d
GLEW_ANGLE_timer_query	./GL/glew.h	/^#define GLEW_ANGLE_timer_query GLEW_GET_VAR(__GLEW_ANGLE_timer_query)/;"	d
GLEW_ANGLE_translated_shader_source	./GL/glew.h	/^#define GLEW_ANGLE_translated_shader_source GLEW_GET_VAR(__GLEW_ANGLE_translated_shader_source)/;"	d
GLEW_APIENTRY_DEFINED	./GL/glew.h	/^#define GLEW_APIENTRY_DEFINED$/;"	d
GLEW_APPLE_aux_depth_stencil	./GL/glew.h	/^#define GLEW_APPLE_aux_depth_stencil GLEW_GET_VAR(__GLEW_APPLE_aux_depth_stencil)/;"	d
GLEW_APPLE_client_storage	./GL/glew.h	/^#define GLEW_APPLE_client_storage GLEW_GET_VAR(__GLEW_APPLE_client_storage)/;"	d
GLEW_APPLE_clip_distance	./GL/glew.h	/^#define GLEW_APPLE_clip_distance GLEW_GET_VAR(__GLEW_APPLE_clip_distance)/;"	d
GLEW_APPLE_color_buffer_packed_float	./GL/glew.h	/^#define GLEW_APPLE_color_buffer_packed_float GLEW_GET_VAR(__GLEW_APPLE_color_buffer_packed_float/;"	d
GLEW_APPLE_copy_texture_levels	./GL/glew.h	/^#define GLEW_APPLE_copy_texture_levels GLEW_GET_VAR(__GLEW_APPLE_copy_texture_levels)/;"	d
GLEW_APPLE_element_array	./GL/glew.h	/^#define GLEW_APPLE_element_array GLEW_GET_VAR(__GLEW_APPLE_element_array)/;"	d
GLEW_APPLE_fence	./GL/glew.h	/^#define GLEW_APPLE_fence GLEW_GET_VAR(__GLEW_APPLE_fence)/;"	d
GLEW_APPLE_float_pixels	./GL/glew.h	/^#define GLEW_APPLE_float_pixels GLEW_GET_VAR(__GLEW_APPLE_float_pixels)/;"	d
GLEW_APPLE_flush_buffer_range	./GL/glew.h	/^#define GLEW_APPLE_flush_buffer_range GLEW_GET_VAR(__GLEW_APPLE_flush_buffer_range)/;"	d
GLEW_APPLE_framebuffer_multisample	./GL/glew.h	/^#define GLEW_APPLE_framebuffer_multisample GLEW_GET_VAR(__GLEW_APPLE_framebuffer_multisample)/;"	d
GLEW_APPLE_object_purgeable	./GL/glew.h	/^#define GLEW_APPLE_object_purgeable GLEW_GET_VAR(__GLEW_APPLE_object_purgeable)/;"	d
GLEW_APPLE_pixel_buffer	./GL/glew.h	/^#define GLEW_APPLE_pixel_buffer GLEW_GET_VAR(__GLEW_APPLE_pixel_buffer)/;"	d
GLEW_APPLE_rgb_422	./GL/glew.h	/^#define GLEW_APPLE_rgb_422 GLEW_GET_VAR(__GLEW_APPLE_rgb_422)/;"	d
GLEW_APPLE_row_bytes	./GL/glew.h	/^#define GLEW_APPLE_row_bytes GLEW_GET_VAR(__GLEW_APPLE_row_bytes)/;"	d
GLEW_APPLE_specular_vector	./GL/glew.h	/^#define GLEW_APPLE_specular_vector GLEW_GET_VAR(__GLEW_APPLE_specular_vector)/;"	d
GLEW_APPLE_sync	./GL/glew.h	/^#define GLEW_APPLE_sync GLEW_GET_VAR(__GLEW_APPLE_sync)/;"	d
GLEW_APPLE_texture_2D_limited_npot	./GL/glew.h	/^#define GLEW_APPLE_texture_2D_limited_npot GLEW_GET_VAR(__GLEW_APPLE_texture_2D_limited_npot)/;"	d
GLEW_APPLE_texture_format_BGRA8888	./GL/glew.h	/^#define GLEW_APPLE_texture_format_BGRA8888 GLEW_GET_VAR(__GLEW_APPLE_texture_format_BGRA8888)/;"	d
GLEW_APPLE_texture_max_level	./GL/glew.h	/^#define GLEW_APPLE_texture_max_level GLEW_GET_VAR(__GLEW_APPLE_texture_max_level)/;"	d
GLEW_APPLE_texture_packed_float	./GL/glew.h	/^#define GLEW_APPLE_texture_packed_float GLEW_GET_VAR(__GLEW_APPLE_texture_packed_float)/;"	d
GLEW_APPLE_texture_range	./GL/glew.h	/^#define GLEW_APPLE_texture_range GLEW_GET_VAR(__GLEW_APPLE_texture_range)/;"	d
GLEW_APPLE_transform_hint	./GL/glew.h	/^#define GLEW_APPLE_transform_hint GLEW_GET_VAR(__GLEW_APPLE_transform_hint)/;"	d
GLEW_APPLE_vertex_array_object	./GL/glew.h	/^#define GLEW_APPLE_vertex_array_object GLEW_GET_VAR(__GLEW_APPLE_vertex_array_object)/;"	d
GLEW_APPLE_vertex_array_range	./GL/glew.h	/^#define GLEW_APPLE_vertex_array_range GLEW_GET_VAR(__GLEW_APPLE_vertex_array_range)/;"	d
GLEW_APPLE_vertex_program_evaluators	./GL/glew.h	/^#define GLEW_APPLE_vertex_program_evaluators GLEW_GET_VAR(__GLEW_APPLE_vertex_program_evaluators/;"	d
GLEW_APPLE_ycbcr_422	./GL/glew.h	/^#define GLEW_APPLE_ycbcr_422 GLEW_GET_VAR(__GLEW_APPLE_ycbcr_422)/;"	d
GLEW_ARB_ES2_compatibility	./GL/glew.h	/^#define GLEW_ARB_ES2_compatibility GLEW_GET_VAR(__GLEW_ARB_ES2_compatibility)/;"	d
GLEW_ARB_ES3_1_compatibility	./GL/glew.h	/^#define GLEW_ARB_ES3_1_compatibility GLEW_GET_VAR(__GLEW_ARB_ES3_1_compatibility)/;"	d
GLEW_ARB_ES3_2_compatibility	./GL/glew.h	/^#define GLEW_ARB_ES3_2_compatibility GLEW_GET_VAR(__GLEW_ARB_ES3_2_compatibility)/;"	d
GLEW_ARB_ES3_compatibility	./GL/glew.h	/^#define GLEW_ARB_ES3_compatibility GLEW_GET_VAR(__GLEW_ARB_ES3_compatibility)/;"	d
GLEW_ARB_arrays_of_arrays	./GL/glew.h	/^#define GLEW_ARB_arrays_of_arrays GLEW_GET_VAR(__GLEW_ARB_arrays_of_arrays)/;"	d
GLEW_ARB_base_instance	./GL/glew.h	/^#define GLEW_ARB_base_instance GLEW_GET_VAR(__GLEW_ARB_base_instance)/;"	d
GLEW_ARB_bindless_texture	./GL/glew.h	/^#define GLEW_ARB_bindless_texture GLEW_GET_VAR(__GLEW_ARB_bindless_texture)/;"	d
GLEW_ARB_blend_func_extended	./GL/glew.h	/^#define GLEW_ARB_blend_func_extended GLEW_GET_VAR(__GLEW_ARB_blend_func_extended)/;"	d
GLEW_ARB_buffer_storage	./GL/glew.h	/^#define GLEW_ARB_buffer_storage GLEW_GET_VAR(__GLEW_ARB_buffer_storage)/;"	d
GLEW_ARB_cl_event	./GL/glew.h	/^#define GLEW_ARB_cl_event GLEW_GET_VAR(__GLEW_ARB_cl_event)/;"	d
GLEW_ARB_clear_buffer_object	./GL/glew.h	/^#define GLEW_ARB_clear_buffer_object GLEW_GET_VAR(__GLEW_ARB_clear_buffer_object)/;"	d
GLEW_ARB_clear_texture	./GL/glew.h	/^#define GLEW_ARB_clear_texture GLEW_GET_VAR(__GLEW_ARB_clear_texture)/;"	d
GLEW_ARB_clip_control	./GL/glew.h	/^#define GLEW_ARB_clip_control GLEW_GET_VAR(__GLEW_ARB_clip_control)/;"	d
GLEW_ARB_color_buffer_float	./GL/glew.h	/^#define GLEW_ARB_color_buffer_float GLEW_GET_VAR(__GLEW_ARB_color_buffer_float)/;"	d
GLEW_ARB_compatibility	./GL/glew.h	/^#define GLEW_ARB_compatibility GLEW_GET_VAR(__GLEW_ARB_compatibility)/;"	d
GLEW_ARB_compressed_texture_pixel_storage	./GL/glew.h	/^#define GLEW_ARB_compressed_texture_pixel_storage GLEW_GET_VAR(__GLEW_ARB_compressed_texture_pix/;"	d
GLEW_ARB_compute_shader	./GL/glew.h	/^#define GLEW_ARB_compute_shader GLEW_GET_VAR(__GLEW_ARB_compute_shader)/;"	d
GLEW_ARB_compute_variable_group_size	./GL/glew.h	/^#define GLEW_ARB_compute_variable_group_size GLEW_GET_VAR(__GLEW_ARB_compute_variable_group_size/;"	d
GLEW_ARB_conditional_render_inverted	./GL/glew.h	/^#define GLEW_ARB_conditional_render_inverted GLEW_GET_VAR(__GLEW_ARB_conditional_render_inverted/;"	d
GLEW_ARB_conservative_depth	./GL/glew.h	/^#define GLEW_ARB_conservative_depth GLEW_GET_VAR(__GLEW_ARB_conservative_depth)/;"	d
GLEW_ARB_copy_buffer	./GL/glew.h	/^#define GLEW_ARB_copy_buffer GLEW_GET_VAR(__GLEW_ARB_copy_buffer)/;"	d
GLEW_ARB_copy_image	./GL/glew.h	/^#define GLEW_ARB_copy_image GLEW_GET_VAR(__GLEW_ARB_copy_image)/;"	d
GLEW_ARB_cull_distance	./GL/glew.h	/^#define GLEW_ARB_cull_distance GLEW_GET_VAR(__GLEW_ARB_cull_distance)/;"	d
GLEW_ARB_debug_output	./GL/glew.h	/^#define GLEW_ARB_debug_output GLEW_GET_VAR(__GLEW_ARB_debug_output)/;"	d
GLEW_ARB_depth_buffer_float	./GL/glew.h	/^#define GLEW_ARB_depth_buffer_float GLEW_GET_VAR(__GLEW_ARB_depth_buffer_float)/;"	d
GLEW_ARB_depth_clamp	./GL/glew.h	/^#define GLEW_ARB_depth_clamp GLEW_GET_VAR(__GLEW_ARB_depth_clamp)/;"	d
GLEW_ARB_depth_texture	./GL/glew.h	/^#define GLEW_ARB_depth_texture GLEW_GET_VAR(__GLEW_ARB_depth_texture)/;"	d
GLEW_ARB_derivative_control	./GL/glew.h	/^#define GLEW_ARB_derivative_control GLEW_GET_VAR(__GLEW_ARB_derivative_control)/;"	d
GLEW_ARB_direct_state_access	./GL/glew.h	/^#define GLEW_ARB_direct_state_access GLEW_GET_VAR(__GLEW_ARB_direct_state_access)/;"	d
GLEW_ARB_draw_buffers	./GL/glew.h	/^#define GLEW_ARB_draw_buffers GLEW_GET_VAR(__GLEW_ARB_draw_buffers)/;"	d
GLEW_ARB_draw_buffers_blend	./GL/glew.h	/^#define GLEW_ARB_draw_buffers_blend GLEW_GET_VAR(__GLEW_ARB_draw_buffers_blend)/;"	d
GLEW_ARB_draw_elements_base_vertex	./GL/glew.h	/^#define GLEW_ARB_draw_elements_base_vertex GLEW_GET_VAR(__GLEW_ARB_draw_elements_base_vertex)/;"	d
GLEW_ARB_draw_indirect	./GL/glew.h	/^#define GLEW_ARB_draw_indirect GLEW_GET_VAR(__GLEW_ARB_draw_indirect)/;"	d
GLEW_ARB_draw_instanced	./GL/glew.h	/^#define GLEW_ARB_draw_instanced GLEW_GET_VAR(__GLEW_ARB_draw_instanced)/;"	d
GLEW_ARB_enhanced_layouts	./GL/glew.h	/^#define GLEW_ARB_enhanced_layouts GLEW_GET_VAR(__GLEW_ARB_enhanced_layouts)/;"	d
GLEW_ARB_explicit_attrib_location	./GL/glew.h	/^#define GLEW_ARB_explicit_attrib_location GLEW_GET_VAR(__GLEW_ARB_explicit_attrib_location)/;"	d
GLEW_ARB_explicit_uniform_location	./GL/glew.h	/^#define GLEW_ARB_explicit_uniform_location GLEW_GET_VAR(__GLEW_ARB_explicit_uniform_location)/;"	d
GLEW_ARB_fragment_coord_conventions	./GL/glew.h	/^#define GLEW_ARB_fragment_coord_conventions GLEW_GET_VAR(__GLEW_ARB_fragment_coord_conventions)/;"	d
GLEW_ARB_fragment_layer_viewport	./GL/glew.h	/^#define GLEW_ARB_fragment_layer_viewport GLEW_GET_VAR(__GLEW_ARB_fragment_layer_viewport)/;"	d
GLEW_ARB_fragment_program	./GL/glew.h	/^#define GLEW_ARB_fragment_program GLEW_GET_VAR(__GLEW_ARB_fragment_program)/;"	d
GLEW_ARB_fragment_program_shadow	./GL/glew.h	/^#define GLEW_ARB_fragment_program_shadow GLEW_GET_VAR(__GLEW_ARB_fragment_program_shadow)/;"	d
GLEW_ARB_fragment_shader	./GL/glew.h	/^#define GLEW_ARB_fragment_shader GLEW_GET_VAR(__GLEW_ARB_fragment_shader)/;"	d
GLEW_ARB_fragment_shader_interlock	./GL/glew.h	/^#define GLEW_ARB_fragment_shader_interlock GLEW_GET_VAR(__GLEW_ARB_fragment_shader_interlock)/;"	d
GLEW_ARB_framebuffer_no_attachments	./GL/glew.h	/^#define GLEW_ARB_framebuffer_no_attachments GLEW_GET_VAR(__GLEW_ARB_framebuffer_no_attachments)/;"	d
GLEW_ARB_framebuffer_object	./GL/glew.h	/^#define GLEW_ARB_framebuffer_object GLEW_GET_VAR(__GLEW_ARB_framebuffer_object)/;"	d
GLEW_ARB_framebuffer_sRGB	./GL/glew.h	/^#define GLEW_ARB_framebuffer_sRGB GLEW_GET_VAR(__GLEW_ARB_framebuffer_sRGB)/;"	d
GLEW_ARB_geometry_shader4	./GL/glew.h	/^#define GLEW_ARB_geometry_shader4 GLEW_GET_VAR(__GLEW_ARB_geometry_shader4)/;"	d
GLEW_ARB_get_program_binary	./GL/glew.h	/^#define GLEW_ARB_get_program_binary GLEW_GET_VAR(__GLEW_ARB_get_program_binary)/;"	d
GLEW_ARB_get_texture_sub_image	./GL/glew.h	/^#define GLEW_ARB_get_texture_sub_image GLEW_GET_VAR(__GLEW_ARB_get_texture_sub_image)/;"	d
GLEW_ARB_gl_spirv	./GL/glew.h	/^#define GLEW_ARB_gl_spirv GLEW_GET_VAR(__GLEW_ARB_gl_spirv)/;"	d
GLEW_ARB_gpu_shader5	./GL/glew.h	/^#define GLEW_ARB_gpu_shader5 GLEW_GET_VAR(__GLEW_ARB_gpu_shader5)/;"	d
GLEW_ARB_gpu_shader_fp64	./GL/glew.h	/^#define GLEW_ARB_gpu_shader_fp64 GLEW_GET_VAR(__GLEW_ARB_gpu_shader_fp64)/;"	d
GLEW_ARB_gpu_shader_int64	./GL/glew.h	/^#define GLEW_ARB_gpu_shader_int64 GLEW_GET_VAR(__GLEW_ARB_gpu_shader_int64)/;"	d
GLEW_ARB_half_float_pixel	./GL/glew.h	/^#define GLEW_ARB_half_float_pixel GLEW_GET_VAR(__GLEW_ARB_half_float_pixel)/;"	d
GLEW_ARB_half_float_vertex	./GL/glew.h	/^#define GLEW_ARB_half_float_vertex GLEW_GET_VAR(__GLEW_ARB_half_float_vertex)/;"	d
GLEW_ARB_imaging	./GL/glew.h	/^#define GLEW_ARB_imaging GLEW_GET_VAR(__GLEW_ARB_imaging)/;"	d
GLEW_ARB_indirect_parameters	./GL/glew.h	/^#define GLEW_ARB_indirect_parameters GLEW_GET_VAR(__GLEW_ARB_indirect_parameters)/;"	d
GLEW_ARB_instanced_arrays	./GL/glew.h	/^#define GLEW_ARB_instanced_arrays GLEW_GET_VAR(__GLEW_ARB_instanced_arrays)/;"	d
GLEW_ARB_internalformat_query	./GL/glew.h	/^#define GLEW_ARB_internalformat_query GLEW_GET_VAR(__GLEW_ARB_internalformat_query)/;"	d
GLEW_ARB_internalformat_query2	./GL/glew.h	/^#define GLEW_ARB_internalformat_query2 GLEW_GET_VAR(__GLEW_ARB_internalformat_query2)/;"	d
GLEW_ARB_invalidate_subdata	./GL/glew.h	/^#define GLEW_ARB_invalidate_subdata GLEW_GET_VAR(__GLEW_ARB_invalidate_subdata)/;"	d
GLEW_ARB_map_buffer_alignment	./GL/glew.h	/^#define GLEW_ARB_map_buffer_alignment GLEW_GET_VAR(__GLEW_ARB_map_buffer_alignment)/;"	d
GLEW_ARB_map_buffer_range	./GL/glew.h	/^#define GLEW_ARB_map_buffer_range GLEW_GET_VAR(__GLEW_ARB_map_buffer_range)/;"	d
GLEW_ARB_matrix_palette	./GL/glew.h	/^#define GLEW_ARB_matrix_palette GLEW_GET_VAR(__GLEW_ARB_matrix_palette)/;"	d
GLEW_ARB_multi_bind	./GL/glew.h	/^#define GLEW_ARB_multi_bind GLEW_GET_VAR(__GLEW_ARB_multi_bind)/;"	d
GLEW_ARB_multi_draw_indirect	./GL/glew.h	/^#define GLEW_ARB_multi_draw_indirect GLEW_GET_VAR(__GLEW_ARB_multi_draw_indirect)/;"	d
GLEW_ARB_multisample	./GL/glew.h	/^#define GLEW_ARB_multisample GLEW_GET_VAR(__GLEW_ARB_multisample)/;"	d
GLEW_ARB_multitexture	./GL/glew.h	/^#define GLEW_ARB_multitexture GLEW_GET_VAR(__GLEW_ARB_multitexture)/;"	d
GLEW_ARB_occlusion_query	./GL/glew.h	/^#define GLEW_ARB_occlusion_query GLEW_GET_VAR(__GLEW_ARB_occlusion_query)/;"	d
GLEW_ARB_occlusion_query2	./GL/glew.h	/^#define GLEW_ARB_occlusion_query2 GLEW_GET_VAR(__GLEW_ARB_occlusion_query2)/;"	d
GLEW_ARB_parallel_shader_compile	./GL/glew.h	/^#define GLEW_ARB_parallel_shader_compile GLEW_GET_VAR(__GLEW_ARB_parallel_shader_compile)/;"	d
GLEW_ARB_pipeline_statistics_query	./GL/glew.h	/^#define GLEW_ARB_pipeline_statistics_query GLEW_GET_VAR(__GLEW_ARB_pipeline_statistics_query)/;"	d
GLEW_ARB_pixel_buffer_object	./GL/glew.h	/^#define GLEW_ARB_pixel_buffer_object GLEW_GET_VAR(__GLEW_ARB_pixel_buffer_object)/;"	d
GLEW_ARB_point_parameters	./GL/glew.h	/^#define GLEW_ARB_point_parameters GLEW_GET_VAR(__GLEW_ARB_point_parameters)/;"	d
GLEW_ARB_point_sprite	./GL/glew.h	/^#define GLEW_ARB_point_sprite GLEW_GET_VAR(__GLEW_ARB_point_sprite)/;"	d
GLEW_ARB_polygon_offset_clamp	./GL/glew.h	/^#define GLEW_ARB_polygon_offset_clamp GLEW_GET_VAR(__GLEW_ARB_polygon_offset_clamp)/;"	d
GLEW_ARB_post_depth_coverage	./GL/glew.h	/^#define GLEW_ARB_post_depth_coverage GLEW_GET_VAR(__GLEW_ARB_post_depth_coverage)/;"	d
GLEW_ARB_program_interface_query	./GL/glew.h	/^#define GLEW_ARB_program_interface_query GLEW_GET_VAR(__GLEW_ARB_program_interface_query)/;"	d
GLEW_ARB_provoking_vertex	./GL/glew.h	/^#define GLEW_ARB_provoking_vertex GLEW_GET_VAR(__GLEW_ARB_provoking_vertex)/;"	d
GLEW_ARB_query_buffer_object	./GL/glew.h	/^#define GLEW_ARB_query_buffer_object GLEW_GET_VAR(__GLEW_ARB_query_buffer_object)/;"	d
GLEW_ARB_robust_buffer_access_behavior	./GL/glew.h	/^#define GLEW_ARB_robust_buffer_access_behavior GLEW_GET_VAR(__GLEW_ARB_robust_buffer_access_beha/;"	d
GLEW_ARB_robustness	./GL/glew.h	/^#define GLEW_ARB_robustness GLEW_GET_VAR(__GLEW_ARB_robustness)/;"	d
GLEW_ARB_robustness_application_isolation	./GL/glew.h	/^#define GLEW_ARB_robustness_application_isolation GLEW_GET_VAR(__GLEW_ARB_robustness_application/;"	d
GLEW_ARB_robustness_share_group_isolation	./GL/glew.h	/^#define GLEW_ARB_robustness_share_group_isolation GLEW_GET_VAR(__GLEW_ARB_robustness_share_group/;"	d
GLEW_ARB_sample_locations	./GL/glew.h	/^#define GLEW_ARB_sample_locations GLEW_GET_VAR(__GLEW_ARB_sample_locations)/;"	d
GLEW_ARB_sample_shading	./GL/glew.h	/^#define GLEW_ARB_sample_shading GLEW_GET_VAR(__GLEW_ARB_sample_shading)/;"	d
GLEW_ARB_sampler_objects	./GL/glew.h	/^#define GLEW_ARB_sampler_objects GLEW_GET_VAR(__GLEW_ARB_sampler_objects)/;"	d
GLEW_ARB_seamless_cube_map	./GL/glew.h	/^#define GLEW_ARB_seamless_cube_map GLEW_GET_VAR(__GLEW_ARB_seamless_cube_map)/;"	d
GLEW_ARB_seamless_cubemap_per_texture	./GL/glew.h	/^#define GLEW_ARB_seamless_cubemap_per_texture GLEW_GET_VAR(__GLEW_ARB_seamless_cubemap_per_textu/;"	d
GLEW_ARB_separate_shader_objects	./GL/glew.h	/^#define GLEW_ARB_separate_shader_objects GLEW_GET_VAR(__GLEW_ARB_separate_shader_objects)/;"	d
GLEW_ARB_shader_atomic_counter_ops	./GL/glew.h	/^#define GLEW_ARB_shader_atomic_counter_ops GLEW_GET_VAR(__GLEW_ARB_shader_atomic_counter_ops)/;"	d
GLEW_ARB_shader_atomic_counters	./GL/glew.h	/^#define GLEW_ARB_shader_atomic_counters GLEW_GET_VAR(__GLEW_ARB_shader_atomic_counters)/;"	d
GLEW_ARB_shader_ballot	./GL/glew.h	/^#define GLEW_ARB_shader_ballot GLEW_GET_VAR(__GLEW_ARB_shader_ballot)/;"	d
GLEW_ARB_shader_bit_encoding	./GL/glew.h	/^#define GLEW_ARB_shader_bit_encoding GLEW_GET_VAR(__GLEW_ARB_shader_bit_encoding)/;"	d
GLEW_ARB_shader_clock	./GL/glew.h	/^#define GLEW_ARB_shader_clock GLEW_GET_VAR(__GLEW_ARB_shader_clock)/;"	d
GLEW_ARB_shader_draw_parameters	./GL/glew.h	/^#define GLEW_ARB_shader_draw_parameters GLEW_GET_VAR(__GLEW_ARB_shader_draw_parameters)/;"	d
GLEW_ARB_shader_group_vote	./GL/glew.h	/^#define GLEW_ARB_shader_group_vote GLEW_GET_VAR(__GLEW_ARB_shader_group_vote)/;"	d
GLEW_ARB_shader_image_load_store	./GL/glew.h	/^#define GLEW_ARB_shader_image_load_store GLEW_GET_VAR(__GLEW_ARB_shader_image_load_store)/;"	d
GLEW_ARB_shader_image_size	./GL/glew.h	/^#define GLEW_ARB_shader_image_size GLEW_GET_VAR(__GLEW_ARB_shader_image_size)/;"	d
GLEW_ARB_shader_objects	./GL/glew.h	/^#define GLEW_ARB_shader_objects GLEW_GET_VAR(__GLEW_ARB_shader_objects)/;"	d
GLEW_ARB_shader_precision	./GL/glew.h	/^#define GLEW_ARB_shader_precision GLEW_GET_VAR(__GLEW_ARB_shader_precision)/;"	d
GLEW_ARB_shader_stencil_export	./GL/glew.h	/^#define GLEW_ARB_shader_stencil_export GLEW_GET_VAR(__GLEW_ARB_shader_stencil_export)/;"	d
GLEW_ARB_shader_storage_buffer_object	./GL/glew.h	/^#define GLEW_ARB_shader_storage_buffer_object GLEW_GET_VAR(__GLEW_ARB_shader_storage_buffer_obje/;"	d
GLEW_ARB_shader_subroutine	./GL/glew.h	/^#define GLEW_ARB_shader_subroutine GLEW_GET_VAR(__GLEW_ARB_shader_subroutine)/;"	d
GLEW_ARB_shader_texture_image_samples	./GL/glew.h	/^#define GLEW_ARB_shader_texture_image_samples GLEW_GET_VAR(__GLEW_ARB_shader_texture_image_sampl/;"	d
GLEW_ARB_shader_texture_lod	./GL/glew.h	/^#define GLEW_ARB_shader_texture_lod GLEW_GET_VAR(__GLEW_ARB_shader_texture_lod)/;"	d
GLEW_ARB_shader_viewport_layer_array	./GL/glew.h	/^#define GLEW_ARB_shader_viewport_layer_array GLEW_GET_VAR(__GLEW_ARB_shader_viewport_layer_array/;"	d
GLEW_ARB_shading_language_100	./GL/glew.h	/^#define GLEW_ARB_shading_language_100 GLEW_GET_VAR(__GLEW_ARB_shading_language_100)/;"	d
GLEW_ARB_shading_language_420pack	./GL/glew.h	/^#define GLEW_ARB_shading_language_420pack GLEW_GET_VAR(__GLEW_ARB_shading_language_420pack)/;"	d
GLEW_ARB_shading_language_include	./GL/glew.h	/^#define GLEW_ARB_shading_language_include GLEW_GET_VAR(__GLEW_ARB_shading_language_include)/;"	d
GLEW_ARB_shading_language_packing	./GL/glew.h	/^#define GLEW_ARB_shading_language_packing GLEW_GET_VAR(__GLEW_ARB_shading_language_packing)/;"	d
GLEW_ARB_shadow	./GL/glew.h	/^#define GLEW_ARB_shadow GLEW_GET_VAR(__GLEW_ARB_shadow)/;"	d
GLEW_ARB_shadow_ambient	./GL/glew.h	/^#define GLEW_ARB_shadow_ambient GLEW_GET_VAR(__GLEW_ARB_shadow_ambient)/;"	d
GLEW_ARB_sparse_buffer	./GL/glew.h	/^#define GLEW_ARB_sparse_buffer GLEW_GET_VAR(__GLEW_ARB_sparse_buffer)/;"	d
GLEW_ARB_sparse_texture	./GL/glew.h	/^#define GLEW_ARB_sparse_texture GLEW_GET_VAR(__GLEW_ARB_sparse_texture)/;"	d
GLEW_ARB_sparse_texture2	./GL/glew.h	/^#define GLEW_ARB_sparse_texture2 GLEW_GET_VAR(__GLEW_ARB_sparse_texture2)/;"	d
GLEW_ARB_sparse_texture_clamp	./GL/glew.h	/^#define GLEW_ARB_sparse_texture_clamp GLEW_GET_VAR(__GLEW_ARB_sparse_texture_clamp)/;"	d
GLEW_ARB_spirv_extensions	./GL/glew.h	/^#define GLEW_ARB_spirv_extensions GLEW_GET_VAR(__GLEW_ARB_spirv_extensions)/;"	d
GLEW_ARB_stencil_texturing	./GL/glew.h	/^#define GLEW_ARB_stencil_texturing GLEW_GET_VAR(__GLEW_ARB_stencil_texturing)/;"	d
GLEW_ARB_sync	./GL/glew.h	/^#define GLEW_ARB_sync GLEW_GET_VAR(__GLEW_ARB_sync)/;"	d
GLEW_ARB_tessellation_shader	./GL/glew.h	/^#define GLEW_ARB_tessellation_shader GLEW_GET_VAR(__GLEW_ARB_tessellation_shader)/;"	d
GLEW_ARB_texture_barrier	./GL/glew.h	/^#define GLEW_ARB_texture_barrier GLEW_GET_VAR(__GLEW_ARB_texture_barrier)/;"	d
GLEW_ARB_texture_border_clamp	./GL/glew.h	/^#define GLEW_ARB_texture_border_clamp GLEW_GET_VAR(__GLEW_ARB_texture_border_clamp)/;"	d
GLEW_ARB_texture_buffer_object	./GL/glew.h	/^#define GLEW_ARB_texture_buffer_object GLEW_GET_VAR(__GLEW_ARB_texture_buffer_object)/;"	d
GLEW_ARB_texture_buffer_object_rgb32	./GL/glew.h	/^#define GLEW_ARB_texture_buffer_object_rgb32 GLEW_GET_VAR(__GLEW_ARB_texture_buffer_object_rgb32/;"	d
GLEW_ARB_texture_buffer_range	./GL/glew.h	/^#define GLEW_ARB_texture_buffer_range GLEW_GET_VAR(__GLEW_ARB_texture_buffer_range)/;"	d
GLEW_ARB_texture_compression	./GL/glew.h	/^#define GLEW_ARB_texture_compression GLEW_GET_VAR(__GLEW_ARB_texture_compression)/;"	d
GLEW_ARB_texture_compression_bptc	./GL/glew.h	/^#define GLEW_ARB_texture_compression_bptc GLEW_GET_VAR(__GLEW_ARB_texture_compression_bptc)/;"	d
GLEW_ARB_texture_compression_rgtc	./GL/glew.h	/^#define GLEW_ARB_texture_compression_rgtc GLEW_GET_VAR(__GLEW_ARB_texture_compression_rgtc)/;"	d
GLEW_ARB_texture_cube_map	./GL/glew.h	/^#define GLEW_ARB_texture_cube_map GLEW_GET_VAR(__GLEW_ARB_texture_cube_map)/;"	d
GLEW_ARB_texture_cube_map_array	./GL/glew.h	/^#define GLEW_ARB_texture_cube_map_array GLEW_GET_VAR(__GLEW_ARB_texture_cube_map_array)/;"	d
GLEW_ARB_texture_env_add	./GL/glew.h	/^#define GLEW_ARB_texture_env_add GLEW_GET_VAR(__GLEW_ARB_texture_env_add)/;"	d
GLEW_ARB_texture_env_combine	./GL/glew.h	/^#define GLEW_ARB_texture_env_combine GLEW_GET_VAR(__GLEW_ARB_texture_env_combine)/;"	d
GLEW_ARB_texture_env_crossbar	./GL/glew.h	/^#define GLEW_ARB_texture_env_crossbar GLEW_GET_VAR(__GLEW_ARB_texture_env_crossbar)/;"	d
GLEW_ARB_texture_env_dot3	./GL/glew.h	/^#define GLEW_ARB_texture_env_dot3 GLEW_GET_VAR(__GLEW_ARB_texture_env_dot3)/;"	d
GLEW_ARB_texture_filter_anisotropic	./GL/glew.h	/^#define GLEW_ARB_texture_filter_anisotropic GLEW_GET_VAR(__GLEW_ARB_texture_filter_anisotropic)/;"	d
GLEW_ARB_texture_filter_minmax	./GL/glew.h	/^#define GLEW_ARB_texture_filter_minmax GLEW_GET_VAR(__GLEW_ARB_texture_filter_minmax)/;"	d
GLEW_ARB_texture_float	./GL/glew.h	/^#define GLEW_ARB_texture_float GLEW_GET_VAR(__GLEW_ARB_texture_float)/;"	d
GLEW_ARB_texture_gather	./GL/glew.h	/^#define GLEW_ARB_texture_gather GLEW_GET_VAR(__GLEW_ARB_texture_gather)/;"	d
GLEW_ARB_texture_mirror_clamp_to_edge	./GL/glew.h	/^#define GLEW_ARB_texture_mirror_clamp_to_edge GLEW_GET_VAR(__GLEW_ARB_texture_mirror_clamp_to_ed/;"	d
GLEW_ARB_texture_mirrored_repeat	./GL/glew.h	/^#define GLEW_ARB_texture_mirrored_repeat GLEW_GET_VAR(__GLEW_ARB_texture_mirrored_repeat)/;"	d
GLEW_ARB_texture_multisample	./GL/glew.h	/^#define GLEW_ARB_texture_multisample GLEW_GET_VAR(__GLEW_ARB_texture_multisample)/;"	d
GLEW_ARB_texture_non_power_of_two	./GL/glew.h	/^#define GLEW_ARB_texture_non_power_of_two GLEW_GET_VAR(__GLEW_ARB_texture_non_power_of_two)/;"	d
GLEW_ARB_texture_query_levels	./GL/glew.h	/^#define GLEW_ARB_texture_query_levels GLEW_GET_VAR(__GLEW_ARB_texture_query_levels)/;"	d
GLEW_ARB_texture_query_lod	./GL/glew.h	/^#define GLEW_ARB_texture_query_lod GLEW_GET_VAR(__GLEW_ARB_texture_query_lod)/;"	d
GLEW_ARB_texture_rectangle	./GL/glew.h	/^#define GLEW_ARB_texture_rectangle GLEW_GET_VAR(__GLEW_ARB_texture_rectangle)/;"	d
GLEW_ARB_texture_rg	./GL/glew.h	/^#define GLEW_ARB_texture_rg GLEW_GET_VAR(__GLEW_ARB_texture_rg)/;"	d
GLEW_ARB_texture_rgb10_a2ui	./GL/glew.h	/^#define GLEW_ARB_texture_rgb10_a2ui GLEW_GET_VAR(__GLEW_ARB_texture_rgb10_a2ui)/;"	d
GLEW_ARB_texture_stencil8	./GL/glew.h	/^#define GLEW_ARB_texture_stencil8 GLEW_GET_VAR(__GLEW_ARB_texture_stencil8)/;"	d
GLEW_ARB_texture_storage	./GL/glew.h	/^#define GLEW_ARB_texture_storage GLEW_GET_VAR(__GLEW_ARB_texture_storage)/;"	d
GLEW_ARB_texture_storage_multisample	./GL/glew.h	/^#define GLEW_ARB_texture_storage_multisample GLEW_GET_VAR(__GLEW_ARB_texture_storage_multisample/;"	d
GLEW_ARB_texture_swizzle	./GL/glew.h	/^#define GLEW_ARB_texture_swizzle GLEW_GET_VAR(__GLEW_ARB_texture_swizzle)/;"	d
GLEW_ARB_texture_view	./GL/glew.h	/^#define GLEW_ARB_texture_view GLEW_GET_VAR(__GLEW_ARB_texture_view)/;"	d
GLEW_ARB_timer_query	./GL/glew.h	/^#define GLEW_ARB_timer_query GLEW_GET_VAR(__GLEW_ARB_timer_query)/;"	d
GLEW_ARB_transform_feedback2	./GL/glew.h	/^#define GLEW_ARB_transform_feedback2 GLEW_GET_VAR(__GLEW_ARB_transform_feedback2)/;"	d
GLEW_ARB_transform_feedback3	./GL/glew.h	/^#define GLEW_ARB_transform_feedback3 GLEW_GET_VAR(__GLEW_ARB_transform_feedback3)/;"	d
GLEW_ARB_transform_feedback_instanced	./GL/glew.h	/^#define GLEW_ARB_transform_feedback_instanced GLEW_GET_VAR(__GLEW_ARB_transform_feedback_instanc/;"	d
GLEW_ARB_transform_feedback_overflow_query	./GL/glew.h	/^#define GLEW_ARB_transform_feedback_overflow_query GLEW_GET_VAR(__GLEW_ARB_transform_feedback_ov/;"	d
GLEW_ARB_transpose_matrix	./GL/glew.h	/^#define GLEW_ARB_transpose_matrix GLEW_GET_VAR(__GLEW_ARB_transpose_matrix)/;"	d
GLEW_ARB_uniform_buffer_object	./GL/glew.h	/^#define GLEW_ARB_uniform_buffer_object GLEW_GET_VAR(__GLEW_ARB_uniform_buffer_object)/;"	d
GLEW_ARB_vertex_array_bgra	./GL/glew.h	/^#define GLEW_ARB_vertex_array_bgra GLEW_GET_VAR(__GLEW_ARB_vertex_array_bgra)/;"	d
GLEW_ARB_vertex_array_object	./GL/glew.h	/^#define GLEW_ARB_vertex_array_object GLEW_GET_VAR(__GLEW_ARB_vertex_array_object)/;"	d
GLEW_ARB_vertex_attrib_64bit	./GL/glew.h	/^#define GLEW_ARB_vertex_attrib_64bit GLEW_GET_VAR(__GLEW_ARB_vertex_attrib_64bit)/;"	d
GLEW_ARB_vertex_attrib_binding	./GL/glew.h	/^#define GLEW_ARB_vertex_attrib_binding GLEW_GET_VAR(__GLEW_ARB_vertex_attrib_binding)/;"	d
GLEW_ARB_vertex_blend	./GL/glew.h	/^#define GLEW_ARB_vertex_blend GLEW_GET_VAR(__GLEW_ARB_vertex_blend)/;"	d
GLEW_ARB_vertex_buffer_object	./GL/glew.h	/^#define GLEW_ARB_vertex_buffer_object GLEW_GET_VAR(__GLEW_ARB_vertex_buffer_object)/;"	d
GLEW_ARB_vertex_program	./GL/glew.h	/^#define GLEW_ARB_vertex_program GLEW_GET_VAR(__GLEW_ARB_vertex_program)/;"	d
GLEW_ARB_vertex_shader	./GL/glew.h	/^#define GLEW_ARB_vertex_shader GLEW_GET_VAR(__GLEW_ARB_vertex_shader)/;"	d
GLEW_ARB_vertex_type_10f_11f_11f_rev	./GL/glew.h	/^#define GLEW_ARB_vertex_type_10f_11f_11f_rev GLEW_GET_VAR(__GLEW_ARB_vertex_type_10f_11f_11f_rev/;"	d
GLEW_ARB_vertex_type_2_10_10_10_rev	./GL/glew.h	/^#define GLEW_ARB_vertex_type_2_10_10_10_rev GLEW_GET_VAR(__GLEW_ARB_vertex_type_2_10_10_10_rev)/;"	d
GLEW_ARB_viewport_array	./GL/glew.h	/^#define GLEW_ARB_viewport_array GLEW_GET_VAR(__GLEW_ARB_viewport_array)/;"	d
GLEW_ARB_window_pos	./GL/glew.h	/^#define GLEW_ARB_window_pos GLEW_GET_VAR(__GLEW_ARB_window_pos)/;"	d
GLEW_ARM_mali_program_binary	./GL/glew.h	/^#define GLEW_ARM_mali_program_binary GLEW_GET_VAR(__GLEW_ARM_mali_program_binary)/;"	d
GLEW_ARM_mali_shader_binary	./GL/glew.h	/^#define GLEW_ARM_mali_shader_binary GLEW_GET_VAR(__GLEW_ARM_mali_shader_binary)/;"	d
GLEW_ARM_rgba8	./GL/glew.h	/^#define GLEW_ARM_rgba8 GLEW_GET_VAR(__GLEW_ARM_rgba8)/;"	d
GLEW_ARM_shader_framebuffer_fetch	./GL/glew.h	/^#define GLEW_ARM_shader_framebuffer_fetch GLEW_GET_VAR(__GLEW_ARM_shader_framebuffer_fetch)/;"	d
GLEW_ARM_shader_framebuffer_fetch_depth_stencil	./GL/glew.h	/^#define GLEW_ARM_shader_framebuffer_fetch_depth_stencil GLEW_GET_VAR(__GLEW_ARM_shader_framebuff/;"	d
GLEW_ARM_texture_unnormalized_coordinates	./GL/glew.h	/^#define GLEW_ARM_texture_unnormalized_coordinates GLEW_GET_VAR(__GLEW_ARM_texture_unnormalized_c/;"	d
GLEW_ATIX_point_sprites	./GL/glew.h	/^#define GLEW_ATIX_point_sprites GLEW_GET_VAR(__GLEW_ATIX_point_sprites)/;"	d
GLEW_ATIX_texture_env_combine3	./GL/glew.h	/^#define GLEW_ATIX_texture_env_combine3 GLEW_GET_VAR(__GLEW_ATIX_texture_env_combine3)/;"	d
GLEW_ATIX_texture_env_route	./GL/glew.h	/^#define GLEW_ATIX_texture_env_route GLEW_GET_VAR(__GLEW_ATIX_texture_env_route)/;"	d
GLEW_ATIX_vertex_shader_output_point_size	./GL/glew.h	/^#define GLEW_ATIX_vertex_shader_output_point_size GLEW_GET_VAR(__GLEW_ATIX_vertex_shader_output_/;"	d
GLEW_ATI_draw_buffers	./GL/glew.h	/^#define GLEW_ATI_draw_buffers GLEW_GET_VAR(__GLEW_ATI_draw_buffers)/;"	d
GLEW_ATI_element_array	./GL/glew.h	/^#define GLEW_ATI_element_array GLEW_GET_VAR(__GLEW_ATI_element_array)/;"	d
GLEW_ATI_envmap_bumpmap	./GL/glew.h	/^#define GLEW_ATI_envmap_bumpmap GLEW_GET_VAR(__GLEW_ATI_envmap_bumpmap)/;"	d
GLEW_ATI_fragment_shader	./GL/glew.h	/^#define GLEW_ATI_fragment_shader GLEW_GET_VAR(__GLEW_ATI_fragment_shader)/;"	d
GLEW_ATI_map_object_buffer	./GL/glew.h	/^#define GLEW_ATI_map_object_buffer GLEW_GET_VAR(__GLEW_ATI_map_object_buffer)/;"	d
GLEW_ATI_meminfo	./GL/glew.h	/^#define GLEW_ATI_meminfo GLEW_GET_VAR(__GLEW_ATI_meminfo)/;"	d
GLEW_ATI_pn_triangles	./GL/glew.h	/^#define GLEW_ATI_pn_triangles GLEW_GET_VAR(__GLEW_ATI_pn_triangles)/;"	d
GLEW_ATI_separate_stencil	./GL/glew.h	/^#define GLEW_ATI_separate_stencil GLEW_GET_VAR(__GLEW_ATI_separate_stencil)/;"	d
GLEW_ATI_shader_texture_lod	./GL/glew.h	/^#define GLEW_ATI_shader_texture_lod GLEW_GET_VAR(__GLEW_ATI_shader_texture_lod)/;"	d
GLEW_ATI_text_fragment_shader	./GL/glew.h	/^#define GLEW_ATI_text_fragment_shader GLEW_GET_VAR(__GLEW_ATI_text_fragment_shader)/;"	d
GLEW_ATI_texture_compression_3dc	./GL/glew.h	/^#define GLEW_ATI_texture_compression_3dc GLEW_GET_VAR(__GLEW_ATI_texture_compression_3dc)/;"	d
GLEW_ATI_texture_env_combine3	./GL/glew.h	/^#define GLEW_ATI_texture_env_combine3 GLEW_GET_VAR(__GLEW_ATI_texture_env_combine3)/;"	d
GLEW_ATI_texture_float	./GL/glew.h	/^#define GLEW_ATI_texture_float GLEW_GET_VAR(__GLEW_ATI_texture_float)/;"	d
GLEW_ATI_texture_mirror_once	./GL/glew.h	/^#define GLEW_ATI_texture_mirror_once GLEW_GET_VAR(__GLEW_ATI_texture_mirror_once)/;"	d
GLEW_ATI_vertex_array_object	./GL/glew.h	/^#define GLEW_ATI_vertex_array_object GLEW_GET_VAR(__GLEW_ATI_vertex_array_object)/;"	d
GLEW_ATI_vertex_attrib_array_object	./GL/glew.h	/^#define GLEW_ATI_vertex_attrib_array_object GLEW_GET_VAR(__GLEW_ATI_vertex_attrib_array_object)/;"	d
GLEW_ATI_vertex_streams	./GL/glew.h	/^#define GLEW_ATI_vertex_streams GLEW_GET_VAR(__GLEW_ATI_vertex_streams)/;"	d
GLEW_BUILD	main.cpp	/^#define GLEW_BUILD /;"	d	file:
GLEW_CALLBACK_DEFINED	./GL/glew.h	/^#define GLEW_CALLBACK_DEFINED$/;"	d
GLEW_DMP_program_binary	./GL/glew.h	/^#define GLEW_DMP_program_binary GLEW_GET_VAR(__GLEW_DMP_program_binary)/;"	d
GLEW_DMP_shader_binary	./GL/glew.h	/^#define GLEW_DMP_shader_binary GLEW_GET_VAR(__GLEW_DMP_shader_binary)/;"	d
GLEW_ERROR_GLX_VERSION_11_ONLY	./GL/glew.h	/^#define GLEW_ERROR_GLX_VERSION_11_ONLY /;"	d
GLEW_ERROR_GL_VERSION_10_ONLY	./GL/glew.h	/^#define GLEW_ERROR_GL_VERSION_10_ONLY /;"	d
GLEW_ERROR_NO_GLX_DISPLAY	./GL/glew.h	/^#define GLEW_ERROR_NO_GLX_DISPLAY /;"	d
GLEW_ERROR_NO_GL_VERSION	./GL/glew.h	/^#define GLEW_ERROR_NO_GL_VERSION /;"	d
GLEW_EXT_422_pixels	./GL/glew.h	/^#define GLEW_EXT_422_pixels GLEW_GET_VAR(__GLEW_EXT_422_pixels)/;"	d
GLEW_EXT_Cg_shader	./GL/glew.h	/^#define GLEW_EXT_Cg_shader GLEW_GET_VAR(__GLEW_EXT_Cg_shader)/;"	d
GLEW_EXT_EGL_image_array	./GL/glew.h	/^#define GLEW_EXT_EGL_image_array GLEW_GET_VAR(__GLEW_EXT_EGL_image_array)/;"	d
GLEW_EXT_EGL_image_external_wrap_modes	./GL/glew.h	/^#define GLEW_EXT_EGL_image_external_wrap_modes GLEW_GET_VAR(__GLEW_EXT_EGL_image_external_wrap_m/;"	d
GLEW_EXT_EGL_image_storage	./GL/glew.h	/^#define GLEW_EXT_EGL_image_storage GLEW_GET_VAR(__GLEW_EXT_EGL_image_storage)/;"	d
GLEW_EXT_EGL_sync	./GL/glew.h	/^#define GLEW_EXT_EGL_sync GLEW_GET_VAR(__GLEW_EXT_EGL_sync)/;"	d
GLEW_EXT_YUV_target	./GL/glew.h	/^#define GLEW_EXT_YUV_target GLEW_GET_VAR(__GLEW_EXT_YUV_target)/;"	d
GLEW_EXT_abgr	./GL/glew.h	/^#define GLEW_EXT_abgr GLEW_GET_VAR(__GLEW_EXT_abgr)/;"	d
GLEW_EXT_base_instance	./GL/glew.h	/^#define GLEW_EXT_base_instance GLEW_GET_VAR(__GLEW_EXT_base_instance)/;"	d
GLEW_EXT_bgra	./GL/glew.h	/^#define GLEW_EXT_bgra GLEW_GET_VAR(__GLEW_EXT_bgra)/;"	d
GLEW_EXT_bindable_uniform	./GL/glew.h	/^#define GLEW_EXT_bindable_uniform GLEW_GET_VAR(__GLEW_EXT_bindable_uniform)/;"	d
GLEW_EXT_blend_color	./GL/glew.h	/^#define GLEW_EXT_blend_color GLEW_GET_VAR(__GLEW_EXT_blend_color)/;"	d
GLEW_EXT_blend_equation_separate	./GL/glew.h	/^#define GLEW_EXT_blend_equation_separate GLEW_GET_VAR(__GLEW_EXT_blend_equation_separate)/;"	d
GLEW_EXT_blend_func_extended	./GL/glew.h	/^#define GLEW_EXT_blend_func_extended GLEW_GET_VAR(__GLEW_EXT_blend_func_extended)/;"	d
GLEW_EXT_blend_func_separate	./GL/glew.h	/^#define GLEW_EXT_blend_func_separate GLEW_GET_VAR(__GLEW_EXT_blend_func_separate)/;"	d
GLEW_EXT_blend_logic_op	./GL/glew.h	/^#define GLEW_EXT_blend_logic_op GLEW_GET_VAR(__GLEW_EXT_blend_logic_op)/;"	d
GLEW_EXT_blend_minmax	./GL/glew.h	/^#define GLEW_EXT_blend_minmax GLEW_GET_VAR(__GLEW_EXT_blend_minmax)/;"	d
GLEW_EXT_blend_subtract	./GL/glew.h	/^#define GLEW_EXT_blend_subtract GLEW_GET_VAR(__GLEW_EXT_blend_subtract)/;"	d
GLEW_EXT_buffer_storage	./GL/glew.h	/^#define GLEW_EXT_buffer_storage GLEW_GET_VAR(__GLEW_EXT_buffer_storage)/;"	d
GLEW_EXT_clear_texture	./GL/glew.h	/^#define GLEW_EXT_clear_texture GLEW_GET_VAR(__GLEW_EXT_clear_texture)/;"	d
GLEW_EXT_clip_control	./GL/glew.h	/^#define GLEW_EXT_clip_control GLEW_GET_VAR(__GLEW_EXT_clip_control)/;"	d
GLEW_EXT_clip_cull_distance	./GL/glew.h	/^#define GLEW_EXT_clip_cull_distance GLEW_GET_VAR(__GLEW_EXT_clip_cull_distance)/;"	d
GLEW_EXT_clip_volume_hint	./GL/glew.h	/^#define GLEW_EXT_clip_volume_hint GLEW_GET_VAR(__GLEW_EXT_clip_volume_hint)/;"	d
GLEW_EXT_cmyka	./GL/glew.h	/^#define GLEW_EXT_cmyka GLEW_GET_VAR(__GLEW_EXT_cmyka)/;"	d
GLEW_EXT_color_buffer_float	./GL/glew.h	/^#define GLEW_EXT_color_buffer_float GLEW_GET_VAR(__GLEW_EXT_color_buffer_float)/;"	d
GLEW_EXT_color_buffer_half_float	./GL/glew.h	/^#define GLEW_EXT_color_buffer_half_float GLEW_GET_VAR(__GLEW_EXT_color_buffer_half_float)/;"	d
GLEW_EXT_color_subtable	./GL/glew.h	/^#define GLEW_EXT_color_subtable GLEW_GET_VAR(__GLEW_EXT_color_subtable)/;"	d
GLEW_EXT_compiled_vertex_array	./GL/glew.h	/^#define GLEW_EXT_compiled_vertex_array GLEW_GET_VAR(__GLEW_EXT_compiled_vertex_array)/;"	d
GLEW_EXT_compressed_ETC1_RGB8_sub_texture	./GL/glew.h	/^#define GLEW_EXT_compressed_ETC1_RGB8_sub_texture GLEW_GET_VAR(__GLEW_EXT_compressed_ETC1_RGB8_s/;"	d
GLEW_EXT_conservative_depth	./GL/glew.h	/^#define GLEW_EXT_conservative_depth GLEW_GET_VAR(__GLEW_EXT_conservative_depth)/;"	d
GLEW_EXT_convolution	./GL/glew.h	/^#define GLEW_EXT_convolution GLEW_GET_VAR(__GLEW_EXT_convolution)/;"	d
GLEW_EXT_coordinate_frame	./GL/glew.h	/^#define GLEW_EXT_coordinate_frame GLEW_GET_VAR(__GLEW_EXT_coordinate_frame)/;"	d
GLEW_EXT_copy_image	./GL/glew.h	/^#define GLEW_EXT_copy_image GLEW_GET_VAR(__GLEW_EXT_copy_image)/;"	d
GLEW_EXT_copy_texture	./GL/glew.h	/^#define GLEW_EXT_copy_texture GLEW_GET_VAR(__GLEW_EXT_copy_texture)/;"	d
GLEW_EXT_cull_vertex	./GL/glew.h	/^#define GLEW_EXT_cull_vertex GLEW_GET_VAR(__GLEW_EXT_cull_vertex)/;"	d
GLEW_EXT_debug_label	./GL/glew.h	/^#define GLEW_EXT_debug_label GLEW_GET_VAR(__GLEW_EXT_debug_label)/;"	d
GLEW_EXT_debug_marker	./GL/glew.h	/^#define GLEW_EXT_debug_marker GLEW_GET_VAR(__GLEW_EXT_debug_marker)/;"	d
GLEW_EXT_depth_bounds_test	./GL/glew.h	/^#define GLEW_EXT_depth_bounds_test GLEW_GET_VAR(__GLEW_EXT_depth_bounds_test)/;"	d
GLEW_EXT_depth_clamp	./GL/glew.h	/^#define GLEW_EXT_depth_clamp GLEW_GET_VAR(__GLEW_EXT_depth_clamp)/;"	d
GLEW_EXT_direct_state_access	./GL/glew.h	/^#define GLEW_EXT_direct_state_access GLEW_GET_VAR(__GLEW_EXT_direct_state_access)/;"	d
GLEW_EXT_discard_framebuffer	./GL/glew.h	/^#define GLEW_EXT_discard_framebuffer GLEW_GET_VAR(__GLEW_EXT_discard_framebuffer)/;"	d
GLEW_EXT_disjoint_timer_query	./GL/glew.h	/^#define GLEW_EXT_disjoint_timer_query GLEW_GET_VAR(__GLEW_EXT_disjoint_timer_query)/;"	d
GLEW_EXT_draw_buffers	./GL/glew.h	/^#define GLEW_EXT_draw_buffers GLEW_GET_VAR(__GLEW_EXT_draw_buffers)/;"	d
GLEW_EXT_draw_buffers2	./GL/glew.h	/^#define GLEW_EXT_draw_buffers2 GLEW_GET_VAR(__GLEW_EXT_draw_buffers2)/;"	d
GLEW_EXT_draw_buffers_indexed	./GL/glew.h	/^#define GLEW_EXT_draw_buffers_indexed GLEW_GET_VAR(__GLEW_EXT_draw_buffers_indexed)/;"	d
GLEW_EXT_draw_elements_base_vertex	./GL/glew.h	/^#define GLEW_EXT_draw_elements_base_vertex GLEW_GET_VAR(__GLEW_EXT_draw_elements_base_vertex)/;"	d
GLEW_EXT_draw_instanced	./GL/glew.h	/^#define GLEW_EXT_draw_instanced GLEW_GET_VAR(__GLEW_EXT_draw_instanced)/;"	d
GLEW_EXT_draw_range_elements	./GL/glew.h	/^#define GLEW_EXT_draw_range_elements GLEW_GET_VAR(__GLEW_EXT_draw_range_elements)/;"	d
GLEW_EXT_draw_transform_feedback	./GL/glew.h	/^#define GLEW_EXT_draw_transform_feedback GLEW_GET_VAR(__GLEW_EXT_draw_transform_feedback)/;"	d
GLEW_EXT_external_buffer	./GL/glew.h	/^#define GLEW_EXT_external_buffer GLEW_GET_VAR(__GLEW_EXT_external_buffer)/;"	d
GLEW_EXT_float_blend	./GL/glew.h	/^#define GLEW_EXT_float_blend GLEW_GET_VAR(__GLEW_EXT_float_blend)/;"	d
GLEW_EXT_fog_coord	./GL/glew.h	/^#define GLEW_EXT_fog_coord GLEW_GET_VAR(__GLEW_EXT_fog_coord)/;"	d
GLEW_EXT_frag_depth	./GL/glew.h	/^#define GLEW_EXT_frag_depth GLEW_GET_VAR(__GLEW_EXT_frag_depth)/;"	d
GLEW_EXT_fragment_lighting	./GL/glew.h	/^#define GLEW_EXT_fragment_lighting GLEW_GET_VAR(__GLEW_EXT_fragment_lighting)/;"	d
GLEW_EXT_framebuffer_blit	./GL/glew.h	/^#define GLEW_EXT_framebuffer_blit GLEW_GET_VAR(__GLEW_EXT_framebuffer_blit)/;"	d
GLEW_EXT_framebuffer_multisample	./GL/glew.h	/^#define GLEW_EXT_framebuffer_multisample GLEW_GET_VAR(__GLEW_EXT_framebuffer_multisample)/;"	d
GLEW_EXT_framebuffer_multisample_blit_scaled	./GL/glew.h	/^#define GLEW_EXT_framebuffer_multisample_blit_scaled GLEW_GET_VAR(__GLEW_EXT_framebuffer_multisa/;"	d
GLEW_EXT_framebuffer_object	./GL/glew.h	/^#define GLEW_EXT_framebuffer_object GLEW_GET_VAR(__GLEW_EXT_framebuffer_object)/;"	d
GLEW_EXT_framebuffer_sRGB	./GL/glew.h	/^#define GLEW_EXT_framebuffer_sRGB GLEW_GET_VAR(__GLEW_EXT_framebuffer_sRGB)/;"	d
GLEW_EXT_geometry_point_size	./GL/glew.h	/^#define GLEW_EXT_geometry_point_size GLEW_GET_VAR(__GLEW_EXT_geometry_point_size)/;"	d
GLEW_EXT_geometry_shader	./GL/glew.h	/^#define GLEW_EXT_geometry_shader GLEW_GET_VAR(__GLEW_EXT_geometry_shader)/;"	d
GLEW_EXT_geometry_shader4	./GL/glew.h	/^#define GLEW_EXT_geometry_shader4 GLEW_GET_VAR(__GLEW_EXT_geometry_shader4)/;"	d
GLEW_EXT_gpu_program_parameters	./GL/glew.h	/^#define GLEW_EXT_gpu_program_parameters GLEW_GET_VAR(__GLEW_EXT_gpu_program_parameters)/;"	d
GLEW_EXT_gpu_shader4	./GL/glew.h	/^#define GLEW_EXT_gpu_shader4 GLEW_GET_VAR(__GLEW_EXT_gpu_shader4)/;"	d
GLEW_EXT_gpu_shader5	./GL/glew.h	/^#define GLEW_EXT_gpu_shader5 GLEW_GET_VAR(__GLEW_EXT_gpu_shader5)/;"	d
GLEW_EXT_histogram	./GL/glew.h	/^#define GLEW_EXT_histogram GLEW_GET_VAR(__GLEW_EXT_histogram)/;"	d
GLEW_EXT_index_array_formats	./GL/glew.h	/^#define GLEW_EXT_index_array_formats GLEW_GET_VAR(__GLEW_EXT_index_array_formats)/;"	d
GLEW_EXT_index_func	./GL/glew.h	/^#define GLEW_EXT_index_func GLEW_GET_VAR(__GLEW_EXT_index_func)/;"	d
GLEW_EXT_index_material	./GL/glew.h	/^#define GLEW_EXT_index_material GLEW_GET_VAR(__GLEW_EXT_index_material)/;"	d
GLEW_EXT_index_texture	./GL/glew.h	/^#define GLEW_EXT_index_texture GLEW_GET_VAR(__GLEW_EXT_index_texture)/;"	d
GLEW_EXT_instanced_arrays	./GL/glew.h	/^#define GLEW_EXT_instanced_arrays GLEW_GET_VAR(__GLEW_EXT_instanced_arrays)/;"	d
GLEW_EXT_light_texture	./GL/glew.h	/^#define GLEW_EXT_light_texture GLEW_GET_VAR(__GLEW_EXT_light_texture)/;"	d
GLEW_EXT_map_buffer_range	./GL/glew.h	/^#define GLEW_EXT_map_buffer_range GLEW_GET_VAR(__GLEW_EXT_map_buffer_range)/;"	d
GLEW_EXT_memory_object	./GL/glew.h	/^#define GLEW_EXT_memory_object GLEW_GET_VAR(__GLEW_EXT_memory_object)/;"	d
GLEW_EXT_memory_object_fd	./GL/glew.h	/^#define GLEW_EXT_memory_object_fd GLEW_GET_VAR(__GLEW_EXT_memory_object_fd)/;"	d
GLEW_EXT_memory_object_win32	./GL/glew.h	/^#define GLEW_EXT_memory_object_win32 GLEW_GET_VAR(__GLEW_EXT_memory_object_win32)/;"	d
GLEW_EXT_misc_attribute	./GL/glew.h	/^#define GLEW_EXT_misc_attribute GLEW_GET_VAR(__GLEW_EXT_misc_attribute)/;"	d
GLEW_EXT_multi_draw_arrays	./GL/glew.h	/^#define GLEW_EXT_multi_draw_arrays GLEW_GET_VAR(__GLEW_EXT_multi_draw_arrays)/;"	d
GLEW_EXT_multi_draw_indirect	./GL/glew.h	/^#define GLEW_EXT_multi_draw_indirect GLEW_GET_VAR(__GLEW_EXT_multi_draw_indirect)/;"	d
GLEW_EXT_multiple_textures	./GL/glew.h	/^#define GLEW_EXT_multiple_textures GLEW_GET_VAR(__GLEW_EXT_multiple_textures)/;"	d
GLEW_EXT_multisample	./GL/glew.h	/^#define GLEW_EXT_multisample GLEW_GET_VAR(__GLEW_EXT_multisample)/;"	d
GLEW_EXT_multisample_compatibility	./GL/glew.h	/^#define GLEW_EXT_multisample_compatibility GLEW_GET_VAR(__GLEW_EXT_multisample_compatibility)/;"	d
GLEW_EXT_multisampled_render_to_texture	./GL/glew.h	/^#define GLEW_EXT_multisampled_render_to_texture GLEW_GET_VAR(__GLEW_EXT_multisampled_render_to_t/;"	d
GLEW_EXT_multisampled_render_to_texture2	./GL/glew.h	/^#define GLEW_EXT_multisampled_render_to_texture2 GLEW_GET_VAR(__GLEW_EXT_multisampled_render_to_/;"	d
GLEW_EXT_multiview_draw_buffers	./GL/glew.h	/^#define GLEW_EXT_multiview_draw_buffers GLEW_GET_VAR(__GLEW_EXT_multiview_draw_buffers)/;"	d
GLEW_EXT_multiview_tessellation_geometry_shader	./GL/glew.h	/^#define GLEW_EXT_multiview_tessellation_geometry_shader GLEW_GET_VAR(__GLEW_EXT_multiview_tessel/;"	d
GLEW_EXT_multiview_texture_multisample	./GL/glew.h	/^#define GLEW_EXT_multiview_texture_multisample GLEW_GET_VAR(__GLEW_EXT_multiview_texture_multisa/;"	d
GLEW_EXT_multiview_timer_query	./GL/glew.h	/^#define GLEW_EXT_multiview_timer_query GLEW_GET_VAR(__GLEW_EXT_multiview_timer_query)/;"	d
GLEW_EXT_occlusion_query_boolean	./GL/glew.h	/^#define GLEW_EXT_occlusion_query_boolean GLEW_GET_VAR(__GLEW_EXT_occlusion_query_boolean)/;"	d
GLEW_EXT_packed_depth_stencil	./GL/glew.h	/^#define GLEW_EXT_packed_depth_stencil GLEW_GET_VAR(__GLEW_EXT_packed_depth_stencil)/;"	d
GLEW_EXT_packed_float	./GL/glew.h	/^#define GLEW_EXT_packed_float GLEW_GET_VAR(__GLEW_EXT_packed_float)/;"	d
GLEW_EXT_packed_pixels	./GL/glew.h	/^#define GLEW_EXT_packed_pixels GLEW_GET_VAR(__GLEW_EXT_packed_pixels)/;"	d
GLEW_EXT_paletted_texture	./GL/glew.h	/^#define GLEW_EXT_paletted_texture GLEW_GET_VAR(__GLEW_EXT_paletted_texture)/;"	d
GLEW_EXT_pixel_buffer_object	./GL/glew.h	/^#define GLEW_EXT_pixel_buffer_object GLEW_GET_VAR(__GLEW_EXT_pixel_buffer_object)/;"	d
GLEW_EXT_pixel_transform	./GL/glew.h	/^#define GLEW_EXT_pixel_transform GLEW_GET_VAR(__GLEW_EXT_pixel_transform)/;"	d
GLEW_EXT_pixel_transform_color_table	./GL/glew.h	/^#define GLEW_EXT_pixel_transform_color_table GLEW_GET_VAR(__GLEW_EXT_pixel_transform_color_table/;"	d
GLEW_EXT_point_parameters	./GL/glew.h	/^#define GLEW_EXT_point_parameters GLEW_GET_VAR(__GLEW_EXT_point_parameters)/;"	d
GLEW_EXT_polygon_offset	./GL/glew.h	/^#define GLEW_EXT_polygon_offset GLEW_GET_VAR(__GLEW_EXT_polygon_offset)/;"	d
GLEW_EXT_polygon_offset_clamp	./GL/glew.h	/^#define GLEW_EXT_polygon_offset_clamp GLEW_GET_VAR(__GLEW_EXT_polygon_offset_clamp)/;"	d
GLEW_EXT_post_depth_coverage	./GL/glew.h	/^#define GLEW_EXT_post_depth_coverage GLEW_GET_VAR(__GLEW_EXT_post_depth_coverage)/;"	d
GLEW_EXT_primitive_bounding_box	./GL/glew.h	/^#define GLEW_EXT_primitive_bounding_box GLEW_GET_VAR(__GLEW_EXT_primitive_bounding_box)/;"	d
GLEW_EXT_protected_textures	./GL/glew.h	/^#define GLEW_EXT_protected_textures GLEW_GET_VAR(__GLEW_EXT_protected_textures)/;"	d
GLEW_EXT_provoking_vertex	./GL/glew.h	/^#define GLEW_EXT_provoking_vertex GLEW_GET_VAR(__GLEW_EXT_provoking_vertex)/;"	d
GLEW_EXT_pvrtc_sRGB	./GL/glew.h	/^#define GLEW_EXT_pvrtc_sRGB GLEW_GET_VAR(__GLEW_EXT_pvrtc_sRGB)/;"	d
GLEW_EXT_raster_multisample	./GL/glew.h	/^#define GLEW_EXT_raster_multisample GLEW_GET_VAR(__GLEW_EXT_raster_multisample)/;"	d
GLEW_EXT_read_format_bgra	./GL/glew.h	/^#define GLEW_EXT_read_format_bgra GLEW_GET_VAR(__GLEW_EXT_read_format_bgra)/;"	d
GLEW_EXT_render_snorm	./GL/glew.h	/^#define GLEW_EXT_render_snorm GLEW_GET_VAR(__GLEW_EXT_render_snorm)/;"	d
GLEW_EXT_rescale_normal	./GL/glew.h	/^#define GLEW_EXT_rescale_normal GLEW_GET_VAR(__GLEW_EXT_rescale_normal)/;"	d
GLEW_EXT_robustness	./GL/glew.h	/^#define GLEW_EXT_robustness GLEW_GET_VAR(__GLEW_EXT_robustness)/;"	d
GLEW_EXT_sRGB	./GL/glew.h	/^#define GLEW_EXT_sRGB GLEW_GET_VAR(__GLEW_EXT_sRGB)/;"	d
GLEW_EXT_sRGB_write_control	./GL/glew.h	/^#define GLEW_EXT_sRGB_write_control GLEW_GET_VAR(__GLEW_EXT_sRGB_write_control)/;"	d
GLEW_EXT_scene_marker	./GL/glew.h	/^#define GLEW_EXT_scene_marker GLEW_GET_VAR(__GLEW_EXT_scene_marker)/;"	d
GLEW_EXT_secondary_color	./GL/glew.h	/^#define GLEW_EXT_secondary_color GLEW_GET_VAR(__GLEW_EXT_secondary_color)/;"	d
GLEW_EXT_semaphore	./GL/glew.h	/^#define GLEW_EXT_semaphore GLEW_GET_VAR(__GLEW_EXT_semaphore)/;"	d
GLEW_EXT_semaphore_fd	./GL/glew.h	/^#define GLEW_EXT_semaphore_fd GLEW_GET_VAR(__GLEW_EXT_semaphore_fd)/;"	d
GLEW_EXT_semaphore_win32	./GL/glew.h	/^#define GLEW_EXT_semaphore_win32 GLEW_GET_VAR(__GLEW_EXT_semaphore_win32)/;"	d
GLEW_EXT_separate_shader_objects	./GL/glew.h	/^#define GLEW_EXT_separate_shader_objects GLEW_GET_VAR(__GLEW_EXT_separate_shader_objects)/;"	d
GLEW_EXT_separate_specular_color	./GL/glew.h	/^#define GLEW_EXT_separate_specular_color GLEW_GET_VAR(__GLEW_EXT_separate_specular_color)/;"	d
GLEW_EXT_shader_framebuffer_fetch	./GL/glew.h	/^#define GLEW_EXT_shader_framebuffer_fetch GLEW_GET_VAR(__GLEW_EXT_shader_framebuffer_fetch)/;"	d
GLEW_EXT_shader_framebuffer_fetch_non_coherent	./GL/glew.h	/^#define GLEW_EXT_shader_framebuffer_fetch_non_coherent GLEW_GET_VAR(__GLEW_EXT_shader_framebuffe/;"	d
GLEW_EXT_shader_group_vote	./GL/glew.h	/^#define GLEW_EXT_shader_group_vote GLEW_GET_VAR(__GLEW_EXT_shader_group_vote)/;"	d
GLEW_EXT_shader_image_load_formatted	./GL/glew.h	/^#define GLEW_EXT_shader_image_load_formatted GLEW_GET_VAR(__GLEW_EXT_shader_image_load_formatted/;"	d
GLEW_EXT_shader_image_load_store	./GL/glew.h	/^#define GLEW_EXT_shader_image_load_store GLEW_GET_VAR(__GLEW_EXT_shader_image_load_store)/;"	d
GLEW_EXT_shader_implicit_conversions	./GL/glew.h	/^#define GLEW_EXT_shader_implicit_conversions GLEW_GET_VAR(__GLEW_EXT_shader_implicit_conversions/;"	d
GLEW_EXT_shader_integer_mix	./GL/glew.h	/^#define GLEW_EXT_shader_integer_mix GLEW_GET_VAR(__GLEW_EXT_shader_integer_mix)/;"	d
GLEW_EXT_shader_io_blocks	./GL/glew.h	/^#define GLEW_EXT_shader_io_blocks GLEW_GET_VAR(__GLEW_EXT_shader_io_blocks)/;"	d
GLEW_EXT_shader_non_constant_global_initializers	./GL/glew.h	/^#define GLEW_EXT_shader_non_constant_global_initializers GLEW_GET_VAR(__GLEW_EXT_shader_non_cons/;"	d
GLEW_EXT_shader_pixel_local_storage	./GL/glew.h	/^#define GLEW_EXT_shader_pixel_local_storage GLEW_GET_VAR(__GLEW_EXT_shader_pixel_local_storage)/;"	d
GLEW_EXT_shader_pixel_local_storage2	./GL/glew.h	/^#define GLEW_EXT_shader_pixel_local_storage2 GLEW_GET_VAR(__GLEW_EXT_shader_pixel_local_storage2/;"	d
GLEW_EXT_shader_texture_lod	./GL/glew.h	/^#define GLEW_EXT_shader_texture_lod GLEW_GET_VAR(__GLEW_EXT_shader_texture_lod)/;"	d
GLEW_EXT_shadow_funcs	./GL/glew.h	/^#define GLEW_EXT_shadow_funcs GLEW_GET_VAR(__GLEW_EXT_shadow_funcs)/;"	d
GLEW_EXT_shadow_samplers	./GL/glew.h	/^#define GLEW_EXT_shadow_samplers GLEW_GET_VAR(__GLEW_EXT_shadow_samplers)/;"	d
GLEW_EXT_shared_texture_palette	./GL/glew.h	/^#define GLEW_EXT_shared_texture_palette GLEW_GET_VAR(__GLEW_EXT_shared_texture_palette)/;"	d
GLEW_EXT_sparse_texture	./GL/glew.h	/^#define GLEW_EXT_sparse_texture GLEW_GET_VAR(__GLEW_EXT_sparse_texture)/;"	d
GLEW_EXT_sparse_texture2	./GL/glew.h	/^#define GLEW_EXT_sparse_texture2 GLEW_GET_VAR(__GLEW_EXT_sparse_texture2)/;"	d
GLEW_EXT_static_vertex_array	./GL/glew.h	/^#define GLEW_EXT_static_vertex_array GLEW_GET_VAR(__GLEW_EXT_static_vertex_array)/;"	d
GLEW_EXT_stencil_clear_tag	./GL/glew.h	/^#define GLEW_EXT_stencil_clear_tag GLEW_GET_VAR(__GLEW_EXT_stencil_clear_tag)/;"	d
GLEW_EXT_stencil_two_side	./GL/glew.h	/^#define GLEW_EXT_stencil_two_side GLEW_GET_VAR(__GLEW_EXT_stencil_two_side)/;"	d
GLEW_EXT_stencil_wrap	./GL/glew.h	/^#define GLEW_EXT_stencil_wrap GLEW_GET_VAR(__GLEW_EXT_stencil_wrap)/;"	d
GLEW_EXT_subtexture	./GL/glew.h	/^#define GLEW_EXT_subtexture GLEW_GET_VAR(__GLEW_EXT_subtexture)/;"	d
GLEW_EXT_tessellation_point_size	./GL/glew.h	/^#define GLEW_EXT_tessellation_point_size GLEW_GET_VAR(__GLEW_EXT_tessellation_point_size)/;"	d
GLEW_EXT_tessellation_shader	./GL/glew.h	/^#define GLEW_EXT_tessellation_shader GLEW_GET_VAR(__GLEW_EXT_tessellation_shader)/;"	d
GLEW_EXT_texture	./GL/glew.h	/^#define GLEW_EXT_texture GLEW_GET_VAR(__GLEW_EXT_texture)/;"	d
GLEW_EXT_texture3D	./GL/glew.h	/^#define GLEW_EXT_texture3D GLEW_GET_VAR(__GLEW_EXT_texture3D)/;"	d
GLEW_EXT_texture_array	./GL/glew.h	/^#define GLEW_EXT_texture_array GLEW_GET_VAR(__GLEW_EXT_texture_array)/;"	d
GLEW_EXT_texture_border_clamp	./GL/glew.h	/^#define GLEW_EXT_texture_border_clamp GLEW_GET_VAR(__GLEW_EXT_texture_border_clamp)/;"	d
GLEW_EXT_texture_buffer	./GL/glew.h	/^#define GLEW_EXT_texture_buffer GLEW_GET_VAR(__GLEW_EXT_texture_buffer)/;"	d
GLEW_EXT_texture_buffer_object	./GL/glew.h	/^#define GLEW_EXT_texture_buffer_object GLEW_GET_VAR(__GLEW_EXT_texture_buffer_object)/;"	d
GLEW_EXT_texture_compression_astc_decode_mode	./GL/glew.h	/^#define GLEW_EXT_texture_compression_astc_decode_mode GLEW_GET_VAR(__GLEW_EXT_texture_compressio/;"	d
GLEW_EXT_texture_compression_astc_decode_mode_rgb9e5	./GL/glew.h	/^#define GLEW_EXT_texture_compression_astc_decode_mode_rgb9e5 GLEW_GET_VAR(__GLEW_EXT_texture_com/;"	d
GLEW_EXT_texture_compression_bptc	./GL/glew.h	/^#define GLEW_EXT_texture_compression_bptc GLEW_GET_VAR(__GLEW_EXT_texture_compression_bptc)/;"	d
GLEW_EXT_texture_compression_dxt1	./GL/glew.h	/^#define GLEW_EXT_texture_compression_dxt1 GLEW_GET_VAR(__GLEW_EXT_texture_compression_dxt1)/;"	d
GLEW_EXT_texture_compression_latc	./GL/glew.h	/^#define GLEW_EXT_texture_compression_latc GLEW_GET_VAR(__GLEW_EXT_texture_compression_latc)/;"	d
GLEW_EXT_texture_compression_rgtc	./GL/glew.h	/^#define GLEW_EXT_texture_compression_rgtc GLEW_GET_VAR(__GLEW_EXT_texture_compression_rgtc)/;"	d
GLEW_EXT_texture_compression_s3tc	./GL/glew.h	/^#define GLEW_EXT_texture_compression_s3tc GLEW_GET_VAR(__GLEW_EXT_texture_compression_s3tc)/;"	d
GLEW_EXT_texture_compression_s3tc_srgb	./GL/glew.h	/^#define GLEW_EXT_texture_compression_s3tc_srgb GLEW_GET_VAR(__GLEW_EXT_texture_compression_s3tc_/;"	d
GLEW_EXT_texture_cube_map	./GL/glew.h	/^#define GLEW_EXT_texture_cube_map GLEW_GET_VAR(__GLEW_EXT_texture_cube_map)/;"	d
GLEW_EXT_texture_cube_map_array	./GL/glew.h	/^#define GLEW_EXT_texture_cube_map_array GLEW_GET_VAR(__GLEW_EXT_texture_cube_map_array)/;"	d
GLEW_EXT_texture_edge_clamp	./GL/glew.h	/^#define GLEW_EXT_texture_edge_clamp GLEW_GET_VAR(__GLEW_EXT_texture_edge_clamp)/;"	d
GLEW_EXT_texture_env	./GL/glew.h	/^#define GLEW_EXT_texture_env GLEW_GET_VAR(__GLEW_EXT_texture_env)/;"	d
GLEW_EXT_texture_env_add	./GL/glew.h	/^#define GLEW_EXT_texture_env_add GLEW_GET_VAR(__GLEW_EXT_texture_env_add)/;"	d
GLEW_EXT_texture_env_combine	./GL/glew.h	/^#define GLEW_EXT_texture_env_combine GLEW_GET_VAR(__GLEW_EXT_texture_env_combine)/;"	d
GLEW_EXT_texture_env_dot3	./GL/glew.h	/^#define GLEW_EXT_texture_env_dot3 GLEW_GET_VAR(__GLEW_EXT_texture_env_dot3)/;"	d
GLEW_EXT_texture_filter_anisotropic	./GL/glew.h	/^#define GLEW_EXT_texture_filter_anisotropic GLEW_GET_VAR(__GLEW_EXT_texture_filter_anisotropic)/;"	d
GLEW_EXT_texture_filter_minmax	./GL/glew.h	/^#define GLEW_EXT_texture_filter_minmax GLEW_GET_VAR(__GLEW_EXT_texture_filter_minmax)/;"	d
GLEW_EXT_texture_format_BGRA8888	./GL/glew.h	/^#define GLEW_EXT_texture_format_BGRA8888 GLEW_GET_VAR(__GLEW_EXT_texture_format_BGRA8888)/;"	d
GLEW_EXT_texture_format_sRGB_override	./GL/glew.h	/^#define GLEW_EXT_texture_format_sRGB_override GLEW_GET_VAR(__GLEW_EXT_texture_format_sRGB_overri/;"	d
GLEW_EXT_texture_integer	./GL/glew.h	/^#define GLEW_EXT_texture_integer GLEW_GET_VAR(__GLEW_EXT_texture_integer)/;"	d
GLEW_EXT_texture_lod_bias	./GL/glew.h	/^#define GLEW_EXT_texture_lod_bias GLEW_GET_VAR(__GLEW_EXT_texture_lod_bias)/;"	d
GLEW_EXT_texture_mirror_clamp	./GL/glew.h	/^#define GLEW_EXT_texture_mirror_clamp GLEW_GET_VAR(__GLEW_EXT_texture_mirror_clamp)/;"	d
GLEW_EXT_texture_mirror_clamp_to_edge	./GL/glew.h	/^#define GLEW_EXT_texture_mirror_clamp_to_edge GLEW_GET_VAR(__GLEW_EXT_texture_mirror_clamp_to_ed/;"	d
GLEW_EXT_texture_norm16	./GL/glew.h	/^#define GLEW_EXT_texture_norm16 GLEW_GET_VAR(__GLEW_EXT_texture_norm16)/;"	d
GLEW_EXT_texture_object	./GL/glew.h	/^#define GLEW_EXT_texture_object GLEW_GET_VAR(__GLEW_EXT_texture_object)/;"	d
GLEW_EXT_texture_perturb_normal	./GL/glew.h	/^#define GLEW_EXT_texture_perturb_normal GLEW_GET_VAR(__GLEW_EXT_texture_perturb_normal)/;"	d
GLEW_EXT_texture_query_lod	./GL/glew.h	/^#define GLEW_EXT_texture_query_lod GLEW_GET_VAR(__GLEW_EXT_texture_query_lod)/;"	d
GLEW_EXT_texture_rectangle	./GL/glew.h	/^#define GLEW_EXT_texture_rectangle GLEW_GET_VAR(__GLEW_EXT_texture_rectangle)/;"	d
GLEW_EXT_texture_rg	./GL/glew.h	/^#define GLEW_EXT_texture_rg GLEW_GET_VAR(__GLEW_EXT_texture_rg)/;"	d
GLEW_EXT_texture_sRGB	./GL/glew.h	/^#define GLEW_EXT_texture_sRGB GLEW_GET_VAR(__GLEW_EXT_texture_sRGB)/;"	d
GLEW_EXT_texture_sRGB_R8	./GL/glew.h	/^#define GLEW_EXT_texture_sRGB_R8 GLEW_GET_VAR(__GLEW_EXT_texture_sRGB_R8)/;"	d
GLEW_EXT_texture_sRGB_RG8	./GL/glew.h	/^#define GLEW_EXT_texture_sRGB_RG8 GLEW_GET_VAR(__GLEW_EXT_texture_sRGB_RG8)/;"	d
GLEW_EXT_texture_sRGB_decode	./GL/glew.h	/^#define GLEW_EXT_texture_sRGB_decode GLEW_GET_VAR(__GLEW_EXT_texture_sRGB_decode)/;"	d
GLEW_EXT_texture_shadow_lod	./GL/glew.h	/^#define GLEW_EXT_texture_shadow_lod GLEW_GET_VAR(__GLEW_EXT_texture_shadow_lod)/;"	d
GLEW_EXT_texture_shared_exponent	./GL/glew.h	/^#define GLEW_EXT_texture_shared_exponent GLEW_GET_VAR(__GLEW_EXT_texture_shared_exponent)/;"	d
GLEW_EXT_texture_snorm	./GL/glew.h	/^#define GLEW_EXT_texture_snorm GLEW_GET_VAR(__GLEW_EXT_texture_snorm)/;"	d
GLEW_EXT_texture_storage	./GL/glew.h	/^#define GLEW_EXT_texture_storage GLEW_GET_VAR(__GLEW_EXT_texture_storage)/;"	d
GLEW_EXT_texture_swizzle	./GL/glew.h	/^#define GLEW_EXT_texture_swizzle GLEW_GET_VAR(__GLEW_EXT_texture_swizzle)/;"	d
GLEW_EXT_texture_type_2_10_10_10_REV	./GL/glew.h	/^#define GLEW_EXT_texture_type_2_10_10_10_REV GLEW_GET_VAR(__GLEW_EXT_texture_type_2_10_10_10_REV/;"	d
GLEW_EXT_texture_view	./GL/glew.h	/^#define GLEW_EXT_texture_view GLEW_GET_VAR(__GLEW_EXT_texture_view)/;"	d
GLEW_EXT_timer_query	./GL/glew.h	/^#define GLEW_EXT_timer_query GLEW_GET_VAR(__GLEW_EXT_timer_query)/;"	d
GLEW_EXT_transform_feedback	./GL/glew.h	/^#define GLEW_EXT_transform_feedback GLEW_GET_VAR(__GLEW_EXT_transform_feedback)/;"	d
GLEW_EXT_unpack_subimage	./GL/glew.h	/^#define GLEW_EXT_unpack_subimage GLEW_GET_VAR(__GLEW_EXT_unpack_subimage)/;"	d
GLEW_EXT_vertex_array	./GL/glew.h	/^#define GLEW_EXT_vertex_array GLEW_GET_VAR(__GLEW_EXT_vertex_array)/;"	d
GLEW_EXT_vertex_array_bgra	./GL/glew.h	/^#define GLEW_EXT_vertex_array_bgra GLEW_GET_VAR(__GLEW_EXT_vertex_array_bgra)/;"	d
GLEW_EXT_vertex_array_setXXX	./GL/glew.h	/^#define GLEW_EXT_vertex_array_setXXX GLEW_GET_VAR(__GLEW_EXT_vertex_array_setXXX)/;"	d
GLEW_EXT_vertex_attrib_64bit	./GL/glew.h	/^#define GLEW_EXT_vertex_attrib_64bit GLEW_GET_VAR(__GLEW_EXT_vertex_attrib_64bit)/;"	d
GLEW_EXT_vertex_shader	./GL/glew.h	/^#define GLEW_EXT_vertex_shader GLEW_GET_VAR(__GLEW_EXT_vertex_shader)/;"	d
GLEW_EXT_vertex_weighting	./GL/glew.h	/^#define GLEW_EXT_vertex_weighting GLEW_GET_VAR(__GLEW_EXT_vertex_weighting)/;"	d
GLEW_EXT_win32_keyed_mutex	./GL/glew.h	/^#define GLEW_EXT_win32_keyed_mutex GLEW_GET_VAR(__GLEW_EXT_win32_keyed_mutex)/;"	d
GLEW_EXT_window_rectangles	./GL/glew.h	/^#define GLEW_EXT_window_rectangles GLEW_GET_VAR(__GLEW_EXT_window_rectangles)/;"	d
GLEW_EXT_x11_sync_object	./GL/glew.h	/^#define GLEW_EXT_x11_sync_object GLEW_GET_VAR(__GLEW_EXT_x11_sync_object)/;"	d
GLEW_FJ_shader_binary_GCCSO	./GL/glew.h	/^#define GLEW_FJ_shader_binary_GCCSO GLEW_GET_VAR(__GLEW_FJ_shader_binary_GCCSO)/;"	d
GLEW_FUN_EXPORT	./GL/glew.h	/^#define GLEW_FUN_EXPORT /;"	d
GLEW_GET_FUN	./GL/glew.h	/^#define GLEW_GET_FUN(/;"	d
GLEW_GET_VAR	./GL/glew.h	/^#define GLEW_GET_VAR(/;"	d
GLEW_GREMEDY_frame_terminator	./GL/glew.h	/^#define GLEW_GREMEDY_frame_terminator GLEW_GET_VAR(__GLEW_GREMEDY_frame_terminator)/;"	d
GLEW_GREMEDY_string_marker	./GL/glew.h	/^#define GLEW_GREMEDY_string_marker GLEW_GET_VAR(__GLEW_GREMEDY_string_marker)/;"	d
GLEW_HP_convolution_border_modes	./GL/glew.h	/^#define GLEW_HP_convolution_border_modes GLEW_GET_VAR(__GLEW_HP_convolution_border_modes)/;"	d
GLEW_HP_image_transform	./GL/glew.h	/^#define GLEW_HP_image_transform GLEW_GET_VAR(__GLEW_HP_image_transform)/;"	d
GLEW_HP_occlusion_test	./GL/glew.h	/^#define GLEW_HP_occlusion_test GLEW_GET_VAR(__GLEW_HP_occlusion_test)/;"	d
GLEW_HP_texture_lighting	./GL/glew.h	/^#define GLEW_HP_texture_lighting GLEW_GET_VAR(__GLEW_HP_texture_lighting)/;"	d
GLEW_IBM_cull_vertex	./GL/glew.h	/^#define GLEW_IBM_cull_vertex GLEW_GET_VAR(__GLEW_IBM_cull_vertex)/;"	d
GLEW_IBM_multimode_draw_arrays	./GL/glew.h	/^#define GLEW_IBM_multimode_draw_arrays GLEW_GET_VAR(__GLEW_IBM_multimode_draw_arrays)/;"	d
GLEW_IBM_rasterpos_clip	./GL/glew.h	/^#define GLEW_IBM_rasterpos_clip GLEW_GET_VAR(__GLEW_IBM_rasterpos_clip)/;"	d
GLEW_IBM_static_data	./GL/glew.h	/^#define GLEW_IBM_static_data GLEW_GET_VAR(__GLEW_IBM_static_data)/;"	d
GLEW_IBM_texture_mirrored_repeat	./GL/glew.h	/^#define GLEW_IBM_texture_mirrored_repeat GLEW_GET_VAR(__GLEW_IBM_texture_mirrored_repeat)/;"	d
GLEW_IBM_vertex_array_lists	./GL/glew.h	/^#define GLEW_IBM_vertex_array_lists GLEW_GET_VAR(__GLEW_IBM_vertex_array_lists)/;"	d
GLEW_IMG_bindless_texture	./GL/glew.h	/^#define GLEW_IMG_bindless_texture GLEW_GET_VAR(__GLEW_IMG_bindless_texture)/;"	d
GLEW_IMG_framebuffer_downsample	./GL/glew.h	/^#define GLEW_IMG_framebuffer_downsample GLEW_GET_VAR(__GLEW_IMG_framebuffer_downsample)/;"	d
GLEW_IMG_multisampled_render_to_texture	./GL/glew.h	/^#define GLEW_IMG_multisampled_render_to_texture GLEW_GET_VAR(__GLEW_IMG_multisampled_render_to_t/;"	d
GLEW_IMG_program_binary	./GL/glew.h	/^#define GLEW_IMG_program_binary GLEW_GET_VAR(__GLEW_IMG_program_binary)/;"	d
GLEW_IMG_read_format	./GL/glew.h	/^#define GLEW_IMG_read_format GLEW_GET_VAR(__GLEW_IMG_read_format)/;"	d
GLEW_IMG_shader_binary	./GL/glew.h	/^#define GLEW_IMG_shader_binary GLEW_GET_VAR(__GLEW_IMG_shader_binary)/;"	d
GLEW_IMG_texture_compression_pvrtc	./GL/glew.h	/^#define GLEW_IMG_texture_compression_pvrtc GLEW_GET_VAR(__GLEW_IMG_texture_compression_pvrtc)/;"	d
GLEW_IMG_texture_compression_pvrtc2	./GL/glew.h	/^#define GLEW_IMG_texture_compression_pvrtc2 GLEW_GET_VAR(__GLEW_IMG_texture_compression_pvrtc2)/;"	d
GLEW_IMG_texture_env_enhanced_fixed_function	./GL/glew.h	/^#define GLEW_IMG_texture_env_enhanced_fixed_function GLEW_GET_VAR(__GLEW_IMG_texture_env_enhance/;"	d
GLEW_IMG_texture_filter_cubic	./GL/glew.h	/^#define GLEW_IMG_texture_filter_cubic GLEW_GET_VAR(__GLEW_IMG_texture_filter_cubic)/;"	d
GLEW_INGR_color_clamp	./GL/glew.h	/^#define GLEW_INGR_color_clamp GLEW_GET_VAR(__GLEW_INGR_color_clamp)/;"	d
GLEW_INGR_interlace_read	./GL/glew.h	/^#define GLEW_INGR_interlace_read GLEW_GET_VAR(__GLEW_INGR_interlace_read)/;"	d
GLEW_INTEL_blackhole_render	./GL/glew.h	/^#define GLEW_INTEL_blackhole_render GLEW_GET_VAR(__GLEW_INTEL_blackhole_render)/;"	d
GLEW_INTEL_conservative_rasterization	./GL/glew.h	/^#define GLEW_INTEL_conservative_rasterization GLEW_GET_VAR(__GLEW_INTEL_conservative_rasterizati/;"	d
GLEW_INTEL_fragment_shader_ordering	./GL/glew.h	/^#define GLEW_INTEL_fragment_shader_ordering GLEW_GET_VAR(__GLEW_INTEL_fragment_shader_ordering)/;"	d
GLEW_INTEL_framebuffer_CMAA	./GL/glew.h	/^#define GLEW_INTEL_framebuffer_CMAA GLEW_GET_VAR(__GLEW_INTEL_framebuffer_CMAA)/;"	d
GLEW_INTEL_map_texture	./GL/glew.h	/^#define GLEW_INTEL_map_texture GLEW_GET_VAR(__GLEW_INTEL_map_texture)/;"	d
GLEW_INTEL_parallel_arrays	./GL/glew.h	/^#define GLEW_INTEL_parallel_arrays GLEW_GET_VAR(__GLEW_INTEL_parallel_arrays)/;"	d
GLEW_INTEL_performance_query	./GL/glew.h	/^#define GLEW_INTEL_performance_query GLEW_GET_VAR(__GLEW_INTEL_performance_query)/;"	d
GLEW_INTEL_shader_integer_functions2	./GL/glew.h	/^#define GLEW_INTEL_shader_integer_functions2 GLEW_GET_VAR(__GLEW_INTEL_shader_integer_functions2/;"	d
GLEW_INTEL_texture_scissor	./GL/glew.h	/^#define GLEW_INTEL_texture_scissor GLEW_GET_VAR(__GLEW_INTEL_texture_scissor)/;"	d
GLEW_KHR_blend_equation_advanced	./GL/glew.h	/^#define GLEW_KHR_blend_equation_advanced GLEW_GET_VAR(__GLEW_KHR_blend_equation_advanced)/;"	d
GLEW_KHR_blend_equation_advanced_coherent	./GL/glew.h	/^#define GLEW_KHR_blend_equation_advanced_coherent GLEW_GET_VAR(__GLEW_KHR_blend_equation_advance/;"	d
GLEW_KHR_context_flush_control	./GL/glew.h	/^#define GLEW_KHR_context_flush_control GLEW_GET_VAR(__GLEW_KHR_context_flush_control)/;"	d
GLEW_KHR_debug	./GL/glew.h	/^#define GLEW_KHR_debug GLEW_GET_VAR(__GLEW_KHR_debug)/;"	d
GLEW_KHR_no_error	./GL/glew.h	/^#define GLEW_KHR_no_error GLEW_GET_VAR(__GLEW_KHR_no_error)/;"	d
GLEW_KHR_parallel_shader_compile	./GL/glew.h	/^#define GLEW_KHR_parallel_shader_compile GLEW_GET_VAR(__GLEW_KHR_parallel_shader_compile)/;"	d
GLEW_KHR_robust_buffer_access_behavior	./GL/glew.h	/^#define GLEW_KHR_robust_buffer_access_behavior GLEW_GET_VAR(__GLEW_KHR_robust_buffer_access_beha/;"	d
GLEW_KHR_robustness	./GL/glew.h	/^#define GLEW_KHR_robustness GLEW_GET_VAR(__GLEW_KHR_robustness)/;"	d
GLEW_KHR_shader_subgroup	./GL/glew.h	/^#define GLEW_KHR_shader_subgroup GLEW_GET_VAR(__GLEW_KHR_shader_subgroup)/;"	d
GLEW_KHR_texture_compression_astc_hdr	./GL/glew.h	/^#define GLEW_KHR_texture_compression_astc_hdr GLEW_GET_VAR(__GLEW_KHR_texture_compression_astc_h/;"	d
GLEW_KHR_texture_compression_astc_ldr	./GL/glew.h	/^#define GLEW_KHR_texture_compression_astc_ldr GLEW_GET_VAR(__GLEW_KHR_texture_compression_astc_l/;"	d
GLEW_KHR_texture_compression_astc_sliced_3d	./GL/glew.h	/^#define GLEW_KHR_texture_compression_astc_sliced_3d GLEW_GET_VAR(__GLEW_KHR_texture_compression_/;"	d
GLEW_KTX_buffer_region	./GL/glew.h	/^#define GLEW_KTX_buffer_region GLEW_GET_VAR(__GLEW_KTX_buffer_region)/;"	d
GLEW_MESAX_texture_stack	./GL/glew.h	/^#define GLEW_MESAX_texture_stack GLEW_GET_VAR(__GLEW_MESAX_texture_stack)/;"	d
GLEW_MESA_framebuffer_flip_y	./GL/glew.h	/^#define GLEW_MESA_framebuffer_flip_y GLEW_GET_VAR(__GLEW_MESA_framebuffer_flip_y)/;"	d
GLEW_MESA_pack_invert	./GL/glew.h	/^#define GLEW_MESA_pack_invert GLEW_GET_VAR(__GLEW_MESA_pack_invert)/;"	d
GLEW_MESA_program_binary_formats	./GL/glew.h	/^#define GLEW_MESA_program_binary_formats GLEW_GET_VAR(__GLEW_MESA_program_binary_formats)/;"	d
GLEW_MESA_resize_buffers	./GL/glew.h	/^#define GLEW_MESA_resize_buffers GLEW_GET_VAR(__GLEW_MESA_resize_buffers)/;"	d
GLEW_MESA_shader_integer_functions	./GL/glew.h	/^#define GLEW_MESA_shader_integer_functions GLEW_GET_VAR(__GLEW_MESA_shader_integer_functions)/;"	d
GLEW_MESA_tile_raster_order	./GL/glew.h	/^#define GLEW_MESA_tile_raster_order GLEW_GET_VAR(__GLEW_MESA_tile_raster_order)/;"	d
GLEW_MESA_window_pos	./GL/glew.h	/^#define GLEW_MESA_window_pos GLEW_GET_VAR(__GLEW_MESA_window_pos)/;"	d
GLEW_MESA_ycbcr_texture	./GL/glew.h	/^#define GLEW_MESA_ycbcr_texture GLEW_GET_VAR(__GLEW_MESA_ycbcr_texture)/;"	d
GLEW_NO_ERROR	./GL/glew.h	/^#define GLEW_NO_ERROR /;"	d
GLEW_NO_GLU	./GL/glew.h	/^#      define GLEW_NO_GLU$/;"	d
GLEW_NVX_blend_equation_advanced_multi_draw_buffers	./GL/glew.h	/^#define GLEW_NVX_blend_equation_advanced_multi_draw_buffers GLEW_GET_VAR(__GLEW_NVX_blend_equati/;"	d
GLEW_NVX_conditional_render	./GL/glew.h	/^#define GLEW_NVX_conditional_render GLEW_GET_VAR(__GLEW_NVX_conditional_render)/;"	d
GLEW_NVX_gpu_memory_info	./GL/glew.h	/^#define GLEW_NVX_gpu_memory_info GLEW_GET_VAR(__GLEW_NVX_gpu_memory_info)/;"	d
GLEW_NVX_gpu_multicast2	./GL/glew.h	/^#define GLEW_NVX_gpu_multicast2 GLEW_GET_VAR(__GLEW_NVX_gpu_multicast2)/;"	d
GLEW_NVX_linked_gpu_multicast	./GL/glew.h	/^#define GLEW_NVX_linked_gpu_multicast GLEW_GET_VAR(__GLEW_NVX_linked_gpu_multicast)/;"	d
GLEW_NVX_progress_fence	./GL/glew.h	/^#define GLEW_NVX_progress_fence GLEW_GET_VAR(__GLEW_NVX_progress_fence)/;"	d
GLEW_NV_3dvision_settings	./GL/glew.h	/^#define GLEW_NV_3dvision_settings GLEW_GET_VAR(__GLEW_NV_3dvision_settings)/;"	d
GLEW_NV_EGL_stream_consumer_external	./GL/glew.h	/^#define GLEW_NV_EGL_stream_consumer_external GLEW_GET_VAR(__GLEW_NV_EGL_stream_consumer_external/;"	d
GLEW_NV_alpha_to_coverage_dither_control	./GL/glew.h	/^#define GLEW_NV_alpha_to_coverage_dither_control GLEW_GET_VAR(__GLEW_NV_alpha_to_coverage_dither/;"	d
GLEW_NV_bgr	./GL/glew.h	/^#define GLEW_NV_bgr GLEW_GET_VAR(__GLEW_NV_bgr)/;"	d
GLEW_NV_bindless_multi_draw_indirect	./GL/glew.h	/^#define GLEW_NV_bindless_multi_draw_indirect GLEW_GET_VAR(__GLEW_NV_bindless_multi_draw_indirect/;"	d
GLEW_NV_bindless_multi_draw_indirect_count	./GL/glew.h	/^#define GLEW_NV_bindless_multi_draw_indirect_count GLEW_GET_VAR(__GLEW_NV_bindless_multi_draw_in/;"	d
GLEW_NV_bindless_texture	./GL/glew.h	/^#define GLEW_NV_bindless_texture GLEW_GET_VAR(__GLEW_NV_bindless_texture)/;"	d
GLEW_NV_blend_equation_advanced	./GL/glew.h	/^#define GLEW_NV_blend_equation_advanced GLEW_GET_VAR(__GLEW_NV_blend_equation_advanced)/;"	d
GLEW_NV_blend_equation_advanced_coherent	./GL/glew.h	/^#define GLEW_NV_blend_equation_advanced_coherent GLEW_GET_VAR(__GLEW_NV_blend_equation_advanced_/;"	d
GLEW_NV_blend_minmax_factor	./GL/glew.h	/^#define GLEW_NV_blend_minmax_factor GLEW_GET_VAR(__GLEW_NV_blend_minmax_factor)/;"	d
GLEW_NV_blend_square	./GL/glew.h	/^#define GLEW_NV_blend_square GLEW_GET_VAR(__GLEW_NV_blend_square)/;"	d
GLEW_NV_clip_space_w_scaling	./GL/glew.h	/^#define GLEW_NV_clip_space_w_scaling GLEW_GET_VAR(__GLEW_NV_clip_space_w_scaling)/;"	d
GLEW_NV_command_list	./GL/glew.h	/^#define GLEW_NV_command_list GLEW_GET_VAR(__GLEW_NV_command_list)/;"	d
GLEW_NV_compute_program5	./GL/glew.h	/^#define GLEW_NV_compute_program5 GLEW_GET_VAR(__GLEW_NV_compute_program5)/;"	d
GLEW_NV_compute_shader_derivatives	./GL/glew.h	/^#define GLEW_NV_compute_shader_derivatives GLEW_GET_VAR(__GLEW_NV_compute_shader_derivatives)/;"	d
GLEW_NV_conditional_render	./GL/glew.h	/^#define GLEW_NV_conditional_render GLEW_GET_VAR(__GLEW_NV_conditional_render)/;"	d
GLEW_NV_conservative_raster	./GL/glew.h	/^#define GLEW_NV_conservative_raster GLEW_GET_VAR(__GLEW_NV_conservative_raster)/;"	d
GLEW_NV_conservative_raster_dilate	./GL/glew.h	/^#define GLEW_NV_conservative_raster_dilate GLEW_GET_VAR(__GLEW_NV_conservative_raster_dilate)/;"	d
GLEW_NV_conservative_raster_pre_snap	./GL/glew.h	/^#define GLEW_NV_conservative_raster_pre_snap GLEW_GET_VAR(__GLEW_NV_conservative_raster_pre_snap/;"	d
GLEW_NV_conservative_raster_pre_snap_triangles	./GL/glew.h	/^#define GLEW_NV_conservative_raster_pre_snap_triangles GLEW_GET_VAR(__GLEW_NV_conservative_raste/;"	d
GLEW_NV_conservative_raster_underestimation	./GL/glew.h	/^#define GLEW_NV_conservative_raster_underestimation GLEW_GET_VAR(__GLEW_NV_conservative_raster_u/;"	d
GLEW_NV_copy_buffer	./GL/glew.h	/^#define GLEW_NV_copy_buffer GLEW_GET_VAR(__GLEW_NV_copy_buffer)/;"	d
GLEW_NV_copy_depth_to_color	./GL/glew.h	/^#define GLEW_NV_copy_depth_to_color GLEW_GET_VAR(__GLEW_NV_copy_depth_to_color)/;"	d
GLEW_NV_copy_image	./GL/glew.h	/^#define GLEW_NV_copy_image GLEW_GET_VAR(__GLEW_NV_copy_image)/;"	d
GLEW_NV_deep_texture3D	./GL/glew.h	/^#define GLEW_NV_deep_texture3D GLEW_GET_VAR(__GLEW_NV_deep_texture3D)/;"	d
GLEW_NV_depth_buffer_float	./GL/glew.h	/^#define GLEW_NV_depth_buffer_float GLEW_GET_VAR(__GLEW_NV_depth_buffer_float)/;"	d
GLEW_NV_depth_clamp	./GL/glew.h	/^#define GLEW_NV_depth_clamp GLEW_GET_VAR(__GLEW_NV_depth_clamp)/;"	d
GLEW_NV_depth_nonlinear	./GL/glew.h	/^#define GLEW_NV_depth_nonlinear GLEW_GET_VAR(__GLEW_NV_depth_nonlinear)/;"	d
GLEW_NV_depth_range_unclamped	./GL/glew.h	/^#define GLEW_NV_depth_range_unclamped GLEW_GET_VAR(__GLEW_NV_depth_range_unclamped)/;"	d
GLEW_NV_draw_buffers	./GL/glew.h	/^#define GLEW_NV_draw_buffers GLEW_GET_VAR(__GLEW_NV_draw_buffers)/;"	d
GLEW_NV_draw_instanced	./GL/glew.h	/^#define GLEW_NV_draw_instanced GLEW_GET_VAR(__GLEW_NV_draw_instanced)/;"	d
GLEW_NV_draw_texture	./GL/glew.h	/^#define GLEW_NV_draw_texture GLEW_GET_VAR(__GLEW_NV_draw_texture)/;"	d
GLEW_NV_draw_vulkan_image	./GL/glew.h	/^#define GLEW_NV_draw_vulkan_image GLEW_GET_VAR(__GLEW_NV_draw_vulkan_image)/;"	d
GLEW_NV_evaluators	./GL/glew.h	/^#define GLEW_NV_evaluators GLEW_GET_VAR(__GLEW_NV_evaluators)/;"	d
GLEW_NV_explicit_attrib_location	./GL/glew.h	/^#define GLEW_NV_explicit_attrib_location GLEW_GET_VAR(__GLEW_NV_explicit_attrib_location)/;"	d
GLEW_NV_explicit_multisample	./GL/glew.h	/^#define GLEW_NV_explicit_multisample GLEW_GET_VAR(__GLEW_NV_explicit_multisample)/;"	d
GLEW_NV_fbo_color_attachments	./GL/glew.h	/^#define GLEW_NV_fbo_color_attachments GLEW_GET_VAR(__GLEW_NV_fbo_color_attachments)/;"	d
GLEW_NV_fence	./GL/glew.h	/^#define GLEW_NV_fence GLEW_GET_VAR(__GLEW_NV_fence)/;"	d
GLEW_NV_fill_rectangle	./GL/glew.h	/^#define GLEW_NV_fill_rectangle GLEW_GET_VAR(__GLEW_NV_fill_rectangle)/;"	d
GLEW_NV_float_buffer	./GL/glew.h	/^#define GLEW_NV_float_buffer GLEW_GET_VAR(__GLEW_NV_float_buffer)/;"	d
GLEW_NV_fog_distance	./GL/glew.h	/^#define GLEW_NV_fog_distance GLEW_GET_VAR(__GLEW_NV_fog_distance)/;"	d
GLEW_NV_fragment_coverage_to_color	./GL/glew.h	/^#define GLEW_NV_fragment_coverage_to_color GLEW_GET_VAR(__GLEW_NV_fragment_coverage_to_color)/;"	d
GLEW_NV_fragment_program	./GL/glew.h	/^#define GLEW_NV_fragment_program GLEW_GET_VAR(__GLEW_NV_fragment_program)/;"	d
GLEW_NV_fragment_program2	./GL/glew.h	/^#define GLEW_NV_fragment_program2 GLEW_GET_VAR(__GLEW_NV_fragment_program2)/;"	d
GLEW_NV_fragment_program4	./GL/glew.h	/^#define GLEW_NV_fragment_program4 GLEW_GET_VAR(__GLEW_NV_fragment_program4)/;"	d
GLEW_NV_fragment_program_option	./GL/glew.h	/^#define GLEW_NV_fragment_program_option GLEW_GET_VAR(__GLEW_NV_fragment_program_option)/;"	d
GLEW_NV_fragment_shader_barycentric	./GL/glew.h	/^#define GLEW_NV_fragment_shader_barycentric GLEW_GET_VAR(__GLEW_NV_fragment_shader_barycentric)/;"	d
GLEW_NV_fragment_shader_interlock	./GL/glew.h	/^#define GLEW_NV_fragment_shader_interlock GLEW_GET_VAR(__GLEW_NV_fragment_shader_interlock)/;"	d
GLEW_NV_framebuffer_blit	./GL/glew.h	/^#define GLEW_NV_framebuffer_blit GLEW_GET_VAR(__GLEW_NV_framebuffer_blit)/;"	d
GLEW_NV_framebuffer_mixed_samples	./GL/glew.h	/^#define GLEW_NV_framebuffer_mixed_samples GLEW_GET_VAR(__GLEW_NV_framebuffer_mixed_samples)/;"	d
GLEW_NV_framebuffer_multisample	./GL/glew.h	/^#define GLEW_NV_framebuffer_multisample GLEW_GET_VAR(__GLEW_NV_framebuffer_multisample)/;"	d
GLEW_NV_framebuffer_multisample_coverage	./GL/glew.h	/^#define GLEW_NV_framebuffer_multisample_coverage GLEW_GET_VAR(__GLEW_NV_framebuffer_multisample_/;"	d
GLEW_NV_generate_mipmap_sRGB	./GL/glew.h	/^#define GLEW_NV_generate_mipmap_sRGB GLEW_GET_VAR(__GLEW_NV_generate_mipmap_sRGB)/;"	d
GLEW_NV_geometry_program4	./GL/glew.h	/^#define GLEW_NV_geometry_program4 GLEW_GET_VAR(__GLEW_NV_geometry_program4)/;"	d
GLEW_NV_geometry_shader4	./GL/glew.h	/^#define GLEW_NV_geometry_shader4 GLEW_GET_VAR(__GLEW_NV_geometry_shader4)/;"	d
GLEW_NV_geometry_shader_passthrough	./GL/glew.h	/^#define GLEW_NV_geometry_shader_passthrough GLEW_GET_VAR(__GLEW_NV_geometry_shader_passthrough)/;"	d
GLEW_NV_gpu_multicast	./GL/glew.h	/^#define GLEW_NV_gpu_multicast GLEW_GET_VAR(__GLEW_NV_gpu_multicast)/;"	d
GLEW_NV_gpu_program4	./GL/glew.h	/^#define GLEW_NV_gpu_program4 GLEW_GET_VAR(__GLEW_NV_gpu_program4)/;"	d
GLEW_NV_gpu_program5	./GL/glew.h	/^#define GLEW_NV_gpu_program5 GLEW_GET_VAR(__GLEW_NV_gpu_program5)/;"	d
GLEW_NV_gpu_program5_mem_extended	./GL/glew.h	/^#define GLEW_NV_gpu_program5_mem_extended GLEW_GET_VAR(__GLEW_NV_gpu_program5_mem_extended)/;"	d
GLEW_NV_gpu_program_fp64	./GL/glew.h	/^#define GLEW_NV_gpu_program_fp64 GLEW_GET_VAR(__GLEW_NV_gpu_program_fp64)/;"	d
GLEW_NV_gpu_shader5	./GL/glew.h	/^#define GLEW_NV_gpu_shader5 GLEW_GET_VAR(__GLEW_NV_gpu_shader5)/;"	d
GLEW_NV_half_float	./GL/glew.h	/^#define GLEW_NV_half_float GLEW_GET_VAR(__GLEW_NV_half_float)/;"	d
GLEW_NV_image_formats	./GL/glew.h	/^#define GLEW_NV_image_formats GLEW_GET_VAR(__GLEW_NV_image_formats)/;"	d
GLEW_NV_instanced_arrays	./GL/glew.h	/^#define GLEW_NV_instanced_arrays GLEW_GET_VAR(__GLEW_NV_instanced_arrays)/;"	d
GLEW_NV_internalformat_sample_query	./GL/glew.h	/^#define GLEW_NV_internalformat_sample_query GLEW_GET_VAR(__GLEW_NV_internalformat_sample_query)/;"	d
GLEW_NV_light_max_exponent	./GL/glew.h	/^#define GLEW_NV_light_max_exponent GLEW_GET_VAR(__GLEW_NV_light_max_exponent)/;"	d
GLEW_NV_memory_attachment	./GL/glew.h	/^#define GLEW_NV_memory_attachment GLEW_GET_VAR(__GLEW_NV_memory_attachment)/;"	d
GLEW_NV_mesh_shader	./GL/glew.h	/^#define GLEW_NV_mesh_shader GLEW_GET_VAR(__GLEW_NV_mesh_shader)/;"	d
GLEW_NV_multisample_coverage	./GL/glew.h	/^#define GLEW_NV_multisample_coverage GLEW_GET_VAR(__GLEW_NV_multisample_coverage)/;"	d
GLEW_NV_multisample_filter_hint	./GL/glew.h	/^#define GLEW_NV_multisample_filter_hint GLEW_GET_VAR(__GLEW_NV_multisample_filter_hint)/;"	d
GLEW_NV_non_square_matrices	./GL/glew.h	/^#define GLEW_NV_non_square_matrices GLEW_GET_VAR(__GLEW_NV_non_square_matrices)/;"	d
GLEW_NV_occlusion_query	./GL/glew.h	/^#define GLEW_NV_occlusion_query GLEW_GET_VAR(__GLEW_NV_occlusion_query)/;"	d
GLEW_NV_pack_subimage	./GL/glew.h	/^#define GLEW_NV_pack_subimage GLEW_GET_VAR(__GLEW_NV_pack_subimage)/;"	d
GLEW_NV_packed_depth_stencil	./GL/glew.h	/^#define GLEW_NV_packed_depth_stencil GLEW_GET_VAR(__GLEW_NV_packed_depth_stencil)/;"	d
GLEW_NV_packed_float	./GL/glew.h	/^#define GLEW_NV_packed_float GLEW_GET_VAR(__GLEW_NV_packed_float)/;"	d
GLEW_NV_packed_float_linear	./GL/glew.h	/^#define GLEW_NV_packed_float_linear GLEW_GET_VAR(__GLEW_NV_packed_float_linear)/;"	d
GLEW_NV_parameter_buffer_object	./GL/glew.h	/^#define GLEW_NV_parameter_buffer_object GLEW_GET_VAR(__GLEW_NV_parameter_buffer_object)/;"	d
GLEW_NV_parameter_buffer_object2	./GL/glew.h	/^#define GLEW_NV_parameter_buffer_object2 GLEW_GET_VAR(__GLEW_NV_parameter_buffer_object2)/;"	d
GLEW_NV_path_rendering	./GL/glew.h	/^#define GLEW_NV_path_rendering GLEW_GET_VAR(__GLEW_NV_path_rendering)/;"	d
GLEW_NV_path_rendering_shared_edge	./GL/glew.h	/^#define GLEW_NV_path_rendering_shared_edge GLEW_GET_VAR(__GLEW_NV_path_rendering_shared_edge)/;"	d
GLEW_NV_pixel_buffer_object	./GL/glew.h	/^#define GLEW_NV_pixel_buffer_object GLEW_GET_VAR(__GLEW_NV_pixel_buffer_object)/;"	d
GLEW_NV_pixel_data_range	./GL/glew.h	/^#define GLEW_NV_pixel_data_range GLEW_GET_VAR(__GLEW_NV_pixel_data_range)/;"	d
GLEW_NV_platform_binary	./GL/glew.h	/^#define GLEW_NV_platform_binary GLEW_GET_VAR(__GLEW_NV_platform_binary)/;"	d
GLEW_NV_point_sprite	./GL/glew.h	/^#define GLEW_NV_point_sprite GLEW_GET_VAR(__GLEW_NV_point_sprite)/;"	d
GLEW_NV_polygon_mode	./GL/glew.h	/^#define GLEW_NV_polygon_mode GLEW_GET_VAR(__GLEW_NV_polygon_mode)/;"	d
GLEW_NV_present_video	./GL/glew.h	/^#define GLEW_NV_present_video GLEW_GET_VAR(__GLEW_NV_present_video)/;"	d
GLEW_NV_primitive_restart	./GL/glew.h	/^#define GLEW_NV_primitive_restart GLEW_GET_VAR(__GLEW_NV_primitive_restart)/;"	d
GLEW_NV_query_resource_tag	./GL/glew.h	/^#define GLEW_NV_query_resource_tag GLEW_GET_VAR(__GLEW_NV_query_resource_tag)/;"	d
GLEW_NV_read_buffer	./GL/glew.h	/^#define GLEW_NV_read_buffer GLEW_GET_VAR(__GLEW_NV_read_buffer)/;"	d
GLEW_NV_read_buffer_front	./GL/glew.h	/^#define GLEW_NV_read_buffer_front GLEW_GET_VAR(__GLEW_NV_read_buffer_front)/;"	d
GLEW_NV_read_depth	./GL/glew.h	/^#define GLEW_NV_read_depth GLEW_GET_VAR(__GLEW_NV_read_depth)/;"	d
GLEW_NV_read_depth_stencil	./GL/glew.h	/^#define GLEW_NV_read_depth_stencil GLEW_GET_VAR(__GLEW_NV_read_depth_stencil)/;"	d
GLEW_NV_read_stencil	./GL/glew.h	/^#define GLEW_NV_read_stencil GLEW_GET_VAR(__GLEW_NV_read_stencil)/;"	d
GLEW_NV_register_combiners	./GL/glew.h	/^#define GLEW_NV_register_combiners GLEW_GET_VAR(__GLEW_NV_register_combiners)/;"	d
GLEW_NV_register_combiners2	./GL/glew.h	/^#define GLEW_NV_register_combiners2 GLEW_GET_VAR(__GLEW_NV_register_combiners2)/;"	d
GLEW_NV_representative_fragment_test	./GL/glew.h	/^#define GLEW_NV_representative_fragment_test GLEW_GET_VAR(__GLEW_NV_representative_fragment_test/;"	d
GLEW_NV_robustness_video_memory_purge	./GL/glew.h	/^#define GLEW_NV_robustness_video_memory_purge GLEW_GET_VAR(__GLEW_NV_robustness_video_memory_pur/;"	d
GLEW_NV_sRGB_formats	./GL/glew.h	/^#define GLEW_NV_sRGB_formats GLEW_GET_VAR(__GLEW_NV_sRGB_formats)/;"	d
GLEW_NV_sample_locations	./GL/glew.h	/^#define GLEW_NV_sample_locations GLEW_GET_VAR(__GLEW_NV_sample_locations)/;"	d
GLEW_NV_sample_mask_override_coverage	./GL/glew.h	/^#define GLEW_NV_sample_mask_override_coverage GLEW_GET_VAR(__GLEW_NV_sample_mask_override_covera/;"	d
GLEW_NV_scissor_exclusive	./GL/glew.h	/^#define GLEW_NV_scissor_exclusive GLEW_GET_VAR(__GLEW_NV_scissor_exclusive)/;"	d
GLEW_NV_shader_atomic_counters	./GL/glew.h	/^#define GLEW_NV_shader_atomic_counters GLEW_GET_VAR(__GLEW_NV_shader_atomic_counters)/;"	d
GLEW_NV_shader_atomic_float	./GL/glew.h	/^#define GLEW_NV_shader_atomic_float GLEW_GET_VAR(__GLEW_NV_shader_atomic_float)/;"	d
GLEW_NV_shader_atomic_float64	./GL/glew.h	/^#define GLEW_NV_shader_atomic_float64 GLEW_GET_VAR(__GLEW_NV_shader_atomic_float64)/;"	d
GLEW_NV_shader_atomic_fp16_vector	./GL/glew.h	/^#define GLEW_NV_shader_atomic_fp16_vector GLEW_GET_VAR(__GLEW_NV_shader_atomic_fp16_vector)/;"	d
GLEW_NV_shader_atomic_int64	./GL/glew.h	/^#define GLEW_NV_shader_atomic_int64 GLEW_GET_VAR(__GLEW_NV_shader_atomic_int64)/;"	d
GLEW_NV_shader_buffer_load	./GL/glew.h	/^#define GLEW_NV_shader_buffer_load GLEW_GET_VAR(__GLEW_NV_shader_buffer_load)/;"	d
GLEW_NV_shader_noperspective_interpolation	./GL/glew.h	/^#define GLEW_NV_shader_noperspective_interpolation GLEW_GET_VAR(__GLEW_NV_shader_noperspective_i/;"	d
GLEW_NV_shader_storage_buffer_object	./GL/glew.h	/^#define GLEW_NV_shader_storage_buffer_object GLEW_GET_VAR(__GLEW_NV_shader_storage_buffer_object/;"	d
GLEW_NV_shader_subgroup_partitioned	./GL/glew.h	/^#define GLEW_NV_shader_subgroup_partitioned GLEW_GET_VAR(__GLEW_NV_shader_subgroup_partitioned)/;"	d
GLEW_NV_shader_texture_footprint	./GL/glew.h	/^#define GLEW_NV_shader_texture_footprint GLEW_GET_VAR(__GLEW_NV_shader_texture_footprint)/;"	d
GLEW_NV_shader_thread_group	./GL/glew.h	/^#define GLEW_NV_shader_thread_group GLEW_GET_VAR(__GLEW_NV_shader_thread_group)/;"	d
GLEW_NV_shader_thread_shuffle	./GL/glew.h	/^#define GLEW_NV_shader_thread_shuffle GLEW_GET_VAR(__GLEW_NV_shader_thread_shuffle)/;"	d
GLEW_NV_shading_rate_image	./GL/glew.h	/^#define GLEW_NV_shading_rate_image GLEW_GET_VAR(__GLEW_NV_shading_rate_image)/;"	d
GLEW_NV_shadow_samplers_array	./GL/glew.h	/^#define GLEW_NV_shadow_samplers_array GLEW_GET_VAR(__GLEW_NV_shadow_samplers_array)/;"	d
GLEW_NV_shadow_samplers_cube	./GL/glew.h	/^#define GLEW_NV_shadow_samplers_cube GLEW_GET_VAR(__GLEW_NV_shadow_samplers_cube)/;"	d
GLEW_NV_stereo_view_rendering	./GL/glew.h	/^#define GLEW_NV_stereo_view_rendering GLEW_GET_VAR(__GLEW_NV_stereo_view_rendering)/;"	d
GLEW_NV_tessellation_program5	./GL/glew.h	/^#define GLEW_NV_tessellation_program5 GLEW_GET_VAR(__GLEW_NV_tessellation_program5)/;"	d
GLEW_NV_texgen_emboss	./GL/glew.h	/^#define GLEW_NV_texgen_emboss GLEW_GET_VAR(__GLEW_NV_texgen_emboss)/;"	d
GLEW_NV_texgen_reflection	./GL/glew.h	/^#define GLEW_NV_texgen_reflection GLEW_GET_VAR(__GLEW_NV_texgen_reflection)/;"	d
GLEW_NV_texture_array	./GL/glew.h	/^#define GLEW_NV_texture_array GLEW_GET_VAR(__GLEW_NV_texture_array)/;"	d
GLEW_NV_texture_barrier	./GL/glew.h	/^#define GLEW_NV_texture_barrier GLEW_GET_VAR(__GLEW_NV_texture_barrier)/;"	d
GLEW_NV_texture_border_clamp	./GL/glew.h	/^#define GLEW_NV_texture_border_clamp GLEW_GET_VAR(__GLEW_NV_texture_border_clamp)/;"	d
GLEW_NV_texture_compression_latc	./GL/glew.h	/^#define GLEW_NV_texture_compression_latc GLEW_GET_VAR(__GLEW_NV_texture_compression_latc)/;"	d
GLEW_NV_texture_compression_s3tc	./GL/glew.h	/^#define GLEW_NV_texture_compression_s3tc GLEW_GET_VAR(__GLEW_NV_texture_compression_s3tc)/;"	d
GLEW_NV_texture_compression_s3tc_update	./GL/glew.h	/^#define GLEW_NV_texture_compression_s3tc_update GLEW_GET_VAR(__GLEW_NV_texture_compression_s3tc_/;"	d
GLEW_NV_texture_compression_vtc	./GL/glew.h	/^#define GLEW_NV_texture_compression_vtc GLEW_GET_VAR(__GLEW_NV_texture_compression_vtc)/;"	d
GLEW_NV_texture_env_combine4	./GL/glew.h	/^#define GLEW_NV_texture_env_combine4 GLEW_GET_VAR(__GLEW_NV_texture_env_combine4)/;"	d
GLEW_NV_texture_expand_normal	./GL/glew.h	/^#define GLEW_NV_texture_expand_normal GLEW_GET_VAR(__GLEW_NV_texture_expand_normal)/;"	d
GLEW_NV_texture_multisample	./GL/glew.h	/^#define GLEW_NV_texture_multisample GLEW_GET_VAR(__GLEW_NV_texture_multisample)/;"	d
GLEW_NV_texture_npot_2D_mipmap	./GL/glew.h	/^#define GLEW_NV_texture_npot_2D_mipmap GLEW_GET_VAR(__GLEW_NV_texture_npot_2D_mipmap)/;"	d
GLEW_NV_texture_rectangle	./GL/glew.h	/^#define GLEW_NV_texture_rectangle GLEW_GET_VAR(__GLEW_NV_texture_rectangle)/;"	d
GLEW_NV_texture_rectangle_compressed	./GL/glew.h	/^#define GLEW_NV_texture_rectangle_compressed GLEW_GET_VAR(__GLEW_NV_texture_rectangle_compressed/;"	d
GLEW_NV_texture_shader	./GL/glew.h	/^#define GLEW_NV_texture_shader GLEW_GET_VAR(__GLEW_NV_texture_shader)/;"	d
GLEW_NV_texture_shader2	./GL/glew.h	/^#define GLEW_NV_texture_shader2 GLEW_GET_VAR(__GLEW_NV_texture_shader2)/;"	d
GLEW_NV_texture_shader3	./GL/glew.h	/^#define GLEW_NV_texture_shader3 GLEW_GET_VAR(__GLEW_NV_texture_shader3)/;"	d
GLEW_NV_transform_feedback	./GL/glew.h	/^#define GLEW_NV_transform_feedback GLEW_GET_VAR(__GLEW_NV_transform_feedback)/;"	d
GLEW_NV_transform_feedback2	./GL/glew.h	/^#define GLEW_NV_transform_feedback2 GLEW_GET_VAR(__GLEW_NV_transform_feedback2)/;"	d
GLEW_NV_uniform_buffer_unified_memory	./GL/glew.h	/^#define GLEW_NV_uniform_buffer_unified_memory GLEW_GET_VAR(__GLEW_NV_uniform_buffer_unified_memo/;"	d
GLEW_NV_vdpau_interop	./GL/glew.h	/^#define GLEW_NV_vdpau_interop GLEW_GET_VAR(__GLEW_NV_vdpau_interop)/;"	d
GLEW_NV_vdpau_interop2	./GL/glew.h	/^#define GLEW_NV_vdpau_interop2 GLEW_GET_VAR(__GLEW_NV_vdpau_interop2)/;"	d
GLEW_NV_vertex_array_range	./GL/glew.h	/^#define GLEW_NV_vertex_array_range GLEW_GET_VAR(__GLEW_NV_vertex_array_range)/;"	d
GLEW_NV_vertex_array_range2	./GL/glew.h	/^#define GLEW_NV_vertex_array_range2 GLEW_GET_VAR(__GLEW_NV_vertex_array_range2)/;"	d
GLEW_NV_vertex_attrib_integer_64bit	./GL/glew.h	/^#define GLEW_NV_vertex_attrib_integer_64bit GLEW_GET_VAR(__GLEW_NV_vertex_attrib_integer_64bit)/;"	d
GLEW_NV_vertex_buffer_unified_memory	./GL/glew.h	/^#define GLEW_NV_vertex_buffer_unified_memory GLEW_GET_VAR(__GLEW_NV_vertex_buffer_unified_memory/;"	d
GLEW_NV_vertex_program	./GL/glew.h	/^#define GLEW_NV_vertex_program GLEW_GET_VAR(__GLEW_NV_vertex_program)/;"	d
GLEW_NV_vertex_program1_1	./GL/glew.h	/^#define GLEW_NV_vertex_program1_1 GLEW_GET_VAR(__GLEW_NV_vertex_program1_1)/;"	d
GLEW_NV_vertex_program2	./GL/glew.h	/^#define GLEW_NV_vertex_program2 GLEW_GET_VAR(__GLEW_NV_vertex_program2)/;"	d
GLEW_NV_vertex_program2_option	./GL/glew.h	/^#define GLEW_NV_vertex_program2_option GLEW_GET_VAR(__GLEW_NV_vertex_program2_option)/;"	d
GLEW_NV_vertex_program3	./GL/glew.h	/^#define GLEW_NV_vertex_program3 GLEW_GET_VAR(__GLEW_NV_vertex_program3)/;"	d
GLEW_NV_vertex_program4	./GL/glew.h	/^#define GLEW_NV_vertex_program4 GLEW_GET_VAR(__GLEW_NV_vertex_program4)/;"	d
GLEW_NV_video_capture	./GL/glew.h	/^#define GLEW_NV_video_capture GLEW_GET_VAR(__GLEW_NV_video_capture)/;"	d
GLEW_NV_viewport_array	./GL/glew.h	/^#define GLEW_NV_viewport_array GLEW_GET_VAR(__GLEW_NV_viewport_array)/;"	d
GLEW_NV_viewport_array2	./GL/glew.h	/^#define GLEW_NV_viewport_array2 GLEW_GET_VAR(__GLEW_NV_viewport_array2)/;"	d
GLEW_NV_viewport_swizzle	./GL/glew.h	/^#define GLEW_NV_viewport_swizzle GLEW_GET_VAR(__GLEW_NV_viewport_swizzle)/;"	d
GLEW_OES_EGL_image	./GL/glew.h	/^#define GLEW_OES_EGL_image GLEW_GET_VAR(__GLEW_OES_EGL_image)/;"	d
GLEW_OES_EGL_image_external	./GL/glew.h	/^#define GLEW_OES_EGL_image_external GLEW_GET_VAR(__GLEW_OES_EGL_image_external)/;"	d
GLEW_OES_EGL_image_external_essl3	./GL/glew.h	/^#define GLEW_OES_EGL_image_external_essl3 GLEW_GET_VAR(__GLEW_OES_EGL_image_external_essl3)/;"	d
GLEW_OES_blend_equation_separate	./GL/glew.h	/^#define GLEW_OES_blend_equation_separate GLEW_GET_VAR(__GLEW_OES_blend_equation_separate)/;"	d
GLEW_OES_blend_func_separate	./GL/glew.h	/^#define GLEW_OES_blend_func_separate GLEW_GET_VAR(__GLEW_OES_blend_func_separate)/;"	d
GLEW_OES_blend_subtract	./GL/glew.h	/^#define GLEW_OES_blend_subtract GLEW_GET_VAR(__GLEW_OES_blend_subtract)/;"	d
GLEW_OES_byte_coordinates	./GL/glew.h	/^#define GLEW_OES_byte_coordinates GLEW_GET_VAR(__GLEW_OES_byte_coordinates)/;"	d
GLEW_OES_compressed_ETC1_RGB8_texture	./GL/glew.h	/^#define GLEW_OES_compressed_ETC1_RGB8_texture GLEW_GET_VAR(__GLEW_OES_compressed_ETC1_RGB8_textu/;"	d
GLEW_OES_compressed_paletted_texture	./GL/glew.h	/^#define GLEW_OES_compressed_paletted_texture GLEW_GET_VAR(__GLEW_OES_compressed_paletted_texture/;"	d
GLEW_OES_copy_image	./GL/glew.h	/^#define GLEW_OES_copy_image GLEW_GET_VAR(__GLEW_OES_copy_image)/;"	d
GLEW_OES_depth24	./GL/glew.h	/^#define GLEW_OES_depth24 GLEW_GET_VAR(__GLEW_OES_depth24)/;"	d
GLEW_OES_depth32	./GL/glew.h	/^#define GLEW_OES_depth32 GLEW_GET_VAR(__GLEW_OES_depth32)/;"	d
GLEW_OES_depth_texture	./GL/glew.h	/^#define GLEW_OES_depth_texture GLEW_GET_VAR(__GLEW_OES_depth_texture)/;"	d
GLEW_OES_depth_texture_cube_map	./GL/glew.h	/^#define GLEW_OES_depth_texture_cube_map GLEW_GET_VAR(__GLEW_OES_depth_texture_cube_map)/;"	d
GLEW_OES_draw_buffers_indexed	./GL/glew.h	/^#define GLEW_OES_draw_buffers_indexed GLEW_GET_VAR(__GLEW_OES_draw_buffers_indexed)/;"	d
GLEW_OES_draw_texture	./GL/glew.h	/^#define GLEW_OES_draw_texture GLEW_GET_VAR(__GLEW_OES_draw_texture)/;"	d
GLEW_OES_element_index_uint	./GL/glew.h	/^#define GLEW_OES_element_index_uint GLEW_GET_VAR(__GLEW_OES_element_index_uint)/;"	d
GLEW_OES_extended_matrix_palette	./GL/glew.h	/^#define GLEW_OES_extended_matrix_palette GLEW_GET_VAR(__GLEW_OES_extended_matrix_palette)/;"	d
GLEW_OES_fbo_render_mipmap	./GL/glew.h	/^#define GLEW_OES_fbo_render_mipmap GLEW_GET_VAR(__GLEW_OES_fbo_render_mipmap)/;"	d
GLEW_OES_fragment_precision_high	./GL/glew.h	/^#define GLEW_OES_fragment_precision_high GLEW_GET_VAR(__GLEW_OES_fragment_precision_high)/;"	d
GLEW_OES_framebuffer_object	./GL/glew.h	/^#define GLEW_OES_framebuffer_object GLEW_GET_VAR(__GLEW_OES_framebuffer_object)/;"	d
GLEW_OES_geometry_point_size	./GL/glew.h	/^#define GLEW_OES_geometry_point_size GLEW_GET_VAR(__GLEW_OES_geometry_point_size)/;"	d
GLEW_OES_geometry_shader	./GL/glew.h	/^#define GLEW_OES_geometry_shader GLEW_GET_VAR(__GLEW_OES_geometry_shader)/;"	d
GLEW_OES_get_program_binary	./GL/glew.h	/^#define GLEW_OES_get_program_binary GLEW_GET_VAR(__GLEW_OES_get_program_binary)/;"	d
GLEW_OES_gpu_shader5	./GL/glew.h	/^#define GLEW_OES_gpu_shader5 GLEW_GET_VAR(__GLEW_OES_gpu_shader5)/;"	d
GLEW_OES_mapbuffer	./GL/glew.h	/^#define GLEW_OES_mapbuffer GLEW_GET_VAR(__GLEW_OES_mapbuffer)/;"	d
GLEW_OES_matrix_get	./GL/glew.h	/^#define GLEW_OES_matrix_get GLEW_GET_VAR(__GLEW_OES_matrix_get)/;"	d
GLEW_OES_matrix_palette	./GL/glew.h	/^#define GLEW_OES_matrix_palette GLEW_GET_VAR(__GLEW_OES_matrix_palette)/;"	d
GLEW_OES_packed_depth_stencil	./GL/glew.h	/^#define GLEW_OES_packed_depth_stencil GLEW_GET_VAR(__GLEW_OES_packed_depth_stencil)/;"	d
GLEW_OES_point_size_array	./GL/glew.h	/^#define GLEW_OES_point_size_array GLEW_GET_VAR(__GLEW_OES_point_size_array)/;"	d
GLEW_OES_point_sprite	./GL/glew.h	/^#define GLEW_OES_point_sprite GLEW_GET_VAR(__GLEW_OES_point_sprite)/;"	d
GLEW_OES_read_format	./GL/glew.h	/^#define GLEW_OES_read_format GLEW_GET_VAR(__GLEW_OES_read_format)/;"	d
GLEW_OES_required_internalformat	./GL/glew.h	/^#define GLEW_OES_required_internalformat GLEW_GET_VAR(__GLEW_OES_required_internalformat)/;"	d
GLEW_OES_rgb8_rgba8	./GL/glew.h	/^#define GLEW_OES_rgb8_rgba8 GLEW_GET_VAR(__GLEW_OES_rgb8_rgba8)/;"	d
GLEW_OES_sample_shading	./GL/glew.h	/^#define GLEW_OES_sample_shading GLEW_GET_VAR(__GLEW_OES_sample_shading)/;"	d
GLEW_OES_sample_variables	./GL/glew.h	/^#define GLEW_OES_sample_variables GLEW_GET_VAR(__GLEW_OES_sample_variables)/;"	d
GLEW_OES_shader_image_atomic	./GL/glew.h	/^#define GLEW_OES_shader_image_atomic GLEW_GET_VAR(__GLEW_OES_shader_image_atomic)/;"	d
GLEW_OES_shader_io_blocks	./GL/glew.h	/^#define GLEW_OES_shader_io_blocks GLEW_GET_VAR(__GLEW_OES_shader_io_blocks)/;"	d
GLEW_OES_shader_multisample_interpolation	./GL/glew.h	/^#define GLEW_OES_shader_multisample_interpolation GLEW_GET_VAR(__GLEW_OES_shader_multisample_int/;"	d
GLEW_OES_single_precision	./GL/glew.h	/^#define GLEW_OES_single_precision GLEW_GET_VAR(__GLEW_OES_single_precision)/;"	d
GLEW_OES_standard_derivatives	./GL/glew.h	/^#define GLEW_OES_standard_derivatives GLEW_GET_VAR(__GLEW_OES_standard_derivatives)/;"	d
GLEW_OES_stencil1	./GL/glew.h	/^#define GLEW_OES_stencil1 GLEW_GET_VAR(__GLEW_OES_stencil1)/;"	d
GLEW_OES_stencil4	./GL/glew.h	/^#define GLEW_OES_stencil4 GLEW_GET_VAR(__GLEW_OES_stencil4)/;"	d
GLEW_OES_stencil8	./GL/glew.h	/^#define GLEW_OES_stencil8 GLEW_GET_VAR(__GLEW_OES_stencil8)/;"	d
GLEW_OES_surfaceless_context	./GL/glew.h	/^#define GLEW_OES_surfaceless_context GLEW_GET_VAR(__GLEW_OES_surfaceless_context)/;"	d
GLEW_OES_tessellation_point_size	./GL/glew.h	/^#define GLEW_OES_tessellation_point_size GLEW_GET_VAR(__GLEW_OES_tessellation_point_size)/;"	d
GLEW_OES_tessellation_shader	./GL/glew.h	/^#define GLEW_OES_tessellation_shader GLEW_GET_VAR(__GLEW_OES_tessellation_shader)/;"	d
GLEW_OES_texture_3D	./GL/glew.h	/^#define GLEW_OES_texture_3D GLEW_GET_VAR(__GLEW_OES_texture_3D)/;"	d
GLEW_OES_texture_border_clamp	./GL/glew.h	/^#define GLEW_OES_texture_border_clamp GLEW_GET_VAR(__GLEW_OES_texture_border_clamp)/;"	d
GLEW_OES_texture_buffer	./GL/glew.h	/^#define GLEW_OES_texture_buffer GLEW_GET_VAR(__GLEW_OES_texture_buffer)/;"	d
GLEW_OES_texture_compression_astc	./GL/glew.h	/^#define GLEW_OES_texture_compression_astc GLEW_GET_VAR(__GLEW_OES_texture_compression_astc)/;"	d
GLEW_OES_texture_cube_map	./GL/glew.h	/^#define GLEW_OES_texture_cube_map GLEW_GET_VAR(__GLEW_OES_texture_cube_map)/;"	d
GLEW_OES_texture_cube_map_array	./GL/glew.h	/^#define GLEW_OES_texture_cube_map_array GLEW_GET_VAR(__GLEW_OES_texture_cube_map_array)/;"	d
GLEW_OES_texture_env_crossbar	./GL/glew.h	/^#define GLEW_OES_texture_env_crossbar GLEW_GET_VAR(__GLEW_OES_texture_env_crossbar)/;"	d
GLEW_OES_texture_mirrored_repeat	./GL/glew.h	/^#define GLEW_OES_texture_mirrored_repeat GLEW_GET_VAR(__GLEW_OES_texture_mirrored_repeat)/;"	d
GLEW_OES_texture_npot	./GL/glew.h	/^#define GLEW_OES_texture_npot GLEW_GET_VAR(__GLEW_OES_texture_npot)/;"	d
GLEW_OES_texture_stencil8	./GL/glew.h	/^#define GLEW_OES_texture_stencil8 GLEW_GET_VAR(__GLEW_OES_texture_stencil8)/;"	d
GLEW_OES_texture_storage_multisample_2d_array	./GL/glew.h	/^#define GLEW_OES_texture_storage_multisample_2d_array GLEW_GET_VAR(__GLEW_OES_texture_storage_mu/;"	d
GLEW_OES_texture_view	./GL/glew.h	/^#define GLEW_OES_texture_view GLEW_GET_VAR(__GLEW_OES_texture_view)/;"	d
GLEW_OES_vertex_array_object	./GL/glew.h	/^#define GLEW_OES_vertex_array_object GLEW_GET_VAR(__GLEW_OES_vertex_array_object)/;"	d
GLEW_OES_vertex_half_float	./GL/glew.h	/^#define GLEW_OES_vertex_half_float GLEW_GET_VAR(__GLEW_OES_vertex_half_float)/;"	d
GLEW_OES_vertex_type_10_10_10_2	./GL/glew.h	/^#define GLEW_OES_vertex_type_10_10_10_2 GLEW_GET_VAR(__GLEW_OES_vertex_type_10_10_10_2)/;"	d
GLEW_OK	./GL/glew.h	/^#define GLEW_OK /;"	d
GLEW_OML_interlace	./GL/glew.h	/^#define GLEW_OML_interlace GLEW_GET_VAR(__GLEW_OML_interlace)/;"	d
GLEW_OML_resample	./GL/glew.h	/^#define GLEW_OML_resample GLEW_GET_VAR(__GLEW_OML_resample)/;"	d
GLEW_OML_subsample	./GL/glew.h	/^#define GLEW_OML_subsample GLEW_GET_VAR(__GLEW_OML_subsample)/;"	d
GLEW_OVR_multiview	./GL/glew.h	/^#define GLEW_OVR_multiview GLEW_GET_VAR(__GLEW_OVR_multiview)/;"	d
GLEW_OVR_multiview2	./GL/glew.h	/^#define GLEW_OVR_multiview2 GLEW_GET_VAR(__GLEW_OVR_multiview2)/;"	d
GLEW_OVR_multiview_multisampled_render_to_texture	./GL/glew.h	/^#define GLEW_OVR_multiview_multisampled_render_to_texture GLEW_GET_VAR(__GLEW_OVR_multiview_mult/;"	d
GLEW_PGI_misc_hints	./GL/glew.h	/^#define GLEW_PGI_misc_hints GLEW_GET_VAR(__GLEW_PGI_misc_hints)/;"	d
GLEW_PGI_vertex_hints	./GL/glew.h	/^#define GLEW_PGI_vertex_hints GLEW_GET_VAR(__GLEW_PGI_vertex_hints)/;"	d
GLEW_QCOM_YUV_texture_gather	./GL/glew.h	/^#define GLEW_QCOM_YUV_texture_gather GLEW_GET_VAR(__GLEW_QCOM_YUV_texture_gather)/;"	d
GLEW_QCOM_alpha_test	./GL/glew.h	/^#define GLEW_QCOM_alpha_test GLEW_GET_VAR(__GLEW_QCOM_alpha_test)/;"	d
GLEW_QCOM_binning_control	./GL/glew.h	/^#define GLEW_QCOM_binning_control GLEW_GET_VAR(__GLEW_QCOM_binning_control)/;"	d
GLEW_QCOM_driver_control	./GL/glew.h	/^#define GLEW_QCOM_driver_control GLEW_GET_VAR(__GLEW_QCOM_driver_control)/;"	d
GLEW_QCOM_extended_get	./GL/glew.h	/^#define GLEW_QCOM_extended_get GLEW_GET_VAR(__GLEW_QCOM_extended_get)/;"	d
GLEW_QCOM_extended_get2	./GL/glew.h	/^#define GLEW_QCOM_extended_get2 GLEW_GET_VAR(__GLEW_QCOM_extended_get2)/;"	d
GLEW_QCOM_framebuffer_foveated	./GL/glew.h	/^#define GLEW_QCOM_framebuffer_foveated GLEW_GET_VAR(__GLEW_QCOM_framebuffer_foveated)/;"	d
GLEW_QCOM_perfmon_global_mode	./GL/glew.h	/^#define GLEW_QCOM_perfmon_global_mode GLEW_GET_VAR(__GLEW_QCOM_perfmon_global_mode)/;"	d
GLEW_QCOM_shader_framebuffer_fetch_noncoherent	./GL/glew.h	/^#define GLEW_QCOM_shader_framebuffer_fetch_noncoherent GLEW_GET_VAR(__GLEW_QCOM_shader_framebuff/;"	d
GLEW_QCOM_shader_framebuffer_fetch_rate	./GL/glew.h	/^#define GLEW_QCOM_shader_framebuffer_fetch_rate GLEW_GET_VAR(__GLEW_QCOM_shader_framebuffer_fetc/;"	d
GLEW_QCOM_texture_foveated	./GL/glew.h	/^#define GLEW_QCOM_texture_foveated GLEW_GET_VAR(__GLEW_QCOM_texture_foveated)/;"	d
GLEW_QCOM_texture_foveated_subsampled_layout	./GL/glew.h	/^#define GLEW_QCOM_texture_foveated_subsampled_layout GLEW_GET_VAR(__GLEW_QCOM_texture_foveated_s/;"	d
GLEW_QCOM_tiled_rendering	./GL/glew.h	/^#define GLEW_QCOM_tiled_rendering GLEW_GET_VAR(__GLEW_QCOM_tiled_rendering)/;"	d
GLEW_QCOM_writeonly_rendering	./GL/glew.h	/^#define GLEW_QCOM_writeonly_rendering GLEW_GET_VAR(__GLEW_QCOM_writeonly_rendering)/;"	d
GLEW_REGAL_ES1_0_compatibility	./GL/glew.h	/^#define GLEW_REGAL_ES1_0_compatibility GLEW_GET_VAR(__GLEW_REGAL_ES1_0_compatibility)/;"	d
GLEW_REGAL_ES1_1_compatibility	./GL/glew.h	/^#define GLEW_REGAL_ES1_1_compatibility GLEW_GET_VAR(__GLEW_REGAL_ES1_1_compatibility)/;"	d
GLEW_REGAL_enable	./GL/glew.h	/^#define GLEW_REGAL_enable GLEW_GET_VAR(__GLEW_REGAL_enable)/;"	d
GLEW_REGAL_error_string	./GL/glew.h	/^#define GLEW_REGAL_error_string GLEW_GET_VAR(__GLEW_REGAL_error_string)/;"	d
GLEW_REGAL_extension_query	./GL/glew.h	/^#define GLEW_REGAL_extension_query GLEW_GET_VAR(__GLEW_REGAL_extension_query)/;"	d
GLEW_REGAL_log	./GL/glew.h	/^#define GLEW_REGAL_log GLEW_GET_VAR(__GLEW_REGAL_log)/;"	d
GLEW_REGAL_proc_address	./GL/glew.h	/^#define GLEW_REGAL_proc_address GLEW_GET_VAR(__GLEW_REGAL_proc_address)/;"	d
GLEW_REND_screen_coordinates	./GL/glew.h	/^#define GLEW_REND_screen_coordinates GLEW_GET_VAR(__GLEW_REND_screen_coordinates)/;"	d
GLEW_S3_s3tc	./GL/glew.h	/^#define GLEW_S3_s3tc GLEW_GET_VAR(__GLEW_S3_s3tc)/;"	d
GLEW_SGIS_clip_band_hint	./GL/glew.h	/^#define GLEW_SGIS_clip_band_hint GLEW_GET_VAR(__GLEW_SGIS_clip_band_hint)/;"	d
GLEW_SGIS_color_range	./GL/glew.h	/^#define GLEW_SGIS_color_range GLEW_GET_VAR(__GLEW_SGIS_color_range)/;"	d
GLEW_SGIS_detail_texture	./GL/glew.h	/^#define GLEW_SGIS_detail_texture GLEW_GET_VAR(__GLEW_SGIS_detail_texture)/;"	d
GLEW_SGIS_fog_function	./GL/glew.h	/^#define GLEW_SGIS_fog_function GLEW_GET_VAR(__GLEW_SGIS_fog_function)/;"	d
GLEW_SGIS_generate_mipmap	./GL/glew.h	/^#define GLEW_SGIS_generate_mipmap GLEW_GET_VAR(__GLEW_SGIS_generate_mipmap)/;"	d
GLEW_SGIS_line_texgen	./GL/glew.h	/^#define GLEW_SGIS_line_texgen GLEW_GET_VAR(__GLEW_SGIS_line_texgen)/;"	d
GLEW_SGIS_multisample	./GL/glew.h	/^#define GLEW_SGIS_multisample GLEW_GET_VAR(__GLEW_SGIS_multisample)/;"	d
GLEW_SGIS_multitexture	./GL/glew.h	/^#define GLEW_SGIS_multitexture GLEW_GET_VAR(__GLEW_SGIS_multitexture)/;"	d
GLEW_SGIS_pixel_texture	./GL/glew.h	/^#define GLEW_SGIS_pixel_texture GLEW_GET_VAR(__GLEW_SGIS_pixel_texture)/;"	d
GLEW_SGIS_point_line_texgen	./GL/glew.h	/^#define GLEW_SGIS_point_line_texgen GLEW_GET_VAR(__GLEW_SGIS_point_line_texgen)/;"	d
GLEW_SGIS_shared_multisample	./GL/glew.h	/^#define GLEW_SGIS_shared_multisample GLEW_GET_VAR(__GLEW_SGIS_shared_multisample)/;"	d
GLEW_SGIS_sharpen_texture	./GL/glew.h	/^#define GLEW_SGIS_sharpen_texture GLEW_GET_VAR(__GLEW_SGIS_sharpen_texture)/;"	d
GLEW_SGIS_texture4D	./GL/glew.h	/^#define GLEW_SGIS_texture4D GLEW_GET_VAR(__GLEW_SGIS_texture4D)/;"	d
GLEW_SGIS_texture_border_clamp	./GL/glew.h	/^#define GLEW_SGIS_texture_border_clamp GLEW_GET_VAR(__GLEW_SGIS_texture_border_clamp)/;"	d
GLEW_SGIS_texture_edge_clamp	./GL/glew.h	/^#define GLEW_SGIS_texture_edge_clamp GLEW_GET_VAR(__GLEW_SGIS_texture_edge_clamp)/;"	d
GLEW_SGIS_texture_filter4	./GL/glew.h	/^#define GLEW_SGIS_texture_filter4 GLEW_GET_VAR(__GLEW_SGIS_texture_filter4)/;"	d
GLEW_SGIS_texture_lod	./GL/glew.h	/^#define GLEW_SGIS_texture_lod GLEW_GET_VAR(__GLEW_SGIS_texture_lod)/;"	d
GLEW_SGIS_texture_select	./GL/glew.h	/^#define GLEW_SGIS_texture_select GLEW_GET_VAR(__GLEW_SGIS_texture_select)/;"	d
GLEW_SGIX_async	./GL/glew.h	/^#define GLEW_SGIX_async GLEW_GET_VAR(__GLEW_SGIX_async)/;"	d
GLEW_SGIX_async_histogram	./GL/glew.h	/^#define GLEW_SGIX_async_histogram GLEW_GET_VAR(__GLEW_SGIX_async_histogram)/;"	d
GLEW_SGIX_async_pixel	./GL/glew.h	/^#define GLEW_SGIX_async_pixel GLEW_GET_VAR(__GLEW_SGIX_async_pixel)/;"	d
GLEW_SGIX_bali_g_instruments	./GL/glew.h	/^#define GLEW_SGIX_bali_g_instruments GLEW_GET_VAR(__GLEW_SGIX_bali_g_instruments)/;"	d
GLEW_SGIX_bali_r_instruments	./GL/glew.h	/^#define GLEW_SGIX_bali_r_instruments GLEW_GET_VAR(__GLEW_SGIX_bali_r_instruments)/;"	d
GLEW_SGIX_bali_timer_instruments	./GL/glew.h	/^#define GLEW_SGIX_bali_timer_instruments GLEW_GET_VAR(__GLEW_SGIX_bali_timer_instruments)/;"	d
GLEW_SGIX_blend_alpha_minmax	./GL/glew.h	/^#define GLEW_SGIX_blend_alpha_minmax GLEW_GET_VAR(__GLEW_SGIX_blend_alpha_minmax)/;"	d
GLEW_SGIX_blend_cadd	./GL/glew.h	/^#define GLEW_SGIX_blend_cadd GLEW_GET_VAR(__GLEW_SGIX_blend_cadd)/;"	d
GLEW_SGIX_blend_cmultiply	./GL/glew.h	/^#define GLEW_SGIX_blend_cmultiply GLEW_GET_VAR(__GLEW_SGIX_blend_cmultiply)/;"	d
GLEW_SGIX_calligraphic_fragment	./GL/glew.h	/^#define GLEW_SGIX_calligraphic_fragment GLEW_GET_VAR(__GLEW_SGIX_calligraphic_fragment)/;"	d
GLEW_SGIX_clipmap	./GL/glew.h	/^#define GLEW_SGIX_clipmap GLEW_GET_VAR(__GLEW_SGIX_clipmap)/;"	d
GLEW_SGIX_color_matrix_accuracy	./GL/glew.h	/^#define GLEW_SGIX_color_matrix_accuracy GLEW_GET_VAR(__GLEW_SGIX_color_matrix_accuracy)/;"	d
GLEW_SGIX_color_table_index_mode	./GL/glew.h	/^#define GLEW_SGIX_color_table_index_mode GLEW_GET_VAR(__GLEW_SGIX_color_table_index_mode)/;"	d
GLEW_SGIX_complex_polar	./GL/glew.h	/^#define GLEW_SGIX_complex_polar GLEW_GET_VAR(__GLEW_SGIX_complex_polar)/;"	d
GLEW_SGIX_convolution_accuracy	./GL/glew.h	/^#define GLEW_SGIX_convolution_accuracy GLEW_GET_VAR(__GLEW_SGIX_convolution_accuracy)/;"	d
GLEW_SGIX_cube_map	./GL/glew.h	/^#define GLEW_SGIX_cube_map GLEW_GET_VAR(__GLEW_SGIX_cube_map)/;"	d
GLEW_SGIX_cylinder_texgen	./GL/glew.h	/^#define GLEW_SGIX_cylinder_texgen GLEW_GET_VAR(__GLEW_SGIX_cylinder_texgen)/;"	d
GLEW_SGIX_datapipe	./GL/glew.h	/^#define GLEW_SGIX_datapipe GLEW_GET_VAR(__GLEW_SGIX_datapipe)/;"	d
GLEW_SGIX_decimation	./GL/glew.h	/^#define GLEW_SGIX_decimation GLEW_GET_VAR(__GLEW_SGIX_decimation)/;"	d
GLEW_SGIX_depth_pass_instrument	./GL/glew.h	/^#define GLEW_SGIX_depth_pass_instrument GLEW_GET_VAR(__GLEW_SGIX_depth_pass_instrument)/;"	d
GLEW_SGIX_depth_texture	./GL/glew.h	/^#define GLEW_SGIX_depth_texture GLEW_GET_VAR(__GLEW_SGIX_depth_texture)/;"	d
GLEW_SGIX_dvc	./GL/glew.h	/^#define GLEW_SGIX_dvc GLEW_GET_VAR(__GLEW_SGIX_dvc)/;"	d
GLEW_SGIX_flush_raster	./GL/glew.h	/^#define GLEW_SGIX_flush_raster GLEW_GET_VAR(__GLEW_SGIX_flush_raster)/;"	d
GLEW_SGIX_fog_blend	./GL/glew.h	/^#define GLEW_SGIX_fog_blend GLEW_GET_VAR(__GLEW_SGIX_fog_blend)/;"	d
GLEW_SGIX_fog_factor_to_alpha	./GL/glew.h	/^#define GLEW_SGIX_fog_factor_to_alpha GLEW_GET_VAR(__GLEW_SGIX_fog_factor_to_alpha)/;"	d
GLEW_SGIX_fog_layers	./GL/glew.h	/^#define GLEW_SGIX_fog_layers GLEW_GET_VAR(__GLEW_SGIX_fog_layers)/;"	d
GLEW_SGIX_fog_offset	./GL/glew.h	/^#define GLEW_SGIX_fog_offset GLEW_GET_VAR(__GLEW_SGIX_fog_offset)/;"	d
GLEW_SGIX_fog_patchy	./GL/glew.h	/^#define GLEW_SGIX_fog_patchy GLEW_GET_VAR(__GLEW_SGIX_fog_patchy)/;"	d
GLEW_SGIX_fog_scale	./GL/glew.h	/^#define GLEW_SGIX_fog_scale GLEW_GET_VAR(__GLEW_SGIX_fog_scale)/;"	d
GLEW_SGIX_fog_texture	./GL/glew.h	/^#define GLEW_SGIX_fog_texture GLEW_GET_VAR(__GLEW_SGIX_fog_texture)/;"	d
GLEW_SGIX_fragment_lighting_space	./GL/glew.h	/^#define GLEW_SGIX_fragment_lighting_space GLEW_GET_VAR(__GLEW_SGIX_fragment_lighting_space)/;"	d
GLEW_SGIX_fragment_specular_lighting	./GL/glew.h	/^#define GLEW_SGIX_fragment_specular_lighting GLEW_GET_VAR(__GLEW_SGIX_fragment_specular_lighting/;"	d
GLEW_SGIX_fragments_instrument	./GL/glew.h	/^#define GLEW_SGIX_fragments_instrument GLEW_GET_VAR(__GLEW_SGIX_fragments_instrument)/;"	d
GLEW_SGIX_framezoom	./GL/glew.h	/^#define GLEW_SGIX_framezoom GLEW_GET_VAR(__GLEW_SGIX_framezoom)/;"	d
GLEW_SGIX_icc_texture	./GL/glew.h	/^#define GLEW_SGIX_icc_texture GLEW_GET_VAR(__GLEW_SGIX_icc_texture)/;"	d
GLEW_SGIX_igloo_interface	./GL/glew.h	/^#define GLEW_SGIX_igloo_interface GLEW_GET_VAR(__GLEW_SGIX_igloo_interface)/;"	d
GLEW_SGIX_image_compression	./GL/glew.h	/^#define GLEW_SGIX_image_compression GLEW_GET_VAR(__GLEW_SGIX_image_compression)/;"	d
GLEW_SGIX_impact_pixel_texture	./GL/glew.h	/^#define GLEW_SGIX_impact_pixel_texture GLEW_GET_VAR(__GLEW_SGIX_impact_pixel_texture)/;"	d
GLEW_SGIX_instrument_error	./GL/glew.h	/^#define GLEW_SGIX_instrument_error GLEW_GET_VAR(__GLEW_SGIX_instrument_error)/;"	d
GLEW_SGIX_interlace	./GL/glew.h	/^#define GLEW_SGIX_interlace GLEW_GET_VAR(__GLEW_SGIX_interlace)/;"	d
GLEW_SGIX_ir_instrument1	./GL/glew.h	/^#define GLEW_SGIX_ir_instrument1 GLEW_GET_VAR(__GLEW_SGIX_ir_instrument1)/;"	d
GLEW_SGIX_line_quality_hint	./GL/glew.h	/^#define GLEW_SGIX_line_quality_hint GLEW_GET_VAR(__GLEW_SGIX_line_quality_hint)/;"	d
GLEW_SGIX_list_priority	./GL/glew.h	/^#define GLEW_SGIX_list_priority GLEW_GET_VAR(__GLEW_SGIX_list_priority)/;"	d
GLEW_SGIX_mpeg1	./GL/glew.h	/^#define GLEW_SGIX_mpeg1 GLEW_GET_VAR(__GLEW_SGIX_mpeg1)/;"	d
GLEW_SGIX_mpeg2	./GL/glew.h	/^#define GLEW_SGIX_mpeg2 GLEW_GET_VAR(__GLEW_SGIX_mpeg2)/;"	d
GLEW_SGIX_nonlinear_lighting_pervertex	./GL/glew.h	/^#define GLEW_SGIX_nonlinear_lighting_pervertex GLEW_GET_VAR(__GLEW_SGIX_nonlinear_lighting_perve/;"	d
GLEW_SGIX_nurbs_eval	./GL/glew.h	/^#define GLEW_SGIX_nurbs_eval GLEW_GET_VAR(__GLEW_SGIX_nurbs_eval)/;"	d
GLEW_SGIX_occlusion_instrument	./GL/glew.h	/^#define GLEW_SGIX_occlusion_instrument GLEW_GET_VAR(__GLEW_SGIX_occlusion_instrument)/;"	d
GLEW_SGIX_packed_6bytes	./GL/glew.h	/^#define GLEW_SGIX_packed_6bytes GLEW_GET_VAR(__GLEW_SGIX_packed_6bytes)/;"	d
GLEW_SGIX_pixel_texture	./GL/glew.h	/^#define GLEW_SGIX_pixel_texture GLEW_GET_VAR(__GLEW_SGIX_pixel_texture)/;"	d
GLEW_SGIX_pixel_texture_bits	./GL/glew.h	/^#define GLEW_SGIX_pixel_texture_bits GLEW_GET_VAR(__GLEW_SGIX_pixel_texture_bits)/;"	d
GLEW_SGIX_pixel_texture_lod	./GL/glew.h	/^#define GLEW_SGIX_pixel_texture_lod GLEW_GET_VAR(__GLEW_SGIX_pixel_texture_lod)/;"	d
GLEW_SGIX_pixel_tiles	./GL/glew.h	/^#define GLEW_SGIX_pixel_tiles GLEW_GET_VAR(__GLEW_SGIX_pixel_tiles)/;"	d
GLEW_SGIX_polynomial_ffd	./GL/glew.h	/^#define GLEW_SGIX_polynomial_ffd GLEW_GET_VAR(__GLEW_SGIX_polynomial_ffd)/;"	d
GLEW_SGIX_quad_mesh	./GL/glew.h	/^#define GLEW_SGIX_quad_mesh GLEW_GET_VAR(__GLEW_SGIX_quad_mesh)/;"	d
GLEW_SGIX_reference_plane	./GL/glew.h	/^#define GLEW_SGIX_reference_plane GLEW_GET_VAR(__GLEW_SGIX_reference_plane)/;"	d
GLEW_SGIX_resample	./GL/glew.h	/^#define GLEW_SGIX_resample GLEW_GET_VAR(__GLEW_SGIX_resample)/;"	d
GLEW_SGIX_scalebias_hint	./GL/glew.h	/^#define GLEW_SGIX_scalebias_hint GLEW_GET_VAR(__GLEW_SGIX_scalebias_hint)/;"	d
GLEW_SGIX_shadow	./GL/glew.h	/^#define GLEW_SGIX_shadow GLEW_GET_VAR(__GLEW_SGIX_shadow)/;"	d
GLEW_SGIX_shadow_ambient	./GL/glew.h	/^#define GLEW_SGIX_shadow_ambient GLEW_GET_VAR(__GLEW_SGIX_shadow_ambient)/;"	d
GLEW_SGIX_slim	./GL/glew.h	/^#define GLEW_SGIX_slim GLEW_GET_VAR(__GLEW_SGIX_slim)/;"	d
GLEW_SGIX_spotlight_cutoff	./GL/glew.h	/^#define GLEW_SGIX_spotlight_cutoff GLEW_GET_VAR(__GLEW_SGIX_spotlight_cutoff)/;"	d
GLEW_SGIX_sprite	./GL/glew.h	/^#define GLEW_SGIX_sprite GLEW_GET_VAR(__GLEW_SGIX_sprite)/;"	d
GLEW_SGIX_subdiv_patch	./GL/glew.h	/^#define GLEW_SGIX_subdiv_patch GLEW_GET_VAR(__GLEW_SGIX_subdiv_patch)/;"	d
GLEW_SGIX_subsample	./GL/glew.h	/^#define GLEW_SGIX_subsample GLEW_GET_VAR(__GLEW_SGIX_subsample)/;"	d
GLEW_SGIX_tag_sample_buffer	./GL/glew.h	/^#define GLEW_SGIX_tag_sample_buffer GLEW_GET_VAR(__GLEW_SGIX_tag_sample_buffer)/;"	d
GLEW_SGIX_texture_add_env	./GL/glew.h	/^#define GLEW_SGIX_texture_add_env GLEW_GET_VAR(__GLEW_SGIX_texture_add_env)/;"	d
GLEW_SGIX_texture_coordinate_clamp	./GL/glew.h	/^#define GLEW_SGIX_texture_coordinate_clamp GLEW_GET_VAR(__GLEW_SGIX_texture_coordinate_clamp)/;"	d
GLEW_SGIX_texture_lod_bias	./GL/glew.h	/^#define GLEW_SGIX_texture_lod_bias GLEW_GET_VAR(__GLEW_SGIX_texture_lod_bias)/;"	d
GLEW_SGIX_texture_mipmap_anisotropic	./GL/glew.h	/^#define GLEW_SGIX_texture_mipmap_anisotropic GLEW_GET_VAR(__GLEW_SGIX_texture_mipmap_anisotropic/;"	d
GLEW_SGIX_texture_multi_buffer	./GL/glew.h	/^#define GLEW_SGIX_texture_multi_buffer GLEW_GET_VAR(__GLEW_SGIX_texture_multi_buffer)/;"	d
GLEW_SGIX_texture_phase	./GL/glew.h	/^#define GLEW_SGIX_texture_phase GLEW_GET_VAR(__GLEW_SGIX_texture_phase)/;"	d
GLEW_SGIX_texture_range	./GL/glew.h	/^#define GLEW_SGIX_texture_range GLEW_GET_VAR(__GLEW_SGIX_texture_range)/;"	d
GLEW_SGIX_texture_scale_bias	./GL/glew.h	/^#define GLEW_SGIX_texture_scale_bias GLEW_GET_VAR(__GLEW_SGIX_texture_scale_bias)/;"	d
GLEW_SGIX_texture_supersample	./GL/glew.h	/^#define GLEW_SGIX_texture_supersample GLEW_GET_VAR(__GLEW_SGIX_texture_supersample)/;"	d
GLEW_SGIX_vector_ops	./GL/glew.h	/^#define GLEW_SGIX_vector_ops GLEW_GET_VAR(__GLEW_SGIX_vector_ops)/;"	d
GLEW_SGIX_vertex_array_object	./GL/glew.h	/^#define GLEW_SGIX_vertex_array_object GLEW_GET_VAR(__GLEW_SGIX_vertex_array_object)/;"	d
GLEW_SGIX_vertex_preclip	./GL/glew.h	/^#define GLEW_SGIX_vertex_preclip GLEW_GET_VAR(__GLEW_SGIX_vertex_preclip)/;"	d
GLEW_SGIX_vertex_preclip_hint	./GL/glew.h	/^#define GLEW_SGIX_vertex_preclip_hint GLEW_GET_VAR(__GLEW_SGIX_vertex_preclip_hint)/;"	d
GLEW_SGIX_ycrcb	./GL/glew.h	/^#define GLEW_SGIX_ycrcb GLEW_GET_VAR(__GLEW_SGIX_ycrcb)/;"	d
GLEW_SGIX_ycrcb_subsample	./GL/glew.h	/^#define GLEW_SGIX_ycrcb_subsample GLEW_GET_VAR(__GLEW_SGIX_ycrcb_subsample)/;"	d
GLEW_SGIX_ycrcba	./GL/glew.h	/^#define GLEW_SGIX_ycrcba GLEW_GET_VAR(__GLEW_SGIX_ycrcba)/;"	d
GLEW_SGI_color_matrix	./GL/glew.h	/^#define GLEW_SGI_color_matrix GLEW_GET_VAR(__GLEW_SGI_color_matrix)/;"	d
GLEW_SGI_color_table	./GL/glew.h	/^#define GLEW_SGI_color_table GLEW_GET_VAR(__GLEW_SGI_color_table)/;"	d
GLEW_SGI_complex	./GL/glew.h	/^#define GLEW_SGI_complex GLEW_GET_VAR(__GLEW_SGI_complex)/;"	d
GLEW_SGI_complex_type	./GL/glew.h	/^#define GLEW_SGI_complex_type GLEW_GET_VAR(__GLEW_SGI_complex_type)/;"	d
GLEW_SGI_fft	./GL/glew.h	/^#define GLEW_SGI_fft GLEW_GET_VAR(__GLEW_SGI_fft)/;"	d
GLEW_SGI_texture_color_table	./GL/glew.h	/^#define GLEW_SGI_texture_color_table GLEW_GET_VAR(__GLEW_SGI_texture_color_table)/;"	d
GLEW_SUNX_constant_data	./GL/glew.h	/^#define GLEW_SUNX_constant_data GLEW_GET_VAR(__GLEW_SUNX_constant_data)/;"	d
GLEW_SUN_convolution_border_modes	./GL/glew.h	/^#define GLEW_SUN_convolution_border_modes GLEW_GET_VAR(__GLEW_SUN_convolution_border_modes)/;"	d
GLEW_SUN_global_alpha	./GL/glew.h	/^#define GLEW_SUN_global_alpha GLEW_GET_VAR(__GLEW_SUN_global_alpha)/;"	d
GLEW_SUN_mesh_array	./GL/glew.h	/^#define GLEW_SUN_mesh_array GLEW_GET_VAR(__GLEW_SUN_mesh_array)/;"	d
GLEW_SUN_read_video_pixels	./GL/glew.h	/^#define GLEW_SUN_read_video_pixels GLEW_GET_VAR(__GLEW_SUN_read_video_pixels)/;"	d
GLEW_SUN_slice_accum	./GL/glew.h	/^#define GLEW_SUN_slice_accum GLEW_GET_VAR(__GLEW_SUN_slice_accum)/;"	d
GLEW_SUN_triangle_list	./GL/glew.h	/^#define GLEW_SUN_triangle_list GLEW_GET_VAR(__GLEW_SUN_triangle_list)/;"	d
GLEW_SUN_vertex	./GL/glew.h	/^#define GLEW_SUN_vertex GLEW_GET_VAR(__GLEW_SUN_vertex)/;"	d
GLEW_VAR_EXPORT	./GL/glew.h	/^#define GLEW_VAR_EXPORT /;"	d
GLEW_VERSION	./GL/glew.h	/^#define GLEW_VERSION /;"	d
GLEW_VERSION_1_1	./GL/glew.h	/^#define GLEW_VERSION_1_1 GLEW_GET_VAR(__GLEW_VERSION_1_1)/;"	d
GLEW_VERSION_1_2	./GL/glew.h	/^#define GLEW_VERSION_1_2 GLEW_GET_VAR(__GLEW_VERSION_1_2)/;"	d
GLEW_VERSION_1_2_1	./GL/glew.h	/^#define GLEW_VERSION_1_2_1 GLEW_GET_VAR(__GLEW_VERSION_1_2_1)/;"	d
GLEW_VERSION_1_3	./GL/glew.h	/^#define GLEW_VERSION_1_3 GLEW_GET_VAR(__GLEW_VERSION_1_3)/;"	d
GLEW_VERSION_1_4	./GL/glew.h	/^#define GLEW_VERSION_1_4 GLEW_GET_VAR(__GLEW_VERSION_1_4)/;"	d
GLEW_VERSION_1_5	./GL/glew.h	/^#define GLEW_VERSION_1_5 GLEW_GET_VAR(__GLEW_VERSION_1_5)/;"	d
GLEW_VERSION_2_0	./GL/glew.h	/^#define GLEW_VERSION_2_0 GLEW_GET_VAR(__GLEW_VERSION_2_0)/;"	d
GLEW_VERSION_2_1	./GL/glew.h	/^#define GLEW_VERSION_2_1 GLEW_GET_VAR(__GLEW_VERSION_2_1)/;"	d
GLEW_VERSION_3_0	./GL/glew.h	/^#define GLEW_VERSION_3_0 GLEW_GET_VAR(__GLEW_VERSION_3_0)/;"	d
GLEW_VERSION_3_1	./GL/glew.h	/^#define GLEW_VERSION_3_1 GLEW_GET_VAR(__GLEW_VERSION_3_1)/;"	d
GLEW_VERSION_3_2	./GL/glew.h	/^#define GLEW_VERSION_3_2 GLEW_GET_VAR(__GLEW_VERSION_3_2)/;"	d
GLEW_VERSION_3_3	./GL/glew.h	/^#define GLEW_VERSION_3_3 GLEW_GET_VAR(__GLEW_VERSION_3_3)/;"	d
GLEW_VERSION_4_0	./GL/glew.h	/^#define GLEW_VERSION_4_0 GLEW_GET_VAR(__GLEW_VERSION_4_0)/;"	d
GLEW_VERSION_4_1	./GL/glew.h	/^#define GLEW_VERSION_4_1 GLEW_GET_VAR(__GLEW_VERSION_4_1)/;"	d
GLEW_VERSION_4_2	./GL/glew.h	/^#define GLEW_VERSION_4_2 GLEW_GET_VAR(__GLEW_VERSION_4_2)/;"	d
GLEW_VERSION_4_3	./GL/glew.h	/^#define GLEW_VERSION_4_3 GLEW_GET_VAR(__GLEW_VERSION_4_3)/;"	d
GLEW_VERSION_4_4	./GL/glew.h	/^#define GLEW_VERSION_4_4 GLEW_GET_VAR(__GLEW_VERSION_4_4)/;"	d
GLEW_VERSION_4_5	./GL/glew.h	/^#define GLEW_VERSION_4_5 GLEW_GET_VAR(__GLEW_VERSION_4_5)/;"	d
GLEW_VERSION_4_6	./GL/glew.h	/^#define GLEW_VERSION_4_6 GLEW_GET_VAR(__GLEW_VERSION_4_6)/;"	d
GLEW_VERSION_MAJOR	./GL/glew.h	/^#define GLEW_VERSION_MAJOR /;"	d
GLEW_VERSION_MICRO	./GL/glew.h	/^#define GLEW_VERSION_MICRO /;"	d
GLEW_VERSION_MINOR	./GL/glew.h	/^#define GLEW_VERSION_MINOR /;"	d
GLEW_VIV_shader_binary	./GL/glew.h	/^#define GLEW_VIV_shader_binary GLEW_GET_VAR(__GLEW_VIV_shader_binary)/;"	d
GLEW_WINGDIAPI_DEFINED	./GL/glew.h	/^#define GLEW_WINGDIAPI_DEFINED$/;"	d
GLEW_WIN_phong_shading	./GL/glew.h	/^#define GLEW_WIN_phong_shading GLEW_GET_VAR(__GLEW_WIN_phong_shading)/;"	d
GLEW_WIN_scene_markerXXX	./GL/glew.h	/^#define GLEW_WIN_scene_markerXXX GLEW_GET_VAR(__GLEW_WIN_scene_markerXXX)/;"	d
GLEW_WIN_specular_fog	./GL/glew.h	/^#define GLEW_WIN_specular_fog GLEW_GET_VAR(__GLEW_WIN_specular_fog)/;"	d
GLEW_WIN_swap_hint	./GL/glew.h	/^#define GLEW_WIN_swap_hint GLEW_GET_VAR(__GLEW_WIN_swap_hint)/;"	d
GLLOGPROCREGAL	./GL/glew.h	/^typedef void (APIENTRY *GLLOGPROCREGAL)(GLenum stream, GLsizei length, const GLchar *message, vo/;"	t	typeref:typename:void (APIENTRY *)(GLenum stream,GLsizei length,const GLchar * message,void * context)
GLM_ALIGNED_TYPEDEF	./glm/detail/setup.hpp	/^#	define GLM_ALIGNED_TYPEDEF(/;"	d
GLM_ARCH	./glm/simd/platform.h	/^#		define GLM_ARCH (GLM_ARCH_/;"	d
GLM_ARCH	./glm/simd/platform.h	/^#		define GLM_ARCH (GLM_ARCH_ARM | GLM_ARCH_/;"	d
GLM_ARCH	./glm/simd/platform.h	/^#	define GLM_ARCH (GLM_ARCH_/;"	d
GLM_ARCH	./glm/simd/platform.h	/^#	define GLM_ARCH GLM_ARCH_/;"	d
GLM_ARCH_ARM	./glm/simd/platform.h	/^#define GLM_ARCH_ARM		(GLM_ARCH_ARM_/;"	d
GLM_ARCH_ARMV8	./glm/simd/platform.h	/^#define GLM_ARCH_ARMV8		(GLM_ARCH_NEON_BIT | GLM_ARCH_SIMD_BIT | GLM_ARCH_ARM | GLM_ARCH_ARMV8_/;"	d
GLM_ARCH_ARMV8_BIT	./glm/simd/platform.h	/^#define GLM_ARCH_ARMV8_BIT /;"	d
GLM_ARCH_ARM_BIT	./glm/simd/platform.h	/^#define GLM_ARCH_ARM_BIT	/;"	d
GLM_ARCH_AVX	./glm/simd/platform.h	/^#define GLM_ARCH_AVX		(GLM_ARCH_AVX_/;"	d
GLM_ARCH_AVX2	./glm/simd/platform.h	/^#define GLM_ARCH_AVX2		(GLM_ARCH_AVX2_/;"	d
GLM_ARCH_AVX2_BIT	./glm/simd/platform.h	/^#define GLM_ARCH_AVX2_BIT	/;"	d
GLM_ARCH_AVX_BIT	./glm/simd/platform.h	/^#define GLM_ARCH_AVX_BIT	/;"	d
GLM_ARCH_MIPS	./glm/simd/platform.h	/^#define GLM_ARCH_MIPS		(GLM_ARCH_MIPS_/;"	d
GLM_ARCH_MIPS_BIT	./glm/simd/platform.h	/^#define GLM_ARCH_MIPS_BIT	/;"	d
GLM_ARCH_NEON	./glm/simd/platform.h	/^#define GLM_ARCH_NEON		(GLM_ARCH_NEON_/;"	d
GLM_ARCH_NEON_BIT	./glm/simd/platform.h	/^#define GLM_ARCH_NEON_BIT	/;"	d
GLM_ARCH_PPC	./glm/simd/platform.h	/^#define GLM_ARCH_PPC		(GLM_ARCH_PPC_/;"	d
GLM_ARCH_PPC_BIT	./glm/simd/platform.h	/^#define GLM_ARCH_PPC_BIT	/;"	d
GLM_ARCH_SIMD_BIT	./glm/simd/platform.h	/^#define GLM_ARCH_SIMD_BIT	/;"	d
GLM_ARCH_SSE	./glm/simd/platform.h	/^#define GLM_ARCH_SSE		(GLM_ARCH_SSE_/;"	d
GLM_ARCH_SSE2	./glm/simd/platform.h	/^#define GLM_ARCH_SSE2		(GLM_ARCH_SSE2_/;"	d
GLM_ARCH_SSE2_BIT	./glm/simd/platform.h	/^#define GLM_ARCH_SSE2_BIT	/;"	d
GLM_ARCH_SSE3	./glm/simd/platform.h	/^#define GLM_ARCH_SSE3		(GLM_ARCH_SSE3_/;"	d
GLM_ARCH_SSE3_BIT	./glm/simd/platform.h	/^#define GLM_ARCH_SSE3_BIT	/;"	d
GLM_ARCH_SSE41	./glm/simd/platform.h	/^#define GLM_ARCH_SSE41		(GLM_ARCH_SSE41_/;"	d
GLM_ARCH_SSE41_BIT	./glm/simd/platform.h	/^#define GLM_ARCH_SSE41_BIT	/;"	d
GLM_ARCH_SSE42	./glm/simd/platform.h	/^#define GLM_ARCH_SSE42		(GLM_ARCH_SSE42_/;"	d
GLM_ARCH_SSE42_BIT	./glm/simd/platform.h	/^#define GLM_ARCH_SSE42_BIT	/;"	d
GLM_ARCH_SSE_BIT	./glm/simd/platform.h	/^#define GLM_ARCH_SSE_BIT	/;"	d
GLM_ARCH_SSSE3	./glm/simd/platform.h	/^#define GLM_ARCH_SSSE3		(GLM_ARCH_SSSE3_/;"	d
GLM_ARCH_SSSE3_BIT	./glm/simd/platform.h	/^#define GLM_ARCH_SSSE3_BIT	/;"	d
GLM_ARCH_UNKNOWN	./glm/simd/platform.h	/^#define GLM_ARCH_UNKNOWN	/;"	d
GLM_ARCH_X86	./glm/simd/platform.h	/^#define GLM_ARCH_X86		(GLM_ARCH_X86_/;"	d
GLM_ARCH_X86_BIT	./glm/simd/platform.h	/^#define GLM_ARCH_X86_BIT	/;"	d
GLM_ASSERT_LENGTH	./glm/detail/setup.hpp	/^#	define GLM_ASSERT_LENGTH(/;"	d
GLM_CLIP_CONTROL_LH_BIT	./glm/detail/setup.hpp	/^#define GLM_CLIP_CONTROL_LH_BIT	/;"	d
GLM_CLIP_CONTROL_LH_NO	./glm/detail/setup.hpp	/^#define GLM_CLIP_CONTROL_LH_NO /;"	d
GLM_CLIP_CONTROL_LH_ZO	./glm/detail/setup.hpp	/^#define GLM_CLIP_CONTROL_LH_ZO /;"	d
GLM_CLIP_CONTROL_NO_BIT	./glm/detail/setup.hpp	/^#define GLM_CLIP_CONTROL_NO_BIT	/;"	d
GLM_CLIP_CONTROL_RH_BIT	./glm/detail/setup.hpp	/^#define GLM_CLIP_CONTROL_RH_BIT	/;"	d
GLM_CLIP_CONTROL_RH_NO	./glm/detail/setup.hpp	/^#define GLM_CLIP_CONTROL_RH_NO /;"	d
GLM_CLIP_CONTROL_RH_ZO	./glm/detail/setup.hpp	/^#define GLM_CLIP_CONTROL_RH_ZO /;"	d
GLM_CLIP_CONTROL_ZO_BIT	./glm/detail/setup.hpp	/^#define GLM_CLIP_CONTROL_ZO_BIT	/;"	d
GLM_COMPILER	./glm/simd/platform.h	/^#			define GLM_COMPILER GLM_COMPILER_/;"	d
GLM_COMPILER	./glm/simd/platform.h	/^#		define GLM_COMPILER GLM_COMPILER_/;"	d
GLM_COMPILER	./glm/simd/platform.h	/^#	define GLM_COMPILER GLM_COMPILER_/;"	d
GLM_COMPILER_CLANG	./glm/simd/platform.h	/^#define GLM_COMPILER_CLANG	/;"	d
GLM_COMPILER_CLANG10	./glm/simd/platform.h	/^#define GLM_COMPILER_CLANG10	/;"	d
GLM_COMPILER_CLANG11	./glm/simd/platform.h	/^#define GLM_COMPILER_CLANG11	/;"	d
GLM_COMPILER_CLANG12	./glm/simd/platform.h	/^#define GLM_COMPILER_CLANG12	/;"	d
GLM_COMPILER_CLANG13	./glm/simd/platform.h	/^#define GLM_COMPILER_CLANG13	/;"	d
GLM_COMPILER_CLANG14	./glm/simd/platform.h	/^#define GLM_COMPILER_CLANG14	/;"	d
GLM_COMPILER_CLANG15	./glm/simd/platform.h	/^#define GLM_COMPILER_CLANG15	/;"	d
GLM_COMPILER_CLANG16	./glm/simd/platform.h	/^#define GLM_COMPILER_CLANG16	/;"	d
GLM_COMPILER_CLANG17	./glm/simd/platform.h	/^#define GLM_COMPILER_CLANG17	/;"	d
GLM_COMPILER_CLANG18	./glm/simd/platform.h	/^#define GLM_COMPILER_CLANG18	/;"	d
GLM_COMPILER_CLANG19	./glm/simd/platform.h	/^#define GLM_COMPILER_CLANG19	/;"	d
GLM_COMPILER_CLANG34	./glm/simd/platform.h	/^#define GLM_COMPILER_CLANG34	/;"	d
GLM_COMPILER_CLANG35	./glm/simd/platform.h	/^#define GLM_COMPILER_CLANG35	/;"	d
GLM_COMPILER_CLANG36	./glm/simd/platform.h	/^#define GLM_COMPILER_CLANG36	/;"	d
GLM_COMPILER_CLANG37	./glm/simd/platform.h	/^#define GLM_COMPILER_CLANG37	/;"	d
GLM_COMPILER_CLANG38	./glm/simd/platform.h	/^#define GLM_COMPILER_CLANG38	/;"	d
GLM_COMPILER_CLANG39	./glm/simd/platform.h	/^#define GLM_COMPILER_CLANG39	/;"	d
GLM_COMPILER_CLANG4	./glm/simd/platform.h	/^#define GLM_COMPILER_CLANG4	/;"	d
GLM_COMPILER_CLANG5	./glm/simd/platform.h	/^#define GLM_COMPILER_CLANG5	/;"	d
GLM_COMPILER_CLANG6	./glm/simd/platform.h	/^#define GLM_COMPILER_CLANG6	/;"	d
GLM_COMPILER_CLANG7	./glm/simd/platform.h	/^#define GLM_COMPILER_CLANG7	/;"	d
GLM_COMPILER_CLANG8	./glm/simd/platform.h	/^#define GLM_COMPILER_CLANG8	/;"	d
GLM_COMPILER_CLANG9	./glm/simd/platform.h	/^#define GLM_COMPILER_CLANG9	/;"	d
GLM_COMPILER_CUDA	./glm/simd/platform.h	/^#define GLM_COMPILER_CUDA	/;"	d
GLM_COMPILER_CUDA75	./glm/simd/platform.h	/^#define GLM_COMPILER_CUDA75	/;"	d
GLM_COMPILER_CUDA80	./glm/simd/platform.h	/^#define GLM_COMPILER_CUDA80	/;"	d
GLM_COMPILER_CUDA90	./glm/simd/platform.h	/^#define GLM_COMPILER_CUDA90	/;"	d
GLM_COMPILER_CUDA_RTC	./glm/simd/platform.h	/^#define GLM_COMPILER_CUDA_RTC	/;"	d
GLM_COMPILER_GCC	./glm/simd/platform.h	/^#define GLM_COMPILER_GCC	/;"	d
GLM_COMPILER_GCC10	./glm/simd/platform.h	/^#define GLM_COMPILER_GCC10	/;"	d
GLM_COMPILER_GCC11	./glm/simd/platform.h	/^#define GLM_COMPILER_GCC11	/;"	d
GLM_COMPILER_GCC12	./glm/simd/platform.h	/^#define GLM_COMPILER_GCC12	/;"	d
GLM_COMPILER_GCC13	./glm/simd/platform.h	/^#define GLM_COMPILER_GCC13	/;"	d
GLM_COMPILER_GCC14	./glm/simd/platform.h	/^#define GLM_COMPILER_GCC14	/;"	d
GLM_COMPILER_GCC46	./glm/simd/platform.h	/^#define GLM_COMPILER_GCC46	/;"	d
GLM_COMPILER_GCC47	./glm/simd/platform.h	/^#define GLM_COMPILER_GCC47	/;"	d
GLM_COMPILER_GCC48	./glm/simd/platform.h	/^#define GLM_COMPILER_GCC48	/;"	d
GLM_COMPILER_GCC49	./glm/simd/platform.h	/^#define GLM_COMPILER_GCC49	/;"	d
GLM_COMPILER_GCC5	./glm/simd/platform.h	/^#define GLM_COMPILER_GCC5	/;"	d
GLM_COMPILER_GCC6	./glm/simd/platform.h	/^#define GLM_COMPILER_GCC6	/;"	d
GLM_COMPILER_GCC61	./glm/simd/platform.h	/^#define GLM_COMPILER_GCC61	/;"	d
GLM_COMPILER_GCC7	./glm/simd/platform.h	/^#define GLM_COMPILER_GCC7	/;"	d
GLM_COMPILER_GCC8	./glm/simd/platform.h	/^#define GLM_COMPILER_GCC8	/;"	d
GLM_COMPILER_GCC9	./glm/simd/platform.h	/^#define GLM_COMPILER_GCC9	/;"	d
GLM_COMPILER_HIP	./glm/simd/platform.h	/^#define GLM_COMPILER_HIP	/;"	d
GLM_COMPILER_INTEL	./glm/simd/platform.h	/^#define GLM_COMPILER_INTEL	/;"	d
GLM_COMPILER_INTEL14	./glm/simd/platform.h	/^#define GLM_COMPILER_INTEL14	/;"	d
GLM_COMPILER_INTEL15	./glm/simd/platform.h	/^#define GLM_COMPILER_INTEL15	/;"	d
GLM_COMPILER_INTEL16	./glm/simd/platform.h	/^#define GLM_COMPILER_INTEL16	/;"	d
GLM_COMPILER_INTEL17	./glm/simd/platform.h	/^#define GLM_COMPILER_INTEL17	/;"	d
GLM_COMPILER_INTEL18	./glm/simd/platform.h	/^#define GLM_COMPILER_INTEL18	/;"	d
GLM_COMPILER_INTEL19	./glm/simd/platform.h	/^#define GLM_COMPILER_INTEL19	/;"	d
GLM_COMPILER_INTEL21	./glm/simd/platform.h	/^#define GLM_COMPILER_INTEL21	/;"	d
GLM_COMPILER_UNKNOWN	./glm/simd/platform.h	/^#define GLM_COMPILER_UNKNOWN	/;"	d
GLM_COMPILER_VC	./glm/simd/platform.h	/^#define GLM_COMPILER_VC	/;"	d
GLM_COMPILER_VC12	./glm/simd/platform.h	/^#define GLM_COMPILER_VC12	/;"	d
GLM_COMPILER_VC14	./glm/simd/platform.h	/^#define GLM_COMPILER_VC14	/;"	d
GLM_COMPILER_VC15	./glm/simd/platform.h	/^#define GLM_COMPILER_VC15	/;"	d
GLM_COMPILER_VC15_3	./glm/simd/platform.h	/^#define GLM_COMPILER_VC15_3	/;"	d
GLM_COMPILER_VC15_5	./glm/simd/platform.h	/^#define GLM_COMPILER_VC15_5	/;"	d
GLM_COMPILER_VC15_6	./glm/simd/platform.h	/^#define GLM_COMPILER_VC15_6	/;"	d
GLM_COMPILER_VC15_7	./glm/simd/platform.h	/^#define GLM_COMPILER_VC15_7	/;"	d
GLM_COMPILER_VC15_8	./glm/simd/platform.h	/^#define GLM_COMPILER_VC15_8	/;"	d
GLM_COMPILER_VC15_9	./glm/simd/platform.h	/^#define GLM_COMPILER_VC15_9	/;"	d
GLM_COMPILER_VC16	./glm/simd/platform.h	/^#define GLM_COMPILER_VC16	/;"	d
GLM_COMPILER_VC17	./glm/simd/platform.h	/^#define GLM_COMPILER_VC17	/;"	d
GLM_CONFIG_ALIGNED_GENTYPES	./glm/detail/setup.hpp	/^#	define GLM_CONFIG_ALIGNED_GENTYPES /;"	d
GLM_CONFIG_ANONYMOUS_STRUCT	./glm/detail/setup.hpp	/^#	define GLM_CONFIG_ANONYMOUS_STRUCT /;"	d
GLM_CONFIG_CLIP_CONTROL	./glm/detail/setup.hpp	/^#		define GLM_CONFIG_CLIP_CONTROL /;"	d
GLM_CONFIG_CONSTEXP	./glm/detail/setup.hpp	/^#	define GLM_CONFIG_CONSTEXP /;"	d
GLM_CONFIG_CTOR_INIT	./glm/detail/setup.hpp	/^#	define GLM_CONFIG_CTOR_INIT /;"	d
GLM_CONFIG_DEFAULTED_DEFAULT_CTOR	./glm/detail/setup.hpp	/^#	define GLM_CONFIG_DEFAULTED_DEFAULT_CTOR /;"	d
GLM_CONFIG_DEFAULTED_FUNCTIONS	./glm/detail/setup.hpp	/^#	define GLM_CONFIG_DEFAULTED_FUNCTIONS /;"	d
GLM_CONFIG_LENGTH_TYPE	./glm/detail/setup.hpp	/^#	define GLM_CONFIG_LENGTH_TYPE	/;"	d
GLM_CONFIG_NULLPTR	./glm/detail/setup.hpp	/^#	define GLM_CONFIG_NULLPTR /;"	d
GLM_CONFIG_PRECISION_BOOL	./glm/detail/setup.hpp	/^#	define GLM_CONFIG_PRECISION_BOOL	/;"	d
GLM_CONFIG_PRECISION_DOUBLE	./glm/detail/setup.hpp	/^#	define GLM_CONFIG_PRECISION_DOUBLE	/;"	d
GLM_CONFIG_PRECISION_FLOAT	./glm/detail/setup.hpp	/^#	define GLM_CONFIG_PRECISION_FLOAT	/;"	d
GLM_CONFIG_PRECISION_INT	./glm/detail/setup.hpp	/^#	define GLM_CONFIG_PRECISION_INT	/;"	d
GLM_CONFIG_PRECISION_UINT	./glm/detail/setup.hpp	/^#	define GLM_CONFIG_PRECISION_UINT	/;"	d
GLM_CONFIG_SIMD	./glm/detail/setup.hpp	/^#	define GLM_CONFIG_SIMD /;"	d
GLM_CONFIG_SWIZZLE	./glm/detail/setup.hpp	/^#	define GLM_CONFIG_SWIZZLE /;"	d
GLM_CONFIG_UNRESTRICTED_FLOAT	./glm/detail/setup.hpp	/^#	define GLM_CONFIG_UNRESTRICTED_FLOAT /;"	d
GLM_CONFIG_UNRESTRICTED_GENTYPE	./glm/detail/setup.hpp	/^#	define GLM_CONFIG_UNRESTRICTED_GENTYPE /;"	d
GLM_CONFIG_XYZW_ONLY	./glm/detail/setup.hpp	/^#	define GLM_CONFIG_XYZW_ONLY /;"	d
GLM_CONSTEXPR	./glm/detail/setup.hpp	/^#	define GLM_CONSTEXPR /;"	d
GLM_CONSTEXPR	./glm/detail/setup.hpp	/^#	define GLM_CONSTEXPR$/;"	d
GLM_COUNTOF	./glm/detail/setup.hpp	/^#	define GLM_COUNTOF(/;"	d
GLM_CTOR_DECL	./glm/detail/setup.hpp	/^#define GLM_CTOR_DECL /;"	d
GLM_CTOR_INITIALISATION	./glm/detail/setup.hpp	/^#define GLM_CTOR_INITIALISATION	/;"	d
GLM_CTOR_INITIALIZER_LIST	./glm/detail/setup.hpp	/^#define GLM_CTOR_INITIALIZER_LIST	/;"	d
GLM_CTOR_INIT_DISABLE	./glm/detail/setup.hpp	/^#define GLM_CTOR_INIT_DISABLE	/;"	d
GLM_CUDA_FUNC_DECL	./glm/detail/setup.hpp	/^#		define GLM_CUDA_FUNC_DECL /;"	d
GLM_CUDA_FUNC_DECL	./glm/detail/setup.hpp	/^#	define GLM_CUDA_FUNC_DECL$/;"	d
GLM_CUDA_FUNC_DEF	./glm/detail/setup.hpp	/^#		define GLM_CUDA_FUNC_DEF /;"	d
GLM_CUDA_FUNC_DEF	./glm/detail/setup.hpp	/^#	define GLM_CUDA_FUNC_DEF$/;"	d
GLM_CXX11_ACCESS_CONTROL_SFINAE	./glm/detail/_features.hpp	/^#		define GLM_CXX11_ACCESS_CONTROL_SFINAE$/;"	d
GLM_CXX11_ALIAS_TEMPLATE	./glm/detail/_features.hpp	/^#		define GLM_CXX11_ALIAS_TEMPLATE$/;"	d
GLM_CXX11_ALIGNAS	./glm/detail/_features.hpp	/^#		define GLM_CXX11_ALIGNAS$/;"	d
GLM_CXX11_ATTRIBUTES	./glm/detail/_features.hpp	/^#		define GLM_CXX11_ATTRIBUTES$/;"	d
GLM_CXX11_AUTO_TYPE	./glm/detail/_features.hpp	/^#		define GLM_CXX11_AUTO_TYPE$/;"	d
GLM_CXX11_CONSTEXPR	./glm/detail/_features.hpp	/^#		define GLM_CXX11_CONSTEXPR$/;"	d
GLM_CXX11_DECLTYPE	./glm/detail/_features.hpp	/^#		define GLM_CXX11_DECLTYPE$/;"	d
GLM_CXX11_DEFAULTED_FUNCTIONS	./glm/detail/_features.hpp	/^#		define GLM_CXX11_DEFAULTED_FUNCTIONS$/;"	d
GLM_CXX11_DEFAULT_FUNCTION_TEMPLATE_ARGS	./glm/detail/_features.hpp	/^#		define GLM_CXX11_DEFAULT_FUNCTION_TEMPLATE_ARGS$/;"	d
GLM_CXX11_DELEGATING_CONSTRUCTORS	./glm/detail/_features.hpp	/^#		define GLM_CXX11_DELEGATING_CONSTRUCTORS$/;"	d
GLM_CXX11_DELETED_FUNCTIONS	./glm/detail/_features.hpp	/^#		define GLM_CXX11_DELETED_FUNCTIONS$/;"	d
GLM_CXX11_EXPLICIT_CONVERSIONS	./glm/detail/_features.hpp	/^#		define GLM_CXX11_EXPLICIT_CONVERSIONS$/;"	d
GLM_CXX11_GENERALIZED_INITIALIZERS	./glm/detail/_features.hpp	/^#		define GLM_CXX11_GENERALIZED_INITIALIZERS$/;"	d
GLM_CXX11_IMPLICIT_MOVES	./glm/detail/_features.hpp	/^#		define GLM_CXX11_IMPLICIT_MOVES$/;"	d
GLM_CXX11_INHERITING_CONSTRUCTORS	./glm/detail/_features.hpp	/^#		define GLM_CXX11_INHERITING_CONSTRUCTORS$/;"	d
GLM_CXX11_INLINE_NAMESPACES	./glm/detail/_features.hpp	/^#		define GLM_CXX11_INLINE_NAMESPACES$/;"	d
GLM_CXX11_LAMBDAS	./glm/detail/_features.hpp	/^#		define GLM_CXX11_LAMBDAS$/;"	d
GLM_CXX11_LOCAL_TYPE_TEMPLATE_ARGS	./glm/detail/_features.hpp	/^#		define GLM_CXX11_LOCAL_TYPE_TEMPLATE_ARGS$/;"	d
GLM_CXX11_NOEXCEPT	./glm/detail/_features.hpp	/^#		define GLM_CXX11_NOEXCEPT$/;"	d
GLM_CXX11_NONSTATIC_MEMBER_INIT	./glm/detail/_features.hpp	/^#		define GLM_CXX11_NONSTATIC_MEMBER_INIT$/;"	d
GLM_CXX11_NULLPTR	./glm/detail/_features.hpp	/^#		define GLM_CXX11_NULLPTR$/;"	d
GLM_CXX11_OVERRIDE_CONTROL	./glm/detail/_features.hpp	/^#		define GLM_CXX11_OVERRIDE_CONTROL$/;"	d
GLM_CXX11_RANGE_FOR	./glm/detail/_features.hpp	/^#		define GLM_CXX11_RANGE_FOR$/;"	d
GLM_CXX11_RAW_STRING_LITERALS	./glm/detail/_features.hpp	/^#		define GLM_CXX11_RAW_STRING_LITERALS$/;"	d
GLM_CXX11_REFERENCE_QUALIFIED_FUNCTIONS	./glm/detail/_features.hpp	/^#		define GLM_CXX11_REFERENCE_QUALIFIED_FUNCTIONS$/;"	d
GLM_CXX11_RVALUE_REFERENCES	./glm/detail/_features.hpp	/^#		define GLM_CXX11_RVALUE_REFERENCES$/;"	d
GLM_CXX11_STATIC_ASSERT	./glm/detail/_features.hpp	/^#		define GLM_CXX11_STATIC_ASSERT$/;"	d
GLM_CXX11_STATIC_ASSERT	./glm/detail/_features.hpp	/^#	define GLM_CXX11_STATIC_ASSERT$/;"	d
GLM_CXX11_STRONG_ENUMS	./glm/detail/_features.hpp	/^#		define GLM_CXX11_STRONG_ENUMS$/;"	d
GLM_CXX11_TRAILING_RETURN	./glm/detail/_features.hpp	/^#		define GLM_CXX11_TRAILING_RETURN$/;"	d
GLM_CXX11_UNICODE_LITERALS	./glm/detail/_features.hpp	/^#		define GLM_CXX11_UNICODE_LITERALS$/;"	d
GLM_CXX11_UNRESTRICTED_UNIONS	./glm/detail/_features.hpp	/^#		define GLM_CXX11_UNRESTRICTED_UNIONS$/;"	d
GLM_CXX11_USER_LITERALS	./glm/detail/_features.hpp	/^#		define GLM_CXX11_USER_LITERALS$/;"	d
GLM_CXX11_VARIADIC_TEMPLATES	./glm/detail/_features.hpp	/^#		define GLM_CXX11_VARIADIC_TEMPLATES$/;"	d
GLM_CXX98_EXCEPTIONS	./glm/detail/_features.hpp	/^#		define GLM_CXX98_EXCEPTIONS$/;"	d
GLM_CXX98_RTTI	./glm/detail/_features.hpp	/^#		define GLM_CXX98_RTTI$/;"	d
GLM_DEFAULT	./glm/detail/setup.hpp	/^#	define GLM_DEFAULT /;"	d
GLM_DEFAULT	./glm/detail/setup.hpp	/^#	define GLM_DEFAULT$/;"	d
GLM_DEFAULTED_DEFAULT_CTOR_DECL	./glm/detail/setup.hpp	/^#	define GLM_DEFAULTED_DEFAULT_CTOR_DECL /;"	d
GLM_DEFAULTED_DEFAULT_CTOR_QUALIFIER	./glm/detail/setup.hpp	/^#	define GLM_DEFAULTED_DEFAULT_CTOR_QUALIFIER /;"	d
GLM_DEFAULTED_FUNC_DECL	./glm/detail/setup.hpp	/^#	define GLM_DEFAULTED_FUNC_DECL /;"	d
GLM_DEFAULTED_FUNC_DECL	./glm/detail/setup.hpp	/^#	define GLM_DEFAULTED_FUNC_DECL$/;"	d
GLM_DEFAULTED_FUNC_QUALIFIER	./glm/detail/setup.hpp	/^#	define GLM_DEFAULTED_FUNC_QUALIFIER /;"	d
GLM_DEFAULT_CTOR	./glm/detail/setup.hpp	/^#	define GLM_DEFAULT_CTOR /;"	d
GLM_DEFAULT_CTOR	./glm/detail/setup.hpp	/^#	define GLM_DEFAULT_CTOR$/;"	d
GLM_DEPRECATED	./glm/detail/setup.hpp	/^#	define GLM_DEPRECATED /;"	d
GLM_DEPRECATED	./glm/detail/setup.hpp	/^#	define GLM_DEPRECATED$/;"	d
GLM_DISABLE	./glm/detail/setup.hpp	/^#define GLM_DISABLE	/;"	d
GLM_ENABLE	./glm/detail/setup.hpp	/^#define GLM_ENABLE	/;"	d
GLM_ENABLE_EXPERIMENTAL	./glm/detail/glm.cpp	/^#define GLM_ENABLE_EXPERIMENTAL$/;"	d	file:
GLM_EXPLICIT	./glm/detail/setup.hpp	/^#	define GLM_EXPLICIT /;"	d
GLM_EXPLICIT	./glm/detail/setup.hpp	/^#	define GLM_EXPLICIT$/;"	d
GLM_EXTRACT_WORDS	./glm/ext/scalar_ulp.inl	/^#define GLM_EXTRACT_WORDS(/;"	d	file:
GLM_FORCE_ALIGNED_GENTYPES	./glm/detail/setup.hpp	/^#	define GLM_FORCE_ALIGNED_GENTYPES$/;"	d
GLM_FORCE_DEFAULT_ALIGNED_GENTYPES	./glm/detail/setup.hpp	/^#	define GLM_FORCE_DEFAULT_ALIGNED_GENTYPES$/;"	d
GLM_FORCE_INTRINSICS	./glm/simd/platform.h	/^#	define GLM_FORCE_INTRINSICS$/;"	d
GLM_FORCE_SWIZZLE	./glm/detail/setup.hpp	/^#	define GLM_FORCE_SWIZZLE$/;"	d
GLM_FUNC_DECL	./glm/detail/setup.hpp	/^#define GLM_FUNC_DECL /;"	d
GLM_FUNC_DISCARD_DECL	./glm/detail/setup.hpp	/^#define GLM_FUNC_DISCARD_DECL /;"	d
GLM_FUNC_QUALIFIER	./glm/detail/setup.hpp	/^#define GLM_FUNC_QUALIFIER /;"	d
GLM_GET_FLOAT_WORD	./glm/ext/scalar_ulp.inl	/^#define GLM_GET_FLOAT_WORD(/;"	d	file:
GLM_GET_VERSION_MAJOR	./glm/detail/setup.hpp	/^#define GLM_GET_VERSION_MAJOR(/;"	d
GLM_GET_VERSION_MINOR	./glm/detail/setup.hpp	/^#define GLM_GET_VERSION_MINOR(/;"	d
GLM_GET_VERSION_PATCH	./glm/detail/setup.hpp	/^#define GLM_GET_VERSION_PATCH(/;"	d
GLM_GET_VERSION_VARIANT	./glm/detail/setup.hpp	/^#define GLM_GET_VERSION_VARIANT(/;"	d
GLM_GTX_hash	./glm/gtx/hash.hpp	/^#define GLM_GTX_hash /;"	d
GLM_HAS_ALIGNOF	./glm/detail/setup.hpp	/^#	define GLM_HAS_ALIGNOF /;"	d
GLM_HAS_ASSIGNABLE	./glm/detail/setup.hpp	/^#	define GLM_HAS_ASSIGNABLE /;"	d
GLM_HAS_BITSCAN_WINDOWS	./glm/detail/setup.hpp	/^#	define GLM_HAS_BITSCAN_WINDOWS /;"	d
GLM_HAS_CONSTEXPR	./glm/detail/setup.hpp	/^#	define GLM_HAS_CONSTEXPR /;"	d
GLM_HAS_CXX11_STL	./glm/detail/setup.hpp	/^#		define GLM_HAS_CXX11_STL /;"	d
GLM_HAS_CXX11_STL	./glm/detail/setup.hpp	/^#	define GLM_HAS_CXX11_STL /;"	d
GLM_HAS_DEFAULTED_FUNCTIONS	./glm/detail/setup.hpp	/^#	define GLM_HAS_DEFAULTED_FUNCTIONS /;"	d
GLM_HAS_EXPLICIT_CONVERSION_OPERATORS	./glm/detail/setup.hpp	/^#	define GLM_HAS_EXPLICIT_CONVERSION_OPERATORS /;"	d
GLM_HAS_EXTENDED_INTEGER_TYPE	./glm/detail/setup.hpp	/^#	define GLM_HAS_EXTENDED_INTEGER_TYPE /;"	d
GLM_HAS_IF_CONSTEXPR	./glm/detail/setup.hpp	/^#		define GLM_HAS_IF_CONSTEXPR /;"	d
GLM_HAS_IF_CONSTEXPR	./glm/detail/setup.hpp	/^#	define GLM_HAS_IF_CONSTEXPR /;"	d
GLM_HAS_IF_CONSTEXPR	./glm/detail/setup.hpp	/^# 		define GLM_HAS_IF_CONSTEXPR /;"	d
GLM_HAS_IF_CONSTEXPR	./glm/detail/setup.hpp	/^# 	define GLM_HAS_IF_CONSTEXPR /;"	d
GLM_HAS_INITIALIZER_LISTS	./glm/detail/setup.hpp	/^#	define GLM_HAS_INITIALIZER_LISTS /;"	d
GLM_HAS_MAKE_SIGNED	./glm/detail/setup.hpp	/^#	define GLM_HAS_MAKE_SIGNED /;"	d
GLM_HAS_NOEXCEPT	./glm/detail/setup.hpp	/^#	define GLM_HAS_NOEXCEPT /;"	d
GLM_HAS_OPENMP	./glm/detail/setup.hpp	/^#			define GLM_HAS_OPENMP /;"	d
GLM_HAS_OPENMP	./glm/detail/setup.hpp	/^#		define GLM_HAS_OPENMP /;"	d
GLM_HAS_OPENMP	./glm/detail/setup.hpp	/^#	define GLM_HAS_OPENMP /;"	d
GLM_HAS_RANGE_FOR	./glm/detail/setup.hpp	/^#	define GLM_HAS_RANGE_FOR /;"	d
GLM_HAS_RVALUE_REFERENCES	./glm/detail/setup.hpp	/^#	define GLM_HAS_RVALUE_REFERENCES /;"	d
GLM_HAS_STATIC_ASSERT	./glm/detail/setup.hpp	/^#	define GLM_HAS_STATIC_ASSERT /;"	d
GLM_HAS_TEMPLATE_ALIASES	./glm/detail/setup.hpp	/^#	define GLM_HAS_TEMPLATE_ALIASES /;"	d
GLM_HAS_TRIVIAL_QUERIES	./glm/detail/setup.hpp	/^#define GLM_HAS_TRIVIAL_QUERIES /;"	d
GLM_HAS_UNRESTRICTED_UNIONS	./glm/detail/setup.hpp	/^#	define GLM_HAS_UNRESTRICTED_UNIONS /;"	d
GLM_HIGHP	./glm/detail/setup.hpp	/^#define GLM_HIGHP	/;"	d
GLM_IF_CONSTEXPR	./glm/detail/setup.hpp	/^#	define GLM_IF_CONSTEXPR /;"	d
GLM_IF_CONSTEXPR	./glm/detail/setup.hpp	/^# 	define GLM_IF_CONSTEXPR /;"	d
GLM_IMPLEMENT_SCAL_MULT	./glm/gtx/scalar_multiplication.hpp	/^#define GLM_IMPLEMENT_SCAL_MULT(/;"	d
GLM_INLINE	./glm/detail/setup.hpp	/^#		define GLM_INLINE /;"	d
GLM_INLINE	./glm/detail/setup.hpp	/^#	define GLM_INLINE /;"	d
GLM_INSERT_WORDS	./glm/ext/scalar_ulp.inl	/^#define GLM_INSERT_WORDS(/;"	d	file:
GLM_LANG	./glm/detail/setup.hpp	/^#		define GLM_LANG (0 | GLM_LANG_/;"	d
GLM_LANG	./glm/detail/setup.hpp	/^#		define GLM_LANG (GLM_LANG_CXX0X | GLM_LANG_/;"	d
GLM_LANG	./glm/detail/setup.hpp	/^#		define GLM_LANG (GLM_LANG_CXX11 | GLM_LANG_/;"	d
GLM_LANG	./glm/detail/setup.hpp	/^#		define GLM_LANG (GLM_LANG_CXX14 | GLM_LANG_/;"	d
GLM_LANG	./glm/detail/setup.hpp	/^#		define GLM_LANG (GLM_LANG_CXX17 | GLM_LANG_/;"	d
GLM_LANG	./glm/detail/setup.hpp	/^#		define GLM_LANG (GLM_LANG_CXX20 | GLM_LANG_/;"	d
GLM_LANG	./glm/detail/setup.hpp	/^#		define GLM_LANG (GLM_LANG_CXX98 | GLM_LANG_/;"	d
GLM_LANG	./glm/detail/setup.hpp	/^#	define GLM_LANG (GLM_LANG_CXX03 | GLM_LANG_/;"	d
GLM_LANG	./glm/detail/setup.hpp	/^#	define GLM_LANG (GLM_LANG_CXX11 | GLM_LANG_/;"	d
GLM_LANG	./glm/detail/setup.hpp	/^#	define GLM_LANG (GLM_LANG_CXX14 | GLM_LANG_/;"	d
GLM_LANG	./glm/detail/setup.hpp	/^#	define GLM_LANG (GLM_LANG_CXX17 | GLM_LANG_/;"	d
GLM_LANG	./glm/detail/setup.hpp	/^#	define GLM_LANG (GLM_LANG_CXX20 | GLM_LANG_/;"	d
GLM_LANG	./glm/detail/setup.hpp	/^#	define GLM_LANG (GLM_LANG_CXX98 | GLM_LANG_/;"	d
GLM_LANG	./glm/detail/setup.hpp	/^#	define GLM_LANG /;"	d
GLM_LANG_CXX03	./glm/detail/setup.hpp	/^#define GLM_LANG_CXX03			(GLM_LANG_CXX98 | GLM_LANG_CXX03_/;"	d
GLM_LANG_CXX03_FLAG	./glm/detail/setup.hpp	/^#define GLM_LANG_CXX03_FLAG	/;"	d
GLM_LANG_CXX0X	./glm/detail/setup.hpp	/^#define GLM_LANG_CXX0X			(GLM_LANG_CXX03 | GLM_LANG_CXX0X_/;"	d
GLM_LANG_CXX0X_FLAG	./glm/detail/setup.hpp	/^#define GLM_LANG_CXX0X_FLAG	/;"	d
GLM_LANG_CXX11	./glm/detail/setup.hpp	/^#define GLM_LANG_CXX11			(GLM_LANG_CXX0X | GLM_LANG_CXX11_/;"	d
GLM_LANG_CXX11_FLAG	./glm/detail/setup.hpp	/^#define GLM_LANG_CXX11_FLAG	/;"	d
GLM_LANG_CXX14	./glm/detail/setup.hpp	/^#define GLM_LANG_CXX14			(GLM_LANG_CXX11 | GLM_LANG_CXX14_/;"	d
GLM_LANG_CXX14_FLAG	./glm/detail/setup.hpp	/^#define GLM_LANG_CXX14_FLAG	/;"	d
GLM_LANG_CXX17	./glm/detail/setup.hpp	/^#define GLM_LANG_CXX17			(GLM_LANG_CXX14 | GLM_LANG_CXX17_/;"	d
GLM_LANG_CXX17_FLAG	./glm/detail/setup.hpp	/^#define GLM_LANG_CXX17_FLAG	/;"	d
GLM_LANG_CXX20	./glm/detail/setup.hpp	/^#define GLM_LANG_CXX20			(GLM_LANG_CXX17 | GLM_LANG_CXX20_/;"	d
GLM_LANG_CXX20_FLAG	./glm/detail/setup.hpp	/^#define GLM_LANG_CXX20_FLAG	/;"	d
GLM_LANG_CXX98	./glm/detail/setup.hpp	/^#define GLM_LANG_CXX98			GLM_LANG_CXX98_/;"	d
GLM_LANG_CXX98_FLAG	./glm/detail/setup.hpp	/^#define GLM_LANG_CXX98_FLAG	/;"	d
GLM_LANG_CXXGNU	./glm/detail/setup.hpp	/^#define GLM_LANG_CXXGNU			GLM_LANG_CXXGNU_/;"	d
GLM_LANG_CXXGNU_FLAG	./glm/detail/setup.hpp	/^#define GLM_LANG_CXXGNU_FLAG	/;"	d
GLM_LANG_CXXMS	./glm/detail/setup.hpp	/^#define GLM_LANG_CXXMS			GLM_LANG_CXXMS_/;"	d
GLM_LANG_CXXMS_FLAG	./glm/detail/setup.hpp	/^#define GLM_LANG_CXXMS_FLAG	/;"	d
GLM_LANG_EXT	./glm/detail/setup.hpp	/^#	define GLM_LANG_EXT /;"	d
GLM_LANG_PLATFORM	./glm/detail/setup.hpp	/^#				define GLM_LANG_PLATFORM /;"	d
GLM_LANG_PLATFORM	./glm/detail/setup.hpp	/^#			define GLM_LANG_PLATFORM /;"	d
GLM_LANG_PLATFORM	./glm/detail/setup.hpp	/^#		define GLM_LANG_PLATFORM /;"	d
GLM_LANG_STL11_FORCED	./glm/detail/setup.hpp	/^#	define GLM_LANG_STL11_FORCED$/;"	d
GLM_LENGTH_INT	./glm/detail/setup.hpp	/^#define GLM_LENGTH_INT	/;"	d
GLM_LENGTH_SIZE_T	./glm/detail/setup.hpp	/^#define GLM_LENGTH_SIZE_T	/;"	d
GLM_LOWP	./glm/detail/setup.hpp	/^#define GLM_LOWP	/;"	d
GLM_MAKE_API_VERSION	./glm/detail/setup.hpp	/^#define GLM_MAKE_API_VERSION(/;"	d
GLM_MEDIUMP	./glm/detail/setup.hpp	/^#define GLM_MEDIUMP	/;"	d
GLM_MESSAGES	./glm/detail/setup.hpp	/^#	define GLM_MESSAGES /;"	d
GLM_MESSAGE_DISPLAYED	./glm/detail/setup.hpp	/^#	define GLM_MESSAGE_DISPLAYED$/;"	d
GLM_MESSAGE_EXT_INCLUDED_DISPLAYED	./glm/ext.hpp	/^#	define GLM_MESSAGE_EXT_INCLUDED_DISPLAYED$/;"	d
GLM_MODEL	./glm/detail/setup.hpp	/^#	define GLM_MODEL	GLM_MODEL_/;"	d
GLM_MODEL_32	./glm/simd/platform.h	/^#define GLM_MODEL_32	/;"	d
GLM_MODEL_64	./glm/simd/platform.h	/^#define GLM_MODEL_64	/;"	d
GLM_MUTABLE	./glm/detail/_swizzle_func.hpp	/^#define GLM_MUTABLE$/;"	d
GLM_NEVER_INLINE	./glm/detail/setup.hpp	/^#		define GLM_NEVER_INLINE /;"	d
GLM_NEVER_INLINE	./glm/detail/setup.hpp	/^#		define GLM_NEVER_INLINE$/;"	d
GLM_NEVER_INLINE	./glm/detail/setup.hpp	/^#	define GLM_NEVER_INLINE$/;"	d
GLM_NODISCARD	./glm/detail/setup.hpp	/^#	define GLM_NODISCARD /;"	d
GLM_NODISCARD	./glm/detail/setup.hpp	/^#	define GLM_NODISCARD$/;"	d
GLM_NOEXCEPT	./glm/detail/setup.hpp	/^#	define GLM_NOEXCEPT /;"	d
GLM_NOEXCEPT	./glm/detail/setup.hpp	/^#	define GLM_NOEXCEPT$/;"	d
GLM_NULLPTR	./glm/detail/setup.hpp	/^#	define GLM_NULLPTR /;"	d
GLM_PLATFORM	./glm/simd/platform.h	/^#	define GLM_PLATFORM GLM_PLATFORM_/;"	d
GLM_PLATFORM_ANDROID	./glm/simd/platform.h	/^#define GLM_PLATFORM_ANDROID	/;"	d
GLM_PLATFORM_APPLE	./glm/simd/platform.h	/^#define GLM_PLATFORM_APPLE	/;"	d
GLM_PLATFORM_CHROME_NACL	./glm/simd/platform.h	/^#define GLM_PLATFORM_CHROME_NACL	/;"	d
GLM_PLATFORM_CYGWIN	./glm/simd/platform.h	/^#define GLM_PLATFORM_CYGWIN	/;"	d
GLM_PLATFORM_LINUX	./glm/simd/platform.h	/^#define GLM_PLATFORM_LINUX	/;"	d
GLM_PLATFORM_QNXNTO	./glm/simd/platform.h	/^#define GLM_PLATFORM_QNXNTO	/;"	d
GLM_PLATFORM_UNIX	./glm/simd/platform.h	/^#define GLM_PLATFORM_UNIX	/;"	d
GLM_PLATFORM_UNKNOWN	./glm/simd/platform.h	/^#define GLM_PLATFORM_UNKNOWN	/;"	d
GLM_PLATFORM_WINCE	./glm/simd/platform.h	/^#define GLM_PLATFORM_WINCE	/;"	d
GLM_PLATFORM_WINDOWS	./glm/simd/platform.h	/^#define GLM_PLATFORM_WINDOWS	/;"	d
GLM_SETUP_INCLUDED	./glm/detail/setup.hpp	/^#define GLM_SETUP_INCLUDED /;"	d
GLM_SET_FLOAT_WORD	./glm/ext/scalar_ulp.inl	/^#define GLM_SET_FLOAT_WORD(/;"	d	file:
GLM_SILENT_WARNINGS	./glm/detail/setup.hpp	/^#	define GLM_SILENT_WARNINGS /;"	d
GLM_STATIC_ASSERT	./glm/detail/setup.hpp	/^#	define GLM_STATIC_ASSERT(/;"	d
GLM_STR	./glm/detail/setup.hpp	/^#		define GLM_STR(x) GLM_STR_/;"	d
GLM_STR_HELPER	./glm/detail/setup.hpp	/^#		define GLM_STR_HELPER(/;"	d
GLM_SWIZZLE2_2_MEMBERS	./glm/detail/_swizzle.hpp	/^#define GLM_SWIZZLE2_2_MEMBERS(/;"	d
GLM_SWIZZLE2_3_MEMBERS	./glm/detail/_swizzle.hpp	/^#define GLM_SWIZZLE2_3_MEMBERS(/;"	d
GLM_SWIZZLE2_4_MEMBERS	./glm/detail/_swizzle.hpp	/^#define GLM_SWIZZLE2_4_MEMBERS(/;"	d
GLM_SWIZZLE3_2_MEMBERS	./glm/detail/_swizzle.hpp	/^#define GLM_SWIZZLE3_2_MEMBERS(/;"	d
GLM_SWIZZLE3_3_MEMBERS	./glm/detail/_swizzle.hpp	/^#define GLM_SWIZZLE3_3_MEMBERS(/;"	d
GLM_SWIZZLE3_4_MEMBERS	./glm/detail/_swizzle.hpp	/^#define GLM_SWIZZLE3_4_MEMBERS(/;"	d
GLM_SWIZZLE4_2_MEMBERS	./glm/detail/_swizzle.hpp	/^#define GLM_SWIZZLE4_2_MEMBERS(/;"	d
GLM_SWIZZLE4_3_MEMBERS	./glm/detail/_swizzle.hpp	/^#define GLM_SWIZZLE4_3_MEMBERS(/;"	d
GLM_SWIZZLE4_4_MEMBERS	./glm/detail/_swizzle.hpp	/^#define GLM_SWIZZLE4_4_MEMBERS(/;"	d
GLM_SWIZZLE_DISABLED	./glm/detail/setup.hpp	/^#define GLM_SWIZZLE_DISABLED	/;"	d
GLM_SWIZZLE_FUNCTION	./glm/detail/setup.hpp	/^#define GLM_SWIZZLE_FUNCTION	/;"	d
GLM_SWIZZLE_FUNCTION_1_ARGS	./glm/detail/_swizzle.hpp	/^#define GLM_SWIZZLE_FUNCTION_1_ARGS(/;"	d
GLM_SWIZZLE_FUNCTION_2_ARGS	./glm/detail/_swizzle.hpp	/^#define GLM_SWIZZLE_FUNCTION_2_ARGS(/;"	d
GLM_SWIZZLE_FUNCTION_2_ARGS_SCALAR	./glm/detail/_swizzle.hpp	/^#define GLM_SWIZZLE_FUNCTION_2_ARGS_SCALAR(/;"	d
GLM_SWIZZLE_GEN_REF2_FROM_VEC2_SWIZZLE	./glm/detail/_swizzle_func.hpp	/^#define GLM_SWIZZLE_GEN_REF2_FROM_VEC2_SWIZZLE(/;"	d
GLM_SWIZZLE_GEN_REF2_FROM_VEC3_SWIZZLE	./glm/detail/_swizzle_func.hpp	/^#define GLM_SWIZZLE_GEN_REF2_FROM_VEC3_SWIZZLE(/;"	d
GLM_SWIZZLE_GEN_REF2_FROM_VEC4_SWIZZLE	./glm/detail/_swizzle_func.hpp	/^#define GLM_SWIZZLE_GEN_REF2_FROM_VEC4_SWIZZLE(/;"	d
GLM_SWIZZLE_GEN_REF3_FROM_VEC3_SWIZZLE	./glm/detail/_swizzle_func.hpp	/^#define GLM_SWIZZLE_GEN_REF3_FROM_VEC3_SWIZZLE(/;"	d
GLM_SWIZZLE_GEN_REF3_FROM_VEC4_SWIZZLE	./glm/detail/_swizzle_func.hpp	/^#define GLM_SWIZZLE_GEN_REF3_FROM_VEC4_SWIZZLE(/;"	d
GLM_SWIZZLE_GEN_REF4_FROM_VEC4_SWIZZLE	./glm/detail/_swizzle_func.hpp	/^#define GLM_SWIZZLE_GEN_REF4_FROM_VEC4_SWIZZLE(/;"	d
GLM_SWIZZLE_GEN_REF_FROM_VEC2	./glm/detail/_swizzle_func.hpp	/^#define GLM_SWIZZLE_GEN_REF_FROM_VEC2(/;"	d
GLM_SWIZZLE_GEN_REF_FROM_VEC3	./glm/detail/_swizzle_func.hpp	/^#define GLM_SWIZZLE_GEN_REF_FROM_VEC3(/;"	d
GLM_SWIZZLE_GEN_REF_FROM_VEC3_COMP	./glm/detail/_swizzle_func.hpp	/^#define GLM_SWIZZLE_GEN_REF_FROM_VEC3_COMP(/;"	d
GLM_SWIZZLE_GEN_REF_FROM_VEC4	./glm/detail/_swizzle_func.hpp	/^#define GLM_SWIZZLE_GEN_REF_FROM_VEC4(/;"	d
GLM_SWIZZLE_GEN_REF_FROM_VEC4_COMP	./glm/detail/_swizzle_func.hpp	/^#define GLM_SWIZZLE_GEN_REF_FROM_VEC4_COMP(/;"	d
GLM_SWIZZLE_GEN_VEC2_ENTRY	./glm/detail/_swizzle_func.hpp	/^#define GLM_SWIZZLE_GEN_VEC2_ENTRY(/;"	d
GLM_SWIZZLE_GEN_VEC2_ENTRY_DEF	./glm/detail/_swizzle_func.hpp	/^#define GLM_SWIZZLE_GEN_VEC2_ENTRY_DEF(/;"	d
GLM_SWIZZLE_GEN_VEC2_FROM_VEC2_SWIZZLE	./glm/detail/_swizzle_func.hpp	/^#define GLM_SWIZZLE_GEN_VEC2_FROM_VEC2_SWIZZLE(/;"	d
GLM_SWIZZLE_GEN_VEC2_FROM_VEC3_SWIZZLE	./glm/detail/_swizzle_func.hpp	/^#define GLM_SWIZZLE_GEN_VEC2_FROM_VEC3_SWIZZLE(/;"	d
GLM_SWIZZLE_GEN_VEC2_FROM_VEC4_SWIZZLE	./glm/detail/_swizzle_func.hpp	/^#define GLM_SWIZZLE_GEN_VEC2_FROM_VEC4_SWIZZLE(/;"	d
GLM_SWIZZLE_GEN_VEC3_ENTRY	./glm/detail/_swizzle_func.hpp	/^#define GLM_SWIZZLE_GEN_VEC3_ENTRY(/;"	d
GLM_SWIZZLE_GEN_VEC3_ENTRY_DEF	./glm/detail/_swizzle_func.hpp	/^#define GLM_SWIZZLE_GEN_VEC3_ENTRY_DEF(/;"	d
GLM_SWIZZLE_GEN_VEC3_FROM_VEC2_SWIZZLE	./glm/detail/_swizzle_func.hpp	/^#define GLM_SWIZZLE_GEN_VEC3_FROM_VEC2_SWIZZLE(/;"	d
GLM_SWIZZLE_GEN_VEC3_FROM_VEC3_SWIZZLE	./glm/detail/_swizzle_func.hpp	/^#define GLM_SWIZZLE_GEN_VEC3_FROM_VEC3_SWIZZLE(/;"	d
GLM_SWIZZLE_GEN_VEC3_FROM_VEC4_SWIZZLE	./glm/detail/_swizzle_func.hpp	/^#define GLM_SWIZZLE_GEN_VEC3_FROM_VEC4_SWIZZLE(/;"	d
GLM_SWIZZLE_GEN_VEC4_ENTRY	./glm/detail/_swizzle_func.hpp	/^#define GLM_SWIZZLE_GEN_VEC4_ENTRY(/;"	d
GLM_SWIZZLE_GEN_VEC4_ENTRY_DEF	./glm/detail/_swizzle_func.hpp	/^#define GLM_SWIZZLE_GEN_VEC4_ENTRY_DEF(/;"	d
GLM_SWIZZLE_GEN_VEC4_FROM_VEC2_SWIZZLE	./glm/detail/_swizzle_func.hpp	/^#define GLM_SWIZZLE_GEN_VEC4_FROM_VEC2_SWIZZLE(/;"	d
GLM_SWIZZLE_GEN_VEC4_FROM_VEC3_SWIZZLE	./glm/detail/_swizzle_func.hpp	/^#define GLM_SWIZZLE_GEN_VEC4_FROM_VEC3_SWIZZLE(/;"	d
GLM_SWIZZLE_GEN_VEC4_FROM_VEC4_SWIZZLE	./glm/detail/_swizzle_func.hpp	/^#define GLM_SWIZZLE_GEN_VEC4_FROM_VEC4_SWIZZLE(/;"	d
GLM_SWIZZLE_GEN_VEC_FROM_VEC2	./glm/detail/_swizzle_func.hpp	/^#define GLM_SWIZZLE_GEN_VEC_FROM_VEC2(/;"	d
GLM_SWIZZLE_GEN_VEC_FROM_VEC2_COMP	./glm/detail/_swizzle_func.hpp	/^#define GLM_SWIZZLE_GEN_VEC_FROM_VEC2_COMP(/;"	d
GLM_SWIZZLE_GEN_VEC_FROM_VEC3	./glm/detail/_swizzle_func.hpp	/^#define GLM_SWIZZLE_GEN_VEC_FROM_VEC3(/;"	d
GLM_SWIZZLE_GEN_VEC_FROM_VEC3_COMP	./glm/detail/_swizzle_func.hpp	/^#define GLM_SWIZZLE_GEN_VEC_FROM_VEC3_COMP(/;"	d
GLM_SWIZZLE_GEN_VEC_FROM_VEC4	./glm/detail/_swizzle_func.hpp	/^#define GLM_SWIZZLE_GEN_VEC_FROM_VEC4(/;"	d
GLM_SWIZZLE_GEN_VEC_FROM_VEC4_COMP	./glm/detail/_swizzle_func.hpp	/^#define GLM_SWIZZLE_GEN_VEC_FROM_VEC4_COMP(/;"	d
GLM_SWIZZLE_OPERATOR	./glm/detail/setup.hpp	/^#define GLM_SWIZZLE_OPERATOR	/;"	d
GLM_SWIZZLE_SCALAR_BINARY_OPERATOR_IMPLEMENTATION	./glm/detail/_swizzle.hpp	/^#define GLM_SWIZZLE_SCALAR_BINARY_OPERATOR_IMPLEMENTATION(/;"	d
GLM_SWIZZLE_TEMPLATE1	./glm/detail/_swizzle.hpp	/^#define GLM_SWIZZLE_TEMPLATE1 /;"	d
GLM_SWIZZLE_TEMPLATE2	./glm/detail/_swizzle.hpp	/^#define GLM_SWIZZLE_TEMPLATE2 /;"	d
GLM_SWIZZLE_TYPE1	./glm/detail/_swizzle.hpp	/^#define GLM_SWIZZLE_TYPE1 /;"	d
GLM_SWIZZLE_TYPE2	./glm/detail/_swizzle.hpp	/^#define GLM_SWIZZLE_TYPE2 /;"	d
GLM_SWIZZLE_VECTOR_BINARY_OPERATOR_IMPLEMENTATION	./glm/detail/_swizzle.hpp	/^#define GLM_SWIZZLE_VECTOR_BINARY_OPERATOR_IMPLEMENTATION(/;"	d
GLM_VERSION	./glm/detail/setup.hpp	/^#define GLM_VERSION /;"	d
GLM_VERSION_COMPLETE	./glm/detail/setup.hpp	/^#define GLM_VERSION_COMPLETE /;"	d
GLM_VERSION_MAJOR	./glm/detail/setup.hpp	/^#define GLM_VERSION_MAJOR /;"	d
GLM_VERSION_MESSAGE	./glm/detail/setup.hpp	/^#define GLM_VERSION_MESSAGE /;"	d
GLM_VERSION_MINOR	./glm/detail/setup.hpp	/^#define GLM_VERSION_MINOR /;"	d
GLM_VERSION_PATCH	./glm/detail/setup.hpp	/^#define GLM_VERSION_PATCH /;"	d
GLM_VERSION_REVISION	./glm/detail/setup.hpp	/^#define GLM_VERSION_REVISION /;"	d
GLVULKANPROCNV	./GL/glew.h	/^typedef void (APIENTRY *GLVULKANPROCNV)(void);$/;"	t	typeref:typename:void (APIENTRY *)(void)
GLXBufferClobberEventSGIX	./GL/glxew.h	/^typedef struct { int type; unsigned long serial; Bool send_event; Display *display; GLXDrawable /;"	t	typeref:struct:__anonb1a929810608
GLXContext	./GL/glxew.h	/^typedef struct __GLXcontextRec *GLXContext;$/;"	t	typeref:struct:__GLXcontextRec *
GLXContext	./GL/glxew.h	/^typedef struct __glXContextRec *GLXContext;$/;"	t	typeref:struct:__glXContextRec *
GLXContextID	./GL/glxew.h	/^typedef XID GLXContextID;$/;"	t	typeref:typename:XID
GLXDrawable	./GL/glxew.h	/^typedef XID GLXDrawable;$/;"	t	typeref:typename:XID
GLXEW_3DFX_multisample	./GL/glxew.h	/^#define GLXEW_3DFX_multisample GLXEW_GET_VAR(__GLXEW_3DFX_multisample)/;"	d
GLXEW_AMD_gpu_association	./GL/glxew.h	/^#define GLXEW_AMD_gpu_association GLXEW_GET_VAR(__GLXEW_AMD_gpu_association)/;"	d
GLXEW_ARB_context_flush_control	./GL/glxew.h	/^#define GLXEW_ARB_context_flush_control GLXEW_GET_VAR(__GLXEW_ARB_context_flush_control)/;"	d
GLXEW_ARB_create_context	./GL/glxew.h	/^#define GLXEW_ARB_create_context GLXEW_GET_VAR(__GLXEW_ARB_create_context)/;"	d
GLXEW_ARB_create_context_no_error	./GL/glxew.h	/^#define GLXEW_ARB_create_context_no_error GLXEW_GET_VAR(__GLXEW_ARB_create_context_no_error)/;"	d
GLXEW_ARB_create_context_profile	./GL/glxew.h	/^#define GLXEW_ARB_create_context_profile GLXEW_GET_VAR(__GLXEW_ARB_create_context_profile)/;"	d
GLXEW_ARB_create_context_robustness	./GL/glxew.h	/^#define GLXEW_ARB_create_context_robustness GLXEW_GET_VAR(__GLXEW_ARB_create_context_robustness)/;"	d
GLXEW_ARB_fbconfig_float	./GL/glxew.h	/^#define GLXEW_ARB_fbconfig_float GLXEW_GET_VAR(__GLXEW_ARB_fbconfig_float)/;"	d
GLXEW_ARB_framebuffer_sRGB	./GL/glxew.h	/^#define GLXEW_ARB_framebuffer_sRGB GLXEW_GET_VAR(__GLXEW_ARB_framebuffer_sRGB)/;"	d
GLXEW_ARB_get_proc_address	./GL/glxew.h	/^#define GLXEW_ARB_get_proc_address GLXEW_GET_VAR(__GLXEW_ARB_get_proc_address)/;"	d
GLXEW_ARB_multisample	./GL/glxew.h	/^#define GLXEW_ARB_multisample GLXEW_GET_VAR(__GLXEW_ARB_multisample)/;"	d
GLXEW_ARB_robustness_application_isolation	./GL/glxew.h	/^#define GLXEW_ARB_robustness_application_isolation GLXEW_GET_VAR(__GLXEW_ARB_robustness_applicat/;"	d
GLXEW_ARB_robustness_share_group_isolation	./GL/glxew.h	/^#define GLXEW_ARB_robustness_share_group_isolation GLXEW_GET_VAR(__GLXEW_ARB_robustness_share_gr/;"	d
GLXEW_ARB_vertex_buffer_object	./GL/glxew.h	/^#define GLXEW_ARB_vertex_buffer_object GLXEW_GET_VAR(__GLXEW_ARB_vertex_buffer_object)/;"	d
GLXEW_ATI_pixel_format_float	./GL/glxew.h	/^#define GLXEW_ATI_pixel_format_float GLXEW_GET_VAR(__GLXEW_ATI_pixel_format_float)/;"	d
GLXEW_ATI_render_texture	./GL/glxew.h	/^#define GLXEW_ATI_render_texture GLXEW_GET_VAR(__GLXEW_ATI_render_texture)/;"	d
GLXEW_EXT_buffer_age	./GL/glxew.h	/^#define GLXEW_EXT_buffer_age GLXEW_GET_VAR(__GLXEW_EXT_buffer_age)/;"	d
GLXEW_EXT_context_priority	./GL/glxew.h	/^#define GLXEW_EXT_context_priority GLXEW_GET_VAR(__GLXEW_EXT_context_priority)/;"	d
GLXEW_EXT_create_context_es2_profile	./GL/glxew.h	/^#define GLXEW_EXT_create_context_es2_profile GLXEW_GET_VAR(__GLXEW_EXT_create_context_es2_profil/;"	d
GLXEW_EXT_create_context_es_profile	./GL/glxew.h	/^#define GLXEW_EXT_create_context_es_profile GLXEW_GET_VAR(__GLXEW_EXT_create_context_es_profile)/;"	d
GLXEW_EXT_fbconfig_packed_float	./GL/glxew.h	/^#define GLXEW_EXT_fbconfig_packed_float GLXEW_GET_VAR(__GLXEW_EXT_fbconfig_packed_float)/;"	d
GLXEW_EXT_framebuffer_sRGB	./GL/glxew.h	/^#define GLXEW_EXT_framebuffer_sRGB GLXEW_GET_VAR(__GLXEW_EXT_framebuffer_sRGB)/;"	d
GLXEW_EXT_import_context	./GL/glxew.h	/^#define GLXEW_EXT_import_context GLXEW_GET_VAR(__GLXEW_EXT_import_context)/;"	d
GLXEW_EXT_libglvnd	./GL/glxew.h	/^#define GLXEW_EXT_libglvnd GLXEW_GET_VAR(__GLXEW_EXT_libglvnd)/;"	d
GLXEW_EXT_no_config_context	./GL/glxew.h	/^#define GLXEW_EXT_no_config_context GLXEW_GET_VAR(__GLXEW_EXT_no_config_context)/;"	d
GLXEW_EXT_scene_marker	./GL/glxew.h	/^#define GLXEW_EXT_scene_marker GLXEW_GET_VAR(__GLXEW_EXT_scene_marker)/;"	d
GLXEW_EXT_stereo_tree	./GL/glxew.h	/^#define GLXEW_EXT_stereo_tree GLXEW_GET_VAR(__GLXEW_EXT_stereo_tree)/;"	d
GLXEW_EXT_swap_control	./GL/glxew.h	/^#define GLXEW_EXT_swap_control GLXEW_GET_VAR(__GLXEW_EXT_swap_control)/;"	d
GLXEW_EXT_swap_control_tear	./GL/glxew.h	/^#define GLXEW_EXT_swap_control_tear GLXEW_GET_VAR(__GLXEW_EXT_swap_control_tear)/;"	d
GLXEW_EXT_texture_from_pixmap	./GL/glxew.h	/^#define GLXEW_EXT_texture_from_pixmap GLXEW_GET_VAR(__GLXEW_EXT_texture_from_pixmap)/;"	d
GLXEW_EXT_visual_info	./GL/glxew.h	/^#define GLXEW_EXT_visual_info GLXEW_GET_VAR(__GLXEW_EXT_visual_info)/;"	d
GLXEW_EXT_visual_rating	./GL/glxew.h	/^#define GLXEW_EXT_visual_rating GLXEW_GET_VAR(__GLXEW_EXT_visual_rating)/;"	d
GLXEW_FUN_EXPORT	./GL/glxew.h	/^#define GLXEW_FUN_EXPORT /;"	d
GLXEW_GET_FUN	./GL/glxew.h	/^#define GLXEW_GET_FUN(/;"	d
GLXEW_GET_VAR	./GL/glxew.h	/^#define GLXEW_GET_VAR(/;"	d
GLXEW_INTEL_swap_event	./GL/glxew.h	/^#define GLXEW_INTEL_swap_event GLXEW_GET_VAR(__GLXEW_INTEL_swap_event)/;"	d
GLXEW_MESA_agp_offset	./GL/glxew.h	/^#define GLXEW_MESA_agp_offset GLXEW_GET_VAR(__GLXEW_MESA_agp_offset)/;"	d
GLXEW_MESA_copy_sub_buffer	./GL/glxew.h	/^#define GLXEW_MESA_copy_sub_buffer GLXEW_GET_VAR(__GLXEW_MESA_copy_sub_buffer)/;"	d
GLXEW_MESA_pixmap_colormap	./GL/glxew.h	/^#define GLXEW_MESA_pixmap_colormap GLXEW_GET_VAR(__GLXEW_MESA_pixmap_colormap)/;"	d
GLXEW_MESA_query_renderer	./GL/glxew.h	/^#define GLXEW_MESA_query_renderer GLXEW_GET_VAR(__GLXEW_MESA_query_renderer)/;"	d
GLXEW_MESA_release_buffers	./GL/glxew.h	/^#define GLXEW_MESA_release_buffers GLXEW_GET_VAR(__GLXEW_MESA_release_buffers)/;"	d
GLXEW_MESA_set_3dfx_mode	./GL/glxew.h	/^#define GLXEW_MESA_set_3dfx_mode GLXEW_GET_VAR(__GLXEW_MESA_set_3dfx_mode)/;"	d
GLXEW_MESA_swap_control	./GL/glxew.h	/^#define GLXEW_MESA_swap_control GLXEW_GET_VAR(__GLXEW_MESA_swap_control)/;"	d
GLXEW_NV_copy_buffer	./GL/glxew.h	/^#define GLXEW_NV_copy_buffer GLXEW_GET_VAR(__GLXEW_NV_copy_buffer)/;"	d
GLXEW_NV_copy_image	./GL/glxew.h	/^#define GLXEW_NV_copy_image GLXEW_GET_VAR(__GLXEW_NV_copy_image)/;"	d
GLXEW_NV_delay_before_swap	./GL/glxew.h	/^#define GLXEW_NV_delay_before_swap GLXEW_GET_VAR(__GLXEW_NV_delay_before_swap)/;"	d
GLXEW_NV_float_buffer	./GL/glxew.h	/^#define GLXEW_NV_float_buffer GLXEW_GET_VAR(__GLXEW_NV_float_buffer)/;"	d
GLXEW_NV_multigpu_context	./GL/glxew.h	/^#define GLXEW_NV_multigpu_context GLXEW_GET_VAR(__GLXEW_NV_multigpu_context)/;"	d
GLXEW_NV_multisample_coverage	./GL/glxew.h	/^#define GLXEW_NV_multisample_coverage GLXEW_GET_VAR(__GLXEW_NV_multisample_coverage)/;"	d
GLXEW_NV_present_video	./GL/glxew.h	/^#define GLXEW_NV_present_video GLXEW_GET_VAR(__GLXEW_NV_present_video)/;"	d
GLXEW_NV_robustness_video_memory_purge	./GL/glxew.h	/^#define GLXEW_NV_robustness_video_memory_purge GLXEW_GET_VAR(__GLXEW_NV_robustness_video_memory_/;"	d
GLXEW_NV_swap_group	./GL/glxew.h	/^#define GLXEW_NV_swap_group GLXEW_GET_VAR(__GLXEW_NV_swap_group)/;"	d
GLXEW_NV_vertex_array_range	./GL/glxew.h	/^#define GLXEW_NV_vertex_array_range GLXEW_GET_VAR(__GLXEW_NV_vertex_array_range)/;"	d
GLXEW_NV_video_capture	./GL/glxew.h	/^#define GLXEW_NV_video_capture GLXEW_GET_VAR(__GLXEW_NV_video_capture)/;"	d
GLXEW_NV_video_out	./GL/glxew.h	/^#define GLXEW_NV_video_out GLXEW_GET_VAR(__GLXEW_NV_video_out)/;"	d
GLXEW_OML_swap_method	./GL/glxew.h	/^#define GLXEW_OML_swap_method GLXEW_GET_VAR(__GLXEW_OML_swap_method)/;"	d
GLXEW_OML_sync_control	./GL/glxew.h	/^#define GLXEW_OML_sync_control GLXEW_GET_VAR(__GLXEW_OML_sync_control)/;"	d
GLXEW_SGIS_blended_overlay	./GL/glxew.h	/^#define GLXEW_SGIS_blended_overlay GLXEW_GET_VAR(__GLXEW_SGIS_blended_overlay)/;"	d
GLXEW_SGIS_color_range	./GL/glxew.h	/^#define GLXEW_SGIS_color_range GLXEW_GET_VAR(__GLXEW_SGIS_color_range)/;"	d
GLXEW_SGIS_multisample	./GL/glxew.h	/^#define GLXEW_SGIS_multisample GLXEW_GET_VAR(__GLXEW_SGIS_multisample)/;"	d
GLXEW_SGIS_shared_multisample	./GL/glxew.h	/^#define GLXEW_SGIS_shared_multisample GLXEW_GET_VAR(__GLXEW_SGIS_shared_multisample)/;"	d
GLXEW_SGIX_fbconfig	./GL/glxew.h	/^#define GLXEW_SGIX_fbconfig GLXEW_GET_VAR(__GLXEW_SGIX_fbconfig)/;"	d
GLXEW_SGIX_hyperpipe	./GL/glxew.h	/^#define GLXEW_SGIX_hyperpipe GLXEW_GET_VAR(__GLXEW_SGIX_hyperpipe)/;"	d
GLXEW_SGIX_pbuffer	./GL/glxew.h	/^#define GLXEW_SGIX_pbuffer GLXEW_GET_VAR(__GLXEW_SGIX_pbuffer)/;"	d
GLXEW_SGIX_swap_barrier	./GL/glxew.h	/^#define GLXEW_SGIX_swap_barrier GLXEW_GET_VAR(__GLXEW_SGIX_swap_barrier)/;"	d
GLXEW_SGIX_swap_group	./GL/glxew.h	/^#define GLXEW_SGIX_swap_group GLXEW_GET_VAR(__GLXEW_SGIX_swap_group)/;"	d
GLXEW_SGIX_video_resize	./GL/glxew.h	/^#define GLXEW_SGIX_video_resize GLXEW_GET_VAR(__GLXEW_SGIX_video_resize)/;"	d
GLXEW_SGIX_visual_select_group	./GL/glxew.h	/^#define GLXEW_SGIX_visual_select_group GLXEW_GET_VAR(__GLXEW_SGIX_visual_select_group)/;"	d
GLXEW_SGI_cushion	./GL/glxew.h	/^#define GLXEW_SGI_cushion GLXEW_GET_VAR(__GLXEW_SGI_cushion)/;"	d
GLXEW_SGI_make_current_read	./GL/glxew.h	/^#define GLXEW_SGI_make_current_read GLXEW_GET_VAR(__GLXEW_SGI_make_current_read)/;"	d
GLXEW_SGI_swap_control	./GL/glxew.h	/^#define GLXEW_SGI_swap_control GLXEW_GET_VAR(__GLXEW_SGI_swap_control)/;"	d
GLXEW_SGI_video_sync	./GL/glxew.h	/^#define GLXEW_SGI_video_sync GLXEW_GET_VAR(__GLXEW_SGI_video_sync)/;"	d
GLXEW_SUN_get_transparent_index	./GL/glxew.h	/^#define GLXEW_SUN_get_transparent_index GLXEW_GET_VAR(__GLXEW_SUN_get_transparent_index)/;"	d
GLXEW_SUN_video_resize	./GL/glxew.h	/^#define GLXEW_SUN_video_resize GLXEW_GET_VAR(__GLXEW_SUN_video_resize)/;"	d
GLXEW_VAR_EXPORT	./GL/glxew.h	/^#define GLXEW_VAR_EXPORT /;"	d
GLXEW_VERSION_1_0	./GL/glxew.h	/^#define GLXEW_VERSION_1_0 GLXEW_GET_VAR(__GLXEW_VERSION_1_0)/;"	d
GLXEW_VERSION_1_1	./GL/glxew.h	/^#define GLXEW_VERSION_1_1 GLXEW_GET_VAR(__GLXEW_VERSION_1_1)/;"	d
GLXEW_VERSION_1_2	./GL/glxew.h	/^#define GLXEW_VERSION_1_2 GLXEW_GET_VAR(__GLXEW_VERSION_1_2)/;"	d
GLXEW_VERSION_1_3	./GL/glxew.h	/^#define GLXEW_VERSION_1_3 GLXEW_GET_VAR(__GLXEW_VERSION_1_3)/;"	d
GLXEW_VERSION_1_4	./GL/glxew.h	/^#define GLXEW_VERSION_1_4 GLXEW_GET_VAR(__GLXEW_VERSION_1_4)/;"	d
GLXEvent	./GL/glxew.h	/^} GLXEvent;$/;"	t	typeref:union:__GLXEvent
GLXFBConfig	./GL/glxew.h	/^typedef struct __GLXFBConfigRec *GLXFBConfig;$/;"	t	typeref:struct:__GLXFBConfigRec *
GLXFBConfigID	./GL/glxew.h	/^typedef XID GLXFBConfigID;$/;"	t	typeref:typename:XID
GLXFBConfigIDSGIX	./GL/glxew.h	/^typedef XID GLXFBConfigIDSGIX;$/;"	t	typeref:typename:XID
GLXFBConfigSGIX	./GL/glxew.h	/^typedef struct __GLXFBConfigRec *GLXFBConfigSGIX;$/;"	t	typeref:struct:__GLXFBConfigRec *
GLXHyperpipeConfigSGIX	./GL/glxew.h	/^} GLXHyperpipeConfigSGIX;$/;"	t	typeref:struct:__anonb1a929810408
GLXHyperpipeNetworkSGIX	./GL/glxew.h	/^} GLXHyperpipeNetworkSGIX;$/;"	t	typeref:struct:__anonb1a929810208
GLXPbuffer	./GL/glxew.h	/^typedef XID GLXPbuffer;$/;"	t	typeref:typename:XID
GLXPbufferClobberEvent	./GL/glxew.h	/^} GLXPbufferClobberEvent;$/;"	t	typeref:struct:__anonb1a929810108
GLXPbufferSGIX	./GL/glxew.h	/^typedef XID GLXPbufferSGIX;$/;"	t	typeref:typename:XID
GLXPipeRect	./GL/glxew.h	/^} GLXPipeRect;$/;"	t	typeref:struct:__anonb1a929810508
GLXPipeRectLimits	./GL/glxew.h	/^} GLXPipeRectLimits;$/;"	t	typeref:struct:__anonb1a929810308
GLXPixmap	./GL/glxew.h	/^typedef XID GLXPixmap;$/;"	t	typeref:typename:XID
GLXVideoCaptureDeviceNV	./GL/glxew.h	/^typedef XID GLXVideoCaptureDeviceNV;$/;"	t	typeref:typename:XID
GLXVideoDeviceNV	./GL/glxew.h	/^typedef unsigned int GLXVideoDeviceNV; $/;"	t	typeref:typename:unsigned int
GLXWindow	./GL/glxew.h	/^typedef XID GLXWindow;$/;"	t	typeref:typename:XID
GLX_3DFX_FULLSCREEN_MODE_MESA	./GL/glxew.h	/^#define GLX_3DFX_FULLSCREEN_MODE_MESA /;"	d
GLX_3DFX_WINDOW_MODE_MESA	./GL/glxew.h	/^#define GLX_3DFX_WINDOW_MODE_MESA /;"	d
GLX_3DFX_multisample	./GL/glxew.h	/^#define GLX_3DFX_multisample /;"	d
GLX_ACCUM_ALPHA_SIZE	./GL/glxew.h	/^#define GLX_ACCUM_ALPHA_SIZE /;"	d
GLX_ACCUM_BLUE_SIZE	./GL/glxew.h	/^#define GLX_ACCUM_BLUE_SIZE /;"	d
GLX_ACCUM_BUFFER_BIT	./GL/glxew.h	/^#define GLX_ACCUM_BUFFER_BIT /;"	d
GLX_ACCUM_BUFFER_BIT_SGIX	./GL/glxew.h	/^#define GLX_ACCUM_BUFFER_BIT_SGIX /;"	d
GLX_ACCUM_GREEN_SIZE	./GL/glxew.h	/^#define GLX_ACCUM_GREEN_SIZE /;"	d
GLX_ACCUM_RED_SIZE	./GL/glxew.h	/^#define GLX_ACCUM_RED_SIZE /;"	d
GLX_ALPHA_SIZE	./GL/glxew.h	/^#define GLX_ALPHA_SIZE /;"	d
GLX_AMD_gpu_association	./GL/glxew.h	/^#define GLX_AMD_gpu_association /;"	d
GLX_ARB_context_flush_control	./GL/glxew.h	/^#define GLX_ARB_context_flush_control /;"	d
GLX_ARB_create_context	./GL/glxew.h	/^#define GLX_ARB_create_context /;"	d
GLX_ARB_create_context_no_error	./GL/glxew.h	/^#define GLX_ARB_create_context_no_error /;"	d
GLX_ARB_create_context_profile	./GL/glxew.h	/^#define GLX_ARB_create_context_profile /;"	d
GLX_ARB_create_context_robustness	./GL/glxew.h	/^#define GLX_ARB_create_context_robustness /;"	d
GLX_ARB_fbconfig_float	./GL/glxew.h	/^#define GLX_ARB_fbconfig_float /;"	d
GLX_ARB_framebuffer_sRGB	./GL/glxew.h	/^#define GLX_ARB_framebuffer_sRGB /;"	d
GLX_ARB_get_proc_address	./GL/glxew.h	/^#define GLX_ARB_get_proc_address /;"	d
GLX_ARB_multisample	./GL/glxew.h	/^#define GLX_ARB_multisample /;"	d
GLX_ARB_robustness_application_isolation	./GL/glxew.h	/^#define GLX_ARB_robustness_application_isolation /;"	d
GLX_ARB_robustness_share_group_isolation	./GL/glxew.h	/^#define GLX_ARB_robustness_share_group_isolation /;"	d
GLX_ARB_vertex_buffer_object	./GL/glxew.h	/^#define GLX_ARB_vertex_buffer_object /;"	d
GLX_ATI_pixel_format_float	./GL/glxew.h	/^#define GLX_ATI_pixel_format_float /;"	d
GLX_ATI_render_texture	./GL/glxew.h	/^#define GLX_ATI_render_texture /;"	d
GLX_AUX0_ATI	./GL/glxew.h	/^#define GLX_AUX0_ATI /;"	d
GLX_AUX0_EXT	./GL/glxew.h	/^#define GLX_AUX0_EXT /;"	d
GLX_AUX1_ATI	./GL/glxew.h	/^#define GLX_AUX1_ATI /;"	d
GLX_AUX1_EXT	./GL/glxew.h	/^#define GLX_AUX1_EXT /;"	d
GLX_AUX2_ATI	./GL/glxew.h	/^#define GLX_AUX2_ATI /;"	d
GLX_AUX2_EXT	./GL/glxew.h	/^#define GLX_AUX2_EXT /;"	d
GLX_AUX3_ATI	./GL/glxew.h	/^#define GLX_AUX3_ATI /;"	d
GLX_AUX3_EXT	./GL/glxew.h	/^#define GLX_AUX3_EXT /;"	d
GLX_AUX4_ATI	./GL/glxew.h	/^#define GLX_AUX4_ATI /;"	d
GLX_AUX4_EXT	./GL/glxew.h	/^#define GLX_AUX4_EXT /;"	d
GLX_AUX5_ATI	./GL/glxew.h	/^#define GLX_AUX5_ATI /;"	d
GLX_AUX5_EXT	./GL/glxew.h	/^#define GLX_AUX5_EXT /;"	d
GLX_AUX6_ATI	./GL/glxew.h	/^#define GLX_AUX6_ATI /;"	d
GLX_AUX6_EXT	./GL/glxew.h	/^#define GLX_AUX6_EXT /;"	d
GLX_AUX7_ATI	./GL/glxew.h	/^#define GLX_AUX7_ATI /;"	d
GLX_AUX7_EXT	./GL/glxew.h	/^#define GLX_AUX7_EXT /;"	d
GLX_AUX8_ATI	./GL/glxew.h	/^#define GLX_AUX8_ATI /;"	d
GLX_AUX8_EXT	./GL/glxew.h	/^#define GLX_AUX8_EXT /;"	d
GLX_AUX9_ATI	./GL/glxew.h	/^#define GLX_AUX9_ATI /;"	d
GLX_AUX9_EXT	./GL/glxew.h	/^#define GLX_AUX9_EXT /;"	d
GLX_AUX_BUFFERS	./GL/glxew.h	/^#define GLX_AUX_BUFFERS /;"	d
GLX_AUX_BUFFERS_BIT	./GL/glxew.h	/^#define GLX_AUX_BUFFERS_BIT /;"	d
GLX_AUX_BUFFERS_BIT_SGIX	./GL/glxew.h	/^#define GLX_AUX_BUFFERS_BIT_SGIX /;"	d
GLX_BACK_BUFFER_AGE_EXT	./GL/glxew.h	/^#define GLX_BACK_BUFFER_AGE_EXT /;"	d
GLX_BACK_EXT	./GL/glxew.h	/^#define GLX_BACK_EXT /;"	d
GLX_BACK_LEFT_ATI	./GL/glxew.h	/^#define GLX_BACK_LEFT_ATI /;"	d
GLX_BACK_LEFT_BUFFER_BIT	./GL/glxew.h	/^#define GLX_BACK_LEFT_BUFFER_BIT /;"	d
GLX_BACK_LEFT_BUFFER_BIT_SGIX	./GL/glxew.h	/^#define GLX_BACK_LEFT_BUFFER_BIT_SGIX /;"	d
GLX_BACK_LEFT_EXT	./GL/glxew.h	/^#define GLX_BACK_LEFT_EXT /;"	d
GLX_BACK_RIGHT_ATI	./GL/glxew.h	/^#define GLX_BACK_RIGHT_ATI /;"	d
GLX_BACK_RIGHT_BUFFER_BIT	./GL/glxew.h	/^#define GLX_BACK_RIGHT_BUFFER_BIT /;"	d
GLX_BACK_RIGHT_BUFFER_BIT_SGIX	./GL/glxew.h	/^#define GLX_BACK_RIGHT_BUFFER_BIT_SGIX /;"	d
GLX_BACK_RIGHT_EXT	./GL/glxew.h	/^#define GLX_BACK_RIGHT_EXT /;"	d
GLX_BAD_ATTRIBUTE	./GL/glxew.h	/^#define GLX_BAD_ATTRIBUTE /;"	d
GLX_BAD_CONTEXT	./GL/glxew.h	/^#define GLX_BAD_CONTEXT /;"	d
GLX_BAD_ENUM	./GL/glxew.h	/^#define GLX_BAD_ENUM /;"	d
GLX_BAD_HYPERPIPE_CONFIG_SGIX	./GL/glxew.h	/^#define GLX_BAD_HYPERPIPE_CONFIG_SGIX /;"	d
GLX_BAD_HYPERPIPE_SGIX	./GL/glxew.h	/^#define GLX_BAD_HYPERPIPE_SGIX /;"	d
GLX_BAD_SCREEN	./GL/glxew.h	/^#define GLX_BAD_SCREEN /;"	d
GLX_BAD_VALUE	./GL/glxew.h	/^#define GLX_BAD_VALUE /;"	d
GLX_BAD_VISUAL	./GL/glxew.h	/^#define GLX_BAD_VISUAL /;"	d
GLX_BIND_TO_MIPMAP_TEXTURE_EXT	./GL/glxew.h	/^#define GLX_BIND_TO_MIPMAP_TEXTURE_EXT /;"	d
GLX_BIND_TO_TEXTURE_INTENSITY_ATI	./GL/glxew.h	/^#define GLX_BIND_TO_TEXTURE_INTENSITY_ATI /;"	d
GLX_BIND_TO_TEXTURE_LUMINANCE_ATI	./GL/glxew.h	/^#define GLX_BIND_TO_TEXTURE_LUMINANCE_ATI /;"	d
GLX_BIND_TO_TEXTURE_RGBA_ATI	./GL/glxew.h	/^#define GLX_BIND_TO_TEXTURE_RGBA_ATI /;"	d
GLX_BIND_TO_TEXTURE_RGBA_EXT	./GL/glxew.h	/^#define GLX_BIND_TO_TEXTURE_RGBA_EXT /;"	d
GLX_BIND_TO_TEXTURE_RGB_ATI	./GL/glxew.h	/^#define GLX_BIND_TO_TEXTURE_RGB_ATI /;"	d
GLX_BIND_TO_TEXTURE_RGB_EXT	./GL/glxew.h	/^#define GLX_BIND_TO_TEXTURE_RGB_EXT /;"	d
GLX_BIND_TO_TEXTURE_TARGETS_EXT	./GL/glxew.h	/^#define GLX_BIND_TO_TEXTURE_TARGETS_EXT /;"	d
GLX_BLENDED_RGBA_SGIS	./GL/glxew.h	/^#define GLX_BLENDED_RGBA_SGIS /;"	d
GLX_BLUE_SIZE	./GL/glxew.h	/^#define GLX_BLUE_SIZE /;"	d
GLX_BUFFER_CLOBBER_MASK_SGIX	./GL/glxew.h	/^#define GLX_BUFFER_CLOBBER_MASK_SGIX /;"	d
GLX_BUFFER_SIZE	./GL/glxew.h	/^#define GLX_BUFFER_SIZE /;"	d
GLX_BUFFER_SWAP_COMPLETE_INTEL_MASK	./GL/glxew.h	/^#define GLX_BUFFER_SWAP_COMPLETE_INTEL_MASK /;"	d
GLX_COLOR_INDEX_BIT	./GL/glxew.h	/^#define GLX_COLOR_INDEX_BIT /;"	d
GLX_COLOR_INDEX_BIT_SGIX	./GL/glxew.h	/^#define GLX_COLOR_INDEX_BIT_SGIX /;"	d
GLX_COLOR_INDEX_TYPE	./GL/glxew.h	/^#define GLX_COLOR_INDEX_TYPE /;"	d
GLX_COLOR_INDEX_TYPE_SGIX	./GL/glxew.h	/^#define GLX_COLOR_INDEX_TYPE_SGIX /;"	d
GLX_COLOR_SAMPLES_NV	./GL/glxew.h	/^#define GLX_COLOR_SAMPLES_NV /;"	d
GLX_CONFIG_CAVEAT	./GL/glxew.h	/^#define GLX_CONFIG_CAVEAT /;"	d
GLX_CONTEXT_ALLOW_BUFFER_BYTE_ORDER_MISMATCH_ARB	./GL/glxew.h	/^#define GLX_CONTEXT_ALLOW_BUFFER_BYTE_ORDER_MISMATCH_ARB /;"	d
GLX_CONTEXT_COMPATIBILITY_PROFILE_BIT_ARB	./GL/glxew.h	/^#define GLX_CONTEXT_COMPATIBILITY_PROFILE_BIT_ARB /;"	d
GLX_CONTEXT_CORE_PROFILE_BIT_ARB	./GL/glxew.h	/^#define GLX_CONTEXT_CORE_PROFILE_BIT_ARB /;"	d
GLX_CONTEXT_DEBUG_BIT_ARB	./GL/glxew.h	/^#define GLX_CONTEXT_DEBUG_BIT_ARB /;"	d
GLX_CONTEXT_ES2_PROFILE_BIT_EXT	./GL/glxew.h	/^#define GLX_CONTEXT_ES2_PROFILE_BIT_EXT /;"	d
GLX_CONTEXT_ES_PROFILE_BIT_EXT	./GL/glxew.h	/^#define GLX_CONTEXT_ES_PROFILE_BIT_EXT /;"	d
GLX_CONTEXT_FLAGS_ARB	./GL/glxew.h	/^#define GLX_CONTEXT_FLAGS_ARB /;"	d
GLX_CONTEXT_FORWARD_COMPATIBLE_BIT_ARB	./GL/glxew.h	/^#define GLX_CONTEXT_FORWARD_COMPATIBLE_BIT_ARB /;"	d
GLX_CONTEXT_MAJOR_VERSION_ARB	./GL/glxew.h	/^#define GLX_CONTEXT_MAJOR_VERSION_ARB /;"	d
GLX_CONTEXT_MINOR_VERSION_ARB	./GL/glxew.h	/^#define GLX_CONTEXT_MINOR_VERSION_ARB /;"	d
GLX_CONTEXT_MULTIGPU_ATTRIB_AFR_NV	./GL/glxew.h	/^#define GLX_CONTEXT_MULTIGPU_ATTRIB_AFR_NV /;"	d
GLX_CONTEXT_MULTIGPU_ATTRIB_MULTICAST_NV	./GL/glxew.h	/^#define GLX_CONTEXT_MULTIGPU_ATTRIB_MULTICAST_NV /;"	d
GLX_CONTEXT_MULTIGPU_ATTRIB_MULTI_DISPLAY_MULTICAST_NV	./GL/glxew.h	/^#define GLX_CONTEXT_MULTIGPU_ATTRIB_MULTI_DISPLAY_MULTICAST_NV /;"	d
GLX_CONTEXT_MULTIGPU_ATTRIB_NV	./GL/glxew.h	/^#define GLX_CONTEXT_MULTIGPU_ATTRIB_NV /;"	d
GLX_CONTEXT_MULTIGPU_ATTRIB_SINGLE_NV	./GL/glxew.h	/^#define GLX_CONTEXT_MULTIGPU_ATTRIB_SINGLE_NV /;"	d
GLX_CONTEXT_OPENGL_NO_ERROR_ARB	./GL/glxew.h	/^#define GLX_CONTEXT_OPENGL_NO_ERROR_ARB /;"	d
GLX_CONTEXT_PRIORITY_HIGH_EXT	./GL/glxew.h	/^#define GLX_CONTEXT_PRIORITY_HIGH_EXT /;"	d
GLX_CONTEXT_PRIORITY_LEVEL_EXT	./GL/glxew.h	/^#define GLX_CONTEXT_PRIORITY_LEVEL_EXT /;"	d
GLX_CONTEXT_PRIORITY_LOW_EXT	./GL/glxew.h	/^#define GLX_CONTEXT_PRIORITY_LOW_EXT /;"	d
GLX_CONTEXT_PRIORITY_MEDIUM_EXT	./GL/glxew.h	/^#define GLX_CONTEXT_PRIORITY_MEDIUM_EXT /;"	d
GLX_CONTEXT_PROFILE_MASK_ARB	./GL/glxew.h	/^#define GLX_CONTEXT_PROFILE_MASK_ARB /;"	d
GLX_CONTEXT_RELEASE_BEHAVIOR_ARB	./GL/glxew.h	/^#define GLX_CONTEXT_RELEASE_BEHAVIOR_ARB /;"	d
GLX_CONTEXT_RELEASE_BEHAVIOR_FLUSH_ARB	./GL/glxew.h	/^#define GLX_CONTEXT_RELEASE_BEHAVIOR_FLUSH_ARB /;"	d
GLX_CONTEXT_RELEASE_BEHAVIOR_NONE_ARB	./GL/glxew.h	/^#define GLX_CONTEXT_RELEASE_BEHAVIOR_NONE_ARB /;"	d
GLX_CONTEXT_RESET_ISOLATION_BIT_ARB	./GL/glxew.h	/^#define GLX_CONTEXT_RESET_ISOLATION_BIT_ARB /;"	d
GLX_CONTEXT_RESET_NOTIFICATION_STRATEGY_ARB	./GL/glxew.h	/^#define GLX_CONTEXT_RESET_NOTIFICATION_STRATEGY_ARB /;"	d
GLX_CONTEXT_ROBUST_ACCESS_BIT_ARB	./GL/glxew.h	/^#define GLX_CONTEXT_ROBUST_ACCESS_BIT_ARB /;"	d
GLX_COPY_COMPLETE_INTEL	./GL/glxew.h	/^#define GLX_COPY_COMPLETE_INTEL /;"	d
GLX_COVERAGE_SAMPLES_NV	./GL/glxew.h	/^#define GLX_COVERAGE_SAMPLES_NV /;"	d
GLX_CUBE_MAP_FACE_ATI	./GL/glxew.h	/^#define GLX_CUBE_MAP_FACE_ATI /;"	d
GLX_DAMAGED	./GL/glxew.h	/^#define GLX_DAMAGED /;"	d
GLX_DAMAGED_SGIX	./GL/glxew.h	/^#define GLX_DAMAGED_SGIX /;"	d
GLX_DEPTH_BUFFER_BIT	./GL/glxew.h	/^#define GLX_DEPTH_BUFFER_BIT /;"	d
GLX_DEPTH_BUFFER_BIT_SGIX	./GL/glxew.h	/^#define GLX_DEPTH_BUFFER_BIT_SGIX /;"	d
GLX_DEPTH_SIZE	./GL/glxew.h	/^#define GLX_DEPTH_SIZE /;"	d
GLX_DEVICE_ID_NV	./GL/glxew.h	/^#define GLX_DEVICE_ID_NV /;"	d
GLX_DIRECT_COLOR	./GL/glxew.h	/^#define GLX_DIRECT_COLOR /;"	d
GLX_DIRECT_COLOR_EXT	./GL/glxew.h	/^#define GLX_DIRECT_COLOR_EXT /;"	d
GLX_DONT_CARE	./GL/glxew.h	/^#define GLX_DONT_CARE /;"	d
GLX_DOUBLEBUFFER	./GL/glxew.h	/^#define GLX_DOUBLEBUFFER /;"	d
GLX_DRAWABLE_TYPE	./GL/glxew.h	/^#define GLX_DRAWABLE_TYPE /;"	d
GLX_DRAWABLE_TYPE_SGIX	./GL/glxew.h	/^#define GLX_DRAWABLE_TYPE_SGIX /;"	d
GLX_EVENT_MASK	./GL/glxew.h	/^#define GLX_EVENT_MASK /;"	d
GLX_EVENT_MASK_SGIX	./GL/glxew.h	/^#define GLX_EVENT_MASK_SGIX /;"	d
GLX_EXCHANGE_COMPLETE_INTEL	./GL/glxew.h	/^#define GLX_EXCHANGE_COMPLETE_INTEL /;"	d
GLX_EXTENSIONS	./GL/glxew.h	/^#define GLX_EXTENSIONS /;"	d
GLX_EXT_buffer_age	./GL/glxew.h	/^#define GLX_EXT_buffer_age /;"	d
GLX_EXT_context_priority	./GL/glxew.h	/^#define GLX_EXT_context_priority /;"	d
GLX_EXT_create_context_es2_profile	./GL/glxew.h	/^#define GLX_EXT_create_context_es2_profile /;"	d
GLX_EXT_create_context_es_profile	./GL/glxew.h	/^#define GLX_EXT_create_context_es_profile /;"	d
GLX_EXT_fbconfig_packed_float	./GL/glxew.h	/^#define GLX_EXT_fbconfig_packed_float /;"	d
GLX_EXT_framebuffer_sRGB	./GL/glxew.h	/^#define GLX_EXT_framebuffer_sRGB /;"	d
GLX_EXT_import_context	./GL/glxew.h	/^#define GLX_EXT_import_context /;"	d
GLX_EXT_libglvnd	./GL/glxew.h	/^#define GLX_EXT_libglvnd /;"	d
GLX_EXT_no_config_context	./GL/glxew.h	/^#define GLX_EXT_no_config_context /;"	d
GLX_EXT_scene_marker	./GL/glxew.h	/^#define GLX_EXT_scene_marker /;"	d
GLX_EXT_stereo_tree	./GL/glxew.h	/^#define GLX_EXT_stereo_tree /;"	d
GLX_EXT_swap_control	./GL/glxew.h	/^#define GLX_EXT_swap_control /;"	d
GLX_EXT_swap_control_tear	./GL/glxew.h	/^#define GLX_EXT_swap_control_tear /;"	d
GLX_EXT_texture_from_pixmap	./GL/glxew.h	/^#define GLX_EXT_texture_from_pixmap /;"	d
GLX_EXT_visual_info	./GL/glxew.h	/^#define GLX_EXT_visual_info /;"	d
GLX_EXT_visual_rating	./GL/glxew.h	/^#define GLX_EXT_visual_rating /;"	d
GLX_FBCONFIG_ID	./GL/glxew.h	/^#define GLX_FBCONFIG_ID /;"	d
GLX_FBCONFIG_ID_SGIX	./GL/glxew.h	/^#define GLX_FBCONFIG_ID_SGIX /;"	d
GLX_FLIP_COMPLETE_INTEL	./GL/glxew.h	/^#define GLX_FLIP_COMPLETE_INTEL /;"	d
GLX_FLOAT_COMPONENTS_NV	./GL/glxew.h	/^#define GLX_FLOAT_COMPONENTS_NV /;"	d
GLX_FRAMEBUFFER_SRGB_CAPABLE_ARB	./GL/glxew.h	/^#define GLX_FRAMEBUFFER_SRGB_CAPABLE_ARB /;"	d
GLX_FRAMEBUFFER_SRGB_CAPABLE_EXT	./GL/glxew.h	/^#define GLX_FRAMEBUFFER_SRGB_CAPABLE_EXT /;"	d
GLX_FRONT_EXT	./GL/glxew.h	/^#define GLX_FRONT_EXT /;"	d
GLX_FRONT_LEFT_ATI	./GL/glxew.h	/^#define GLX_FRONT_LEFT_ATI /;"	d
GLX_FRONT_LEFT_BUFFER_BIT	./GL/glxew.h	/^#define GLX_FRONT_LEFT_BUFFER_BIT /;"	d
GLX_FRONT_LEFT_BUFFER_BIT_SGIX	./GL/glxew.h	/^#define GLX_FRONT_LEFT_BUFFER_BIT_SGIX /;"	d
GLX_FRONT_LEFT_EXT	./GL/glxew.h	/^#define GLX_FRONT_LEFT_EXT /;"	d
GLX_FRONT_RIGHT_ATI	./GL/glxew.h	/^#define GLX_FRONT_RIGHT_ATI /;"	d
GLX_FRONT_RIGHT_BUFFER_BIT	./GL/glxew.h	/^#define GLX_FRONT_RIGHT_BUFFER_BIT /;"	d
GLX_FRONT_RIGHT_BUFFER_BIT_SGIX	./GL/glxew.h	/^#define GLX_FRONT_RIGHT_BUFFER_BIT_SGIX /;"	d
GLX_FRONT_RIGHT_EXT	./GL/glxew.h	/^#define GLX_FRONT_RIGHT_EXT /;"	d
GLX_GENERATE_RESET_ON_VIDEO_MEMORY_PURGE_NV	./GL/glxew.h	/^#define GLX_GENERATE_RESET_ON_VIDEO_MEMORY_PURGE_NV /;"	d
GLX_GPU_CLOCK_AMD	./GL/glxew.h	/^#define GLX_GPU_CLOCK_AMD /;"	d
GLX_GPU_FASTEST_TARGET_GPUS_AMD	./GL/glxew.h	/^#define GLX_GPU_FASTEST_TARGET_GPUS_AMD /;"	d
GLX_GPU_NUM_PIPES_AMD	./GL/glxew.h	/^#define GLX_GPU_NUM_PIPES_AMD /;"	d
GLX_GPU_NUM_RB_AMD	./GL/glxew.h	/^#define GLX_GPU_NUM_RB_AMD /;"	d
GLX_GPU_NUM_SIMD_AMD	./GL/glxew.h	/^#define GLX_GPU_NUM_SIMD_AMD /;"	d
GLX_GPU_NUM_SPI_AMD	./GL/glxew.h	/^#define GLX_GPU_NUM_SPI_AMD /;"	d
GLX_GPU_OPENGL_VERSION_STRING_AMD	./GL/glxew.h	/^#define GLX_GPU_OPENGL_VERSION_STRING_AMD /;"	d
GLX_GPU_RAM_AMD	./GL/glxew.h	/^#define GLX_GPU_RAM_AMD /;"	d
GLX_GPU_RENDERER_STRING_AMD	./GL/glxew.h	/^#define GLX_GPU_RENDERER_STRING_AMD /;"	d
GLX_GPU_VENDOR_AMD	./GL/glxew.h	/^#define GLX_GPU_VENDOR_AMD /;"	d
GLX_GRAY_SCALE	./GL/glxew.h	/^#define GLX_GRAY_SCALE /;"	d
GLX_GRAY_SCALE_EXT	./GL/glxew.h	/^#define GLX_GRAY_SCALE_EXT /;"	d
GLX_GREEN_SIZE	./GL/glxew.h	/^#define GLX_GREEN_SIZE /;"	d
GLX_H	./GL/glxew.h	/^#define GLX_H$/;"	d
GLX_HEIGHT	./GL/glxew.h	/^#define GLX_HEIGHT /;"	d
GLX_HEIGHT_SGIX	./GL/glxew.h	/^#define GLX_HEIGHT_SGIX /;"	d
GLX_HYPERPIPE_DISPLAY_PIPE_SGIX	./GL/glxew.h	/^#define GLX_HYPERPIPE_DISPLAY_PIPE_SGIX /;"	d
GLX_HYPERPIPE_ID_SGIX	./GL/glxew.h	/^#define GLX_HYPERPIPE_ID_SGIX /;"	d
GLX_HYPERPIPE_PIPE_NAME_LENGTH_SGIX	./GL/glxew.h	/^#define GLX_HYPERPIPE_PIPE_NAME_LENGTH_SGIX /;"	d
GLX_HYPERPIPE_PIXEL_AVERAGE_SGIX	./GL/glxew.h	/^#define GLX_HYPERPIPE_PIXEL_AVERAGE_SGIX /;"	d
GLX_HYPERPIPE_RENDER_PIPE_SGIX	./GL/glxew.h	/^#define GLX_HYPERPIPE_RENDER_PIPE_SGIX /;"	d
GLX_HYPERPIPE_STEREO_SGIX	./GL/glxew.h	/^#define GLX_HYPERPIPE_STEREO_SGIX /;"	d
GLX_INTEL_swap_event	./GL/glxew.h	/^#define GLX_INTEL_swap_event /;"	d
GLX_LARGEST_PBUFFER	./GL/glxew.h	/^#define GLX_LARGEST_PBUFFER /;"	d
GLX_LARGEST_PBUFFER_SGIX	./GL/glxew.h	/^#define GLX_LARGEST_PBUFFER_SGIX /;"	d
GLX_LATE_SWAPS_TEAR_EXT	./GL/glxew.h	/^#define GLX_LATE_SWAPS_TEAR_EXT /;"	d
GLX_LEVEL	./GL/glxew.h	/^#define GLX_LEVEL /;"	d
GLX_LOSE_CONTEXT_ON_RESET_ARB	./GL/glxew.h	/^#define GLX_LOSE_CONTEXT_ON_RESET_ARB /;"	d
GLX_MAX_PBUFFER_HEIGHT	./GL/glxew.h	/^#define GLX_MAX_PBUFFER_HEIGHT /;"	d
GLX_MAX_PBUFFER_HEIGHT_SGIX	./GL/glxew.h	/^#define GLX_MAX_PBUFFER_HEIGHT_SGIX /;"	d
GLX_MAX_PBUFFER_PIXELS	./GL/glxew.h	/^#define GLX_MAX_PBUFFER_PIXELS /;"	d
GLX_MAX_PBUFFER_PIXELS_SGIX	./GL/glxew.h	/^#define GLX_MAX_PBUFFER_PIXELS_SGIX /;"	d
GLX_MAX_PBUFFER_WIDTH	./GL/glxew.h	/^#define GLX_MAX_PBUFFER_WIDTH /;"	d
GLX_MAX_PBUFFER_WIDTH_SGIX	./GL/glxew.h	/^#define GLX_MAX_PBUFFER_WIDTH_SGIX /;"	d
GLX_MAX_SWAP_INTERVAL_EXT	./GL/glxew.h	/^#define GLX_MAX_SWAP_INTERVAL_EXT /;"	d
GLX_MESA_agp_offset	./GL/glxew.h	/^#define GLX_MESA_agp_offset /;"	d
GLX_MESA_copy_sub_buffer	./GL/glxew.h	/^#define GLX_MESA_copy_sub_buffer /;"	d
GLX_MESA_pixmap_colormap	./GL/glxew.h	/^#define GLX_MESA_pixmap_colormap /;"	d
GLX_MESA_query_renderer	./GL/glxew.h	/^#define GLX_MESA_query_renderer /;"	d
GLX_MESA_release_buffers	./GL/glxew.h	/^#define GLX_MESA_release_buffers /;"	d
GLX_MESA_set_3dfx_mode	./GL/glxew.h	/^#define GLX_MESA_set_3dfx_mode /;"	d
GLX_MESA_swap_control	./GL/glxew.h	/^#define GLX_MESA_swap_control /;"	d
GLX_MIPMAP_LEVEL_ATI	./GL/glxew.h	/^#define GLX_MIPMAP_LEVEL_ATI /;"	d
GLX_MIPMAP_TEXTURE_ATI	./GL/glxew.h	/^#define GLX_MIPMAP_TEXTURE_ATI /;"	d
GLX_MIPMAP_TEXTURE_EXT	./GL/glxew.h	/^#define GLX_MIPMAP_TEXTURE_EXT /;"	d
GLX_MULTISAMPLE_SUB_RECT_HEIGHT_SGIS	./GL/glxew.h	/^#define GLX_MULTISAMPLE_SUB_RECT_HEIGHT_SGIS /;"	d
GLX_MULTISAMPLE_SUB_RECT_WIDTH_SGIS	./GL/glxew.h	/^#define GLX_MULTISAMPLE_SUB_RECT_WIDTH_SGIS /;"	d
GLX_NONE	./GL/glxew.h	/^#define GLX_NONE /;"	d
GLX_NONE_EXT	./GL/glxew.h	/^#define GLX_NONE_EXT /;"	d
GLX_NON_CONFORMANT_CONFIG	./GL/glxew.h	/^#define GLX_NON_CONFORMANT_CONFIG /;"	d
GLX_NON_CONFORMANT_VISUAL_EXT	./GL/glxew.h	/^#define GLX_NON_CONFORMANT_VISUAL_EXT /;"	d
GLX_NO_EXTENSION	./GL/glxew.h	/^#define GLX_NO_EXTENSION /;"	d
GLX_NO_RESET_NOTIFICATION_ARB	./GL/glxew.h	/^#define GLX_NO_RESET_NOTIFICATION_ARB /;"	d
GLX_NO_TEXTURE_ATI	./GL/glxew.h	/^#define GLX_NO_TEXTURE_ATI /;"	d
GLX_NUM_VIDEO_CAPTURE_SLOTS_NV	./GL/glxew.h	/^#define GLX_NUM_VIDEO_CAPTURE_SLOTS_NV /;"	d
GLX_NUM_VIDEO_SLOTS_NV	./GL/glxew.h	/^#define GLX_NUM_VIDEO_SLOTS_NV /;"	d
GLX_NV_copy_buffer	./GL/glxew.h	/^#define GLX_NV_copy_buffer /;"	d
GLX_NV_copy_image	./GL/glxew.h	/^#define GLX_NV_copy_image /;"	d
GLX_NV_delay_before_swap	./GL/glxew.h	/^#define GLX_NV_delay_before_swap /;"	d
GLX_NV_float_buffer	./GL/glxew.h	/^#define GLX_NV_float_buffer /;"	d
GLX_NV_multigpu_context	./GL/glxew.h	/^#define GLX_NV_multigpu_context /;"	d
GLX_NV_multisample_coverage	./GL/glxew.h	/^#define GLX_NV_multisample_coverage /;"	d
GLX_NV_present_video	./GL/glxew.h	/^#define GLX_NV_present_video /;"	d
GLX_NV_robustness_video_memory_purge	./GL/glxew.h	/^#define GLX_NV_robustness_video_memory_purge /;"	d
GLX_NV_swap_group	./GL/glxew.h	/^#define GLX_NV_swap_group /;"	d
GLX_NV_vertex_array_range	./GL/glxew.h	/^#define GLX_NV_vertex_array_range /;"	d
GLX_NV_video_capture	./GL/glxew.h	/^#define GLX_NV_video_capture /;"	d
GLX_NV_video_out	./GL/glxew.h	/^#define GLX_NV_video_out /;"	d
GLX_OML_swap_method	./GL/glxew.h	/^#define GLX_OML_swap_method /;"	d
GLX_OML_sync_control	./GL/glxew.h	/^#define GLX_OML_sync_control /;"	d
GLX_OPTIMAL_PBUFFER_HEIGHT_SGIX	./GL/glxew.h	/^#define GLX_OPTIMAL_PBUFFER_HEIGHT_SGIX /;"	d
GLX_OPTIMAL_PBUFFER_WIDTH_SGIX	./GL/glxew.h	/^#define GLX_OPTIMAL_PBUFFER_WIDTH_SGIX /;"	d
GLX_PBUFFER	./GL/glxew.h	/^#define GLX_PBUFFER /;"	d
GLX_PBUFFER_BIT	./GL/glxew.h	/^#define GLX_PBUFFER_BIT /;"	d
GLX_PBUFFER_BIT_SGIX	./GL/glxew.h	/^#define GLX_PBUFFER_BIT_SGIX /;"	d
GLX_PBUFFER_CLOBBER_MASK	./GL/glxew.h	/^#define GLX_PBUFFER_CLOBBER_MASK /;"	d
GLX_PBUFFER_HEIGHT	./GL/glxew.h	/^#define GLX_PBUFFER_HEIGHT /;"	d
GLX_PBUFFER_SGIX	./GL/glxew.h	/^#define GLX_PBUFFER_SGIX /;"	d
GLX_PBUFFER_WIDTH	./GL/glxew.h	/^#define GLX_PBUFFER_WIDTH /;"	d
GLX_PIPE_RECT_LIMITS_SGIX	./GL/glxew.h	/^#define GLX_PIPE_RECT_LIMITS_SGIX /;"	d
GLX_PIPE_RECT_SGIX	./GL/glxew.h	/^#define GLX_PIPE_RECT_SGIX /;"	d
GLX_PIXMAP_BIT	./GL/glxew.h	/^#define GLX_PIXMAP_BIT /;"	d
GLX_PIXMAP_BIT_SGIX	./GL/glxew.h	/^#define GLX_PIXMAP_BIT_SGIX /;"	d
GLX_PRESERVED_CONTENTS	./GL/glxew.h	/^#define GLX_PRESERVED_CONTENTS /;"	d
GLX_PRESERVED_CONTENTS_SGIX	./GL/glxew.h	/^#define GLX_PRESERVED_CONTENTS_SGIX /;"	d
GLX_PSEUDO_COLOR	./GL/glxew.h	/^#define GLX_PSEUDO_COLOR /;"	d
GLX_PSEUDO_COLOR_EXT	./GL/glxew.h	/^#define GLX_PSEUDO_COLOR_EXT /;"	d
GLX_RED_SIZE	./GL/glxew.h	/^#define GLX_RED_SIZE /;"	d
GLX_RENDERER_ACCELERATED_MESA	./GL/glxew.h	/^#define GLX_RENDERER_ACCELERATED_MESA /;"	d
GLX_RENDERER_DEVICE_ID_MESA	./GL/glxew.h	/^#define GLX_RENDERER_DEVICE_ID_MESA /;"	d
GLX_RENDERER_OPENGL_COMPATIBILITY_PROFILE_VERSION_MESA	./GL/glxew.h	/^#define GLX_RENDERER_OPENGL_COMPATIBILITY_PROFILE_VERSION_MESA /;"	d
GLX_RENDERER_OPENGL_CORE_PROFILE_VERSION_MESA	./GL/glxew.h	/^#define GLX_RENDERER_OPENGL_CORE_PROFILE_VERSION_MESA /;"	d
GLX_RENDERER_OPENGL_ES2_PROFILE_VERSION_MESA	./GL/glxew.h	/^#define GLX_RENDERER_OPENGL_ES2_PROFILE_VERSION_MESA /;"	d
GLX_RENDERER_OPENGL_ES_PROFILE_VERSION_MESA	./GL/glxew.h	/^#define GLX_RENDERER_OPENGL_ES_PROFILE_VERSION_MESA /;"	d
GLX_RENDERER_PREFERRED_PROFILE_MESA	./GL/glxew.h	/^#define GLX_RENDERER_PREFERRED_PROFILE_MESA /;"	d
GLX_RENDERER_UNIFIED_MEMORY_ARCHITECTURE_MESA	./GL/glxew.h	/^#define GLX_RENDERER_UNIFIED_MEMORY_ARCHITECTURE_MESA /;"	d
GLX_RENDERER_VENDOR_ID_MESA	./GL/glxew.h	/^#define GLX_RENDERER_VENDOR_ID_MESA /;"	d
GLX_RENDERER_VERSION_MESA	./GL/glxew.h	/^#define GLX_RENDERER_VERSION_MESA /;"	d
GLX_RENDERER_VIDEO_MEMORY_MESA	./GL/glxew.h	/^#define GLX_RENDERER_VIDEO_MEMORY_MESA /;"	d
GLX_RENDER_TYPE	./GL/glxew.h	/^#define GLX_RENDER_TYPE /;"	d
GLX_RENDER_TYPE_SGIX	./GL/glxew.h	/^#define GLX_RENDER_TYPE_SGIX /;"	d
GLX_RGBA	./GL/glxew.h	/^#define GLX_RGBA /;"	d
GLX_RGBA_BIT	./GL/glxew.h	/^#define GLX_RGBA_BIT /;"	d
GLX_RGBA_BIT_SGIX	./GL/glxew.h	/^#define GLX_RGBA_BIT_SGIX /;"	d
GLX_RGBA_FLOAT_ATI_BIT	./GL/glxew.h	/^#define GLX_RGBA_FLOAT_ATI_BIT /;"	d
GLX_RGBA_FLOAT_BIT_ARB	./GL/glxew.h	/^#define GLX_RGBA_FLOAT_BIT_ARB /;"	d
GLX_RGBA_FLOAT_TYPE_ARB	./GL/glxew.h	/^#define GLX_RGBA_FLOAT_TYPE_ARB /;"	d
GLX_RGBA_TYPE	./GL/glxew.h	/^#define GLX_RGBA_TYPE /;"	d
GLX_RGBA_TYPE_SGIX	./GL/glxew.h	/^#define GLX_RGBA_TYPE_SGIX /;"	d
GLX_RGBA_UNSIGNED_FLOAT_BIT_EXT	./GL/glxew.h	/^#define GLX_RGBA_UNSIGNED_FLOAT_BIT_EXT /;"	d
GLX_RGBA_UNSIGNED_FLOAT_TYPE_EXT	./GL/glxew.h	/^#define GLX_RGBA_UNSIGNED_FLOAT_TYPE_EXT /;"	d
GLX_SAMPLES	./GL/glxew.h	/^#define GLX_SAMPLES /;"	d
GLX_SAMPLES_3DFX	./GL/glxew.h	/^#define GLX_SAMPLES_3DFX /;"	d
GLX_SAMPLES_ARB	./GL/glxew.h	/^#define GLX_SAMPLES_ARB /;"	d
GLX_SAMPLES_SGIS	./GL/glxew.h	/^#define GLX_SAMPLES_SGIS /;"	d
GLX_SAMPLE_BUFFERS	./GL/glxew.h	/^#define GLX_SAMPLE_BUFFERS /;"	d
GLX_SAMPLE_BUFFERS_3DFX	./GL/glxew.h	/^#define GLX_SAMPLE_BUFFERS_3DFX /;"	d
GLX_SAMPLE_BUFFERS_ARB	./GL/glxew.h	/^#define GLX_SAMPLE_BUFFERS_ARB /;"	d
GLX_SAMPLE_BUFFERS_BIT_SGIX	./GL/glxew.h	/^#define GLX_SAMPLE_BUFFERS_BIT_SGIX /;"	d
GLX_SAMPLE_BUFFERS_SGIS	./GL/glxew.h	/^#define GLX_SAMPLE_BUFFERS_SGIS /;"	d
GLX_SAVED	./GL/glxew.h	/^#define GLX_SAVED /;"	d
GLX_SAVED_SGIX	./GL/glxew.h	/^#define GLX_SAVED_SGIX /;"	d
GLX_SCREEN	./GL/glxew.h	/^#define GLX_SCREEN /;"	d
GLX_SCREEN_EXT	./GL/glxew.h	/^#define GLX_SCREEN_EXT /;"	d
GLX_SGIS_blended_overlay	./GL/glxew.h	/^#define GLX_SGIS_blended_overlay /;"	d
GLX_SGIS_color_range	./GL/glxew.h	/^#define GLX_SGIS_color_range /;"	d
GLX_SGIS_multisample	./GL/glxew.h	/^#define GLX_SGIS_multisample /;"	d
GLX_SGIS_shared_multisample	./GL/glxew.h	/^#define GLX_SGIS_shared_multisample /;"	d
GLX_SGIX_fbconfig	./GL/glxew.h	/^#define GLX_SGIX_fbconfig /;"	d
GLX_SGIX_hyperpipe	./GL/glxew.h	/^#define GLX_SGIX_hyperpipe /;"	d
GLX_SGIX_pbuffer	./GL/glxew.h	/^#define GLX_SGIX_pbuffer /;"	d
GLX_SGIX_swap_barrier	./GL/glxew.h	/^#define GLX_SGIX_swap_barrier /;"	d
GLX_SGIX_swap_group	./GL/glxew.h	/^#define GLX_SGIX_swap_group /;"	d
GLX_SGIX_video_resize	./GL/glxew.h	/^#define GLX_SGIX_video_resize /;"	d
GLX_SGIX_visual_select_group	./GL/glxew.h	/^#define GLX_SGIX_visual_select_group /;"	d
GLX_SGI_cushion	./GL/glxew.h	/^#define GLX_SGI_cushion /;"	d
GLX_SGI_make_current_read	./GL/glxew.h	/^#define GLX_SGI_make_current_read /;"	d
GLX_SGI_swap_control	./GL/glxew.h	/^#define GLX_SGI_swap_control /;"	d
GLX_SGI_video_sync	./GL/glxew.h	/^#define GLX_SGI_video_sync /;"	d
GLX_SHARE_CONTEXT_EXT	./GL/glxew.h	/^#define GLX_SHARE_CONTEXT_EXT /;"	d
GLX_SLOW_CONFIG	./GL/glxew.h	/^#define GLX_SLOW_CONFIG /;"	d
GLX_SLOW_VISUAL_EXT	./GL/glxew.h	/^#define GLX_SLOW_VISUAL_EXT /;"	d
GLX_STATIC_COLOR	./GL/glxew.h	/^#define GLX_STATIC_COLOR /;"	d
GLX_STATIC_COLOR_EXT	./GL/glxew.h	/^#define GLX_STATIC_COLOR_EXT /;"	d
GLX_STATIC_GRAY	./GL/glxew.h	/^#define GLX_STATIC_GRAY /;"	d
GLX_STATIC_GRAY_EXT	./GL/glxew.h	/^#define GLX_STATIC_GRAY_EXT /;"	d
GLX_STENCIL_BUFFER_BIT	./GL/glxew.h	/^#define GLX_STENCIL_BUFFER_BIT /;"	d
GLX_STENCIL_BUFFER_BIT_SGIX	./GL/glxew.h	/^#define GLX_STENCIL_BUFFER_BIT_SGIX /;"	d
GLX_STENCIL_SIZE	./GL/glxew.h	/^#define GLX_STENCIL_SIZE /;"	d
GLX_STEREO	./GL/glxew.h	/^#define GLX_STEREO /;"	d
GLX_STEREO_NOTIFY_EXT	./GL/glxew.h	/^#define GLX_STEREO_NOTIFY_EXT /;"	d
GLX_STEREO_NOTIFY_MASK_EXT	./GL/glxew.h	/^#define GLX_STEREO_NOTIFY_MASK_EXT /;"	d
GLX_STEREO_TREE_EXT	./GL/glxew.h	/^#define GLX_STEREO_TREE_EXT /;"	d
GLX_SUN_get_transparent_index	./GL/glxew.h	/^#define GLX_SUN_get_transparent_index /;"	d
GLX_SUN_video_resize	./GL/glxew.h	/^#define GLX_SUN_video_resize /;"	d
GLX_SWAP_COPY_OML	./GL/glxew.h	/^#define GLX_SWAP_COPY_OML /;"	d
GLX_SWAP_EXCHANGE_OML	./GL/glxew.h	/^#define GLX_SWAP_EXCHANGE_OML /;"	d
GLX_SWAP_INTERVAL_EXT	./GL/glxew.h	/^#define GLX_SWAP_INTERVAL_EXT /;"	d
GLX_SWAP_METHOD_OML	./GL/glxew.h	/^#define GLX_SWAP_METHOD_OML /;"	d
GLX_SWAP_UNDEFINED_OML	./GL/glxew.h	/^#define GLX_SWAP_UNDEFINED_OML /;"	d
GLX_SYNC_FRAME_SGIX	./GL/glxew.h	/^#define GLX_SYNC_FRAME_SGIX /;"	d
GLX_SYNC_SWAP_SGIX	./GL/glxew.h	/^#define GLX_SYNC_SWAP_SGIX /;"	d
GLX_TEXTURE_1D_ATI	./GL/glxew.h	/^#define GLX_TEXTURE_1D_ATI /;"	d
GLX_TEXTURE_1D_BIT_EXT	./GL/glxew.h	/^#define GLX_TEXTURE_1D_BIT_EXT /;"	d
GLX_TEXTURE_1D_EXT	./GL/glxew.h	/^#define GLX_TEXTURE_1D_EXT /;"	d
GLX_TEXTURE_2D_ATI	./GL/glxew.h	/^#define GLX_TEXTURE_2D_ATI /;"	d
GLX_TEXTURE_2D_BIT_EXT	./GL/glxew.h	/^#define GLX_TEXTURE_2D_BIT_EXT /;"	d
GLX_TEXTURE_2D_EXT	./GL/glxew.h	/^#define GLX_TEXTURE_2D_EXT /;"	d
GLX_TEXTURE_CUBE_MAP_ATI	./GL/glxew.h	/^#define GLX_TEXTURE_CUBE_MAP_ATI /;"	d
GLX_TEXTURE_CUBE_MAP_NEGATIVE_X_ATI	./GL/glxew.h	/^#define GLX_TEXTURE_CUBE_MAP_NEGATIVE_X_ATI /;"	d
GLX_TEXTURE_CUBE_MAP_NEGATIVE_Y_ATI	./GL/glxew.h	/^#define GLX_TEXTURE_CUBE_MAP_NEGATIVE_Y_ATI /;"	d
GLX_TEXTURE_CUBE_MAP_NEGATIVE_Z_ATI	./GL/glxew.h	/^#define GLX_TEXTURE_CUBE_MAP_NEGATIVE_Z_ATI /;"	d
GLX_TEXTURE_CUBE_MAP_POSITIVE_X_ATI	./GL/glxew.h	/^#define GLX_TEXTURE_CUBE_MAP_POSITIVE_X_ATI /;"	d
GLX_TEXTURE_CUBE_MAP_POSITIVE_Y_ATI	./GL/glxew.h	/^#define GLX_TEXTURE_CUBE_MAP_POSITIVE_Y_ATI /;"	d
GLX_TEXTURE_CUBE_MAP_POSITIVE_Z_ATI	./GL/glxew.h	/^#define GLX_TEXTURE_CUBE_MAP_POSITIVE_Z_ATI /;"	d
GLX_TEXTURE_FORMAT_ATI	./GL/glxew.h	/^#define GLX_TEXTURE_FORMAT_ATI /;"	d
GLX_TEXTURE_FORMAT_EXT	./GL/glxew.h	/^#define GLX_TEXTURE_FORMAT_EXT /;"	d
GLX_TEXTURE_FORMAT_NONE_EXT	./GL/glxew.h	/^#define GLX_TEXTURE_FORMAT_NONE_EXT /;"	d
GLX_TEXTURE_FORMAT_RGBA_EXT	./GL/glxew.h	/^#define GLX_TEXTURE_FORMAT_RGBA_EXT /;"	d
GLX_TEXTURE_FORMAT_RGB_EXT	./GL/glxew.h	/^#define GLX_TEXTURE_FORMAT_RGB_EXT /;"	d
GLX_TEXTURE_RECTANGLE_BIT_EXT	./GL/glxew.h	/^#define GLX_TEXTURE_RECTANGLE_BIT_EXT /;"	d
GLX_TEXTURE_RECTANGLE_EXT	./GL/glxew.h	/^#define GLX_TEXTURE_RECTANGLE_EXT /;"	d
GLX_TEXTURE_RGBA_ATI	./GL/glxew.h	/^#define GLX_TEXTURE_RGBA_ATI /;"	d
GLX_TEXTURE_RGB_ATI	./GL/glxew.h	/^#define GLX_TEXTURE_RGB_ATI /;"	d
GLX_TEXTURE_TARGET_ATI	./GL/glxew.h	/^#define GLX_TEXTURE_TARGET_ATI /;"	d
GLX_TEXTURE_TARGET_EXT	./GL/glxew.h	/^#define GLX_TEXTURE_TARGET_EXT /;"	d
GLX_TRANSPARENT_ALPHA_VALUE	./GL/glxew.h	/^#define GLX_TRANSPARENT_ALPHA_VALUE /;"	d
GLX_TRANSPARENT_ALPHA_VALUE_EXT	./GL/glxew.h	/^#define GLX_TRANSPARENT_ALPHA_VALUE_EXT /;"	d
GLX_TRANSPARENT_BLUE_VALUE	./GL/glxew.h	/^#define GLX_TRANSPARENT_BLUE_VALUE /;"	d
GLX_TRANSPARENT_BLUE_VALUE_EXT	./GL/glxew.h	/^#define GLX_TRANSPARENT_BLUE_VALUE_EXT /;"	d
GLX_TRANSPARENT_GREEN_VALUE	./GL/glxew.h	/^#define GLX_TRANSPARENT_GREEN_VALUE /;"	d
GLX_TRANSPARENT_GREEN_VALUE_EXT	./GL/glxew.h	/^#define GLX_TRANSPARENT_GREEN_VALUE_EXT /;"	d
GLX_TRANSPARENT_INDEX	./GL/glxew.h	/^#define GLX_TRANSPARENT_INDEX /;"	d
GLX_TRANSPARENT_INDEX_EXT	./GL/glxew.h	/^#define GLX_TRANSPARENT_INDEX_EXT /;"	d
GLX_TRANSPARENT_INDEX_VALUE	./GL/glxew.h	/^#define GLX_TRANSPARENT_INDEX_VALUE /;"	d
GLX_TRANSPARENT_INDEX_VALUE_EXT	./GL/glxew.h	/^#define GLX_TRANSPARENT_INDEX_VALUE_EXT /;"	d
GLX_TRANSPARENT_RED_VALUE	./GL/glxew.h	/^#define GLX_TRANSPARENT_RED_VALUE /;"	d
GLX_TRANSPARENT_RED_VALUE_EXT	./GL/glxew.h	/^#define GLX_TRANSPARENT_RED_VALUE_EXT /;"	d
GLX_TRANSPARENT_RGB	./GL/glxew.h	/^#define GLX_TRANSPARENT_RGB /;"	d
GLX_TRANSPARENT_RGB_EXT	./GL/glxew.h	/^#define GLX_TRANSPARENT_RGB_EXT /;"	d
GLX_TRANSPARENT_TYPE	./GL/glxew.h	/^#define GLX_TRANSPARENT_TYPE /;"	d
GLX_TRANSPARENT_TYPE_EXT	./GL/glxew.h	/^#define GLX_TRANSPARENT_TYPE_EXT /;"	d
GLX_TRUE_COLOR	./GL/glxew.h	/^#define GLX_TRUE_COLOR /;"	d
GLX_TRUE_COLOR_EXT	./GL/glxew.h	/^#define GLX_TRUE_COLOR_EXT /;"	d
GLX_UNIQUE_ID_NV	./GL/glxew.h	/^#define GLX_UNIQUE_ID_NV /;"	d
GLX_USE_GL	./GL/glxew.h	/^#define GLX_USE_GL /;"	d
GLX_VENDOR	./GL/glxew.h	/^#define GLX_VENDOR /;"	d
GLX_VENDOR_NAMES_EXT	./GL/glxew.h	/^#define GLX_VENDOR_NAMES_EXT /;"	d
GLX_VERSION	./GL/glxew.h	/^#define GLX_VERSION /;"	d
GLX_VERSION_1_0	./GL/glxew.h	/^#define GLX_VERSION_1_0 /;"	d
GLX_VERSION_1_1	./GL/glxew.h	/^#define GLX_VERSION_1_1$/;"	d
GLX_VERSION_1_2	./GL/glxew.h	/^#define GLX_VERSION_1_2 /;"	d
GLX_VERSION_1_3	./GL/glxew.h	/^#define GLX_VERSION_1_3 /;"	d
GLX_VERSION_1_4	./GL/glxew.h	/^#define GLX_VERSION_1_4 /;"	d
GLX_VIDEO_OUT_ALPHA_NV	./GL/glxew.h	/^#define GLX_VIDEO_OUT_ALPHA_NV /;"	d
GLX_VIDEO_OUT_COLOR_AND_ALPHA_NV	./GL/glxew.h	/^#define GLX_VIDEO_OUT_COLOR_AND_ALPHA_NV /;"	d
GLX_VIDEO_OUT_COLOR_AND_DEPTH_NV	./GL/glxew.h	/^#define GLX_VIDEO_OUT_COLOR_AND_DEPTH_NV /;"	d
GLX_VIDEO_OUT_COLOR_NV	./GL/glxew.h	/^#define GLX_VIDEO_OUT_COLOR_NV /;"	d
GLX_VIDEO_OUT_DEPTH_NV	./GL/glxew.h	/^#define GLX_VIDEO_OUT_DEPTH_NV /;"	d
GLX_VIDEO_OUT_FIELD_1_NV	./GL/glxew.h	/^#define GLX_VIDEO_OUT_FIELD_1_NV /;"	d
GLX_VIDEO_OUT_FIELD_2_NV	./GL/glxew.h	/^#define GLX_VIDEO_OUT_FIELD_2_NV /;"	d
GLX_VIDEO_OUT_FRAME_NV	./GL/glxew.h	/^#define GLX_VIDEO_OUT_FRAME_NV /;"	d
GLX_VIDEO_OUT_STACKED_FIELDS_1_2_NV	./GL/glxew.h	/^#define GLX_VIDEO_OUT_STACKED_FIELDS_1_2_NV /;"	d
GLX_VIDEO_OUT_STACKED_FIELDS_2_1_NV	./GL/glxew.h	/^#define GLX_VIDEO_OUT_STACKED_FIELDS_2_1_NV /;"	d
GLX_VIDEO_RESIZE_SUN	./GL/glxew.h	/^#define GLX_VIDEO_RESIZE_SUN /;"	d
GLX_VISUAL_CAVEAT_EXT	./GL/glxew.h	/^#define GLX_VISUAL_CAVEAT_EXT /;"	d
GLX_VISUAL_ID	./GL/glxew.h	/^#define GLX_VISUAL_ID /;"	d
GLX_VISUAL_ID_EXT	./GL/glxew.h	/^#define GLX_VISUAL_ID_EXT /;"	d
GLX_VISUAL_SELECT_GROUP_SGIX	./GL/glxew.h	/^#define GLX_VISUAL_SELECT_GROUP_SGIX /;"	d
GLX_WIDTH	./GL/glxew.h	/^#define GLX_WIDTH /;"	d
GLX_WIDTH_SGIX	./GL/glxew.h	/^#define GLX_WIDTH_SGIX /;"	d
GLX_WINDOW	./GL/glxew.h	/^#define GLX_WINDOW /;"	d
GLX_WINDOW_BIT	./GL/glxew.h	/^#define GLX_WINDOW_BIT /;"	d
GLX_WINDOW_BIT_SGIX	./GL/glxew.h	/^#define GLX_WINDOW_BIT_SGIX /;"	d
GLX_WINDOW_SGIX	./GL/glxew.h	/^#define GLX_WINDOW_SGIX /;"	d
GLX_X_RENDERABLE	./GL/glxew.h	/^#define GLX_X_RENDERABLE /;"	d
GLX_X_RENDERABLE_SGIX	./GL/glxew.h	/^#define GLX_X_RENDERABLE_SGIX /;"	d
GLX_X_VISUAL_TYPE	./GL/glxew.h	/^#define GLX_X_VISUAL_TYPE /;"	d
GLX_X_VISUAL_TYPE_EXT	./GL/glxew.h	/^#define GLX_X_VISUAL_TYPE_EXT /;"	d
GLX_Y_INVERTED_EXT	./GL/glxew.h	/^#define GLX_Y_INVERTED_EXT /;"	d
GL_1PASS_EXT	./GL/glew.h	/^#define GL_1PASS_EXT /;"	d
GL_1PASS_SGIS	./GL/glew.h	/^#define GL_1PASS_SGIS /;"	d
GL_2D	./GL/glew.h	/^#define GL_2D /;"	d
GL_2PASS_0_EXT	./GL/glew.h	/^#define GL_2PASS_0_EXT /;"	d
GL_2PASS_0_SGIS	./GL/glew.h	/^#define GL_2PASS_0_SGIS /;"	d
GL_2PASS_1_EXT	./GL/glew.h	/^#define GL_2PASS_1_EXT /;"	d
GL_2PASS_1_SGIS	./GL/glew.h	/^#define GL_2PASS_1_SGIS /;"	d
GL_2X_BIT_ATI	./GL/glew.h	/^#define GL_2X_BIT_ATI /;"	d
GL_2_BYTES	./GL/glew.h	/^#define GL_2_BYTES /;"	d
GL_3D	./GL/glew.h	/^#define GL_3D /;"	d
GL_3DC_XY_AMD	./GL/glew.h	/^#define GL_3DC_XY_AMD /;"	d
GL_3DC_X_AMD	./GL/glew.h	/^#define GL_3DC_X_AMD /;"	d
GL_3DFX_multisample	./GL/glew.h	/^#define GL_3DFX_multisample /;"	d
GL_3DFX_tbuffer	./GL/glew.h	/^#define GL_3DFX_tbuffer /;"	d
GL_3DFX_texture_compression_FXT1	./GL/glew.h	/^#define GL_3DFX_texture_compression_FXT1 /;"	d
GL_3DVISION_STEREO_NV	./GL/glew.h	/^#define GL_3DVISION_STEREO_NV /;"	d
GL_3D_COLOR	./GL/glew.h	/^#define GL_3D_COLOR /;"	d
GL_3D_COLOR_TEXTURE	./GL/glew.h	/^#define GL_3D_COLOR_TEXTURE /;"	d
GL_3_BYTES	./GL/glew.h	/^#define GL_3_BYTES /;"	d
GL_422_AVERAGE_EXT	./GL/glew.h	/^#define GL_422_AVERAGE_EXT /;"	d
GL_422_EXT	./GL/glew.h	/^#define GL_422_EXT /;"	d
GL_422_REV_AVERAGE_EXT	./GL/glew.h	/^#define GL_422_REV_AVERAGE_EXT /;"	d
GL_422_REV_EXT	./GL/glew.h	/^#define GL_422_REV_EXT /;"	d
GL_4D_COLOR_TEXTURE	./GL/glew.h	/^#define GL_4D_COLOR_TEXTURE /;"	d
GL_4PASS_0_EXT	./GL/glew.h	/^#define GL_4PASS_0_EXT /;"	d
GL_4PASS_0_SGIS	./GL/glew.h	/^#define GL_4PASS_0_SGIS /;"	d
GL_4PASS_1_EXT	./GL/glew.h	/^#define GL_4PASS_1_EXT /;"	d
GL_4PASS_1_SGIS	./GL/glew.h	/^#define GL_4PASS_1_SGIS /;"	d
GL_4PASS_2_EXT	./GL/glew.h	/^#define GL_4PASS_2_EXT /;"	d
GL_4PASS_2_SGIS	./GL/glew.h	/^#define GL_4PASS_2_SGIS /;"	d
GL_4PASS_3_EXT	./GL/glew.h	/^#define GL_4PASS_3_EXT /;"	d
GL_4PASS_3_SGIS	./GL/glew.h	/^#define GL_4PASS_3_SGIS /;"	d
GL_4X_BIT_ATI	./GL/glew.h	/^#define GL_4X_BIT_ATI /;"	d
GL_4_BYTES	./GL/glew.h	/^#define GL_4_BYTES /;"	d
GL_8X_BIT_ATI	./GL/glew.h	/^#define GL_8X_BIT_ATI /;"	d
GL_ABGR_EXT	./GL/glew.h	/^#define GL_ABGR_EXT /;"	d
GL_ACCUM	./GL/glew.h	/^#define GL_ACCUM /;"	d
GL_ACCUM_ADJACENT_PAIRS_NV	./GL/glew.h	/^#define GL_ACCUM_ADJACENT_PAIRS_NV /;"	d
GL_ACCUM_ALPHA_BITS	./GL/glew.h	/^#define GL_ACCUM_ALPHA_BITS /;"	d
GL_ACCUM_BLUE_BITS	./GL/glew.h	/^#define GL_ACCUM_BLUE_BITS /;"	d
GL_ACCUM_BUFFER_BIT	./GL/glew.h	/^#define GL_ACCUM_BUFFER_BIT /;"	d
GL_ACCUM_CLEAR_VALUE	./GL/glew.h	/^#define GL_ACCUM_CLEAR_VALUE /;"	d
GL_ACCUM_GREEN_BITS	./GL/glew.h	/^#define GL_ACCUM_GREEN_BITS /;"	d
GL_ACCUM_RED_BITS	./GL/glew.h	/^#define GL_ACCUM_RED_BITS /;"	d
GL_ACTIVE_ATOMIC_COUNTER_BUFFERS	./GL/glew.h	/^#define GL_ACTIVE_ATOMIC_COUNTER_BUFFERS /;"	d
GL_ACTIVE_ATTRIBUTES	./GL/glew.h	/^#define GL_ACTIVE_ATTRIBUTES /;"	d
GL_ACTIVE_ATTRIBUTE_MAX_LENGTH	./GL/glew.h	/^#define GL_ACTIVE_ATTRIBUTE_MAX_LENGTH /;"	d
GL_ACTIVE_PROGRAM	./GL/glew.h	/^#define GL_ACTIVE_PROGRAM /;"	d
GL_ACTIVE_PROGRAM_EXT	./GL/glew.h	/^#define GL_ACTIVE_PROGRAM_EXT /;"	d
GL_ACTIVE_RESOURCES	./GL/glew.h	/^#define GL_ACTIVE_RESOURCES /;"	d
GL_ACTIVE_STENCIL_FACE_EXT	./GL/glew.h	/^#define GL_ACTIVE_STENCIL_FACE_EXT /;"	d
GL_ACTIVE_SUBROUTINES	./GL/glew.h	/^#define GL_ACTIVE_SUBROUTINES /;"	d
GL_ACTIVE_SUBROUTINE_MAX_LENGTH	./GL/glew.h	/^#define GL_ACTIVE_SUBROUTINE_MAX_LENGTH /;"	d
GL_ACTIVE_SUBROUTINE_UNIFORMS	./GL/glew.h	/^#define GL_ACTIVE_SUBROUTINE_UNIFORMS /;"	d
GL_ACTIVE_SUBROUTINE_UNIFORM_LOCATIONS	./GL/glew.h	/^#define GL_ACTIVE_SUBROUTINE_UNIFORM_LOCATIONS /;"	d
GL_ACTIVE_SUBROUTINE_UNIFORM_MAX_LENGTH	./GL/glew.h	/^#define GL_ACTIVE_SUBROUTINE_UNIFORM_MAX_LENGTH /;"	d
GL_ACTIVE_TEXTURE	./GL/glew.h	/^#define GL_ACTIVE_TEXTURE /;"	d
GL_ACTIVE_TEXTURE_ARB	./GL/glew.h	/^#define GL_ACTIVE_TEXTURE_ARB /;"	d
GL_ACTIVE_UNIFORMS	./GL/glew.h	/^#define GL_ACTIVE_UNIFORMS /;"	d
GL_ACTIVE_UNIFORM_BLOCKS	./GL/glew.h	/^#define GL_ACTIVE_UNIFORM_BLOCKS /;"	d
GL_ACTIVE_UNIFORM_BLOCK_MAX_NAME_LENGTH	./GL/glew.h	/^#define GL_ACTIVE_UNIFORM_BLOCK_MAX_NAME_LENGTH /;"	d
GL_ACTIVE_UNIFORM_MAX_LENGTH	./GL/glew.h	/^#define GL_ACTIVE_UNIFORM_MAX_LENGTH /;"	d
GL_ACTIVE_VARIABLES	./GL/glew.h	/^#define GL_ACTIVE_VARIABLES /;"	d
GL_ACTIVE_VARYINGS_NV	./GL/glew.h	/^#define GL_ACTIVE_VARYINGS_NV /;"	d
GL_ACTIVE_VARYING_MAX_LENGTH_NV	./GL/glew.h	/^#define GL_ACTIVE_VARYING_MAX_LENGTH_NV /;"	d
GL_ACTIVE_VERTEX_UNITS_ARB	./GL/glew.h	/^#define GL_ACTIVE_VERTEX_UNITS_ARB /;"	d
GL_ADD	./GL/glew.h	/^#define GL_ADD /;"	d
GL_ADD_ATI	./GL/glew.h	/^#define GL_ADD_ATI /;"	d
GL_ADD_BLEND_IMG	./GL/glew.h	/^#define GL_ADD_BLEND_IMG /;"	d
GL_ADD_SIGNED	./GL/glew.h	/^#define GL_ADD_SIGNED /;"	d
GL_ADD_SIGNED_ARB	./GL/glew.h	/^#define GL_ADD_SIGNED_ARB /;"	d
GL_ADD_SIGNED_EXT	./GL/glew.h	/^#define GL_ADD_SIGNED_EXT /;"	d
GL_ADJACENT_PAIRS_NV	./GL/glew.h	/^#define GL_ADJACENT_PAIRS_NV /;"	d
GL_AFFINE_2D_NV	./GL/glew.h	/^#define GL_AFFINE_2D_NV /;"	d
GL_AFFINE_3D_NV	./GL/glew.h	/^#define GL_AFFINE_3D_NV /;"	d
GL_ALIASED_LINE_WIDTH_RANGE	./GL/glew.h	/^#define GL_ALIASED_LINE_WIDTH_RANGE /;"	d
GL_ALIASED_POINT_SIZE_RANGE	./GL/glew.h	/^#define GL_ALIASED_POINT_SIZE_RANGE /;"	d
GL_ALLOW_DRAW_FRG_HINT_PGI	./GL/glew.h	/^#define GL_ALLOW_DRAW_FRG_HINT_PGI /;"	d
GL_ALLOW_DRAW_MEM_HINT_PGI	./GL/glew.h	/^#define GL_ALLOW_DRAW_MEM_HINT_PGI /;"	d
GL_ALLOW_DRAW_OBJ_HINT_PGI	./GL/glew.h	/^#define GL_ALLOW_DRAW_OBJ_HINT_PGI /;"	d
GL_ALLOW_DRAW_WIN_HINT_PGI	./GL/glew.h	/^#define GL_ALLOW_DRAW_WIN_HINT_PGI /;"	d
GL_ALL_ATTRIB_BITS	./GL/glew.h	/^#define GL_ALL_ATTRIB_BITS /;"	d
GL_ALL_BARRIER_BITS	./GL/glew.h	/^#define GL_ALL_BARRIER_BITS /;"	d
GL_ALL_BARRIER_BITS_EXT	./GL/glew.h	/^#define GL_ALL_BARRIER_BITS_EXT /;"	d
GL_ALL_COMPLETED_NV	./GL/glew.h	/^#define GL_ALL_COMPLETED_NV /;"	d
GL_ALL_PIXELS_AMD	./GL/glew.h	/^#define GL_ALL_PIXELS_AMD /;"	d
GL_ALL_SHADER_BITS	./GL/glew.h	/^#define GL_ALL_SHADER_BITS /;"	d
GL_ALL_STATIC_DATA_IBM	./GL/glew.h	/^#define GL_ALL_STATIC_DATA_IBM /;"	d
GL_ALPHA	./GL/glew.h	/^#define GL_ALPHA /;"	d
GL_ALPHA12	./GL/glew.h	/^#define GL_ALPHA12 /;"	d
GL_ALPHA12_EXT	./GL/glew.h	/^#define GL_ALPHA12_EXT /;"	d
GL_ALPHA16	./GL/glew.h	/^#define GL_ALPHA16 /;"	d
GL_ALPHA16F_ARB	./GL/glew.h	/^#define GL_ALPHA16F_ARB /;"	d
GL_ALPHA16F_EXT	./GL/glew.h	/^#define GL_ALPHA16F_EXT /;"	d
GL_ALPHA16I_EXT	./GL/glew.h	/^#define GL_ALPHA16I_EXT /;"	d
GL_ALPHA16UI_EXT	./GL/glew.h	/^#define GL_ALPHA16UI_EXT /;"	d
GL_ALPHA16_EXT	./GL/glew.h	/^#define GL_ALPHA16_EXT /;"	d
GL_ALPHA16_EXTENDED_RANGE_SGIX	./GL/glew.h	/^#define GL_ALPHA16_EXTENDED_RANGE_SGIX /;"	d
GL_ALPHA16_ICC_SGIX	./GL/glew.h	/^#define GL_ALPHA16_ICC_SGIX /;"	d
GL_ALPHA16_SIGNED_SGIX	./GL/glew.h	/^#define GL_ALPHA16_SIGNED_SGIX /;"	d
GL_ALPHA16_SNORM	./GL/glew.h	/^#define GL_ALPHA16_SNORM /;"	d
GL_ALPHA32F_ARB	./GL/glew.h	/^#define GL_ALPHA32F_ARB /;"	d
GL_ALPHA32F_EXT	./GL/glew.h	/^#define GL_ALPHA32F_EXT /;"	d
GL_ALPHA32I_EXT	./GL/glew.h	/^#define GL_ALPHA32I_EXT /;"	d
GL_ALPHA32UI_EXT	./GL/glew.h	/^#define GL_ALPHA32UI_EXT /;"	d
GL_ALPHA4	./GL/glew.h	/^#define GL_ALPHA4 /;"	d
GL_ALPHA4_EXT	./GL/glew.h	/^#define GL_ALPHA4_EXT /;"	d
GL_ALPHA8	./GL/glew.h	/^#define GL_ALPHA8 /;"	d
GL_ALPHA8I_EXT	./GL/glew.h	/^#define GL_ALPHA8I_EXT /;"	d
GL_ALPHA8UI_EXT	./GL/glew.h	/^#define GL_ALPHA8UI_EXT /;"	d
GL_ALPHA8_EXT	./GL/glew.h	/^#define GL_ALPHA8_EXT /;"	d
GL_ALPHA8_OES	./GL/glew.h	/^#define GL_ALPHA8_OES /;"	d
GL_ALPHA8_SNORM	./GL/glew.h	/^#define GL_ALPHA8_SNORM /;"	d
GL_ALPHA_BIAS	./GL/glew.h	/^#define GL_ALPHA_BIAS /;"	d
GL_ALPHA_BITS	./GL/glew.h	/^#define GL_ALPHA_BITS /;"	d
GL_ALPHA_EXTENDED_RANGE_SGIX	./GL/glew.h	/^#define GL_ALPHA_EXTENDED_RANGE_SGIX /;"	d
GL_ALPHA_FLOAT16_APPLE	./GL/glew.h	/^#define GL_ALPHA_FLOAT16_APPLE /;"	d
GL_ALPHA_FLOAT16_ATI	./GL/glew.h	/^#define GL_ALPHA_FLOAT16_ATI /;"	d
GL_ALPHA_FLOAT32_APPLE	./GL/glew.h	/^#define GL_ALPHA_FLOAT32_APPLE /;"	d
GL_ALPHA_FLOAT32_ATI	./GL/glew.h	/^#define GL_ALPHA_FLOAT32_ATI /;"	d
GL_ALPHA_ICC_SGIX	./GL/glew.h	/^#define GL_ALPHA_ICC_SGIX /;"	d
GL_ALPHA_INTEGER	./GL/glew.h	/^#define GL_ALPHA_INTEGER /;"	d
GL_ALPHA_INTEGER_EXT	./GL/glew.h	/^#define GL_ALPHA_INTEGER_EXT /;"	d
GL_ALPHA_MAX_CLAMP_INGR	./GL/glew.h	/^#define GL_ALPHA_MAX_CLAMP_INGR /;"	d
GL_ALPHA_MAX_SGIX	./GL/glew.h	/^#define GL_ALPHA_MAX_SGIX /;"	d
GL_ALPHA_MIN_CLAMP_INGR	./GL/glew.h	/^#define GL_ALPHA_MIN_CLAMP_INGR /;"	d
GL_ALPHA_MIN_SGIX	./GL/glew.h	/^#define GL_ALPHA_MIN_SGIX /;"	d
GL_ALPHA_REF_COMMAND_NV	./GL/glew.h	/^#define GL_ALPHA_REF_COMMAND_NV /;"	d
GL_ALPHA_SCALE	./GL/glew.h	/^#define GL_ALPHA_SCALE /;"	d
GL_ALPHA_SIGNED_SGIX	./GL/glew.h	/^#define GL_ALPHA_SIGNED_SGIX /;"	d
GL_ALPHA_SNORM	./GL/glew.h	/^#define GL_ALPHA_SNORM /;"	d
GL_ALPHA_TEST	./GL/glew.h	/^#define GL_ALPHA_TEST /;"	d
GL_ALPHA_TEST_FUNC	./GL/glew.h	/^#define GL_ALPHA_TEST_FUNC /;"	d
GL_ALPHA_TEST_FUNC_QCOM	./GL/glew.h	/^#define GL_ALPHA_TEST_FUNC_QCOM /;"	d
GL_ALPHA_TEST_QCOM	./GL/glew.h	/^#define GL_ALPHA_TEST_QCOM /;"	d
GL_ALPHA_TEST_REF	./GL/glew.h	/^#define GL_ALPHA_TEST_REF /;"	d
GL_ALPHA_TEST_REF_QCOM	./GL/glew.h	/^#define GL_ALPHA_TEST_REF_QCOM /;"	d
GL_ALPHA_TO_COVERAGE_DITHER_DEFAULT_NV	./GL/glew.h	/^#define GL_ALPHA_TO_COVERAGE_DITHER_DEFAULT_NV /;"	d
GL_ALPHA_TO_COVERAGE_DITHER_DISABLE_NV	./GL/glew.h	/^#define GL_ALPHA_TO_COVERAGE_DITHER_DISABLE_NV /;"	d
GL_ALPHA_TO_COVERAGE_DITHER_ENABLE_NV	./GL/glew.h	/^#define GL_ALPHA_TO_COVERAGE_DITHER_ENABLE_NV /;"	d
GL_ALPHA_TO_COVERAGE_DITHER_MODE_NV	./GL/glew.h	/^#define GL_ALPHA_TO_COVERAGE_DITHER_MODE_NV /;"	d
GL_ALREADY_SIGNALED	./GL/glew.h	/^#define GL_ALREADY_SIGNALED /;"	d
GL_ALREADY_SIGNALED_APPLE	./GL/glew.h	/^#define GL_ALREADY_SIGNALED_APPLE /;"	d
GL_ALWAYS	./GL/glew.h	/^#define GL_ALWAYS /;"	d
GL_ALWAYS_FAST_HINT_PGI	./GL/glew.h	/^#define GL_ALWAYS_FAST_HINT_PGI /;"	d
GL_ALWAYS_SOFT_HINT_PGI	./GL/glew.h	/^#define GL_ALWAYS_SOFT_HINT_PGI /;"	d
GL_AMBIENT	./GL/glew.h	/^#define GL_AMBIENT /;"	d
GL_AMBIENT_AND_DIFFUSE	./GL/glew.h	/^#define GL_AMBIENT_AND_DIFFUSE /;"	d
GL_AMD_blend_minmax_factor	./GL/glew.h	/^#define GL_AMD_blend_minmax_factor /;"	d
GL_AMD_compressed_3DC_texture	./GL/glew.h	/^#define GL_AMD_compressed_3DC_texture /;"	d
GL_AMD_compressed_ATC_texture	./GL/glew.h	/^#define GL_AMD_compressed_ATC_texture /;"	d
GL_AMD_conservative_depth	./GL/glew.h	/^#define GL_AMD_conservative_depth /;"	d
GL_AMD_debug_output	./GL/glew.h	/^#define GL_AMD_debug_output /;"	d
GL_AMD_depth_clamp_separate	./GL/glew.h	/^#define GL_AMD_depth_clamp_separate /;"	d
GL_AMD_draw_buffers_blend	./GL/glew.h	/^#define GL_AMD_draw_buffers_blend /;"	d
GL_AMD_framebuffer_multisample_advanced	./GL/glew.h	/^#define GL_AMD_framebuffer_multisample_advanced /;"	d
GL_AMD_framebuffer_sample_positions	./GL/glew.h	/^#define GL_AMD_framebuffer_sample_positions /;"	d
GL_AMD_gcn_shader	./GL/glew.h	/^#define GL_AMD_gcn_shader /;"	d
GL_AMD_gpu_shader_half_float	./GL/glew.h	/^#define GL_AMD_gpu_shader_half_float /;"	d
GL_AMD_gpu_shader_half_float_fetch	./GL/glew.h	/^#define GL_AMD_gpu_shader_half_float_fetch /;"	d
GL_AMD_gpu_shader_int16	./GL/glew.h	/^#define GL_AMD_gpu_shader_int16 /;"	d
GL_AMD_gpu_shader_int64	./GL/glew.h	/^#define GL_AMD_gpu_shader_int64 /;"	d
GL_AMD_interleaved_elements	./GL/glew.h	/^#define GL_AMD_interleaved_elements /;"	d
GL_AMD_multi_draw_indirect	./GL/glew.h	/^#define GL_AMD_multi_draw_indirect /;"	d
GL_AMD_name_gen_delete	./GL/glew.h	/^#define GL_AMD_name_gen_delete /;"	d
GL_AMD_occlusion_query_event	./GL/glew.h	/^#define GL_AMD_occlusion_query_event /;"	d
GL_AMD_performance_monitor	./GL/glew.h	/^#define GL_AMD_performance_monitor /;"	d
GL_AMD_pinned_memory	./GL/glew.h	/^#define GL_AMD_pinned_memory /;"	d
GL_AMD_program_binary_Z400	./GL/glew.h	/^#define GL_AMD_program_binary_Z400 /;"	d
GL_AMD_query_buffer_object	./GL/glew.h	/^#define GL_AMD_query_buffer_object /;"	d
GL_AMD_sample_positions	./GL/glew.h	/^#define GL_AMD_sample_positions /;"	d
GL_AMD_seamless_cubemap_per_texture	./GL/glew.h	/^#define GL_AMD_seamless_cubemap_per_texture /;"	d
GL_AMD_shader_atomic_counter_ops	./GL/glew.h	/^#define GL_AMD_shader_atomic_counter_ops /;"	d
GL_AMD_shader_ballot	./GL/glew.h	/^#define GL_AMD_shader_ballot /;"	d
GL_AMD_shader_explicit_vertex_parameter	./GL/glew.h	/^#define GL_AMD_shader_explicit_vertex_parameter /;"	d
GL_AMD_shader_image_load_store_lod	./GL/glew.h	/^#define GL_AMD_shader_image_load_store_lod /;"	d
GL_AMD_shader_stencil_export	./GL/glew.h	/^#define GL_AMD_shader_stencil_export /;"	d
GL_AMD_shader_stencil_value_export	./GL/glew.h	/^#define GL_AMD_shader_stencil_value_export /;"	d
GL_AMD_shader_trinary_minmax	./GL/glew.h	/^#define GL_AMD_shader_trinary_minmax /;"	d
GL_AMD_sparse_texture	./GL/glew.h	/^#define GL_AMD_sparse_texture /;"	d
GL_AMD_stencil_operation_extended	./GL/glew.h	/^#define GL_AMD_stencil_operation_extended /;"	d
GL_AMD_texture_gather_bias_lod	./GL/glew.h	/^#define GL_AMD_texture_gather_bias_lod /;"	d
GL_AMD_texture_texture4	./GL/glew.h	/^#define GL_AMD_texture_texture4 /;"	d
GL_AMD_transform_feedback3_lines_triangles	./GL/glew.h	/^#define GL_AMD_transform_feedback3_lines_triangles /;"	d
GL_AMD_transform_feedback4	./GL/glew.h	/^#define GL_AMD_transform_feedback4 /;"	d
GL_AMD_vertex_shader_layer	./GL/glew.h	/^#define GL_AMD_vertex_shader_layer /;"	d
GL_AMD_vertex_shader_tessellator	./GL/glew.h	/^#define GL_AMD_vertex_shader_tessellator /;"	d
GL_AMD_vertex_shader_viewport_index	./GL/glew.h	/^#define GL_AMD_vertex_shader_viewport_index /;"	d
GL_AND	./GL/glew.h	/^#define GL_AND /;"	d
GL_ANDROID_extension_pack_es31a	./GL/glew.h	/^#define GL_ANDROID_extension_pack_es31a /;"	d
GL_AND_INVERTED	./GL/glew.h	/^#define GL_AND_INVERTED /;"	d
GL_AND_REVERSE	./GL/glew.h	/^#define GL_AND_REVERSE /;"	d
GL_ANGLE_depth_texture	./GL/glew.h	/^#define GL_ANGLE_depth_texture /;"	d
GL_ANGLE_framebuffer_blit	./GL/glew.h	/^#define GL_ANGLE_framebuffer_blit /;"	d
GL_ANGLE_framebuffer_multisample	./GL/glew.h	/^#define GL_ANGLE_framebuffer_multisample /;"	d
GL_ANGLE_instanced_arrays	./GL/glew.h	/^#define GL_ANGLE_instanced_arrays /;"	d
GL_ANGLE_pack_reverse_row_order	./GL/glew.h	/^#define GL_ANGLE_pack_reverse_row_order /;"	d
GL_ANGLE_program_binary	./GL/glew.h	/^#define GL_ANGLE_program_binary /;"	d
GL_ANGLE_texture_compression_dxt1	./GL/glew.h	/^#define GL_ANGLE_texture_compression_dxt1 /;"	d
GL_ANGLE_texture_compression_dxt3	./GL/glew.h	/^#define GL_ANGLE_texture_compression_dxt3 /;"	d
GL_ANGLE_texture_compression_dxt5	./GL/glew.h	/^#define GL_ANGLE_texture_compression_dxt5 /;"	d
GL_ANGLE_texture_usage	./GL/glew.h	/^#define GL_ANGLE_texture_usage /;"	d
GL_ANGLE_timer_query	./GL/glew.h	/^#define GL_ANGLE_timer_query /;"	d
GL_ANGLE_translated_shader_source	./GL/glew.h	/^#define GL_ANGLE_translated_shader_source /;"	d
GL_ANY_SAMPLES_PASSED	./GL/glew.h	/^#define GL_ANY_SAMPLES_PASSED /;"	d
GL_ANY_SAMPLES_PASSED_CONSERVATIVE	./GL/glew.h	/^#define GL_ANY_SAMPLES_PASSED_CONSERVATIVE /;"	d
GL_ANY_SAMPLES_PASSED_CONSERVATIVE_EXT	./GL/glew.h	/^#define GL_ANY_SAMPLES_PASSED_CONSERVATIVE_EXT /;"	d
GL_ANY_SAMPLES_PASSED_EXT	./GL/glew.h	/^#define GL_ANY_SAMPLES_PASSED_EXT /;"	d
GL_APPLE_aux_depth_stencil	./GL/glew.h	/^#define GL_APPLE_aux_depth_stencil /;"	d
GL_APPLE_client_storage	./GL/glew.h	/^#define GL_APPLE_client_storage /;"	d
GL_APPLE_clip_distance	./GL/glew.h	/^#define GL_APPLE_clip_distance /;"	d
GL_APPLE_color_buffer_packed_float	./GL/glew.h	/^#define GL_APPLE_color_buffer_packed_float /;"	d
GL_APPLE_copy_texture_levels	./GL/glew.h	/^#define GL_APPLE_copy_texture_levels /;"	d
GL_APPLE_element_array	./GL/glew.h	/^#define GL_APPLE_element_array /;"	d
GL_APPLE_fence	./GL/glew.h	/^#define GL_APPLE_fence /;"	d
GL_APPLE_float_pixels	./GL/glew.h	/^#define GL_APPLE_float_pixels /;"	d
GL_APPLE_flush_buffer_range	./GL/glew.h	/^#define GL_APPLE_flush_buffer_range /;"	d
GL_APPLE_framebuffer_multisample	./GL/glew.h	/^#define GL_APPLE_framebuffer_multisample /;"	d
GL_APPLE_object_purgeable	./GL/glew.h	/^#define GL_APPLE_object_purgeable /;"	d
GL_APPLE_pixel_buffer	./GL/glew.h	/^#define GL_APPLE_pixel_buffer /;"	d
GL_APPLE_rgb_422	./GL/glew.h	/^#define GL_APPLE_rgb_422 /;"	d
GL_APPLE_row_bytes	./GL/glew.h	/^#define GL_APPLE_row_bytes /;"	d
GL_APPLE_specular_vector	./GL/glew.h	/^#define GL_APPLE_specular_vector /;"	d
GL_APPLE_sync	./GL/glew.h	/^#define GL_APPLE_sync /;"	d
GL_APPLE_texture_2D_limited_npot	./GL/glew.h	/^#define GL_APPLE_texture_2D_limited_npot /;"	d
GL_APPLE_texture_format_BGRA8888	./GL/glew.h	/^#define GL_APPLE_texture_format_BGRA8888 /;"	d
GL_APPLE_texture_max_level	./GL/glew.h	/^#define GL_APPLE_texture_max_level /;"	d
GL_APPLE_texture_packed_float	./GL/glew.h	/^#define GL_APPLE_texture_packed_float /;"	d
GL_APPLE_texture_range	./GL/glew.h	/^#define GL_APPLE_texture_range /;"	d
GL_APPLE_transform_hint	./GL/glew.h	/^#define GL_APPLE_transform_hint /;"	d
GL_APPLE_vertex_array_object	./GL/glew.h	/^#define GL_APPLE_vertex_array_object /;"	d
GL_APPLE_vertex_array_range	./GL/glew.h	/^#define GL_APPLE_vertex_array_range /;"	d
GL_APPLE_vertex_program_evaluators	./GL/glew.h	/^#define GL_APPLE_vertex_program_evaluators /;"	d
GL_APPLE_ycbcr_422	./GL/glew.h	/^#define GL_APPLE_ycbcr_422 /;"	d
GL_ARB_ES2_compatibility	./GL/glew.h	/^#define GL_ARB_ES2_compatibility /;"	d
GL_ARB_ES3_1_compatibility	./GL/glew.h	/^#define GL_ARB_ES3_1_compatibility /;"	d
GL_ARB_ES3_2_compatibility	./GL/glew.h	/^#define GL_ARB_ES3_2_compatibility /;"	d
GL_ARB_ES3_compatibility	./GL/glew.h	/^#define GL_ARB_ES3_compatibility /;"	d
GL_ARB_arrays_of_arrays	./GL/glew.h	/^#define GL_ARB_arrays_of_arrays /;"	d
GL_ARB_base_instance	./GL/glew.h	/^#define GL_ARB_base_instance /;"	d
GL_ARB_bindless_texture	./GL/glew.h	/^#define GL_ARB_bindless_texture /;"	d
GL_ARB_blend_func_extended	./GL/glew.h	/^#define GL_ARB_blend_func_extended /;"	d
GL_ARB_buffer_storage	./GL/glew.h	/^#define GL_ARB_buffer_storage /;"	d
GL_ARB_cl_event	./GL/glew.h	/^#define GL_ARB_cl_event /;"	d
GL_ARB_clear_buffer_object	./GL/glew.h	/^#define GL_ARB_clear_buffer_object /;"	d
GL_ARB_clear_texture	./GL/glew.h	/^#define GL_ARB_clear_texture /;"	d
GL_ARB_clip_control	./GL/glew.h	/^#define GL_ARB_clip_control /;"	d
GL_ARB_color_buffer_float	./GL/glew.h	/^#define GL_ARB_color_buffer_float /;"	d
GL_ARB_compatibility	./GL/glew.h	/^#define GL_ARB_compatibility /;"	d
GL_ARB_compressed_texture_pixel_storage	./GL/glew.h	/^#define GL_ARB_compressed_texture_pixel_storage /;"	d
GL_ARB_compute_shader	./GL/glew.h	/^#define GL_ARB_compute_shader /;"	d
GL_ARB_compute_variable_group_size	./GL/glew.h	/^#define GL_ARB_compute_variable_group_size /;"	d
GL_ARB_conditional_render_inverted	./GL/glew.h	/^#define GL_ARB_conditional_render_inverted /;"	d
GL_ARB_conservative_depth	./GL/glew.h	/^#define GL_ARB_conservative_depth /;"	d
GL_ARB_copy_buffer	./GL/glew.h	/^#define GL_ARB_copy_buffer /;"	d
GL_ARB_copy_image	./GL/glew.h	/^#define GL_ARB_copy_image /;"	d
GL_ARB_cull_distance	./GL/glew.h	/^#define GL_ARB_cull_distance /;"	d
GL_ARB_debug_output	./GL/glew.h	/^#define GL_ARB_debug_output /;"	d
GL_ARB_depth_buffer_float	./GL/glew.h	/^#define GL_ARB_depth_buffer_float /;"	d
GL_ARB_depth_clamp	./GL/glew.h	/^#define GL_ARB_depth_clamp /;"	d
GL_ARB_depth_texture	./GL/glew.h	/^#define GL_ARB_depth_texture /;"	d
GL_ARB_derivative_control	./GL/glew.h	/^#define GL_ARB_derivative_control /;"	d
GL_ARB_direct_state_access	./GL/glew.h	/^#define GL_ARB_direct_state_access /;"	d
GL_ARB_draw_buffers	./GL/glew.h	/^#define GL_ARB_draw_buffers /;"	d
GL_ARB_draw_buffers_blend	./GL/glew.h	/^#define GL_ARB_draw_buffers_blend /;"	d
GL_ARB_draw_elements_base_vertex	./GL/glew.h	/^#define GL_ARB_draw_elements_base_vertex /;"	d
GL_ARB_draw_indirect	./GL/glew.h	/^#define GL_ARB_draw_indirect /;"	d
GL_ARB_draw_instanced	./GL/glew.h	/^#define GL_ARB_draw_instanced /;"	d
GL_ARB_enhanced_layouts	./GL/glew.h	/^#define GL_ARB_enhanced_layouts /;"	d
GL_ARB_explicit_attrib_location	./GL/glew.h	/^#define GL_ARB_explicit_attrib_location /;"	d
GL_ARB_explicit_uniform_location	./GL/glew.h	/^#define GL_ARB_explicit_uniform_location /;"	d
GL_ARB_fragment_coord_conventions	./GL/glew.h	/^#define GL_ARB_fragment_coord_conventions /;"	d
GL_ARB_fragment_layer_viewport	./GL/glew.h	/^#define GL_ARB_fragment_layer_viewport /;"	d
GL_ARB_fragment_program	./GL/glew.h	/^#define GL_ARB_fragment_program /;"	d
GL_ARB_fragment_program_shadow	./GL/glew.h	/^#define GL_ARB_fragment_program_shadow /;"	d
GL_ARB_fragment_shader	./GL/glew.h	/^#define GL_ARB_fragment_shader /;"	d
GL_ARB_fragment_shader_interlock	./GL/glew.h	/^#define GL_ARB_fragment_shader_interlock /;"	d
GL_ARB_framebuffer_no_attachments	./GL/glew.h	/^#define GL_ARB_framebuffer_no_attachments /;"	d
GL_ARB_framebuffer_object	./GL/glew.h	/^#define GL_ARB_framebuffer_object /;"	d
GL_ARB_framebuffer_sRGB	./GL/glew.h	/^#define GL_ARB_framebuffer_sRGB /;"	d
GL_ARB_geometry_shader4	./GL/glew.h	/^#define GL_ARB_geometry_shader4 /;"	d
GL_ARB_get_program_binary	./GL/glew.h	/^#define GL_ARB_get_program_binary /;"	d
GL_ARB_get_texture_sub_image	./GL/glew.h	/^#define GL_ARB_get_texture_sub_image /;"	d
GL_ARB_gl_spirv	./GL/glew.h	/^#define GL_ARB_gl_spirv /;"	d
GL_ARB_gpu_shader5	./GL/glew.h	/^#define GL_ARB_gpu_shader5 /;"	d
GL_ARB_gpu_shader_fp64	./GL/glew.h	/^#define GL_ARB_gpu_shader_fp64 /;"	d
GL_ARB_gpu_shader_int64	./GL/glew.h	/^#define GL_ARB_gpu_shader_int64 /;"	d
GL_ARB_half_float_pixel	./GL/glew.h	/^#define GL_ARB_half_float_pixel /;"	d
GL_ARB_half_float_vertex	./GL/glew.h	/^#define GL_ARB_half_float_vertex /;"	d
GL_ARB_imaging	./GL/glew.h	/^#define GL_ARB_imaging /;"	d
GL_ARB_indirect_parameters	./GL/glew.h	/^#define GL_ARB_indirect_parameters /;"	d
GL_ARB_instanced_arrays	./GL/glew.h	/^#define GL_ARB_instanced_arrays /;"	d
GL_ARB_internalformat_query	./GL/glew.h	/^#define GL_ARB_internalformat_query /;"	d
GL_ARB_internalformat_query2	./GL/glew.h	/^#define GL_ARB_internalformat_query2 /;"	d
GL_ARB_invalidate_subdata	./GL/glew.h	/^#define GL_ARB_invalidate_subdata /;"	d
GL_ARB_map_buffer_alignment	./GL/glew.h	/^#define GL_ARB_map_buffer_alignment /;"	d
GL_ARB_map_buffer_range	./GL/glew.h	/^#define GL_ARB_map_buffer_range /;"	d
GL_ARB_matrix_palette	./GL/glew.h	/^#define GL_ARB_matrix_palette /;"	d
GL_ARB_multi_bind	./GL/glew.h	/^#define GL_ARB_multi_bind /;"	d
GL_ARB_multi_draw_indirect	./GL/glew.h	/^#define GL_ARB_multi_draw_indirect /;"	d
GL_ARB_multisample	./GL/glew.h	/^#define GL_ARB_multisample /;"	d
GL_ARB_multitexture	./GL/glew.h	/^#define GL_ARB_multitexture /;"	d
GL_ARB_occlusion_query	./GL/glew.h	/^#define GL_ARB_occlusion_query /;"	d
GL_ARB_occlusion_query2	./GL/glew.h	/^#define GL_ARB_occlusion_query2 /;"	d
GL_ARB_parallel_shader_compile	./GL/glew.h	/^#define GL_ARB_parallel_shader_compile /;"	d
GL_ARB_pipeline_statistics_query	./GL/glew.h	/^#define GL_ARB_pipeline_statistics_query /;"	d
GL_ARB_pixel_buffer_object	./GL/glew.h	/^#define GL_ARB_pixel_buffer_object /;"	d
GL_ARB_point_parameters	./GL/glew.h	/^#define GL_ARB_point_parameters /;"	d
GL_ARB_point_sprite	./GL/glew.h	/^#define GL_ARB_point_sprite /;"	d
GL_ARB_polygon_offset_clamp	./GL/glew.h	/^#define GL_ARB_polygon_offset_clamp /;"	d
GL_ARB_post_depth_coverage	./GL/glew.h	/^#define GL_ARB_post_depth_coverage /;"	d
GL_ARB_program_interface_query	./GL/glew.h	/^#define GL_ARB_program_interface_query /;"	d
GL_ARB_provoking_vertex	./GL/glew.h	/^#define GL_ARB_provoking_vertex /;"	d
GL_ARB_query_buffer_object	./GL/glew.h	/^#define GL_ARB_query_buffer_object /;"	d
GL_ARB_robust_buffer_access_behavior	./GL/glew.h	/^#define GL_ARB_robust_buffer_access_behavior /;"	d
GL_ARB_robustness	./GL/glew.h	/^#define GL_ARB_robustness /;"	d
GL_ARB_robustness_application_isolation	./GL/glew.h	/^#define GL_ARB_robustness_application_isolation /;"	d
GL_ARB_robustness_share_group_isolation	./GL/glew.h	/^#define GL_ARB_robustness_share_group_isolation /;"	d
GL_ARB_sample_locations	./GL/glew.h	/^#define GL_ARB_sample_locations /;"	d
GL_ARB_sample_shading	./GL/glew.h	/^#define GL_ARB_sample_shading /;"	d
GL_ARB_sampler_objects	./GL/glew.h	/^#define GL_ARB_sampler_objects /;"	d
GL_ARB_seamless_cube_map	./GL/glew.h	/^#define GL_ARB_seamless_cube_map /;"	d
GL_ARB_seamless_cubemap_per_texture	./GL/glew.h	/^#define GL_ARB_seamless_cubemap_per_texture /;"	d
GL_ARB_separate_shader_objects	./GL/glew.h	/^#define GL_ARB_separate_shader_objects /;"	d
GL_ARB_shader_atomic_counter_ops	./GL/glew.h	/^#define GL_ARB_shader_atomic_counter_ops /;"	d
GL_ARB_shader_atomic_counters	./GL/glew.h	/^#define GL_ARB_shader_atomic_counters /;"	d
GL_ARB_shader_ballot	./GL/glew.h	/^#define GL_ARB_shader_ballot /;"	d
GL_ARB_shader_bit_encoding	./GL/glew.h	/^#define GL_ARB_shader_bit_encoding /;"	d
GL_ARB_shader_clock	./GL/glew.h	/^#define GL_ARB_shader_clock /;"	d
GL_ARB_shader_draw_parameters	./GL/glew.h	/^#define GL_ARB_shader_draw_parameters /;"	d
GL_ARB_shader_group_vote	./GL/glew.h	/^#define GL_ARB_shader_group_vote /;"	d
GL_ARB_shader_image_load_store	./GL/glew.h	/^#define GL_ARB_shader_image_load_store /;"	d
GL_ARB_shader_image_size	./GL/glew.h	/^#define GL_ARB_shader_image_size /;"	d
GL_ARB_shader_objects	./GL/glew.h	/^#define GL_ARB_shader_objects /;"	d
GL_ARB_shader_precision	./GL/glew.h	/^#define GL_ARB_shader_precision /;"	d
GL_ARB_shader_stencil_export	./GL/glew.h	/^#define GL_ARB_shader_stencil_export /;"	d
GL_ARB_shader_storage_buffer_object	./GL/glew.h	/^#define GL_ARB_shader_storage_buffer_object /;"	d
GL_ARB_shader_subroutine	./GL/glew.h	/^#define GL_ARB_shader_subroutine /;"	d
GL_ARB_shader_texture_image_samples	./GL/glew.h	/^#define GL_ARB_shader_texture_image_samples /;"	d
GL_ARB_shader_texture_lod	./GL/glew.h	/^#define GL_ARB_shader_texture_lod /;"	d
GL_ARB_shader_viewport_layer_array	./GL/glew.h	/^#define GL_ARB_shader_viewport_layer_array /;"	d
GL_ARB_shading_language_100	./GL/glew.h	/^#define GL_ARB_shading_language_100 /;"	d
GL_ARB_shading_language_420pack	./GL/glew.h	/^#define GL_ARB_shading_language_420pack /;"	d
GL_ARB_shading_language_include	./GL/glew.h	/^#define GL_ARB_shading_language_include /;"	d
GL_ARB_shading_language_packing	./GL/glew.h	/^#define GL_ARB_shading_language_packing /;"	d
GL_ARB_shadow	./GL/glew.h	/^#define GL_ARB_shadow /;"	d
GL_ARB_shadow_ambient	./GL/glew.h	/^#define GL_ARB_shadow_ambient /;"	d
GL_ARB_sparse_buffer	./GL/glew.h	/^#define GL_ARB_sparse_buffer /;"	d
GL_ARB_sparse_texture	./GL/glew.h	/^#define GL_ARB_sparse_texture /;"	d
GL_ARB_sparse_texture2	./GL/glew.h	/^#define GL_ARB_sparse_texture2 /;"	d
GL_ARB_sparse_texture_clamp	./GL/glew.h	/^#define GL_ARB_sparse_texture_clamp /;"	d
GL_ARB_spirv_extensions	./GL/glew.h	/^#define GL_ARB_spirv_extensions /;"	d
GL_ARB_stencil_texturing	./GL/glew.h	/^#define GL_ARB_stencil_texturing /;"	d
GL_ARB_sync	./GL/glew.h	/^#define GL_ARB_sync /;"	d
GL_ARB_tessellation_shader	./GL/glew.h	/^#define GL_ARB_tessellation_shader /;"	d
GL_ARB_texture_barrier	./GL/glew.h	/^#define GL_ARB_texture_barrier /;"	d
GL_ARB_texture_border_clamp	./GL/glew.h	/^#define GL_ARB_texture_border_clamp /;"	d
GL_ARB_texture_buffer_object	./GL/glew.h	/^#define GL_ARB_texture_buffer_object /;"	d
GL_ARB_texture_buffer_object_rgb32	./GL/glew.h	/^#define GL_ARB_texture_buffer_object_rgb32 /;"	d
GL_ARB_texture_buffer_range	./GL/glew.h	/^#define GL_ARB_texture_buffer_range /;"	d
GL_ARB_texture_compression	./GL/glew.h	/^#define GL_ARB_texture_compression /;"	d
GL_ARB_texture_compression_bptc	./GL/glew.h	/^#define GL_ARB_texture_compression_bptc /;"	d
GL_ARB_texture_compression_rgtc	./GL/glew.h	/^#define GL_ARB_texture_compression_rgtc /;"	d
GL_ARB_texture_cube_map	./GL/glew.h	/^#define GL_ARB_texture_cube_map /;"	d
GL_ARB_texture_cube_map_array	./GL/glew.h	/^#define GL_ARB_texture_cube_map_array /;"	d
GL_ARB_texture_env_add	./GL/glew.h	/^#define GL_ARB_texture_env_add /;"	d
GL_ARB_texture_env_combine	./GL/glew.h	/^#define GL_ARB_texture_env_combine /;"	d
GL_ARB_texture_env_crossbar	./GL/glew.h	/^#define GL_ARB_texture_env_crossbar /;"	d
GL_ARB_texture_env_dot3	./GL/glew.h	/^#define GL_ARB_texture_env_dot3 /;"	d
GL_ARB_texture_filter_anisotropic	./GL/glew.h	/^#define GL_ARB_texture_filter_anisotropic /;"	d
GL_ARB_texture_filter_minmax	./GL/glew.h	/^#define GL_ARB_texture_filter_minmax /;"	d
GL_ARB_texture_float	./GL/glew.h	/^#define GL_ARB_texture_float /;"	d
GL_ARB_texture_gather	./GL/glew.h	/^#define GL_ARB_texture_gather /;"	d
GL_ARB_texture_mirror_clamp_to_edge	./GL/glew.h	/^#define GL_ARB_texture_mirror_clamp_to_edge /;"	d
GL_ARB_texture_mirrored_repeat	./GL/glew.h	/^#define GL_ARB_texture_mirrored_repeat /;"	d
GL_ARB_texture_multisample	./GL/glew.h	/^#define GL_ARB_texture_multisample /;"	d
GL_ARB_texture_non_power_of_two	./GL/glew.h	/^#define GL_ARB_texture_non_power_of_two /;"	d
GL_ARB_texture_query_levels	./GL/glew.h	/^#define GL_ARB_texture_query_levels /;"	d
GL_ARB_texture_query_lod	./GL/glew.h	/^#define GL_ARB_texture_query_lod /;"	d
GL_ARB_texture_rectangle	./GL/glew.h	/^#define GL_ARB_texture_rectangle /;"	d
GL_ARB_texture_rg	./GL/glew.h	/^#define GL_ARB_texture_rg /;"	d
GL_ARB_texture_rgb10_a2ui	./GL/glew.h	/^#define GL_ARB_texture_rgb10_a2ui /;"	d
GL_ARB_texture_stencil8	./GL/glew.h	/^#define GL_ARB_texture_stencil8 /;"	d
GL_ARB_texture_storage	./GL/glew.h	/^#define GL_ARB_texture_storage /;"	d
GL_ARB_texture_storage_multisample	./GL/glew.h	/^#define GL_ARB_texture_storage_multisample /;"	d
GL_ARB_texture_swizzle	./GL/glew.h	/^#define GL_ARB_texture_swizzle /;"	d
GL_ARB_texture_view	./GL/glew.h	/^#define GL_ARB_texture_view /;"	d
GL_ARB_timer_query	./GL/glew.h	/^#define GL_ARB_timer_query /;"	d
GL_ARB_transform_feedback2	./GL/glew.h	/^#define GL_ARB_transform_feedback2 /;"	d
GL_ARB_transform_feedback3	./GL/glew.h	/^#define GL_ARB_transform_feedback3 /;"	d
GL_ARB_transform_feedback_instanced	./GL/glew.h	/^#define GL_ARB_transform_feedback_instanced /;"	d
GL_ARB_transform_feedback_overflow_query	./GL/glew.h	/^#define GL_ARB_transform_feedback_overflow_query /;"	d
GL_ARB_transpose_matrix	./GL/glew.h	/^#define GL_ARB_transpose_matrix /;"	d
GL_ARB_uniform_buffer_object	./GL/glew.h	/^#define GL_ARB_uniform_buffer_object /;"	d
GL_ARB_vertex_array_bgra	./GL/glew.h	/^#define GL_ARB_vertex_array_bgra /;"	d
GL_ARB_vertex_array_object	./GL/glew.h	/^#define GL_ARB_vertex_array_object /;"	d
GL_ARB_vertex_attrib_64bit	./GL/glew.h	/^#define GL_ARB_vertex_attrib_64bit /;"	d
GL_ARB_vertex_attrib_binding	./GL/glew.h	/^#define GL_ARB_vertex_attrib_binding /;"	d
GL_ARB_vertex_blend	./GL/glew.h	/^#define GL_ARB_vertex_blend /;"	d
GL_ARB_vertex_buffer_object	./GL/glew.h	/^#define GL_ARB_vertex_buffer_object /;"	d
GL_ARB_vertex_program	./GL/glew.h	/^#define GL_ARB_vertex_program /;"	d
GL_ARB_vertex_shader	./GL/glew.h	/^#define GL_ARB_vertex_shader /;"	d
GL_ARB_vertex_type_10f_11f_11f_rev	./GL/glew.h	/^#define GL_ARB_vertex_type_10f_11f_11f_rev /;"	d
GL_ARB_vertex_type_2_10_10_10_rev	./GL/glew.h	/^#define GL_ARB_vertex_type_2_10_10_10_rev /;"	d
GL_ARB_viewport_array	./GL/glew.h	/^#define GL_ARB_viewport_array /;"	d
GL_ARB_window_pos	./GL/glew.h	/^#define GL_ARB_window_pos /;"	d
GL_ARC_TO_NV	./GL/glew.h	/^#define GL_ARC_TO_NV /;"	d
GL_ARM_mali_program_binary	./GL/glew.h	/^#define GL_ARM_mali_program_binary /;"	d
GL_ARM_mali_shader_binary	./GL/glew.h	/^#define GL_ARM_mali_shader_binary /;"	d
GL_ARM_rgba8	./GL/glew.h	/^#define GL_ARM_rgba8 /;"	d
GL_ARM_shader_framebuffer_fetch	./GL/glew.h	/^#define GL_ARM_shader_framebuffer_fetch /;"	d
GL_ARM_shader_framebuffer_fetch_depth_stencil	./GL/glew.h	/^#define GL_ARM_shader_framebuffer_fetch_depth_stencil /;"	d
GL_ARM_texture_unnormalized_coordinates	./GL/glew.h	/^#define GL_ARM_texture_unnormalized_coordinates /;"	d
GL_ARRAY_BUFFER	./GL/glew.h	/^#define GL_ARRAY_BUFFER /;"	d
GL_ARRAY_BUFFER_ARB	./GL/glew.h	/^#define GL_ARRAY_BUFFER_ARB /;"	d
GL_ARRAY_BUFFER_BINDING	./GL/glew.h	/^#define GL_ARRAY_BUFFER_BINDING /;"	d
GL_ARRAY_BUFFER_BINDING_ARB	./GL/glew.h	/^#define GL_ARRAY_BUFFER_BINDING_ARB /;"	d
GL_ARRAY_ELEMENT_LOCK_COUNT_EXT	./GL/glew.h	/^#define GL_ARRAY_ELEMENT_LOCK_COUNT_EXT /;"	d
GL_ARRAY_ELEMENT_LOCK_FIRST_EXT	./GL/glew.h	/^#define GL_ARRAY_ELEMENT_LOCK_FIRST_EXT /;"	d
GL_ARRAY_OBJECT_BUFFER_ATI	./GL/glew.h	/^#define GL_ARRAY_OBJECT_BUFFER_ATI /;"	d
GL_ARRAY_OBJECT_OFFSET_ATI	./GL/glew.h	/^#define GL_ARRAY_OBJECT_OFFSET_ATI /;"	d
GL_ARRAY_SIZE	./GL/glew.h	/^#define GL_ARRAY_SIZE /;"	d
GL_ARRAY_STRIDE	./GL/glew.h	/^#define GL_ARRAY_STRIDE /;"	d
GL_ASYNC_DRAW_PIXELS_SGIX	./GL/glew.h	/^#define GL_ASYNC_DRAW_PIXELS_SGIX /;"	d
GL_ASYNC_HISTOGRAM_SGIX	./GL/glew.h	/^#define GL_ASYNC_HISTOGRAM_SGIX /;"	d
GL_ASYNC_MARKER_SGIX	./GL/glew.h	/^#define GL_ASYNC_MARKER_SGIX /;"	d
GL_ASYNC_READ_PIXELS_SGIX	./GL/glew.h	/^#define GL_ASYNC_READ_PIXELS_SGIX /;"	d
GL_ASYNC_TEX_IMAGE_SGIX	./GL/glew.h	/^#define GL_ASYNC_TEX_IMAGE_SGIX /;"	d
GL_ATC_RGBA_EXPLICIT_ALPHA_AMD	./GL/glew.h	/^#define GL_ATC_RGBA_EXPLICIT_ALPHA_AMD /;"	d
GL_ATC_RGBA_INTERPOLATED_ALPHA_AMD	./GL/glew.h	/^#define GL_ATC_RGBA_INTERPOLATED_ALPHA_AMD /;"	d
GL_ATC_RGB_AMD	./GL/glew.h	/^#define GL_ATC_RGB_AMD /;"	d
GL_ATIX_point_sprites	./GL/glew.h	/^#define GL_ATIX_point_sprites /;"	d
GL_ATIX_texture_env_combine3	./GL/glew.h	/^#define GL_ATIX_texture_env_combine3 /;"	d
GL_ATIX_texture_env_route	./GL/glew.h	/^#define GL_ATIX_texture_env_route /;"	d
GL_ATIX_vertex_shader_output_point_size	./GL/glew.h	/^#define GL_ATIX_vertex_shader_output_point_size /;"	d
GL_ATI_draw_buffers	./GL/glew.h	/^#define GL_ATI_draw_buffers /;"	d
GL_ATI_element_array	./GL/glew.h	/^#define GL_ATI_element_array /;"	d
GL_ATI_envmap_bumpmap	./GL/glew.h	/^#define GL_ATI_envmap_bumpmap /;"	d
GL_ATI_fragment_shader	./GL/glew.h	/^#define GL_ATI_fragment_shader /;"	d
GL_ATI_map_object_buffer	./GL/glew.h	/^#define GL_ATI_map_object_buffer /;"	d
GL_ATI_meminfo	./GL/glew.h	/^#define GL_ATI_meminfo /;"	d
GL_ATI_pn_triangles	./GL/glew.h	/^#define GL_ATI_pn_triangles /;"	d
GL_ATI_separate_stencil	./GL/glew.h	/^#define GL_ATI_separate_stencil /;"	d
GL_ATI_shader_texture_lod	./GL/glew.h	/^#define GL_ATI_shader_texture_lod /;"	d
GL_ATI_text_fragment_shader	./GL/glew.h	/^#define GL_ATI_text_fragment_shader /;"	d
GL_ATI_texture_compression_3dc	./GL/glew.h	/^#define GL_ATI_texture_compression_3dc /;"	d
GL_ATI_texture_env_combine3	./GL/glew.h	/^#define GL_ATI_texture_env_combine3 /;"	d
GL_ATI_texture_float	./GL/glew.h	/^#define GL_ATI_texture_float /;"	d
GL_ATI_texture_mirror_once	./GL/glew.h	/^#define GL_ATI_texture_mirror_once /;"	d
GL_ATI_vertex_array_object	./GL/glew.h	/^#define GL_ATI_vertex_array_object /;"	d
GL_ATI_vertex_attrib_array_object	./GL/glew.h	/^#define GL_ATI_vertex_attrib_array_object /;"	d
GL_ATI_vertex_streams	./GL/glew.h	/^#define GL_ATI_vertex_streams /;"	d
GL_ATOMIC_COUNTER_BARRIER_BIT	./GL/glew.h	/^#define GL_ATOMIC_COUNTER_BARRIER_BIT /;"	d
GL_ATOMIC_COUNTER_BARRIER_BIT_EXT	./GL/glew.h	/^#define GL_ATOMIC_COUNTER_BARRIER_BIT_EXT /;"	d
GL_ATOMIC_COUNTER_BUFFER	./GL/glew.h	/^#define GL_ATOMIC_COUNTER_BUFFER /;"	d
GL_ATOMIC_COUNTER_BUFFER_ACTIVE_ATOMIC_COUNTERS	./GL/glew.h	/^#define GL_ATOMIC_COUNTER_BUFFER_ACTIVE_ATOMIC_COUNTERS /;"	d
GL_ATOMIC_COUNTER_BUFFER_ACTIVE_ATOMIC_COUNTER_INDICES	./GL/glew.h	/^#define GL_ATOMIC_COUNTER_BUFFER_ACTIVE_ATOMIC_COUNTER_INDICES /;"	d
GL_ATOMIC_COUNTER_BUFFER_BINDING	./GL/glew.h	/^#define GL_ATOMIC_COUNTER_BUFFER_BINDING /;"	d
GL_ATOMIC_COUNTER_BUFFER_DATA_SIZE	./GL/glew.h	/^#define GL_ATOMIC_COUNTER_BUFFER_DATA_SIZE /;"	d
GL_ATOMIC_COUNTER_BUFFER_INDEX	./GL/glew.h	/^#define GL_ATOMIC_COUNTER_BUFFER_INDEX /;"	d
GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_COMPUTE_SHADER	./GL/glew.h	/^#define GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_COMPUTE_SHADER /;"	d
GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_FRAGMENT_SHADER	./GL/glew.h	/^#define GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_FRAGMENT_SHADER /;"	d
GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_GEOMETRY_SHADER	./GL/glew.h	/^#define GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_GEOMETRY_SHADER /;"	d
GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_MESH_SHADER_NV	./GL/glew.h	/^#define GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_MESH_SHADER_NV /;"	d
GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_TASK_SHADER_NV	./GL/glew.h	/^#define GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_TASK_SHADER_NV /;"	d
GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_TESS_CONTROL_SHADER	./GL/glew.h	/^#define GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_TESS_CONTROL_SHADER /;"	d
GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_TESS_EVALUATION_SHADER	./GL/glew.h	/^#define GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_TESS_EVALUATION_SHADER /;"	d
GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_VERTEX_SHADER	./GL/glew.h	/^#define GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_VERTEX_SHADER /;"	d
GL_ATOMIC_COUNTER_BUFFER_SIZE	./GL/glew.h	/^#define GL_ATOMIC_COUNTER_BUFFER_SIZE /;"	d
GL_ATOMIC_COUNTER_BUFFER_START	./GL/glew.h	/^#define GL_ATOMIC_COUNTER_BUFFER_START /;"	d
GL_ATTACHED_MEMORY_OBJECT_NV	./GL/glew.h	/^#define GL_ATTACHED_MEMORY_OBJECT_NV /;"	d
GL_ATTACHED_MEMORY_OFFSET_NV	./GL/glew.h	/^#define GL_ATTACHED_MEMORY_OFFSET_NV /;"	d
GL_ATTACHED_SHADERS	./GL/glew.h	/^#define GL_ATTACHED_SHADERS /;"	d
GL_ATTENUATION_EXT	./GL/glew.h	/^#define GL_ATTENUATION_EXT /;"	d
GL_ATTRIBUTE_ADDRESS_COMMAND_NV	./GL/glew.h	/^#define GL_ATTRIBUTE_ADDRESS_COMMAND_NV /;"	d
GL_ATTRIB_ARRAY_POINTER_NV	./GL/glew.h	/^#define GL_ATTRIB_ARRAY_POINTER_NV /;"	d
GL_ATTRIB_ARRAY_SIZE_NV	./GL/glew.h	/^#define GL_ATTRIB_ARRAY_SIZE_NV /;"	d
GL_ATTRIB_ARRAY_STRIDE_NV	./GL/glew.h	/^#define GL_ATTRIB_ARRAY_STRIDE_NV /;"	d
GL_ATTRIB_ARRAY_TYPE_NV	./GL/glew.h	/^#define GL_ATTRIB_ARRAY_TYPE_NV /;"	d
GL_ATTRIB_STACK_DEPTH	./GL/glew.h	/^#define GL_ATTRIB_STACK_DEPTH /;"	d
GL_AUTO_GENERATE_MIPMAP	./GL/glew.h	/^#define GL_AUTO_GENERATE_MIPMAP /;"	d
GL_AUTO_NORMAL	./GL/glew.h	/^#define GL_AUTO_NORMAL /;"	d
GL_AUX0	./GL/glew.h	/^#define GL_AUX0 /;"	d
GL_AUX1	./GL/glew.h	/^#define GL_AUX1 /;"	d
GL_AUX2	./GL/glew.h	/^#define GL_AUX2 /;"	d
GL_AUX3	./GL/glew.h	/^#define GL_AUX3 /;"	d
GL_AUX_BUFFERS	./GL/glew.h	/^#define GL_AUX_BUFFERS /;"	d
GL_AUX_DEPTH_STENCIL_APPLE	./GL/glew.h	/^#define GL_AUX_DEPTH_STENCIL_APPLE /;"	d
GL_AVERAGE_EXT	./GL/glew.h	/^#define GL_AVERAGE_EXT /;"	d
GL_BACK	./GL/glew.h	/^#define GL_BACK /;"	d
GL_BACK_LEFT	./GL/glew.h	/^#define GL_BACK_LEFT /;"	d
GL_BACK_NORMALS_HINT_PGI	./GL/glew.h	/^#define GL_BACK_NORMALS_HINT_PGI /;"	d
GL_BACK_PRIMARY_COLOR_NV	./GL/glew.h	/^#define GL_BACK_PRIMARY_COLOR_NV /;"	d
GL_BACK_RIGHT	./GL/glew.h	/^#define GL_BACK_RIGHT /;"	d
GL_BACK_SECONDARY_COLOR_NV	./GL/glew.h	/^#define GL_BACK_SECONDARY_COLOR_NV /;"	d
GL_BALI_DEPTH_PASS_INSTRUMENT	./GL/glew.h	/^#define GL_BALI_DEPTH_PASS_INSTRUMENT /;"	d
GL_BALI_FRAGMENTS_GENERATED_INSTRUMENT	./GL/glew.h	/^#define GL_BALI_FRAGMENTS_GENERATED_INSTRUMENT /;"	d
GL_BALI_NUM_PRIMS_CLIPPED_INSTRUMENT	./GL/glew.h	/^#define GL_BALI_NUM_PRIMS_CLIPPED_INSTRUMENT /;"	d
GL_BALI_NUM_PRIMS_CLIP_RESULT_INSTRUMENT	./GL/glew.h	/^#define GL_BALI_NUM_PRIMS_CLIP_RESULT_INSTRUMENT /;"	d
GL_BALI_NUM_PRIMS_REJECT_INSTRUMENT	./GL/glew.h	/^#define GL_BALI_NUM_PRIMS_REJECT_INSTRUMENT /;"	d
GL_BALI_NUM_TRIS_CULLED_INSTRUMENT	./GL/glew.h	/^#define GL_BALI_NUM_TRIS_CULLED_INSTRUMENT /;"	d
GL_BALI_R_CHIP_COUNT	./GL/glew.h	/^#define GL_BALI_R_CHIP_COUNT /;"	d
GL_BEVEL_NV	./GL/glew.h	/^#define GL_BEVEL_NV /;"	d
GL_BGR	./GL/glew.h	/^#define GL_BGR /;"	d
GL_BGRA	./GL/glew.h	/^#define GL_BGRA /;"	d
GL_BGRA8_EXT	./GL/glew.h	/^#define GL_BGRA8_EXT /;"	d
GL_BGRA_EXT	./GL/glew.h	/^#define GL_BGRA_EXT /;"	d
GL_BGRA_IMG	./GL/glew.h	/^#define GL_BGRA_IMG /;"	d
GL_BGRA_INTEGER	./GL/glew.h	/^#define GL_BGRA_INTEGER /;"	d
GL_BGRA_INTEGER_EXT	./GL/glew.h	/^#define GL_BGRA_INTEGER_EXT /;"	d
GL_BGR_EXT	./GL/glew.h	/^#define GL_BGR_EXT /;"	d
GL_BGR_INTEGER	./GL/glew.h	/^#define GL_BGR_INTEGER /;"	d
GL_BGR_INTEGER_EXT	./GL/glew.h	/^#define GL_BGR_INTEGER_EXT /;"	d
GL_BGR_NV	./GL/glew.h	/^#define GL_BGR_NV /;"	d
GL_BIAS_BIT_ATI	./GL/glew.h	/^#define GL_BIAS_BIT_ATI /;"	d
GL_BIAS_BY_NEGATIVE_ONE_HALF_NV	./GL/glew.h	/^#define GL_BIAS_BY_NEGATIVE_ONE_HALF_NV /;"	d
GL_BINNING_CONTROL_HINT_QCOM	./GL/glew.h	/^#define GL_BINNING_CONTROL_HINT_QCOM /;"	d
GL_BINORMAL_ARRAY_EXT	./GL/glew.h	/^#define GL_BINORMAL_ARRAY_EXT /;"	d
GL_BINORMAL_ARRAY_POINTER_EXT	./GL/glew.h	/^#define GL_BINORMAL_ARRAY_POINTER_EXT /;"	d
GL_BINORMAL_ARRAY_STRIDE_EXT	./GL/glew.h	/^#define GL_BINORMAL_ARRAY_STRIDE_EXT /;"	d
GL_BINORMAL_ARRAY_TYPE_EXT	./GL/glew.h	/^#define GL_BINORMAL_ARRAY_TYPE_EXT /;"	d
GL_BITMAP	./GL/glew.h	/^#define GL_BITMAP /;"	d
GL_BITMAP_TOKEN	./GL/glew.h	/^#define GL_BITMAP_TOKEN /;"	d
GL_BLACKHOLE_RENDER_INTEL	./GL/glew.h	/^#define GL_BLACKHOLE_RENDER_INTEL /;"	d
GL_BLEND	./GL/glew.h	/^#define GL_BLEND /;"	d
GL_BLEND_ADVANCED_COHERENT_KHR	./GL/glew.h	/^#define GL_BLEND_ADVANCED_COHERENT_KHR /;"	d
GL_BLEND_ADVANCED_COHERENT_NV	./GL/glew.h	/^#define GL_BLEND_ADVANCED_COHERENT_NV /;"	d
GL_BLEND_COLOR	./GL/glew.h	/^#define GL_BLEND_COLOR /;"	d
GL_BLEND_COLOR_COMMAND_NV	./GL/glew.h	/^#define GL_BLEND_COLOR_COMMAND_NV /;"	d
GL_BLEND_COLOR_EXT	./GL/glew.h	/^#define GL_BLEND_COLOR_EXT /;"	d
GL_BLEND_DST	./GL/glew.h	/^#define GL_BLEND_DST /;"	d
GL_BLEND_DST_ALPHA	./GL/glew.h	/^#define GL_BLEND_DST_ALPHA /;"	d
GL_BLEND_DST_ALPHA_EXT	./GL/glew.h	/^#define GL_BLEND_DST_ALPHA_EXT /;"	d
GL_BLEND_DST_ALPHA_OES	./GL/glew.h	/^#define GL_BLEND_DST_ALPHA_OES /;"	d
GL_BLEND_DST_RGB	./GL/glew.h	/^#define GL_BLEND_DST_RGB /;"	d
GL_BLEND_DST_RGB_EXT	./GL/glew.h	/^#define GL_BLEND_DST_RGB_EXT /;"	d
GL_BLEND_DST_RGB_OES	./GL/glew.h	/^#define GL_BLEND_DST_RGB_OES /;"	d
GL_BLEND_EQUATION	./GL/glew.h	/^#define GL_BLEND_EQUATION /;"	d
GL_BLEND_EQUATION_ALPHA	./GL/glew.h	/^#define GL_BLEND_EQUATION_ALPHA /;"	d
GL_BLEND_EQUATION_ALPHA_EXT	./GL/glew.h	/^#define GL_BLEND_EQUATION_ALPHA_EXT /;"	d
GL_BLEND_EQUATION_ALPHA_OES	./GL/glew.h	/^#define GL_BLEND_EQUATION_ALPHA_OES /;"	d
GL_BLEND_EQUATION_EXT	./GL/glew.h	/^#define GL_BLEND_EQUATION_EXT /;"	d
GL_BLEND_EQUATION_OES	./GL/glew.h	/^#define GL_BLEND_EQUATION_OES /;"	d
GL_BLEND_EQUATION_RGB	./GL/glew.h	/^#define GL_BLEND_EQUATION_RGB /;"	d
GL_BLEND_EQUATION_RGB_EXT	./GL/glew.h	/^#define GL_BLEND_EQUATION_RGB_EXT /;"	d
GL_BLEND_EQUATION_RGB_OES	./GL/glew.h	/^#define GL_BLEND_EQUATION_RGB_OES /;"	d
GL_BLEND_OVERLAP_NV	./GL/glew.h	/^#define GL_BLEND_OVERLAP_NV /;"	d
GL_BLEND_PREMULTIPLIED_SRC_NV	./GL/glew.h	/^#define GL_BLEND_PREMULTIPLIED_SRC_NV /;"	d
GL_BLEND_SRC	./GL/glew.h	/^#define GL_BLEND_SRC /;"	d
GL_BLEND_SRC_ALPHA	./GL/glew.h	/^#define GL_BLEND_SRC_ALPHA /;"	d
GL_BLEND_SRC_ALPHA_EXT	./GL/glew.h	/^#define GL_BLEND_SRC_ALPHA_EXT /;"	d
GL_BLEND_SRC_ALPHA_OES	./GL/glew.h	/^#define GL_BLEND_SRC_ALPHA_OES /;"	d
GL_BLEND_SRC_RGB	./GL/glew.h	/^#define GL_BLEND_SRC_RGB /;"	d
GL_BLEND_SRC_RGB_EXT	./GL/glew.h	/^#define GL_BLEND_SRC_RGB_EXT /;"	d
GL_BLEND_SRC_RGB_OES	./GL/glew.h	/^#define GL_BLEND_SRC_RGB_OES /;"	d
GL_BLOCK_INDEX	./GL/glew.h	/^#define GL_BLOCK_INDEX /;"	d
GL_BLUE	./GL/glew.h	/^#define GL_BLUE /;"	d
GL_BLUE_BIAS	./GL/glew.h	/^#define GL_BLUE_BIAS /;"	d
GL_BLUE_BITS	./GL/glew.h	/^#define GL_BLUE_BITS /;"	d
GL_BLUE_BIT_ATI	./GL/glew.h	/^#define GL_BLUE_BIT_ATI /;"	d
GL_BLUE_INTEGER	./GL/glew.h	/^#define GL_BLUE_INTEGER /;"	d
GL_BLUE_INTEGER_EXT	./GL/glew.h	/^#define GL_BLUE_INTEGER_EXT /;"	d
GL_BLUE_MAX_CLAMP_INGR	./GL/glew.h	/^#define GL_BLUE_MAX_CLAMP_INGR /;"	d
GL_BLUE_MIN_CLAMP_INGR	./GL/glew.h	/^#define GL_BLUE_MIN_CLAMP_INGR /;"	d
GL_BLUE_NV	./GL/glew.h	/^#define GL_BLUE_NV /;"	d
GL_BLUE_SCALE	./GL/glew.h	/^#define GL_BLUE_SCALE /;"	d
GL_BOLD_BIT_NV	./GL/glew.h	/^#define GL_BOLD_BIT_NV /;"	d
GL_BOOL	./GL/glew.h	/^#define GL_BOOL /;"	d
GL_BOOL_ARB	./GL/glew.h	/^#define GL_BOOL_ARB /;"	d
GL_BOOL_VEC2	./GL/glew.h	/^#define GL_BOOL_VEC2 /;"	d
GL_BOOL_VEC2_ARB	./GL/glew.h	/^#define GL_BOOL_VEC2_ARB /;"	d
GL_BOOL_VEC3	./GL/glew.h	/^#define GL_BOOL_VEC3 /;"	d
GL_BOOL_VEC3_ARB	./GL/glew.h	/^#define GL_BOOL_VEC3_ARB /;"	d
GL_BOOL_VEC4	./GL/glew.h	/^#define GL_BOOL_VEC4 /;"	d
GL_BOOL_VEC4_ARB	./GL/glew.h	/^#define GL_BOOL_VEC4_ARB /;"	d
GL_BOUNDING_BOX_NV	./GL/glew.h	/^#define GL_BOUNDING_BOX_NV /;"	d
GL_BOUNDING_BOX_OF_BOUNDING_BOXES_NV	./GL/glew.h	/^#define GL_BOUNDING_BOX_OF_BOUNDING_BOXES_NV /;"	d
GL_BUFFER	./GL/glew.h	/^#define GL_BUFFER /;"	d
GL_BUFFER_ACCESS	./GL/glew.h	/^#define GL_BUFFER_ACCESS /;"	d
GL_BUFFER_ACCESS_ARB	./GL/glew.h	/^#define GL_BUFFER_ACCESS_ARB /;"	d
GL_BUFFER_ACCESS_FLAGS	./GL/glew.h	/^#define GL_BUFFER_ACCESS_FLAGS /;"	d
GL_BUFFER_ACCESS_OES	./GL/glew.h	/^#define GL_BUFFER_ACCESS_OES /;"	d
GL_BUFFER_BINDING	./GL/glew.h	/^#define GL_BUFFER_BINDING /;"	d
GL_BUFFER_DATA_SIZE	./GL/glew.h	/^#define GL_BUFFER_DATA_SIZE /;"	d
GL_BUFFER_FLUSHING_UNMAP_APPLE	./GL/glew.h	/^#define GL_BUFFER_FLUSHING_UNMAP_APPLE /;"	d
GL_BUFFER_GPU_ADDRESS_NV	./GL/glew.h	/^#define GL_BUFFER_GPU_ADDRESS_NV /;"	d
GL_BUFFER_IMMUTABLE_STORAGE	./GL/glew.h	/^#define GL_BUFFER_IMMUTABLE_STORAGE /;"	d
GL_BUFFER_IMMUTABLE_STORAGE_EXT	./GL/glew.h	/^#define GL_BUFFER_IMMUTABLE_STORAGE_EXT /;"	d
GL_BUFFER_MAPPED	./GL/glew.h	/^#define GL_BUFFER_MAPPED /;"	d
GL_BUFFER_MAPPED_ARB	./GL/glew.h	/^#define GL_BUFFER_MAPPED_ARB /;"	d
GL_BUFFER_MAPPED_OES	./GL/glew.h	/^#define GL_BUFFER_MAPPED_OES /;"	d
GL_BUFFER_MAP_LENGTH	./GL/glew.h	/^#define GL_BUFFER_MAP_LENGTH /;"	d
GL_BUFFER_MAP_OFFSET	./GL/glew.h	/^#define GL_BUFFER_MAP_OFFSET /;"	d
GL_BUFFER_MAP_POINTER	./GL/glew.h	/^#define GL_BUFFER_MAP_POINTER /;"	d
GL_BUFFER_MAP_POINTER_ARB	./GL/glew.h	/^#define GL_BUFFER_MAP_POINTER_ARB /;"	d
GL_BUFFER_MAP_POINTER_OES	./GL/glew.h	/^#define GL_BUFFER_MAP_POINTER_OES /;"	d
GL_BUFFER_OBJECT_APPLE	./GL/glew.h	/^#define GL_BUFFER_OBJECT_APPLE /;"	d
GL_BUFFER_OBJECT_EXT	./GL/glew.h	/^#define GL_BUFFER_OBJECT_EXT /;"	d
GL_BUFFER_SERIALIZED_MODIFY_APPLE	./GL/glew.h	/^#define GL_BUFFER_SERIALIZED_MODIFY_APPLE /;"	d
GL_BUFFER_SIZE	./GL/glew.h	/^#define GL_BUFFER_SIZE /;"	d
GL_BUFFER_SIZE_ARB	./GL/glew.h	/^#define GL_BUFFER_SIZE_ARB /;"	d
GL_BUFFER_STORAGE_FLAGS	./GL/glew.h	/^#define GL_BUFFER_STORAGE_FLAGS /;"	d
GL_BUFFER_STORAGE_FLAGS_EXT	./GL/glew.h	/^#define GL_BUFFER_STORAGE_FLAGS_EXT /;"	d
GL_BUFFER_UPDATE_BARRIER_BIT	./GL/glew.h	/^#define GL_BUFFER_UPDATE_BARRIER_BIT /;"	d
GL_BUFFER_UPDATE_BARRIER_BIT_EXT	./GL/glew.h	/^#define GL_BUFFER_UPDATE_BARRIER_BIT_EXT /;"	d
GL_BUFFER_USAGE	./GL/glew.h	/^#define GL_BUFFER_USAGE /;"	d
GL_BUFFER_USAGE_ARB	./GL/glew.h	/^#define GL_BUFFER_USAGE_ARB /;"	d
GL_BUFFER_VARIABLE	./GL/glew.h	/^#define GL_BUFFER_VARIABLE /;"	d
GL_BUMP_ENVMAP_ATI	./GL/glew.h	/^#define GL_BUMP_ENVMAP_ATI /;"	d
GL_BUMP_NUM_TEX_UNITS_ATI	./GL/glew.h	/^#define GL_BUMP_NUM_TEX_UNITS_ATI /;"	d
GL_BUMP_ROT_MATRIX_ATI	./GL/glew.h	/^#define GL_BUMP_ROT_MATRIX_ATI /;"	d
GL_BUMP_ROT_MATRIX_SIZE_ATI	./GL/glew.h	/^#define GL_BUMP_ROT_MATRIX_SIZE_ATI /;"	d
GL_BUMP_TARGET_ATI	./GL/glew.h	/^#define GL_BUMP_TARGET_ATI /;"	d
GL_BUMP_TEX_UNITS_ATI	./GL/glew.h	/^#define GL_BUMP_TEX_UNITS_ATI /;"	d
GL_BYTE	./GL/glew.h	/^#define GL_BYTE /;"	d
GL_C3F_V3F	./GL/glew.h	/^#define GL_C3F_V3F /;"	d
GL_C4F_N3F_V3F	./GL/glew.h	/^#define GL_C4F_N3F_V3F /;"	d
GL_C4UB_V2F	./GL/glew.h	/^#define GL_C4UB_V2F /;"	d
GL_C4UB_V3F	./GL/glew.h	/^#define GL_C4UB_V3F /;"	d
GL_CACHE_REGAL	./GL/glew.h	/^#define GL_CACHE_REGAL /;"	d
GL_CAVEAT_SUPPORT	./GL/glew.h	/^#define GL_CAVEAT_SUPPORT /;"	d
GL_CCW	./GL/glew.h	/^#define GL_CCW /;"	d
GL_CG_FRAGMENT_SHADER_EXT	./GL/glew.h	/^#define GL_CG_FRAGMENT_SHADER_EXT /;"	d
GL_CG_VERTEX_SHADER_EXT	./GL/glew.h	/^#define GL_CG_VERTEX_SHADER_EXT /;"	d
GL_CIRCULAR_CCW_ARC_TO_NV	./GL/glew.h	/^#define GL_CIRCULAR_CCW_ARC_TO_NV /;"	d
GL_CIRCULAR_CW_ARC_TO_NV	./GL/glew.h	/^#define GL_CIRCULAR_CW_ARC_TO_NV /;"	d
GL_CIRCULAR_TANGENT_ARC_TO_NV	./GL/glew.h	/^#define GL_CIRCULAR_TANGENT_ARC_TO_NV /;"	d
GL_CLAMP	./GL/glew.h	/^#define GL_CLAMP /;"	d
GL_CLAMP_FRAGMENT_COLOR	./GL/glew.h	/^#define GL_CLAMP_FRAGMENT_COLOR /;"	d
GL_CLAMP_FRAGMENT_COLOR_ARB	./GL/glew.h	/^#define GL_CLAMP_FRAGMENT_COLOR_ARB /;"	d
GL_CLAMP_READ_COLOR	./GL/glew.h	/^#define GL_CLAMP_READ_COLOR /;"	d
GL_CLAMP_READ_COLOR_ARB	./GL/glew.h	/^#define GL_CLAMP_READ_COLOR_ARB /;"	d
GL_CLAMP_TO_BORDER	./GL/glew.h	/^#define GL_CLAMP_TO_BORDER /;"	d
GL_CLAMP_TO_BORDER_ARB	./GL/glew.h	/^#define GL_CLAMP_TO_BORDER_ARB /;"	d
GL_CLAMP_TO_BORDER_EXT	./GL/glew.h	/^#define GL_CLAMP_TO_BORDER_EXT /;"	d
GL_CLAMP_TO_BORDER_NV	./GL/glew.h	/^#define GL_CLAMP_TO_BORDER_NV /;"	d
GL_CLAMP_TO_BORDER_OES	./GL/glew.h	/^#define GL_CLAMP_TO_BORDER_OES /;"	d
GL_CLAMP_TO_BORDER_SGIS	./GL/glew.h	/^#define GL_CLAMP_TO_BORDER_SGIS /;"	d
GL_CLAMP_TO_EDGE	./GL/glew.h	/^#define GL_CLAMP_TO_EDGE /;"	d
GL_CLAMP_TO_EDGE_EXT	./GL/glew.h	/^#define GL_CLAMP_TO_EDGE_EXT /;"	d
GL_CLAMP_TO_EDGE_SGIS	./GL/glew.h	/^#define GL_CLAMP_TO_EDGE_SGIS /;"	d
GL_CLAMP_VERTEX_COLOR	./GL/glew.h	/^#define GL_CLAMP_VERTEX_COLOR /;"	d
GL_CLAMP_VERTEX_COLOR_ARB	./GL/glew.h	/^#define GL_CLAMP_VERTEX_COLOR_ARB /;"	d
GL_CLEAR	./GL/glew.h	/^#define GL_CLEAR /;"	d
GL_CLEAR_BUFFER	./GL/glew.h	/^#define GL_CLEAR_BUFFER /;"	d
GL_CLEAR_TEXTURE	./GL/glew.h	/^#define GL_CLEAR_TEXTURE /;"	d
GL_CLIENT_ACTIVE_TEXTURE	./GL/glew.h	/^#define GL_CLIENT_ACTIVE_TEXTURE /;"	d
GL_CLIENT_ACTIVE_TEXTURE_ARB	./GL/glew.h	/^#define GL_CLIENT_ACTIVE_TEXTURE_ARB /;"	d
GL_CLIENT_ALL_ATTRIB_BITS	./GL/glew.h	/^#define GL_CLIENT_ALL_ATTRIB_BITS /;"	d
GL_CLIENT_ATTRIB_STACK_DEPTH	./GL/glew.h	/^#define GL_CLIENT_ATTRIB_STACK_DEPTH /;"	d
GL_CLIENT_MAPPED_BUFFER_BARRIER_BIT	./GL/glew.h	/^#define GL_CLIENT_MAPPED_BUFFER_BARRIER_BIT /;"	d
GL_CLIENT_MAPPED_BUFFER_BARRIER_BIT_EXT	./GL/glew.h	/^#define GL_CLIENT_MAPPED_BUFFER_BARRIER_BIT_EXT /;"	d
GL_CLIENT_PIXEL_STORE_BIT	./GL/glew.h	/^#define GL_CLIENT_PIXEL_STORE_BIT /;"	d
GL_CLIENT_STORAGE_BIT	./GL/glew.h	/^#define GL_CLIENT_STORAGE_BIT /;"	d
GL_CLIENT_STORAGE_BIT_EXT	./GL/glew.h	/^#define GL_CLIENT_STORAGE_BIT_EXT /;"	d
GL_CLIENT_VERTEX_ARRAY_BIT	./GL/glew.h	/^#define GL_CLIENT_VERTEX_ARRAY_BIT /;"	d
GL_CLIPPING_INPUT_PRIMITIVES	./GL/glew.h	/^#define GL_CLIPPING_INPUT_PRIMITIVES /;"	d
GL_CLIPPING_INPUT_PRIMITIVES_ARB	./GL/glew.h	/^#define GL_CLIPPING_INPUT_PRIMITIVES_ARB /;"	d
GL_CLIPPING_OUTPUT_PRIMITIVES	./GL/glew.h	/^#define GL_CLIPPING_OUTPUT_PRIMITIVES /;"	d
GL_CLIPPING_OUTPUT_PRIMITIVES_ARB	./GL/glew.h	/^#define GL_CLIPPING_OUTPUT_PRIMITIVES_ARB /;"	d
GL_CLIP_DEPTH_MODE	./GL/glew.h	/^#define GL_CLIP_DEPTH_MODE /;"	d
GL_CLIP_DEPTH_MODE_EXT	./GL/glew.h	/^#define GL_CLIP_DEPTH_MODE_EXT /;"	d
GL_CLIP_DISTANCE0	./GL/glew.h	/^#define GL_CLIP_DISTANCE0 /;"	d
GL_CLIP_DISTANCE0_APPLE	./GL/glew.h	/^#define GL_CLIP_DISTANCE0_APPLE /;"	d
GL_CLIP_DISTANCE0_EXT	./GL/glew.h	/^#define GL_CLIP_DISTANCE0_EXT /;"	d
GL_CLIP_DISTANCE1	./GL/glew.h	/^#define GL_CLIP_DISTANCE1 /;"	d
GL_CLIP_DISTANCE1_APPLE	./GL/glew.h	/^#define GL_CLIP_DISTANCE1_APPLE /;"	d
GL_CLIP_DISTANCE1_EXT	./GL/glew.h	/^#define GL_CLIP_DISTANCE1_EXT /;"	d
GL_CLIP_DISTANCE2	./GL/glew.h	/^#define GL_CLIP_DISTANCE2 /;"	d
GL_CLIP_DISTANCE2_APPLE	./GL/glew.h	/^#define GL_CLIP_DISTANCE2_APPLE /;"	d
GL_CLIP_DISTANCE2_EXT	./GL/glew.h	/^#define GL_CLIP_DISTANCE2_EXT /;"	d
GL_CLIP_DISTANCE3	./GL/glew.h	/^#define GL_CLIP_DISTANCE3 /;"	d
GL_CLIP_DISTANCE3_APPLE	./GL/glew.h	/^#define GL_CLIP_DISTANCE3_APPLE /;"	d
GL_CLIP_DISTANCE3_EXT	./GL/glew.h	/^#define GL_CLIP_DISTANCE3_EXT /;"	d
GL_CLIP_DISTANCE4	./GL/glew.h	/^#define GL_CLIP_DISTANCE4 /;"	d
GL_CLIP_DISTANCE4_APPLE	./GL/glew.h	/^#define GL_CLIP_DISTANCE4_APPLE /;"	d
GL_CLIP_DISTANCE4_EXT	./GL/glew.h	/^#define GL_CLIP_DISTANCE4_EXT /;"	d
GL_CLIP_DISTANCE5	./GL/glew.h	/^#define GL_CLIP_DISTANCE5 /;"	d
GL_CLIP_DISTANCE5_APPLE	./GL/glew.h	/^#define GL_CLIP_DISTANCE5_APPLE /;"	d
GL_CLIP_DISTANCE5_EXT	./GL/glew.h	/^#define GL_CLIP_DISTANCE5_EXT /;"	d
GL_CLIP_DISTANCE6_APPLE	./GL/glew.h	/^#define GL_CLIP_DISTANCE6_APPLE /;"	d
GL_CLIP_DISTANCE6_EXT	./GL/glew.h	/^#define GL_CLIP_DISTANCE6_EXT /;"	d
GL_CLIP_DISTANCE7_APPLE	./GL/glew.h	/^#define GL_CLIP_DISTANCE7_APPLE /;"	d
GL_CLIP_DISTANCE7_EXT	./GL/glew.h	/^#define GL_CLIP_DISTANCE7_EXT /;"	d
GL_CLIP_DISTANCE_NV	./GL/glew.h	/^#define GL_CLIP_DISTANCE_NV /;"	d
GL_CLIP_FAR_HINT_PGI	./GL/glew.h	/^#define GL_CLIP_FAR_HINT_PGI /;"	d
GL_CLIP_NEAR_HINT_PGI	./GL/glew.h	/^#define GL_CLIP_NEAR_HINT_PGI /;"	d
GL_CLIP_ORIGIN	./GL/glew.h	/^#define GL_CLIP_ORIGIN /;"	d
GL_CLIP_ORIGIN_EXT	./GL/glew.h	/^#define GL_CLIP_ORIGIN_EXT /;"	d
GL_CLIP_PLANE0	./GL/glew.h	/^#define GL_CLIP_PLANE0 /;"	d
GL_CLIP_PLANE1	./GL/glew.h	/^#define GL_CLIP_PLANE1 /;"	d
GL_CLIP_PLANE2	./GL/glew.h	/^#define GL_CLIP_PLANE2 /;"	d
GL_CLIP_PLANE3	./GL/glew.h	/^#define GL_CLIP_PLANE3 /;"	d
GL_CLIP_PLANE4	./GL/glew.h	/^#define GL_CLIP_PLANE4 /;"	d
GL_CLIP_PLANE5	./GL/glew.h	/^#define GL_CLIP_PLANE5 /;"	d
GL_CLIP_VOLUME_CLIPPING_HINT_EXT	./GL/glew.h	/^#define GL_CLIP_VOLUME_CLIPPING_HINT_EXT /;"	d
GL_CLOSE_PATH_NV	./GL/glew.h	/^#define GL_CLOSE_PATH_NV /;"	d
GL_CMYKA_EXT	./GL/glew.h	/^#define GL_CMYKA_EXT /;"	d
GL_CMYK_EXT	./GL/glew.h	/^#define GL_CMYK_EXT /;"	d
GL_CND0_ATI	./GL/glew.h	/^#define GL_CND0_ATI /;"	d
GL_CND_ATI	./GL/glew.h	/^#define GL_CND_ATI /;"	d
GL_CODE_REGAL	./GL/glew.h	/^#define GL_CODE_REGAL /;"	d
GL_COEFF	./GL/glew.h	/^#define GL_COEFF /;"	d
GL_COLOR	./GL/glew.h	/^#define GL_COLOR /;"	d
GL_COLOR3_BIT_PGI	./GL/glew.h	/^#define GL_COLOR3_BIT_PGI /;"	d
GL_COLOR4_BIT_PGI	./GL/glew.h	/^#define GL_COLOR4_BIT_PGI /;"	d
GL_COLORBURN_KHR	./GL/glew.h	/^#define GL_COLORBURN_KHR /;"	d
GL_COLORBURN_NV	./GL/glew.h	/^#define GL_COLORBURN_NV /;"	d
GL_COLORDODGE_KHR	./GL/glew.h	/^#define GL_COLORDODGE_KHR /;"	d
GL_COLORDODGE_NV	./GL/glew.h	/^#define GL_COLORDODGE_NV /;"	d
GL_COLOR_ALPHA_PAIRING_ATI	./GL/glew.h	/^#define GL_COLOR_ALPHA_PAIRING_ATI /;"	d
GL_COLOR_ARRAY	./GL/glew.h	/^#define GL_COLOR_ARRAY /;"	d
GL_COLOR_ARRAY_ADDRESS_NV	./GL/glew.h	/^#define GL_COLOR_ARRAY_ADDRESS_NV /;"	d
GL_COLOR_ARRAY_BUFFER_BINDING	./GL/glew.h	/^#define GL_COLOR_ARRAY_BUFFER_BINDING /;"	d
GL_COLOR_ARRAY_BUFFER_BINDING_ARB	./GL/glew.h	/^#define GL_COLOR_ARRAY_BUFFER_BINDING_ARB /;"	d
GL_COLOR_ARRAY_COUNT_EXT	./GL/glew.h	/^#define GL_COLOR_ARRAY_COUNT_EXT /;"	d
GL_COLOR_ARRAY_EXT	./GL/glew.h	/^#define GL_COLOR_ARRAY_EXT /;"	d
GL_COLOR_ARRAY_LENGTH_NV	./GL/glew.h	/^#define GL_COLOR_ARRAY_LENGTH_NV /;"	d
GL_COLOR_ARRAY_LIST_IBM	./GL/glew.h	/^#define GL_COLOR_ARRAY_LIST_IBM /;"	d
GL_COLOR_ARRAY_LIST_STRIDE_IBM	./GL/glew.h	/^#define GL_COLOR_ARRAY_LIST_STRIDE_IBM /;"	d
GL_COLOR_ARRAY_PARALLEL_POINTERS_INTEL	./GL/glew.h	/^#define GL_COLOR_ARRAY_PARALLEL_POINTERS_INTEL /;"	d
GL_COLOR_ARRAY_POINTER	./GL/glew.h	/^#define GL_COLOR_ARRAY_POINTER /;"	d
GL_COLOR_ARRAY_POINTER_EXT	./GL/glew.h	/^#define GL_COLOR_ARRAY_POINTER_EXT /;"	d
GL_COLOR_ARRAY_SIZE	./GL/glew.h	/^#define GL_COLOR_ARRAY_SIZE /;"	d
GL_COLOR_ARRAY_SIZE_EXT	./GL/glew.h	/^#define GL_COLOR_ARRAY_SIZE_EXT /;"	d
GL_COLOR_ARRAY_STRIDE	./GL/glew.h	/^#define GL_COLOR_ARRAY_STRIDE /;"	d
GL_COLOR_ARRAY_STRIDE_EXT	./GL/glew.h	/^#define GL_COLOR_ARRAY_STRIDE_EXT /;"	d
GL_COLOR_ARRAY_TYPE	./GL/glew.h	/^#define GL_COLOR_ARRAY_TYPE /;"	d
GL_COLOR_ARRAY_TYPE_EXT	./GL/glew.h	/^#define GL_COLOR_ARRAY_TYPE_EXT /;"	d
GL_COLOR_ATTACHMENT0	./GL/glew.h	/^#define GL_COLOR_ATTACHMENT0 /;"	d
GL_COLOR_ATTACHMENT0_EXT	./GL/glew.h	/^#define GL_COLOR_ATTACHMENT0_EXT /;"	d
GL_COLOR_ATTACHMENT0_NV	./GL/glew.h	/^#define GL_COLOR_ATTACHMENT0_NV /;"	d
GL_COLOR_ATTACHMENT0_OES	./GL/glew.h	/^#define GL_COLOR_ATTACHMENT0_OES /;"	d
GL_COLOR_ATTACHMENT1	./GL/glew.h	/^#define GL_COLOR_ATTACHMENT1 /;"	d
GL_COLOR_ATTACHMENT10	./GL/glew.h	/^#define GL_COLOR_ATTACHMENT10 /;"	d
GL_COLOR_ATTACHMENT10_EXT	./GL/glew.h	/^#define GL_COLOR_ATTACHMENT10_EXT /;"	d
GL_COLOR_ATTACHMENT10_NV	./GL/glew.h	/^#define GL_COLOR_ATTACHMENT10_NV /;"	d
GL_COLOR_ATTACHMENT11	./GL/glew.h	/^#define GL_COLOR_ATTACHMENT11 /;"	d
GL_COLOR_ATTACHMENT11_EXT	./GL/glew.h	/^#define GL_COLOR_ATTACHMENT11_EXT /;"	d
GL_COLOR_ATTACHMENT11_NV	./GL/glew.h	/^#define GL_COLOR_ATTACHMENT11_NV /;"	d
GL_COLOR_ATTACHMENT12	./GL/glew.h	/^#define GL_COLOR_ATTACHMENT12 /;"	d
GL_COLOR_ATTACHMENT12_EXT	./GL/glew.h	/^#define GL_COLOR_ATTACHMENT12_EXT /;"	d
GL_COLOR_ATTACHMENT12_NV	./GL/glew.h	/^#define GL_COLOR_ATTACHMENT12_NV /;"	d
GL_COLOR_ATTACHMENT13	./GL/glew.h	/^#define GL_COLOR_ATTACHMENT13 /;"	d
GL_COLOR_ATTACHMENT13_EXT	./GL/glew.h	/^#define GL_COLOR_ATTACHMENT13_EXT /;"	d
GL_COLOR_ATTACHMENT13_NV	./GL/glew.h	/^#define GL_COLOR_ATTACHMENT13_NV /;"	d
GL_COLOR_ATTACHMENT14	./GL/glew.h	/^#define GL_COLOR_ATTACHMENT14 /;"	d
GL_COLOR_ATTACHMENT14_EXT	./GL/glew.h	/^#define GL_COLOR_ATTACHMENT14_EXT /;"	d
GL_COLOR_ATTACHMENT14_NV	./GL/glew.h	/^#define GL_COLOR_ATTACHMENT14_NV /;"	d
GL_COLOR_ATTACHMENT15	./GL/glew.h	/^#define GL_COLOR_ATTACHMENT15 /;"	d
GL_COLOR_ATTACHMENT15_EXT	./GL/glew.h	/^#define GL_COLOR_ATTACHMENT15_EXT /;"	d
GL_COLOR_ATTACHMENT15_NV	./GL/glew.h	/^#define GL_COLOR_ATTACHMENT15_NV /;"	d
GL_COLOR_ATTACHMENT1_EXT	./GL/glew.h	/^#define GL_COLOR_ATTACHMENT1_EXT /;"	d
GL_COLOR_ATTACHMENT1_NV	./GL/glew.h	/^#define GL_COLOR_ATTACHMENT1_NV /;"	d
GL_COLOR_ATTACHMENT2	./GL/glew.h	/^#define GL_COLOR_ATTACHMENT2 /;"	d
GL_COLOR_ATTACHMENT2_EXT	./GL/glew.h	/^#define GL_COLOR_ATTACHMENT2_EXT /;"	d
GL_COLOR_ATTACHMENT2_NV	./GL/glew.h	/^#define GL_COLOR_ATTACHMENT2_NV /;"	d
GL_COLOR_ATTACHMENT3	./GL/glew.h	/^#define GL_COLOR_ATTACHMENT3 /;"	d
GL_COLOR_ATTACHMENT3_EXT	./GL/glew.h	/^#define GL_COLOR_ATTACHMENT3_EXT /;"	d
GL_COLOR_ATTACHMENT3_NV	./GL/glew.h	/^#define GL_COLOR_ATTACHMENT3_NV /;"	d
GL_COLOR_ATTACHMENT4	./GL/glew.h	/^#define GL_COLOR_ATTACHMENT4 /;"	d
GL_COLOR_ATTACHMENT4_EXT	./GL/glew.h	/^#define GL_COLOR_ATTACHMENT4_EXT /;"	d
GL_COLOR_ATTACHMENT4_NV	./GL/glew.h	/^#define GL_COLOR_ATTACHMENT4_NV /;"	d
GL_COLOR_ATTACHMENT5	./GL/glew.h	/^#define GL_COLOR_ATTACHMENT5 /;"	d
GL_COLOR_ATTACHMENT5_EXT	./GL/glew.h	/^#define GL_COLOR_ATTACHMENT5_EXT /;"	d
GL_COLOR_ATTACHMENT5_NV	./GL/glew.h	/^#define GL_COLOR_ATTACHMENT5_NV /;"	d
GL_COLOR_ATTACHMENT6	./GL/glew.h	/^#define GL_COLOR_ATTACHMENT6 /;"	d
GL_COLOR_ATTACHMENT6_EXT	./GL/glew.h	/^#define GL_COLOR_ATTACHMENT6_EXT /;"	d
GL_COLOR_ATTACHMENT6_NV	./GL/glew.h	/^#define GL_COLOR_ATTACHMENT6_NV /;"	d
GL_COLOR_ATTACHMENT7	./GL/glew.h	/^#define GL_COLOR_ATTACHMENT7 /;"	d
GL_COLOR_ATTACHMENT7_EXT	./GL/glew.h	/^#define GL_COLOR_ATTACHMENT7_EXT /;"	d
GL_COLOR_ATTACHMENT7_NV	./GL/glew.h	/^#define GL_COLOR_ATTACHMENT7_NV /;"	d
GL_COLOR_ATTACHMENT8	./GL/glew.h	/^#define GL_COLOR_ATTACHMENT8 /;"	d
GL_COLOR_ATTACHMENT8_EXT	./GL/glew.h	/^#define GL_COLOR_ATTACHMENT8_EXT /;"	d
GL_COLOR_ATTACHMENT8_NV	./GL/glew.h	/^#define GL_COLOR_ATTACHMENT8_NV /;"	d
GL_COLOR_ATTACHMENT9	./GL/glew.h	/^#define GL_COLOR_ATTACHMENT9 /;"	d
GL_COLOR_ATTACHMENT9_EXT	./GL/glew.h	/^#define GL_COLOR_ATTACHMENT9_EXT /;"	d
GL_COLOR_ATTACHMENT9_NV	./GL/glew.h	/^#define GL_COLOR_ATTACHMENT9_NV /;"	d
GL_COLOR_ATTACHMENT_EXT	./GL/glew.h	/^#define GL_COLOR_ATTACHMENT_EXT /;"	d
GL_COLOR_BUFFER_BIT	./GL/glew.h	/^#define GL_COLOR_BUFFER_BIT /;"	d
GL_COLOR_BUFFER_BIT0_QCOM	./GL/glew.h	/^#define GL_COLOR_BUFFER_BIT0_QCOM /;"	d
GL_COLOR_BUFFER_BIT1_QCOM	./GL/glew.h	/^#define GL_COLOR_BUFFER_BIT1_QCOM /;"	d
GL_COLOR_BUFFER_BIT2_QCOM	./GL/glew.h	/^#define GL_COLOR_BUFFER_BIT2_QCOM /;"	d
GL_COLOR_BUFFER_BIT3_QCOM	./GL/glew.h	/^#define GL_COLOR_BUFFER_BIT3_QCOM /;"	d
GL_COLOR_BUFFER_BIT4_QCOM	./GL/glew.h	/^#define GL_COLOR_BUFFER_BIT4_QCOM /;"	d
GL_COLOR_BUFFER_BIT5_QCOM	./GL/glew.h	/^#define GL_COLOR_BUFFER_BIT5_QCOM /;"	d
GL_COLOR_BUFFER_BIT6_QCOM	./GL/glew.h	/^#define GL_COLOR_BUFFER_BIT6_QCOM /;"	d
GL_COLOR_BUFFER_BIT7_QCOM	./GL/glew.h	/^#define GL_COLOR_BUFFER_BIT7_QCOM /;"	d
GL_COLOR_CLEAR_UNCLAMPED_VALUE_ATI	./GL/wglew.h	/^#define GL_COLOR_CLEAR_UNCLAMPED_VALUE_ATI /;"	d
GL_COLOR_CLEAR_VALUE	./GL/glew.h	/^#define GL_COLOR_CLEAR_VALUE /;"	d
GL_COLOR_COMPONENTS	./GL/glew.h	/^#define GL_COLOR_COMPONENTS /;"	d
GL_COLOR_ENCODING	./GL/glew.h	/^#define GL_COLOR_ENCODING /;"	d
GL_COLOR_EXT	./GL/glew.h	/^#define GL_COLOR_EXT /;"	d
GL_COLOR_FLOAT_APPLE	./GL/glew.h	/^#define GL_COLOR_FLOAT_APPLE /;"	d
GL_COLOR_INDEX	./GL/glew.h	/^#define GL_COLOR_INDEX /;"	d
GL_COLOR_INDEX12_EXT	./GL/glew.h	/^#define GL_COLOR_INDEX12_EXT /;"	d
GL_COLOR_INDEX16_EXT	./GL/glew.h	/^#define GL_COLOR_INDEX16_EXT /;"	d
GL_COLOR_INDEX1_EXT	./GL/glew.h	/^#define GL_COLOR_INDEX1_EXT /;"	d
GL_COLOR_INDEX2_EXT	./GL/glew.h	/^#define GL_COLOR_INDEX2_EXT /;"	d
GL_COLOR_INDEX4_EXT	./GL/glew.h	/^#define GL_COLOR_INDEX4_EXT /;"	d
GL_COLOR_INDEX8_EXT	./GL/glew.h	/^#define GL_COLOR_INDEX8_EXT /;"	d
GL_COLOR_INDEXES	./GL/glew.h	/^#define GL_COLOR_INDEXES /;"	d
GL_COLOR_LOGIC_OP	./GL/glew.h	/^#define GL_COLOR_LOGIC_OP /;"	d
GL_COLOR_MATERIAL	./GL/glew.h	/^#define GL_COLOR_MATERIAL /;"	d
GL_COLOR_MATERIAL_FACE	./GL/glew.h	/^#define GL_COLOR_MATERIAL_FACE /;"	d
GL_COLOR_MATERIAL_PARAMETER	./GL/glew.h	/^#define GL_COLOR_MATERIAL_PARAMETER /;"	d
GL_COLOR_MATRIX	./GL/glew.h	/^#define GL_COLOR_MATRIX /;"	d
GL_COLOR_MATRIX_HINT	./GL/glew.h	/^#define GL_COLOR_MATRIX_HINT /;"	d
GL_COLOR_MATRIX_SGI	./GL/glew.h	/^#define GL_COLOR_MATRIX_SGI /;"	d
GL_COLOR_MATRIX_STACK_DEPTH	./GL/glew.h	/^#define GL_COLOR_MATRIX_STACK_DEPTH /;"	d
GL_COLOR_MATRIX_STACK_DEPTH_SGI	./GL/glew.h	/^#define GL_COLOR_MATRIX_STACK_DEPTH_SGI /;"	d
GL_COLOR_RENDERABLE	./GL/glew.h	/^#define GL_COLOR_RENDERABLE /;"	d
GL_COLOR_SAMPLES_NV	./GL/glew.h	/^#define GL_COLOR_SAMPLES_NV /;"	d
GL_COLOR_SUM	./GL/glew.h	/^#define GL_COLOR_SUM /;"	d
GL_COLOR_SUM_ARB	./GL/glew.h	/^#define GL_COLOR_SUM_ARB /;"	d
GL_COLOR_SUM_CLAMP_NV	./GL/glew.h	/^#define GL_COLOR_SUM_CLAMP_NV /;"	d
GL_COLOR_SUM_EXT	./GL/glew.h	/^#define GL_COLOR_SUM_EXT /;"	d
GL_COLOR_TABLE	./GL/glew.h	/^#define GL_COLOR_TABLE /;"	d
GL_COLOR_TABLE_ALPHA_SIZE	./GL/glew.h	/^#define GL_COLOR_TABLE_ALPHA_SIZE /;"	d
GL_COLOR_TABLE_ALPHA_SIZE_EXT	./GL/glew.h	/^#define GL_COLOR_TABLE_ALPHA_SIZE_EXT /;"	d
GL_COLOR_TABLE_ALPHA_SIZE_SGI	./GL/glew.h	/^#define GL_COLOR_TABLE_ALPHA_SIZE_SGI /;"	d
GL_COLOR_TABLE_BIAS	./GL/glew.h	/^#define GL_COLOR_TABLE_BIAS /;"	d
GL_COLOR_TABLE_BIAS_SGI	./GL/glew.h	/^#define GL_COLOR_TABLE_BIAS_SGI /;"	d
GL_COLOR_TABLE_BLUE_SIZE	./GL/glew.h	/^#define GL_COLOR_TABLE_BLUE_SIZE /;"	d
GL_COLOR_TABLE_BLUE_SIZE_EXT	./GL/glew.h	/^#define GL_COLOR_TABLE_BLUE_SIZE_EXT /;"	d
GL_COLOR_TABLE_BLUE_SIZE_SGI	./GL/glew.h	/^#define GL_COLOR_TABLE_BLUE_SIZE_SGI /;"	d
GL_COLOR_TABLE_FORMAT	./GL/glew.h	/^#define GL_COLOR_TABLE_FORMAT /;"	d
GL_COLOR_TABLE_FORMAT_EXT	./GL/glew.h	/^#define GL_COLOR_TABLE_FORMAT_EXT /;"	d
GL_COLOR_TABLE_FORMAT_SGI	./GL/glew.h	/^#define GL_COLOR_TABLE_FORMAT_SGI /;"	d
GL_COLOR_TABLE_GREEN_SIZE	./GL/glew.h	/^#define GL_COLOR_TABLE_GREEN_SIZE /;"	d
GL_COLOR_TABLE_GREEN_SIZE_EXT	./GL/glew.h	/^#define GL_COLOR_TABLE_GREEN_SIZE_EXT /;"	d
GL_COLOR_TABLE_GREEN_SIZE_SGI	./GL/glew.h	/^#define GL_COLOR_TABLE_GREEN_SIZE_SGI /;"	d
GL_COLOR_TABLE_INTENSITY_SIZE	./GL/glew.h	/^#define GL_COLOR_TABLE_INTENSITY_SIZE /;"	d
GL_COLOR_TABLE_INTENSITY_SIZE_EXT	./GL/glew.h	/^#define GL_COLOR_TABLE_INTENSITY_SIZE_EXT /;"	d
GL_COLOR_TABLE_INTENSITY_SIZE_SGI	./GL/glew.h	/^#define GL_COLOR_TABLE_INTENSITY_SIZE_SGI /;"	d
GL_COLOR_TABLE_LUMINANCE_SIZE	./GL/glew.h	/^#define GL_COLOR_TABLE_LUMINANCE_SIZE /;"	d
GL_COLOR_TABLE_LUMINANCE_SIZE_EXT	./GL/glew.h	/^#define GL_COLOR_TABLE_LUMINANCE_SIZE_EXT /;"	d
GL_COLOR_TABLE_LUMINANCE_SIZE_SGI	./GL/glew.h	/^#define GL_COLOR_TABLE_LUMINANCE_SIZE_SGI /;"	d
GL_COLOR_TABLE_RED_SIZE	./GL/glew.h	/^#define GL_COLOR_TABLE_RED_SIZE /;"	d
GL_COLOR_TABLE_RED_SIZE_EXT	./GL/glew.h	/^#define GL_COLOR_TABLE_RED_SIZE_EXT /;"	d
GL_COLOR_TABLE_RED_SIZE_SGI	./GL/glew.h	/^#define GL_COLOR_TABLE_RED_SIZE_SGI /;"	d
GL_COLOR_TABLE_SCALE	./GL/glew.h	/^#define GL_COLOR_TABLE_SCALE /;"	d
GL_COLOR_TABLE_SCALE_SGI	./GL/glew.h	/^#define GL_COLOR_TABLE_SCALE_SGI /;"	d
GL_COLOR_TABLE_SGI	./GL/glew.h	/^#define GL_COLOR_TABLE_SGI /;"	d
GL_COLOR_TABLE_WIDTH	./GL/glew.h	/^#define GL_COLOR_TABLE_WIDTH /;"	d
GL_COLOR_TABLE_WIDTH_EXT	./GL/glew.h	/^#define GL_COLOR_TABLE_WIDTH_EXT /;"	d
GL_COLOR_TABLE_WIDTH_SGI	./GL/glew.h	/^#define GL_COLOR_TABLE_WIDTH_SGI /;"	d
GL_COLOR_WRITEMASK	./GL/glew.h	/^#define GL_COLOR_WRITEMASK /;"	d
GL_COMBINE	./GL/glew.h	/^#define GL_COMBINE /;"	d
GL_COMBINE4_NV	./GL/glew.h	/^#define GL_COMBINE4_NV /;"	d
GL_COMBINER0_NV	./GL/glew.h	/^#define GL_COMBINER0_NV /;"	d
GL_COMBINER1_NV	./GL/glew.h	/^#define GL_COMBINER1_NV /;"	d
GL_COMBINER2_NV	./GL/glew.h	/^#define GL_COMBINER2_NV /;"	d
GL_COMBINER3_NV	./GL/glew.h	/^#define GL_COMBINER3_NV /;"	d
GL_COMBINER4_NV	./GL/glew.h	/^#define GL_COMBINER4_NV /;"	d
GL_COMBINER5_NV	./GL/glew.h	/^#define GL_COMBINER5_NV /;"	d
GL_COMBINER6_NV	./GL/glew.h	/^#define GL_COMBINER6_NV /;"	d
GL_COMBINER7_NV	./GL/glew.h	/^#define GL_COMBINER7_NV /;"	d
GL_COMBINER_AB_DOT_PRODUCT_NV	./GL/glew.h	/^#define GL_COMBINER_AB_DOT_PRODUCT_NV /;"	d
GL_COMBINER_AB_OUTPUT_NV	./GL/glew.h	/^#define GL_COMBINER_AB_OUTPUT_NV /;"	d
GL_COMBINER_BIAS_NV	./GL/glew.h	/^#define GL_COMBINER_BIAS_NV /;"	d
GL_COMBINER_CD_DOT_PRODUCT_NV	./GL/glew.h	/^#define GL_COMBINER_CD_DOT_PRODUCT_NV /;"	d
GL_COMBINER_CD_OUTPUT_NV	./GL/glew.h	/^#define GL_COMBINER_CD_OUTPUT_NV /;"	d
GL_COMBINER_COMPONENT_USAGE_NV	./GL/glew.h	/^#define GL_COMBINER_COMPONENT_USAGE_NV /;"	d
GL_COMBINER_INPUT_NV	./GL/glew.h	/^#define GL_COMBINER_INPUT_NV /;"	d
GL_COMBINER_MAPPING_NV	./GL/glew.h	/^#define GL_COMBINER_MAPPING_NV /;"	d
GL_COMBINER_MUX_SUM_NV	./GL/glew.h	/^#define GL_COMBINER_MUX_SUM_NV /;"	d
GL_COMBINER_SCALE_NV	./GL/glew.h	/^#define GL_COMBINER_SCALE_NV /;"	d
GL_COMBINER_SUM_OUTPUT_NV	./GL/glew.h	/^#define GL_COMBINER_SUM_OUTPUT_NV /;"	d
GL_COMBINE_ALPHA	./GL/glew.h	/^#define GL_COMBINE_ALPHA /;"	d
GL_COMBINE_ALPHA_ARB	./GL/glew.h	/^#define GL_COMBINE_ALPHA_ARB /;"	d
GL_COMBINE_ALPHA_EXT	./GL/glew.h	/^#define GL_COMBINE_ALPHA_EXT /;"	d
GL_COMBINE_ARB	./GL/glew.h	/^#define GL_COMBINE_ARB /;"	d
GL_COMBINE_EXT	./GL/glew.h	/^#define GL_COMBINE_EXT /;"	d
GL_COMBINE_RGB	./GL/glew.h	/^#define GL_COMBINE_RGB /;"	d
GL_COMBINE_RGB_ARB	./GL/glew.h	/^#define GL_COMBINE_RGB_ARB /;"	d
GL_COMBINE_RGB_EXT	./GL/glew.h	/^#define GL_COMBINE_RGB_EXT /;"	d
GL_COMMAND_BARRIER_BIT	./GL/glew.h	/^#define GL_COMMAND_BARRIER_BIT /;"	d
GL_COMMAND_BARRIER_BIT_EXT	./GL/glew.h	/^#define GL_COMMAND_BARRIER_BIT_EXT /;"	d
GL_COMPARE_REF_DEPTH_TO_TEXTURE_EXT	./GL/glew.h	/^#define GL_COMPARE_REF_DEPTH_TO_TEXTURE_EXT /;"	d
GL_COMPARE_REF_TO_TEXTURE	./GL/glew.h	/^#define GL_COMPARE_REF_TO_TEXTURE /;"	d
GL_COMPARE_REF_TO_TEXTURE_EXT	./GL/glew.h	/^#define GL_COMPARE_REF_TO_TEXTURE_EXT /;"	d
GL_COMPARE_R_TO_TEXTURE	./GL/glew.h	/^#define GL_COMPARE_R_TO_TEXTURE /;"	d
GL_COMPARE_R_TO_TEXTURE_ARB	./GL/glew.h	/^#define GL_COMPARE_R_TO_TEXTURE_ARB /;"	d
GL_COMPATIBLE_SUBROUTINES	./GL/glew.h	/^#define GL_COMPATIBLE_SUBROUTINES /;"	d
GL_COMPILE	./GL/glew.h	/^#define GL_COMPILE /;"	d
GL_COMPILE_AND_EXECUTE	./GL/glew.h	/^#define GL_COMPILE_AND_EXECUTE /;"	d
GL_COMPILE_STATUS	./GL/glew.h	/^#define GL_COMPILE_STATUS /;"	d
GL_COMPLETION_STATUS_ARB	./GL/glew.h	/^#define GL_COMPLETION_STATUS_ARB /;"	d
GL_COMPLETION_STATUS_KHR	./GL/glew.h	/^#define GL_COMPLETION_STATUS_KHR /;"	d
GL_COMPLEX_BYTE_SGI	./GL/glew.h	/^#define GL_COMPLEX_BYTE_SGI /;"	d
GL_COMPLEX_FLOAT_SGI	./GL/glew.h	/^#define GL_COMPLEX_FLOAT_SGI /;"	d
GL_COMPLEX_INT_SGI	./GL/glew.h	/^#define GL_COMPLEX_INT_SGI /;"	d
GL_COMPLEX_SHORT_SGI	./GL/glew.h	/^#define GL_COMPLEX_SHORT_SGI /;"	d
GL_COMPLEX_UNSIGNED_BYTE_SGI	./GL/glew.h	/^#define GL_COMPLEX_UNSIGNED_BYTE_SGI /;"	d
GL_COMPLEX_UNSIGNED_INT_SGI	./GL/glew.h	/^#define GL_COMPLEX_UNSIGNED_INT_SGI /;"	d
GL_COMPLEX_UNSIGNED_SHORT_SGI	./GL/glew.h	/^#define GL_COMPLEX_UNSIGNED_SHORT_SGI /;"	d
GL_COMPRESSED_ALPHA	./GL/glew.h	/^#define GL_COMPRESSED_ALPHA /;"	d
GL_COMPRESSED_ALPHA_ARB	./GL/glew.h	/^#define GL_COMPRESSED_ALPHA_ARB /;"	d
GL_COMPRESSED_INTENSITY	./GL/glew.h	/^#define GL_COMPRESSED_INTENSITY /;"	d
GL_COMPRESSED_INTENSITY_ARB	./GL/glew.h	/^#define GL_COMPRESSED_INTENSITY_ARB /;"	d
GL_COMPRESSED_LUMINANCE	./GL/glew.h	/^#define GL_COMPRESSED_LUMINANCE /;"	d
GL_COMPRESSED_LUMINANCE_ALPHA	./GL/glew.h	/^#define GL_COMPRESSED_LUMINANCE_ALPHA /;"	d
GL_COMPRESSED_LUMINANCE_ALPHA_3DC_ATI	./GL/glew.h	/^#define GL_COMPRESSED_LUMINANCE_ALPHA_3DC_ATI /;"	d
GL_COMPRESSED_LUMINANCE_ALPHA_ARB	./GL/glew.h	/^#define GL_COMPRESSED_LUMINANCE_ALPHA_ARB /;"	d
GL_COMPRESSED_LUMINANCE_ALPHA_LATC2_EXT	./GL/glew.h	/^#define GL_COMPRESSED_LUMINANCE_ALPHA_LATC2_EXT /;"	d
GL_COMPRESSED_LUMINANCE_ALPHA_LATC2_NV	./GL/glew.h	/^#define GL_COMPRESSED_LUMINANCE_ALPHA_LATC2_NV /;"	d
GL_COMPRESSED_LUMINANCE_ARB	./GL/glew.h	/^#define GL_COMPRESSED_LUMINANCE_ARB /;"	d
GL_COMPRESSED_LUMINANCE_LATC1_EXT	./GL/glew.h	/^#define GL_COMPRESSED_LUMINANCE_LATC1_EXT /;"	d
GL_COMPRESSED_LUMINANCE_LATC1_NV	./GL/glew.h	/^#define GL_COMPRESSED_LUMINANCE_LATC1_NV /;"	d
GL_COMPRESSED_R11_EAC	./GL/glew.h	/^#define GL_COMPRESSED_R11_EAC /;"	d
GL_COMPRESSED_RED	./GL/glew.h	/^#define GL_COMPRESSED_RED /;"	d
GL_COMPRESSED_RED_GREEN_RGTC2_EXT	./GL/glew.h	/^#define GL_COMPRESSED_RED_GREEN_RGTC2_EXT /;"	d
GL_COMPRESSED_RED_RGTC1	./GL/glew.h	/^#define GL_COMPRESSED_RED_RGTC1 /;"	d
GL_COMPRESSED_RED_RGTC1_EXT	./GL/glew.h	/^#define GL_COMPRESSED_RED_RGTC1_EXT /;"	d
GL_COMPRESSED_RG	./GL/glew.h	/^#define GL_COMPRESSED_RG /;"	d
GL_COMPRESSED_RG11_EAC	./GL/glew.h	/^#define GL_COMPRESSED_RG11_EAC /;"	d
GL_COMPRESSED_RGB	./GL/glew.h	/^#define GL_COMPRESSED_RGB /;"	d
GL_COMPRESSED_RGB8_ETC2	./GL/glew.h	/^#define GL_COMPRESSED_RGB8_ETC2 /;"	d
GL_COMPRESSED_RGB8_PUNCHTHROUGH_ALPHA1_ETC2	./GL/glew.h	/^#define GL_COMPRESSED_RGB8_PUNCHTHROUGH_ALPHA1_ETC2 /;"	d
GL_COMPRESSED_RGBA	./GL/glew.h	/^#define GL_COMPRESSED_RGBA /;"	d
GL_COMPRESSED_RGBA8_ETC2_EAC	./GL/glew.h	/^#define GL_COMPRESSED_RGBA8_ETC2_EAC /;"	d
GL_COMPRESSED_RGBA_ARB	./GL/glew.h	/^#define GL_COMPRESSED_RGBA_ARB /;"	d
GL_COMPRESSED_RGBA_ASTC_10x10_KHR	./GL/glew.h	/^#define GL_COMPRESSED_RGBA_ASTC_10x10_KHR /;"	d
GL_COMPRESSED_RGBA_ASTC_10x5_KHR	./GL/glew.h	/^#define GL_COMPRESSED_RGBA_ASTC_10x5_KHR /;"	d
GL_COMPRESSED_RGBA_ASTC_10x6_KHR	./GL/glew.h	/^#define GL_COMPRESSED_RGBA_ASTC_10x6_KHR /;"	d
GL_COMPRESSED_RGBA_ASTC_10x8_KHR	./GL/glew.h	/^#define GL_COMPRESSED_RGBA_ASTC_10x8_KHR /;"	d
GL_COMPRESSED_RGBA_ASTC_12x10_KHR	./GL/glew.h	/^#define GL_COMPRESSED_RGBA_ASTC_12x10_KHR /;"	d
GL_COMPRESSED_RGBA_ASTC_12x12_KHR	./GL/glew.h	/^#define GL_COMPRESSED_RGBA_ASTC_12x12_KHR /;"	d
GL_COMPRESSED_RGBA_ASTC_3x3x3_OES	./GL/glew.h	/^#define GL_COMPRESSED_RGBA_ASTC_3x3x3_OES /;"	d
GL_COMPRESSED_RGBA_ASTC_4x3x3_OES	./GL/glew.h	/^#define GL_COMPRESSED_RGBA_ASTC_4x3x3_OES /;"	d
GL_COMPRESSED_RGBA_ASTC_4x4_KHR	./GL/glew.h	/^#define GL_COMPRESSED_RGBA_ASTC_4x4_KHR /;"	d
GL_COMPRESSED_RGBA_ASTC_4x4x3_OES	./GL/glew.h	/^#define GL_COMPRESSED_RGBA_ASTC_4x4x3_OES /;"	d
GL_COMPRESSED_RGBA_ASTC_4x4x4_OES	./GL/glew.h	/^#define GL_COMPRESSED_RGBA_ASTC_4x4x4_OES /;"	d
GL_COMPRESSED_RGBA_ASTC_5x4_KHR	./GL/glew.h	/^#define GL_COMPRESSED_RGBA_ASTC_5x4_KHR /;"	d
GL_COMPRESSED_RGBA_ASTC_5x4x4_OES	./GL/glew.h	/^#define GL_COMPRESSED_RGBA_ASTC_5x4x4_OES /;"	d
GL_COMPRESSED_RGBA_ASTC_5x5_KHR	./GL/glew.h	/^#define GL_COMPRESSED_RGBA_ASTC_5x5_KHR /;"	d
GL_COMPRESSED_RGBA_ASTC_5x5x4_OES	./GL/glew.h	/^#define GL_COMPRESSED_RGBA_ASTC_5x5x4_OES /;"	d
GL_COMPRESSED_RGBA_ASTC_5x5x5_OES	./GL/glew.h	/^#define GL_COMPRESSED_RGBA_ASTC_5x5x5_OES /;"	d
GL_COMPRESSED_RGBA_ASTC_6x5_KHR	./GL/glew.h	/^#define GL_COMPRESSED_RGBA_ASTC_6x5_KHR /;"	d
GL_COMPRESSED_RGBA_ASTC_6x5x5_OES	./GL/glew.h	/^#define GL_COMPRESSED_RGBA_ASTC_6x5x5_OES /;"	d
GL_COMPRESSED_RGBA_ASTC_6x6_KHR	./GL/glew.h	/^#define GL_COMPRESSED_RGBA_ASTC_6x6_KHR /;"	d
GL_COMPRESSED_RGBA_ASTC_6x6x5_OES	./GL/glew.h	/^#define GL_COMPRESSED_RGBA_ASTC_6x6x5_OES /;"	d
GL_COMPRESSED_RGBA_ASTC_6x6x6_OES	./GL/glew.h	/^#define GL_COMPRESSED_RGBA_ASTC_6x6x6_OES /;"	d
GL_COMPRESSED_RGBA_ASTC_8x5_KHR	./GL/glew.h	/^#define GL_COMPRESSED_RGBA_ASTC_8x5_KHR /;"	d
GL_COMPRESSED_RGBA_ASTC_8x6_KHR	./GL/glew.h	/^#define GL_COMPRESSED_RGBA_ASTC_8x6_KHR /;"	d
GL_COMPRESSED_RGBA_ASTC_8x8_KHR	./GL/glew.h	/^#define GL_COMPRESSED_RGBA_ASTC_8x8_KHR /;"	d
GL_COMPRESSED_RGBA_BPTC_UNORM	./GL/glew.h	/^#define GL_COMPRESSED_RGBA_BPTC_UNORM /;"	d
GL_COMPRESSED_RGBA_BPTC_UNORM_ARB	./GL/glew.h	/^#define GL_COMPRESSED_RGBA_BPTC_UNORM_ARB /;"	d
GL_COMPRESSED_RGBA_BPTC_UNORM_EXT	./GL/glew.h	/^#define GL_COMPRESSED_RGBA_BPTC_UNORM_EXT /;"	d
GL_COMPRESSED_RGBA_FXT1_3DFX	./GL/glew.h	/^#define GL_COMPRESSED_RGBA_FXT1_3DFX /;"	d
GL_COMPRESSED_RGBA_PVRTC_2BPPV1_IMG	./GL/glew.h	/^#define GL_COMPRESSED_RGBA_PVRTC_2BPPV1_IMG /;"	d
GL_COMPRESSED_RGBA_PVRTC_2BPPV2_IMG	./GL/glew.h	/^#define GL_COMPRESSED_RGBA_PVRTC_2BPPV2_IMG /;"	d
GL_COMPRESSED_RGBA_PVRTC_4BPPV1_IMG	./GL/glew.h	/^#define GL_COMPRESSED_RGBA_PVRTC_4BPPV1_IMG /;"	d
GL_COMPRESSED_RGBA_PVRTC_4BPPV2_IMG	./GL/glew.h	/^#define GL_COMPRESSED_RGBA_PVRTC_4BPPV2_IMG /;"	d
GL_COMPRESSED_RGBA_S3TC_DXT1_ANGLE	./GL/glew.h	/^#define GL_COMPRESSED_RGBA_S3TC_DXT1_ANGLE /;"	d
GL_COMPRESSED_RGBA_S3TC_DXT1_EXT	./GL/glew.h	/^#define GL_COMPRESSED_RGBA_S3TC_DXT1_EXT /;"	d
GL_COMPRESSED_RGBA_S3TC_DXT1_NV	./GL/glew.h	/^#define GL_COMPRESSED_RGBA_S3TC_DXT1_NV /;"	d
GL_COMPRESSED_RGBA_S3TC_DXT3_ANGLE	./GL/glew.h	/^#define GL_COMPRESSED_RGBA_S3TC_DXT3_ANGLE /;"	d
GL_COMPRESSED_RGBA_S3TC_DXT3_EXT	./GL/glew.h	/^#define GL_COMPRESSED_RGBA_S3TC_DXT3_EXT /;"	d
GL_COMPRESSED_RGBA_S3TC_DXT3_NV	./GL/glew.h	/^#define GL_COMPRESSED_RGBA_S3TC_DXT3_NV /;"	d
GL_COMPRESSED_RGBA_S3TC_DXT5_ANGLE	./GL/glew.h	/^#define GL_COMPRESSED_RGBA_S3TC_DXT5_ANGLE /;"	d
GL_COMPRESSED_RGBA_S3TC_DXT5_EXT	./GL/glew.h	/^#define GL_COMPRESSED_RGBA_S3TC_DXT5_EXT /;"	d
GL_COMPRESSED_RGBA_S3TC_DXT5_NV	./GL/glew.h	/^#define GL_COMPRESSED_RGBA_S3TC_DXT5_NV /;"	d
GL_COMPRESSED_RGB_ARB	./GL/glew.h	/^#define GL_COMPRESSED_RGB_ARB /;"	d
GL_COMPRESSED_RGB_BPTC_SIGNED_FLOAT	./GL/glew.h	/^#define GL_COMPRESSED_RGB_BPTC_SIGNED_FLOAT /;"	d
GL_COMPRESSED_RGB_BPTC_SIGNED_FLOAT_ARB	./GL/glew.h	/^#define GL_COMPRESSED_RGB_BPTC_SIGNED_FLOAT_ARB /;"	d
GL_COMPRESSED_RGB_BPTC_SIGNED_FLOAT_EXT	./GL/glew.h	/^#define GL_COMPRESSED_RGB_BPTC_SIGNED_FLOAT_EXT /;"	d
GL_COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT	./GL/glew.h	/^#define GL_COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT /;"	d
GL_COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT_ARB	./GL/glew.h	/^#define GL_COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT_ARB /;"	d
GL_COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT_EXT	./GL/glew.h	/^#define GL_COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT_EXT /;"	d
GL_COMPRESSED_RGB_FXT1_3DFX	./GL/glew.h	/^#define GL_COMPRESSED_RGB_FXT1_3DFX /;"	d
GL_COMPRESSED_RGB_PVRTC_2BPPV1_IMG	./GL/glew.h	/^#define GL_COMPRESSED_RGB_PVRTC_2BPPV1_IMG /;"	d
GL_COMPRESSED_RGB_PVRTC_4BPPV1_IMG	./GL/glew.h	/^#define GL_COMPRESSED_RGB_PVRTC_4BPPV1_IMG /;"	d
GL_COMPRESSED_RGB_S3TC_DXT1_ANGLE	./GL/glew.h	/^#define GL_COMPRESSED_RGB_S3TC_DXT1_ANGLE /;"	d
GL_COMPRESSED_RGB_S3TC_DXT1_EXT	./GL/glew.h	/^#define GL_COMPRESSED_RGB_S3TC_DXT1_EXT /;"	d
GL_COMPRESSED_RGB_S3TC_DXT1_NV	./GL/glew.h	/^#define GL_COMPRESSED_RGB_S3TC_DXT1_NV /;"	d
GL_COMPRESSED_RG_RGTC2	./GL/glew.h	/^#define GL_COMPRESSED_RG_RGTC2 /;"	d
GL_COMPRESSED_SIGNED_LUMINANCE_ALPHA_LATC2_EXT	./GL/glew.h	/^#define GL_COMPRESSED_SIGNED_LUMINANCE_ALPHA_LATC2_EXT /;"	d
GL_COMPRESSED_SIGNED_LUMINANCE_ALPHA_LATC2_NV	./GL/glew.h	/^#define GL_COMPRESSED_SIGNED_LUMINANCE_ALPHA_LATC2_NV /;"	d
GL_COMPRESSED_SIGNED_LUMINANCE_LATC1_EXT	./GL/glew.h	/^#define GL_COMPRESSED_SIGNED_LUMINANCE_LATC1_EXT /;"	d
GL_COMPRESSED_SIGNED_LUMINANCE_LATC1_NV	./GL/glew.h	/^#define GL_COMPRESSED_SIGNED_LUMINANCE_LATC1_NV /;"	d
GL_COMPRESSED_SIGNED_R11_EAC	./GL/glew.h	/^#define GL_COMPRESSED_SIGNED_R11_EAC /;"	d
GL_COMPRESSED_SIGNED_RED_GREEN_RGTC2_EXT	./GL/glew.h	/^#define GL_COMPRESSED_SIGNED_RED_GREEN_RGTC2_EXT /;"	d
GL_COMPRESSED_SIGNED_RED_RGTC1	./GL/glew.h	/^#define GL_COMPRESSED_SIGNED_RED_RGTC1 /;"	d
GL_COMPRESSED_SIGNED_RED_RGTC1_EXT	./GL/glew.h	/^#define GL_COMPRESSED_SIGNED_RED_RGTC1_EXT /;"	d
GL_COMPRESSED_SIGNED_RG11_EAC	./GL/glew.h	/^#define GL_COMPRESSED_SIGNED_RG11_EAC /;"	d
GL_COMPRESSED_SIGNED_RG_RGTC2	./GL/glew.h	/^#define GL_COMPRESSED_SIGNED_RG_RGTC2 /;"	d
GL_COMPRESSED_SLUMINANCE	./GL/glew.h	/^#define GL_COMPRESSED_SLUMINANCE /;"	d
GL_COMPRESSED_SLUMINANCE_ALPHA	./GL/glew.h	/^#define GL_COMPRESSED_SLUMINANCE_ALPHA /;"	d
GL_COMPRESSED_SLUMINANCE_ALPHA_EXT	./GL/glew.h	/^#define GL_COMPRESSED_SLUMINANCE_ALPHA_EXT /;"	d
GL_COMPRESSED_SLUMINANCE_EXT	./GL/glew.h	/^#define GL_COMPRESSED_SLUMINANCE_EXT /;"	d
GL_COMPRESSED_SRGB	./GL/glew.h	/^#define GL_COMPRESSED_SRGB /;"	d
GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR	./GL/glew.h	/^#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR /;"	d
GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR	./GL/glew.h	/^#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR /;"	d
GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR	./GL/glew.h	/^#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR /;"	d
GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR	./GL/glew.h	/^#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR /;"	d
GL_COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR	./GL/glew.h	/^#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR /;"	d
GL_COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR	./GL/glew.h	/^#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR /;"	d
GL_COMPRESSED_SRGB8_ALPHA8_ASTC_3x3x3_OES	./GL/glew.h	/^#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_3x3x3_OES /;"	d
GL_COMPRESSED_SRGB8_ALPHA8_ASTC_4x3x3_OES	./GL/glew.h	/^#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_4x3x3_OES /;"	d
GL_COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR	./GL/glew.h	/^#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR /;"	d
GL_COMPRESSED_SRGB8_ALPHA8_ASTC_4x4x3_OES	./GL/glew.h	/^#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_4x4x3_OES /;"	d
GL_COMPRESSED_SRGB8_ALPHA8_ASTC_4x4x4_OES	./GL/glew.h	/^#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_4x4x4_OES /;"	d
GL_COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR	./GL/glew.h	/^#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR /;"	d
GL_COMPRESSED_SRGB8_ALPHA8_ASTC_5x4x4_OES	./GL/glew.h	/^#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_5x4x4_OES /;"	d
GL_COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR	./GL/glew.h	/^#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR /;"	d
GL_COMPRESSED_SRGB8_ALPHA8_ASTC_5x5x4_OES	./GL/glew.h	/^#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_5x5x4_OES /;"	d
GL_COMPRESSED_SRGB8_ALPHA8_ASTC_5x5x5_OES	./GL/glew.h	/^#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_5x5x5_OES /;"	d
GL_COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR	./GL/glew.h	/^#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR /;"	d
GL_COMPRESSED_SRGB8_ALPHA8_ASTC_6x5x5_OES	./GL/glew.h	/^#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_6x5x5_OES /;"	d
GL_COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR	./GL/glew.h	/^#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR /;"	d
GL_COMPRESSED_SRGB8_ALPHA8_ASTC_6x6x5_OES	./GL/glew.h	/^#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_6x6x5_OES /;"	d
GL_COMPRESSED_SRGB8_ALPHA8_ASTC_6x6x6_OES	./GL/glew.h	/^#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_6x6x6_OES /;"	d
GL_COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR	./GL/glew.h	/^#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR /;"	d
GL_COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR	./GL/glew.h	/^#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR /;"	d
GL_COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR	./GL/glew.h	/^#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR /;"	d
GL_COMPRESSED_SRGB8_ALPHA8_ETC2_EAC	./GL/glew.h	/^#define GL_COMPRESSED_SRGB8_ALPHA8_ETC2_EAC /;"	d
GL_COMPRESSED_SRGB8_ETC2	./GL/glew.h	/^#define GL_COMPRESSED_SRGB8_ETC2 /;"	d
GL_COMPRESSED_SRGB8_PUNCHTHROUGH_ALPHA1_ETC2	./GL/glew.h	/^#define GL_COMPRESSED_SRGB8_PUNCHTHROUGH_ALPHA1_ETC2 /;"	d
GL_COMPRESSED_SRGB_ALPHA	./GL/glew.h	/^#define GL_COMPRESSED_SRGB_ALPHA /;"	d
GL_COMPRESSED_SRGB_ALPHA_BPTC_UNORM	./GL/glew.h	/^#define GL_COMPRESSED_SRGB_ALPHA_BPTC_UNORM /;"	d
GL_COMPRESSED_SRGB_ALPHA_BPTC_UNORM_ARB	./GL/glew.h	/^#define GL_COMPRESSED_SRGB_ALPHA_BPTC_UNORM_ARB /;"	d
GL_COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT	./GL/glew.h	/^#define GL_COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT /;"	d
GL_COMPRESSED_SRGB_ALPHA_EXT	./GL/glew.h	/^#define GL_COMPRESSED_SRGB_ALPHA_EXT /;"	d
GL_COMPRESSED_SRGB_ALPHA_PVRTC_2BPPV1_EXT	./GL/glew.h	/^#define GL_COMPRESSED_SRGB_ALPHA_PVRTC_2BPPV1_EXT /;"	d
GL_COMPRESSED_SRGB_ALPHA_PVRTC_4BPPV1_EXT	./GL/glew.h	/^#define GL_COMPRESSED_SRGB_ALPHA_PVRTC_4BPPV1_EXT /;"	d
GL_COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT	./GL/glew.h	/^#define GL_COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT /;"	d
GL_COMPRESSED_SRGB_ALPHA_S3TC_DXT1_NV	./GL/glew.h	/^#define GL_COMPRESSED_SRGB_ALPHA_S3TC_DXT1_NV /;"	d
GL_COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT	./GL/glew.h	/^#define GL_COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT /;"	d
GL_COMPRESSED_SRGB_ALPHA_S3TC_DXT3_NV	./GL/glew.h	/^#define GL_COMPRESSED_SRGB_ALPHA_S3TC_DXT3_NV /;"	d
GL_COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT	./GL/glew.h	/^#define GL_COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT /;"	d
GL_COMPRESSED_SRGB_ALPHA_S3TC_DXT5_NV	./GL/glew.h	/^#define GL_COMPRESSED_SRGB_ALPHA_S3TC_DXT5_NV /;"	d
GL_COMPRESSED_SRGB_EXT	./GL/glew.h	/^#define GL_COMPRESSED_SRGB_EXT /;"	d
GL_COMPRESSED_SRGB_PVRTC_2BPPV1_EXT	./GL/glew.h	/^#define GL_COMPRESSED_SRGB_PVRTC_2BPPV1_EXT /;"	d
GL_COMPRESSED_SRGB_PVRTC_4BPPV1_EXT	./GL/glew.h	/^#define GL_COMPRESSED_SRGB_PVRTC_4BPPV1_EXT /;"	d
GL_COMPRESSED_SRGB_S3TC_DXT1_EXT	./GL/glew.h	/^#define GL_COMPRESSED_SRGB_S3TC_DXT1_EXT /;"	d
GL_COMPRESSED_SRGB_S3TC_DXT1_NV	./GL/glew.h	/^#define GL_COMPRESSED_SRGB_S3TC_DXT1_NV /;"	d
GL_COMPRESSED_TEXTURE_FORMATS	./GL/glew.h	/^#define GL_COMPRESSED_TEXTURE_FORMATS /;"	d
GL_COMPRESSED_TEXTURE_FORMATS_ARB	./GL/glew.h	/^#define GL_COMPRESSED_TEXTURE_FORMATS_ARB /;"	d
GL_COMPUTE_PROGRAM_NV	./GL/glew.h	/^#define GL_COMPUTE_PROGRAM_NV /;"	d
GL_COMPUTE_PROGRAM_PARAMETER_BUFFER_NV	./GL/glew.h	/^#define GL_COMPUTE_PROGRAM_PARAMETER_BUFFER_NV /;"	d
GL_COMPUTE_SHADER	./GL/glew.h	/^#define GL_COMPUTE_SHADER /;"	d
GL_COMPUTE_SHADER_BIT	./GL/glew.h	/^#define GL_COMPUTE_SHADER_BIT /;"	d
GL_COMPUTE_SHADER_INVOCATIONS	./GL/glew.h	/^#define GL_COMPUTE_SHADER_INVOCATIONS /;"	d
GL_COMPUTE_SHADER_INVOCATIONS_ARB	./GL/glew.h	/^#define GL_COMPUTE_SHADER_INVOCATIONS_ARB /;"	d
GL_COMPUTE_SUBROUTINE	./GL/glew.h	/^#define GL_COMPUTE_SUBROUTINE /;"	d
GL_COMPUTE_SUBROUTINE_UNIFORM	./GL/glew.h	/^#define GL_COMPUTE_SUBROUTINE_UNIFORM /;"	d
GL_COMPUTE_TEXTURE	./GL/glew.h	/^#define GL_COMPUTE_TEXTURE /;"	d
GL_COMPUTE_WORK_GROUP_SIZE	./GL/glew.h	/^#define GL_COMPUTE_WORK_GROUP_SIZE /;"	d
GL_COMP_BIT_ATI	./GL/glew.h	/^#define GL_COMP_BIT_ATI /;"	d
GL_CONDITION_SATISFIED	./GL/glew.h	/^#define GL_CONDITION_SATISFIED /;"	d
GL_CONDITION_SATISFIED_APPLE	./GL/glew.h	/^#define GL_CONDITION_SATISFIED_APPLE /;"	d
GL_CONFORMANT_NV	./GL/glew.h	/^#define GL_CONFORMANT_NV /;"	d
GL_CONIC_CURVE_TO_NV	./GL/glew.h	/^#define GL_CONIC_CURVE_TO_NV /;"	d
GL_CONJOINT_NV	./GL/glew.h	/^#define GL_CONJOINT_NV /;"	d
GL_CONSERVATIVE_RASTERIZATION_INTEL	./GL/glew.h	/^#define GL_CONSERVATIVE_RASTERIZATION_INTEL /;"	d
GL_CONSERVATIVE_RASTERIZATION_NV	./GL/glew.h	/^#define GL_CONSERVATIVE_RASTERIZATION_NV /;"	d
GL_CONSERVATIVE_RASTER_DILATE_GRANULARITY_NV	./GL/glew.h	/^#define GL_CONSERVATIVE_RASTER_DILATE_GRANULARITY_NV /;"	d
GL_CONSERVATIVE_RASTER_DILATE_NV	./GL/glew.h	/^#define GL_CONSERVATIVE_RASTER_DILATE_NV /;"	d
GL_CONSERVATIVE_RASTER_DILATE_RANGE_NV	./GL/glew.h	/^#define GL_CONSERVATIVE_RASTER_DILATE_RANGE_NV /;"	d
GL_CONSERVATIVE_RASTER_MODE_NV	./GL/glew.h	/^#define GL_CONSERVATIVE_RASTER_MODE_NV /;"	d
GL_CONSERVATIVE_RASTER_MODE_POST_SNAP_NV	./GL/glew.h	/^#define GL_CONSERVATIVE_RASTER_MODE_POST_SNAP_NV /;"	d
GL_CONSERVATIVE_RASTER_MODE_PRE_SNAP_NV	./GL/glew.h	/^#define GL_CONSERVATIVE_RASTER_MODE_PRE_SNAP_NV /;"	d
GL_CONSERVATIVE_RASTER_MODE_PRE_SNAP_TRIANGLES_NV	./GL/glew.h	/^#define GL_CONSERVATIVE_RASTER_MODE_PRE_SNAP_TRIANGLES_NV /;"	d
GL_CONSERVE_MEMORY_HINT_PGI	./GL/glew.h	/^#define GL_CONSERVE_MEMORY_HINT_PGI /;"	d
GL_CONSTANT	./GL/glew.h	/^#define GL_CONSTANT /;"	d
GL_CONSTANT_ALPHA	./GL/glew.h	/^#define GL_CONSTANT_ALPHA /;"	d
GL_CONSTANT_ALPHA_EXT	./GL/glew.h	/^#define GL_CONSTANT_ALPHA_EXT /;"	d
GL_CONSTANT_ARB	./GL/glew.h	/^#define GL_CONSTANT_ARB /;"	d
GL_CONSTANT_ATTENUATION	./GL/glew.h	/^#define GL_CONSTANT_ATTENUATION /;"	d
GL_CONSTANT_BORDER	./GL/glew.h	/^#define GL_CONSTANT_BORDER /;"	d
GL_CONSTANT_COLOR	./GL/glew.h	/^#define GL_CONSTANT_COLOR /;"	d
GL_CONSTANT_COLOR0_NV	./GL/glew.h	/^#define GL_CONSTANT_COLOR0_NV /;"	d
GL_CONSTANT_COLOR1_NV	./GL/glew.h	/^#define GL_CONSTANT_COLOR1_NV /;"	d
GL_CONSTANT_COLOR_EXT	./GL/glew.h	/^#define GL_CONSTANT_COLOR_EXT /;"	d
GL_CONSTANT_EXT	./GL/glew.h	/^#define GL_CONSTANT_EXT /;"	d
GL_CONST_EYE_NV	./GL/glew.h	/^#define GL_CONST_EYE_NV /;"	d
GL_CONTEXT_COMPATIBILITY_PROFILE_BIT	./GL/glew.h	/^#define GL_CONTEXT_COMPATIBILITY_PROFILE_BIT /;"	d
GL_CONTEXT_CORE_PROFILE_BIT	./GL/glew.h	/^#define GL_CONTEXT_CORE_PROFILE_BIT /;"	d
GL_CONTEXT_FLAGS	./GL/glew.h	/^#define GL_CONTEXT_FLAGS /;"	d
GL_CONTEXT_FLAG_DEBUG_BIT	./GL/glew.h	/^#define GL_CONTEXT_FLAG_DEBUG_BIT /;"	d
GL_CONTEXT_FLAG_FORWARD_COMPATIBLE_BIT	./GL/glew.h	/^#define GL_CONTEXT_FLAG_FORWARD_COMPATIBLE_BIT /;"	d
GL_CONTEXT_FLAG_NO_ERROR_BIT	./GL/glew.h	/^#define GL_CONTEXT_FLAG_NO_ERROR_BIT /;"	d
GL_CONTEXT_FLAG_NO_ERROR_BIT_KHR	./GL/glew.h	/^#define GL_CONTEXT_FLAG_NO_ERROR_BIT_KHR /;"	d
GL_CONTEXT_FLAG_PROTECTED_CONTENT_BIT_EXT	./GL/glew.h	/^#define GL_CONTEXT_FLAG_PROTECTED_CONTENT_BIT_EXT /;"	d
GL_CONTEXT_FLAG_ROBUST_ACCESS_BIT	./GL/glew.h	/^#define GL_CONTEXT_FLAG_ROBUST_ACCESS_BIT /;"	d
GL_CONTEXT_FLAG_ROBUST_ACCESS_BIT_ARB	./GL/glew.h	/^#define GL_CONTEXT_FLAG_ROBUST_ACCESS_BIT_ARB /;"	d
GL_CONTEXT_LOST	./GL/glew.h	/^#define GL_CONTEXT_LOST /;"	d
GL_CONTEXT_PROFILE_MASK	./GL/glew.h	/^#define GL_CONTEXT_PROFILE_MASK /;"	d
GL_CONTEXT_RELEASE_BEHAVIOR	./GL/glew.h	/^#define GL_CONTEXT_RELEASE_BEHAVIOR /;"	d
GL_CONTEXT_RELEASE_BEHAVIOR_FLUSH	./GL/glew.h	/^#define GL_CONTEXT_RELEASE_BEHAVIOR_FLUSH /;"	d
GL_CONTEXT_ROBUST_ACCESS	./GL/glew.h	/^#define GL_CONTEXT_ROBUST_ACCESS /;"	d
GL_CONTEXT_ROBUST_ACCESS_EXT	./GL/glew.h	/^#define GL_CONTEXT_ROBUST_ACCESS_EXT /;"	d
GL_CONTINUOUS_AMD	./GL/glew.h	/^#define GL_CONTINUOUS_AMD /;"	d
GL_CONTRAST_NV	./GL/glew.h	/^#define GL_CONTRAST_NV /;"	d
GL_CONVEX_HULL_NV	./GL/glew.h	/^#define GL_CONVEX_HULL_NV /;"	d
GL_CONVOLUTION_1D	./GL/glew.h	/^#define GL_CONVOLUTION_1D /;"	d
GL_CONVOLUTION_1D_EXT	./GL/glew.h	/^#define GL_CONVOLUTION_1D_EXT /;"	d
GL_CONVOLUTION_2D	./GL/glew.h	/^#define GL_CONVOLUTION_2D /;"	d
GL_CONVOLUTION_2D_EXT	./GL/glew.h	/^#define GL_CONVOLUTION_2D_EXT /;"	d
GL_CONVOLUTION_BORDER_COLOR	./GL/glew.h	/^#define GL_CONVOLUTION_BORDER_COLOR /;"	d
GL_CONVOLUTION_BORDER_MODE	./GL/glew.h	/^#define GL_CONVOLUTION_BORDER_MODE /;"	d
GL_CONVOLUTION_BORDER_MODE_EXT	./GL/glew.h	/^#define GL_CONVOLUTION_BORDER_MODE_EXT /;"	d
GL_CONVOLUTION_FILTER_BIAS	./GL/glew.h	/^#define GL_CONVOLUTION_FILTER_BIAS /;"	d
GL_CONVOLUTION_FILTER_BIAS_EXT	./GL/glew.h	/^#define GL_CONVOLUTION_FILTER_BIAS_EXT /;"	d
GL_CONVOLUTION_FILTER_SCALE	./GL/glew.h	/^#define GL_CONVOLUTION_FILTER_SCALE /;"	d
GL_CONVOLUTION_FILTER_SCALE_EXT	./GL/glew.h	/^#define GL_CONVOLUTION_FILTER_SCALE_EXT /;"	d
GL_CONVOLUTION_FORMAT	./GL/glew.h	/^#define GL_CONVOLUTION_FORMAT /;"	d
GL_CONVOLUTION_FORMAT_EXT	./GL/glew.h	/^#define GL_CONVOLUTION_FORMAT_EXT /;"	d
GL_CONVOLUTION_HEIGHT	./GL/glew.h	/^#define GL_CONVOLUTION_HEIGHT /;"	d
GL_CONVOLUTION_HEIGHT_EXT	./GL/glew.h	/^#define GL_CONVOLUTION_HEIGHT_EXT /;"	d
GL_CONVOLUTION_HINT_SGIX	./GL/glew.h	/^#define GL_CONVOLUTION_HINT_SGIX /;"	d
GL_CONVOLUTION_SGI	./GL/glew.h	/^#define GL_CONVOLUTION_SGI /;"	d
GL_CONVOLUTION_WIDTH	./GL/glew.h	/^#define GL_CONVOLUTION_WIDTH /;"	d
GL_CONVOLUTION_WIDTH_EXT	./GL/glew.h	/^#define GL_CONVOLUTION_WIDTH_EXT /;"	d
GL_CON_0_ATI	./GL/glew.h	/^#define GL_CON_0_ATI /;"	d
GL_CON_1_ATI	./GL/glew.h	/^#define GL_CON_1_ATI /;"	d
GL_CON_2_ATI	./GL/glew.h	/^#define GL_CON_2_ATI /;"	d
GL_CON_3_ATI	./GL/glew.h	/^#define GL_CON_3_ATI /;"	d
GL_CON_4_ATI	./GL/glew.h	/^#define GL_CON_4_ATI /;"	d
GL_CON_5_ATI	./GL/glew.h	/^#define GL_CON_5_ATI /;"	d
GL_CON_6_ATI	./GL/glew.h	/^#define GL_CON_6_ATI /;"	d
GL_CON_7_ATI	./GL/glew.h	/^#define GL_CON_7_ATI /;"	d
GL_COORD_REPLACE	./GL/glew.h	/^#define GL_COORD_REPLACE /;"	d
GL_COORD_REPLACE_ARB	./GL/glew.h	/^#define GL_COORD_REPLACE_ARB /;"	d
GL_COORD_REPLACE_NV	./GL/glew.h	/^#define GL_COORD_REPLACE_NV /;"	d
GL_COORD_REPLACE_OES	./GL/glew.h	/^#define GL_COORD_REPLACE_OES /;"	d
GL_COPY	./GL/glew.h	/^#define GL_COPY /;"	d
GL_COPY_INVERTED	./GL/glew.h	/^#define GL_COPY_INVERTED /;"	d
GL_COPY_PIXEL_TOKEN	./GL/glew.h	/^#define GL_COPY_PIXEL_TOKEN /;"	d
GL_COPY_READ_BUFFER	./GL/glew.h	/^#define GL_COPY_READ_BUFFER /;"	d
GL_COPY_READ_BUFFER_BINDING	./GL/glew.h	/^#define GL_COPY_READ_BUFFER_BINDING /;"	d
GL_COPY_READ_BUFFER_NV	./GL/glew.h	/^#define GL_COPY_READ_BUFFER_NV /;"	d
GL_COPY_WRITE_BUFFER	./GL/glew.h	/^#define GL_COPY_WRITE_BUFFER /;"	d
GL_COPY_WRITE_BUFFER_BINDING	./GL/glew.h	/^#define GL_COPY_WRITE_BUFFER_BINDING /;"	d
GL_COPY_WRITE_BUFFER_NV	./GL/glew.h	/^#define GL_COPY_WRITE_BUFFER_NV /;"	d
GL_COUNTER_RANGE_AMD	./GL/glew.h	/^#define GL_COUNTER_RANGE_AMD /;"	d
GL_COUNTER_TYPE_AMD	./GL/glew.h	/^#define GL_COUNTER_TYPE_AMD /;"	d
GL_COUNT_DOWN_NV	./GL/glew.h	/^#define GL_COUNT_DOWN_NV /;"	d
GL_COUNT_UP_NV	./GL/glew.h	/^#define GL_COUNT_UP_NV /;"	d
GL_COVERAGE_MODULATION_NV	./GL/glew.h	/^#define GL_COVERAGE_MODULATION_NV /;"	d
GL_COVERAGE_MODULATION_TABLE_NV	./GL/glew.h	/^#define GL_COVERAGE_MODULATION_TABLE_NV /;"	d
GL_COVERAGE_MODULATION_TABLE_SIZE_NV	./GL/glew.h	/^#define GL_COVERAGE_MODULATION_TABLE_SIZE_NV /;"	d
GL_CPU_OPTIMIZED_QCOM	./GL/glew.h	/^#define GL_CPU_OPTIMIZED_QCOM /;"	d
GL_CUBE_MAP_BINDING_SGIX	./GL/glew.h	/^#define GL_CUBE_MAP_BINDING_SGIX /;"	d
GL_CUBE_MAP_SGIX	./GL/glew.h	/^#define GL_CUBE_MAP_SGIX /;"	d
GL_CUBE_MAP_XN_SGIX	./GL/glew.h	/^#define GL_CUBE_MAP_XN_SGIX /;"	d
GL_CUBE_MAP_XP_SGIX	./GL/glew.h	/^#define GL_CUBE_MAP_XP_SGIX /;"	d
GL_CUBE_MAP_YN_SGIX	./GL/glew.h	/^#define GL_CUBE_MAP_YN_SGIX /;"	d
GL_CUBE_MAP_YP_SGIX	./GL/glew.h	/^#define GL_CUBE_MAP_YP_SGIX /;"	d
GL_CUBE_MAP_ZN_SGIX	./GL/glew.h	/^#define GL_CUBE_MAP_ZN_SGIX /;"	d
GL_CUBE_MAP_ZP_SGIX	./GL/glew.h	/^#define GL_CUBE_MAP_ZP_SGIX /;"	d
GL_CUBIC_CURVE_TO_NV	./GL/glew.h	/^#define GL_CUBIC_CURVE_TO_NV /;"	d
GL_CUBIC_EXT	./GL/glew.h	/^#define GL_CUBIC_EXT /;"	d
GL_CUBIC_IMG	./GL/glew.h	/^#define GL_CUBIC_IMG /;"	d
GL_CUBIC_MIPMAP_LINEAR_IMG	./GL/glew.h	/^#define GL_CUBIC_MIPMAP_LINEAR_IMG /;"	d
GL_CUBIC_MIPMAP_NEAREST_IMG	./GL/glew.h	/^#define GL_CUBIC_MIPMAP_NEAREST_IMG /;"	d
GL_CULL_FACE	./GL/glew.h	/^#define GL_CULL_FACE /;"	d
GL_CULL_FACE_MODE	./GL/glew.h	/^#define GL_CULL_FACE_MODE /;"	d
GL_CULL_FRAGMENT_NV	./GL/glew.h	/^#define GL_CULL_FRAGMENT_NV /;"	d
GL_CULL_MODES_NV	./GL/glew.h	/^#define GL_CULL_MODES_NV /;"	d
GL_CULL_VERTEX_EXT	./GL/glew.h	/^#define GL_CULL_VERTEX_EXT /;"	d
GL_CULL_VERTEX_EYE_POSITION_EXT	./GL/glew.h	/^#define GL_CULL_VERTEX_EYE_POSITION_EXT /;"	d
GL_CULL_VERTEX_IBM	./GL/glew.h	/^#define GL_CULL_VERTEX_IBM /;"	d
GL_CULL_VERTEX_OBJECT_POSITION_EXT	./GL/glew.h	/^#define GL_CULL_VERTEX_OBJECT_POSITION_EXT /;"	d
GL_CURRENT_ATTRIB_NV	./GL/glew.h	/^#define GL_CURRENT_ATTRIB_NV /;"	d
GL_CURRENT_BINORMAL_EXT	./GL/glew.h	/^#define GL_CURRENT_BINORMAL_EXT /;"	d
GL_CURRENT_BIT	./GL/glew.h	/^#define GL_CURRENT_BIT /;"	d
GL_CURRENT_COLOR	./GL/glew.h	/^#define GL_CURRENT_COLOR /;"	d
GL_CURRENT_FOG_COORD	./GL/glew.h	/^#define GL_CURRENT_FOG_COORD GL_CURRENT_FOG_COORDI/;"	d
GL_CURRENT_FOG_COORDINATE	./GL/glew.h	/^#define GL_CURRENT_FOG_COORDINATE /;"	d
GL_CURRENT_FOG_COORDINATE_EXT	./GL/glew.h	/^#define GL_CURRENT_FOG_COORDINATE_EXT /;"	d
GL_CURRENT_INDEX	./GL/glew.h	/^#define GL_CURRENT_INDEX /;"	d
GL_CURRENT_MATRIX_ARB	./GL/glew.h	/^#define GL_CURRENT_MATRIX_ARB /;"	d
GL_CURRENT_MATRIX_INDEX_ARB	./GL/glew.h	/^#define GL_CURRENT_MATRIX_INDEX_ARB /;"	d
GL_CURRENT_MATRIX_NV	./GL/glew.h	/^#define GL_CURRENT_MATRIX_NV /;"	d
GL_CURRENT_MATRIX_STACK_DEPTH_ARB	./GL/glew.h	/^#define GL_CURRENT_MATRIX_STACK_DEPTH_ARB /;"	d
GL_CURRENT_MATRIX_STACK_DEPTH_NV	./GL/glew.h	/^#define GL_CURRENT_MATRIX_STACK_DEPTH_NV /;"	d
GL_CURRENT_NORMAL	./GL/glew.h	/^#define GL_CURRENT_NORMAL /;"	d
GL_CURRENT_OCCLUSION_QUERY_ID_NV	./GL/glew.h	/^#define GL_CURRENT_OCCLUSION_QUERY_ID_NV /;"	d
GL_CURRENT_PALETTE_MATRIX_ARB	./GL/glew.h	/^#define GL_CURRENT_PALETTE_MATRIX_ARB /;"	d
GL_CURRENT_PALETTE_MATRIX_OES	./GL/glew.h	/^#define GL_CURRENT_PALETTE_MATRIX_OES /;"	d
GL_CURRENT_PROGRAM	./GL/glew.h	/^#define GL_CURRENT_PROGRAM /;"	d
GL_CURRENT_QUERY	./GL/glew.h	/^#define GL_CURRENT_QUERY /;"	d
GL_CURRENT_QUERY_ANGLE	./GL/glew.h	/^#define GL_CURRENT_QUERY_ANGLE /;"	d
GL_CURRENT_QUERY_ARB	./GL/glew.h	/^#define GL_CURRENT_QUERY_ARB /;"	d
GL_CURRENT_QUERY_EXT	./GL/glew.h	/^#define GL_CURRENT_QUERY_EXT /;"	d
GL_CURRENT_RASTER_COLOR	./GL/glew.h	/^#define GL_CURRENT_RASTER_COLOR /;"	d
GL_CURRENT_RASTER_DISTANCE	./GL/glew.h	/^#define GL_CURRENT_RASTER_DISTANCE /;"	d
GL_CURRENT_RASTER_INDEX	./GL/glew.h	/^#define GL_CURRENT_RASTER_INDEX /;"	d
GL_CURRENT_RASTER_NORMAL_EXT	./GL/glew.h	/^#define GL_CURRENT_RASTER_NORMAL_EXT /;"	d
GL_CURRENT_RASTER_POSITION	./GL/glew.h	/^#define GL_CURRENT_RASTER_POSITION /;"	d
GL_CURRENT_RASTER_POSITION_VALID	./GL/glew.h	/^#define GL_CURRENT_RASTER_POSITION_VALID /;"	d
GL_CURRENT_RASTER_SECONDARY_COLOR	./GL/glew.h	/^#define GL_CURRENT_RASTER_SECONDARY_COLOR /;"	d
GL_CURRENT_RASTER_TEXTURE_COORDS	./GL/glew.h	/^#define GL_CURRENT_RASTER_TEXTURE_COORDS /;"	d
GL_CURRENT_SAMPLE_COUNT_QUERY_NV	./GL/glew.h	/^#define GL_CURRENT_SAMPLE_COUNT_QUERY_NV /;"	d
GL_CURRENT_SECONDARY_COLOR	./GL/glew.h	/^#define GL_CURRENT_SECONDARY_COLOR /;"	d
GL_CURRENT_SECONDARY_COLOR_EXT	./GL/glew.h	/^#define GL_CURRENT_SECONDARY_COLOR_EXT /;"	d
GL_CURRENT_TANGENT_EXT	./GL/glew.h	/^#define GL_CURRENT_TANGENT_EXT /;"	d
GL_CURRENT_TEXTURE_COORDS	./GL/glew.h	/^#define GL_CURRENT_TEXTURE_COORDS /;"	d
GL_CURRENT_TIME_NV	./GL/glew.h	/^#define GL_CURRENT_TIME_NV /;"	d
GL_CURRENT_VERTEX_ATTRIB	./GL/glew.h	/^#define GL_CURRENT_VERTEX_ATTRIB /;"	d
GL_CURRENT_VERTEX_ATTRIB_ARB	./GL/glew.h	/^#define GL_CURRENT_VERTEX_ATTRIB_ARB /;"	d
GL_CURRENT_VERTEX_EXT	./GL/glew.h	/^#define GL_CURRENT_VERTEX_EXT /;"	d
GL_CURRENT_VERTEX_WEIGHT_EXT	./GL/glew.h	/^#define GL_CURRENT_VERTEX_WEIGHT_EXT /;"	d
GL_CURRENT_WEIGHT_ARB	./GL/glew.h	/^#define GL_CURRENT_WEIGHT_ARB /;"	d
GL_CW	./GL/glew.h	/^#define GL_CW /;"	d
GL_D3D12_FENCE_VALUE_EXT	./GL/glew.h	/^#define GL_D3D12_FENCE_VALUE_EXT /;"	d
GL_DARKEN_KHR	./GL/glew.h	/^#define GL_DARKEN_KHR /;"	d
GL_DARKEN_NV	./GL/glew.h	/^#define GL_DARKEN_NV /;"	d
GL_DATA_BUFFER_AMD	./GL/glew.h	/^#define GL_DATA_BUFFER_AMD /;"	d
GL_DEBUG_CALLBACK_FUNCTION	./GL/glew.h	/^#define GL_DEBUG_CALLBACK_FUNCTION /;"	d
GL_DEBUG_CALLBACK_FUNCTION_ARB	./GL/glew.h	/^#define GL_DEBUG_CALLBACK_FUNCTION_ARB /;"	d
GL_DEBUG_CALLBACK_USER_PARAM	./GL/glew.h	/^#define GL_DEBUG_CALLBACK_USER_PARAM /;"	d
GL_DEBUG_CALLBACK_USER_PARAM_ARB	./GL/glew.h	/^#define GL_DEBUG_CALLBACK_USER_PARAM_ARB /;"	d
GL_DEBUG_CATEGORY_API_ERROR_AMD	./GL/glew.h	/^#define GL_DEBUG_CATEGORY_API_ERROR_AMD /;"	d
GL_DEBUG_CATEGORY_APPLICATION_AMD	./GL/glew.h	/^#define GL_DEBUG_CATEGORY_APPLICATION_AMD /;"	d
GL_DEBUG_CATEGORY_DEPRECATION_AMD	./GL/glew.h	/^#define GL_DEBUG_CATEGORY_DEPRECATION_AMD /;"	d
GL_DEBUG_CATEGORY_OTHER_AMD	./GL/glew.h	/^#define GL_DEBUG_CATEGORY_OTHER_AMD /;"	d
GL_DEBUG_CATEGORY_PERFORMANCE_AMD	./GL/glew.h	/^#define GL_DEBUG_CATEGORY_PERFORMANCE_AMD /;"	d
GL_DEBUG_CATEGORY_SHADER_COMPILER_AMD	./GL/glew.h	/^#define GL_DEBUG_CATEGORY_SHADER_COMPILER_AMD /;"	d
GL_DEBUG_CATEGORY_UNDEFINED_BEHAVIOR_AMD	./GL/glew.h	/^#define GL_DEBUG_CATEGORY_UNDEFINED_BEHAVIOR_AMD /;"	d
GL_DEBUG_CATEGORY_WINDOW_SYSTEM_AMD	./GL/glew.h	/^#define GL_DEBUG_CATEGORY_WINDOW_SYSTEM_AMD /;"	d
GL_DEBUG_GROUP_STACK_DEPTH	./GL/glew.h	/^#define GL_DEBUG_GROUP_STACK_DEPTH /;"	d
GL_DEBUG_LOGGED_MESSAGES	./GL/glew.h	/^#define GL_DEBUG_LOGGED_MESSAGES /;"	d
GL_DEBUG_LOGGED_MESSAGES_AMD	./GL/glew.h	/^#define GL_DEBUG_LOGGED_MESSAGES_AMD /;"	d
GL_DEBUG_LOGGED_MESSAGES_ARB	./GL/glew.h	/^#define GL_DEBUG_LOGGED_MESSAGES_ARB /;"	d
GL_DEBUG_NEXT_LOGGED_MESSAGE_LENGTH	./GL/glew.h	/^#define GL_DEBUG_NEXT_LOGGED_MESSAGE_LENGTH /;"	d
GL_DEBUG_NEXT_LOGGED_MESSAGE_LENGTH_ARB	./GL/glew.h	/^#define GL_DEBUG_NEXT_LOGGED_MESSAGE_LENGTH_ARB /;"	d
GL_DEBUG_OUTPUT	./GL/glew.h	/^#define GL_DEBUG_OUTPUT /;"	d
GL_DEBUG_OUTPUT_SYNCHRONOUS	./GL/glew.h	/^#define GL_DEBUG_OUTPUT_SYNCHRONOUS /;"	d
GL_DEBUG_OUTPUT_SYNCHRONOUS_ARB	./GL/glew.h	/^#define GL_DEBUG_OUTPUT_SYNCHRONOUS_ARB /;"	d
GL_DEBUG_REGAL	./GL/glew.h	/^#define GL_DEBUG_REGAL /;"	d
GL_DEBUG_SEVERITY_HIGH	./GL/glew.h	/^#define GL_DEBUG_SEVERITY_HIGH /;"	d
GL_DEBUG_SEVERITY_HIGH_AMD	./GL/glew.h	/^#define GL_DEBUG_SEVERITY_HIGH_AMD /;"	d
GL_DEBUG_SEVERITY_HIGH_ARB	./GL/glew.h	/^#define GL_DEBUG_SEVERITY_HIGH_ARB /;"	d
GL_DEBUG_SEVERITY_LOW	./GL/glew.h	/^#define GL_DEBUG_SEVERITY_LOW /;"	d
GL_DEBUG_SEVERITY_LOW_AMD	./GL/glew.h	/^#define GL_DEBUG_SEVERITY_LOW_AMD /;"	d
GL_DEBUG_SEVERITY_LOW_ARB	./GL/glew.h	/^#define GL_DEBUG_SEVERITY_LOW_ARB /;"	d
GL_DEBUG_SEVERITY_MEDIUM	./GL/glew.h	/^#define GL_DEBUG_SEVERITY_MEDIUM /;"	d
GL_DEBUG_SEVERITY_MEDIUM_AMD	./GL/glew.h	/^#define GL_DEBUG_SEVERITY_MEDIUM_AMD /;"	d
GL_DEBUG_SEVERITY_MEDIUM_ARB	./GL/glew.h	/^#define GL_DEBUG_SEVERITY_MEDIUM_ARB /;"	d
GL_DEBUG_SEVERITY_NOTIFICATION	./GL/glew.h	/^#define GL_DEBUG_SEVERITY_NOTIFICATION /;"	d
GL_DEBUG_SOURCE_API	./GL/glew.h	/^#define GL_DEBUG_SOURCE_API /;"	d
GL_DEBUG_SOURCE_API_ARB	./GL/glew.h	/^#define GL_DEBUG_SOURCE_API_ARB /;"	d
GL_DEBUG_SOURCE_APPLICATION	./GL/glew.h	/^#define GL_DEBUG_SOURCE_APPLICATION /;"	d
GL_DEBUG_SOURCE_APPLICATION_ARB	./GL/glew.h	/^#define GL_DEBUG_SOURCE_APPLICATION_ARB /;"	d
GL_DEBUG_SOURCE_OTHER	./GL/glew.h	/^#define GL_DEBUG_SOURCE_OTHER /;"	d
GL_DEBUG_SOURCE_OTHER_ARB	./GL/glew.h	/^#define GL_DEBUG_SOURCE_OTHER_ARB /;"	d
GL_DEBUG_SOURCE_SHADER_COMPILER	./GL/glew.h	/^#define GL_DEBUG_SOURCE_SHADER_COMPILER /;"	d
GL_DEBUG_SOURCE_SHADER_COMPILER_ARB	./GL/glew.h	/^#define GL_DEBUG_SOURCE_SHADER_COMPILER_ARB /;"	d
GL_DEBUG_SOURCE_THIRD_PARTY	./GL/glew.h	/^#define GL_DEBUG_SOURCE_THIRD_PARTY /;"	d
GL_DEBUG_SOURCE_THIRD_PARTY_ARB	./GL/glew.h	/^#define GL_DEBUG_SOURCE_THIRD_PARTY_ARB /;"	d
GL_DEBUG_SOURCE_WINDOW_SYSTEM	./GL/glew.h	/^#define GL_DEBUG_SOURCE_WINDOW_SYSTEM /;"	d
GL_DEBUG_SOURCE_WINDOW_SYSTEM_ARB	./GL/glew.h	/^#define GL_DEBUG_SOURCE_WINDOW_SYSTEM_ARB /;"	d
GL_DEBUG_TYPE_DEPRECATED_BEHAVIOR	./GL/glew.h	/^#define GL_DEBUG_TYPE_DEPRECATED_BEHAVIOR /;"	d
GL_DEBUG_TYPE_DEPRECATED_BEHAVIOR_ARB	./GL/glew.h	/^#define GL_DEBUG_TYPE_DEPRECATED_BEHAVIOR_ARB /;"	d
GL_DEBUG_TYPE_ERROR	./GL/glew.h	/^#define GL_DEBUG_TYPE_ERROR /;"	d
GL_DEBUG_TYPE_ERROR_ARB	./GL/glew.h	/^#define GL_DEBUG_TYPE_ERROR_ARB /;"	d
GL_DEBUG_TYPE_MARKER	./GL/glew.h	/^#define GL_DEBUG_TYPE_MARKER /;"	d
GL_DEBUG_TYPE_OTHER	./GL/glew.h	/^#define GL_DEBUG_TYPE_OTHER /;"	d
GL_DEBUG_TYPE_OTHER_ARB	./GL/glew.h	/^#define GL_DEBUG_TYPE_OTHER_ARB /;"	d
GL_DEBUG_TYPE_PERFORMANCE	./GL/glew.h	/^#define GL_DEBUG_TYPE_PERFORMANCE /;"	d
GL_DEBUG_TYPE_PERFORMANCE_ARB	./GL/glew.h	/^#define GL_DEBUG_TYPE_PERFORMANCE_ARB /;"	d
GL_DEBUG_TYPE_POP_GROUP	./GL/glew.h	/^#define GL_DEBUG_TYPE_POP_GROUP /;"	d
GL_DEBUG_TYPE_PORTABILITY	./GL/glew.h	/^#define GL_DEBUG_TYPE_PORTABILITY /;"	d
GL_DEBUG_TYPE_PORTABILITY_ARB	./GL/glew.h	/^#define GL_DEBUG_TYPE_PORTABILITY_ARB /;"	d
GL_DEBUG_TYPE_PUSH_GROUP	./GL/glew.h	/^#define GL_DEBUG_TYPE_PUSH_GROUP /;"	d
GL_DEBUG_TYPE_UNDEFINED_BEHAVIOR	./GL/glew.h	/^#define GL_DEBUG_TYPE_UNDEFINED_BEHAVIOR /;"	d
GL_DEBUG_TYPE_UNDEFINED_BEHAVIOR_ARB	./GL/glew.h	/^#define GL_DEBUG_TYPE_UNDEFINED_BEHAVIOR_ARB /;"	d
GL_DECAL	./GL/glew.h	/^#define GL_DECAL /;"	d
GL_DECODE_EXT	./GL/glew.h	/^#define GL_DECODE_EXT /;"	d
GL_DECR	./GL/glew.h	/^#define GL_DECR /;"	d
GL_DECR_WRAP	./GL/glew.h	/^#define GL_DECR_WRAP /;"	d
GL_DECR_WRAP_EXT	./GL/glew.h	/^#define GL_DECR_WRAP_EXT /;"	d
GL_DEDICATED_MEMORY_OBJECT_EXT	./GL/glew.h	/^#define GL_DEDICATED_MEMORY_OBJECT_EXT /;"	d
GL_DELETE_STATUS	./GL/glew.h	/^#define GL_DELETE_STATUS /;"	d
GL_DEPENDENT_AR_TEXTURE_2D_NV	./GL/glew.h	/^#define GL_DEPENDENT_AR_TEXTURE_2D_NV /;"	d
GL_DEPENDENT_GB_TEXTURE_2D_NV	./GL/glew.h	/^#define GL_DEPENDENT_GB_TEXTURE_2D_NV /;"	d
GL_DEPENDENT_HILO_TEXTURE_2D_NV	./GL/glew.h	/^#define GL_DEPENDENT_HILO_TEXTURE_2D_NV /;"	d
GL_DEPENDENT_RGB_TEXTURE_3D_NV	./GL/glew.h	/^#define GL_DEPENDENT_RGB_TEXTURE_3D_NV /;"	d
GL_DEPENDENT_RGB_TEXTURE_CUBE_MAP_NV	./GL/glew.h	/^#define GL_DEPENDENT_RGB_TEXTURE_CUBE_MAP_NV /;"	d
GL_DEPTH	./GL/glew.h	/^#define GL_DEPTH /;"	d
GL_DEPTH24_STENCIL8	./GL/glew.h	/^#define GL_DEPTH24_STENCIL8 /;"	d
GL_DEPTH24_STENCIL8_EXT	./GL/glew.h	/^#define GL_DEPTH24_STENCIL8_EXT /;"	d
GL_DEPTH24_STENCIL8_OES	./GL/glew.h	/^#define GL_DEPTH24_STENCIL8_OES /;"	d
GL_DEPTH32F_STENCIL8	./GL/glew.h	/^#define GL_DEPTH32F_STENCIL8 /;"	d
GL_DEPTH32F_STENCIL8_NV	./GL/glew.h	/^#define GL_DEPTH32F_STENCIL8_NV /;"	d
GL_DEPTH_ATTACHMENT	./GL/glew.h	/^#define GL_DEPTH_ATTACHMENT /;"	d
GL_DEPTH_ATTACHMENT_EXT	./GL/glew.h	/^#define GL_DEPTH_ATTACHMENT_EXT /;"	d
GL_DEPTH_ATTACHMENT_OES	./GL/glew.h	/^#define GL_DEPTH_ATTACHMENT_OES /;"	d
GL_DEPTH_BIAS	./GL/glew.h	/^#define GL_DEPTH_BIAS /;"	d
GL_DEPTH_BITS	./GL/glew.h	/^#define GL_DEPTH_BITS /;"	d
GL_DEPTH_BOUNDS_EXT	./GL/glew.h	/^#define GL_DEPTH_BOUNDS_EXT /;"	d
GL_DEPTH_BOUNDS_TEST_EXT	./GL/glew.h	/^#define GL_DEPTH_BOUNDS_TEST_EXT /;"	d
GL_DEPTH_BUFFER	./GL/glew.h	/^#define GL_DEPTH_BUFFER /;"	d
GL_DEPTH_BUFFER_BIT	./GL/glew.h	/^#define GL_DEPTH_BUFFER_BIT /;"	d
GL_DEPTH_BUFFER_BIT0_QCOM	./GL/glew.h	/^#define GL_DEPTH_BUFFER_BIT0_QCOM /;"	d
GL_DEPTH_BUFFER_BIT1_QCOM	./GL/glew.h	/^#define GL_DEPTH_BUFFER_BIT1_QCOM /;"	d
GL_DEPTH_BUFFER_BIT2_QCOM	./GL/glew.h	/^#define GL_DEPTH_BUFFER_BIT2_QCOM /;"	d
GL_DEPTH_BUFFER_BIT3_QCOM	./GL/glew.h	/^#define GL_DEPTH_BUFFER_BIT3_QCOM /;"	d
GL_DEPTH_BUFFER_BIT4_QCOM	./GL/glew.h	/^#define GL_DEPTH_BUFFER_BIT4_QCOM /;"	d
GL_DEPTH_BUFFER_BIT5_QCOM	./GL/glew.h	/^#define GL_DEPTH_BUFFER_BIT5_QCOM /;"	d
GL_DEPTH_BUFFER_BIT6_QCOM	./GL/glew.h	/^#define GL_DEPTH_BUFFER_BIT6_QCOM /;"	d
GL_DEPTH_BUFFER_BIT7_QCOM	./GL/glew.h	/^#define GL_DEPTH_BUFFER_BIT7_QCOM /;"	d
GL_DEPTH_BUFFER_FLOAT_MODE_NV	./GL/glew.h	/^#define GL_DEPTH_BUFFER_FLOAT_MODE_NV /;"	d
GL_DEPTH_CLAMP	./GL/glew.h	/^#define GL_DEPTH_CLAMP /;"	d
GL_DEPTH_CLAMP_EXT	./GL/glew.h	/^#define GL_DEPTH_CLAMP_EXT /;"	d
GL_DEPTH_CLAMP_FAR_AMD	./GL/glew.h	/^#define GL_DEPTH_CLAMP_FAR_AMD /;"	d
GL_DEPTH_CLAMP_NEAR_AMD	./GL/glew.h	/^#define GL_DEPTH_CLAMP_NEAR_AMD /;"	d
GL_DEPTH_CLAMP_NV	./GL/glew.h	/^#define GL_DEPTH_CLAMP_NV /;"	d
GL_DEPTH_CLEAR_VALUE	./GL/glew.h	/^#define GL_DEPTH_CLEAR_VALUE /;"	d
GL_DEPTH_COMPONENT	./GL/glew.h	/^#define GL_DEPTH_COMPONENT /;"	d
GL_DEPTH_COMPONENT16	./GL/glew.h	/^#define GL_DEPTH_COMPONENT16 /;"	d
GL_DEPTH_COMPONENT16_ARB	./GL/glew.h	/^#define GL_DEPTH_COMPONENT16_ARB /;"	d
GL_DEPTH_COMPONENT16_NONLINEAR_NV	./GL/glew.h	/^#define GL_DEPTH_COMPONENT16_NONLINEAR_NV /;"	d
GL_DEPTH_COMPONENT16_OES	./GL/glew.h	/^#define GL_DEPTH_COMPONENT16_OES /;"	d
GL_DEPTH_COMPONENT16_SGIX	./GL/glew.h	/^#define GL_DEPTH_COMPONENT16_SGIX /;"	d
GL_DEPTH_COMPONENT24	./GL/glew.h	/^#define GL_DEPTH_COMPONENT24 /;"	d
GL_DEPTH_COMPONENT24_ARB	./GL/glew.h	/^#define GL_DEPTH_COMPONENT24_ARB /;"	d
GL_DEPTH_COMPONENT24_OES	./GL/glew.h	/^#define GL_DEPTH_COMPONENT24_OES /;"	d
GL_DEPTH_COMPONENT24_SGIX	./GL/glew.h	/^#define GL_DEPTH_COMPONENT24_SGIX /;"	d
GL_DEPTH_COMPONENT32	./GL/glew.h	/^#define GL_DEPTH_COMPONENT32 /;"	d
GL_DEPTH_COMPONENT32F	./GL/glew.h	/^#define GL_DEPTH_COMPONENT32F /;"	d
GL_DEPTH_COMPONENT32F_NV	./GL/glew.h	/^#define GL_DEPTH_COMPONENT32F_NV /;"	d
GL_DEPTH_COMPONENT32_ARB	./GL/glew.h	/^#define GL_DEPTH_COMPONENT32_ARB /;"	d
GL_DEPTH_COMPONENT32_OES	./GL/glew.h	/^#define GL_DEPTH_COMPONENT32_OES /;"	d
GL_DEPTH_COMPONENT32_SGIX	./GL/glew.h	/^#define GL_DEPTH_COMPONENT32_SGIX /;"	d
GL_DEPTH_COMPONENTS	./GL/glew.h	/^#define GL_DEPTH_COMPONENTS /;"	d
GL_DEPTH_EXT	./GL/glew.h	/^#define GL_DEPTH_EXT /;"	d
GL_DEPTH_FUNC	./GL/glew.h	/^#define GL_DEPTH_FUNC /;"	d
GL_DEPTH_PASS_INSTRUMENT_COUNTERS_SGIX	./GL/glew.h	/^#define GL_DEPTH_PASS_INSTRUMENT_COUNTERS_SGIX /;"	d
GL_DEPTH_PASS_INSTRUMENT_MAX_SGIX	./GL/glew.h	/^#define GL_DEPTH_PASS_INSTRUMENT_MAX_SGIX /;"	d
GL_DEPTH_PASS_INSTRUMENT_SGIX	./GL/glew.h	/^#define GL_DEPTH_PASS_INSTRUMENT_SGIX /;"	d
GL_DEPTH_RANGE	./GL/glew.h	/^#define GL_DEPTH_RANGE /;"	d
GL_DEPTH_RENDERABLE	./GL/glew.h	/^#define GL_DEPTH_RENDERABLE /;"	d
GL_DEPTH_SAMPLES_NV	./GL/glew.h	/^#define GL_DEPTH_SAMPLES_NV /;"	d
GL_DEPTH_SCALE	./GL/glew.h	/^#define GL_DEPTH_SCALE /;"	d
GL_DEPTH_STENCIL	./GL/glew.h	/^#define GL_DEPTH_STENCIL /;"	d
GL_DEPTH_STENCIL_ATTACHMENT	./GL/glew.h	/^#define GL_DEPTH_STENCIL_ATTACHMENT /;"	d
GL_DEPTH_STENCIL_EXT	./GL/glew.h	/^#define GL_DEPTH_STENCIL_EXT /;"	d
GL_DEPTH_STENCIL_NV	./GL/glew.h	/^#define GL_DEPTH_STENCIL_NV /;"	d
GL_DEPTH_STENCIL_OES	./GL/glew.h	/^#define GL_DEPTH_STENCIL_OES /;"	d
GL_DEPTH_STENCIL_TEXTURE_MODE	./GL/glew.h	/^#define GL_DEPTH_STENCIL_TEXTURE_MODE /;"	d
GL_DEPTH_STENCIL_TO_BGRA_NV	./GL/glew.h	/^#define GL_DEPTH_STENCIL_TO_BGRA_NV /;"	d
GL_DEPTH_STENCIL_TO_RGBA_NV	./GL/glew.h	/^#define GL_DEPTH_STENCIL_TO_RGBA_NV /;"	d
GL_DEPTH_TEST	./GL/glew.h	/^#define GL_DEPTH_TEST /;"	d
GL_DEPTH_TEXTURE_MODE	./GL/glew.h	/^#define GL_DEPTH_TEXTURE_MODE /;"	d
GL_DEPTH_TEXTURE_MODE_ARB	./GL/glew.h	/^#define GL_DEPTH_TEXTURE_MODE_ARB /;"	d
GL_DEPTH_WRITEMASK	./GL/glew.h	/^#define GL_DEPTH_WRITEMASK /;"	d
GL_DETACHED_BUFFERS_NV	./GL/glew.h	/^#define GL_DETACHED_BUFFERS_NV /;"	d
GL_DETACHED_MEMORY_INCARNATION_NV	./GL/glew.h	/^#define GL_DETACHED_MEMORY_INCARNATION_NV /;"	d
GL_DETACHED_TEXTURES_NV	./GL/glew.h	/^#define GL_DETACHED_TEXTURES_NV /;"	d
GL_DEVICE_LUID_EXT	./GL/glew.h	/^#define GL_DEVICE_LUID_EXT /;"	d
GL_DEVICE_NODE_MASK_EXT	./GL/glew.h	/^#define GL_DEVICE_NODE_MASK_EXT /;"	d
GL_DEVICE_UUID_EXT	./GL/glew.h	/^#define GL_DEVICE_UUID_EXT /;"	d
GL_DIFFERENCE_KHR	./GL/glew.h	/^#define GL_DIFFERENCE_KHR /;"	d
GL_DIFFERENCE_NV	./GL/glew.h	/^#define GL_DIFFERENCE_NV /;"	d
GL_DIFFUSE	./GL/glew.h	/^#define GL_DIFFUSE /;"	d
GL_DISCARD_ATI	./GL/glew.h	/^#define GL_DISCARD_ATI /;"	d
GL_DISCARD_NV	./GL/glew.h	/^#define GL_DISCARD_NV /;"	d
GL_DISCRETE_AMD	./GL/glew.h	/^#define GL_DISCRETE_AMD /;"	d
GL_DISJOINT_NV	./GL/glew.h	/^#define GL_DISJOINT_NV /;"	d
GL_DISPATCH_INDIRECT_BUFFER	./GL/glew.h	/^#define GL_DISPATCH_INDIRECT_BUFFER /;"	d
GL_DISPATCH_INDIRECT_BUFFER_BINDING	./GL/glew.h	/^#define GL_DISPATCH_INDIRECT_BUFFER_BINDING /;"	d
GL_DISPLAY_LIST	./GL/glew.h	/^#define GL_DISPLAY_LIST /;"	d
GL_DISTANCE_ATTENUATION_EXT	./GL/glew.h	/^#define GL_DISTANCE_ATTENUATION_EXT /;"	d
GL_DITHER	./GL/glew.h	/^#define GL_DITHER /;"	d
GL_DMP_PROGRAM_BINARY_DMP	./GL/glew.h	/^#define GL_DMP_PROGRAM_BINARY_DMP /;"	d
GL_DMP_program_binary	./GL/glew.h	/^#define GL_DMP_program_binary /;"	d
GL_DMP_shader_binary	./GL/glew.h	/^#define GL_DMP_shader_binary /;"	d
GL_DOMAIN	./GL/glew.h	/^#define GL_DOMAIN /;"	d
GL_DONT_CARE	./GL/glew.h	/^#define GL_DONT_CARE /;"	d
GL_DOT2_ADD_ATI	./GL/glew.h	/^#define GL_DOT2_ADD_ATI /;"	d
GL_DOT3_ATI	./GL/glew.h	/^#define GL_DOT3_ATI /;"	d
GL_DOT3_RGB	./GL/glew.h	/^#define GL_DOT3_RGB /;"	d
GL_DOT3_RGBA	./GL/glew.h	/^#define GL_DOT3_RGBA /;"	d
GL_DOT3_RGBA_ARB	./GL/glew.h	/^#define GL_DOT3_RGBA_ARB /;"	d
GL_DOT3_RGBA_EXT	./GL/glew.h	/^#define GL_DOT3_RGBA_EXT /;"	d
GL_DOT3_RGBA_IMG	./GL/glew.h	/^#define GL_DOT3_RGBA_IMG /;"	d
GL_DOT3_RGB_ARB	./GL/glew.h	/^#define GL_DOT3_RGB_ARB /;"	d
GL_DOT3_RGB_EXT	./GL/glew.h	/^#define GL_DOT3_RGB_EXT /;"	d
GL_DOT4_ATI	./GL/glew.h	/^#define GL_DOT4_ATI /;"	d
GL_DOT_PRODUCT_AFFINE_DEPTH_REPLACE_NV	./GL/glew.h	/^#define GL_DOT_PRODUCT_AFFINE_DEPTH_REPLACE_NV /;"	d
GL_DOT_PRODUCT_CONST_EYE_REFLECT_CUBE_MAP_NV	./GL/glew.h	/^#define GL_DOT_PRODUCT_CONST_EYE_REFLECT_CUBE_MAP_NV /;"	d
GL_DOT_PRODUCT_DEPTH_REPLACE_NV	./GL/glew.h	/^#define GL_DOT_PRODUCT_DEPTH_REPLACE_NV /;"	d
GL_DOT_PRODUCT_DIFFUSE_CUBE_MAP_NV	./GL/glew.h	/^#define GL_DOT_PRODUCT_DIFFUSE_CUBE_MAP_NV /;"	d
GL_DOT_PRODUCT_NV	./GL/glew.h	/^#define GL_DOT_PRODUCT_NV /;"	d
GL_DOT_PRODUCT_PASS_THROUGH_NV	./GL/glew.h	/^#define GL_DOT_PRODUCT_PASS_THROUGH_NV /;"	d
GL_DOT_PRODUCT_REFLECT_CUBE_MAP_NV	./GL/glew.h	/^#define GL_DOT_PRODUCT_REFLECT_CUBE_MAP_NV /;"	d
GL_DOT_PRODUCT_TEXTURE_1D_NV	./GL/glew.h	/^#define GL_DOT_PRODUCT_TEXTURE_1D_NV /;"	d
GL_DOT_PRODUCT_TEXTURE_2D_NV	./GL/glew.h	/^#define GL_DOT_PRODUCT_TEXTURE_2D_NV /;"	d
GL_DOT_PRODUCT_TEXTURE_3D_NV	./GL/glew.h	/^#define GL_DOT_PRODUCT_TEXTURE_3D_NV /;"	d
GL_DOT_PRODUCT_TEXTURE_CUBE_MAP_NV	./GL/glew.h	/^#define GL_DOT_PRODUCT_TEXTURE_CUBE_MAP_NV /;"	d
GL_DOT_PRODUCT_TEXTURE_RECTANGLE_NV	./GL/glew.h	/^#define GL_DOT_PRODUCT_TEXTURE_RECTANGLE_NV /;"	d
GL_DOUBLE	./GL/glew.h	/^#define GL_DOUBLE /;"	d
GL_DOUBLEBUFFER	./GL/glew.h	/^#define GL_DOUBLEBUFFER /;"	d
GL_DOUBLE_EXT	./GL/glew.h	/^#define GL_DOUBLE_EXT /;"	d
GL_DOUBLE_MAT2	./GL/glew.h	/^#define GL_DOUBLE_MAT2 /;"	d
GL_DOUBLE_MAT2_EXT	./GL/glew.h	/^#define GL_DOUBLE_MAT2_EXT /;"	d
GL_DOUBLE_MAT2x3	./GL/glew.h	/^#define GL_DOUBLE_MAT2x3 /;"	d
GL_DOUBLE_MAT2x3_EXT	./GL/glew.h	/^#define GL_DOUBLE_MAT2x3_EXT /;"	d
GL_DOUBLE_MAT2x4	./GL/glew.h	/^#define GL_DOUBLE_MAT2x4 /;"	d
GL_DOUBLE_MAT2x4_EXT	./GL/glew.h	/^#define GL_DOUBLE_MAT2x4_EXT /;"	d
GL_DOUBLE_MAT3	./GL/glew.h	/^#define GL_DOUBLE_MAT3 /;"	d
GL_DOUBLE_MAT3_EXT	./GL/glew.h	/^#define GL_DOUBLE_MAT3_EXT /;"	d
GL_DOUBLE_MAT3x2	./GL/glew.h	/^#define GL_DOUBLE_MAT3x2 /;"	d
GL_DOUBLE_MAT3x2_EXT	./GL/glew.h	/^#define GL_DOUBLE_MAT3x2_EXT /;"	d
GL_DOUBLE_MAT3x4	./GL/glew.h	/^#define GL_DOUBLE_MAT3x4 /;"	d
GL_DOUBLE_MAT3x4_EXT	./GL/glew.h	/^#define GL_DOUBLE_MAT3x4_EXT /;"	d
GL_DOUBLE_MAT4	./GL/glew.h	/^#define GL_DOUBLE_MAT4 /;"	d
GL_DOUBLE_MAT4_EXT	./GL/glew.h	/^#define GL_DOUBLE_MAT4_EXT /;"	d
GL_DOUBLE_MAT4x2	./GL/glew.h	/^#define GL_DOUBLE_MAT4x2 /;"	d
GL_DOUBLE_MAT4x2_EXT	./GL/glew.h	/^#define GL_DOUBLE_MAT4x2_EXT /;"	d
GL_DOUBLE_MAT4x3	./GL/glew.h	/^#define GL_DOUBLE_MAT4x3 /;"	d
GL_DOUBLE_MAT4x3_EXT	./GL/glew.h	/^#define GL_DOUBLE_MAT4x3_EXT /;"	d
GL_DOUBLE_VEC2	./GL/glew.h	/^#define GL_DOUBLE_VEC2 /;"	d
GL_DOUBLE_VEC2_EXT	./GL/glew.h	/^#define GL_DOUBLE_VEC2_EXT /;"	d
GL_DOUBLE_VEC3	./GL/glew.h	/^#define GL_DOUBLE_VEC3 /;"	d
GL_DOUBLE_VEC3_EXT	./GL/glew.h	/^#define GL_DOUBLE_VEC3_EXT /;"	d
GL_DOUBLE_VEC4	./GL/glew.h	/^#define GL_DOUBLE_VEC4 /;"	d
GL_DOUBLE_VEC4_EXT	./GL/glew.h	/^#define GL_DOUBLE_VEC4_EXT /;"	d
GL_DOWNSAMPLE_SCALES_IMG	./GL/glew.h	/^#define GL_DOWNSAMPLE_SCALES_IMG /;"	d
GL_DRAW_ARRAYS_COMMAND_NV	./GL/glew.h	/^#define GL_DRAW_ARRAYS_COMMAND_NV /;"	d
GL_DRAW_ARRAYS_INSTANCED_COMMAND_NV	./GL/glew.h	/^#define GL_DRAW_ARRAYS_INSTANCED_COMMAND_NV /;"	d
GL_DRAW_ARRAYS_STRIP_COMMAND_NV	./GL/glew.h	/^#define GL_DRAW_ARRAYS_STRIP_COMMAND_NV /;"	d
GL_DRAW_BUFFER	./GL/glew.h	/^#define GL_DRAW_BUFFER /;"	d
GL_DRAW_BUFFER0	./GL/glew.h	/^#define GL_DRAW_BUFFER0 /;"	d
GL_DRAW_BUFFER0_ARB	./GL/glew.h	/^#define GL_DRAW_BUFFER0_ARB /;"	d
GL_DRAW_BUFFER0_ATI	./GL/glew.h	/^#define GL_DRAW_BUFFER0_ATI /;"	d
GL_DRAW_BUFFER0_EXT	./GL/glew.h	/^#define GL_DRAW_BUFFER0_EXT /;"	d
GL_DRAW_BUFFER0_NV	./GL/glew.h	/^#define GL_DRAW_BUFFER0_NV /;"	d
GL_DRAW_BUFFER1	./GL/glew.h	/^#define GL_DRAW_BUFFER1 /;"	d
GL_DRAW_BUFFER10	./GL/glew.h	/^#define GL_DRAW_BUFFER10 /;"	d
GL_DRAW_BUFFER10_ARB	./GL/glew.h	/^#define GL_DRAW_BUFFER10_ARB /;"	d
GL_DRAW_BUFFER10_ATI	./GL/glew.h	/^#define GL_DRAW_BUFFER10_ATI /;"	d
GL_DRAW_BUFFER10_EXT	./GL/glew.h	/^#define GL_DRAW_BUFFER10_EXT /;"	d
GL_DRAW_BUFFER10_NV	./GL/glew.h	/^#define GL_DRAW_BUFFER10_NV /;"	d
GL_DRAW_BUFFER11	./GL/glew.h	/^#define GL_DRAW_BUFFER11 /;"	d
GL_DRAW_BUFFER11_ARB	./GL/glew.h	/^#define GL_DRAW_BUFFER11_ARB /;"	d
GL_DRAW_BUFFER11_ATI	./GL/glew.h	/^#define GL_DRAW_BUFFER11_ATI /;"	d
GL_DRAW_BUFFER11_EXT	./GL/glew.h	/^#define GL_DRAW_BUFFER11_EXT /;"	d
GL_DRAW_BUFFER11_NV	./GL/glew.h	/^#define GL_DRAW_BUFFER11_NV /;"	d
GL_DRAW_BUFFER12	./GL/glew.h	/^#define GL_DRAW_BUFFER12 /;"	d
GL_DRAW_BUFFER12_ARB	./GL/glew.h	/^#define GL_DRAW_BUFFER12_ARB /;"	d
GL_DRAW_BUFFER12_ATI	./GL/glew.h	/^#define GL_DRAW_BUFFER12_ATI /;"	d
GL_DRAW_BUFFER12_EXT	./GL/glew.h	/^#define GL_DRAW_BUFFER12_EXT /;"	d
GL_DRAW_BUFFER12_NV	./GL/glew.h	/^#define GL_DRAW_BUFFER12_NV /;"	d
GL_DRAW_BUFFER13	./GL/glew.h	/^#define GL_DRAW_BUFFER13 /;"	d
GL_DRAW_BUFFER13_ARB	./GL/glew.h	/^#define GL_DRAW_BUFFER13_ARB /;"	d
GL_DRAW_BUFFER13_ATI	./GL/glew.h	/^#define GL_DRAW_BUFFER13_ATI /;"	d
GL_DRAW_BUFFER13_EXT	./GL/glew.h	/^#define GL_DRAW_BUFFER13_EXT /;"	d
GL_DRAW_BUFFER13_NV	./GL/glew.h	/^#define GL_DRAW_BUFFER13_NV /;"	d
GL_DRAW_BUFFER14	./GL/glew.h	/^#define GL_DRAW_BUFFER14 /;"	d
GL_DRAW_BUFFER14_ARB	./GL/glew.h	/^#define GL_DRAW_BUFFER14_ARB /;"	d
GL_DRAW_BUFFER14_ATI	./GL/glew.h	/^#define GL_DRAW_BUFFER14_ATI /;"	d
GL_DRAW_BUFFER14_EXT	./GL/glew.h	/^#define GL_DRAW_BUFFER14_EXT /;"	d
GL_DRAW_BUFFER14_NV	./GL/glew.h	/^#define GL_DRAW_BUFFER14_NV /;"	d
GL_DRAW_BUFFER15	./GL/glew.h	/^#define GL_DRAW_BUFFER15 /;"	d
GL_DRAW_BUFFER15_ARB	./GL/glew.h	/^#define GL_DRAW_BUFFER15_ARB /;"	d
GL_DRAW_BUFFER15_ATI	./GL/glew.h	/^#define GL_DRAW_BUFFER15_ATI /;"	d
GL_DRAW_BUFFER15_EXT	./GL/glew.h	/^#define GL_DRAW_BUFFER15_EXT /;"	d
GL_DRAW_BUFFER15_NV	./GL/glew.h	/^#define GL_DRAW_BUFFER15_NV /;"	d
GL_DRAW_BUFFER1_ARB	./GL/glew.h	/^#define GL_DRAW_BUFFER1_ARB /;"	d
GL_DRAW_BUFFER1_ATI	./GL/glew.h	/^#define GL_DRAW_BUFFER1_ATI /;"	d
GL_DRAW_BUFFER1_EXT	./GL/glew.h	/^#define GL_DRAW_BUFFER1_EXT /;"	d
GL_DRAW_BUFFER1_NV	./GL/glew.h	/^#define GL_DRAW_BUFFER1_NV /;"	d
GL_DRAW_BUFFER2	./GL/glew.h	/^#define GL_DRAW_BUFFER2 /;"	d
GL_DRAW_BUFFER2_ARB	./GL/glew.h	/^#define GL_DRAW_BUFFER2_ARB /;"	d
GL_DRAW_BUFFER2_ATI	./GL/glew.h	/^#define GL_DRAW_BUFFER2_ATI /;"	d
GL_DRAW_BUFFER2_EXT	./GL/glew.h	/^#define GL_DRAW_BUFFER2_EXT /;"	d
GL_DRAW_BUFFER2_NV	./GL/glew.h	/^#define GL_DRAW_BUFFER2_NV /;"	d
GL_DRAW_BUFFER3	./GL/glew.h	/^#define GL_DRAW_BUFFER3 /;"	d
GL_DRAW_BUFFER3_ARB	./GL/glew.h	/^#define GL_DRAW_BUFFER3_ARB /;"	d
GL_DRAW_BUFFER3_ATI	./GL/glew.h	/^#define GL_DRAW_BUFFER3_ATI /;"	d
GL_DRAW_BUFFER3_EXT	./GL/glew.h	/^#define GL_DRAW_BUFFER3_EXT /;"	d
GL_DRAW_BUFFER3_NV	./GL/glew.h	/^#define GL_DRAW_BUFFER3_NV /;"	d
GL_DRAW_BUFFER4	./GL/glew.h	/^#define GL_DRAW_BUFFER4 /;"	d
GL_DRAW_BUFFER4_ARB	./GL/glew.h	/^#define GL_DRAW_BUFFER4_ARB /;"	d
GL_DRAW_BUFFER4_ATI	./GL/glew.h	/^#define GL_DRAW_BUFFER4_ATI /;"	d
GL_DRAW_BUFFER4_EXT	./GL/glew.h	/^#define GL_DRAW_BUFFER4_EXT /;"	d
GL_DRAW_BUFFER4_NV	./GL/glew.h	/^#define GL_DRAW_BUFFER4_NV /;"	d
GL_DRAW_BUFFER5	./GL/glew.h	/^#define GL_DRAW_BUFFER5 /;"	d
GL_DRAW_BUFFER5_ARB	./GL/glew.h	/^#define GL_DRAW_BUFFER5_ARB /;"	d
GL_DRAW_BUFFER5_ATI	./GL/glew.h	/^#define GL_DRAW_BUFFER5_ATI /;"	d
GL_DRAW_BUFFER5_EXT	./GL/glew.h	/^#define GL_DRAW_BUFFER5_EXT /;"	d
GL_DRAW_BUFFER5_NV	./GL/glew.h	/^#define GL_DRAW_BUFFER5_NV /;"	d
GL_DRAW_BUFFER6	./GL/glew.h	/^#define GL_DRAW_BUFFER6 /;"	d
GL_DRAW_BUFFER6_ARB	./GL/glew.h	/^#define GL_DRAW_BUFFER6_ARB /;"	d
GL_DRAW_BUFFER6_ATI	./GL/glew.h	/^#define GL_DRAW_BUFFER6_ATI /;"	d
GL_DRAW_BUFFER6_EXT	./GL/glew.h	/^#define GL_DRAW_BUFFER6_EXT /;"	d
GL_DRAW_BUFFER6_NV	./GL/glew.h	/^#define GL_DRAW_BUFFER6_NV /;"	d
GL_DRAW_BUFFER7	./GL/glew.h	/^#define GL_DRAW_BUFFER7 /;"	d
GL_DRAW_BUFFER7_ARB	./GL/glew.h	/^#define GL_DRAW_BUFFER7_ARB /;"	d
GL_DRAW_BUFFER7_ATI	./GL/glew.h	/^#define GL_DRAW_BUFFER7_ATI /;"	d
GL_DRAW_BUFFER7_EXT	./GL/glew.h	/^#define GL_DRAW_BUFFER7_EXT /;"	d
GL_DRAW_BUFFER7_NV	./GL/glew.h	/^#define GL_DRAW_BUFFER7_NV /;"	d
GL_DRAW_BUFFER8	./GL/glew.h	/^#define GL_DRAW_BUFFER8 /;"	d
GL_DRAW_BUFFER8_ARB	./GL/glew.h	/^#define GL_DRAW_BUFFER8_ARB /;"	d
GL_DRAW_BUFFER8_ATI	./GL/glew.h	/^#define GL_DRAW_BUFFER8_ATI /;"	d
GL_DRAW_BUFFER8_EXT	./GL/glew.h	/^#define GL_DRAW_BUFFER8_EXT /;"	d
GL_DRAW_BUFFER8_NV	./GL/glew.h	/^#define GL_DRAW_BUFFER8_NV /;"	d
GL_DRAW_BUFFER9	./GL/glew.h	/^#define GL_DRAW_BUFFER9 /;"	d
GL_DRAW_BUFFER9_ARB	./GL/glew.h	/^#define GL_DRAW_BUFFER9_ARB /;"	d
GL_DRAW_BUFFER9_ATI	./GL/glew.h	/^#define GL_DRAW_BUFFER9_ATI /;"	d
GL_DRAW_BUFFER9_EXT	./GL/glew.h	/^#define GL_DRAW_BUFFER9_EXT /;"	d
GL_DRAW_BUFFER9_NV	./GL/glew.h	/^#define GL_DRAW_BUFFER9_NV /;"	d
GL_DRAW_BUFFER_EXT	./GL/glew.h	/^#define GL_DRAW_BUFFER_EXT /;"	d
GL_DRAW_ELEMENTS_COMMAND_NV	./GL/glew.h	/^#define GL_DRAW_ELEMENTS_COMMAND_NV /;"	d
GL_DRAW_ELEMENTS_INSTANCED_COMMAND_NV	./GL/glew.h	/^#define GL_DRAW_ELEMENTS_INSTANCED_COMMAND_NV /;"	d
GL_DRAW_ELEMENTS_STRIP_COMMAND_NV	./GL/glew.h	/^#define GL_DRAW_ELEMENTS_STRIP_COMMAND_NV /;"	d
GL_DRAW_FRAMEBUFFER	./GL/glew.h	/^#define GL_DRAW_FRAMEBUFFER /;"	d
GL_DRAW_FRAMEBUFFER_ANGLE	./GL/glew.h	/^#define GL_DRAW_FRAMEBUFFER_ANGLE /;"	d
GL_DRAW_FRAMEBUFFER_APPLE	./GL/glew.h	/^#define GL_DRAW_FRAMEBUFFER_APPLE /;"	d
GL_DRAW_FRAMEBUFFER_BINDING	./GL/glew.h	/^#define GL_DRAW_FRAMEBUFFER_BINDING /;"	d
GL_DRAW_FRAMEBUFFER_BINDING_ANGLE	./GL/glew.h	/^#define GL_DRAW_FRAMEBUFFER_BINDING_ANGLE /;"	d
GL_DRAW_FRAMEBUFFER_BINDING_APPLE	./GL/glew.h	/^#define GL_DRAW_FRAMEBUFFER_BINDING_APPLE /;"	d
GL_DRAW_FRAMEBUFFER_BINDING_EXT	./GL/glew.h	/^#define GL_DRAW_FRAMEBUFFER_BINDING_EXT /;"	d
GL_DRAW_FRAMEBUFFER_BINDING_NV	./GL/glew.h	/^#define GL_DRAW_FRAMEBUFFER_BINDING_NV /;"	d
GL_DRAW_FRAMEBUFFER_EXT	./GL/glew.h	/^#define GL_DRAW_FRAMEBUFFER_EXT /;"	d
GL_DRAW_FRAMEBUFFER_NV	./GL/glew.h	/^#define GL_DRAW_FRAMEBUFFER_NV /;"	d
GL_DRAW_INDIRECT_ADDRESS_NV	./GL/glew.h	/^#define GL_DRAW_INDIRECT_ADDRESS_NV /;"	d
GL_DRAW_INDIRECT_BUFFER	./GL/glew.h	/^#define GL_DRAW_INDIRECT_BUFFER /;"	d
GL_DRAW_INDIRECT_BUFFER_BINDING	./GL/glew.h	/^#define GL_DRAW_INDIRECT_BUFFER_BINDING /;"	d
GL_DRAW_INDIRECT_LENGTH_NV	./GL/glew.h	/^#define GL_DRAW_INDIRECT_LENGTH_NV /;"	d
GL_DRAW_INDIRECT_UNIFIED_NV	./GL/glew.h	/^#define GL_DRAW_INDIRECT_UNIFIED_NV /;"	d
GL_DRAW_PIXELS_APPLE	./GL/glew.h	/^#define GL_DRAW_PIXELS_APPLE /;"	d
GL_DRAW_PIXEL_TOKEN	./GL/glew.h	/^#define GL_DRAW_PIXEL_TOKEN /;"	d
GL_DRIVER_REGAL	./GL/glew.h	/^#define GL_DRIVER_REGAL /;"	d
GL_DRIVER_UUID_EXT	./GL/glew.h	/^#define GL_DRIVER_UUID_EXT /;"	d
GL_DSDT8_MAG8_INTENSITY8_NV	./GL/glew.h	/^#define GL_DSDT8_MAG8_INTENSITY8_NV /;"	d
GL_DSDT8_MAG8_NV	./GL/glew.h	/^#define GL_DSDT8_MAG8_NV /;"	d
GL_DSDT8_NV	./GL/glew.h	/^#define GL_DSDT8_NV /;"	d
GL_DSDT_MAG_INTENSITY_NV	./GL/glew.h	/^#define GL_DSDT_MAG_INTENSITY_NV /;"	d
GL_DSDT_MAG_NV	./GL/glew.h	/^#define GL_DSDT_MAG_NV /;"	d
GL_DSDT_MAG_VIB_NV	./GL/glew.h	/^#define GL_DSDT_MAG_VIB_NV /;"	d
GL_DSDT_NV	./GL/glew.h	/^#define GL_DSDT_NV /;"	d
GL_DST_ALPHA	./GL/glew.h	/^#define GL_DST_ALPHA /;"	d
GL_DST_ATOP_NV	./GL/glew.h	/^#define GL_DST_ATOP_NV /;"	d
GL_DST_COLOR	./GL/glew.h	/^#define GL_DST_COLOR /;"	d
GL_DST_IN_NV	./GL/glew.h	/^#define GL_DST_IN_NV /;"	d
GL_DST_NV	./GL/glew.h	/^#define GL_DST_NV /;"	d
GL_DST_OUT_NV	./GL/glew.h	/^#define GL_DST_OUT_NV /;"	d
GL_DST_OVER_NV	./GL/glew.h	/^#define GL_DST_OVER_NV /;"	d
GL_DS_BIAS_NV	./GL/glew.h	/^#define GL_DS_BIAS_NV /;"	d
GL_DS_SCALE_NV	./GL/glew.h	/^#define GL_DS_SCALE_NV /;"	d
GL_DT_BIAS_NV	./GL/glew.h	/^#define GL_DT_BIAS_NV /;"	d
GL_DT_SCALE_NV	./GL/glew.h	/^#define GL_DT_SCALE_NV /;"	d
GL_DU8DV8_ATI	./GL/glew.h	/^#define GL_DU8DV8_ATI /;"	d
GL_DUDV_ATI	./GL/glew.h	/^#define GL_DUDV_ATI /;"	d
GL_DUP_FIRST_CUBIC_CURVE_TO_NV	./GL/glew.h	/^#define GL_DUP_FIRST_CUBIC_CURVE_TO_NV /;"	d
GL_DUP_LAST_CUBIC_CURVE_TO_NV	./GL/glew.h	/^#define GL_DUP_LAST_CUBIC_CURVE_TO_NV /;"	d
GL_DYNAMIC_ATI	./GL/glew.h	/^#define GL_DYNAMIC_ATI /;"	d
GL_DYNAMIC_COPY	./GL/glew.h	/^#define GL_DYNAMIC_COPY /;"	d
GL_DYNAMIC_COPY_ARB	./GL/glew.h	/^#define GL_DYNAMIC_COPY_ARB /;"	d
GL_DYNAMIC_DRAW	./GL/glew.h	/^#define GL_DYNAMIC_DRAW /;"	d
GL_DYNAMIC_DRAW_ARB	./GL/glew.h	/^#define GL_DYNAMIC_DRAW_ARB /;"	d
GL_DYNAMIC_READ	./GL/glew.h	/^#define GL_DYNAMIC_READ /;"	d
GL_DYNAMIC_READ_ARB	./GL/glew.h	/^#define GL_DYNAMIC_READ_ARB /;"	d
GL_DYNAMIC_STORAGE_BIT	./GL/glew.h	/^#define GL_DYNAMIC_STORAGE_BIT /;"	d
GL_DYNAMIC_STORAGE_BIT_EXT	./GL/glew.h	/^#define GL_DYNAMIC_STORAGE_BIT_EXT /;"	d
GL_EDGEFLAG_BIT_PGI	./GL/glew.h	/^#define GL_EDGEFLAG_BIT_PGI /;"	d
GL_EDGE_FLAG	./GL/glew.h	/^#define GL_EDGE_FLAG /;"	d
GL_EDGE_FLAG_ARRAY	./GL/glew.h	/^#define GL_EDGE_FLAG_ARRAY /;"	d
GL_EDGE_FLAG_ARRAY_ADDRESS_NV	./GL/glew.h	/^#define GL_EDGE_FLAG_ARRAY_ADDRESS_NV /;"	d
GL_EDGE_FLAG_ARRAY_BUFFER_BINDING	./GL/glew.h	/^#define GL_EDGE_FLAG_ARRAY_BUFFER_BINDING /;"	d
GL_EDGE_FLAG_ARRAY_BUFFER_BINDING_ARB	./GL/glew.h	/^#define GL_EDGE_FLAG_ARRAY_BUFFER_BINDING_ARB /;"	d
GL_EDGE_FLAG_ARRAY_COUNT_EXT	./GL/glew.h	/^#define GL_EDGE_FLAG_ARRAY_COUNT_EXT /;"	d
GL_EDGE_FLAG_ARRAY_EXT	./GL/glew.h	/^#define GL_EDGE_FLAG_ARRAY_EXT /;"	d
GL_EDGE_FLAG_ARRAY_LENGTH_NV	./GL/glew.h	/^#define GL_EDGE_FLAG_ARRAY_LENGTH_NV /;"	d
GL_EDGE_FLAG_ARRAY_LIST_IBM	./GL/glew.h	/^#define GL_EDGE_FLAG_ARRAY_LIST_IBM /;"	d
GL_EDGE_FLAG_ARRAY_LIST_STRIDE_IBM	./GL/glew.h	/^#define GL_EDGE_FLAG_ARRAY_LIST_STRIDE_IBM /;"	d
GL_EDGE_FLAG_ARRAY_POINTER	./GL/glew.h	/^#define GL_EDGE_FLAG_ARRAY_POINTER /;"	d
GL_EDGE_FLAG_ARRAY_POINTER_EXT	./GL/glew.h	/^#define GL_EDGE_FLAG_ARRAY_POINTER_EXT /;"	d
GL_EDGE_FLAG_ARRAY_STRIDE	./GL/glew.h	/^#define GL_EDGE_FLAG_ARRAY_STRIDE /;"	d
GL_EDGE_FLAG_ARRAY_STRIDE_EXT	./GL/glew.h	/^#define GL_EDGE_FLAG_ARRAY_STRIDE_EXT /;"	d
GL_EFFECTIVE_RASTER_SAMPLES_EXT	./GL/glew.h	/^#define GL_EFFECTIVE_RASTER_SAMPLES_EXT /;"	d
GL_EIGHTH_BIT_ATI	./GL/glew.h	/^#define GL_EIGHTH_BIT_ATI /;"	d
GL_ELEMENT_ADDRESS_COMMAND_NV	./GL/glew.h	/^#define GL_ELEMENT_ADDRESS_COMMAND_NV /;"	d
GL_ELEMENT_ARRAY_ADDRESS_NV	./GL/glew.h	/^#define GL_ELEMENT_ARRAY_ADDRESS_NV /;"	d
GL_ELEMENT_ARRAY_APPLE	./GL/glew.h	/^#define GL_ELEMENT_ARRAY_APPLE /;"	d
GL_ELEMENT_ARRAY_ATI	./GL/glew.h	/^#define GL_ELEMENT_ARRAY_ATI /;"	d
GL_ELEMENT_ARRAY_BARRIER_BIT	./GL/glew.h	/^#define GL_ELEMENT_ARRAY_BARRIER_BIT /;"	d
GL_ELEMENT_ARRAY_BARRIER_BIT_EXT	./GL/glew.h	/^#define GL_ELEMENT_ARRAY_BARRIER_BIT_EXT /;"	d
GL_ELEMENT_ARRAY_BUFFER	./GL/glew.h	/^#define GL_ELEMENT_ARRAY_BUFFER /;"	d
GL_ELEMENT_ARRAY_BUFFER_ARB	./GL/glew.h	/^#define GL_ELEMENT_ARRAY_BUFFER_ARB /;"	d
GL_ELEMENT_ARRAY_BUFFER_BINDING	./GL/glew.h	/^#define GL_ELEMENT_ARRAY_BUFFER_BINDING /;"	d
GL_ELEMENT_ARRAY_BUFFER_BINDING_ARB	./GL/glew.h	/^#define GL_ELEMENT_ARRAY_BUFFER_BINDING_ARB /;"	d
GL_ELEMENT_ARRAY_LENGTH_NV	./GL/glew.h	/^#define GL_ELEMENT_ARRAY_LENGTH_NV /;"	d
GL_ELEMENT_ARRAY_POINTER_APPLE	./GL/glew.h	/^#define GL_ELEMENT_ARRAY_POINTER_APPLE /;"	d
GL_ELEMENT_ARRAY_POINTER_ATI	./GL/glew.h	/^#define GL_ELEMENT_ARRAY_POINTER_ATI /;"	d
GL_ELEMENT_ARRAY_TYPE_APPLE	./GL/glew.h	/^#define GL_ELEMENT_ARRAY_TYPE_APPLE /;"	d
GL_ELEMENT_ARRAY_TYPE_ATI	./GL/glew.h	/^#define GL_ELEMENT_ARRAY_TYPE_ATI /;"	d
GL_ELEMENT_ARRAY_UNIFIED_NV	./GL/glew.h	/^#define GL_ELEMENT_ARRAY_UNIFIED_NV /;"	d
GL_EMBOSS_CONSTANT_NV	./GL/glew.h	/^#define GL_EMBOSS_CONSTANT_NV /;"	d
GL_EMBOSS_LIGHT_NV	./GL/glew.h	/^#define GL_EMBOSS_LIGHT_NV /;"	d
GL_EMBOSS_MAP_NV	./GL/glew.h	/^#define GL_EMBOSS_MAP_NV /;"	d
GL_EMISSION	./GL/glew.h	/^#define GL_EMISSION /;"	d
GL_EMULATION_REGAL	./GL/glew.h	/^#define GL_EMULATION_REGAL /;"	d
GL_ENABLE_BIT	./GL/glew.h	/^#define GL_ENABLE_BIT /;"	d
GL_ENV_MAP_SGIX	./GL/glew.h	/^#define GL_ENV_MAP_SGIX /;"	d
GL_EQUAL	./GL/glew.h	/^#define GL_EQUAL /;"	d
GL_EQUIV	./GL/glew.h	/^#define GL_EQUIV /;"	d
GL_ERROR_REGAL	./GL/glew.h	/^#define GL_ERROR_REGAL /;"	d
GL_ETC1_RGB8_OES	./GL/glew.h	/^#define GL_ETC1_RGB8_OES /;"	d
GL_ETC1_SRGB8_NV	./GL/glew.h	/^#define GL_ETC1_SRGB8_NV /;"	d
GL_EVAL_2D_NV	./GL/glew.h	/^#define GL_EVAL_2D_NV /;"	d
GL_EVAL_BIT	./GL/glew.h	/^#define GL_EVAL_BIT /;"	d
GL_EVAL_FRACTIONAL_TESSELLATION_NV	./GL/glew.h	/^#define GL_EVAL_FRACTIONAL_TESSELLATION_NV /;"	d
GL_EVAL_TRIANGULAR_2D_NV	./GL/glew.h	/^#define GL_EVAL_TRIANGULAR_2D_NV /;"	d
GL_EVAL_VERTEX_ATTRIB0_NV	./GL/glew.h	/^#define GL_EVAL_VERTEX_ATTRIB0_NV /;"	d
GL_EVAL_VERTEX_ATTRIB10_NV	./GL/glew.h	/^#define GL_EVAL_VERTEX_ATTRIB10_NV /;"	d
GL_EVAL_VERTEX_ATTRIB11_NV	./GL/glew.h	/^#define GL_EVAL_VERTEX_ATTRIB11_NV /;"	d
GL_EVAL_VERTEX_ATTRIB12_NV	./GL/glew.h	/^#define GL_EVAL_VERTEX_ATTRIB12_NV /;"	d
GL_EVAL_VERTEX_ATTRIB13_NV	./GL/glew.h	/^#define GL_EVAL_VERTEX_ATTRIB13_NV /;"	d
GL_EVAL_VERTEX_ATTRIB14_NV	./GL/glew.h	/^#define GL_EVAL_VERTEX_ATTRIB14_NV /;"	d
GL_EVAL_VERTEX_ATTRIB15_NV	./GL/glew.h	/^#define GL_EVAL_VERTEX_ATTRIB15_NV /;"	d
GL_EVAL_VERTEX_ATTRIB1_NV	./GL/glew.h	/^#define GL_EVAL_VERTEX_ATTRIB1_NV /;"	d
GL_EVAL_VERTEX_ATTRIB2_NV	./GL/glew.h	/^#define GL_EVAL_VERTEX_ATTRIB2_NV /;"	d
GL_EVAL_VERTEX_ATTRIB3_NV	./GL/glew.h	/^#define GL_EVAL_VERTEX_ATTRIB3_NV /;"	d
GL_EVAL_VERTEX_ATTRIB4_NV	./GL/glew.h	/^#define GL_EVAL_VERTEX_ATTRIB4_NV /;"	d
GL_EVAL_VERTEX_ATTRIB5_NV	./GL/glew.h	/^#define GL_EVAL_VERTEX_ATTRIB5_NV /;"	d
GL_EVAL_VERTEX_ATTRIB6_NV	./GL/glew.h	/^#define GL_EVAL_VERTEX_ATTRIB6_NV /;"	d
GL_EVAL_VERTEX_ATTRIB7_NV	./GL/glew.h	/^#define GL_EVAL_VERTEX_ATTRIB7_NV /;"	d
GL_EVAL_VERTEX_ATTRIB8_NV	./GL/glew.h	/^#define GL_EVAL_VERTEX_ATTRIB8_NV /;"	d
GL_EVAL_VERTEX_ATTRIB9_NV	./GL/glew.h	/^#define GL_EVAL_VERTEX_ATTRIB9_NV /;"	d
GL_EXCLUSION_KHR	./GL/glew.h	/^#define GL_EXCLUSION_KHR /;"	d
GL_EXCLUSION_NV	./GL/glew.h	/^#define GL_EXCLUSION_NV /;"	d
GL_EXCLUSIVE_EXT	./GL/glew.h	/^#define GL_EXCLUSIVE_EXT /;"	d
GL_EXP	./GL/glew.h	/^#define GL_EXP /;"	d
GL_EXP2	./GL/glew.h	/^#define GL_EXP2 /;"	d
GL_EXPAND_NEGATE_NV	./GL/glew.h	/^#define GL_EXPAND_NEGATE_NV /;"	d
GL_EXPAND_NORMAL_NV	./GL/glew.h	/^#define GL_EXPAND_NORMAL_NV /;"	d
GL_EXTENDED_RANGE_SGIS	./GL/glew.h	/^#define GL_EXTENDED_RANGE_SGIS /;"	d
GL_EXTENSIONS	./GL/glew.h	/^#define GL_EXTENSIONS /;"	d
GL_EXTERNAL_VIRTUAL_MEMORY_BUFFER_AMD	./GL/glew.h	/^#define GL_EXTERNAL_VIRTUAL_MEMORY_BUFFER_AMD /;"	d
GL_EXT_422_pixels	./GL/glew.h	/^#define GL_EXT_422_pixels /;"	d
GL_EXT_Cg_shader	./GL/glew.h	/^#define GL_EXT_Cg_shader /;"	d
GL_EXT_EGL_image_array	./GL/glew.h	/^#define GL_EXT_EGL_image_array /;"	d
GL_EXT_EGL_image_external_wrap_modes	./GL/glew.h	/^#define GL_EXT_EGL_image_external_wrap_modes /;"	d
GL_EXT_EGL_image_storage	./GL/glew.h	/^#define GL_EXT_EGL_image_storage /;"	d
GL_EXT_EGL_sync	./GL/glew.h	/^#define GL_EXT_EGL_sync /;"	d
GL_EXT_YUV_target	./GL/glew.h	/^#define GL_EXT_YUV_target /;"	d
GL_EXT_abgr	./GL/glew.h	/^#define GL_EXT_abgr /;"	d
GL_EXT_base_instance	./GL/glew.h	/^#define GL_EXT_base_instance /;"	d
GL_EXT_bgra	./GL/glew.h	/^#define GL_EXT_bgra /;"	d
GL_EXT_bindable_uniform	./GL/glew.h	/^#define GL_EXT_bindable_uniform /;"	d
GL_EXT_blend_color	./GL/glew.h	/^#define GL_EXT_blend_color /;"	d
GL_EXT_blend_equation_separate	./GL/glew.h	/^#define GL_EXT_blend_equation_separate /;"	d
GL_EXT_blend_func_extended	./GL/glew.h	/^#define GL_EXT_blend_func_extended /;"	d
GL_EXT_blend_func_separate	./GL/glew.h	/^#define GL_EXT_blend_func_separate /;"	d
GL_EXT_blend_logic_op	./GL/glew.h	/^#define GL_EXT_blend_logic_op /;"	d
GL_EXT_blend_minmax	./GL/glew.h	/^#define GL_EXT_blend_minmax /;"	d
GL_EXT_blend_subtract	./GL/glew.h	/^#define GL_EXT_blend_subtract /;"	d
GL_EXT_buffer_storage	./GL/glew.h	/^#define GL_EXT_buffer_storage /;"	d
GL_EXT_clear_texture	./GL/glew.h	/^#define GL_EXT_clear_texture /;"	d
GL_EXT_clip_control	./GL/glew.h	/^#define GL_EXT_clip_control /;"	d
GL_EXT_clip_cull_distance	./GL/glew.h	/^#define GL_EXT_clip_cull_distance /;"	d
GL_EXT_clip_volume_hint	./GL/glew.h	/^#define GL_EXT_clip_volume_hint /;"	d
GL_EXT_cmyka	./GL/glew.h	/^#define GL_EXT_cmyka /;"	d
GL_EXT_color_buffer_float	./GL/glew.h	/^#define GL_EXT_color_buffer_float /;"	d
GL_EXT_color_buffer_half_float	./GL/glew.h	/^#define GL_EXT_color_buffer_half_float /;"	d
GL_EXT_color_subtable	./GL/glew.h	/^#define GL_EXT_color_subtable /;"	d
GL_EXT_compiled_vertex_array	./GL/glew.h	/^#define GL_EXT_compiled_vertex_array /;"	d
GL_EXT_compressed_ETC1_RGB8_sub_texture	./GL/glew.h	/^#define GL_EXT_compressed_ETC1_RGB8_sub_texture /;"	d
GL_EXT_conservative_depth	./GL/glew.h	/^#define GL_EXT_conservative_depth /;"	d
GL_EXT_convolution	./GL/glew.h	/^#define GL_EXT_convolution /;"	d
GL_EXT_coordinate_frame	./GL/glew.h	/^#define GL_EXT_coordinate_frame /;"	d
GL_EXT_copy_image	./GL/glew.h	/^#define GL_EXT_copy_image /;"	d
GL_EXT_copy_texture	./GL/glew.h	/^#define GL_EXT_copy_texture /;"	d
GL_EXT_cull_vertex	./GL/glew.h	/^#define GL_EXT_cull_vertex /;"	d
GL_EXT_debug_label	./GL/glew.h	/^#define GL_EXT_debug_label /;"	d
GL_EXT_debug_marker	./GL/glew.h	/^#define GL_EXT_debug_marker /;"	d
GL_EXT_depth_bounds_test	./GL/glew.h	/^#define GL_EXT_depth_bounds_test /;"	d
GL_EXT_depth_clamp	./GL/glew.h	/^#define GL_EXT_depth_clamp /;"	d
GL_EXT_direct_state_access	./GL/glew.h	/^#define GL_EXT_direct_state_access /;"	d
GL_EXT_discard_framebuffer	./GL/glew.h	/^#define GL_EXT_discard_framebuffer /;"	d
GL_EXT_disjoint_timer_query	./GL/glew.h	/^#define GL_EXT_disjoint_timer_query /;"	d
GL_EXT_draw_buffers	./GL/glew.h	/^#define GL_EXT_draw_buffers /;"	d
GL_EXT_draw_buffers2	./GL/glew.h	/^#define GL_EXT_draw_buffers2 /;"	d
GL_EXT_draw_buffers_indexed	./GL/glew.h	/^#define GL_EXT_draw_buffers_indexed /;"	d
GL_EXT_draw_elements_base_vertex	./GL/glew.h	/^#define GL_EXT_draw_elements_base_vertex /;"	d
GL_EXT_draw_instanced	./GL/glew.h	/^#define GL_EXT_draw_instanced /;"	d
GL_EXT_draw_range_elements	./GL/glew.h	/^#define GL_EXT_draw_range_elements /;"	d
GL_EXT_draw_transform_feedback	./GL/glew.h	/^#define GL_EXT_draw_transform_feedback /;"	d
GL_EXT_external_buffer	./GL/glew.h	/^#define GL_EXT_external_buffer /;"	d
GL_EXT_float_blend	./GL/glew.h	/^#define GL_EXT_float_blend /;"	d
GL_EXT_fog_coord	./GL/glew.h	/^#define GL_EXT_fog_coord /;"	d
GL_EXT_frag_depth	./GL/glew.h	/^#define GL_EXT_frag_depth /;"	d
GL_EXT_fragment_lighting	./GL/glew.h	/^#define GL_EXT_fragment_lighting /;"	d
GL_EXT_framebuffer_blit	./GL/glew.h	/^#define GL_EXT_framebuffer_blit /;"	d
GL_EXT_framebuffer_multisample	./GL/glew.h	/^#define GL_EXT_framebuffer_multisample /;"	d
GL_EXT_framebuffer_multisample_blit_scaled	./GL/glew.h	/^#define GL_EXT_framebuffer_multisample_blit_scaled /;"	d
GL_EXT_framebuffer_object	./GL/glew.h	/^#define GL_EXT_framebuffer_object /;"	d
GL_EXT_framebuffer_sRGB	./GL/glew.h	/^#define GL_EXT_framebuffer_sRGB /;"	d
GL_EXT_geometry_point_size	./GL/glew.h	/^#define GL_EXT_geometry_point_size /;"	d
GL_EXT_geometry_shader	./GL/glew.h	/^#define GL_EXT_geometry_shader /;"	d
GL_EXT_geometry_shader4	./GL/glew.h	/^#define GL_EXT_geometry_shader4 /;"	d
GL_EXT_gpu_program_parameters	./GL/glew.h	/^#define GL_EXT_gpu_program_parameters /;"	d
GL_EXT_gpu_shader4	./GL/glew.h	/^#define GL_EXT_gpu_shader4 /;"	d
GL_EXT_gpu_shader5	./GL/glew.h	/^#define GL_EXT_gpu_shader5 /;"	d
GL_EXT_histogram	./GL/glew.h	/^#define GL_EXT_histogram /;"	d
GL_EXT_index_array_formats	./GL/glew.h	/^#define GL_EXT_index_array_formats /;"	d
GL_EXT_index_func	./GL/glew.h	/^#define GL_EXT_index_func /;"	d
GL_EXT_index_material	./GL/glew.h	/^#define GL_EXT_index_material /;"	d
GL_EXT_index_texture	./GL/glew.h	/^#define GL_EXT_index_texture /;"	d
GL_EXT_instanced_arrays	./GL/glew.h	/^#define GL_EXT_instanced_arrays /;"	d
GL_EXT_light_texture	./GL/glew.h	/^#define GL_EXT_light_texture /;"	d
GL_EXT_map_buffer_range	./GL/glew.h	/^#define GL_EXT_map_buffer_range /;"	d
GL_EXT_memory_object	./GL/glew.h	/^#define GL_EXT_memory_object /;"	d
GL_EXT_memory_object_fd	./GL/glew.h	/^#define GL_EXT_memory_object_fd /;"	d
GL_EXT_memory_object_win32	./GL/glew.h	/^#define GL_EXT_memory_object_win32 /;"	d
GL_EXT_misc_attribute	./GL/glew.h	/^#define GL_EXT_misc_attribute /;"	d
GL_EXT_multi_draw_arrays	./GL/glew.h	/^#define GL_EXT_multi_draw_arrays /;"	d
GL_EXT_multi_draw_indirect	./GL/glew.h	/^#define GL_EXT_multi_draw_indirect /;"	d
GL_EXT_multiple_textures	./GL/glew.h	/^#define GL_EXT_multiple_textures /;"	d
GL_EXT_multisample	./GL/glew.h	/^#define GL_EXT_multisample /;"	d
GL_EXT_multisample_compatibility	./GL/glew.h	/^#define GL_EXT_multisample_compatibility /;"	d
GL_EXT_multisampled_render_to_texture	./GL/glew.h	/^#define GL_EXT_multisampled_render_to_texture /;"	d
GL_EXT_multisampled_render_to_texture2	./GL/glew.h	/^#define GL_EXT_multisampled_render_to_texture2 /;"	d
GL_EXT_multiview_draw_buffers	./GL/glew.h	/^#define GL_EXT_multiview_draw_buffers /;"	d
GL_EXT_multiview_tessellation_geometry_shader	./GL/glew.h	/^#define GL_EXT_multiview_tessellation_geometry_shader /;"	d
GL_EXT_multiview_texture_multisample	./GL/glew.h	/^#define GL_EXT_multiview_texture_multisample /;"	d
GL_EXT_multiview_timer_query	./GL/glew.h	/^#define GL_EXT_multiview_timer_query /;"	d
GL_EXT_occlusion_query_boolean	./GL/glew.h	/^#define GL_EXT_occlusion_query_boolean /;"	d
GL_EXT_packed_depth_stencil	./GL/glew.h	/^#define GL_EXT_packed_depth_stencil /;"	d
GL_EXT_packed_float	./GL/glew.h	/^#define GL_EXT_packed_float /;"	d
GL_EXT_packed_pixels	./GL/glew.h	/^#define GL_EXT_packed_pixels /;"	d
GL_EXT_paletted_texture	./GL/glew.h	/^#define GL_EXT_paletted_texture /;"	d
GL_EXT_pixel_buffer_object	./GL/glew.h	/^#define GL_EXT_pixel_buffer_object /;"	d
GL_EXT_pixel_transform	./GL/glew.h	/^#define GL_EXT_pixel_transform /;"	d
GL_EXT_pixel_transform_color_table	./GL/glew.h	/^#define GL_EXT_pixel_transform_color_table /;"	d
GL_EXT_point_parameters	./GL/glew.h	/^#define GL_EXT_point_parameters /;"	d
GL_EXT_polygon_offset	./GL/glew.h	/^#define GL_EXT_polygon_offset /;"	d
GL_EXT_polygon_offset_clamp	./GL/glew.h	/^#define GL_EXT_polygon_offset_clamp /;"	d
GL_EXT_post_depth_coverage	./GL/glew.h	/^#define GL_EXT_post_depth_coverage /;"	d
GL_EXT_primitive_bounding_box	./GL/glew.h	/^#define GL_EXT_primitive_bounding_box /;"	d
GL_EXT_protected_textures	./GL/glew.h	/^#define GL_EXT_protected_textures /;"	d
GL_EXT_provoking_vertex	./GL/glew.h	/^#define GL_EXT_provoking_vertex /;"	d
GL_EXT_pvrtc_sRGB	./GL/glew.h	/^#define GL_EXT_pvrtc_sRGB /;"	d
GL_EXT_raster_multisample	./GL/glew.h	/^#define GL_EXT_raster_multisample /;"	d
GL_EXT_read_format_bgra	./GL/glew.h	/^#define GL_EXT_read_format_bgra /;"	d
GL_EXT_render_snorm	./GL/glew.h	/^#define GL_EXT_render_snorm /;"	d
GL_EXT_rescale_normal	./GL/glew.h	/^#define GL_EXT_rescale_normal /;"	d
GL_EXT_robustness	./GL/glew.h	/^#define GL_EXT_robustness /;"	d
GL_EXT_sRGB	./GL/glew.h	/^#define GL_EXT_sRGB /;"	d
GL_EXT_sRGB_write_control	./GL/glew.h	/^#define GL_EXT_sRGB_write_control /;"	d
GL_EXT_scene_marker	./GL/glew.h	/^#define GL_EXT_scene_marker /;"	d
GL_EXT_secondary_color	./GL/glew.h	/^#define GL_EXT_secondary_color /;"	d
GL_EXT_semaphore	./GL/glew.h	/^#define GL_EXT_semaphore /;"	d
GL_EXT_semaphore_fd	./GL/glew.h	/^#define GL_EXT_semaphore_fd /;"	d
GL_EXT_semaphore_win32	./GL/glew.h	/^#define GL_EXT_semaphore_win32 /;"	d
GL_EXT_separate_shader_objects	./GL/glew.h	/^#define GL_EXT_separate_shader_objects /;"	d
GL_EXT_separate_specular_color	./GL/glew.h	/^#define GL_EXT_separate_specular_color /;"	d
GL_EXT_shader_framebuffer_fetch	./GL/glew.h	/^#define GL_EXT_shader_framebuffer_fetch /;"	d
GL_EXT_shader_framebuffer_fetch_non_coherent	./GL/glew.h	/^#define GL_EXT_shader_framebuffer_fetch_non_coherent /;"	d
GL_EXT_shader_group_vote	./GL/glew.h	/^#define GL_EXT_shader_group_vote /;"	d
GL_EXT_shader_image_load_formatted	./GL/glew.h	/^#define GL_EXT_shader_image_load_formatted /;"	d
GL_EXT_shader_image_load_store	./GL/glew.h	/^#define GL_EXT_shader_image_load_store /;"	d
GL_EXT_shader_implicit_conversions	./GL/glew.h	/^#define GL_EXT_shader_implicit_conversions /;"	d
GL_EXT_shader_integer_mix	./GL/glew.h	/^#define GL_EXT_shader_integer_mix /;"	d
GL_EXT_shader_io_blocks	./GL/glew.h	/^#define GL_EXT_shader_io_blocks /;"	d
GL_EXT_shader_non_constant_global_initializers	./GL/glew.h	/^#define GL_EXT_shader_non_constant_global_initializers /;"	d
GL_EXT_shader_pixel_local_storage	./GL/glew.h	/^#define GL_EXT_shader_pixel_local_storage /;"	d
GL_EXT_shader_pixel_local_storage2	./GL/glew.h	/^#define GL_EXT_shader_pixel_local_storage2 /;"	d
GL_EXT_shader_texture_lod	./GL/glew.h	/^#define GL_EXT_shader_texture_lod /;"	d
GL_EXT_shadow_funcs	./GL/glew.h	/^#define GL_EXT_shadow_funcs /;"	d
GL_EXT_shadow_samplers	./GL/glew.h	/^#define GL_EXT_shadow_samplers /;"	d
GL_EXT_shared_texture_palette	./GL/glew.h	/^#define GL_EXT_shared_texture_palette /;"	d
GL_EXT_sparse_texture	./GL/glew.h	/^#define GL_EXT_sparse_texture /;"	d
GL_EXT_sparse_texture2	./GL/glew.h	/^#define GL_EXT_sparse_texture2 /;"	d
GL_EXT_static_vertex_array	./GL/glew.h	/^#define GL_EXT_static_vertex_array /;"	d
GL_EXT_stencil_clear_tag	./GL/glew.h	/^#define GL_EXT_stencil_clear_tag /;"	d
GL_EXT_stencil_two_side	./GL/glew.h	/^#define GL_EXT_stencil_two_side /;"	d
GL_EXT_stencil_wrap	./GL/glew.h	/^#define GL_EXT_stencil_wrap /;"	d
GL_EXT_subtexture	./GL/glew.h	/^#define GL_EXT_subtexture /;"	d
GL_EXT_tessellation_point_size	./GL/glew.h	/^#define GL_EXT_tessellation_point_size /;"	d
GL_EXT_tessellation_shader	./GL/glew.h	/^#define GL_EXT_tessellation_shader /;"	d
GL_EXT_texture	./GL/glew.h	/^#define GL_EXT_texture /;"	d
GL_EXT_texture3D	./GL/glew.h	/^#define GL_EXT_texture3D /;"	d
GL_EXT_texture_array	./GL/glew.h	/^#define GL_EXT_texture_array /;"	d
GL_EXT_texture_border_clamp	./GL/glew.h	/^#define GL_EXT_texture_border_clamp /;"	d
GL_EXT_texture_buffer	./GL/glew.h	/^#define GL_EXT_texture_buffer /;"	d
GL_EXT_texture_buffer_object	./GL/glew.h	/^#define GL_EXT_texture_buffer_object /;"	d
GL_EXT_texture_compression_astc_decode_mode	./GL/glew.h	/^#define GL_EXT_texture_compression_astc_decode_mode /;"	d
GL_EXT_texture_compression_astc_decode_mode_rgb9e5	./GL/glew.h	/^#define GL_EXT_texture_compression_astc_decode_mode_rgb9e5 /;"	d
GL_EXT_texture_compression_bptc	./GL/glew.h	/^#define GL_EXT_texture_compression_bptc /;"	d
GL_EXT_texture_compression_dxt1	./GL/glew.h	/^#define GL_EXT_texture_compression_dxt1 /;"	d
GL_EXT_texture_compression_latc	./GL/glew.h	/^#define GL_EXT_texture_compression_latc /;"	d
GL_EXT_texture_compression_rgtc	./GL/glew.h	/^#define GL_EXT_texture_compression_rgtc /;"	d
GL_EXT_texture_compression_s3tc	./GL/glew.h	/^#define GL_EXT_texture_compression_s3tc /;"	d
GL_EXT_texture_compression_s3tc_srgb	./GL/glew.h	/^#define GL_EXT_texture_compression_s3tc_srgb /;"	d
GL_EXT_texture_cube_map	./GL/glew.h	/^#define GL_EXT_texture_cube_map /;"	d
GL_EXT_texture_cube_map_array	./GL/glew.h	/^#define GL_EXT_texture_cube_map_array /;"	d
GL_EXT_texture_edge_clamp	./GL/glew.h	/^#define GL_EXT_texture_edge_clamp /;"	d
GL_EXT_texture_env	./GL/glew.h	/^#define GL_EXT_texture_env /;"	d
GL_EXT_texture_env_add	./GL/glew.h	/^#define GL_EXT_texture_env_add /;"	d
GL_EXT_texture_env_combine	./GL/glew.h	/^#define GL_EXT_texture_env_combine /;"	d
GL_EXT_texture_env_dot3	./GL/glew.h	/^#define GL_EXT_texture_env_dot3 /;"	d
GL_EXT_texture_filter_anisotropic	./GL/glew.h	/^#define GL_EXT_texture_filter_anisotropic /;"	d
GL_EXT_texture_filter_minmax	./GL/glew.h	/^#define GL_EXT_texture_filter_minmax /;"	d
GL_EXT_texture_format_BGRA8888	./GL/glew.h	/^#define GL_EXT_texture_format_BGRA8888 /;"	d
GL_EXT_texture_format_sRGB_override	./GL/glew.h	/^#define GL_EXT_texture_format_sRGB_override /;"	d
GL_EXT_texture_integer	./GL/glew.h	/^#define GL_EXT_texture_integer /;"	d
GL_EXT_texture_lod_bias	./GL/glew.h	/^#define GL_EXT_texture_lod_bias /;"	d
GL_EXT_texture_mirror_clamp	./GL/glew.h	/^#define GL_EXT_texture_mirror_clamp /;"	d
GL_EXT_texture_mirror_clamp_to_edge	./GL/glew.h	/^#define GL_EXT_texture_mirror_clamp_to_edge /;"	d
GL_EXT_texture_norm16	./GL/glew.h	/^#define GL_EXT_texture_norm16 /;"	d
GL_EXT_texture_object	./GL/glew.h	/^#define GL_EXT_texture_object /;"	d
GL_EXT_texture_perturb_normal	./GL/glew.h	/^#define GL_EXT_texture_perturb_normal /;"	d
GL_EXT_texture_query_lod	./GL/glew.h	/^#define GL_EXT_texture_query_lod /;"	d
GL_EXT_texture_rectangle	./GL/glew.h	/^#define GL_EXT_texture_rectangle /;"	d
GL_EXT_texture_rg	./GL/glew.h	/^#define GL_EXT_texture_rg /;"	d
GL_EXT_texture_sRGB	./GL/glew.h	/^#define GL_EXT_texture_sRGB /;"	d
GL_EXT_texture_sRGB_R8	./GL/glew.h	/^#define GL_EXT_texture_sRGB_R8 /;"	d
GL_EXT_texture_sRGB_RG8	./GL/glew.h	/^#define GL_EXT_texture_sRGB_RG8 /;"	d
GL_EXT_texture_sRGB_decode	./GL/glew.h	/^#define GL_EXT_texture_sRGB_decode /;"	d
GL_EXT_texture_shadow_lod	./GL/glew.h	/^#define GL_EXT_texture_shadow_lod /;"	d
GL_EXT_texture_shared_exponent	./GL/glew.h	/^#define GL_EXT_texture_shared_exponent /;"	d
GL_EXT_texture_snorm	./GL/glew.h	/^#define GL_EXT_texture_snorm /;"	d
GL_EXT_texture_storage	./GL/glew.h	/^#define GL_EXT_texture_storage /;"	d
GL_EXT_texture_swizzle	./GL/glew.h	/^#define GL_EXT_texture_swizzle /;"	d
GL_EXT_texture_type_2_10_10_10_REV	./GL/glew.h	/^#define GL_EXT_texture_type_2_10_10_10_REV /;"	d
GL_EXT_texture_view	./GL/glew.h	/^#define GL_EXT_texture_view /;"	d
GL_EXT_timer_query	./GL/glew.h	/^#define GL_EXT_timer_query /;"	d
GL_EXT_transform_feedback	./GL/glew.h	/^#define GL_EXT_transform_feedback /;"	d
GL_EXT_unpack_subimage	./GL/glew.h	/^#define GL_EXT_unpack_subimage /;"	d
GL_EXT_vertex_array	./GL/glew.h	/^#define GL_EXT_vertex_array /;"	d
GL_EXT_vertex_array_bgra	./GL/glew.h	/^#define GL_EXT_vertex_array_bgra /;"	d
GL_EXT_vertex_array_setXXX	./GL/glew.h	/^#define GL_EXT_vertex_array_setXXX /;"	d
GL_EXT_vertex_attrib_64bit	./GL/glew.h	/^#define GL_EXT_vertex_attrib_64bit /;"	d
GL_EXT_vertex_shader	./GL/glew.h	/^#define GL_EXT_vertex_shader /;"	d
GL_EXT_vertex_weighting	./GL/glew.h	/^#define GL_EXT_vertex_weighting /;"	d
GL_EXT_win32_keyed_mutex	./GL/glew.h	/^#define GL_EXT_win32_keyed_mutex /;"	d
GL_EXT_window_rectangles	./GL/glew.h	/^#define GL_EXT_window_rectangles /;"	d
GL_EXT_x11_sync_object	./GL/glew.h	/^#define GL_EXT_x11_sync_object /;"	d
GL_EYE_DISTANCE_TO_LINE_SGIS	./GL/glew.h	/^#define GL_EYE_DISTANCE_TO_LINE_SGIS /;"	d
GL_EYE_DISTANCE_TO_POINT_SGIS	./GL/glew.h	/^#define GL_EYE_DISTANCE_TO_POINT_SGIS /;"	d
GL_EYE_LINEAR	./GL/glew.h	/^#define GL_EYE_LINEAR /;"	d
GL_EYE_LINE_SGIS	./GL/glew.h	/^#define GL_EYE_LINE_SGIS /;"	d
GL_EYE_PLANE	./GL/glew.h	/^#define GL_EYE_PLANE /;"	d
GL_EYE_PLANE_ABSOLUTE_NV	./GL/glew.h	/^#define GL_EYE_PLANE_ABSOLUTE_NV /;"	d
GL_EYE_POINT_SGIS	./GL/glew.h	/^#define GL_EYE_POINT_SGIS /;"	d
GL_EYE_RADIAL_NV	./GL/glew.h	/^#define GL_EYE_RADIAL_NV /;"	d
GL_EYE_SPACE_SGIX	./GL/glew.h	/^#define GL_EYE_SPACE_SGIX /;"	d
GL_E_TIMES_F_NV	./GL/glew.h	/^#define GL_E_TIMES_F_NV /;"	d
GL_FACTOR_ALPHA_MODULATE_IMG	./GL/glew.h	/^#define GL_FACTOR_ALPHA_MODULATE_IMG /;"	d
GL_FACTOR_MAX_AMD	./GL/glew.h	/^#define GL_FACTOR_MAX_AMD /;"	d
GL_FACTOR_MIN_AMD	./GL/glew.h	/^#define GL_FACTOR_MIN_AMD /;"	d
GL_FAILURE_NV	./GL/glew.h	/^#define GL_FAILURE_NV /;"	d
GL_FALSE	./GL/glew.h	/^#define GL_FALSE /;"	d
GL_FASTEST	./GL/glew.h	/^#define GL_FASTEST /;"	d
GL_FEEDBACK	./GL/glew.h	/^#define GL_FEEDBACK /;"	d
GL_FEEDBACK_BUFFER_POINTER	./GL/glew.h	/^#define GL_FEEDBACK_BUFFER_POINTER /;"	d
GL_FEEDBACK_BUFFER_SIZE	./GL/glew.h	/^#define GL_FEEDBACK_BUFFER_SIZE /;"	d
GL_FEEDBACK_BUFFER_TYPE	./GL/glew.h	/^#define GL_FEEDBACK_BUFFER_TYPE /;"	d
GL_FENCE_APPLE	./GL/glew.h	/^#define GL_FENCE_APPLE /;"	d
GL_FENCE_CONDITION_NV	./GL/glew.h	/^#define GL_FENCE_CONDITION_NV /;"	d
GL_FENCE_STATUS_NV	./GL/glew.h	/^#define GL_FENCE_STATUS_NV /;"	d
GL_FETCH_PER_SAMPLE_ARM	./GL/glew.h	/^#define GL_FETCH_PER_SAMPLE_ARM /;"	d
GL_FFT_1D_SGI	./GL/glew.h	/^#define GL_FFT_1D_SGI /;"	d
GL_FIELDS_NV	./GL/glew.h	/^#define GL_FIELDS_NV /;"	d
GL_FIELD_LOWER_NV	./GL/glew.h	/^#define GL_FIELD_LOWER_NV /;"	d
GL_FIELD_UPPER_NV	./GL/glew.h	/^#define GL_FIELD_UPPER_NV /;"	d
GL_FILE_NAME_NV	./GL/glew.h	/^#define GL_FILE_NAME_NV /;"	d
GL_FILL	./GL/glew.h	/^#define GL_FILL /;"	d
GL_FILL_NV	./GL/glew.h	/^#define GL_FILL_NV /;"	d
GL_FILL_RECTANGLE_NV	./GL/glew.h	/^#define GL_FILL_RECTANGLE_NV /;"	d
GL_FILTER	./GL/glew.h	/^#define GL_FILTER /;"	d
GL_FIRST_TO_REST_NV	./GL/glew.h	/^#define GL_FIRST_TO_REST_NV /;"	d
GL_FIRST_VERTEX_CONVENTION	./GL/glew.h	/^#define GL_FIRST_VERTEX_CONVENTION /;"	d
GL_FIRST_VERTEX_CONVENTION_EXT	./GL/glew.h	/^#define GL_FIRST_VERTEX_CONVENTION_EXT /;"	d
GL_FIRST_VERTEX_CONVENTION_OES	./GL/glew.h	/^#define GL_FIRST_VERTEX_CONVENTION_OES /;"	d
GL_FIXED	./GL/glew.h	/^#define GL_FIXED /;"	d
GL_FIXED_ONLY	./GL/glew.h	/^#define GL_FIXED_ONLY /;"	d
GL_FIXED_ONLY_ARB	./GL/glew.h	/^#define GL_FIXED_ONLY_ARB /;"	d
GL_FJ_shader_binary_GCCSO	./GL/glew.h	/^#define GL_FJ_shader_binary_GCCSO /;"	d
GL_FLAT	./GL/glew.h	/^#define GL_FLAT /;"	d
GL_FLOAT	./GL/glew.h	/^#define GL_FLOAT /;"	d
GL_FLOAT16_IMAGE_1D_AMD	./GL/glew.h	/^#define GL_FLOAT16_IMAGE_1D_AMD /;"	d
GL_FLOAT16_IMAGE_1D_ARRAY_AMD	./GL/glew.h	/^#define GL_FLOAT16_IMAGE_1D_ARRAY_AMD /;"	d
GL_FLOAT16_IMAGE_2D_AMD	./GL/glew.h	/^#define GL_FLOAT16_IMAGE_2D_AMD /;"	d
GL_FLOAT16_IMAGE_2D_ARRAY_AMD	./GL/glew.h	/^#define GL_FLOAT16_IMAGE_2D_ARRAY_AMD /;"	d
GL_FLOAT16_IMAGE_2D_MULTISAMPLE_AMD	./GL/glew.h	/^#define GL_FLOAT16_IMAGE_2D_MULTISAMPLE_AMD /;"	d
GL_FLOAT16_IMAGE_2D_MULTISAMPLE_ARRAY_AMD	./GL/glew.h	/^#define GL_FLOAT16_IMAGE_2D_MULTISAMPLE_ARRAY_AMD /;"	d
GL_FLOAT16_IMAGE_2D_RECT_AMD	./GL/glew.h	/^#define GL_FLOAT16_IMAGE_2D_RECT_AMD /;"	d
GL_FLOAT16_IMAGE_3D_AMD	./GL/glew.h	/^#define GL_FLOAT16_IMAGE_3D_AMD /;"	d
GL_FLOAT16_IMAGE_BUFFER_AMD	./GL/glew.h	/^#define GL_FLOAT16_IMAGE_BUFFER_AMD /;"	d
GL_FLOAT16_IMAGE_CUBE_AMD	./GL/glew.h	/^#define GL_FLOAT16_IMAGE_CUBE_AMD /;"	d
GL_FLOAT16_IMAGE_CUBE_MAP_ARRAY_AMD	./GL/glew.h	/^#define GL_FLOAT16_IMAGE_CUBE_MAP_ARRAY_AMD /;"	d
GL_FLOAT16_MAT2_AMD	./GL/glew.h	/^#define GL_FLOAT16_MAT2_AMD /;"	d
GL_FLOAT16_MAT2x3_AMD	./GL/glew.h	/^#define GL_FLOAT16_MAT2x3_AMD /;"	d
GL_FLOAT16_MAT2x4_AMD	./GL/glew.h	/^#define GL_FLOAT16_MAT2x4_AMD /;"	d
GL_FLOAT16_MAT3_AMD	./GL/glew.h	/^#define GL_FLOAT16_MAT3_AMD /;"	d
GL_FLOAT16_MAT3x2_AMD	./GL/glew.h	/^#define GL_FLOAT16_MAT3x2_AMD /;"	d
GL_FLOAT16_MAT3x4_AMD	./GL/glew.h	/^#define GL_FLOAT16_MAT3x4_AMD /;"	d
GL_FLOAT16_MAT4_AMD	./GL/glew.h	/^#define GL_FLOAT16_MAT4_AMD /;"	d
GL_FLOAT16_MAT4x2_AMD	./GL/glew.h	/^#define GL_FLOAT16_MAT4x2_AMD /;"	d
GL_FLOAT16_MAT4x3_AMD	./GL/glew.h	/^#define GL_FLOAT16_MAT4x3_AMD /;"	d
GL_FLOAT16_NV	./GL/glew.h	/^#define GL_FLOAT16_NV /;"	d
GL_FLOAT16_SAMPLER_1D_AMD	./GL/glew.h	/^#define GL_FLOAT16_SAMPLER_1D_AMD /;"	d
GL_FLOAT16_SAMPLER_1D_ARRAY_AMD	./GL/glew.h	/^#define GL_FLOAT16_SAMPLER_1D_ARRAY_AMD /;"	d
GL_FLOAT16_SAMPLER_1D_ARRAY_SHADOW_AMD	./GL/glew.h	/^#define GL_FLOAT16_SAMPLER_1D_ARRAY_SHADOW_AMD /;"	d
GL_FLOAT16_SAMPLER_1D_SHADOW_AMD	./GL/glew.h	/^#define GL_FLOAT16_SAMPLER_1D_SHADOW_AMD /;"	d
GL_FLOAT16_SAMPLER_2D_AMD	./GL/glew.h	/^#define GL_FLOAT16_SAMPLER_2D_AMD /;"	d
GL_FLOAT16_SAMPLER_2D_ARRAY_AMD	./GL/glew.h	/^#define GL_FLOAT16_SAMPLER_2D_ARRAY_AMD /;"	d
GL_FLOAT16_SAMPLER_2D_ARRAY_SHADOW_AMD	./GL/glew.h	/^#define GL_FLOAT16_SAMPLER_2D_ARRAY_SHADOW_AMD /;"	d
GL_FLOAT16_SAMPLER_2D_MULTISAMPLE_AMD	./GL/glew.h	/^#define GL_FLOAT16_SAMPLER_2D_MULTISAMPLE_AMD /;"	d
GL_FLOAT16_SAMPLER_2D_MULTISAMPLE_ARRAY_AMD	./GL/glew.h	/^#define GL_FLOAT16_SAMPLER_2D_MULTISAMPLE_ARRAY_AMD /;"	d
GL_FLOAT16_SAMPLER_2D_RECT_AMD	./GL/glew.h	/^#define GL_FLOAT16_SAMPLER_2D_RECT_AMD /;"	d
GL_FLOAT16_SAMPLER_2D_RECT_SHADOW_AMD	./GL/glew.h	/^#define GL_FLOAT16_SAMPLER_2D_RECT_SHADOW_AMD /;"	d
GL_FLOAT16_SAMPLER_2D_SHADOW_AMD	./GL/glew.h	/^#define GL_FLOAT16_SAMPLER_2D_SHADOW_AMD /;"	d
GL_FLOAT16_SAMPLER_3D_AMD	./GL/glew.h	/^#define GL_FLOAT16_SAMPLER_3D_AMD /;"	d
GL_FLOAT16_SAMPLER_BUFFER_AMD	./GL/glew.h	/^#define GL_FLOAT16_SAMPLER_BUFFER_AMD /;"	d
GL_FLOAT16_SAMPLER_CUBE_AMD	./GL/glew.h	/^#define GL_FLOAT16_SAMPLER_CUBE_AMD /;"	d
GL_FLOAT16_SAMPLER_CUBE_MAP_ARRAY_AMD	./GL/glew.h	/^#define GL_FLOAT16_SAMPLER_CUBE_MAP_ARRAY_AMD /;"	d
GL_FLOAT16_SAMPLER_CUBE_MAP_ARRAY_SHADOW_AMD	./GL/glew.h	/^#define GL_FLOAT16_SAMPLER_CUBE_MAP_ARRAY_SHADOW_AMD /;"	d
GL_FLOAT16_SAMPLER_CUBE_SHADOW_AMD	./GL/glew.h	/^#define GL_FLOAT16_SAMPLER_CUBE_SHADOW_AMD /;"	d
GL_FLOAT16_VEC2_NV	./GL/glew.h	/^#define GL_FLOAT16_VEC2_NV /;"	d
GL_FLOAT16_VEC3_NV	./GL/glew.h	/^#define GL_FLOAT16_VEC3_NV /;"	d
GL_FLOAT16_VEC4_NV	./GL/glew.h	/^#define GL_FLOAT16_VEC4_NV /;"	d
GL_FLOAT_32_UNSIGNED_INT_24_8_REV	./GL/glew.h	/^#define GL_FLOAT_32_UNSIGNED_INT_24_8_REV /;"	d
GL_FLOAT_32_UNSIGNED_INT_24_8_REV_NV	./GL/glew.h	/^#define GL_FLOAT_32_UNSIGNED_INT_24_8_REV_NV /;"	d
GL_FLOAT_CLEAR_COLOR_VALUE_NV	./GL/glew.h	/^#define GL_FLOAT_CLEAR_COLOR_VALUE_NV /;"	d
GL_FLOAT_MAT2	./GL/glew.h	/^#define GL_FLOAT_MAT2 /;"	d
GL_FLOAT_MAT2_ARB	./GL/glew.h	/^#define GL_FLOAT_MAT2_ARB /;"	d
GL_FLOAT_MAT2x3	./GL/glew.h	/^#define GL_FLOAT_MAT2x3 /;"	d
GL_FLOAT_MAT2x3_NV	./GL/glew.h	/^#define GL_FLOAT_MAT2x3_NV /;"	d
GL_FLOAT_MAT2x4	./GL/glew.h	/^#define GL_FLOAT_MAT2x4 /;"	d
GL_FLOAT_MAT2x4_NV	./GL/glew.h	/^#define GL_FLOAT_MAT2x4_NV /;"	d
GL_FLOAT_MAT3	./GL/glew.h	/^#define GL_FLOAT_MAT3 /;"	d
GL_FLOAT_MAT3_ARB	./GL/glew.h	/^#define GL_FLOAT_MAT3_ARB /;"	d
GL_FLOAT_MAT3x2	./GL/glew.h	/^#define GL_FLOAT_MAT3x2 /;"	d
GL_FLOAT_MAT3x2_NV	./GL/glew.h	/^#define GL_FLOAT_MAT3x2_NV /;"	d
GL_FLOAT_MAT3x4	./GL/glew.h	/^#define GL_FLOAT_MAT3x4 /;"	d
GL_FLOAT_MAT3x4_NV	./GL/glew.h	/^#define GL_FLOAT_MAT3x4_NV /;"	d
GL_FLOAT_MAT4	./GL/glew.h	/^#define GL_FLOAT_MAT4 /;"	d
GL_FLOAT_MAT4_ARB	./GL/glew.h	/^#define GL_FLOAT_MAT4_ARB /;"	d
GL_FLOAT_MAT4x2	./GL/glew.h	/^#define GL_FLOAT_MAT4x2 /;"	d
GL_FLOAT_MAT4x2_NV	./GL/glew.h	/^#define GL_FLOAT_MAT4x2_NV /;"	d
GL_FLOAT_MAT4x3	./GL/glew.h	/^#define GL_FLOAT_MAT4x3 /;"	d
GL_FLOAT_MAT4x3_NV	./GL/glew.h	/^#define GL_FLOAT_MAT4x3_NV /;"	d
GL_FLOAT_R16_NV	./GL/glew.h	/^#define GL_FLOAT_R16_NV /;"	d
GL_FLOAT_R32_NV	./GL/glew.h	/^#define GL_FLOAT_R32_NV /;"	d
GL_FLOAT_RG16_NV	./GL/glew.h	/^#define GL_FLOAT_RG16_NV /;"	d
GL_FLOAT_RG32_NV	./GL/glew.h	/^#define GL_FLOAT_RG32_NV /;"	d
GL_FLOAT_RGB16_NV	./GL/glew.h	/^#define GL_FLOAT_RGB16_NV /;"	d
GL_FLOAT_RGB32_NV	./GL/glew.h	/^#define GL_FLOAT_RGB32_NV /;"	d
GL_FLOAT_RGBA16_NV	./GL/glew.h	/^#define GL_FLOAT_RGBA16_NV /;"	d
GL_FLOAT_RGBA32_NV	./GL/glew.h	/^#define GL_FLOAT_RGBA32_NV /;"	d
GL_FLOAT_RGBA_MODE_NV	./GL/glew.h	/^#define GL_FLOAT_RGBA_MODE_NV /;"	d
GL_FLOAT_RGBA_NV	./GL/glew.h	/^#define GL_FLOAT_RGBA_NV /;"	d
GL_FLOAT_RGB_NV	./GL/glew.h	/^#define GL_FLOAT_RGB_NV /;"	d
GL_FLOAT_RG_NV	./GL/glew.h	/^#define GL_FLOAT_RG_NV /;"	d
GL_FLOAT_R_NV	./GL/glew.h	/^#define GL_FLOAT_R_NV /;"	d
GL_FLOAT_VEC2	./GL/glew.h	/^#define GL_FLOAT_VEC2 /;"	d
GL_FLOAT_VEC2_ARB	./GL/glew.h	/^#define GL_FLOAT_VEC2_ARB /;"	d
GL_FLOAT_VEC3	./GL/glew.h	/^#define GL_FLOAT_VEC3 /;"	d
GL_FLOAT_VEC3_ARB	./GL/glew.h	/^#define GL_FLOAT_VEC3_ARB /;"	d
GL_FLOAT_VEC4	./GL/glew.h	/^#define GL_FLOAT_VEC4 /;"	d
GL_FLOAT_VEC4_ARB	./GL/glew.h	/^#define GL_FLOAT_VEC4_ARB /;"	d
GL_FOG	./GL/glew.h	/^#define GL_FOG /;"	d
GL_FOG_BIT	./GL/glew.h	/^#define GL_FOG_BIT /;"	d
GL_FOG_BLEND_ALPHA_SGIX	./GL/glew.h	/^#define GL_FOG_BLEND_ALPHA_SGIX /;"	d
GL_FOG_BLEND_COLOR_SGIX	./GL/glew.h	/^#define GL_FOG_BLEND_COLOR_SGIX /;"	d
GL_FOG_COLOR	./GL/glew.h	/^#define GL_FOG_COLOR /;"	d
GL_FOG_COORD	./GL/glew.h	/^#define GL_FOG_COORD GL_FOG_COORDI/;"	d
GL_FOG_COORDINATE	./GL/glew.h	/^#define GL_FOG_COORDINATE /;"	d
GL_FOG_COORDINATE_ARRAY	./GL/glew.h	/^#define GL_FOG_COORDINATE_ARRAY /;"	d
GL_FOG_COORDINATE_ARRAY_BUFFER_BINDING	./GL/glew.h	/^#define GL_FOG_COORDINATE_ARRAY_BUFFER_BINDING /;"	d
GL_FOG_COORDINATE_ARRAY_BUFFER_BINDING_ARB	./GL/glew.h	/^#define GL_FOG_COORDINATE_ARRAY_BUFFER_BINDING_ARB /;"	d
GL_FOG_COORDINATE_ARRAY_EXT	./GL/glew.h	/^#define GL_FOG_COORDINATE_ARRAY_EXT /;"	d
GL_FOG_COORDINATE_ARRAY_LIST_IBM	./GL/glew.h	/^#define GL_FOG_COORDINATE_ARRAY_LIST_IBM /;"	d
GL_FOG_COORDINATE_ARRAY_LIST_STRIDE_IBM	./GL/glew.h	/^#define GL_FOG_COORDINATE_ARRAY_LIST_STRIDE_IBM /;"	d
GL_FOG_COORDINATE_ARRAY_POINTER	./GL/glew.h	/^#define GL_FOG_COORDINATE_ARRAY_POINTER /;"	d
GL_FOG_COORDINATE_ARRAY_POINTER_EXT	./GL/glew.h	/^#define GL_FOG_COORDINATE_ARRAY_POINTER_EXT /;"	d
GL_FOG_COORDINATE_ARRAY_STRIDE	./GL/glew.h	/^#define GL_FOG_COORDINATE_ARRAY_STRIDE /;"	d
GL_FOG_COORDINATE_ARRAY_STRIDE_EXT	./GL/glew.h	/^#define GL_FOG_COORDINATE_ARRAY_STRIDE_EXT /;"	d
GL_FOG_COORDINATE_ARRAY_TYPE	./GL/glew.h	/^#define GL_FOG_COORDINATE_ARRAY_TYPE /;"	d
GL_FOG_COORDINATE_ARRAY_TYPE_EXT	./GL/glew.h	/^#define GL_FOG_COORDINATE_ARRAY_TYPE_EXT /;"	d
GL_FOG_COORDINATE_EXT	./GL/glew.h	/^#define GL_FOG_COORDINATE_EXT /;"	d
GL_FOG_COORDINATE_SOURCE	./GL/glew.h	/^#define GL_FOG_COORDINATE_SOURCE /;"	d
GL_FOG_COORDINATE_SOURCE_EXT	./GL/glew.h	/^#define GL_FOG_COORDINATE_SOURCE_EXT /;"	d
GL_FOG_COORD_ARRAY	./GL/glew.h	/^#define GL_FOG_COORD_ARRAY /;"	d
GL_FOG_COORD_ARRAY_ADDRESS_NV	./GL/glew.h	/^#define GL_FOG_COORD_ARRAY_ADDRESS_NV /;"	d
GL_FOG_COORD_ARRAY_BUFFER_BINDING	./GL/glew.h	/^#define GL_FOG_COORD_ARRAY_BUFFER_BINDING /;"	d
GL_FOG_COORD_ARRAY_LENGTH_NV	./GL/glew.h	/^#define GL_FOG_COORD_ARRAY_LENGTH_NV /;"	d
GL_FOG_COORD_ARRAY_POINTER	./GL/glew.h	/^#define GL_FOG_COORD_ARRAY_POINTER /;"	d
GL_FOG_COORD_ARRAY_STRIDE	./GL/glew.h	/^#define GL_FOG_COORD_ARRAY_STRIDE /;"	d
GL_FOG_COORD_ARRAY_TYPE	./GL/glew.h	/^#define GL_FOG_COORD_ARRAY_TYPE /;"	d
GL_FOG_COORD_SRC	./GL/glew.h	/^#define GL_FOG_COORD_SRC /;"	d
GL_FOG_DENSITY	./GL/glew.h	/^#define GL_FOG_DENSITY /;"	d
GL_FOG_DISTANCE_MODE_NV	./GL/glew.h	/^#define GL_FOG_DISTANCE_MODE_NV /;"	d
GL_FOG_END	./GL/glew.h	/^#define GL_FOG_END /;"	d
GL_FOG_GROUND_PLANE_SGIX	./GL/glew.h	/^#define GL_FOG_GROUND_PLANE_SGIX /;"	d
GL_FOG_HINT	./GL/glew.h	/^#define GL_FOG_HINT /;"	d
GL_FOG_INDEX	./GL/glew.h	/^#define GL_FOG_INDEX /;"	d
GL_FOG_LAYERS_POINTS_SGIX	./GL/glew.h	/^#define GL_FOG_LAYERS_POINTS_SGIX /;"	d
GL_FOG_MODE	./GL/glew.h	/^#define GL_FOG_MODE /;"	d
GL_FOG_OFFSET_SGIX	./GL/glew.h	/^#define GL_FOG_OFFSET_SGIX /;"	d
GL_FOG_OFFSET_VALUE_SGIX	./GL/glew.h	/^#define GL_FOG_OFFSET_VALUE_SGIX /;"	d
GL_FOG_SCALE_SGIX	./GL/glew.h	/^#define GL_FOG_SCALE_SGIX /;"	d
GL_FOG_SCALE_VALUE_SGIX	./GL/glew.h	/^#define GL_FOG_SCALE_VALUE_SGIX /;"	d
GL_FOG_SPECULAR_TEXTURE_WIN	./GL/glew.h	/^#define GL_FOG_SPECULAR_TEXTURE_WIN /;"	d
GL_FOG_START	./GL/glew.h	/^#define GL_FOG_START /;"	d
GL_FOG_TYPE_SGIX	./GL/glew.h	/^#define GL_FOG_TYPE_SGIX /;"	d
GL_FONT_ASCENDER_BIT_NV	./GL/glew.h	/^#define GL_FONT_ASCENDER_BIT_NV /;"	d
GL_FONT_DESCENDER_BIT_NV	./GL/glew.h	/^#define GL_FONT_DESCENDER_BIT_NV /;"	d
GL_FONT_GLYPHS_AVAILABLE_NV	./GL/glew.h	/^#define GL_FONT_GLYPHS_AVAILABLE_NV /;"	d
GL_FONT_HAS_KERNING_BIT_NV	./GL/glew.h	/^#define GL_FONT_HAS_KERNING_BIT_NV /;"	d
GL_FONT_HEIGHT_BIT_NV	./GL/glew.h	/^#define GL_FONT_HEIGHT_BIT_NV /;"	d
GL_FONT_MAX_ADVANCE_HEIGHT_BIT_NV	./GL/glew.h	/^#define GL_FONT_MAX_ADVANCE_HEIGHT_BIT_NV /;"	d
GL_FONT_MAX_ADVANCE_WIDTH_BIT_NV	./GL/glew.h	/^#define GL_FONT_MAX_ADVANCE_WIDTH_BIT_NV /;"	d
GL_FONT_NUM_GLYPH_INDICES_BIT_NV	./GL/glew.h	/^#define GL_FONT_NUM_GLYPH_INDICES_BIT_NV /;"	d
GL_FONT_TARGET_UNAVAILABLE_NV	./GL/glew.h	/^#define GL_FONT_TARGET_UNAVAILABLE_NV /;"	d
GL_FONT_UNAVAILABLE_NV	./GL/glew.h	/^#define GL_FONT_UNAVAILABLE_NV /;"	d
GL_FONT_UNDERLINE_POSITION_BIT_NV	./GL/glew.h	/^#define GL_FONT_UNDERLINE_POSITION_BIT_NV /;"	d
GL_FONT_UNDERLINE_THICKNESS_BIT_NV	./GL/glew.h	/^#define GL_FONT_UNDERLINE_THICKNESS_BIT_NV /;"	d
GL_FONT_UNINTELLIGIBLE_NV	./GL/glew.h	/^#define GL_FONT_UNINTELLIGIBLE_NV /;"	d
GL_FONT_UNITS_PER_EM_BIT_NV	./GL/glew.h	/^#define GL_FONT_UNITS_PER_EM_BIT_NV /;"	d
GL_FONT_X_MAX_BOUNDS_BIT_NV	./GL/glew.h	/^#define GL_FONT_X_MAX_BOUNDS_BIT_NV /;"	d
GL_FONT_X_MIN_BOUNDS_BIT_NV	./GL/glew.h	/^#define GL_FONT_X_MIN_BOUNDS_BIT_NV /;"	d
GL_FONT_Y_MAX_BOUNDS_BIT_NV	./GL/glew.h	/^#define GL_FONT_Y_MAX_BOUNDS_BIT_NV /;"	d
GL_FONT_Y_MIN_BOUNDS_BIT_NV	./GL/glew.h	/^#define GL_FONT_Y_MIN_BOUNDS_BIT_NV /;"	d
GL_FORCE_BLUE_TO_ONE_NV	./GL/glew.h	/^#define GL_FORCE_BLUE_TO_ONE_NV /;"	d
GL_FORMAT_SUBSAMPLE_244_244_OML	./GL/glew.h	/^#define GL_FORMAT_SUBSAMPLE_244_244_OML /;"	d
GL_FORMAT_SUBSAMPLE_24_24_OML	./GL/glew.h	/^#define GL_FORMAT_SUBSAMPLE_24_24_OML /;"	d
GL_FOVEATION_ENABLE_BIT_QCOM	./GL/glew.h	/^#define GL_FOVEATION_ENABLE_BIT_QCOM /;"	d
GL_FOVEATION_SCALED_BIN_METHOD_BIT_QCOM	./GL/glew.h	/^#define GL_FOVEATION_SCALED_BIN_METHOD_BIT_QCOM /;"	d
GL_FOVEATION_SUBSAMPLED_LAYOUT_METHOD_BIT_QCOM	./GL/glew.h	/^#define GL_FOVEATION_SUBSAMPLED_LAYOUT_METHOD_BIT_QCOM /;"	d
GL_FRACTIONAL_EVEN	./GL/glew.h	/^#define GL_FRACTIONAL_EVEN /;"	d
GL_FRACTIONAL_EVEN_EXT	./GL/glew.h	/^#define GL_FRACTIONAL_EVEN_EXT /;"	d
GL_FRACTIONAL_EVEN_OES	./GL/glew.h	/^#define GL_FRACTIONAL_EVEN_OES /;"	d
GL_FRACTIONAL_ODD	./GL/glew.h	/^#define GL_FRACTIONAL_ODD /;"	d
GL_FRACTIONAL_ODD_EXT	./GL/glew.h	/^#define GL_FRACTIONAL_ODD_EXT /;"	d
GL_FRACTIONAL_ODD_OES	./GL/glew.h	/^#define GL_FRACTIONAL_ODD_OES /;"	d
GL_FRAGMENTS_INSTRUMENT_COUNTERS_SGIX	./GL/glew.h	/^#define GL_FRAGMENTS_INSTRUMENT_COUNTERS_SGIX /;"	d
GL_FRAGMENTS_INSTRUMENT_MAX_SGIX	./GL/glew.h	/^#define GL_FRAGMENTS_INSTRUMENT_MAX_SGIX /;"	d
GL_FRAGMENTS_INSTRUMENT_SGIX	./GL/glew.h	/^#define GL_FRAGMENTS_INSTRUMENT_SGIX /;"	d
GL_FRAGMENT_ALPHA_MODULATE_IMG	./GL/glew.h	/^#define GL_FRAGMENT_ALPHA_MODULATE_IMG /;"	d
GL_FRAGMENT_COLOR_EXT	./GL/glew.h	/^#define GL_FRAGMENT_COLOR_EXT /;"	d
GL_FRAGMENT_COLOR_MATERIAL_EXT	./GL/glew.h	/^#define GL_FRAGMENT_COLOR_MATERIAL_EXT /;"	d
GL_FRAGMENT_COLOR_MATERIAL_FACE_EXT	./GL/glew.h	/^#define GL_FRAGMENT_COLOR_MATERIAL_FACE_EXT /;"	d
GL_FRAGMENT_COLOR_MATERIAL_PARAMETER_EXT	./GL/glew.h	/^#define GL_FRAGMENT_COLOR_MATERIAL_PARAMETER_EXT /;"	d
GL_FRAGMENT_COVERAGE_COLOR_NV	./GL/glew.h	/^#define GL_FRAGMENT_COVERAGE_COLOR_NV /;"	d
GL_FRAGMENT_COVERAGE_TO_COLOR_NV	./GL/glew.h	/^#define GL_FRAGMENT_COVERAGE_TO_COLOR_NV /;"	d
GL_FRAGMENT_DEPTH	./GL/glew.h	/^#define GL_FRAGMENT_DEPTH /;"	d
GL_FRAGMENT_DEPTH_EXT	./GL/glew.h	/^#define GL_FRAGMENT_DEPTH_EXT /;"	d
GL_FRAGMENT_INPUT_NV	./GL/glew.h	/^#define GL_FRAGMENT_INPUT_NV /;"	d
GL_FRAGMENT_INTERPOLATION_OFFSET_BITS	./GL/glew.h	/^#define GL_FRAGMENT_INTERPOLATION_OFFSET_BITS /;"	d
GL_FRAGMENT_INTERPOLATION_OFFSET_BITS_OES	./GL/glew.h	/^#define GL_FRAGMENT_INTERPOLATION_OFFSET_BITS_OES /;"	d
GL_FRAGMENT_LIGHT0_EXT	./GL/glew.h	/^#define GL_FRAGMENT_LIGHT0_EXT /;"	d
GL_FRAGMENT_LIGHT7_EXT	./GL/glew.h	/^#define GL_FRAGMENT_LIGHT7_EXT /;"	d
GL_FRAGMENT_LIGHTING_EXT	./GL/glew.h	/^#define GL_FRAGMENT_LIGHTING_EXT /;"	d
GL_FRAGMENT_LIGHT_MODEL_AMBIENT_EXT	./GL/glew.h	/^#define GL_FRAGMENT_LIGHT_MODEL_AMBIENT_EXT /;"	d
GL_FRAGMENT_LIGHT_MODEL_LOCAL_VIEWER_EXT	./GL/glew.h	/^#define GL_FRAGMENT_LIGHT_MODEL_LOCAL_VIEWER_EXT /;"	d
GL_FRAGMENT_LIGHT_MODEL_NORMAL_INTERPOLATION_EXT	./GL/glew.h	/^#define GL_FRAGMENT_LIGHT_MODEL_NORMAL_INTERPOLATION_EXT /;"	d
GL_FRAGMENT_LIGHT_MODEL_TWO_SIDE_EXT	./GL/glew.h	/^#define GL_FRAGMENT_LIGHT_MODEL_TWO_SIDE_EXT /;"	d
GL_FRAGMENT_LIGHT_SPACE_SGIX	./GL/glew.h	/^#define GL_FRAGMENT_LIGHT_SPACE_SGIX /;"	d
GL_FRAGMENT_MATERIAL_EXT	./GL/glew.h	/^#define GL_FRAGMENT_MATERIAL_EXT /;"	d
GL_FRAGMENT_NORMAL_EXT	./GL/glew.h	/^#define GL_FRAGMENT_NORMAL_EXT /;"	d
GL_FRAGMENT_PROGRAM_ARB	./GL/glew.h	/^#define GL_FRAGMENT_PROGRAM_ARB /;"	d
GL_FRAGMENT_PROGRAM_BINDING_NV	./GL/glew.h	/^#define GL_FRAGMENT_PROGRAM_BINDING_NV /;"	d
GL_FRAGMENT_PROGRAM_INTERPOLATION_OFFSET_BITS_NV	./GL/glew.h	/^#define GL_FRAGMENT_PROGRAM_INTERPOLATION_OFFSET_BITS_NV /;"	d
GL_FRAGMENT_PROGRAM_NV	./GL/glew.h	/^#define GL_FRAGMENT_PROGRAM_NV /;"	d
GL_FRAGMENT_PROGRAM_PARAMETER_BUFFER_NV	./GL/glew.h	/^#define GL_FRAGMENT_PROGRAM_PARAMETER_BUFFER_NV /;"	d
GL_FRAGMENT_SHADER	./GL/glew.h	/^#define GL_FRAGMENT_SHADER /;"	d
GL_FRAGMENT_SHADER_ARB	./GL/glew.h	/^#define GL_FRAGMENT_SHADER_ARB /;"	d
GL_FRAGMENT_SHADER_ATI	./GL/glew.h	/^#define GL_FRAGMENT_SHADER_ATI /;"	d
GL_FRAGMENT_SHADER_BIT	./GL/glew.h	/^#define GL_FRAGMENT_SHADER_BIT /;"	d
GL_FRAGMENT_SHADER_DERIVATIVE_HINT	./GL/glew.h	/^#define GL_FRAGMENT_SHADER_DERIVATIVE_HINT /;"	d
GL_FRAGMENT_SHADER_DERIVATIVE_HINT_ARB	./GL/glew.h	/^#define GL_FRAGMENT_SHADER_DERIVATIVE_HINT_ARB /;"	d
GL_FRAGMENT_SHADER_DERIVATIVE_HINT_OES	./GL/glew.h	/^#define GL_FRAGMENT_SHADER_DERIVATIVE_HINT_OES /;"	d
GL_FRAGMENT_SHADER_DISCARDS_SAMPLES_EXT	./GL/glew.h	/^#define GL_FRAGMENT_SHADER_DISCARDS_SAMPLES_EXT /;"	d
GL_FRAGMENT_SHADER_FRAMEBUFFER_FETCH_MRT_ARM	./GL/glew.h	/^#define GL_FRAGMENT_SHADER_FRAMEBUFFER_FETCH_MRT_ARM /;"	d
GL_FRAGMENT_SHADER_INVOCATIONS	./GL/glew.h	/^#define GL_FRAGMENT_SHADER_INVOCATIONS /;"	d
GL_FRAGMENT_SHADER_INVOCATIONS_ARB	./GL/glew.h	/^#define GL_FRAGMENT_SHADER_INVOCATIONS_ARB /;"	d
GL_FRAGMENT_SUBROUTINE	./GL/glew.h	/^#define GL_FRAGMENT_SUBROUTINE /;"	d
GL_FRAGMENT_SUBROUTINE_UNIFORM	./GL/glew.h	/^#define GL_FRAGMENT_SUBROUTINE_UNIFORM /;"	d
GL_FRAGMENT_TEXTURE	./GL/glew.h	/^#define GL_FRAGMENT_TEXTURE /;"	d
GL_FRAMEBUFFER	./GL/glew.h	/^#define GL_FRAMEBUFFER /;"	d
GL_FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE	./GL/glew.h	/^#define GL_FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE /;"	d
GL_FRAMEBUFFER_ATTACHMENT_ANGLE	./GL/glew.h	/^#define GL_FRAMEBUFFER_ATTACHMENT_ANGLE /;"	d
GL_FRAMEBUFFER_ATTACHMENT_BLUE_SIZE	./GL/glew.h	/^#define GL_FRAMEBUFFER_ATTACHMENT_BLUE_SIZE /;"	d
GL_FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING	./GL/glew.h	/^#define GL_FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING /;"	d
GL_FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING_EXT	./GL/glew.h	/^#define GL_FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING_EXT /;"	d
GL_FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE	./GL/glew.h	/^#define GL_FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE /;"	d
GL_FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE_EXT	./GL/glew.h	/^#define GL_FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE_EXT /;"	d
GL_FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE	./GL/glew.h	/^#define GL_FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE /;"	d
GL_FRAMEBUFFER_ATTACHMENT_GREEN_SIZE	./GL/glew.h	/^#define GL_FRAMEBUFFER_ATTACHMENT_GREEN_SIZE /;"	d
GL_FRAMEBUFFER_ATTACHMENT_LAYERED	./GL/glew.h	/^#define GL_FRAMEBUFFER_ATTACHMENT_LAYERED /;"	d
GL_FRAMEBUFFER_ATTACHMENT_LAYERED_ARB	./GL/glew.h	/^#define GL_FRAMEBUFFER_ATTACHMENT_LAYERED_ARB /;"	d
GL_FRAMEBUFFER_ATTACHMENT_LAYERED_EXT	./GL/glew.h	/^#define GL_FRAMEBUFFER_ATTACHMENT_LAYERED_EXT /;"	d
GL_FRAMEBUFFER_ATTACHMENT_LAYERED_OES	./GL/glew.h	/^#define GL_FRAMEBUFFER_ATTACHMENT_LAYERED_OES /;"	d
GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME	./GL/glew.h	/^#define GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME /;"	d
GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME_EXT	./GL/glew.h	/^#define GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME_EXT /;"	d
GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME_OES	./GL/glew.h	/^#define GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME_OES /;"	d
GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE	./GL/glew.h	/^#define GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE /;"	d
GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE_EXT	./GL/glew.h	/^#define GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE_EXT /;"	d
GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE_OES	./GL/glew.h	/^#define GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE_OES /;"	d
GL_FRAMEBUFFER_ATTACHMENT_RED_SIZE	./GL/glew.h	/^#define GL_FRAMEBUFFER_ATTACHMENT_RED_SIZE /;"	d
GL_FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE	./GL/glew.h	/^#define GL_FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE /;"	d
GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_3D_ZOFFSET_EXT	./GL/glew.h	/^#define GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_3D_ZOFFSET_EXT /;"	d
GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_3D_ZOFFSET_OES	./GL/glew.h	/^#define GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_3D_ZOFFSET_OES /;"	d
GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_BASE_VIEW_INDEX_OVR	./GL/glew.h	/^#define GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_BASE_VIEW_INDEX_OVR /;"	d
GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE	./GL/glew.h	/^#define GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE /;"	d
GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE_EXT	./GL/glew.h	/^#define GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE_EXT /;"	d
GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE_OES	./GL/glew.h	/^#define GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE_OES /;"	d
GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER	./GL/glew.h	/^#define GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER /;"	d
GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER_EXT	./GL/glew.h	/^#define GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER_EXT /;"	d
GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER_NV	./GL/glew.h	/^#define GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER_NV /;"	d
GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL	./GL/glew.h	/^#define GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL /;"	d
GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL_EXT	./GL/glew.h	/^#define GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL_EXT /;"	d
GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL_OES	./GL/glew.h	/^#define GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL_OES /;"	d
GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_NUM_VIEWS_OVR	./GL/glew.h	/^#define GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_NUM_VIEWS_OVR /;"	d
GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_SAMPLES_EXT	./GL/glew.h	/^#define GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_SAMPLES_EXT /;"	d
GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_SCALE_IMG	./GL/glew.h	/^#define GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_SCALE_IMG /;"	d
GL_FRAMEBUFFER_BARRIER_BIT	./GL/glew.h	/^#define GL_FRAMEBUFFER_BARRIER_BIT /;"	d
GL_FRAMEBUFFER_BARRIER_BIT_EXT	./GL/glew.h	/^#define GL_FRAMEBUFFER_BARRIER_BIT_EXT /;"	d
GL_FRAMEBUFFER_BINDING	./GL/glew.h	/^#define GL_FRAMEBUFFER_BINDING /;"	d
GL_FRAMEBUFFER_BINDING_EXT	./GL/glew.h	/^#define GL_FRAMEBUFFER_BINDING_EXT /;"	d
GL_FRAMEBUFFER_BINDING_OES	./GL/glew.h	/^#define GL_FRAMEBUFFER_BINDING_OES /;"	d
GL_FRAMEBUFFER_BLEND	./GL/glew.h	/^#define GL_FRAMEBUFFER_BLEND /;"	d
GL_FRAMEBUFFER_COMPLETE	./GL/glew.h	/^#define GL_FRAMEBUFFER_COMPLETE /;"	d
GL_FRAMEBUFFER_COMPLETE_EXT	./GL/glew.h	/^#define GL_FRAMEBUFFER_COMPLETE_EXT /;"	d
GL_FRAMEBUFFER_COMPLETE_OES	./GL/glew.h	/^#define GL_FRAMEBUFFER_COMPLETE_OES /;"	d
GL_FRAMEBUFFER_DEFAULT	./GL/glew.h	/^#define GL_FRAMEBUFFER_DEFAULT /;"	d
GL_FRAMEBUFFER_DEFAULT_FIXED_SAMPLE_LOCATIONS	./GL/glew.h	/^#define GL_FRAMEBUFFER_DEFAULT_FIXED_SAMPLE_LOCATIONS /;"	d
GL_FRAMEBUFFER_DEFAULT_HEIGHT	./GL/glew.h	/^#define GL_FRAMEBUFFER_DEFAULT_HEIGHT /;"	d
GL_FRAMEBUFFER_DEFAULT_LAYERS	./GL/glew.h	/^#define GL_FRAMEBUFFER_DEFAULT_LAYERS /;"	d
GL_FRAMEBUFFER_DEFAULT_LAYERS_EXT	./GL/glew.h	/^#define GL_FRAMEBUFFER_DEFAULT_LAYERS_EXT /;"	d
GL_FRAMEBUFFER_DEFAULT_LAYERS_OES	./GL/glew.h	/^#define GL_FRAMEBUFFER_DEFAULT_LAYERS_OES /;"	d
GL_FRAMEBUFFER_DEFAULT_SAMPLES	./GL/glew.h	/^#define GL_FRAMEBUFFER_DEFAULT_SAMPLES /;"	d
GL_FRAMEBUFFER_DEFAULT_WIDTH	./GL/glew.h	/^#define GL_FRAMEBUFFER_DEFAULT_WIDTH /;"	d
GL_FRAMEBUFFER_EXT	./GL/glew.h	/^#define GL_FRAMEBUFFER_EXT /;"	d
GL_FRAMEBUFFER_FETCH_NONCOHERENT_QCOM	./GL/glew.h	/^#define GL_FRAMEBUFFER_FETCH_NONCOHERENT_QCOM /;"	d
GL_FRAMEBUFFER_FLIP_Y_MESA	./GL/glew.h	/^#define GL_FRAMEBUFFER_FLIP_Y_MESA /;"	d
GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT	./GL/glew.h	/^#define GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT /;"	d
GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT_EXT	./GL/glew.h	/^#define GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT_EXT /;"	d
GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT_OES	./GL/glew.h	/^#define GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT_OES /;"	d
GL_FRAMEBUFFER_INCOMPLETE_DIMENSIONS_EXT	./GL/glew.h	/^#define GL_FRAMEBUFFER_INCOMPLETE_DIMENSIONS_EXT /;"	d
GL_FRAMEBUFFER_INCOMPLETE_DIMENSIONS_OES	./GL/glew.h	/^#define GL_FRAMEBUFFER_INCOMPLETE_DIMENSIONS_OES /;"	d
GL_FRAMEBUFFER_INCOMPLETE_DRAW_BUFFER	./GL/glew.h	/^#define GL_FRAMEBUFFER_INCOMPLETE_DRAW_BUFFER /;"	d
GL_FRAMEBUFFER_INCOMPLETE_DRAW_BUFFER_EXT	./GL/glew.h	/^#define GL_FRAMEBUFFER_INCOMPLETE_DRAW_BUFFER_EXT /;"	d
GL_FRAMEBUFFER_INCOMPLETE_DRAW_BUFFER_OES	./GL/glew.h	/^#define GL_FRAMEBUFFER_INCOMPLETE_DRAW_BUFFER_OES /;"	d
GL_FRAMEBUFFER_INCOMPLETE_FORMATS_EXT	./GL/glew.h	/^#define GL_FRAMEBUFFER_INCOMPLETE_FORMATS_EXT /;"	d
GL_FRAMEBUFFER_INCOMPLETE_FORMATS_OES	./GL/glew.h	/^#define GL_FRAMEBUFFER_INCOMPLETE_FORMATS_OES /;"	d
GL_FRAMEBUFFER_INCOMPLETE_FOVEATION_QCOM	./GL/glew.h	/^#define GL_FRAMEBUFFER_INCOMPLETE_FOVEATION_QCOM /;"	d
GL_FRAMEBUFFER_INCOMPLETE_INSUFFICIENT_SHADER_COMBINED_LOCAL_STORAGE_EXT	./GL/glew.h	/^#define GL_FRAMEBUFFER_INCOMPLETE_INSUFFICIENT_SHADER_COMBINED_LOCAL_STORAGE_EXT /;"	d
GL_FRAMEBUFFER_INCOMPLETE_LAYER_COUNT_ARB	./GL/glew.h	/^#define GL_FRAMEBUFFER_INCOMPLETE_LAYER_COUNT_ARB /;"	d
GL_FRAMEBUFFER_INCOMPLETE_LAYER_COUNT_EXT	./GL/glew.h	/^#define GL_FRAMEBUFFER_INCOMPLETE_LAYER_COUNT_EXT /;"	d
GL_FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS	./GL/glew.h	/^#define GL_FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS /;"	d
GL_FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS_ARB	./GL/glew.h	/^#define GL_FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS_ARB /;"	d
GL_FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS_EXT	./GL/glew.h	/^#define GL_FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS_EXT /;"	d
GL_FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS_OES	./GL/glew.h	/^#define GL_FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS_OES /;"	d
GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT	./GL/glew.h	/^#define GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT /;"	d
GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT_EXT	./GL/glew.h	/^#define GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT_EXT /;"	d
GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT_OES	./GL/glew.h	/^#define GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT_OES /;"	d
GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE	./GL/glew.h	/^#define GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE /;"	d
GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE_AND_DOWNSAMPLE_IMG	./GL/glew.h	/^#define GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE_AND_DOWNSAMPLE_IMG /;"	d
GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE_ANGLE	./GL/glew.h	/^#define GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE_ANGLE /;"	d
GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE_APPLE	./GL/glew.h	/^#define GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE_APPLE /;"	d
GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE_EXT	./GL/glew.h	/^#define GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE_EXT /;"	d
GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE_IMG	./GL/glew.h	/^#define GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE_IMG /;"	d
GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE_NV	./GL/glew.h	/^#define GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE_NV /;"	d
GL_FRAMEBUFFER_INCOMPLETE_READ_BUFFER	./GL/glew.h	/^#define GL_FRAMEBUFFER_INCOMPLETE_READ_BUFFER /;"	d
GL_FRAMEBUFFER_INCOMPLETE_READ_BUFFER_EXT	./GL/glew.h	/^#define GL_FRAMEBUFFER_INCOMPLETE_READ_BUFFER_EXT /;"	d
GL_FRAMEBUFFER_INCOMPLETE_READ_BUFFER_OES	./GL/glew.h	/^#define GL_FRAMEBUFFER_INCOMPLETE_READ_BUFFER_OES /;"	d
GL_FRAMEBUFFER_INCOMPLETE_VIEW_TARGETS_OVR	./GL/glew.h	/^#define GL_FRAMEBUFFER_INCOMPLETE_VIEW_TARGETS_OVR /;"	d
GL_FRAMEBUFFER_OES	./GL/glew.h	/^#define GL_FRAMEBUFFER_OES /;"	d
GL_FRAMEBUFFER_PROGRAMMABLE_SAMPLE_LOCATIONS_ARB	./GL/glew.h	/^#define GL_FRAMEBUFFER_PROGRAMMABLE_SAMPLE_LOCATIONS_ARB /;"	d
GL_FRAMEBUFFER_PROGRAMMABLE_SAMPLE_LOCATIONS_NV	./GL/glew.h	/^#define GL_FRAMEBUFFER_PROGRAMMABLE_SAMPLE_LOCATIONS_NV /;"	d
GL_FRAMEBUFFER_RENDERABLE	./GL/glew.h	/^#define GL_FRAMEBUFFER_RENDERABLE /;"	d
GL_FRAMEBUFFER_RENDERABLE_LAYERED	./GL/glew.h	/^#define GL_FRAMEBUFFER_RENDERABLE_LAYERED /;"	d
GL_FRAMEBUFFER_SAMPLE_LOCATION_PIXEL_GRID_ARB	./GL/glew.h	/^#define GL_FRAMEBUFFER_SAMPLE_LOCATION_PIXEL_GRID_ARB /;"	d
GL_FRAMEBUFFER_SAMPLE_LOCATION_PIXEL_GRID_NV	./GL/glew.h	/^#define GL_FRAMEBUFFER_SAMPLE_LOCATION_PIXEL_GRID_NV /;"	d
GL_FRAMEBUFFER_SRGB	./GL/glew.h	/^#define GL_FRAMEBUFFER_SRGB /;"	d
GL_FRAMEBUFFER_SRGB_CAPABLE_EXT	./GL/glew.h	/^#define GL_FRAMEBUFFER_SRGB_CAPABLE_EXT /;"	d
GL_FRAMEBUFFER_SRGB_EXT	./GL/glew.h	/^#define GL_FRAMEBUFFER_SRGB_EXT /;"	d
GL_FRAMEBUFFER_UNDEFINED	./GL/glew.h	/^#define GL_FRAMEBUFFER_UNDEFINED /;"	d
GL_FRAMEBUFFER_UNDEFINED_OES	./GL/glew.h	/^#define GL_FRAMEBUFFER_UNDEFINED_OES /;"	d
GL_FRAMEBUFFER_UNSUPPORTED	./GL/glew.h	/^#define GL_FRAMEBUFFER_UNSUPPORTED /;"	d
GL_FRAMEBUFFER_UNSUPPORTED_EXT	./GL/glew.h	/^#define GL_FRAMEBUFFER_UNSUPPORTED_EXT /;"	d
GL_FRAMEBUFFER_UNSUPPORTED_OES	./GL/glew.h	/^#define GL_FRAMEBUFFER_UNSUPPORTED_OES /;"	d
GL_FRAME_NV	./GL/glew.h	/^#define GL_FRAME_NV /;"	d
GL_FRONT	./GL/glew.h	/^#define GL_FRONT /;"	d
GL_FRONT_AND_BACK	./GL/glew.h	/^#define GL_FRONT_AND_BACK /;"	d
GL_FRONT_FACE	./GL/glew.h	/^#define GL_FRONT_FACE /;"	d
GL_FRONT_FACE_COMMAND_NV	./GL/glew.h	/^#define GL_FRONT_FACE_COMMAND_NV /;"	d
GL_FRONT_LEFT	./GL/glew.h	/^#define GL_FRONT_LEFT /;"	d
GL_FRONT_RIGHT	./GL/glew.h	/^#define GL_FRONT_RIGHT /;"	d
GL_FULL_RANGE_EXT	./GL/glew.h	/^#define GL_FULL_RANGE_EXT /;"	d
GL_FULL_STIPPLE_HINT_PGI	./GL/glew.h	/^#define GL_FULL_STIPPLE_HINT_PGI /;"	d
GL_FULL_SUPPORT	./GL/glew.h	/^#define GL_FULL_SUPPORT /;"	d
GL_FUNC_ADD	./GL/glew.h	/^#define GL_FUNC_ADD /;"	d
GL_FUNC_ADD_EXT	./GL/glew.h	/^#define GL_FUNC_ADD_EXT /;"	d
GL_FUNC_ADD_OES	./GL/glew.h	/^#define GL_FUNC_ADD_OES /;"	d
GL_FUNC_COMPLEX_ADD_EXT	./GL/glew.h	/^#define GL_FUNC_COMPLEX_ADD_EXT /;"	d
GL_FUNC_COMPLEX_MULTIPLY_EXT	./GL/glew.h	/^#define GL_FUNC_COMPLEX_MULTIPLY_EXT /;"	d
GL_FUNC_REVERSE_SUBTRACT	./GL/glew.h	/^#define GL_FUNC_REVERSE_SUBTRACT /;"	d
GL_FUNC_REVERSE_SUBTRACT_EXT	./GL/glew.h	/^#define GL_FUNC_REVERSE_SUBTRACT_EXT /;"	d
GL_FUNC_REVERSE_SUBTRACT_OES	./GL/glew.h	/^#define GL_FUNC_REVERSE_SUBTRACT_OES /;"	d
GL_FUNC_SUBTRACT	./GL/glew.h	/^#define GL_FUNC_SUBTRACT /;"	d
GL_FUNC_SUBTRACT_EXT	./GL/glew.h	/^#define GL_FUNC_SUBTRACT_EXT /;"	d
GL_FUNC_SUBTRACT_OES	./GL/glew.h	/^#define GL_FUNC_SUBTRACT_OES /;"	d
GL_GCCSO_SHADER_BINARY_FJ	./GL/glew.h	/^#define GL_GCCSO_SHADER_BINARY_FJ /;"	d
GL_GENERATE_MIPMAP	./GL/glew.h	/^#define GL_GENERATE_MIPMAP /;"	d
GL_GENERATE_MIPMAP_HINT	./GL/glew.h	/^#define GL_GENERATE_MIPMAP_HINT /;"	d
GL_GENERATE_MIPMAP_HINT_SGIS	./GL/glew.h	/^#define GL_GENERATE_MIPMAP_HINT_SGIS /;"	d
GL_GENERATE_MIPMAP_SGIS	./GL/glew.h	/^#define GL_GENERATE_MIPMAP_SGIS /;"	d
GL_GENERIC_ATTRIB_NV	./GL/glew.h	/^#define GL_GENERIC_ATTRIB_NV /;"	d
GL_GEOMETRY_BIT	./GL/glew.h	/^#define GL_GEOMETRY_BIT /;"	d
GL_GEOMETRY_DEFORMATION_BIT_SGIX	./GL/glew.h	/^#define GL_GEOMETRY_DEFORMATION_BIT_SGIX /;"	d
GL_GEOMETRY_INPUT_TYPE	./GL/glew.h	/^#define GL_GEOMETRY_INPUT_TYPE /;"	d
GL_GEOMETRY_INPUT_TYPE_ARB	./GL/glew.h	/^#define GL_GEOMETRY_INPUT_TYPE_ARB /;"	d
GL_GEOMETRY_INPUT_TYPE_EXT	./GL/glew.h	/^#define GL_GEOMETRY_INPUT_TYPE_EXT /;"	d
GL_GEOMETRY_LINKED_INPUT_TYPE_EXT	./GL/glew.h	/^#define GL_GEOMETRY_LINKED_INPUT_TYPE_EXT /;"	d
GL_GEOMETRY_LINKED_INPUT_TYPE_OES	./GL/glew.h	/^#define GL_GEOMETRY_LINKED_INPUT_TYPE_OES /;"	d
GL_GEOMETRY_LINKED_OUTPUT_TYPE_EXT	./GL/glew.h	/^#define GL_GEOMETRY_LINKED_OUTPUT_TYPE_EXT /;"	d
GL_GEOMETRY_LINKED_OUTPUT_TYPE_OES	./GL/glew.h	/^#define GL_GEOMETRY_LINKED_OUTPUT_TYPE_OES /;"	d
GL_GEOMETRY_LINKED_VERTICES_OUT_EXT	./GL/glew.h	/^#define GL_GEOMETRY_LINKED_VERTICES_OUT_EXT /;"	d
GL_GEOMETRY_LINKED_VERTICES_OUT_OES	./GL/glew.h	/^#define GL_GEOMETRY_LINKED_VERTICES_OUT_OES /;"	d
GL_GEOMETRY_OUTPUT_TYPE	./GL/glew.h	/^#define GL_GEOMETRY_OUTPUT_TYPE /;"	d
GL_GEOMETRY_OUTPUT_TYPE_ARB	./GL/glew.h	/^#define GL_GEOMETRY_OUTPUT_TYPE_ARB /;"	d
GL_GEOMETRY_OUTPUT_TYPE_EXT	./GL/glew.h	/^#define GL_GEOMETRY_OUTPUT_TYPE_EXT /;"	d
GL_GEOMETRY_PROGRAM_NV	./GL/glew.h	/^#define GL_GEOMETRY_PROGRAM_NV /;"	d
GL_GEOMETRY_PROGRAM_PARAMETER_BUFFER_NV	./GL/glew.h	/^#define GL_GEOMETRY_PROGRAM_PARAMETER_BUFFER_NV /;"	d
GL_GEOMETRY_SHADER	./GL/glew.h	/^#define GL_GEOMETRY_SHADER /;"	d
GL_GEOMETRY_SHADER_ARB	./GL/glew.h	/^#define GL_GEOMETRY_SHADER_ARB /;"	d
GL_GEOMETRY_SHADER_BIT	./GL/glew.h	/^#define GL_GEOMETRY_SHADER_BIT /;"	d
GL_GEOMETRY_SHADER_BIT_EXT	./GL/glew.h	/^#define GL_GEOMETRY_SHADER_BIT_EXT /;"	d
GL_GEOMETRY_SHADER_BIT_OES	./GL/glew.h	/^#define GL_GEOMETRY_SHADER_BIT_OES /;"	d
GL_GEOMETRY_SHADER_EXT	./GL/glew.h	/^#define GL_GEOMETRY_SHADER_EXT /;"	d
GL_GEOMETRY_SHADER_INVOCATIONS	./GL/glew.h	/^#define GL_GEOMETRY_SHADER_INVOCATIONS /;"	d
GL_GEOMETRY_SHADER_INVOCATIONS_EXT	./GL/glew.h	/^#define GL_GEOMETRY_SHADER_INVOCATIONS_EXT /;"	d
GL_GEOMETRY_SHADER_INVOCATIONS_OES	./GL/glew.h	/^#define GL_GEOMETRY_SHADER_INVOCATIONS_OES /;"	d
GL_GEOMETRY_SHADER_OES	./GL/glew.h	/^#define GL_GEOMETRY_SHADER_OES /;"	d
GL_GEOMETRY_SHADER_PRIMITIVES_EMITTED	./GL/glew.h	/^#define GL_GEOMETRY_SHADER_PRIMITIVES_EMITTED /;"	d
GL_GEOMETRY_SHADER_PRIMITIVES_EMITTED_ARB	./GL/glew.h	/^#define GL_GEOMETRY_SHADER_PRIMITIVES_EMITTED_ARB /;"	d
GL_GEOMETRY_SUBROUTINE	./GL/glew.h	/^#define GL_GEOMETRY_SUBROUTINE /;"	d
GL_GEOMETRY_SUBROUTINE_UNIFORM	./GL/glew.h	/^#define GL_GEOMETRY_SUBROUTINE_UNIFORM /;"	d
GL_GEOMETRY_TEXTURE	./GL/glew.h	/^#define GL_GEOMETRY_TEXTURE /;"	d
GL_GEOMETRY_VERTICES_OUT	./GL/glew.h	/^#define GL_GEOMETRY_VERTICES_OUT /;"	d
GL_GEOMETRY_VERTICES_OUT_ARB	./GL/glew.h	/^#define GL_GEOMETRY_VERTICES_OUT_ARB /;"	d
GL_GEOMETRY_VERTICES_OUT_EXT	./GL/glew.h	/^#define GL_GEOMETRY_VERTICES_OUT_EXT /;"	d
GL_GEQUAL	./GL/glew.h	/^#define GL_GEQUAL /;"	d
GL_GET_TEXTURE_IMAGE_FORMAT	./GL/glew.h	/^#define GL_GET_TEXTURE_IMAGE_FORMAT /;"	d
GL_GET_TEXTURE_IMAGE_TYPE	./GL/glew.h	/^#define GL_GET_TEXTURE_IMAGE_TYPE /;"	d
GL_GLOBAL_ALPHA_FACTOR_SUN	./GL/glew.h	/^#define GL_GLOBAL_ALPHA_FACTOR_SUN /;"	d
GL_GLOBAL_ALPHA_SUN	./GL/glew.h	/^#define GL_GLOBAL_ALPHA_SUN /;"	d
GL_GLYPH_HAS_KERNING_BIT_NV	./GL/glew.h	/^#define GL_GLYPH_HAS_KERNING_BIT_NV /;"	d
GL_GLYPH_HEIGHT_BIT_NV	./GL/glew.h	/^#define GL_GLYPH_HEIGHT_BIT_NV /;"	d
GL_GLYPH_HORIZONTAL_BEARING_ADVANCE_BIT_NV	./GL/glew.h	/^#define GL_GLYPH_HORIZONTAL_BEARING_ADVANCE_BIT_NV /;"	d
GL_GLYPH_HORIZONTAL_BEARING_X_BIT_NV	./GL/glew.h	/^#define GL_GLYPH_HORIZONTAL_BEARING_X_BIT_NV /;"	d
GL_GLYPH_HORIZONTAL_BEARING_Y_BIT_NV	./GL/glew.h	/^#define GL_GLYPH_HORIZONTAL_BEARING_Y_BIT_NV /;"	d
GL_GLYPH_VERTICAL_BEARING_ADVANCE_BIT_NV	./GL/glew.h	/^#define GL_GLYPH_VERTICAL_BEARING_ADVANCE_BIT_NV /;"	d
GL_GLYPH_VERTICAL_BEARING_X_BIT_NV	./GL/glew.h	/^#define GL_GLYPH_VERTICAL_BEARING_X_BIT_NV /;"	d
GL_GLYPH_VERTICAL_BEARING_Y_BIT_NV	./GL/glew.h	/^#define GL_GLYPH_VERTICAL_BEARING_Y_BIT_NV /;"	d
GL_GLYPH_WIDTH_BIT_NV	./GL/glew.h	/^#define GL_GLYPH_WIDTH_BIT_NV /;"	d
GL_GPU_ADDRESS_NV	./GL/glew.h	/^#define GL_GPU_ADDRESS_NV /;"	d
GL_GPU_DISJOINT_EXT	./GL/glew.h	/^#define GL_GPU_DISJOINT_EXT /;"	d
GL_GPU_MEMORY_INFO_CURRENT_AVAILABLE_VIDMEM_NVX	./GL/glew.h	/^#define GL_GPU_MEMORY_INFO_CURRENT_AVAILABLE_VIDMEM_NVX /;"	d
GL_GPU_MEMORY_INFO_DEDICATED_VIDMEM_NVX	./GL/glew.h	/^#define GL_GPU_MEMORY_INFO_DEDICATED_VIDMEM_NVX /;"	d
GL_GPU_MEMORY_INFO_EVICTED_MEMORY_NVX	./GL/glew.h	/^#define GL_GPU_MEMORY_INFO_EVICTED_MEMORY_NVX /;"	d
GL_GPU_MEMORY_INFO_EVICTION_COUNT_NVX	./GL/glew.h	/^#define GL_GPU_MEMORY_INFO_EVICTION_COUNT_NVX /;"	d
GL_GPU_MEMORY_INFO_TOTAL_AVAILABLE_MEMORY_NVX	./GL/glew.h	/^#define GL_GPU_MEMORY_INFO_TOTAL_AVAILABLE_MEMORY_NVX /;"	d
GL_GPU_OPTIMIZED_QCOM	./GL/glew.h	/^#define GL_GPU_OPTIMIZED_QCOM /;"	d
GL_GREATER	./GL/glew.h	/^#define GL_GREATER /;"	d
GL_GREEN	./GL/glew.h	/^#define GL_GREEN /;"	d
GL_GREEN_BIAS	./GL/glew.h	/^#define GL_GREEN_BIAS /;"	d
GL_GREEN_BITS	./GL/glew.h	/^#define GL_GREEN_BITS /;"	d
GL_GREEN_BIT_ATI	./GL/glew.h	/^#define GL_GREEN_BIT_ATI /;"	d
GL_GREEN_INTEGER	./GL/glew.h	/^#define GL_GREEN_INTEGER /;"	d
GL_GREEN_INTEGER_EXT	./GL/glew.h	/^#define GL_GREEN_INTEGER_EXT /;"	d
GL_GREEN_MAX_CLAMP_INGR	./GL/glew.h	/^#define GL_GREEN_MAX_CLAMP_INGR /;"	d
GL_GREEN_MIN_CLAMP_INGR	./GL/glew.h	/^#define GL_GREEN_MIN_CLAMP_INGR /;"	d
GL_GREEN_NV	./GL/glew.h	/^#define GL_GREEN_NV /;"	d
GL_GREEN_SCALE	./GL/glew.h	/^#define GL_GREEN_SCALE /;"	d
GL_GREMEDY_frame_terminator	./GL/glew.h	/^#define GL_GREMEDY_frame_terminator /;"	d
GL_GREMEDY_string_marker	./GL/glew.h	/^#define GL_GREMEDY_string_marker /;"	d
GL_GUILTY_CONTEXT_RESET	./GL/glew.h	/^#define GL_GUILTY_CONTEXT_RESET /;"	d
GL_GUILTY_CONTEXT_RESET_ARB	./GL/glew.h	/^#define GL_GUILTY_CONTEXT_RESET_ARB /;"	d
GL_GUILTY_CONTEXT_RESET_EXT	./GL/glew.h	/^#define GL_GUILTY_CONTEXT_RESET_EXT /;"	d
GL_HALF_APPLE	./GL/glew.h	/^#define GL_HALF_APPLE /;"	d
GL_HALF_BIAS_NEGATE_NV	./GL/glew.h	/^#define GL_HALF_BIAS_NEGATE_NV /;"	d
GL_HALF_BIAS_NORMAL_NV	./GL/glew.h	/^#define GL_HALF_BIAS_NORMAL_NV /;"	d
GL_HALF_BIT_ATI	./GL/glew.h	/^#define GL_HALF_BIT_ATI /;"	d
GL_HALF_FLOAT	./GL/glew.h	/^#define GL_HALF_FLOAT /;"	d
GL_HALF_FLOAT_ARB	./GL/glew.h	/^#define GL_HALF_FLOAT_ARB /;"	d
GL_HALF_FLOAT_NV	./GL/glew.h	/^#define GL_HALF_FLOAT_NV /;"	d
GL_HALF_FLOAT_OES	./GL/glew.h	/^#define GL_HALF_FLOAT_OES /;"	d
GL_HANDLE_TYPE_D3D11_IMAGE_EXT	./GL/glew.h	/^#define GL_HANDLE_TYPE_D3D11_IMAGE_EXT /;"	d
GL_HANDLE_TYPE_D3D11_IMAGE_KMT_EXT	./GL/glew.h	/^#define GL_HANDLE_TYPE_D3D11_IMAGE_KMT_EXT /;"	d
GL_HANDLE_TYPE_D3D12_FENCE_EXT	./GL/glew.h	/^#define GL_HANDLE_TYPE_D3D12_FENCE_EXT /;"	d
GL_HANDLE_TYPE_D3D12_RESOURCE_EXT	./GL/glew.h	/^#define GL_HANDLE_TYPE_D3D12_RESOURCE_EXT /;"	d
GL_HANDLE_TYPE_D3D12_TILEPOOL_EXT	./GL/glew.h	/^#define GL_HANDLE_TYPE_D3D12_TILEPOOL_EXT /;"	d
GL_HANDLE_TYPE_OPAQUE_FD_EXT	./GL/glew.h	/^#define GL_HANDLE_TYPE_OPAQUE_FD_EXT /;"	d
GL_HANDLE_TYPE_OPAQUE_WIN32_EXT	./GL/glew.h	/^#define GL_HANDLE_TYPE_OPAQUE_WIN32_EXT /;"	d
GL_HANDLE_TYPE_OPAQUE_WIN32_KMT_EXT	./GL/glew.h	/^#define GL_HANDLE_TYPE_OPAQUE_WIN32_KMT_EXT /;"	d
GL_HARDLIGHT_KHR	./GL/glew.h	/^#define GL_HARDLIGHT_KHR /;"	d
GL_HARDLIGHT_NV	./GL/glew.h	/^#define GL_HARDLIGHT_NV /;"	d
GL_HARDMIX_NV	./GL/glew.h	/^#define GL_HARDMIX_NV /;"	d
GL_HIGH_FLOAT	./GL/glew.h	/^#define GL_HIGH_FLOAT /;"	d
GL_HIGH_INT	./GL/glew.h	/^#define GL_HIGH_INT /;"	d
GL_HILO16_NV	./GL/glew.h	/^#define GL_HILO16_NV /;"	d
GL_HILO8_NV	./GL/glew.h	/^#define GL_HILO8_NV /;"	d
GL_HILO_NV	./GL/glew.h	/^#define GL_HILO_NV /;"	d
GL_HINT_BIT	./GL/glew.h	/^#define GL_HINT_BIT /;"	d
GL_HISTOGRAM	./GL/glew.h	/^#define GL_HISTOGRAM /;"	d
GL_HISTOGRAM_ALPHA_SIZE	./GL/glew.h	/^#define GL_HISTOGRAM_ALPHA_SIZE /;"	d
GL_HISTOGRAM_ALPHA_SIZE_EXT	./GL/glew.h	/^#define GL_HISTOGRAM_ALPHA_SIZE_EXT /;"	d
GL_HISTOGRAM_BLUE_SIZE	./GL/glew.h	/^#define GL_HISTOGRAM_BLUE_SIZE /;"	d
GL_HISTOGRAM_BLUE_SIZE_EXT	./GL/glew.h	/^#define GL_HISTOGRAM_BLUE_SIZE_EXT /;"	d
GL_HISTOGRAM_EXT	./GL/glew.h	/^#define GL_HISTOGRAM_EXT /;"	d
GL_HISTOGRAM_FORMAT	./GL/glew.h	/^#define GL_HISTOGRAM_FORMAT /;"	d
GL_HISTOGRAM_FORMAT_EXT	./GL/glew.h	/^#define GL_HISTOGRAM_FORMAT_EXT /;"	d
GL_HISTOGRAM_GREEN_SIZE	./GL/glew.h	/^#define GL_HISTOGRAM_GREEN_SIZE /;"	d
GL_HISTOGRAM_GREEN_SIZE_EXT	./GL/glew.h	/^#define GL_HISTOGRAM_GREEN_SIZE_EXT /;"	d
GL_HISTOGRAM_LUMINANCE_SIZE	./GL/glew.h	/^#define GL_HISTOGRAM_LUMINANCE_SIZE /;"	d
GL_HISTOGRAM_LUMINANCE_SIZE_EXT	./GL/glew.h	/^#define GL_HISTOGRAM_LUMINANCE_SIZE_EXT /;"	d
GL_HISTOGRAM_RED_SIZE	./GL/glew.h	/^#define GL_HISTOGRAM_RED_SIZE /;"	d
GL_HISTOGRAM_RED_SIZE_EXT	./GL/glew.h	/^#define GL_HISTOGRAM_RED_SIZE_EXT /;"	d
GL_HISTOGRAM_SINK	./GL/glew.h	/^#define GL_HISTOGRAM_SINK /;"	d
GL_HISTOGRAM_SINK_EXT	./GL/glew.h	/^#define GL_HISTOGRAM_SINK_EXT /;"	d
GL_HISTOGRAM_WIDTH	./GL/glew.h	/^#define GL_HISTOGRAM_WIDTH /;"	d
GL_HISTOGRAM_WIDTH_EXT	./GL/glew.h	/^#define GL_HISTOGRAM_WIDTH_EXT /;"	d
GL_HI_BIAS_NV	./GL/glew.h	/^#define GL_HI_BIAS_NV /;"	d
GL_HI_SCALE_NV	./GL/glew.h	/^#define GL_HI_SCALE_NV /;"	d
GL_HORIZONTAL_LINE_TO_NV	./GL/glew.h	/^#define GL_HORIZONTAL_LINE_TO_NV /;"	d
GL_HP_convolution_border_modes	./GL/glew.h	/^#define GL_HP_convolution_border_modes /;"	d
GL_HP_image_transform	./GL/glew.h	/^#define GL_HP_image_transform /;"	d
GL_HP_occlusion_test	./GL/glew.h	/^#define GL_HP_occlusion_test /;"	d
GL_HP_texture_lighting	./GL/glew.h	/^#define GL_HP_texture_lighting /;"	d
GL_HSL_COLOR_KHR	./GL/glew.h	/^#define GL_HSL_COLOR_KHR /;"	d
GL_HSL_COLOR_NV	./GL/glew.h	/^#define GL_HSL_COLOR_NV /;"	d
GL_HSL_HUE_KHR	./GL/glew.h	/^#define GL_HSL_HUE_KHR /;"	d
GL_HSL_HUE_NV	./GL/glew.h	/^#define GL_HSL_HUE_NV /;"	d
GL_HSL_LUMINOSITY_KHR	./GL/glew.h	/^#define GL_HSL_LUMINOSITY_KHR /;"	d
GL_HSL_LUMINOSITY_NV	./GL/glew.h	/^#define GL_HSL_LUMINOSITY_NV /;"	d
GL_HSL_SATURATION_KHR	./GL/glew.h	/^#define GL_HSL_SATURATION_KHR /;"	d
GL_HSL_SATURATION_NV	./GL/glew.h	/^#define GL_HSL_SATURATION_NV /;"	d
GL_IBM_cull_vertex	./GL/glew.h	/^#define GL_IBM_cull_vertex /;"	d
GL_IBM_multimode_draw_arrays	./GL/glew.h	/^#define GL_IBM_multimode_draw_arrays /;"	d
GL_IBM_rasterpos_clip	./GL/glew.h	/^#define GL_IBM_rasterpos_clip /;"	d
GL_IBM_static_data	./GL/glew.h	/^#define GL_IBM_static_data /;"	d
GL_IBM_texture_mirrored_repeat	./GL/glew.h	/^#define GL_IBM_texture_mirrored_repeat /;"	d
GL_IBM_vertex_array_lists	./GL/glew.h	/^#define GL_IBM_vertex_array_lists /;"	d
GL_IDENTITY_NV	./GL/glew.h	/^#define GL_IDENTITY_NV /;"	d
GL_IGLOO_COLORNORMAL_SGIX	./GL/glew.h	/^#define GL_IGLOO_COLORNORMAL_SGIX /;"	d
GL_IGLOO_FULLSCREEN_SGIX	./GL/glew.h	/^#define GL_IGLOO_FULLSCREEN_SGIX /;"	d
GL_IGLOO_IRISGL_MODE_SGIX	./GL/glew.h	/^#define GL_IGLOO_IRISGL_MODE_SGIX /;"	d
GL_IGLOO_LMC_COLOR_SGIX	./GL/glew.h	/^#define GL_IGLOO_LMC_COLOR_SGIX /;"	d
GL_IGLOO_SWAPTMESH_SGIX	./GL/glew.h	/^#define GL_IGLOO_SWAPTMESH_SGIX /;"	d
GL_IGLOO_TMESHMODE_SGIX	./GL/glew.h	/^#define GL_IGLOO_TMESHMODE_SGIX /;"	d
GL_IGLOO_VIEWPORT_OFFSET_SGIX	./GL/glew.h	/^#define GL_IGLOO_VIEWPORT_OFFSET_SGIX /;"	d
GL_IGNORE_BORDER	./GL/glew.h	/^#define GL_IGNORE_BORDER /;"	d
GL_IMAGE_1D	./GL/glew.h	/^#define GL_IMAGE_1D /;"	d
GL_IMAGE_1D_ARRAY	./GL/glew.h	/^#define GL_IMAGE_1D_ARRAY /;"	d
GL_IMAGE_1D_ARRAY_EXT	./GL/glew.h	/^#define GL_IMAGE_1D_ARRAY_EXT /;"	d
GL_IMAGE_1D_EXT	./GL/glew.h	/^#define GL_IMAGE_1D_EXT /;"	d
GL_IMAGE_2D	./GL/glew.h	/^#define GL_IMAGE_2D /;"	d
GL_IMAGE_2D_ARRAY	./GL/glew.h	/^#define GL_IMAGE_2D_ARRAY /;"	d
GL_IMAGE_2D_ARRAY_EXT	./GL/glew.h	/^#define GL_IMAGE_2D_ARRAY_EXT /;"	d
GL_IMAGE_2D_EXT	./GL/glew.h	/^#define GL_IMAGE_2D_EXT /;"	d
GL_IMAGE_2D_MULTISAMPLE	./GL/glew.h	/^#define GL_IMAGE_2D_MULTISAMPLE /;"	d
GL_IMAGE_2D_MULTISAMPLE_ARRAY	./GL/glew.h	/^#define GL_IMAGE_2D_MULTISAMPLE_ARRAY /;"	d
GL_IMAGE_2D_MULTISAMPLE_ARRAY_EXT	./GL/glew.h	/^#define GL_IMAGE_2D_MULTISAMPLE_ARRAY_EXT /;"	d
GL_IMAGE_2D_MULTISAMPLE_EXT	./GL/glew.h	/^#define GL_IMAGE_2D_MULTISAMPLE_EXT /;"	d
GL_IMAGE_2D_RECT	./GL/glew.h	/^#define GL_IMAGE_2D_RECT /;"	d
GL_IMAGE_2D_RECT_EXT	./GL/glew.h	/^#define GL_IMAGE_2D_RECT_EXT /;"	d
GL_IMAGE_3D	./GL/glew.h	/^#define GL_IMAGE_3D /;"	d
GL_IMAGE_3D_EXT	./GL/glew.h	/^#define GL_IMAGE_3D_EXT /;"	d
GL_IMAGE_BINDING_ACCESS	./GL/glew.h	/^#define GL_IMAGE_BINDING_ACCESS /;"	d
GL_IMAGE_BINDING_ACCESS_EXT	./GL/glew.h	/^#define GL_IMAGE_BINDING_ACCESS_EXT /;"	d
GL_IMAGE_BINDING_FORMAT	./GL/glew.h	/^#define GL_IMAGE_BINDING_FORMAT /;"	d
GL_IMAGE_BINDING_FORMAT_EXT	./GL/glew.h	/^#define GL_IMAGE_BINDING_FORMAT_EXT /;"	d
GL_IMAGE_BINDING_LAYER	./GL/glew.h	/^#define GL_IMAGE_BINDING_LAYER /;"	d
GL_IMAGE_BINDING_LAYERED	./GL/glew.h	/^#define GL_IMAGE_BINDING_LAYERED /;"	d
GL_IMAGE_BINDING_LAYERED_EXT	./GL/glew.h	/^#define GL_IMAGE_BINDING_LAYERED_EXT /;"	d
GL_IMAGE_BINDING_LAYER_EXT	./GL/glew.h	/^#define GL_IMAGE_BINDING_LAYER_EXT /;"	d
GL_IMAGE_BINDING_LEVEL	./GL/glew.h	/^#define GL_IMAGE_BINDING_LEVEL /;"	d
GL_IMAGE_BINDING_LEVEL_EXT	./GL/glew.h	/^#define GL_IMAGE_BINDING_LEVEL_EXT /;"	d
GL_IMAGE_BINDING_NAME	./GL/glew.h	/^#define GL_IMAGE_BINDING_NAME /;"	d
GL_IMAGE_BINDING_NAME_EXT	./GL/glew.h	/^#define GL_IMAGE_BINDING_NAME_EXT /;"	d
GL_IMAGE_BIT	./GL/glew.h	/^#define GL_IMAGE_BIT /;"	d
GL_IMAGE_BUFFER	./GL/glew.h	/^#define GL_IMAGE_BUFFER /;"	d
GL_IMAGE_BUFFER_EXT	./GL/glew.h	/^#define GL_IMAGE_BUFFER_EXT /;"	d
GL_IMAGE_BUFFER_OES	./GL/glew.h	/^#define GL_IMAGE_BUFFER_OES /;"	d
GL_IMAGE_CLASS_10_10_10_2	./GL/glew.h	/^#define GL_IMAGE_CLASS_10_10_10_2 /;"	d
GL_IMAGE_CLASS_11_11_10	./GL/glew.h	/^#define GL_IMAGE_CLASS_11_11_10 /;"	d
GL_IMAGE_CLASS_1_X_16	./GL/glew.h	/^#define GL_IMAGE_CLASS_1_X_16 /;"	d
GL_IMAGE_CLASS_1_X_32	./GL/glew.h	/^#define GL_IMAGE_CLASS_1_X_32 /;"	d
GL_IMAGE_CLASS_1_X_8	./GL/glew.h	/^#define GL_IMAGE_CLASS_1_X_8 /;"	d
GL_IMAGE_CLASS_2_X_16	./GL/glew.h	/^#define GL_IMAGE_CLASS_2_X_16 /;"	d
GL_IMAGE_CLASS_2_X_32	./GL/glew.h	/^#define GL_IMAGE_CLASS_2_X_32 /;"	d
GL_IMAGE_CLASS_2_X_8	./GL/glew.h	/^#define GL_IMAGE_CLASS_2_X_8 /;"	d
GL_IMAGE_CLASS_4_X_16	./GL/glew.h	/^#define GL_IMAGE_CLASS_4_X_16 /;"	d
GL_IMAGE_CLASS_4_X_32	./GL/glew.h	/^#define GL_IMAGE_CLASS_4_X_32 /;"	d
GL_IMAGE_CLASS_4_X_8	./GL/glew.h	/^#define GL_IMAGE_CLASS_4_X_8 /;"	d
GL_IMAGE_COMPATIBILITY_CLASS	./GL/glew.h	/^#define GL_IMAGE_COMPATIBILITY_CLASS /;"	d
GL_IMAGE_CUBE	./GL/glew.h	/^#define GL_IMAGE_CUBE /;"	d
GL_IMAGE_CUBE_EXT	./GL/glew.h	/^#define GL_IMAGE_CUBE_EXT /;"	d
GL_IMAGE_CUBE_MAP_ARRAY	./GL/glew.h	/^#define GL_IMAGE_CUBE_MAP_ARRAY /;"	d
GL_IMAGE_CUBE_MAP_ARRAY_EXT	./GL/glew.h	/^#define GL_IMAGE_CUBE_MAP_ARRAY_EXT /;"	d
GL_IMAGE_CUBE_MAP_ARRAY_OES	./GL/glew.h	/^#define GL_IMAGE_CUBE_MAP_ARRAY_OES /;"	d
GL_IMAGE_FORMAT_COMPATIBILITY_BY_CLASS	./GL/glew.h	/^#define GL_IMAGE_FORMAT_COMPATIBILITY_BY_CLASS /;"	d
GL_IMAGE_FORMAT_COMPATIBILITY_BY_SIZE	./GL/glew.h	/^#define GL_IMAGE_FORMAT_COMPATIBILITY_BY_SIZE /;"	d
GL_IMAGE_FORMAT_COMPATIBILITY_TYPE	./GL/glew.h	/^#define GL_IMAGE_FORMAT_COMPATIBILITY_TYPE /;"	d
GL_IMAGE_PIXEL_FORMAT	./GL/glew.h	/^#define GL_IMAGE_PIXEL_FORMAT /;"	d
GL_IMAGE_PIXEL_TYPE	./GL/glew.h	/^#define GL_IMAGE_PIXEL_TYPE /;"	d
GL_IMAGE_TEXEL_SIZE	./GL/glew.h	/^#define GL_IMAGE_TEXEL_SIZE /;"	d
GL_IMG_bindless_texture	./GL/glew.h	/^#define GL_IMG_bindless_texture /;"	d
GL_IMG_framebuffer_downsample	./GL/glew.h	/^#define GL_IMG_framebuffer_downsample /;"	d
GL_IMG_multisampled_render_to_texture	./GL/glew.h	/^#define GL_IMG_multisampled_render_to_texture /;"	d
GL_IMG_program_binary	./GL/glew.h	/^#define GL_IMG_program_binary /;"	d
GL_IMG_read_format	./GL/glew.h	/^#define GL_IMG_read_format /;"	d
GL_IMG_shader_binary	./GL/glew.h	/^#define GL_IMG_shader_binary /;"	d
GL_IMG_texture_compression_pvrtc	./GL/glew.h	/^#define GL_IMG_texture_compression_pvrtc /;"	d
GL_IMG_texture_compression_pvrtc2	./GL/glew.h	/^#define GL_IMG_texture_compression_pvrtc2 /;"	d
GL_IMG_texture_env_enhanced_fixed_function	./GL/glew.h	/^#define GL_IMG_texture_env_enhanced_fixed_function /;"	d
GL_IMG_texture_filter_cubic	./GL/glew.h	/^#define GL_IMG_texture_filter_cubic /;"	d
GL_IMPLEMENTATION_COLOR_READ_FORMAT	./GL/glew.h	/^#define GL_IMPLEMENTATION_COLOR_READ_FORMAT /;"	d
GL_IMPLEMENTATION_COLOR_READ_FORMAT_OES	./GL/glew.h	/^#define GL_IMPLEMENTATION_COLOR_READ_FORMAT_OES /;"	d
GL_IMPLEMENTATION_COLOR_READ_TYPE	./GL/glew.h	/^#define GL_IMPLEMENTATION_COLOR_READ_TYPE /;"	d
GL_IMPLEMENTATION_COLOR_READ_TYPE_OES	./GL/glew.h	/^#define GL_IMPLEMENTATION_COLOR_READ_TYPE_OES /;"	d
GL_INCLUSIVE_EXT	./GL/glew.h	/^#define GL_INCLUSIVE_EXT /;"	d
GL_INCR	./GL/glew.h	/^#define GL_INCR /;"	d
GL_INCR_WRAP	./GL/glew.h	/^#define GL_INCR_WRAP /;"	d
GL_INCR_WRAP_EXT	./GL/glew.h	/^#define GL_INCR_WRAP_EXT /;"	d
GL_INDEX	./GL/glew.h	/^#define GL_INDEX /;"	d
GL_INDEX_ARRAY	./GL/glew.h	/^#define GL_INDEX_ARRAY /;"	d
GL_INDEX_ARRAY_ADDRESS_NV	./GL/glew.h	/^#define GL_INDEX_ARRAY_ADDRESS_NV /;"	d
GL_INDEX_ARRAY_BUFFER_BINDING	./GL/glew.h	/^#define GL_INDEX_ARRAY_BUFFER_BINDING /;"	d
GL_INDEX_ARRAY_BUFFER_BINDING_ARB	./GL/glew.h	/^#define GL_INDEX_ARRAY_BUFFER_BINDING_ARB /;"	d
GL_INDEX_ARRAY_COUNT_EXT	./GL/glew.h	/^#define GL_INDEX_ARRAY_COUNT_EXT /;"	d
GL_INDEX_ARRAY_EXT	./GL/glew.h	/^#define GL_INDEX_ARRAY_EXT /;"	d
GL_INDEX_ARRAY_LENGTH_NV	./GL/glew.h	/^#define GL_INDEX_ARRAY_LENGTH_NV /;"	d
GL_INDEX_ARRAY_LIST_IBM	./GL/glew.h	/^#define GL_INDEX_ARRAY_LIST_IBM /;"	d
GL_INDEX_ARRAY_LIST_STRIDE_IBM	./GL/glew.h	/^#define GL_INDEX_ARRAY_LIST_STRIDE_IBM /;"	d
GL_INDEX_ARRAY_POINTER	./GL/glew.h	/^#define GL_INDEX_ARRAY_POINTER /;"	d
GL_INDEX_ARRAY_POINTER_EXT	./GL/glew.h	/^#define GL_INDEX_ARRAY_POINTER_EXT /;"	d
GL_INDEX_ARRAY_STRIDE	./GL/glew.h	/^#define GL_INDEX_ARRAY_STRIDE /;"	d
GL_INDEX_ARRAY_STRIDE_EXT	./GL/glew.h	/^#define GL_INDEX_ARRAY_STRIDE_EXT /;"	d
GL_INDEX_ARRAY_TYPE	./GL/glew.h	/^#define GL_INDEX_ARRAY_TYPE /;"	d
GL_INDEX_ARRAY_TYPE_EXT	./GL/glew.h	/^#define GL_INDEX_ARRAY_TYPE_EXT /;"	d
GL_INDEX_BITS	./GL/glew.h	/^#define GL_INDEX_BITS /;"	d
GL_INDEX_BIT_PGI	./GL/glew.h	/^#define GL_INDEX_BIT_PGI /;"	d
GL_INDEX_CLEAR_VALUE	./GL/glew.h	/^#define GL_INDEX_CLEAR_VALUE /;"	d
GL_INDEX_LOGIC_OP	./GL/glew.h	/^#define GL_INDEX_LOGIC_OP /;"	d
GL_INDEX_MODE	./GL/glew.h	/^#define GL_INDEX_MODE /;"	d
GL_INDEX_OFFSET	./GL/glew.h	/^#define GL_INDEX_OFFSET /;"	d
GL_INDEX_SHIFT	./GL/glew.h	/^#define GL_INDEX_SHIFT /;"	d
GL_INDEX_WRITEMASK	./GL/glew.h	/^#define GL_INDEX_WRITEMASK /;"	d
GL_INFO_LOG_LENGTH	./GL/glew.h	/^#define GL_INFO_LOG_LENGTH /;"	d
GL_INGR_color_clamp	./GL/glew.h	/^#define GL_INGR_color_clamp /;"	d
GL_INGR_interlace_read	./GL/glew.h	/^#define GL_INGR_interlace_read /;"	d
GL_INNOCENT_CONTEXT_RESET	./GL/glew.h	/^#define GL_INNOCENT_CONTEXT_RESET /;"	d
GL_INNOCENT_CONTEXT_RESET_ARB	./GL/glew.h	/^#define GL_INNOCENT_CONTEXT_RESET_ARB /;"	d
GL_INNOCENT_CONTEXT_RESET_EXT	./GL/glew.h	/^#define GL_INNOCENT_CONTEXT_RESET_EXT /;"	d
GL_INT	./GL/glew.h	/^#define GL_INT /;"	d
GL_INT16_NV	./GL/glew.h	/^#define GL_INT16_NV /;"	d
GL_INT16_VEC2_NV	./GL/glew.h	/^#define GL_INT16_VEC2_NV /;"	d
GL_INT16_VEC3_NV	./GL/glew.h	/^#define GL_INT16_VEC3_NV /;"	d
GL_INT16_VEC4_NV	./GL/glew.h	/^#define GL_INT16_VEC4_NV /;"	d
GL_INT64_ARB	./GL/glew.h	/^#define GL_INT64_ARB /;"	d
GL_INT64_NV	./GL/glew.h	/^#define GL_INT64_NV /;"	d
GL_INT64_VEC2_ARB	./GL/glew.h	/^#define GL_INT64_VEC2_ARB /;"	d
GL_INT64_VEC2_NV	./GL/glew.h	/^#define GL_INT64_VEC2_NV /;"	d
GL_INT64_VEC3_ARB	./GL/glew.h	/^#define GL_INT64_VEC3_ARB /;"	d
GL_INT64_VEC3_NV	./GL/glew.h	/^#define GL_INT64_VEC3_NV /;"	d
GL_INT64_VEC4_ARB	./GL/glew.h	/^#define GL_INT64_VEC4_ARB /;"	d
GL_INT64_VEC4_NV	./GL/glew.h	/^#define GL_INT64_VEC4_NV /;"	d
GL_INT8_NV	./GL/glew.h	/^#define GL_INT8_NV /;"	d
GL_INT8_VEC2_NV	./GL/glew.h	/^#define GL_INT8_VEC2_NV /;"	d
GL_INT8_VEC3_NV	./GL/glew.h	/^#define GL_INT8_VEC3_NV /;"	d
GL_INT8_VEC4_NV	./GL/glew.h	/^#define GL_INT8_VEC4_NV /;"	d
GL_INTEL_blackhole_render	./GL/glew.h	/^#define GL_INTEL_blackhole_render /;"	d
GL_INTEL_conservative_rasterization	./GL/glew.h	/^#define GL_INTEL_conservative_rasterization /;"	d
GL_INTEL_fragment_shader_ordering	./GL/glew.h	/^#define GL_INTEL_fragment_shader_ordering /;"	d
GL_INTEL_framebuffer_CMAA	./GL/glew.h	/^#define GL_INTEL_framebuffer_CMAA /;"	d
GL_INTEL_map_texture	./GL/glew.h	/^#define GL_INTEL_map_texture /;"	d
GL_INTEL_parallel_arrays	./GL/glew.h	/^#define GL_INTEL_parallel_arrays /;"	d
GL_INTEL_performance_query	./GL/glew.h	/^#define GL_INTEL_performance_query /;"	d
GL_INTEL_shader_integer_functions2	./GL/glew.h	/^#define GL_INTEL_shader_integer_functions2 /;"	d
GL_INTEL_texture_scissor	./GL/glew.h	/^#define GL_INTEL_texture_scissor /;"	d
GL_INTENSITY	./GL/glew.h	/^#define GL_INTENSITY /;"	d
GL_INTENSITY12	./GL/glew.h	/^#define GL_INTENSITY12 /;"	d
GL_INTENSITY12_EXT	./GL/glew.h	/^#define GL_INTENSITY12_EXT /;"	d
GL_INTENSITY16	./GL/glew.h	/^#define GL_INTENSITY16 /;"	d
GL_INTENSITY16F_ARB	./GL/glew.h	/^#define GL_INTENSITY16F_ARB /;"	d
GL_INTENSITY16I_EXT	./GL/glew.h	/^#define GL_INTENSITY16I_EXT /;"	d
GL_INTENSITY16UI_EXT	./GL/glew.h	/^#define GL_INTENSITY16UI_EXT /;"	d
GL_INTENSITY16_EXT	./GL/glew.h	/^#define GL_INTENSITY16_EXT /;"	d
GL_INTENSITY16_EXTENDED_RANGE_SGIX	./GL/glew.h	/^#define GL_INTENSITY16_EXTENDED_RANGE_SGIX /;"	d
GL_INTENSITY16_ICC_SGIX	./GL/glew.h	/^#define GL_INTENSITY16_ICC_SGIX /;"	d
GL_INTENSITY16_SIGNED_SGIX	./GL/glew.h	/^#define GL_INTENSITY16_SIGNED_SGIX /;"	d
GL_INTENSITY16_SNORM	./GL/glew.h	/^#define GL_INTENSITY16_SNORM /;"	d
GL_INTENSITY32F_ARB	./GL/glew.h	/^#define GL_INTENSITY32F_ARB /;"	d
GL_INTENSITY32I_EXT	./GL/glew.h	/^#define GL_INTENSITY32I_EXT /;"	d
GL_INTENSITY32UI_EXT	./GL/glew.h	/^#define GL_INTENSITY32UI_EXT /;"	d
GL_INTENSITY4	./GL/glew.h	/^#define GL_INTENSITY4 /;"	d
GL_INTENSITY4_EXT	./GL/glew.h	/^#define GL_INTENSITY4_EXT /;"	d
GL_INTENSITY8	./GL/glew.h	/^#define GL_INTENSITY8 /;"	d
GL_INTENSITY8I_EXT	./GL/glew.h	/^#define GL_INTENSITY8I_EXT /;"	d
GL_INTENSITY8UI_EXT	./GL/glew.h	/^#define GL_INTENSITY8UI_EXT /;"	d
GL_INTENSITY8_EXT	./GL/glew.h	/^#define GL_INTENSITY8_EXT /;"	d
GL_INTENSITY8_SNORM	./GL/glew.h	/^#define GL_INTENSITY8_SNORM /;"	d
GL_INTENSITY_EXT	./GL/glew.h	/^#define GL_INTENSITY_EXT /;"	d
GL_INTENSITY_EXTENDED_RANGE_SGIX	./GL/glew.h	/^#define GL_INTENSITY_EXTENDED_RANGE_SGIX /;"	d
GL_INTENSITY_FLOAT16_APPLE	./GL/glew.h	/^#define GL_INTENSITY_FLOAT16_APPLE /;"	d
GL_INTENSITY_FLOAT16_ATI	./GL/glew.h	/^#define GL_INTENSITY_FLOAT16_ATI /;"	d
GL_INTENSITY_FLOAT32_APPLE	./GL/glew.h	/^#define GL_INTENSITY_FLOAT32_APPLE /;"	d
GL_INTENSITY_FLOAT32_ATI	./GL/glew.h	/^#define GL_INTENSITY_FLOAT32_ATI /;"	d
GL_INTENSITY_ICC_SGIX	./GL/glew.h	/^#define GL_INTENSITY_ICC_SGIX /;"	d
GL_INTENSITY_SIGNED_SGIX	./GL/glew.h	/^#define GL_INTENSITY_SIGNED_SGIX /;"	d
GL_INTENSITY_SNORM	./GL/glew.h	/^#define GL_INTENSITY_SNORM /;"	d
GL_INTERLACE_OML	./GL/glew.h	/^#define GL_INTERLACE_OML /;"	d
GL_INTERLACE_READ_INGR	./GL/glew.h	/^#define GL_INTERLACE_READ_INGR /;"	d
GL_INTERLACE_READ_OML	./GL/glew.h	/^#define GL_INTERLACE_READ_OML /;"	d
GL_INTERLACE_SGIX	./GL/glew.h	/^#define GL_INTERLACE_SGIX /;"	d
GL_INTERLEAVED_ATTRIBS	./GL/glew.h	/^#define GL_INTERLEAVED_ATTRIBS /;"	d
GL_INTERLEAVED_ATTRIBS_EXT	./GL/glew.h	/^#define GL_INTERLEAVED_ATTRIBS_EXT /;"	d
GL_INTERLEAVED_ATTRIBS_NV	./GL/glew.h	/^#define GL_INTERLEAVED_ATTRIBS_NV /;"	d
GL_INTERNALFORMAT_ALPHA_SIZE	./GL/glew.h	/^#define GL_INTERNALFORMAT_ALPHA_SIZE /;"	d
GL_INTERNALFORMAT_ALPHA_TYPE	./GL/glew.h	/^#define GL_INTERNALFORMAT_ALPHA_TYPE /;"	d
GL_INTERNALFORMAT_BLUE_SIZE	./GL/glew.h	/^#define GL_INTERNALFORMAT_BLUE_SIZE /;"	d
GL_INTERNALFORMAT_BLUE_TYPE	./GL/glew.h	/^#define GL_INTERNALFORMAT_BLUE_TYPE /;"	d
GL_INTERNALFORMAT_DEPTH_SIZE	./GL/glew.h	/^#define GL_INTERNALFORMAT_DEPTH_SIZE /;"	d
GL_INTERNALFORMAT_DEPTH_TYPE	./GL/glew.h	/^#define GL_INTERNALFORMAT_DEPTH_TYPE /;"	d
GL_INTERNALFORMAT_GREEN_SIZE	./GL/glew.h	/^#define GL_INTERNALFORMAT_GREEN_SIZE /;"	d
GL_INTERNALFORMAT_GREEN_TYPE	./GL/glew.h	/^#define GL_INTERNALFORMAT_GREEN_TYPE /;"	d
GL_INTERNALFORMAT_PREFERRED	./GL/glew.h	/^#define GL_INTERNALFORMAT_PREFERRED /;"	d
GL_INTERNALFORMAT_RED_SIZE	./GL/glew.h	/^#define GL_INTERNALFORMAT_RED_SIZE /;"	d
GL_INTERNALFORMAT_RED_TYPE	./GL/glew.h	/^#define GL_INTERNALFORMAT_RED_TYPE /;"	d
GL_INTERNALFORMAT_SHARED_SIZE	./GL/glew.h	/^#define GL_INTERNALFORMAT_SHARED_SIZE /;"	d
GL_INTERNALFORMAT_STENCIL_SIZE	./GL/glew.h	/^#define GL_INTERNALFORMAT_STENCIL_SIZE /;"	d
GL_INTERNALFORMAT_STENCIL_TYPE	./GL/glew.h	/^#define GL_INTERNALFORMAT_STENCIL_TYPE /;"	d
GL_INTERNALFORMAT_SUPPORTED	./GL/glew.h	/^#define GL_INTERNALFORMAT_SUPPORTED /;"	d
GL_INTERPOLATE	./GL/glew.h	/^#define GL_INTERPOLATE /;"	d
GL_INTERPOLATE_ARB	./GL/glew.h	/^#define GL_INTERPOLATE_ARB /;"	d
GL_INTERPOLATE_EXT	./GL/glew.h	/^#define GL_INTERPOLATE_EXT /;"	d
GL_INT_10_10_10_2_OES	./GL/glew.h	/^#define GL_INT_10_10_10_2_OES /;"	d
GL_INT_2_10_10_10_REV	./GL/glew.h	/^#define GL_INT_2_10_10_10_REV /;"	d
GL_INT_IMAGE_1D	./GL/glew.h	/^#define GL_INT_IMAGE_1D /;"	d
GL_INT_IMAGE_1D_ARRAY	./GL/glew.h	/^#define GL_INT_IMAGE_1D_ARRAY /;"	d
GL_INT_IMAGE_1D_ARRAY_EXT	./GL/glew.h	/^#define GL_INT_IMAGE_1D_ARRAY_EXT /;"	d
GL_INT_IMAGE_1D_EXT	./GL/glew.h	/^#define GL_INT_IMAGE_1D_EXT /;"	d
GL_INT_IMAGE_2D	./GL/glew.h	/^#define GL_INT_IMAGE_2D /;"	d
GL_INT_IMAGE_2D_ARRAY	./GL/glew.h	/^#define GL_INT_IMAGE_2D_ARRAY /;"	d
GL_INT_IMAGE_2D_ARRAY_EXT	./GL/glew.h	/^#define GL_INT_IMAGE_2D_ARRAY_EXT /;"	d
GL_INT_IMAGE_2D_EXT	./GL/glew.h	/^#define GL_INT_IMAGE_2D_EXT /;"	d
GL_INT_IMAGE_2D_MULTISAMPLE	./GL/glew.h	/^#define GL_INT_IMAGE_2D_MULTISAMPLE /;"	d
GL_INT_IMAGE_2D_MULTISAMPLE_ARRAY	./GL/glew.h	/^#define GL_INT_IMAGE_2D_MULTISAMPLE_ARRAY /;"	d
GL_INT_IMAGE_2D_MULTISAMPLE_ARRAY_EXT	./GL/glew.h	/^#define GL_INT_IMAGE_2D_MULTISAMPLE_ARRAY_EXT /;"	d
GL_INT_IMAGE_2D_MULTISAMPLE_EXT	./GL/glew.h	/^#define GL_INT_IMAGE_2D_MULTISAMPLE_EXT /;"	d
GL_INT_IMAGE_2D_RECT	./GL/glew.h	/^#define GL_INT_IMAGE_2D_RECT /;"	d
GL_INT_IMAGE_2D_RECT_EXT	./GL/glew.h	/^#define GL_INT_IMAGE_2D_RECT_EXT /;"	d
GL_INT_IMAGE_3D	./GL/glew.h	/^#define GL_INT_IMAGE_3D /;"	d
GL_INT_IMAGE_3D_EXT	./GL/glew.h	/^#define GL_INT_IMAGE_3D_EXT /;"	d
GL_INT_IMAGE_BUFFER	./GL/glew.h	/^#define GL_INT_IMAGE_BUFFER /;"	d
GL_INT_IMAGE_BUFFER_EXT	./GL/glew.h	/^#define GL_INT_IMAGE_BUFFER_EXT /;"	d
GL_INT_IMAGE_BUFFER_OES	./GL/glew.h	/^#define GL_INT_IMAGE_BUFFER_OES /;"	d
GL_INT_IMAGE_CUBE	./GL/glew.h	/^#define GL_INT_IMAGE_CUBE /;"	d
GL_INT_IMAGE_CUBE_EXT	./GL/glew.h	/^#define GL_INT_IMAGE_CUBE_EXT /;"	d
GL_INT_IMAGE_CUBE_MAP_ARRAY	./GL/glew.h	/^#define GL_INT_IMAGE_CUBE_MAP_ARRAY /;"	d
GL_INT_IMAGE_CUBE_MAP_ARRAY_EXT	./GL/glew.h	/^#define GL_INT_IMAGE_CUBE_MAP_ARRAY_EXT /;"	d
GL_INT_IMAGE_CUBE_MAP_ARRAY_OES	./GL/glew.h	/^#define GL_INT_IMAGE_CUBE_MAP_ARRAY_OES /;"	d
GL_INT_SAMPLER_1D	./GL/glew.h	/^#define GL_INT_SAMPLER_1D /;"	d
GL_INT_SAMPLER_1D_ARRAY	./GL/glew.h	/^#define GL_INT_SAMPLER_1D_ARRAY /;"	d
GL_INT_SAMPLER_1D_ARRAY_EXT	./GL/glew.h	/^#define GL_INT_SAMPLER_1D_ARRAY_EXT /;"	d
GL_INT_SAMPLER_1D_EXT	./GL/glew.h	/^#define GL_INT_SAMPLER_1D_EXT /;"	d
GL_INT_SAMPLER_2D	./GL/glew.h	/^#define GL_INT_SAMPLER_2D /;"	d
GL_INT_SAMPLER_2D_ARRAY	./GL/glew.h	/^#define GL_INT_SAMPLER_2D_ARRAY /;"	d
GL_INT_SAMPLER_2D_ARRAY_EXT	./GL/glew.h	/^#define GL_INT_SAMPLER_2D_ARRAY_EXT /;"	d
GL_INT_SAMPLER_2D_EXT	./GL/glew.h	/^#define GL_INT_SAMPLER_2D_EXT /;"	d
GL_INT_SAMPLER_2D_MULTISAMPLE	./GL/glew.h	/^#define GL_INT_SAMPLER_2D_MULTISAMPLE /;"	d
GL_INT_SAMPLER_2D_MULTISAMPLE_ARRAY	./GL/glew.h	/^#define GL_INT_SAMPLER_2D_MULTISAMPLE_ARRAY /;"	d
GL_INT_SAMPLER_2D_MULTISAMPLE_ARRAY_OES	./GL/glew.h	/^#define GL_INT_SAMPLER_2D_MULTISAMPLE_ARRAY_OES /;"	d
GL_INT_SAMPLER_2D_RECT	./GL/glew.h	/^#define GL_INT_SAMPLER_2D_RECT /;"	d
GL_INT_SAMPLER_2D_RECT_EXT	./GL/glew.h	/^#define GL_INT_SAMPLER_2D_RECT_EXT /;"	d
GL_INT_SAMPLER_3D	./GL/glew.h	/^#define GL_INT_SAMPLER_3D /;"	d
GL_INT_SAMPLER_3D_EXT	./GL/glew.h	/^#define GL_INT_SAMPLER_3D_EXT /;"	d
GL_INT_SAMPLER_BUFFER	./GL/glew.h	/^#define GL_INT_SAMPLER_BUFFER /;"	d
GL_INT_SAMPLER_BUFFER_AMD	./GL/glew.h	/^#define GL_INT_SAMPLER_BUFFER_AMD /;"	d
GL_INT_SAMPLER_BUFFER_EXT	./GL/glew.h	/^#define GL_INT_SAMPLER_BUFFER_EXT /;"	d
GL_INT_SAMPLER_BUFFER_OES	./GL/glew.h	/^#define GL_INT_SAMPLER_BUFFER_OES /;"	d
GL_INT_SAMPLER_CUBE	./GL/glew.h	/^#define GL_INT_SAMPLER_CUBE /;"	d
GL_INT_SAMPLER_CUBE_EXT	./GL/glew.h	/^#define GL_INT_SAMPLER_CUBE_EXT /;"	d
GL_INT_SAMPLER_CUBE_MAP_ARRAY	./GL/glew.h	/^#define GL_INT_SAMPLER_CUBE_MAP_ARRAY /;"	d
GL_INT_SAMPLER_CUBE_MAP_ARRAY_ARB	./GL/glew.h	/^#define GL_INT_SAMPLER_CUBE_MAP_ARRAY_ARB /;"	d
GL_INT_SAMPLER_CUBE_MAP_ARRAY_EXT	./GL/glew.h	/^#define GL_INT_SAMPLER_CUBE_MAP_ARRAY_EXT /;"	d
GL_INT_SAMPLER_CUBE_MAP_ARRAY_OES	./GL/glew.h	/^#define GL_INT_SAMPLER_CUBE_MAP_ARRAY_OES /;"	d
GL_INT_SAMPLER_RENDERBUFFER_NV	./GL/glew.h	/^#define GL_INT_SAMPLER_RENDERBUFFER_NV /;"	d
GL_INT_VEC2	./GL/glew.h	/^#define GL_INT_VEC2 /;"	d
GL_INT_VEC2_ARB	./GL/glew.h	/^#define GL_INT_VEC2_ARB /;"	d
GL_INT_VEC3	./GL/glew.h	/^#define GL_INT_VEC3 /;"	d
GL_INT_VEC3_ARB	./GL/glew.h	/^#define GL_INT_VEC3_ARB /;"	d
GL_INT_VEC4	./GL/glew.h	/^#define GL_INT_VEC4 /;"	d
GL_INT_VEC4_ARB	./GL/glew.h	/^#define GL_INT_VEC4_ARB /;"	d
GL_INVALID_ENUM	./GL/glew.h	/^#define GL_INVALID_ENUM /;"	d
GL_INVALID_FRAMEBUFFER_OPERATION	./GL/glew.h	/^#define GL_INVALID_FRAMEBUFFER_OPERATION /;"	d
GL_INVALID_FRAMEBUFFER_OPERATION_EXT	./GL/glew.h	/^#define GL_INVALID_FRAMEBUFFER_OPERATION_EXT /;"	d
GL_INVALID_FRAMEBUFFER_OPERATION_OES	./GL/glew.h	/^#define GL_INVALID_FRAMEBUFFER_OPERATION_OES /;"	d
GL_INVALID_INDEX	./GL/glew.h	/^#define GL_INVALID_INDEX /;"	d
GL_INVALID_OPERATION	./GL/glew.h	/^#define GL_INVALID_OPERATION /;"	d
GL_INVALID_VALUE	./GL/glew.h	/^#define GL_INVALID_VALUE /;"	d
GL_INVARIANT_DATATYPE_EXT	./GL/glew.h	/^#define GL_INVARIANT_DATATYPE_EXT /;"	d
GL_INVARIANT_EXT	./GL/glew.h	/^#define GL_INVARIANT_EXT /;"	d
GL_INVARIANT_VALUE_EXT	./GL/glew.h	/^#define GL_INVARIANT_VALUE_EXT /;"	d
GL_INVERSE_NV	./GL/glew.h	/^#define GL_INVERSE_NV /;"	d
GL_INVERSE_TRANSPOSE_NV	./GL/glew.h	/^#define GL_INVERSE_TRANSPOSE_NV /;"	d
GL_INVERT	./GL/glew.h	/^#define GL_INVERT /;"	d
GL_INVERTED_SCREEN_W_REND	./GL/glew.h	/^#define GL_INVERTED_SCREEN_W_REND /;"	d
GL_INVERT_OVG_NV	./GL/glew.h	/^#define GL_INVERT_OVG_NV /;"	d
GL_INVERT_RGB_NV	./GL/glew.h	/^#define GL_INVERT_RGB_NV /;"	d
GL_ISOLINES	./GL/glew.h	/^#define GL_ISOLINES /;"	d
GL_ISOLINES_EXT	./GL/glew.h	/^#define GL_ISOLINES_EXT /;"	d
GL_ISOLINES_OES	./GL/glew.h	/^#define GL_ISOLINES_OES /;"	d
GL_IS_PER_PATCH	./GL/glew.h	/^#define GL_IS_PER_PATCH /;"	d
GL_IS_PER_PATCH_EXT	./GL/glew.h	/^#define GL_IS_PER_PATCH_EXT /;"	d
GL_IS_PER_PATCH_OES	./GL/glew.h	/^#define GL_IS_PER_PATCH_OES /;"	d
GL_IS_ROW_MAJOR	./GL/glew.h	/^#define GL_IS_ROW_MAJOR /;"	d
GL_ITALIC_BIT_NV	./GL/glew.h	/^#define GL_ITALIC_BIT_NV /;"	d
GL_KEEP	./GL/glew.h	/^#define GL_KEEP /;"	d
GL_KHR_blend_equation_advanced	./GL/glew.h	/^#define GL_KHR_blend_equation_advanced /;"	d
GL_KHR_blend_equation_advanced_coherent	./GL/glew.h	/^#define GL_KHR_blend_equation_advanced_coherent /;"	d
GL_KHR_context_flush_control	./GL/glew.h	/^#define GL_KHR_context_flush_control /;"	d
GL_KHR_debug	./GL/glew.h	/^#define GL_KHR_debug /;"	d
GL_KHR_no_error	./GL/glew.h	/^#define GL_KHR_no_error /;"	d
GL_KHR_parallel_shader_compile	./GL/glew.h	/^#define GL_KHR_parallel_shader_compile /;"	d
GL_KHR_robust_buffer_access_behavior	./GL/glew.h	/^#define GL_KHR_robust_buffer_access_behavior /;"	d
GL_KHR_robustness	./GL/glew.h	/^#define GL_KHR_robustness /;"	d
GL_KHR_shader_subgroup	./GL/glew.h	/^#define GL_KHR_shader_subgroup /;"	d
GL_KHR_texture_compression_astc_hdr	./GL/glew.h	/^#define GL_KHR_texture_compression_astc_hdr /;"	d
GL_KHR_texture_compression_astc_ldr	./GL/glew.h	/^#define GL_KHR_texture_compression_astc_ldr /;"	d
GL_KHR_texture_compression_astc_sliced_3d	./GL/glew.h	/^#define GL_KHR_texture_compression_astc_sliced_3d /;"	d
GL_KTX_BACK_REGION	./GL/glew.h	/^#define GL_KTX_BACK_REGION /;"	d
GL_KTX_FRONT_REGION	./GL/glew.h	/^#define GL_KTX_FRONT_REGION /;"	d
GL_KTX_STENCIL_REGION	./GL/glew.h	/^#define GL_KTX_STENCIL_REGION /;"	d
GL_KTX_Z_REGION	./GL/glew.h	/^#define GL_KTX_Z_REGION /;"	d
GL_KTX_buffer_region	./GL/glew.h	/^#define GL_KTX_buffer_region /;"	d
GL_LARGE_CCW_ARC_TO_NV	./GL/glew.h	/^#define GL_LARGE_CCW_ARC_TO_NV /;"	d
GL_LARGE_CW_ARC_TO_NV	./GL/glew.h	/^#define GL_LARGE_CW_ARC_TO_NV /;"	d
GL_LAST_VERTEX_CONVENTION	./GL/glew.h	/^#define GL_LAST_VERTEX_CONVENTION /;"	d
GL_LAST_VERTEX_CONVENTION_EXT	./GL/glew.h	/^#define GL_LAST_VERTEX_CONVENTION_EXT /;"	d
GL_LAST_VERTEX_CONVENTION_OES	./GL/glew.h	/^#define GL_LAST_VERTEX_CONVENTION_OES /;"	d
GL_LAST_VIDEO_CAPTURE_STATUS_NV	./GL/glew.h	/^#define GL_LAST_VIDEO_CAPTURE_STATUS_NV /;"	d
GL_LAYERED_SGIX	./GL/glew.h	/^#define GL_LAYERED_SGIX /;"	d
GL_LAYER_PROVOKING_VERTEX	./GL/glew.h	/^#define GL_LAYER_PROVOKING_VERTEX /;"	d
GL_LAYER_PROVOKING_VERTEX_EXT	./GL/glew.h	/^#define GL_LAYER_PROVOKING_VERTEX_EXT /;"	d
GL_LAYER_PROVOKING_VERTEX_OES	./GL/glew.h	/^#define GL_LAYER_PROVOKING_VERTEX_OES /;"	d
GL_LAYOUT_COLOR_ATTACHMENT_EXT	./GL/glew.h	/^#define GL_LAYOUT_COLOR_ATTACHMENT_EXT /;"	d
GL_LAYOUT_DEFAULT_INTEL	./GL/glew.h	/^#define GL_LAYOUT_DEFAULT_INTEL /;"	d
GL_LAYOUT_DEPTH_ATTACHMENT_STENCIL_READ_ONLY_EXT	./GL/glew.h	/^#define GL_LAYOUT_DEPTH_ATTACHMENT_STENCIL_READ_ONLY_EXT /;"	d
GL_LAYOUT_DEPTH_READ_ONLY_STENCIL_ATTACHMENT_EXT	./GL/glew.h	/^#define GL_LAYOUT_DEPTH_READ_ONLY_STENCIL_ATTACHMENT_EXT /;"	d
GL_LAYOUT_DEPTH_STENCIL_ATTACHMENT_EXT	./GL/glew.h	/^#define GL_LAYOUT_DEPTH_STENCIL_ATTACHMENT_EXT /;"	d
GL_LAYOUT_DEPTH_STENCIL_READ_ONLY_EXT	./GL/glew.h	/^#define GL_LAYOUT_DEPTH_STENCIL_READ_ONLY_EXT /;"	d
GL_LAYOUT_GENERAL_EXT	./GL/glew.h	/^#define GL_LAYOUT_GENERAL_EXT /;"	d
GL_LAYOUT_LINEAR_CPU_CACHED_INTEL	./GL/glew.h	/^#define GL_LAYOUT_LINEAR_CPU_CACHED_INTEL /;"	d
GL_LAYOUT_LINEAR_INTEL	./GL/glew.h	/^#define GL_LAYOUT_LINEAR_INTEL /;"	d
GL_LAYOUT_SHADER_READ_ONLY_EXT	./GL/glew.h	/^#define GL_LAYOUT_SHADER_READ_ONLY_EXT /;"	d
GL_LAYOUT_TRANSFER_DST_EXT	./GL/glew.h	/^#define GL_LAYOUT_TRANSFER_DST_EXT /;"	d
GL_LAYOUT_TRANSFER_SRC_EXT	./GL/glew.h	/^#define GL_LAYOUT_TRANSFER_SRC_EXT /;"	d
GL_LEFT	./GL/glew.h	/^#define GL_LEFT /;"	d
GL_LEQUAL	./GL/glew.h	/^#define GL_LEQUAL /;"	d
GL_LERP_ATI	./GL/glew.h	/^#define GL_LERP_ATI /;"	d
GL_LESS	./GL/glew.h	/^#define GL_LESS /;"	d
GL_LGPU_SEPARATE_STORAGE_BIT_NVX	./GL/glew.h	/^#define GL_LGPU_SEPARATE_STORAGE_BIT_NVX /;"	d
GL_LIGHT0	./GL/glew.h	/^#define GL_LIGHT0 /;"	d
GL_LIGHT1	./GL/glew.h	/^#define GL_LIGHT1 /;"	d
GL_LIGHT2	./GL/glew.h	/^#define GL_LIGHT2 /;"	d
GL_LIGHT3	./GL/glew.h	/^#define GL_LIGHT3 /;"	d
GL_LIGHT31	./GL/glew.h	/^#define GL_LIGHT31 /;"	d
GL_LIGHT4	./GL/glew.h	/^#define GL_LIGHT4 /;"	d
GL_LIGHT5	./GL/glew.h	/^#define GL_LIGHT5 /;"	d
GL_LIGHT6	./GL/glew.h	/^#define GL_LIGHT6 /;"	d
GL_LIGHT7	./GL/glew.h	/^#define GL_LIGHT7 /;"	d
GL_LIGHTEN_KHR	./GL/glew.h	/^#define GL_LIGHTEN_KHR /;"	d
GL_LIGHTEN_NV	./GL/glew.h	/^#define GL_LIGHTEN_NV /;"	d
GL_LIGHTING	./GL/glew.h	/^#define GL_LIGHTING /;"	d
GL_LIGHTING_BIT	./GL/glew.h	/^#define GL_LIGHTING_BIT /;"	d
GL_LIGHT_ENV_MODE_EXT	./GL/glew.h	/^#define GL_LIGHT_ENV_MODE_EXT /;"	d
GL_LIGHT_MODEL_AMBIENT	./GL/glew.h	/^#define GL_LIGHT_MODEL_AMBIENT /;"	d
GL_LIGHT_MODEL_COLOR_CONTROL	./GL/glew.h	/^#define GL_LIGHT_MODEL_COLOR_CONTROL /;"	d
GL_LIGHT_MODEL_COLOR_CONTROL_EXT	./GL/glew.h	/^#define GL_LIGHT_MODEL_COLOR_CONTROL_EXT /;"	d
GL_LIGHT_MODEL_LOCAL_VIEWER	./GL/glew.h	/^#define GL_LIGHT_MODEL_LOCAL_VIEWER /;"	d
GL_LIGHT_MODEL_SPECULAR_VECTOR_APPLE	./GL/glew.h	/^#define GL_LIGHT_MODEL_SPECULAR_VECTOR_APPLE /;"	d
GL_LIGHT_MODEL_TWO_SIDE	./GL/glew.h	/^#define GL_LIGHT_MODEL_TWO_SIDE /;"	d
GL_LINE	./GL/glew.h	/^#define GL_LINE /;"	d
GL_LINEAR	./GL/glew.h	/^#define GL_LINEAR /;"	d
GL_LINEARBURN_NV	./GL/glew.h	/^#define GL_LINEARBURN_NV /;"	d
GL_LINEARDODGE_NV	./GL/glew.h	/^#define GL_LINEARDODGE_NV /;"	d
GL_LINEARLIGHT_NV	./GL/glew.h	/^#define GL_LINEARLIGHT_NV /;"	d
GL_LINEAR_ATTENUATION	./GL/glew.h	/^#define GL_LINEAR_ATTENUATION /;"	d
GL_LINEAR_MIPMAP_LINEAR	./GL/glew.h	/^#define GL_LINEAR_MIPMAP_LINEAR /;"	d
GL_LINEAR_MIPMAP_NEAREST	./GL/glew.h	/^#define GL_LINEAR_MIPMAP_NEAREST /;"	d
GL_LINEAR_TILING_EXT	./GL/glew.h	/^#define GL_LINEAR_TILING_EXT /;"	d
GL_LINES	./GL/glew.h	/^#define GL_LINES /;"	d
GL_LINES_ADJACENCY	./GL/glew.h	/^#define GL_LINES_ADJACENCY /;"	d
GL_LINES_ADJACENCY_ARB	./GL/glew.h	/^#define GL_LINES_ADJACENCY_ARB /;"	d
GL_LINES_ADJACENCY_EXT	./GL/glew.h	/^#define GL_LINES_ADJACENCY_EXT /;"	d
GL_LINES_ADJACENCY_OES	./GL/glew.h	/^#define GL_LINES_ADJACENCY_OES /;"	d
GL_LINE_BIT	./GL/glew.h	/^#define GL_LINE_BIT /;"	d
GL_LINE_LOOP	./GL/glew.h	/^#define GL_LINE_LOOP /;"	d
GL_LINE_NV	./GL/glew.h	/^#define GL_LINE_NV /;"	d
GL_LINE_QUALITY_HINT_SGIX	./GL/glew.h	/^#define GL_LINE_QUALITY_HINT_SGIX /;"	d
GL_LINE_RESET_TOKEN	./GL/glew.h	/^#define GL_LINE_RESET_TOKEN /;"	d
GL_LINE_SMOOTH	./GL/glew.h	/^#define GL_LINE_SMOOTH /;"	d
GL_LINE_SMOOTH_HINT	./GL/glew.h	/^#define GL_LINE_SMOOTH_HINT /;"	d
GL_LINE_STIPPLE	./GL/glew.h	/^#define GL_LINE_STIPPLE /;"	d
GL_LINE_STIPPLE_PATTERN	./GL/glew.h	/^#define GL_LINE_STIPPLE_PATTERN /;"	d
GL_LINE_STIPPLE_REPEAT	./GL/glew.h	/^#define GL_LINE_STIPPLE_REPEAT /;"	d
GL_LINE_STRIP	./GL/glew.h	/^#define GL_LINE_STRIP /;"	d
GL_LINE_STRIP_ADJACENCY	./GL/glew.h	/^#define GL_LINE_STRIP_ADJACENCY /;"	d
GL_LINE_STRIP_ADJACENCY_ARB	./GL/glew.h	/^#define GL_LINE_STRIP_ADJACENCY_ARB /;"	d
GL_LINE_STRIP_ADJACENCY_EXT	./GL/glew.h	/^#define GL_LINE_STRIP_ADJACENCY_EXT /;"	d
GL_LINE_STRIP_ADJACENCY_OES	./GL/glew.h	/^#define GL_LINE_STRIP_ADJACENCY_OES /;"	d
GL_LINE_TOKEN	./GL/glew.h	/^#define GL_LINE_TOKEN /;"	d
GL_LINE_TO_NV	./GL/glew.h	/^#define GL_LINE_TO_NV /;"	d
GL_LINE_WIDTH	./GL/glew.h	/^#define GL_LINE_WIDTH /;"	d
GL_LINE_WIDTH_COMMAND_NV	./GL/glew.h	/^#define GL_LINE_WIDTH_COMMAND_NV /;"	d
GL_LINE_WIDTH_GRANULARITY	./GL/glew.h	/^#define GL_LINE_WIDTH_GRANULARITY /;"	d
GL_LINE_WIDTH_RANGE	./GL/glew.h	/^#define GL_LINE_WIDTH_RANGE /;"	d
GL_LINK_STATUS	./GL/glew.h	/^#define GL_LINK_STATUS /;"	d
GL_LIST_BASE	./GL/glew.h	/^#define GL_LIST_BASE /;"	d
GL_LIST_BIT	./GL/glew.h	/^#define GL_LIST_BIT /;"	d
GL_LIST_INDEX	./GL/glew.h	/^#define GL_LIST_INDEX /;"	d
GL_LIST_MODE	./GL/glew.h	/^#define GL_LIST_MODE /;"	d
GL_LOAD	./GL/glew.h	/^#define GL_LOAD /;"	d
GL_LOCAL_CONSTANT_DATATYPE_EXT	./GL/glew.h	/^#define GL_LOCAL_CONSTANT_DATATYPE_EXT /;"	d
GL_LOCAL_CONSTANT_EXT	./GL/glew.h	/^#define GL_LOCAL_CONSTANT_EXT /;"	d
GL_LOCAL_CONSTANT_VALUE_EXT	./GL/glew.h	/^#define GL_LOCAL_CONSTANT_VALUE_EXT /;"	d
GL_LOCAL_EXT	./GL/glew.h	/^#define GL_LOCAL_EXT /;"	d
GL_LOCATION	./GL/glew.h	/^#define GL_LOCATION /;"	d
GL_LOCATION_COMPONENT	./GL/glew.h	/^#define GL_LOCATION_COMPONENT /;"	d
GL_LOCATION_INDEX	./GL/glew.h	/^#define GL_LOCATION_INDEX /;"	d
GL_LOCATION_INDEX_EXT	./GL/glew.h	/^#define GL_LOCATION_INDEX_EXT /;"	d
GL_LOGIC_OP	./GL/glew.h	/^#define GL_LOGIC_OP /;"	d
GL_LOGIC_OP_MODE	./GL/glew.h	/^#define GL_LOGIC_OP_MODE /;"	d
GL_LOG_APP_REGAL	./GL/glew.h	/^#define GL_LOG_APP_REGAL /;"	d
GL_LOG_DEBUG_REGAL	./GL/glew.h	/^#define GL_LOG_DEBUG_REGAL /;"	d
GL_LOG_DRIVER_REGAL	./GL/glew.h	/^#define GL_LOG_DRIVER_REGAL /;"	d
GL_LOG_ERROR_REGAL	./GL/glew.h	/^#define GL_LOG_ERROR_REGAL /;"	d
GL_LOG_HTTP_REGAL	./GL/glew.h	/^#define GL_LOG_HTTP_REGAL /;"	d
GL_LOG_INFO_REGAL	./GL/glew.h	/^#define GL_LOG_INFO_REGAL /;"	d
GL_LOG_INTERNAL_REGAL	./GL/glew.h	/^#define GL_LOG_INTERNAL_REGAL /;"	d
GL_LOG_REGAL	./GL/glew.h	/^#define GL_LOG_REGAL /;"	d
GL_LOG_STATUS_REGAL	./GL/glew.h	/^#define GL_LOG_STATUS_REGAL /;"	d
GL_LOG_WARNING_REGAL	./GL/glew.h	/^#define GL_LOG_WARNING_REGAL /;"	d
GL_LOSE_CONTEXT_ON_RESET	./GL/glew.h	/^#define GL_LOSE_CONTEXT_ON_RESET /;"	d
GL_LOSE_CONTEXT_ON_RESET_ARB	./GL/glew.h	/^#define GL_LOSE_CONTEXT_ON_RESET_ARB /;"	d
GL_LOSE_CONTEXT_ON_RESET_EXT	./GL/glew.h	/^#define GL_LOSE_CONTEXT_ON_RESET_EXT /;"	d
GL_LOWER_LEFT	./GL/glew.h	/^#define GL_LOWER_LEFT /;"	d
GL_LOWER_LEFT_EXT	./GL/glew.h	/^#define GL_LOWER_LEFT_EXT /;"	d
GL_LOW_FLOAT	./GL/glew.h	/^#define GL_LOW_FLOAT /;"	d
GL_LOW_INT	./GL/glew.h	/^#define GL_LOW_INT /;"	d
GL_LO_BIAS_NV	./GL/glew.h	/^#define GL_LO_BIAS_NV /;"	d
GL_LO_SCALE_NV	./GL/glew.h	/^#define GL_LO_SCALE_NV /;"	d
GL_LUID_SIZE_EXT	./GL/glew.h	/^#define GL_LUID_SIZE_EXT /;"	d
GL_LUMINANCE	./GL/glew.h	/^#define GL_LUMINANCE /;"	d
GL_LUMINANCE12	./GL/glew.h	/^#define GL_LUMINANCE12 /;"	d
GL_LUMINANCE12_ALPHA12	./GL/glew.h	/^#define GL_LUMINANCE12_ALPHA12 /;"	d
GL_LUMINANCE12_ALPHA12_EXT	./GL/glew.h	/^#define GL_LUMINANCE12_ALPHA12_EXT /;"	d
GL_LUMINANCE12_ALPHA4	./GL/glew.h	/^#define GL_LUMINANCE12_ALPHA4 /;"	d
GL_LUMINANCE12_ALPHA4_EXT	./GL/glew.h	/^#define GL_LUMINANCE12_ALPHA4_EXT /;"	d
GL_LUMINANCE12_EXT	./GL/glew.h	/^#define GL_LUMINANCE12_EXT /;"	d
GL_LUMINANCE16	./GL/glew.h	/^#define GL_LUMINANCE16 /;"	d
GL_LUMINANCE16F_ARB	./GL/glew.h	/^#define GL_LUMINANCE16F_ARB /;"	d
GL_LUMINANCE16F_EXT	./GL/glew.h	/^#define GL_LUMINANCE16F_EXT /;"	d
GL_LUMINANCE16I_EXT	./GL/glew.h	/^#define GL_LUMINANCE16I_EXT /;"	d
GL_LUMINANCE16UI_EXT	./GL/glew.h	/^#define GL_LUMINANCE16UI_EXT /;"	d
GL_LUMINANCE16_ALPHA16	./GL/glew.h	/^#define GL_LUMINANCE16_ALPHA16 /;"	d
GL_LUMINANCE16_ALPHA16_EXT	./GL/glew.h	/^#define GL_LUMINANCE16_ALPHA16_EXT /;"	d
GL_LUMINANCE16_ALPHA16_EXTENDED_RANGE_SGIX	./GL/glew.h	/^#define GL_LUMINANCE16_ALPHA16_EXTENDED_RANGE_SGIX /;"	d
GL_LUMINANCE16_ALPHA16_SIGNED_SGIX	./GL/glew.h	/^#define GL_LUMINANCE16_ALPHA16_SIGNED_SGIX /;"	d
GL_LUMINANCE16_ALPHA16_SNORM	./GL/glew.h	/^#define GL_LUMINANCE16_ALPHA16_SNORM /;"	d
GL_LUMINANCE16_ALPHA8_ICC_SGIX	./GL/glew.h	/^#define GL_LUMINANCE16_ALPHA8_ICC_SGIX /;"	d
GL_LUMINANCE16_EXT	./GL/glew.h	/^#define GL_LUMINANCE16_EXT /;"	d
GL_LUMINANCE16_EXTENDED_RANGE_SGIX	./GL/glew.h	/^#define GL_LUMINANCE16_EXTENDED_RANGE_SGIX /;"	d
GL_LUMINANCE16_ICC_SGIX	./GL/glew.h	/^#define GL_LUMINANCE16_ICC_SGIX /;"	d
GL_LUMINANCE16_SIGNED_SGIX	./GL/glew.h	/^#define GL_LUMINANCE16_SIGNED_SGIX /;"	d
GL_LUMINANCE16_SNORM	./GL/glew.h	/^#define GL_LUMINANCE16_SNORM /;"	d
GL_LUMINANCE32F_ARB	./GL/glew.h	/^#define GL_LUMINANCE32F_ARB /;"	d
GL_LUMINANCE32F_EXT	./GL/glew.h	/^#define GL_LUMINANCE32F_EXT /;"	d
GL_LUMINANCE32I_EXT	./GL/glew.h	/^#define GL_LUMINANCE32I_EXT /;"	d
GL_LUMINANCE32UI_EXT	./GL/glew.h	/^#define GL_LUMINANCE32UI_EXT /;"	d
GL_LUMINANCE4	./GL/glew.h	/^#define GL_LUMINANCE4 /;"	d
GL_LUMINANCE4_ALPHA4	./GL/glew.h	/^#define GL_LUMINANCE4_ALPHA4 /;"	d
GL_LUMINANCE4_ALPHA4_EXT	./GL/glew.h	/^#define GL_LUMINANCE4_ALPHA4_EXT /;"	d
GL_LUMINANCE4_ALPHA4_OES	./GL/glew.h	/^#define GL_LUMINANCE4_ALPHA4_OES /;"	d
GL_LUMINANCE4_EXT	./GL/glew.h	/^#define GL_LUMINANCE4_EXT /;"	d
GL_LUMINANCE6_ALPHA2	./GL/glew.h	/^#define GL_LUMINANCE6_ALPHA2 /;"	d
GL_LUMINANCE6_ALPHA2_EXT	./GL/glew.h	/^#define GL_LUMINANCE6_ALPHA2_EXT /;"	d
GL_LUMINANCE8	./GL/glew.h	/^#define GL_LUMINANCE8 /;"	d
GL_LUMINANCE8I_EXT	./GL/glew.h	/^#define GL_LUMINANCE8I_EXT /;"	d
GL_LUMINANCE8UI_EXT	./GL/glew.h	/^#define GL_LUMINANCE8UI_EXT /;"	d
GL_LUMINANCE8_ALPHA8	./GL/glew.h	/^#define GL_LUMINANCE8_ALPHA8 /;"	d
GL_LUMINANCE8_ALPHA8_EXT	./GL/glew.h	/^#define GL_LUMINANCE8_ALPHA8_EXT /;"	d
GL_LUMINANCE8_ALPHA8_OES	./GL/glew.h	/^#define GL_LUMINANCE8_ALPHA8_OES /;"	d
GL_LUMINANCE8_ALPHA8_SNORM	./GL/glew.h	/^#define GL_LUMINANCE8_ALPHA8_SNORM /;"	d
GL_LUMINANCE8_EXT	./GL/glew.h	/^#define GL_LUMINANCE8_EXT /;"	d
GL_LUMINANCE8_OES	./GL/glew.h	/^#define GL_LUMINANCE8_OES /;"	d
GL_LUMINANCE8_SNORM	./GL/glew.h	/^#define GL_LUMINANCE8_SNORM /;"	d
GL_LUMINANCE_ALPHA	./GL/glew.h	/^#define GL_LUMINANCE_ALPHA /;"	d
GL_LUMINANCE_ALPHA16F_ARB	./GL/glew.h	/^#define GL_LUMINANCE_ALPHA16F_ARB /;"	d
GL_LUMINANCE_ALPHA16F_EXT	./GL/glew.h	/^#define GL_LUMINANCE_ALPHA16F_EXT /;"	d
GL_LUMINANCE_ALPHA16I_EXT	./GL/glew.h	/^#define GL_LUMINANCE_ALPHA16I_EXT /;"	d
GL_LUMINANCE_ALPHA16UI_EXT	./GL/glew.h	/^#define GL_LUMINANCE_ALPHA16UI_EXT /;"	d
GL_LUMINANCE_ALPHA32F_ARB	./GL/glew.h	/^#define GL_LUMINANCE_ALPHA32F_ARB /;"	d
GL_LUMINANCE_ALPHA32F_EXT	./GL/glew.h	/^#define GL_LUMINANCE_ALPHA32F_EXT /;"	d
GL_LUMINANCE_ALPHA32I_EXT	./GL/glew.h	/^#define GL_LUMINANCE_ALPHA32I_EXT /;"	d
GL_LUMINANCE_ALPHA32UI_EXT	./GL/glew.h	/^#define GL_LUMINANCE_ALPHA32UI_EXT /;"	d
GL_LUMINANCE_ALPHA8I_EXT	./GL/glew.h	/^#define GL_LUMINANCE_ALPHA8I_EXT /;"	d
GL_LUMINANCE_ALPHA8UI_EXT	./GL/glew.h	/^#define GL_LUMINANCE_ALPHA8UI_EXT /;"	d
GL_LUMINANCE_ALPHA_EXTENDED_RANGE_SGIX	./GL/glew.h	/^#define GL_LUMINANCE_ALPHA_EXTENDED_RANGE_SGIX /;"	d
GL_LUMINANCE_ALPHA_FLOAT16_APPLE	./GL/glew.h	/^#define GL_LUMINANCE_ALPHA_FLOAT16_APPLE /;"	d
GL_LUMINANCE_ALPHA_FLOAT16_ATI	./GL/glew.h	/^#define GL_LUMINANCE_ALPHA_FLOAT16_ATI /;"	d
GL_LUMINANCE_ALPHA_FLOAT32_APPLE	./GL/glew.h	/^#define GL_LUMINANCE_ALPHA_FLOAT32_APPLE /;"	d
GL_LUMINANCE_ALPHA_FLOAT32_ATI	./GL/glew.h	/^#define GL_LUMINANCE_ALPHA_FLOAT32_ATI /;"	d
GL_LUMINANCE_ALPHA_ICC_SGIX	./GL/glew.h	/^#define GL_LUMINANCE_ALPHA_ICC_SGIX /;"	d
GL_LUMINANCE_ALPHA_INTEGER_EXT	./GL/glew.h	/^#define GL_LUMINANCE_ALPHA_INTEGER_EXT /;"	d
GL_LUMINANCE_ALPHA_SIGNED_SGIX	./GL/glew.h	/^#define GL_LUMINANCE_ALPHA_SIGNED_SGIX /;"	d
GL_LUMINANCE_ALPHA_SNORM	./GL/glew.h	/^#define GL_LUMINANCE_ALPHA_SNORM /;"	d
GL_LUMINANCE_EXTENDED_RANGE_SGIX	./GL/glew.h	/^#define GL_LUMINANCE_EXTENDED_RANGE_SGIX /;"	d
GL_LUMINANCE_FLOAT16_APPLE	./GL/glew.h	/^#define GL_LUMINANCE_FLOAT16_APPLE /;"	d
GL_LUMINANCE_FLOAT16_ATI	./GL/glew.h	/^#define GL_LUMINANCE_FLOAT16_ATI /;"	d
GL_LUMINANCE_FLOAT32_APPLE	./GL/glew.h	/^#define GL_LUMINANCE_FLOAT32_APPLE /;"	d
GL_LUMINANCE_FLOAT32_ATI	./GL/glew.h	/^#define GL_LUMINANCE_FLOAT32_ATI /;"	d
GL_LUMINANCE_ICC_SGIX	./GL/glew.h	/^#define GL_LUMINANCE_ICC_SGIX /;"	d
GL_LUMINANCE_INTEGER_EXT	./GL/glew.h	/^#define GL_LUMINANCE_INTEGER_EXT /;"	d
GL_LUMINANCE_SIGNED_SGIX	./GL/glew.h	/^#define GL_LUMINANCE_SIGNED_SGIX /;"	d
GL_LUMINANCE_SNORM	./GL/glew.h	/^#define GL_LUMINANCE_SNORM /;"	d
GL_MAD_ATI	./GL/glew.h	/^#define GL_MAD_ATI /;"	d
GL_MAGNITUDE_BIAS_NV	./GL/glew.h	/^#define GL_MAGNITUDE_BIAS_NV /;"	d
GL_MAGNITUDE_SCALE_NV	./GL/glew.h	/^#define GL_MAGNITUDE_SCALE_NV /;"	d
GL_MAJOR_VERSION	./GL/glew.h	/^#define GL_MAJOR_VERSION /;"	d
GL_MALI_PROGRAM_BINARY_ARM	./GL/glew.h	/^#define GL_MALI_PROGRAM_BINARY_ARM /;"	d
GL_MALI_SHADER_BINARY_ARM	./GL/glew.h	/^#define GL_MALI_SHADER_BINARY_ARM /;"	d
GL_MANUAL_GENERATE_MIPMAP	./GL/glew.h	/^#define GL_MANUAL_GENERATE_MIPMAP /;"	d
GL_MAP1_BINORMAL_EXT	./GL/glew.h	/^#define GL_MAP1_BINORMAL_EXT /;"	d
GL_MAP1_COLOR_4	./GL/glew.h	/^#define GL_MAP1_COLOR_4 /;"	d
GL_MAP1_COLOR_4_NURBS_SGIX	./GL/glew.h	/^#define GL_MAP1_COLOR_4_NURBS_SGIX /;"	d
GL_MAP1_GRID_DOMAIN	./GL/glew.h	/^#define GL_MAP1_GRID_DOMAIN /;"	d
GL_MAP1_GRID_SEGMENTS	./GL/glew.h	/^#define GL_MAP1_GRID_SEGMENTS /;"	d
GL_MAP1_INDEX	./GL/glew.h	/^#define GL_MAP1_INDEX /;"	d
GL_MAP1_INDEX_NURBS_SGIX	./GL/glew.h	/^#define GL_MAP1_INDEX_NURBS_SGIX /;"	d
GL_MAP1_NORMAL	./GL/glew.h	/^#define GL_MAP1_NORMAL /;"	d
GL_MAP1_NORMAL_NURBS_SGIX	./GL/glew.h	/^#define GL_MAP1_NORMAL_NURBS_SGIX /;"	d
GL_MAP1_TANGENT_EXT	./GL/glew.h	/^#define GL_MAP1_TANGENT_EXT /;"	d
GL_MAP1_TEXTURE_COORD_1	./GL/glew.h	/^#define GL_MAP1_TEXTURE_COORD_1 /;"	d
GL_MAP1_TEXTURE_COORD_1_NURBS_SGIX	./GL/glew.h	/^#define GL_MAP1_TEXTURE_COORD_1_NURBS_SGIX /;"	d
GL_MAP1_TEXTURE_COORD_2	./GL/glew.h	/^#define GL_MAP1_TEXTURE_COORD_2 /;"	d
GL_MAP1_TEXTURE_COORD_2_NURBS_SGIX	./GL/glew.h	/^#define GL_MAP1_TEXTURE_COORD_2_NURBS_SGIX /;"	d
GL_MAP1_TEXTURE_COORD_3	./GL/glew.h	/^#define GL_MAP1_TEXTURE_COORD_3 /;"	d
GL_MAP1_TEXTURE_COORD_3_NURBS_SGIX	./GL/glew.h	/^#define GL_MAP1_TEXTURE_COORD_3_NURBS_SGIX /;"	d
GL_MAP1_TEXTURE_COORD_4	./GL/glew.h	/^#define GL_MAP1_TEXTURE_COORD_4 /;"	d
GL_MAP1_TEXTURE_COORD_4_NURBS_SGIX	./GL/glew.h	/^#define GL_MAP1_TEXTURE_COORD_4_NURBS_SGIX /;"	d
GL_MAP1_VERTEX_3	./GL/glew.h	/^#define GL_MAP1_VERTEX_3 /;"	d
GL_MAP1_VERTEX_3_NURBS_SGIX	./GL/glew.h	/^#define GL_MAP1_VERTEX_3_NURBS_SGIX /;"	d
GL_MAP1_VERTEX_4	./GL/glew.h	/^#define GL_MAP1_VERTEX_4 /;"	d
GL_MAP1_VERTEX_4_NURBS_SGIX	./GL/glew.h	/^#define GL_MAP1_VERTEX_4_NURBS_SGIX /;"	d
GL_MAP1_VERTEX_ATTRIB0_4_NV	./GL/glew.h	/^#define GL_MAP1_VERTEX_ATTRIB0_4_NV /;"	d
GL_MAP1_VERTEX_ATTRIB10_4_NV	./GL/glew.h	/^#define GL_MAP1_VERTEX_ATTRIB10_4_NV /;"	d
GL_MAP1_VERTEX_ATTRIB11_4_NV	./GL/glew.h	/^#define GL_MAP1_VERTEX_ATTRIB11_4_NV /;"	d
GL_MAP1_VERTEX_ATTRIB12_4_NV	./GL/glew.h	/^#define GL_MAP1_VERTEX_ATTRIB12_4_NV /;"	d
GL_MAP1_VERTEX_ATTRIB13_4_NV	./GL/glew.h	/^#define GL_MAP1_VERTEX_ATTRIB13_4_NV /;"	d
GL_MAP1_VERTEX_ATTRIB14_4_NV	./GL/glew.h	/^#define GL_MAP1_VERTEX_ATTRIB14_4_NV /;"	d
GL_MAP1_VERTEX_ATTRIB15_4_NV	./GL/glew.h	/^#define GL_MAP1_VERTEX_ATTRIB15_4_NV /;"	d
GL_MAP1_VERTEX_ATTRIB1_4_NV	./GL/glew.h	/^#define GL_MAP1_VERTEX_ATTRIB1_4_NV /;"	d
GL_MAP1_VERTEX_ATTRIB2_4_NV	./GL/glew.h	/^#define GL_MAP1_VERTEX_ATTRIB2_4_NV /;"	d
GL_MAP1_VERTEX_ATTRIB3_4_NV	./GL/glew.h	/^#define GL_MAP1_VERTEX_ATTRIB3_4_NV /;"	d
GL_MAP1_VERTEX_ATTRIB4_4_NV	./GL/glew.h	/^#define GL_MAP1_VERTEX_ATTRIB4_4_NV /;"	d
GL_MAP1_VERTEX_ATTRIB5_4_NV	./GL/glew.h	/^#define GL_MAP1_VERTEX_ATTRIB5_4_NV /;"	d
GL_MAP1_VERTEX_ATTRIB6_4_NV	./GL/glew.h	/^#define GL_MAP1_VERTEX_ATTRIB6_4_NV /;"	d
GL_MAP1_VERTEX_ATTRIB7_4_NV	./GL/glew.h	/^#define GL_MAP1_VERTEX_ATTRIB7_4_NV /;"	d
GL_MAP1_VERTEX_ATTRIB8_4_NV	./GL/glew.h	/^#define GL_MAP1_VERTEX_ATTRIB8_4_NV /;"	d
GL_MAP1_VERTEX_ATTRIB9_4_NV	./GL/glew.h	/^#define GL_MAP1_VERTEX_ATTRIB9_4_NV /;"	d
GL_MAP2_BINORMAL_EXT	./GL/glew.h	/^#define GL_MAP2_BINORMAL_EXT /;"	d
GL_MAP2_COLOR_4	./GL/glew.h	/^#define GL_MAP2_COLOR_4 /;"	d
GL_MAP2_COLOR_4_NURBS_SGIX	./GL/glew.h	/^#define GL_MAP2_COLOR_4_NURBS_SGIX /;"	d
GL_MAP2_GRID_DOMAIN	./GL/glew.h	/^#define GL_MAP2_GRID_DOMAIN /;"	d
GL_MAP2_GRID_SEGMENTS	./GL/glew.h	/^#define GL_MAP2_GRID_SEGMENTS /;"	d
GL_MAP2_INDEX	./GL/glew.h	/^#define GL_MAP2_INDEX /;"	d
GL_MAP2_INDEX_NURBS_SGIX	./GL/glew.h	/^#define GL_MAP2_INDEX_NURBS_SGIX /;"	d
GL_MAP2_NORMAL	./GL/glew.h	/^#define GL_MAP2_NORMAL /;"	d
GL_MAP2_NORMAL_NURBS_SGIX	./GL/glew.h	/^#define GL_MAP2_NORMAL_NURBS_SGIX /;"	d
GL_MAP2_TANGENT_EXT	./GL/glew.h	/^#define GL_MAP2_TANGENT_EXT /;"	d
GL_MAP2_TEXTURE_COORD_1	./GL/glew.h	/^#define GL_MAP2_TEXTURE_COORD_1 /;"	d
GL_MAP2_TEXTURE_COORD_1_NURBS_SGIX	./GL/glew.h	/^#define GL_MAP2_TEXTURE_COORD_1_NURBS_SGIX /;"	d
GL_MAP2_TEXTURE_COORD_2	./GL/glew.h	/^#define GL_MAP2_TEXTURE_COORD_2 /;"	d
GL_MAP2_TEXTURE_COORD_2_NURBS_SGIX	./GL/glew.h	/^#define GL_MAP2_TEXTURE_COORD_2_NURBS_SGIX /;"	d
GL_MAP2_TEXTURE_COORD_3	./GL/glew.h	/^#define GL_MAP2_TEXTURE_COORD_3 /;"	d
GL_MAP2_TEXTURE_COORD_3_NURBS_SGIX	./GL/glew.h	/^#define GL_MAP2_TEXTURE_COORD_3_NURBS_SGIX /;"	d
GL_MAP2_TEXTURE_COORD_4	./GL/glew.h	/^#define GL_MAP2_TEXTURE_COORD_4 /;"	d
GL_MAP2_TEXTURE_COORD_4_NURBS_SGIX	./GL/glew.h	/^#define GL_MAP2_TEXTURE_COORD_4_NURBS_SGIX /;"	d
GL_MAP2_VERTEX_3	./GL/glew.h	/^#define GL_MAP2_VERTEX_3 /;"	d
GL_MAP2_VERTEX_3_NURBS_SGIX	./GL/glew.h	/^#define GL_MAP2_VERTEX_3_NURBS_SGIX /;"	d
GL_MAP2_VERTEX_4	./GL/glew.h	/^#define GL_MAP2_VERTEX_4 /;"	d
GL_MAP2_VERTEX_4_NURBS_SGIX	./GL/glew.h	/^#define GL_MAP2_VERTEX_4_NURBS_SGIX /;"	d
GL_MAP2_VERTEX_ATTRIB0_4_NV	./GL/glew.h	/^#define GL_MAP2_VERTEX_ATTRIB0_4_NV /;"	d
GL_MAP2_VERTEX_ATTRIB10_4_NV	./GL/glew.h	/^#define GL_MAP2_VERTEX_ATTRIB10_4_NV /;"	d
GL_MAP2_VERTEX_ATTRIB11_4_NV	./GL/glew.h	/^#define GL_MAP2_VERTEX_ATTRIB11_4_NV /;"	d
GL_MAP2_VERTEX_ATTRIB12_4_NV	./GL/glew.h	/^#define GL_MAP2_VERTEX_ATTRIB12_4_NV /;"	d
GL_MAP2_VERTEX_ATTRIB13_4_NV	./GL/glew.h	/^#define GL_MAP2_VERTEX_ATTRIB13_4_NV /;"	d
GL_MAP2_VERTEX_ATTRIB14_4_NV	./GL/glew.h	/^#define GL_MAP2_VERTEX_ATTRIB14_4_NV /;"	d
GL_MAP2_VERTEX_ATTRIB15_4_NV	./GL/glew.h	/^#define GL_MAP2_VERTEX_ATTRIB15_4_NV /;"	d
GL_MAP2_VERTEX_ATTRIB1_4_NV	./GL/glew.h	/^#define GL_MAP2_VERTEX_ATTRIB1_4_NV /;"	d
GL_MAP2_VERTEX_ATTRIB2_4_NV	./GL/glew.h	/^#define GL_MAP2_VERTEX_ATTRIB2_4_NV /;"	d
GL_MAP2_VERTEX_ATTRIB3_4_NV	./GL/glew.h	/^#define GL_MAP2_VERTEX_ATTRIB3_4_NV /;"	d
GL_MAP2_VERTEX_ATTRIB4_4_NV	./GL/glew.h	/^#define GL_MAP2_VERTEX_ATTRIB4_4_NV /;"	d
GL_MAP2_VERTEX_ATTRIB5_4_NV	./GL/glew.h	/^#define GL_MAP2_VERTEX_ATTRIB5_4_NV /;"	d
GL_MAP2_VERTEX_ATTRIB6_4_NV	./GL/glew.h	/^#define GL_MAP2_VERTEX_ATTRIB6_4_NV /;"	d
GL_MAP2_VERTEX_ATTRIB7_4_NV	./GL/glew.h	/^#define GL_MAP2_VERTEX_ATTRIB7_4_NV /;"	d
GL_MAP2_VERTEX_ATTRIB8_4_NV	./GL/glew.h	/^#define GL_MAP2_VERTEX_ATTRIB8_4_NV /;"	d
GL_MAP2_VERTEX_ATTRIB9_4_NV	./GL/glew.h	/^#define GL_MAP2_VERTEX_ATTRIB9_4_NV /;"	d
GL_MAP_ATTRIB_U_ORDER_NV	./GL/glew.h	/^#define GL_MAP_ATTRIB_U_ORDER_NV /;"	d
GL_MAP_ATTRIB_V_ORDER_NV	./GL/glew.h	/^#define GL_MAP_ATTRIB_V_ORDER_NV /;"	d
GL_MAP_COHERENT_BIT	./GL/glew.h	/^#define GL_MAP_COHERENT_BIT /;"	d
GL_MAP_COHERENT_BIT_EXT	./GL/glew.h	/^#define GL_MAP_COHERENT_BIT_EXT /;"	d
GL_MAP_COLOR	./GL/glew.h	/^#define GL_MAP_COLOR /;"	d
GL_MAP_FLUSH_EXPLICIT_BIT	./GL/glew.h	/^#define GL_MAP_FLUSH_EXPLICIT_BIT /;"	d
GL_MAP_FLUSH_EXPLICIT_BIT_EXT	./GL/glew.h	/^#define GL_MAP_FLUSH_EXPLICIT_BIT_EXT /;"	d
GL_MAP_INVALIDATE_BUFFER_BIT	./GL/glew.h	/^#define GL_MAP_INVALIDATE_BUFFER_BIT /;"	d
GL_MAP_INVALIDATE_BUFFER_BIT_EXT	./GL/glew.h	/^#define GL_MAP_INVALIDATE_BUFFER_BIT_EXT /;"	d
GL_MAP_INVALIDATE_RANGE_BIT	./GL/glew.h	/^#define GL_MAP_INVALIDATE_RANGE_BIT /;"	d
GL_MAP_INVALIDATE_RANGE_BIT_EXT	./GL/glew.h	/^#define GL_MAP_INVALIDATE_RANGE_BIT_EXT /;"	d
GL_MAP_PERSISTENT_BIT	./GL/glew.h	/^#define GL_MAP_PERSISTENT_BIT /;"	d
GL_MAP_PERSISTENT_BIT_EXT	./GL/glew.h	/^#define GL_MAP_PERSISTENT_BIT_EXT /;"	d
GL_MAP_READ_BIT	./GL/glew.h	/^#define GL_MAP_READ_BIT /;"	d
GL_MAP_READ_BIT_EXT	./GL/glew.h	/^#define GL_MAP_READ_BIT_EXT /;"	d
GL_MAP_STENCIL	./GL/glew.h	/^#define GL_MAP_STENCIL /;"	d
GL_MAP_TESSELLATION_NV	./GL/glew.h	/^#define GL_MAP_TESSELLATION_NV /;"	d
GL_MAP_UNSYNCHRONIZED_BIT	./GL/glew.h	/^#define GL_MAP_UNSYNCHRONIZED_BIT /;"	d
GL_MAP_UNSYNCHRONIZED_BIT_EXT	./GL/glew.h	/^#define GL_MAP_UNSYNCHRONIZED_BIT_EXT /;"	d
GL_MAP_WRITE_BIT	./GL/glew.h	/^#define GL_MAP_WRITE_BIT /;"	d
GL_MAP_WRITE_BIT_EXT	./GL/glew.h	/^#define GL_MAP_WRITE_BIT_EXT /;"	d
GL_MATERIAL_SIDE_HINT_PGI	./GL/glew.h	/^#define GL_MATERIAL_SIDE_HINT_PGI /;"	d
GL_MATRIX0_ARB	./GL/glew.h	/^#define GL_MATRIX0_ARB /;"	d
GL_MATRIX0_NV	./GL/glew.h	/^#define GL_MATRIX0_NV /;"	d
GL_MATRIX10_ARB	./GL/glew.h	/^#define GL_MATRIX10_ARB /;"	d
GL_MATRIX11_ARB	./GL/glew.h	/^#define GL_MATRIX11_ARB /;"	d
GL_MATRIX12_ARB	./GL/glew.h	/^#define GL_MATRIX12_ARB /;"	d
GL_MATRIX13_ARB	./GL/glew.h	/^#define GL_MATRIX13_ARB /;"	d
GL_MATRIX14_ARB	./GL/glew.h	/^#define GL_MATRIX14_ARB /;"	d
GL_MATRIX15_ARB	./GL/glew.h	/^#define GL_MATRIX15_ARB /;"	d
GL_MATRIX16_ARB	./GL/glew.h	/^#define GL_MATRIX16_ARB /;"	d
GL_MATRIX17_ARB	./GL/glew.h	/^#define GL_MATRIX17_ARB /;"	d
GL_MATRIX18_ARB	./GL/glew.h	/^#define GL_MATRIX18_ARB /;"	d
GL_MATRIX19_ARB	./GL/glew.h	/^#define GL_MATRIX19_ARB /;"	d
GL_MATRIX1_ARB	./GL/glew.h	/^#define GL_MATRIX1_ARB /;"	d
GL_MATRIX1_NV	./GL/glew.h	/^#define GL_MATRIX1_NV /;"	d
GL_MATRIX20_ARB	./GL/glew.h	/^#define GL_MATRIX20_ARB /;"	d
GL_MATRIX21_ARB	./GL/glew.h	/^#define GL_MATRIX21_ARB /;"	d
GL_MATRIX22_ARB	./GL/glew.h	/^#define GL_MATRIX22_ARB /;"	d
GL_MATRIX23_ARB	./GL/glew.h	/^#define GL_MATRIX23_ARB /;"	d
GL_MATRIX24_ARB	./GL/glew.h	/^#define GL_MATRIX24_ARB /;"	d
GL_MATRIX25_ARB	./GL/glew.h	/^#define GL_MATRIX25_ARB /;"	d
GL_MATRIX26_ARB	./GL/glew.h	/^#define GL_MATRIX26_ARB /;"	d
GL_MATRIX27_ARB	./GL/glew.h	/^#define GL_MATRIX27_ARB /;"	d
GL_MATRIX28_ARB	./GL/glew.h	/^#define GL_MATRIX28_ARB /;"	d
GL_MATRIX29_ARB	./GL/glew.h	/^#define GL_MATRIX29_ARB /;"	d
GL_MATRIX2_ARB	./GL/glew.h	/^#define GL_MATRIX2_ARB /;"	d
GL_MATRIX2_NV	./GL/glew.h	/^#define GL_MATRIX2_NV /;"	d
GL_MATRIX30_ARB	./GL/glew.h	/^#define GL_MATRIX30_ARB /;"	d
GL_MATRIX31_ARB	./GL/glew.h	/^#define GL_MATRIX31_ARB /;"	d
GL_MATRIX3_ARB	./GL/glew.h	/^#define GL_MATRIX3_ARB /;"	d
GL_MATRIX3_NV	./GL/glew.h	/^#define GL_MATRIX3_NV /;"	d
GL_MATRIX4_ARB	./GL/glew.h	/^#define GL_MATRIX4_ARB /;"	d
GL_MATRIX4_NV	./GL/glew.h	/^#define GL_MATRIX4_NV /;"	d
GL_MATRIX5_ARB	./GL/glew.h	/^#define GL_MATRIX5_ARB /;"	d
GL_MATRIX5_NV	./GL/glew.h	/^#define GL_MATRIX5_NV /;"	d
GL_MATRIX6_ARB	./GL/glew.h	/^#define GL_MATRIX6_ARB /;"	d
GL_MATRIX6_NV	./GL/glew.h	/^#define GL_MATRIX6_NV /;"	d
GL_MATRIX7_ARB	./GL/glew.h	/^#define GL_MATRIX7_ARB /;"	d
GL_MATRIX7_NV	./GL/glew.h	/^#define GL_MATRIX7_NV /;"	d
GL_MATRIX8_ARB	./GL/glew.h	/^#define GL_MATRIX8_ARB /;"	d
GL_MATRIX9_ARB	./GL/glew.h	/^#define GL_MATRIX9_ARB /;"	d
GL_MATRIX_EXT	./GL/glew.h	/^#define GL_MATRIX_EXT /;"	d
GL_MATRIX_INDEX_ARRAY_ARB	./GL/glew.h	/^#define GL_MATRIX_INDEX_ARRAY_ARB /;"	d
GL_MATRIX_INDEX_ARRAY_BUFFER_BINDING_OES	./GL/glew.h	/^#define GL_MATRIX_INDEX_ARRAY_BUFFER_BINDING_OES /;"	d
GL_MATRIX_INDEX_ARRAY_OES	./GL/glew.h	/^#define GL_MATRIX_INDEX_ARRAY_OES /;"	d
GL_MATRIX_INDEX_ARRAY_POINTER_ARB	./GL/glew.h	/^#define GL_MATRIX_INDEX_ARRAY_POINTER_ARB /;"	d
GL_MATRIX_INDEX_ARRAY_POINTER_OES	./GL/glew.h	/^#define GL_MATRIX_INDEX_ARRAY_POINTER_OES /;"	d
GL_MATRIX_INDEX_ARRAY_SIZE_ARB	./GL/glew.h	/^#define GL_MATRIX_INDEX_ARRAY_SIZE_ARB /;"	d
GL_MATRIX_INDEX_ARRAY_SIZE_OES	./GL/glew.h	/^#define GL_MATRIX_INDEX_ARRAY_SIZE_OES /;"	d
GL_MATRIX_INDEX_ARRAY_STRIDE_ARB	./GL/glew.h	/^#define GL_MATRIX_INDEX_ARRAY_STRIDE_ARB /;"	d
GL_MATRIX_INDEX_ARRAY_STRIDE_OES	./GL/glew.h	/^#define GL_MATRIX_INDEX_ARRAY_STRIDE_OES /;"	d
GL_MATRIX_INDEX_ARRAY_TYPE_ARB	./GL/glew.h	/^#define GL_MATRIX_INDEX_ARRAY_TYPE_ARB /;"	d
GL_MATRIX_INDEX_ARRAY_TYPE_OES	./GL/glew.h	/^#define GL_MATRIX_INDEX_ARRAY_TYPE_OES /;"	d
GL_MATRIX_MODE	./GL/glew.h	/^#define GL_MATRIX_MODE /;"	d
GL_MATRIX_PALETTE_ARB	./GL/glew.h	/^#define GL_MATRIX_PALETTE_ARB /;"	d
GL_MATRIX_PALETTE_OES	./GL/glew.h	/^#define GL_MATRIX_PALETTE_OES /;"	d
GL_MATRIX_STRIDE	./GL/glew.h	/^#define GL_MATRIX_STRIDE /;"	d
GL_MAT_AMBIENT_AND_DIFFUSE_BIT_PGI	./GL/glew.h	/^#define GL_MAT_AMBIENT_AND_DIFFUSE_BIT_PGI /;"	d
GL_MAT_AMBIENT_BIT_PGI	./GL/glew.h	/^#define GL_MAT_AMBIENT_BIT_PGI /;"	d
GL_MAT_COLOR_INDEXES_BIT_PGI	./GL/glew.h	/^#define GL_MAT_COLOR_INDEXES_BIT_PGI /;"	d
GL_MAT_DIFFUSE_BIT_PGI	./GL/glew.h	/^#define GL_MAT_DIFFUSE_BIT_PGI /;"	d
GL_MAT_EMISSION_BIT_PGI	./GL/glew.h	/^#define GL_MAT_EMISSION_BIT_PGI /;"	d
GL_MAT_SHININESS_BIT_PGI	./GL/glew.h	/^#define GL_MAT_SHININESS_BIT_PGI /;"	d
GL_MAT_SPECULAR_BIT_PGI	./GL/glew.h	/^#define GL_MAT_SPECULAR_BIT_PGI /;"	d
GL_MAX	./GL/glew.h	/^#define GL_MAX /;"	d
GL_MAX_3D_TEXTURE_SIZE	./GL/glew.h	/^#define GL_MAX_3D_TEXTURE_SIZE /;"	d
GL_MAX_3D_TEXTURE_SIZE_EXT	./GL/glew.h	/^#define GL_MAX_3D_TEXTURE_SIZE_EXT /;"	d
GL_MAX_3D_TEXTURE_SIZE_OES	./GL/glew.h	/^#define GL_MAX_3D_TEXTURE_SIZE_OES /;"	d
GL_MAX_ACTIVE_LIGHTS_EXT	./GL/glew.h	/^#define GL_MAX_ACTIVE_LIGHTS_EXT /;"	d
GL_MAX_ALPHA_SGIS	./GL/glew.h	/^#define GL_MAX_ALPHA_SGIS /;"	d
GL_MAX_ARRAY_TEXTURE_LAYERS	./GL/glew.h	/^#define GL_MAX_ARRAY_TEXTURE_LAYERS /;"	d
GL_MAX_ARRAY_TEXTURE_LAYERS_EXT	./GL/glew.h	/^#define GL_MAX_ARRAY_TEXTURE_LAYERS_EXT /;"	d
GL_MAX_ARRAY_TEXTURE_LAYERS_NV	./GL/glew.h	/^#define GL_MAX_ARRAY_TEXTURE_LAYERS_NV /;"	d
GL_MAX_ASYNC_DRAW_PIXELS_SGIX	./GL/glew.h	/^#define GL_MAX_ASYNC_DRAW_PIXELS_SGIX /;"	d
GL_MAX_ASYNC_HISTOGRAM_SGIX	./GL/glew.h	/^#define GL_MAX_ASYNC_HISTOGRAM_SGIX /;"	d
GL_MAX_ASYNC_READ_PIXELS_SGIX	./GL/glew.h	/^#define GL_MAX_ASYNC_READ_PIXELS_SGIX /;"	d
GL_MAX_ASYNC_TEX_IMAGE_SGIX	./GL/glew.h	/^#define GL_MAX_ASYNC_TEX_IMAGE_SGIX /;"	d
GL_MAX_ATOMIC_COUNTER_BUFFER_BINDINGS	./GL/glew.h	/^#define GL_MAX_ATOMIC_COUNTER_BUFFER_BINDINGS /;"	d
GL_MAX_ATOMIC_COUNTER_BUFFER_SIZE	./GL/glew.h	/^#define GL_MAX_ATOMIC_COUNTER_BUFFER_SIZE /;"	d
GL_MAX_ATTRIB_STACK_DEPTH	./GL/glew.h	/^#define GL_MAX_ATTRIB_STACK_DEPTH /;"	d
GL_MAX_BINDABLE_UNIFORM_SIZE_EXT	./GL/glew.h	/^#define GL_MAX_BINDABLE_UNIFORM_SIZE_EXT /;"	d
GL_MAX_BLUE_SGIS	./GL/glew.h	/^#define GL_MAX_BLUE_SGIS /;"	d
GL_MAX_CLIENT_ATTRIB_STACK_DEPTH	./GL/glew.h	/^#define GL_MAX_CLIENT_ATTRIB_STACK_DEPTH /;"	d
GL_MAX_CLIP_DISTANCES	./GL/glew.h	/^#define GL_MAX_CLIP_DISTANCES /;"	d
GL_MAX_CLIP_DISTANCES_APPLE	./GL/glew.h	/^#define GL_MAX_CLIP_DISTANCES_APPLE /;"	d
GL_MAX_CLIP_DISTANCES_EXT	./GL/glew.h	/^#define GL_MAX_CLIP_DISTANCES_EXT /;"	d
GL_MAX_CLIP_PLANES	./GL/glew.h	/^#define GL_MAX_CLIP_PLANES /;"	d
GL_MAX_COARSE_FRAGMENT_SAMPLES_NV	./GL/glew.h	/^#define GL_MAX_COARSE_FRAGMENT_SAMPLES_NV /;"	d
GL_MAX_COLOR_ATTACHMENTS	./GL/glew.h	/^#define GL_MAX_COLOR_ATTACHMENTS /;"	d
GL_MAX_COLOR_ATTACHMENTS_EXT	./GL/glew.h	/^#define GL_MAX_COLOR_ATTACHMENTS_EXT /;"	d
GL_MAX_COLOR_ATTACHMENTS_NV	./GL/glew.h	/^#define GL_MAX_COLOR_ATTACHMENTS_NV /;"	d
GL_MAX_COLOR_FRAMEBUFFER_SAMPLES_AMD	./GL/glew.h	/^#define GL_MAX_COLOR_FRAMEBUFFER_SAMPLES_AMD /;"	d
GL_MAX_COLOR_FRAMEBUFFER_STORAGE_SAMPLES_AMD	./GL/glew.h	/^#define GL_MAX_COLOR_FRAMEBUFFER_STORAGE_SAMPLES_AMD /;"	d
GL_MAX_COLOR_MATRIX_STACK_DEPTH	./GL/glew.h	/^#define GL_MAX_COLOR_MATRIX_STACK_DEPTH /;"	d
GL_MAX_COLOR_MATRIX_STACK_DEPTH_SGI	./GL/glew.h	/^#define GL_MAX_COLOR_MATRIX_STACK_DEPTH_SGI /;"	d
GL_MAX_COLOR_TEXTURE_SAMPLES	./GL/glew.h	/^#define GL_MAX_COLOR_TEXTURE_SAMPLES /;"	d
GL_MAX_COMBINED_ATOMIC_COUNTERS	./GL/glew.h	/^#define GL_MAX_COMBINED_ATOMIC_COUNTERS /;"	d
GL_MAX_COMBINED_ATOMIC_COUNTER_BUFFERS	./GL/glew.h	/^#define GL_MAX_COMBINED_ATOMIC_COUNTER_BUFFERS /;"	d
GL_MAX_COMBINED_CLIP_AND_CULL_DISTANCES	./GL/glew.h	/^#define GL_MAX_COMBINED_CLIP_AND_CULL_DISTANCES /;"	d
GL_MAX_COMBINED_CLIP_AND_CULL_DISTANCES_EXT	./GL/glew.h	/^#define GL_MAX_COMBINED_CLIP_AND_CULL_DISTANCES_EXT /;"	d
GL_MAX_COMBINED_COMPUTE_UNIFORM_COMPONENTS	./GL/glew.h	/^#define GL_MAX_COMBINED_COMPUTE_UNIFORM_COMPONENTS /;"	d
GL_MAX_COMBINED_DIMENSIONS	./GL/glew.h	/^#define GL_MAX_COMBINED_DIMENSIONS /;"	d
GL_MAX_COMBINED_FRAGMENT_UNIFORM_COMPONENTS	./GL/glew.h	/^#define GL_MAX_COMBINED_FRAGMENT_UNIFORM_COMPONENTS /;"	d
GL_MAX_COMBINED_GEOMETRY_UNIFORM_COMPONENTS	./GL/glew.h	/^#define GL_MAX_COMBINED_GEOMETRY_UNIFORM_COMPONENTS /;"	d
GL_MAX_COMBINED_GEOMETRY_UNIFORM_COMPONENTS_EXT	./GL/glew.h	/^#define GL_MAX_COMBINED_GEOMETRY_UNIFORM_COMPONENTS_EXT /;"	d
GL_MAX_COMBINED_GEOMETRY_UNIFORM_COMPONENTS_OES	./GL/glew.h	/^#define GL_MAX_COMBINED_GEOMETRY_UNIFORM_COMPONENTS_OES /;"	d
GL_MAX_COMBINED_IMAGE_UNIFORMS	./GL/glew.h	/^#define GL_MAX_COMBINED_IMAGE_UNIFORMS /;"	d
GL_MAX_COMBINED_IMAGE_UNITS_AND_FRAGMENT_OUTPUTS	./GL/glew.h	/^#define GL_MAX_COMBINED_IMAGE_UNITS_AND_FRAGMENT_OUTPUTS /;"	d
GL_MAX_COMBINED_IMAGE_UNITS_AND_FRAGMENT_OUTPUTS_EXT	./GL/glew.h	/^#define GL_MAX_COMBINED_IMAGE_UNITS_AND_FRAGMENT_OUTPUTS_EXT /;"	d
GL_MAX_COMBINED_MESH_UNIFORM_COMPONENTS_NV	./GL/glew.h	/^#define GL_MAX_COMBINED_MESH_UNIFORM_COMPONENTS_NV /;"	d
GL_MAX_COMBINED_SHADER_OUTPUT_RESOURCES	./GL/glew.h	/^#define GL_MAX_COMBINED_SHADER_OUTPUT_RESOURCES /;"	d
GL_MAX_COMBINED_SHADER_STORAGE_BLOCKS	./GL/glew.h	/^#define GL_MAX_COMBINED_SHADER_STORAGE_BLOCKS /;"	d
GL_MAX_COMBINED_TASK_UNIFORM_COMPONENTS_NV	./GL/glew.h	/^#define GL_MAX_COMBINED_TASK_UNIFORM_COMPONENTS_NV /;"	d
GL_MAX_COMBINED_TESS_CONTROL_UNIFORM_COMPONENTS	./GL/glew.h	/^#define GL_MAX_COMBINED_TESS_CONTROL_UNIFORM_COMPONENTS /;"	d
GL_MAX_COMBINED_TESS_CONTROL_UNIFORM_COMPONENTS_EXT	./GL/glew.h	/^#define GL_MAX_COMBINED_TESS_CONTROL_UNIFORM_COMPONENTS_EXT /;"	d
GL_MAX_COMBINED_TESS_CONTROL_UNIFORM_COMPONENTS_OES	./GL/glew.h	/^#define GL_MAX_COMBINED_TESS_CONTROL_UNIFORM_COMPONENTS_OES /;"	d
GL_MAX_COMBINED_TESS_EVALUATION_UNIFORM_COMPONENTS	./GL/glew.h	/^#define GL_MAX_COMBINED_TESS_EVALUATION_UNIFORM_COMPONENTS /;"	d
GL_MAX_COMBINED_TESS_EVALUATION_UNIFORM_COMPONENTS_EXT	./GL/glew.h	/^#define GL_MAX_COMBINED_TESS_EVALUATION_UNIFORM_COMPONENTS_EXT /;"	d
GL_MAX_COMBINED_TESS_EVALUATION_UNIFORM_COMPONENTS_OES	./GL/glew.h	/^#define GL_MAX_COMBINED_TESS_EVALUATION_UNIFORM_COMPONENTS_OES /;"	d
GL_MAX_COMBINED_TEXTURE_IMAGE_UNITS	./GL/glew.h	/^#define GL_MAX_COMBINED_TEXTURE_IMAGE_UNITS /;"	d
GL_MAX_COMBINED_TEXTURE_IMAGE_UNITS_ARB	./GL/glew.h	/^#define GL_MAX_COMBINED_TEXTURE_IMAGE_UNITS_ARB /;"	d
GL_MAX_COMBINED_UNIFORM_BLOCKS	./GL/glew.h	/^#define GL_MAX_COMBINED_UNIFORM_BLOCKS /;"	d
GL_MAX_COMBINED_VERTEX_UNIFORM_COMPONENTS	./GL/glew.h	/^#define GL_MAX_COMBINED_VERTEX_UNIFORM_COMPONENTS /;"	d
GL_MAX_COMPUTE_ATOMIC_COUNTERS	./GL/glew.h	/^#define GL_MAX_COMPUTE_ATOMIC_COUNTERS /;"	d
GL_MAX_COMPUTE_ATOMIC_COUNTER_BUFFERS	./GL/glew.h	/^#define GL_MAX_COMPUTE_ATOMIC_COUNTER_BUFFERS /;"	d
GL_MAX_COMPUTE_FIXED_GROUP_INVOCATIONS_ARB	./GL/glew.h	/^#define GL_MAX_COMPUTE_FIXED_GROUP_INVOCATIONS_ARB /;"	d
GL_MAX_COMPUTE_FIXED_GROUP_SIZE_ARB	./GL/glew.h	/^#define GL_MAX_COMPUTE_FIXED_GROUP_SIZE_ARB /;"	d
GL_MAX_COMPUTE_IMAGE_UNIFORMS	./GL/glew.h	/^#define GL_MAX_COMPUTE_IMAGE_UNIFORMS /;"	d
GL_MAX_COMPUTE_SHADER_STORAGE_BLOCKS	./GL/glew.h	/^#define GL_MAX_COMPUTE_SHADER_STORAGE_BLOCKS /;"	d
GL_MAX_COMPUTE_SHARED_MEMORY_SIZE	./GL/glew.h	/^#define GL_MAX_COMPUTE_SHARED_MEMORY_SIZE /;"	d
GL_MAX_COMPUTE_TEXTURE_IMAGE_UNITS	./GL/glew.h	/^#define GL_MAX_COMPUTE_TEXTURE_IMAGE_UNITS /;"	d
GL_MAX_COMPUTE_UNIFORM_BLOCKS	./GL/glew.h	/^#define GL_MAX_COMPUTE_UNIFORM_BLOCKS /;"	d
GL_MAX_COMPUTE_UNIFORM_COMPONENTS	./GL/glew.h	/^#define GL_MAX_COMPUTE_UNIFORM_COMPONENTS /;"	d
GL_MAX_COMPUTE_VARIABLE_GROUP_INVOCATIONS_ARB	./GL/glew.h	/^#define GL_MAX_COMPUTE_VARIABLE_GROUP_INVOCATIONS_ARB /;"	d
GL_MAX_COMPUTE_VARIABLE_GROUP_SIZE_ARB	./GL/glew.h	/^#define GL_MAX_COMPUTE_VARIABLE_GROUP_SIZE_ARB /;"	d
GL_MAX_COMPUTE_WORK_GROUP_COUNT	./GL/glew.h	/^#define GL_MAX_COMPUTE_WORK_GROUP_COUNT /;"	d
GL_MAX_COMPUTE_WORK_GROUP_INVOCATIONS	./GL/glew.h	/^#define GL_MAX_COMPUTE_WORK_GROUP_INVOCATIONS /;"	d
GL_MAX_COMPUTE_WORK_GROUP_SIZE	./GL/glew.h	/^#define GL_MAX_COMPUTE_WORK_GROUP_SIZE /;"	d
GL_MAX_CONVOLUTION_HEIGHT	./GL/glew.h	/^#define GL_MAX_CONVOLUTION_HEIGHT /;"	d
GL_MAX_CONVOLUTION_HEIGHT_EXT	./GL/glew.h	/^#define GL_MAX_CONVOLUTION_HEIGHT_EXT /;"	d
GL_MAX_CONVOLUTION_WIDTH	./GL/glew.h	/^#define GL_MAX_CONVOLUTION_WIDTH /;"	d
GL_MAX_CONVOLUTION_WIDTH_EXT	./GL/glew.h	/^#define GL_MAX_CONVOLUTION_WIDTH_EXT /;"	d
GL_MAX_CUBE_MAP_TEXTURE_SIZE	./GL/glew.h	/^#define GL_MAX_CUBE_MAP_TEXTURE_SIZE /;"	d
GL_MAX_CUBE_MAP_TEXTURE_SIZE_ARB	./GL/glew.h	/^#define GL_MAX_CUBE_MAP_TEXTURE_SIZE_ARB /;"	d
GL_MAX_CUBE_MAP_TEXTURE_SIZE_EXT	./GL/glew.h	/^#define GL_MAX_CUBE_MAP_TEXTURE_SIZE_EXT /;"	d
GL_MAX_CUBE_MAP_TEXTURE_SIZE_OES	./GL/glew.h	/^#define GL_MAX_CUBE_MAP_TEXTURE_SIZE_OES /;"	d
GL_MAX_CULL_DISTANCES	./GL/glew.h	/^#define GL_MAX_CULL_DISTANCES /;"	d
GL_MAX_CULL_DISTANCES_EXT	./GL/glew.h	/^#define GL_MAX_CULL_DISTANCES_EXT /;"	d
GL_MAX_DEBUG_GROUP_STACK_DEPTH	./GL/glew.h	/^#define GL_MAX_DEBUG_GROUP_STACK_DEPTH /;"	d
GL_MAX_DEBUG_LOGGED_MESSAGES	./GL/glew.h	/^#define GL_MAX_DEBUG_LOGGED_MESSAGES /;"	d
GL_MAX_DEBUG_LOGGED_MESSAGES_AMD	./GL/glew.h	/^#define GL_MAX_DEBUG_LOGGED_MESSAGES_AMD /;"	d
GL_MAX_DEBUG_LOGGED_MESSAGES_ARB	./GL/glew.h	/^#define GL_MAX_DEBUG_LOGGED_MESSAGES_ARB /;"	d
GL_MAX_DEBUG_MESSAGE_LENGTH	./GL/glew.h	/^#define GL_MAX_DEBUG_MESSAGE_LENGTH /;"	d
GL_MAX_DEBUG_MESSAGE_LENGTH_AMD	./GL/glew.h	/^#define GL_MAX_DEBUG_MESSAGE_LENGTH_AMD /;"	d
GL_MAX_DEBUG_MESSAGE_LENGTH_ARB	./GL/glew.h	/^#define GL_MAX_DEBUG_MESSAGE_LENGTH_ARB /;"	d
GL_MAX_DEEP_3D_TEXTURE_DEPTH_NV	./GL/glew.h	/^#define GL_MAX_DEEP_3D_TEXTURE_DEPTH_NV /;"	d
GL_MAX_DEEP_3D_TEXTURE_WIDTH_HEIGHT_NV	./GL/glew.h	/^#define GL_MAX_DEEP_3D_TEXTURE_WIDTH_HEIGHT_NV /;"	d
GL_MAX_DEPTH	./GL/glew.h	/^#define GL_MAX_DEPTH /;"	d
GL_MAX_DEPTH_STENCIL_FRAMEBUFFER_SAMPLES_AMD	./GL/glew.h	/^#define GL_MAX_DEPTH_STENCIL_FRAMEBUFFER_SAMPLES_AMD /;"	d
GL_MAX_DEPTH_TEXTURE_SAMPLES	./GL/glew.h	/^#define GL_MAX_DEPTH_TEXTURE_SAMPLES /;"	d
GL_MAX_DETACHED_BUFFERS_NV	./GL/glew.h	/^#define GL_MAX_DETACHED_BUFFERS_NV /;"	d
GL_MAX_DETACHED_TEXTURES_NV	./GL/glew.h	/^#define GL_MAX_DETACHED_TEXTURES_NV /;"	d
GL_MAX_DRAW_BUFFERS	./GL/glew.h	/^#define GL_MAX_DRAW_BUFFERS /;"	d
GL_MAX_DRAW_BUFFERS_ARB	./GL/glew.h	/^#define GL_MAX_DRAW_BUFFERS_ARB /;"	d
GL_MAX_DRAW_BUFFERS_ATI	./GL/glew.h	/^#define GL_MAX_DRAW_BUFFERS_ATI /;"	d
GL_MAX_DRAW_BUFFERS_EXT	./GL/glew.h	/^#define GL_MAX_DRAW_BUFFERS_EXT /;"	d
GL_MAX_DRAW_BUFFERS_NV	./GL/glew.h	/^#define GL_MAX_DRAW_BUFFERS_NV /;"	d
GL_MAX_DRAW_MESH_TASKS_COUNT_NV	./GL/glew.h	/^#define GL_MAX_DRAW_MESH_TASKS_COUNT_NV /;"	d
GL_MAX_DUAL_SOURCE_DRAW_BUFFERS	./GL/glew.h	/^#define GL_MAX_DUAL_SOURCE_DRAW_BUFFERS /;"	d
GL_MAX_DUAL_SOURCE_DRAW_BUFFERS_EXT	./GL/glew.h	/^#define GL_MAX_DUAL_SOURCE_DRAW_BUFFERS_EXT /;"	d
GL_MAX_ELEMENTS_INDICES	./GL/glew.h	/^#define GL_MAX_ELEMENTS_INDICES /;"	d
GL_MAX_ELEMENTS_INDICES_EXT	./GL/glew.h	/^#define GL_MAX_ELEMENTS_INDICES_EXT /;"	d
GL_MAX_ELEMENTS_VERTICES	./GL/glew.h	/^#define GL_MAX_ELEMENTS_VERTICES /;"	d
GL_MAX_ELEMENTS_VERTICES_EXT	./GL/glew.h	/^#define GL_MAX_ELEMENTS_VERTICES_EXT /;"	d
GL_MAX_ELEMENT_INDEX	./GL/glew.h	/^#define GL_MAX_ELEMENT_INDEX /;"	d
GL_MAX_EVAL_ORDER	./GL/glew.h	/^#define GL_MAX_EVAL_ORDER /;"	d
GL_MAX_EXT	./GL/glew.h	/^#define GL_MAX_EXT /;"	d
GL_MAX_FFT_WIDTH_SGI	./GL/glew.h	/^#define GL_MAX_FFT_WIDTH_SGI /;"	d
GL_MAX_FOG_LAYERS_POINTS_SGIX	./GL/glew.h	/^#define GL_MAX_FOG_LAYERS_POINTS_SGIX /;"	d
GL_MAX_FRAGMENT_ATOMIC_COUNTERS	./GL/glew.h	/^#define GL_MAX_FRAGMENT_ATOMIC_COUNTERS /;"	d
GL_MAX_FRAGMENT_ATOMIC_COUNTER_BUFFERS	./GL/glew.h	/^#define GL_MAX_FRAGMENT_ATOMIC_COUNTER_BUFFERS /;"	d
GL_MAX_FRAGMENT_BINDABLE_UNIFORMS_EXT	./GL/glew.h	/^#define GL_MAX_FRAGMENT_BINDABLE_UNIFORMS_EXT /;"	d
GL_MAX_FRAGMENT_IMAGE_UNIFORMS	./GL/glew.h	/^#define GL_MAX_FRAGMENT_IMAGE_UNIFORMS /;"	d
GL_MAX_FRAGMENT_INPUT_COMPONENTS	./GL/glew.h	/^#define GL_MAX_FRAGMENT_INPUT_COMPONENTS /;"	d
GL_MAX_FRAGMENT_INTERPOLATION_OFFSET	./GL/glew.h	/^#define GL_MAX_FRAGMENT_INTERPOLATION_OFFSET /;"	d
GL_MAX_FRAGMENT_INTERPOLATION_OFFSET_NV	./GL/glew.h	/^#define GL_MAX_FRAGMENT_INTERPOLATION_OFFSET_NV /;"	d
GL_MAX_FRAGMENT_INTERPOLATION_OFFSET_OES	./GL/glew.h	/^#define GL_MAX_FRAGMENT_INTERPOLATION_OFFSET_OES /;"	d
GL_MAX_FRAGMENT_LIGHTS_EXT	./GL/glew.h	/^#define GL_MAX_FRAGMENT_LIGHTS_EXT /;"	d
GL_MAX_FRAGMENT_PROGRAM_LOCAL_PARAMETERS_NV	./GL/glew.h	/^#define GL_MAX_FRAGMENT_PROGRAM_LOCAL_PARAMETERS_NV /;"	d
GL_MAX_FRAGMENT_SHADER_STORAGE_BLOCKS	./GL/glew.h	/^#define GL_MAX_FRAGMENT_SHADER_STORAGE_BLOCKS /;"	d
GL_MAX_FRAGMENT_UNIFORM_BLOCKS	./GL/glew.h	/^#define GL_MAX_FRAGMENT_UNIFORM_BLOCKS /;"	d
GL_MAX_FRAGMENT_UNIFORM_COMPONENTS	./GL/glew.h	/^#define GL_MAX_FRAGMENT_UNIFORM_COMPONENTS /;"	d
GL_MAX_FRAGMENT_UNIFORM_COMPONENTS_ARB	./GL/glew.h	/^#define GL_MAX_FRAGMENT_UNIFORM_COMPONENTS_ARB /;"	d
GL_MAX_FRAGMENT_UNIFORM_VECTORS	./GL/glew.h	/^#define GL_MAX_FRAGMENT_UNIFORM_VECTORS /;"	d
GL_MAX_FRAMEBUFFER_HEIGHT	./GL/glew.h	/^#define GL_MAX_FRAMEBUFFER_HEIGHT /;"	d
GL_MAX_FRAMEBUFFER_LAYERS	./GL/glew.h	/^#define GL_MAX_FRAMEBUFFER_LAYERS /;"	d
GL_MAX_FRAMEBUFFER_LAYERS_EXT	./GL/glew.h	/^#define GL_MAX_FRAMEBUFFER_LAYERS_EXT /;"	d
GL_MAX_FRAMEBUFFER_LAYERS_OES	./GL/glew.h	/^#define GL_MAX_FRAMEBUFFER_LAYERS_OES /;"	d
GL_MAX_FRAMEBUFFER_SAMPLES	./GL/glew.h	/^#define GL_MAX_FRAMEBUFFER_SAMPLES /;"	d
GL_MAX_FRAMEBUFFER_WIDTH	./GL/glew.h	/^#define GL_MAX_FRAMEBUFFER_WIDTH /;"	d
GL_MAX_GENERAL_COMBINERS_NV	./GL/glew.h	/^#define GL_MAX_GENERAL_COMBINERS_NV /;"	d
GL_MAX_GEOMETRY_ATOMIC_COUNTERS	./GL/glew.h	/^#define GL_MAX_GEOMETRY_ATOMIC_COUNTERS /;"	d
GL_MAX_GEOMETRY_ATOMIC_COUNTERS_EXT	./GL/glew.h	/^#define GL_MAX_GEOMETRY_ATOMIC_COUNTERS_EXT /;"	d
GL_MAX_GEOMETRY_ATOMIC_COUNTERS_OES	./GL/glew.h	/^#define GL_MAX_GEOMETRY_ATOMIC_COUNTERS_OES /;"	d
GL_MAX_GEOMETRY_ATOMIC_COUNTER_BUFFERS	./GL/glew.h	/^#define GL_MAX_GEOMETRY_ATOMIC_COUNTER_BUFFERS /;"	d
GL_MAX_GEOMETRY_ATOMIC_COUNTER_BUFFERS_EXT	./GL/glew.h	/^#define GL_MAX_GEOMETRY_ATOMIC_COUNTER_BUFFERS_EXT /;"	d
GL_MAX_GEOMETRY_ATOMIC_COUNTER_BUFFERS_OES	./GL/glew.h	/^#define GL_MAX_GEOMETRY_ATOMIC_COUNTER_BUFFERS_OES /;"	d
GL_MAX_GEOMETRY_BINDABLE_UNIFORMS_EXT	./GL/glew.h	/^#define GL_MAX_GEOMETRY_BINDABLE_UNIFORMS_EXT /;"	d
GL_MAX_GEOMETRY_IMAGE_UNIFORMS	./GL/glew.h	/^#define GL_MAX_GEOMETRY_IMAGE_UNIFORMS /;"	d
GL_MAX_GEOMETRY_IMAGE_UNIFORMS_EXT	./GL/glew.h	/^#define GL_MAX_GEOMETRY_IMAGE_UNIFORMS_EXT /;"	d
GL_MAX_GEOMETRY_IMAGE_UNIFORMS_OES	./GL/glew.h	/^#define GL_MAX_GEOMETRY_IMAGE_UNIFORMS_OES /;"	d
GL_MAX_GEOMETRY_INPUT_COMPONENTS	./GL/glew.h	/^#define GL_MAX_GEOMETRY_INPUT_COMPONENTS /;"	d
GL_MAX_GEOMETRY_INPUT_COMPONENTS_EXT	./GL/glew.h	/^#define GL_MAX_GEOMETRY_INPUT_COMPONENTS_EXT /;"	d
GL_MAX_GEOMETRY_INPUT_COMPONENTS_OES	./GL/glew.h	/^#define GL_MAX_GEOMETRY_INPUT_COMPONENTS_OES /;"	d
GL_MAX_GEOMETRY_OUTPUT_COMPONENTS	./GL/glew.h	/^#define GL_MAX_GEOMETRY_OUTPUT_COMPONENTS /;"	d
GL_MAX_GEOMETRY_OUTPUT_COMPONENTS_EXT	./GL/glew.h	/^#define GL_MAX_GEOMETRY_OUTPUT_COMPONENTS_EXT /;"	d
GL_MAX_GEOMETRY_OUTPUT_COMPONENTS_OES	./GL/glew.h	/^#define GL_MAX_GEOMETRY_OUTPUT_COMPONENTS_OES /;"	d
GL_MAX_GEOMETRY_OUTPUT_VERTICES	./GL/glew.h	/^#define GL_MAX_GEOMETRY_OUTPUT_VERTICES /;"	d
GL_MAX_GEOMETRY_OUTPUT_VERTICES_ARB	./GL/glew.h	/^#define GL_MAX_GEOMETRY_OUTPUT_VERTICES_ARB /;"	d
GL_MAX_GEOMETRY_OUTPUT_VERTICES_EXT	./GL/glew.h	/^#define GL_MAX_GEOMETRY_OUTPUT_VERTICES_EXT /;"	d
GL_MAX_GEOMETRY_OUTPUT_VERTICES_OES	./GL/glew.h	/^#define GL_MAX_GEOMETRY_OUTPUT_VERTICES_OES /;"	d
GL_MAX_GEOMETRY_PROGRAM_INVOCATIONS_NV	./GL/glew.h	/^#define GL_MAX_GEOMETRY_PROGRAM_INVOCATIONS_NV /;"	d
GL_MAX_GEOMETRY_SHADER_INVOCATIONS	./GL/glew.h	/^#define GL_MAX_GEOMETRY_SHADER_INVOCATIONS /;"	d
GL_MAX_GEOMETRY_SHADER_INVOCATIONS_EXT	./GL/glew.h	/^#define GL_MAX_GEOMETRY_SHADER_INVOCATIONS_EXT /;"	d
GL_MAX_GEOMETRY_SHADER_INVOCATIONS_OES	./GL/glew.h	/^#define GL_MAX_GEOMETRY_SHADER_INVOCATIONS_OES /;"	d
GL_MAX_GEOMETRY_SHADER_STORAGE_BLOCKS	./GL/glew.h	/^#define GL_MAX_GEOMETRY_SHADER_STORAGE_BLOCKS /;"	d
GL_MAX_GEOMETRY_SHADER_STORAGE_BLOCKS_EXT	./GL/glew.h	/^#define GL_MAX_GEOMETRY_SHADER_STORAGE_BLOCKS_EXT /;"	d
GL_MAX_GEOMETRY_SHADER_STORAGE_BLOCKS_OES	./GL/glew.h	/^#define GL_MAX_GEOMETRY_SHADER_STORAGE_BLOCKS_OES /;"	d
GL_MAX_GEOMETRY_TEXTURE_IMAGE_UNITS	./GL/glew.h	/^#define GL_MAX_GEOMETRY_TEXTURE_IMAGE_UNITS /;"	d
GL_MAX_GEOMETRY_TEXTURE_IMAGE_UNITS_ARB	./GL/glew.h	/^#define GL_MAX_GEOMETRY_TEXTURE_IMAGE_UNITS_ARB /;"	d
GL_MAX_GEOMETRY_TEXTURE_IMAGE_UNITS_EXT	./GL/glew.h	/^#define GL_MAX_GEOMETRY_TEXTURE_IMAGE_UNITS_EXT /;"	d
GL_MAX_GEOMETRY_TEXTURE_IMAGE_UNITS_OES	./GL/glew.h	/^#define GL_MAX_GEOMETRY_TEXTURE_IMAGE_UNITS_OES /;"	d
GL_MAX_GEOMETRY_TOTAL_OUTPUT_COMPONENTS	./GL/glew.h	/^#define GL_MAX_GEOMETRY_TOTAL_OUTPUT_COMPONENTS /;"	d
GL_MAX_GEOMETRY_TOTAL_OUTPUT_COMPONENTS_ARB	./GL/glew.h	/^#define GL_MAX_GEOMETRY_TOTAL_OUTPUT_COMPONENTS_ARB /;"	d
GL_MAX_GEOMETRY_TOTAL_OUTPUT_COMPONENTS_EXT	./GL/glew.h	/^#define GL_MAX_GEOMETRY_TOTAL_OUTPUT_COMPONENTS_EXT /;"	d
GL_MAX_GEOMETRY_TOTAL_OUTPUT_COMPONENTS_OES	./GL/glew.h	/^#define GL_MAX_GEOMETRY_TOTAL_OUTPUT_COMPONENTS_OES /;"	d
GL_MAX_GEOMETRY_UNIFORM_BLOCKS	./GL/glew.h	/^#define GL_MAX_GEOMETRY_UNIFORM_BLOCKS /;"	d
GL_MAX_GEOMETRY_UNIFORM_BLOCKS_EXT	./GL/glew.h	/^#define GL_MAX_GEOMETRY_UNIFORM_BLOCKS_EXT /;"	d
GL_MAX_GEOMETRY_UNIFORM_BLOCKS_OES	./GL/glew.h	/^#define GL_MAX_GEOMETRY_UNIFORM_BLOCKS_OES /;"	d
GL_MAX_GEOMETRY_UNIFORM_COMPONENTS	./GL/glew.h	/^#define GL_MAX_GEOMETRY_UNIFORM_COMPONENTS /;"	d
GL_MAX_GEOMETRY_UNIFORM_COMPONENTS_ARB	./GL/glew.h	/^#define GL_MAX_GEOMETRY_UNIFORM_COMPONENTS_ARB /;"	d
GL_MAX_GEOMETRY_UNIFORM_COMPONENTS_EXT	./GL/glew.h	/^#define GL_MAX_GEOMETRY_UNIFORM_COMPONENTS_EXT /;"	d
GL_MAX_GEOMETRY_UNIFORM_COMPONENTS_OES	./GL/glew.h	/^#define GL_MAX_GEOMETRY_UNIFORM_COMPONENTS_OES /;"	d
GL_MAX_GEOMETRY_VARYING_COMPONENTS_ARB	./GL/glew.h	/^#define GL_MAX_GEOMETRY_VARYING_COMPONENTS_ARB /;"	d
GL_MAX_GEOMETRY_VARYING_COMPONENTS_EXT	./GL/glew.h	/^#define GL_MAX_GEOMETRY_VARYING_COMPONENTS_EXT /;"	d
GL_MAX_GREEN_SGIS	./GL/glew.h	/^#define GL_MAX_GREEN_SGIS /;"	d
GL_MAX_HEIGHT	./GL/glew.h	/^#define GL_MAX_HEIGHT /;"	d
GL_MAX_IMAGE_SAMPLES	./GL/glew.h	/^#define GL_MAX_IMAGE_SAMPLES /;"	d
GL_MAX_IMAGE_SAMPLES_EXT	./GL/glew.h	/^#define GL_MAX_IMAGE_SAMPLES_EXT /;"	d
GL_MAX_IMAGE_UNITS	./GL/glew.h	/^#define GL_MAX_IMAGE_UNITS /;"	d
GL_MAX_IMAGE_UNITS_EXT	./GL/glew.h	/^#define GL_MAX_IMAGE_UNITS_EXT /;"	d
GL_MAX_INTEGER_SAMPLES	./GL/glew.h	/^#define GL_MAX_INTEGER_SAMPLES /;"	d
GL_MAX_INTENSITY_SGIS	./GL/glew.h	/^#define GL_MAX_INTENSITY_SGIS /;"	d
GL_MAX_LABEL_LENGTH	./GL/glew.h	/^#define GL_MAX_LABEL_LENGTH /;"	d
GL_MAX_LAYERS	./GL/glew.h	/^#define GL_MAX_LAYERS /;"	d
GL_MAX_LGPU_GPUS_NVX	./GL/glew.h	/^#define GL_MAX_LGPU_GPUS_NVX /;"	d
GL_MAX_LIGHTS	./GL/glew.h	/^#define GL_MAX_LIGHTS /;"	d
GL_MAX_LIST_NESTING	./GL/glew.h	/^#define GL_MAX_LIST_NESTING /;"	d
GL_MAX_LUMINANCE_SGIS	./GL/glew.h	/^#define GL_MAX_LUMINANCE_SGIS /;"	d
GL_MAX_MAP_TESSELLATION_NV	./GL/glew.h	/^#define GL_MAX_MAP_TESSELLATION_NV /;"	d
GL_MAX_MATRIX_PALETTE_STACK_DEPTH_ARB	./GL/glew.h	/^#define GL_MAX_MATRIX_PALETTE_STACK_DEPTH_ARB /;"	d
GL_MAX_MESH_ATOMIC_COUNTERS_NV	./GL/glew.h	/^#define GL_MAX_MESH_ATOMIC_COUNTERS_NV /;"	d
GL_MAX_MESH_ATOMIC_COUNTER_BUFFERS_NV	./GL/glew.h	/^#define GL_MAX_MESH_ATOMIC_COUNTER_BUFFERS_NV /;"	d
GL_MAX_MESH_IMAGE_UNIFORMS_NV	./GL/glew.h	/^#define GL_MAX_MESH_IMAGE_UNIFORMS_NV /;"	d
GL_MAX_MESH_OUTPUT_PRIMITIVES_NV	./GL/glew.h	/^#define GL_MAX_MESH_OUTPUT_PRIMITIVES_NV /;"	d
GL_MAX_MESH_OUTPUT_VERTICES_NV	./GL/glew.h	/^#define GL_MAX_MESH_OUTPUT_VERTICES_NV /;"	d
GL_MAX_MESH_SHADER_STORAGE_BLOCKS_NV	./GL/glew.h	/^#define GL_MAX_MESH_SHADER_STORAGE_BLOCKS_NV /;"	d
GL_MAX_MESH_TEXTURE_IMAGE_UNITS_NV	./GL/glew.h	/^#define GL_MAX_MESH_TEXTURE_IMAGE_UNITS_NV /;"	d
GL_MAX_MESH_TOTAL_MEMORY_SIZE_NV	./GL/glew.h	/^#define GL_MAX_MESH_TOTAL_MEMORY_SIZE_NV /;"	d
GL_MAX_MESH_UNIFORM_BLOCKS_NV	./GL/glew.h	/^#define GL_MAX_MESH_UNIFORM_BLOCKS_NV /;"	d
GL_MAX_MESH_UNIFORM_COMPONENTS_NV	./GL/glew.h	/^#define GL_MAX_MESH_UNIFORM_COMPONENTS_NV /;"	d
GL_MAX_MESH_VIEWS_NV	./GL/glew.h	/^#define GL_MAX_MESH_VIEWS_NV /;"	d
GL_MAX_MESH_WORK_GROUP_INVOCATIONS_NV	./GL/glew.h	/^#define GL_MAX_MESH_WORK_GROUP_INVOCATIONS_NV /;"	d
GL_MAX_MESH_WORK_GROUP_SIZE_NV	./GL/glew.h	/^#define GL_MAX_MESH_WORK_GROUP_SIZE_NV /;"	d
GL_MAX_MIPMAP_ANISOTROPY_SGIX	./GL/glew.h	/^#define GL_MAX_MIPMAP_ANISOTROPY_SGIX /;"	d
GL_MAX_MODELVIEW_STACK_DEPTH	./GL/glew.h	/^#define GL_MAX_MODELVIEW_STACK_DEPTH /;"	d
GL_MAX_MULTISAMPLE_COVERAGE_MODES_NV	./GL/glew.h	/^#define GL_MAX_MULTISAMPLE_COVERAGE_MODES_NV /;"	d
GL_MAX_MULTIVIEW_BUFFERS_EXT	./GL/glew.h	/^#define GL_MAX_MULTIVIEW_BUFFERS_EXT /;"	d
GL_MAX_NAME_LENGTH	./GL/glew.h	/^#define GL_MAX_NAME_LENGTH /;"	d
GL_MAX_NAME_STACK_DEPTH	./GL/glew.h	/^#define GL_MAX_NAME_STACK_DEPTH /;"	d
GL_MAX_NUM_ACTIVE_VARIABLES	./GL/glew.h	/^#define GL_MAX_NUM_ACTIVE_VARIABLES /;"	d
GL_MAX_NUM_COMPATIBLE_SUBROUTINES	./GL/glew.h	/^#define GL_MAX_NUM_COMPATIBLE_SUBROUTINES /;"	d
GL_MAX_OPTIMIZED_VERTEX_SHADER_INSTRUCTIONS_EXT	./GL/glew.h	/^#define GL_MAX_OPTIMIZED_VERTEX_SHADER_INSTRUCTIONS_EXT /;"	d
GL_MAX_OPTIMIZED_VERTEX_SHADER_INVARIANTS_EXT	./GL/glew.h	/^#define GL_MAX_OPTIMIZED_VERTEX_SHADER_INVARIANTS_EXT /;"	d
GL_MAX_OPTIMIZED_VERTEX_SHADER_LOCALS_EXT	./GL/glew.h	/^#define GL_MAX_OPTIMIZED_VERTEX_SHADER_LOCALS_EXT /;"	d
GL_MAX_OPTIMIZED_VERTEX_SHADER_LOCAL_CONSTANTS_EXT	./GL/glew.h	/^#define GL_MAX_OPTIMIZED_VERTEX_SHADER_LOCAL_CONSTANTS_EXT /;"	d
GL_MAX_OPTIMIZED_VERTEX_SHADER_VARIANTS_EXT	./GL/glew.h	/^#define GL_MAX_OPTIMIZED_VERTEX_SHADER_VARIANTS_EXT /;"	d
GL_MAX_PALETTE_MATRICES_ARB	./GL/glew.h	/^#define GL_MAX_PALETTE_MATRICES_ARB /;"	d
GL_MAX_PALETTE_MATRICES_OES	./GL/glew.h	/^#define GL_MAX_PALETTE_MATRICES_OES /;"	d
GL_MAX_PATCH_VERTICES	./GL/glew.h	/^#define GL_MAX_PATCH_VERTICES /;"	d
GL_MAX_PATCH_VERTICES_EXT	./GL/glew.h	/^#define GL_MAX_PATCH_VERTICES_EXT /;"	d
GL_MAX_PATCH_VERTICES_OES	./GL/glew.h	/^#define GL_MAX_PATCH_VERTICES_OES /;"	d
GL_MAX_PIXEL_MAP_TABLE	./GL/glew.h	/^#define GL_MAX_PIXEL_MAP_TABLE /;"	d
GL_MAX_PIXEL_TRANSFORM_2D_STACK_DEPTH_EXT	./GL/glew.h	/^#define GL_MAX_PIXEL_TRANSFORM_2D_STACK_DEPTH_EXT /;"	d
GL_MAX_PN_TRIANGLES_TESSELATION_LEVEL_ATI	./GL/glew.h	/^#define GL_MAX_PN_TRIANGLES_TESSELATION_LEVEL_ATI /;"	d
GL_MAX_PROGRAM_ADDRESS_REGISTERS_ARB	./GL/glew.h	/^#define GL_MAX_PROGRAM_ADDRESS_REGISTERS_ARB /;"	d
GL_MAX_PROGRAM_ALU_INSTRUCTIONS_ARB	./GL/glew.h	/^#define GL_MAX_PROGRAM_ALU_INSTRUCTIONS_ARB /;"	d
GL_MAX_PROGRAM_ATTRIBS_ARB	./GL/glew.h	/^#define GL_MAX_PROGRAM_ATTRIBS_ARB /;"	d
GL_MAX_PROGRAM_ATTRIB_COMPONENTS_NV	./GL/glew.h	/^#define GL_MAX_PROGRAM_ATTRIB_COMPONENTS_NV /;"	d
GL_MAX_PROGRAM_CALL_DEPTH_NV	./GL/glew.h	/^#define GL_MAX_PROGRAM_CALL_DEPTH_NV /;"	d
GL_MAX_PROGRAM_ENV_PARAMETERS_ARB	./GL/glew.h	/^#define GL_MAX_PROGRAM_ENV_PARAMETERS_ARB /;"	d
GL_MAX_PROGRAM_EXEC_INSTRUCTIONS_NV	./GL/glew.h	/^#define GL_MAX_PROGRAM_EXEC_INSTRUCTIONS_NV /;"	d
GL_MAX_PROGRAM_GENERIC_ATTRIBS_NV	./GL/glew.h	/^#define GL_MAX_PROGRAM_GENERIC_ATTRIBS_NV /;"	d
GL_MAX_PROGRAM_GENERIC_RESULTS_NV	./GL/glew.h	/^#define GL_MAX_PROGRAM_GENERIC_RESULTS_NV /;"	d
GL_MAX_PROGRAM_IF_DEPTH_NV	./GL/glew.h	/^#define GL_MAX_PROGRAM_IF_DEPTH_NV /;"	d
GL_MAX_PROGRAM_INSTRUCTIONS_ARB	./GL/glew.h	/^#define GL_MAX_PROGRAM_INSTRUCTIONS_ARB /;"	d
GL_MAX_PROGRAM_LOCAL_PARAMETERS_ARB	./GL/glew.h	/^#define GL_MAX_PROGRAM_LOCAL_PARAMETERS_ARB /;"	d
GL_MAX_PROGRAM_LOOP_COUNT_NV	./GL/glew.h	/^#define GL_MAX_PROGRAM_LOOP_COUNT_NV /;"	d
GL_MAX_PROGRAM_LOOP_DEPTH_NV	./GL/glew.h	/^#define GL_MAX_PROGRAM_LOOP_DEPTH_NV /;"	d
GL_MAX_PROGRAM_MATRICES_ARB	./GL/glew.h	/^#define GL_MAX_PROGRAM_MATRICES_ARB /;"	d
GL_MAX_PROGRAM_MATRIX_STACK_DEPTH_ARB	./GL/glew.h	/^#define GL_MAX_PROGRAM_MATRIX_STACK_DEPTH_ARB /;"	d
GL_MAX_PROGRAM_NATIVE_ADDRESS_REGISTERS_ARB	./GL/glew.h	/^#define GL_MAX_PROGRAM_NATIVE_ADDRESS_REGISTERS_ARB /;"	d
GL_MAX_PROGRAM_NATIVE_ALU_INSTRUCTIONS_ARB	./GL/glew.h	/^#define GL_MAX_PROGRAM_NATIVE_ALU_INSTRUCTIONS_ARB /;"	d
GL_MAX_PROGRAM_NATIVE_ATTRIBS_ARB	./GL/glew.h	/^#define GL_MAX_PROGRAM_NATIVE_ATTRIBS_ARB /;"	d
GL_MAX_PROGRAM_NATIVE_INSTRUCTIONS_ARB	./GL/glew.h	/^#define GL_MAX_PROGRAM_NATIVE_INSTRUCTIONS_ARB /;"	d
GL_MAX_PROGRAM_NATIVE_PARAMETERS_ARB	./GL/glew.h	/^#define GL_MAX_PROGRAM_NATIVE_PARAMETERS_ARB /;"	d
GL_MAX_PROGRAM_NATIVE_TEMPORARIES_ARB	./GL/glew.h	/^#define GL_MAX_PROGRAM_NATIVE_TEMPORARIES_ARB /;"	d
GL_MAX_PROGRAM_NATIVE_TEX_INDIRECTIONS_ARB	./GL/glew.h	/^#define GL_MAX_PROGRAM_NATIVE_TEX_INDIRECTIONS_ARB /;"	d
GL_MAX_PROGRAM_NATIVE_TEX_INSTRUCTIONS_ARB	./GL/glew.h	/^#define GL_MAX_PROGRAM_NATIVE_TEX_INSTRUCTIONS_ARB /;"	d
GL_MAX_PROGRAM_OUTPUT_VERTICES_NV	./GL/glew.h	/^#define GL_MAX_PROGRAM_OUTPUT_VERTICES_NV /;"	d
GL_MAX_PROGRAM_PARAMETERS_ARB	./GL/glew.h	/^#define GL_MAX_PROGRAM_PARAMETERS_ARB /;"	d
GL_MAX_PROGRAM_PARAMETER_BUFFER_BINDINGS_NV	./GL/glew.h	/^#define GL_MAX_PROGRAM_PARAMETER_BUFFER_BINDINGS_NV /;"	d
GL_MAX_PROGRAM_PARAMETER_BUFFER_SIZE_NV	./GL/glew.h	/^#define GL_MAX_PROGRAM_PARAMETER_BUFFER_SIZE_NV /;"	d
GL_MAX_PROGRAM_PATCH_ATTRIBS_NV	./GL/glew.h	/^#define GL_MAX_PROGRAM_PATCH_ATTRIBS_NV /;"	d
GL_MAX_PROGRAM_RESULT_COMPONENTS_NV	./GL/glew.h	/^#define GL_MAX_PROGRAM_RESULT_COMPONENTS_NV /;"	d
GL_MAX_PROGRAM_TEMPORARIES_ARB	./GL/glew.h	/^#define GL_MAX_PROGRAM_TEMPORARIES_ARB /;"	d
GL_MAX_PROGRAM_TEXEL_OFFSET	./GL/glew.h	/^#define GL_MAX_PROGRAM_TEXEL_OFFSET /;"	d
GL_MAX_PROGRAM_TEXEL_OFFSET_NV	./GL/glew.h	/^#define GL_MAX_PROGRAM_TEXEL_OFFSET_NV /;"	d
GL_MAX_PROGRAM_TEXTURE_GATHER_COMPONENTS	./GL/glew.h	/^#define GL_MAX_PROGRAM_TEXTURE_GATHER_COMPONENTS /;"	d
GL_MAX_PROGRAM_TEXTURE_GATHER_COMPONENTS_ARB	./GL/glew.h	/^#define GL_MAX_PROGRAM_TEXTURE_GATHER_COMPONENTS_ARB /;"	d
GL_MAX_PROGRAM_TEXTURE_GATHER_OFFSET	./GL/glew.h	/^#define GL_MAX_PROGRAM_TEXTURE_GATHER_OFFSET /;"	d
GL_MAX_PROGRAM_TEXTURE_GATHER_OFFSET_ARB	./GL/glew.h	/^#define GL_MAX_PROGRAM_TEXTURE_GATHER_OFFSET_ARB /;"	d
GL_MAX_PROGRAM_TEXTURE_GATHER_OFFSET_NV	./GL/glew.h	/^#define GL_MAX_PROGRAM_TEXTURE_GATHER_OFFSET_NV /;"	d
GL_MAX_PROGRAM_TEX_INDIRECTIONS_ARB	./GL/glew.h	/^#define GL_MAX_PROGRAM_TEX_INDIRECTIONS_ARB /;"	d
GL_MAX_PROGRAM_TEX_INSTRUCTIONS_ARB	./GL/glew.h	/^#define GL_MAX_PROGRAM_TEX_INSTRUCTIONS_ARB /;"	d
GL_MAX_PROGRAM_TOTAL_OUTPUT_COMPONENTS_NV	./GL/glew.h	/^#define GL_MAX_PROGRAM_TOTAL_OUTPUT_COMPONENTS_NV /;"	d
GL_MAX_PROJECTION_STACK_DEPTH	./GL/glew.h	/^#define GL_MAX_PROJECTION_STACK_DEPTH /;"	d
GL_MAX_RASTER_SAMPLES_EXT	./GL/glew.h	/^#define GL_MAX_RASTER_SAMPLES_EXT /;"	d
GL_MAX_RATIONAL_EVAL_ORDER_NV	./GL/glew.h	/^#define GL_MAX_RATIONAL_EVAL_ORDER_NV /;"	d
GL_MAX_RECTANGLE_TEXTURE_SIZE	./GL/glew.h	/^#define GL_MAX_RECTANGLE_TEXTURE_SIZE /;"	d
GL_MAX_RECTANGLE_TEXTURE_SIZE_ARB	./GL/glew.h	/^#define GL_MAX_RECTANGLE_TEXTURE_SIZE_ARB /;"	d
GL_MAX_RECTANGLE_TEXTURE_SIZE_EXT	./GL/glew.h	/^#define GL_MAX_RECTANGLE_TEXTURE_SIZE_EXT /;"	d
GL_MAX_RECTANGLE_TEXTURE_SIZE_NV	./GL/glew.h	/^#define GL_MAX_RECTANGLE_TEXTURE_SIZE_NV /;"	d
GL_MAX_RED_SGIS	./GL/glew.h	/^#define GL_MAX_RED_SGIS /;"	d
GL_MAX_RENDERBUFFER_SIZE	./GL/glew.h	/^#define GL_MAX_RENDERBUFFER_SIZE /;"	d
GL_MAX_RENDERBUFFER_SIZE_EXT	./GL/glew.h	/^#define GL_MAX_RENDERBUFFER_SIZE_EXT /;"	d
GL_MAX_RENDERBUFFER_SIZE_OES	./GL/glew.h	/^#define GL_MAX_RENDERBUFFER_SIZE_OES /;"	d
GL_MAX_SAMPLES	./GL/glew.h	/^#define GL_MAX_SAMPLES /;"	d
GL_MAX_SAMPLES_ANGLE	./GL/glew.h	/^#define GL_MAX_SAMPLES_ANGLE /;"	d
GL_MAX_SAMPLES_APPLE	./GL/glew.h	/^#define GL_MAX_SAMPLES_APPLE /;"	d
GL_MAX_SAMPLES_EXT	./GL/glew.h	/^#define GL_MAX_SAMPLES_EXT /;"	d
GL_MAX_SAMPLES_IMG	./GL/glew.h	/^#define GL_MAX_SAMPLES_IMG /;"	d
GL_MAX_SAMPLES_NV	./GL/glew.h	/^#define GL_MAX_SAMPLES_NV /;"	d
GL_MAX_SAMPLE_MASK_WORDS	./GL/glew.h	/^#define GL_MAX_SAMPLE_MASK_WORDS /;"	d
GL_MAX_SAMPLE_MASK_WORDS_NV	./GL/glew.h	/^#define GL_MAX_SAMPLE_MASK_WORDS_NV /;"	d
GL_MAX_SERVER_WAIT_TIMEOUT	./GL/glew.h	/^#define GL_MAX_SERVER_WAIT_TIMEOUT /;"	d
GL_MAX_SERVER_WAIT_TIMEOUT_APPLE	./GL/glew.h	/^#define GL_MAX_SERVER_WAIT_TIMEOUT_APPLE /;"	d
GL_MAX_SHADER_BUFFER_ADDRESS_NV	./GL/glew.h	/^#define GL_MAX_SHADER_BUFFER_ADDRESS_NV /;"	d
GL_MAX_SHADER_COMBINED_LOCAL_STORAGE_FAST_SIZE_EXT	./GL/glew.h	/^#define GL_MAX_SHADER_COMBINED_LOCAL_STORAGE_FAST_SIZE_EXT /;"	d
GL_MAX_SHADER_COMBINED_LOCAL_STORAGE_SIZE_EXT	./GL/glew.h	/^#define GL_MAX_SHADER_COMBINED_LOCAL_STORAGE_SIZE_EXT /;"	d
GL_MAX_SHADER_COMPILER_THREADS_ARB	./GL/glew.h	/^#define GL_MAX_SHADER_COMPILER_THREADS_ARB /;"	d
GL_MAX_SHADER_COMPILER_THREADS_KHR	./GL/glew.h	/^#define GL_MAX_SHADER_COMPILER_THREADS_KHR /;"	d
GL_MAX_SHADER_PIXEL_LOCAL_STORAGE_FAST_SIZE_EXT	./GL/glew.h	/^#define GL_MAX_SHADER_PIXEL_LOCAL_STORAGE_FAST_SIZE_EXT /;"	d
GL_MAX_SHADER_PIXEL_LOCAL_STORAGE_SIZE_EXT	./GL/glew.h	/^#define GL_MAX_SHADER_PIXEL_LOCAL_STORAGE_SIZE_EXT /;"	d
GL_MAX_SHADER_STORAGE_BLOCK_SIZE	./GL/glew.h	/^#define GL_MAX_SHADER_STORAGE_BLOCK_SIZE /;"	d
GL_MAX_SHADER_STORAGE_BUFFER_BINDINGS	./GL/glew.h	/^#define GL_MAX_SHADER_STORAGE_BUFFER_BINDINGS /;"	d
GL_MAX_SHADER_SUBSAMPLED_IMAGE_UNITS_QCOM	./GL/glew.h	/^#define GL_MAX_SHADER_SUBSAMPLED_IMAGE_UNITS_QCOM /;"	d
GL_MAX_SHININESS_NV	./GL/glew.h	/^#define GL_MAX_SHININESS_NV /;"	d
GL_MAX_SPARSE_3D_TEXTURE_SIZE_AMD	./GL/glew.h	/^#define GL_MAX_SPARSE_3D_TEXTURE_SIZE_AMD /;"	d
GL_MAX_SPARSE_3D_TEXTURE_SIZE_ARB	./GL/glew.h	/^#define GL_MAX_SPARSE_3D_TEXTURE_SIZE_ARB /;"	d
GL_MAX_SPARSE_3D_TEXTURE_SIZE_EXT	./GL/glew.h	/^#define GL_MAX_SPARSE_3D_TEXTURE_SIZE_EXT /;"	d
GL_MAX_SPARSE_ARRAY_TEXTURE_LAYERS	./GL/glew.h	/^#define GL_MAX_SPARSE_ARRAY_TEXTURE_LAYERS /;"	d
GL_MAX_SPARSE_ARRAY_TEXTURE_LAYERS_ARB	./GL/glew.h	/^#define GL_MAX_SPARSE_ARRAY_TEXTURE_LAYERS_ARB /;"	d
GL_MAX_SPARSE_ARRAY_TEXTURE_LAYERS_EXT	./GL/glew.h	/^#define GL_MAX_SPARSE_ARRAY_TEXTURE_LAYERS_EXT /;"	d
GL_MAX_SPARSE_TEXTURE_SIZE_AMD	./GL/glew.h	/^#define GL_MAX_SPARSE_TEXTURE_SIZE_AMD /;"	d
GL_MAX_SPARSE_TEXTURE_SIZE_ARB	./GL/glew.h	/^#define GL_MAX_SPARSE_TEXTURE_SIZE_ARB /;"	d
GL_MAX_SPARSE_TEXTURE_SIZE_EXT	./GL/glew.h	/^#define GL_MAX_SPARSE_TEXTURE_SIZE_EXT /;"	d
GL_MAX_SPOT_EXPONENT_NV	./GL/glew.h	/^#define GL_MAX_SPOT_EXPONENT_NV /;"	d
GL_MAX_SUBPIXEL_PRECISION_BIAS_BITS_NV	./GL/glew.h	/^#define GL_MAX_SUBPIXEL_PRECISION_BIAS_BITS_NV /;"	d
GL_MAX_SUBROUTINES	./GL/glew.h	/^#define GL_MAX_SUBROUTINES /;"	d
GL_MAX_SUBROUTINE_UNIFORM_LOCATIONS	./GL/glew.h	/^#define GL_MAX_SUBROUTINE_UNIFORM_LOCATIONS /;"	d
GL_MAX_TASK_ATOMIC_COUNTERS_NV	./GL/glew.h	/^#define GL_MAX_TASK_ATOMIC_COUNTERS_NV /;"	d
GL_MAX_TASK_ATOMIC_COUNTER_BUFFERS_NV	./GL/glew.h	/^#define GL_MAX_TASK_ATOMIC_COUNTER_BUFFERS_NV /;"	d
GL_MAX_TASK_IMAGE_UNIFORMS_NV	./GL/glew.h	/^#define GL_MAX_TASK_IMAGE_UNIFORMS_NV /;"	d
GL_MAX_TASK_OUTPUT_COUNT_NV	./GL/glew.h	/^#define GL_MAX_TASK_OUTPUT_COUNT_NV /;"	d
GL_MAX_TASK_SHADER_STORAGE_BLOCKS_NV	./GL/glew.h	/^#define GL_MAX_TASK_SHADER_STORAGE_BLOCKS_NV /;"	d
GL_MAX_TASK_TEXTURE_IMAGE_UNITS_NV	./GL/glew.h	/^#define GL_MAX_TASK_TEXTURE_IMAGE_UNITS_NV /;"	d
GL_MAX_TASK_TOTAL_MEMORY_SIZE_NV	./GL/glew.h	/^#define GL_MAX_TASK_TOTAL_MEMORY_SIZE_NV /;"	d
GL_MAX_TASK_UNIFORM_BLOCKS_NV	./GL/glew.h	/^#define GL_MAX_TASK_UNIFORM_BLOCKS_NV /;"	d
GL_MAX_TASK_UNIFORM_COMPONENTS_NV	./GL/glew.h	/^#define GL_MAX_TASK_UNIFORM_COMPONENTS_NV /;"	d
GL_MAX_TASK_WORK_GROUP_INVOCATIONS_NV	./GL/glew.h	/^#define GL_MAX_TASK_WORK_GROUP_INVOCATIONS_NV /;"	d
GL_MAX_TASK_WORK_GROUP_SIZE_NV	./GL/glew.h	/^#define GL_MAX_TASK_WORK_GROUP_SIZE_NV /;"	d
GL_MAX_TESS_CONTROL_ATOMIC_COUNTERS	./GL/glew.h	/^#define GL_MAX_TESS_CONTROL_ATOMIC_COUNTERS /;"	d
GL_MAX_TESS_CONTROL_ATOMIC_COUNTERS_EXT	./GL/glew.h	/^#define GL_MAX_TESS_CONTROL_ATOMIC_COUNTERS_EXT /;"	d
GL_MAX_TESS_CONTROL_ATOMIC_COUNTERS_OES	./GL/glew.h	/^#define GL_MAX_TESS_CONTROL_ATOMIC_COUNTERS_OES /;"	d
GL_MAX_TESS_CONTROL_ATOMIC_COUNTER_BUFFERS	./GL/glew.h	/^#define GL_MAX_TESS_CONTROL_ATOMIC_COUNTER_BUFFERS /;"	d
GL_MAX_TESS_CONTROL_ATOMIC_COUNTER_BUFFERS_EXT	./GL/glew.h	/^#define GL_MAX_TESS_CONTROL_ATOMIC_COUNTER_BUFFERS_EXT /;"	d
GL_MAX_TESS_CONTROL_ATOMIC_COUNTER_BUFFERS_OES	./GL/glew.h	/^#define GL_MAX_TESS_CONTROL_ATOMIC_COUNTER_BUFFERS_OES /;"	d
GL_MAX_TESS_CONTROL_IMAGE_UNIFORMS	./GL/glew.h	/^#define GL_MAX_TESS_CONTROL_IMAGE_UNIFORMS /;"	d
GL_MAX_TESS_CONTROL_IMAGE_UNIFORMS_EXT	./GL/glew.h	/^#define GL_MAX_TESS_CONTROL_IMAGE_UNIFORMS_EXT /;"	d
GL_MAX_TESS_CONTROL_IMAGE_UNIFORMS_OES	./GL/glew.h	/^#define GL_MAX_TESS_CONTROL_IMAGE_UNIFORMS_OES /;"	d
GL_MAX_TESS_CONTROL_INPUT_COMPONENTS	./GL/glew.h	/^#define GL_MAX_TESS_CONTROL_INPUT_COMPONENTS /;"	d
GL_MAX_TESS_CONTROL_INPUT_COMPONENTS_EXT	./GL/glew.h	/^#define GL_MAX_TESS_CONTROL_INPUT_COMPONENTS_EXT /;"	d
GL_MAX_TESS_CONTROL_INPUT_COMPONENTS_OES	./GL/glew.h	/^#define GL_MAX_TESS_CONTROL_INPUT_COMPONENTS_OES /;"	d
GL_MAX_TESS_CONTROL_OUTPUT_COMPONENTS	./GL/glew.h	/^#define GL_MAX_TESS_CONTROL_OUTPUT_COMPONENTS /;"	d
GL_MAX_TESS_CONTROL_OUTPUT_COMPONENTS_EXT	./GL/glew.h	/^#define GL_MAX_TESS_CONTROL_OUTPUT_COMPONENTS_EXT /;"	d
GL_MAX_TESS_CONTROL_OUTPUT_COMPONENTS_OES	./GL/glew.h	/^#define GL_MAX_TESS_CONTROL_OUTPUT_COMPONENTS_OES /;"	d
GL_MAX_TESS_CONTROL_SHADER_STORAGE_BLOCKS	./GL/glew.h	/^#define GL_MAX_TESS_CONTROL_SHADER_STORAGE_BLOCKS /;"	d
GL_MAX_TESS_CONTROL_SHADER_STORAGE_BLOCKS_EXT	./GL/glew.h	/^#define GL_MAX_TESS_CONTROL_SHADER_STORAGE_BLOCKS_EXT /;"	d
GL_MAX_TESS_CONTROL_SHADER_STORAGE_BLOCKS_OES	./GL/glew.h	/^#define GL_MAX_TESS_CONTROL_SHADER_STORAGE_BLOCKS_OES /;"	d
GL_MAX_TESS_CONTROL_TEXTURE_IMAGE_UNITS	./GL/glew.h	/^#define GL_MAX_TESS_CONTROL_TEXTURE_IMAGE_UNITS /;"	d
GL_MAX_TESS_CONTROL_TEXTURE_IMAGE_UNITS_EXT	./GL/glew.h	/^#define GL_MAX_TESS_CONTROL_TEXTURE_IMAGE_UNITS_EXT /;"	d
GL_MAX_TESS_CONTROL_TEXTURE_IMAGE_UNITS_OES	./GL/glew.h	/^#define GL_MAX_TESS_CONTROL_TEXTURE_IMAGE_UNITS_OES /;"	d
GL_MAX_TESS_CONTROL_TOTAL_OUTPUT_COMPONENTS	./GL/glew.h	/^#define GL_MAX_TESS_CONTROL_TOTAL_OUTPUT_COMPONENTS /;"	d
GL_MAX_TESS_CONTROL_TOTAL_OUTPUT_COMPONENTS_EXT	./GL/glew.h	/^#define GL_MAX_TESS_CONTROL_TOTAL_OUTPUT_COMPONENTS_EXT /;"	d
GL_MAX_TESS_CONTROL_TOTAL_OUTPUT_COMPONENTS_OES	./GL/glew.h	/^#define GL_MAX_TESS_CONTROL_TOTAL_OUTPUT_COMPONENTS_OES /;"	d
GL_MAX_TESS_CONTROL_UNIFORM_BLOCKS	./GL/glew.h	/^#define GL_MAX_TESS_CONTROL_UNIFORM_BLOCKS /;"	d
GL_MAX_TESS_CONTROL_UNIFORM_BLOCKS_EXT	./GL/glew.h	/^#define GL_MAX_TESS_CONTROL_UNIFORM_BLOCKS_EXT /;"	d
GL_MAX_TESS_CONTROL_UNIFORM_BLOCKS_OES	./GL/glew.h	/^#define GL_MAX_TESS_CONTROL_UNIFORM_BLOCKS_OES /;"	d
GL_MAX_TESS_CONTROL_UNIFORM_COMPONENTS	./GL/glew.h	/^#define GL_MAX_TESS_CONTROL_UNIFORM_COMPONENTS /;"	d
GL_MAX_TESS_CONTROL_UNIFORM_COMPONENTS_EXT	./GL/glew.h	/^#define GL_MAX_TESS_CONTROL_UNIFORM_COMPONENTS_EXT /;"	d
GL_MAX_TESS_CONTROL_UNIFORM_COMPONENTS_OES	./GL/glew.h	/^#define GL_MAX_TESS_CONTROL_UNIFORM_COMPONENTS_OES /;"	d
GL_MAX_TESS_EVALUATION_ATOMIC_COUNTERS	./GL/glew.h	/^#define GL_MAX_TESS_EVALUATION_ATOMIC_COUNTERS /;"	d
GL_MAX_TESS_EVALUATION_ATOMIC_COUNTERS_EXT	./GL/glew.h	/^#define GL_MAX_TESS_EVALUATION_ATOMIC_COUNTERS_EXT /;"	d
GL_MAX_TESS_EVALUATION_ATOMIC_COUNTERS_OES	./GL/glew.h	/^#define GL_MAX_TESS_EVALUATION_ATOMIC_COUNTERS_OES /;"	d
GL_MAX_TESS_EVALUATION_ATOMIC_COUNTER_BUFFERS	./GL/glew.h	/^#define GL_MAX_TESS_EVALUATION_ATOMIC_COUNTER_BUFFERS /;"	d
GL_MAX_TESS_EVALUATION_ATOMIC_COUNTER_BUFFERS_EXT	./GL/glew.h	/^#define GL_MAX_TESS_EVALUATION_ATOMIC_COUNTER_BUFFERS_EXT /;"	d
GL_MAX_TESS_EVALUATION_ATOMIC_COUNTER_BUFFERS_OES	./GL/glew.h	/^#define GL_MAX_TESS_EVALUATION_ATOMIC_COUNTER_BUFFERS_OES /;"	d
GL_MAX_TESS_EVALUATION_IMAGE_UNIFORMS	./GL/glew.h	/^#define GL_MAX_TESS_EVALUATION_IMAGE_UNIFORMS /;"	d
GL_MAX_TESS_EVALUATION_IMAGE_UNIFORMS_EXT	./GL/glew.h	/^#define GL_MAX_TESS_EVALUATION_IMAGE_UNIFORMS_EXT /;"	d
GL_MAX_TESS_EVALUATION_IMAGE_UNIFORMS_OES	./GL/glew.h	/^#define GL_MAX_TESS_EVALUATION_IMAGE_UNIFORMS_OES /;"	d
GL_MAX_TESS_EVALUATION_INPUT_COMPONENTS	./GL/glew.h	/^#define GL_MAX_TESS_EVALUATION_INPUT_COMPONENTS /;"	d
GL_MAX_TESS_EVALUATION_INPUT_COMPONENTS_EXT	./GL/glew.h	/^#define GL_MAX_TESS_EVALUATION_INPUT_COMPONENTS_EXT /;"	d
GL_MAX_TESS_EVALUATION_INPUT_COMPONENTS_OES	./GL/glew.h	/^#define GL_MAX_TESS_EVALUATION_INPUT_COMPONENTS_OES /;"	d
GL_MAX_TESS_EVALUATION_OUTPUT_COMPONENTS	./GL/glew.h	/^#define GL_MAX_TESS_EVALUATION_OUTPUT_COMPONENTS /;"	d
GL_MAX_TESS_EVALUATION_OUTPUT_COMPONENTS_EXT	./GL/glew.h	/^#define GL_MAX_TESS_EVALUATION_OUTPUT_COMPONENTS_EXT /;"	d
GL_MAX_TESS_EVALUATION_OUTPUT_COMPONENTS_OES	./GL/glew.h	/^#define GL_MAX_TESS_EVALUATION_OUTPUT_COMPONENTS_OES /;"	d
GL_MAX_TESS_EVALUATION_SHADER_STORAGE_BLOCKS	./GL/glew.h	/^#define GL_MAX_TESS_EVALUATION_SHADER_STORAGE_BLOCKS /;"	d
GL_MAX_TESS_EVALUATION_SHADER_STORAGE_BLOCKS_EXT	./GL/glew.h	/^#define GL_MAX_TESS_EVALUATION_SHADER_STORAGE_BLOCKS_EXT /;"	d
GL_MAX_TESS_EVALUATION_SHADER_STORAGE_BLOCKS_OES	./GL/glew.h	/^#define GL_MAX_TESS_EVALUATION_SHADER_STORAGE_BLOCKS_OES /;"	d
GL_MAX_TESS_EVALUATION_TEXTURE_IMAGE_UNITS	./GL/glew.h	/^#define GL_MAX_TESS_EVALUATION_TEXTURE_IMAGE_UNITS /;"	d
GL_MAX_TESS_EVALUATION_TEXTURE_IMAGE_UNITS_EXT	./GL/glew.h	/^#define GL_MAX_TESS_EVALUATION_TEXTURE_IMAGE_UNITS_EXT /;"	d
GL_MAX_TESS_EVALUATION_TEXTURE_IMAGE_UNITS_OES	./GL/glew.h	/^#define GL_MAX_TESS_EVALUATION_TEXTURE_IMAGE_UNITS_OES /;"	d
GL_MAX_TESS_EVALUATION_UNIFORM_BLOCKS	./GL/glew.h	/^#define GL_MAX_TESS_EVALUATION_UNIFORM_BLOCKS /;"	d
GL_MAX_TESS_EVALUATION_UNIFORM_BLOCKS_EXT	./GL/glew.h	/^#define GL_MAX_TESS_EVALUATION_UNIFORM_BLOCKS_EXT /;"	d
GL_MAX_TESS_EVALUATION_UNIFORM_BLOCKS_OES	./GL/glew.h	/^#define GL_MAX_TESS_EVALUATION_UNIFORM_BLOCKS_OES /;"	d
GL_MAX_TESS_EVALUATION_UNIFORM_COMPONENTS	./GL/glew.h	/^#define GL_MAX_TESS_EVALUATION_UNIFORM_COMPONENTS /;"	d
GL_MAX_TESS_EVALUATION_UNIFORM_COMPONENTS_EXT	./GL/glew.h	/^#define GL_MAX_TESS_EVALUATION_UNIFORM_COMPONENTS_EXT /;"	d
GL_MAX_TESS_EVALUATION_UNIFORM_COMPONENTS_OES	./GL/glew.h	/^#define GL_MAX_TESS_EVALUATION_UNIFORM_COMPONENTS_OES /;"	d
GL_MAX_TESS_GEN_LEVEL	./GL/glew.h	/^#define GL_MAX_TESS_GEN_LEVEL /;"	d
GL_MAX_TESS_GEN_LEVEL_EXT	./GL/glew.h	/^#define GL_MAX_TESS_GEN_LEVEL_EXT /;"	d
GL_MAX_TESS_GEN_LEVEL_OES	./GL/glew.h	/^#define GL_MAX_TESS_GEN_LEVEL_OES /;"	d
GL_MAX_TESS_PATCH_COMPONENTS	./GL/glew.h	/^#define GL_MAX_TESS_PATCH_COMPONENTS /;"	d
GL_MAX_TESS_PATCH_COMPONENTS_EXT	./GL/glew.h	/^#define GL_MAX_TESS_PATCH_COMPONENTS_EXT /;"	d
GL_MAX_TESS_PATCH_COMPONENTS_OES	./GL/glew.h	/^#define GL_MAX_TESS_PATCH_COMPONENTS_OES /;"	d
GL_MAX_TEXTURES_SGIS	./GL/glew.h	/^#define GL_MAX_TEXTURES_SGIS /;"	d
GL_MAX_TEXTURE_BUFFER_SIZE	./GL/glew.h	/^#define GL_MAX_TEXTURE_BUFFER_SIZE /;"	d
GL_MAX_TEXTURE_BUFFER_SIZE_ARB	./GL/glew.h	/^#define GL_MAX_TEXTURE_BUFFER_SIZE_ARB /;"	d
GL_MAX_TEXTURE_BUFFER_SIZE_EXT	./GL/glew.h	/^#define GL_MAX_TEXTURE_BUFFER_SIZE_EXT /;"	d
GL_MAX_TEXTURE_BUFFER_SIZE_OES	./GL/glew.h	/^#define GL_MAX_TEXTURE_BUFFER_SIZE_OES /;"	d
GL_MAX_TEXTURE_COORDS	./GL/glew.h	/^#define GL_MAX_TEXTURE_COORDS /;"	d
GL_MAX_TEXTURE_COORDS_ARB	./GL/glew.h	/^#define GL_MAX_TEXTURE_COORDS_ARB /;"	d
GL_MAX_TEXTURE_COORDS_NV	./GL/glew.h	/^#define GL_MAX_TEXTURE_COORDS_NV /;"	d
GL_MAX_TEXTURE_COORD_SETS_SGIS	./GL/glew.h	/^#define GL_MAX_TEXTURE_COORD_SETS_SGIS /;"	d
GL_MAX_TEXTURE_IMAGE_UNITS	./GL/glew.h	/^#define GL_MAX_TEXTURE_IMAGE_UNITS /;"	d
GL_MAX_TEXTURE_IMAGE_UNITS_ARB	./GL/glew.h	/^#define GL_MAX_TEXTURE_IMAGE_UNITS_ARB /;"	d
GL_MAX_TEXTURE_IMAGE_UNITS_NV	./GL/glew.h	/^#define GL_MAX_TEXTURE_IMAGE_UNITS_NV /;"	d
GL_MAX_TEXTURE_LOD_BIAS	./GL/glew.h	/^#define GL_MAX_TEXTURE_LOD_BIAS /;"	d
GL_MAX_TEXTURE_LOD_BIAS_EXT	./GL/glew.h	/^#define GL_MAX_TEXTURE_LOD_BIAS_EXT /;"	d
GL_MAX_TEXTURE_MAX_ANISOTROPY	./GL/glew.h	/^#define GL_MAX_TEXTURE_MAX_ANISOTROPY /;"	d
GL_MAX_TEXTURE_MAX_ANISOTROPY_EXT	./GL/glew.h	/^#define GL_MAX_TEXTURE_MAX_ANISOTROPY_EXT /;"	d
GL_MAX_TEXTURE_SIZE	./GL/glew.h	/^#define GL_MAX_TEXTURE_SIZE /;"	d
GL_MAX_TEXTURE_STACK_DEPTH	./GL/glew.h	/^#define GL_MAX_TEXTURE_STACK_DEPTH /;"	d
GL_MAX_TEXTURE_UNITS	./GL/glew.h	/^#define GL_MAX_TEXTURE_UNITS /;"	d
GL_MAX_TEXTURE_UNITS_ARB	./GL/glew.h	/^#define GL_MAX_TEXTURE_UNITS_ARB /;"	d
GL_MAX_TRACK_MATRICES_NV	./GL/glew.h	/^#define GL_MAX_TRACK_MATRICES_NV /;"	d
GL_MAX_TRACK_MATRIX_STACK_DEPTH_NV	./GL/glew.h	/^#define GL_MAX_TRACK_MATRIX_STACK_DEPTH_NV /;"	d
GL_MAX_TRANSFORM_FEEDBACK_BUFFERS	./GL/glew.h	/^#define GL_MAX_TRANSFORM_FEEDBACK_BUFFERS /;"	d
GL_MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS	./GL/glew.h	/^#define GL_MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS /;"	d
GL_MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS_EXT	./GL/glew.h	/^#define GL_MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS_EXT /;"	d
GL_MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS_NV	./GL/glew.h	/^#define GL_MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS_NV /;"	d
GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS	./GL/glew.h	/^#define GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS /;"	d
GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS_EXT	./GL/glew.h	/^#define GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS_EXT /;"	d
GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS_NV	./GL/glew.h	/^#define GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS_NV /;"	d
GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS	./GL/glew.h	/^#define GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS /;"	d
GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS_EXT	./GL/glew.h	/^#define GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS_EXT /;"	d
GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS_NV	./GL/glew.h	/^#define GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS_NV /;"	d
GL_MAX_UNIFORM_BLOCK_SIZE	./GL/glew.h	/^#define GL_MAX_UNIFORM_BLOCK_SIZE /;"	d
GL_MAX_UNIFORM_BUFFER_BINDINGS	./GL/glew.h	/^#define GL_MAX_UNIFORM_BUFFER_BINDINGS /;"	d
GL_MAX_UNIFORM_LOCATIONS	./GL/glew.h	/^#define GL_MAX_UNIFORM_LOCATIONS /;"	d
GL_MAX_VARYING_COMPONENTS	./GL/glew.h	/^#define GL_MAX_VARYING_COMPONENTS /;"	d
GL_MAX_VARYING_COMPONENTS_EXT	./GL/glew.h	/^#define GL_MAX_VARYING_COMPONENTS_EXT /;"	d
GL_MAX_VARYING_FLOATS	./GL/glew.h	/^#define GL_MAX_VARYING_FLOATS /;"	d
GL_MAX_VARYING_FLOATS_ARB	./GL/glew.h	/^#define GL_MAX_VARYING_FLOATS_ARB /;"	d
GL_MAX_VARYING_VECTORS	./GL/glew.h	/^#define GL_MAX_VARYING_VECTORS /;"	d
GL_MAX_VERTEX_ARRAY_RANGE_ELEMENT_APPLE	./GL/glew.h	/^#define GL_MAX_VERTEX_ARRAY_RANGE_ELEMENT_APPLE /;"	d
GL_MAX_VERTEX_ARRAY_RANGE_ELEMENT_NV	./GL/glew.h	/^#define GL_MAX_VERTEX_ARRAY_RANGE_ELEMENT_NV /;"	d
GL_MAX_VERTEX_ATOMIC_COUNTERS	./GL/glew.h	/^#define GL_MAX_VERTEX_ATOMIC_COUNTERS /;"	d
GL_MAX_VERTEX_ATOMIC_COUNTER_BUFFERS	./GL/glew.h	/^#define GL_MAX_VERTEX_ATOMIC_COUNTER_BUFFERS /;"	d
GL_MAX_VERTEX_ATTRIBS	./GL/glew.h	/^#define GL_MAX_VERTEX_ATTRIBS /;"	d
GL_MAX_VERTEX_ATTRIBS_ARB	./GL/glew.h	/^#define GL_MAX_VERTEX_ATTRIBS_ARB /;"	d
GL_MAX_VERTEX_ATTRIB_BINDINGS	./GL/glew.h	/^#define GL_MAX_VERTEX_ATTRIB_BINDINGS /;"	d
GL_MAX_VERTEX_ATTRIB_RELATIVE_OFFSET	./GL/glew.h	/^#define GL_MAX_VERTEX_ATTRIB_RELATIVE_OFFSET /;"	d
GL_MAX_VERTEX_ATTRIB_STRIDE	./GL/glew.h	/^#define GL_MAX_VERTEX_ATTRIB_STRIDE /;"	d
GL_MAX_VERTEX_BINDABLE_UNIFORMS_EXT	./GL/glew.h	/^#define GL_MAX_VERTEX_BINDABLE_UNIFORMS_EXT /;"	d
GL_MAX_VERTEX_HINT_PGI	./GL/glew.h	/^#define GL_MAX_VERTEX_HINT_PGI /;"	d
GL_MAX_VERTEX_IMAGE_UNIFORMS	./GL/glew.h	/^#define GL_MAX_VERTEX_IMAGE_UNIFORMS /;"	d
GL_MAX_VERTEX_OUTPUT_COMPONENTS	./GL/glew.h	/^#define GL_MAX_VERTEX_OUTPUT_COMPONENTS /;"	d
GL_MAX_VERTEX_SHADER_INSTRUCTIONS_EXT	./GL/glew.h	/^#define GL_MAX_VERTEX_SHADER_INSTRUCTIONS_EXT /;"	d
GL_MAX_VERTEX_SHADER_INVARIANTS_EXT	./GL/glew.h	/^#define GL_MAX_VERTEX_SHADER_INVARIANTS_EXT /;"	d
GL_MAX_VERTEX_SHADER_LOCALS_EXT	./GL/glew.h	/^#define GL_MAX_VERTEX_SHADER_LOCALS_EXT /;"	d
GL_MAX_VERTEX_SHADER_LOCAL_CONSTANTS_EXT	./GL/glew.h	/^#define GL_MAX_VERTEX_SHADER_LOCAL_CONSTANTS_EXT /;"	d
GL_MAX_VERTEX_SHADER_STORAGE_BLOCKS	./GL/glew.h	/^#define GL_MAX_VERTEX_SHADER_STORAGE_BLOCKS /;"	d
GL_MAX_VERTEX_SHADER_VARIANTS_EXT	./GL/glew.h	/^#define GL_MAX_VERTEX_SHADER_VARIANTS_EXT /;"	d
GL_MAX_VERTEX_STREAMS	./GL/glew.h	/^#define GL_MAX_VERTEX_STREAMS /;"	d
GL_MAX_VERTEX_STREAMS_ATI	./GL/glew.h	/^#define GL_MAX_VERTEX_STREAMS_ATI /;"	d
GL_MAX_VERTEX_TEXTURE_IMAGE_UNITS	./GL/glew.h	/^#define GL_MAX_VERTEX_TEXTURE_IMAGE_UNITS /;"	d
GL_MAX_VERTEX_TEXTURE_IMAGE_UNITS_ARB	./GL/glew.h	/^#define GL_MAX_VERTEX_TEXTURE_IMAGE_UNITS_ARB /;"	d
GL_MAX_VERTEX_UNIFORM_BLOCKS	./GL/glew.h	/^#define GL_MAX_VERTEX_UNIFORM_BLOCKS /;"	d
GL_MAX_VERTEX_UNIFORM_COMPONENTS	./GL/glew.h	/^#define GL_MAX_VERTEX_UNIFORM_COMPONENTS /;"	d
GL_MAX_VERTEX_UNIFORM_COMPONENTS_ARB	./GL/glew.h	/^#define GL_MAX_VERTEX_UNIFORM_COMPONENTS_ARB /;"	d
GL_MAX_VERTEX_UNIFORM_VECTORS	./GL/glew.h	/^#define GL_MAX_VERTEX_UNIFORM_VECTORS /;"	d
GL_MAX_VERTEX_UNITS_ARB	./GL/glew.h	/^#define GL_MAX_VERTEX_UNITS_ARB /;"	d
GL_MAX_VERTEX_UNITS_OES	./GL/glew.h	/^#define GL_MAX_VERTEX_UNITS_OES /;"	d
GL_MAX_VERTEX_VARYING_COMPONENTS_ARB	./GL/glew.h	/^#define GL_MAX_VERTEX_VARYING_COMPONENTS_ARB /;"	d
GL_MAX_VERTEX_VARYING_COMPONENTS_EXT	./GL/glew.h	/^#define GL_MAX_VERTEX_VARYING_COMPONENTS_EXT /;"	d
GL_MAX_VIEWPORTS	./GL/glew.h	/^#define GL_MAX_VIEWPORTS /;"	d
GL_MAX_VIEWPORTS_NV	./GL/glew.h	/^#define GL_MAX_VIEWPORTS_NV /;"	d
GL_MAX_VIEWPORT_DIMS	./GL/glew.h	/^#define GL_MAX_VIEWPORT_DIMS /;"	d
GL_MAX_VIEWS_OVR	./GL/glew.h	/^#define GL_MAX_VIEWS_OVR /;"	d
GL_MAX_WIDTH	./GL/glew.h	/^#define GL_MAX_WIDTH /;"	d
GL_MAX_WINDOW_RECTANGLES_EXT	./GL/glew.h	/^#define GL_MAX_WINDOW_RECTANGLES_EXT /;"	d
GL_MEDIUM_FLOAT	./GL/glew.h	/^#define GL_MEDIUM_FLOAT /;"	d
GL_MEDIUM_INT	./GL/glew.h	/^#define GL_MEDIUM_INT /;"	d
GL_MEMORY_ATTACHABLE_ALIGNMENT_NV	./GL/glew.h	/^#define GL_MEMORY_ATTACHABLE_ALIGNMENT_NV /;"	d
GL_MEMORY_ATTACHABLE_NV	./GL/glew.h	/^#define GL_MEMORY_ATTACHABLE_NV /;"	d
GL_MEMORY_ATTACHABLE_SIZE_NV	./GL/glew.h	/^#define GL_MEMORY_ATTACHABLE_SIZE_NV /;"	d
GL_MESAX_texture_stack	./GL/glew.h	/^#define GL_MESAX_texture_stack /;"	d
GL_MESA_framebuffer_flip_y	./GL/glew.h	/^#define GL_MESA_framebuffer_flip_y /;"	d
GL_MESA_pack_invert	./GL/glew.h	/^#define GL_MESA_pack_invert /;"	d
GL_MESA_program_binary_formats	./GL/glew.h	/^#define GL_MESA_program_binary_formats /;"	d
GL_MESA_resize_buffers	./GL/glew.h	/^#define GL_MESA_resize_buffers /;"	d
GL_MESA_shader_integer_functions	./GL/glew.h	/^#define GL_MESA_shader_integer_functions /;"	d
GL_MESA_tile_raster_order	./GL/glew.h	/^#define GL_MESA_tile_raster_order /;"	d
GL_MESA_window_pos	./GL/glew.h	/^#define GL_MESA_window_pos /;"	d
GL_MESA_ycbcr_texture	./GL/glew.h	/^#define GL_MESA_ycbcr_texture /;"	d
GL_MESH_OUTPUT_PER_PRIMITIVE_GRANULARITY_NV	./GL/glew.h	/^#define GL_MESH_OUTPUT_PER_PRIMITIVE_GRANULARITY_NV /;"	d
GL_MESH_OUTPUT_PER_VERTEX_GRANULARITY_NV	./GL/glew.h	/^#define GL_MESH_OUTPUT_PER_VERTEX_GRANULARITY_NV /;"	d
GL_MESH_OUTPUT_TYPE_NV	./GL/glew.h	/^#define GL_MESH_OUTPUT_TYPE_NV /;"	d
GL_MESH_PRIMITIVES_OUT_NV	./GL/glew.h	/^#define GL_MESH_PRIMITIVES_OUT_NV /;"	d
GL_MESH_SHADER_BIT_NV	./GL/glew.h	/^#define GL_MESH_SHADER_BIT_NV /;"	d
GL_MESH_SHADER_NV	./GL/glew.h	/^#define GL_MESH_SHADER_NV /;"	d
GL_MESH_SUBROUTINE_NV	./GL/glew.h	/^#define GL_MESH_SUBROUTINE_NV /;"	d
GL_MESH_SUBROUTINE_UNIFORM_NV	./GL/glew.h	/^#define GL_MESH_SUBROUTINE_UNIFORM_NV /;"	d
GL_MESH_VERTICES_OUT_NV	./GL/glew.h	/^#define GL_MESH_VERTICES_OUT_NV /;"	d
GL_MESH_WORK_GROUP_SIZE_NV	./GL/glew.h	/^#define GL_MESH_WORK_GROUP_SIZE_NV /;"	d
GL_MIN	./GL/glew.h	/^#define GL_MIN /;"	d
GL_MINMAX	./GL/glew.h	/^#define GL_MINMAX /;"	d
GL_MINMAX_EXT	./GL/glew.h	/^#define GL_MINMAX_EXT /;"	d
GL_MINMAX_FORMAT	./GL/glew.h	/^#define GL_MINMAX_FORMAT /;"	d
GL_MINMAX_FORMAT_EXT	./GL/glew.h	/^#define GL_MINMAX_FORMAT_EXT /;"	d
GL_MINMAX_SINK	./GL/glew.h	/^#define GL_MINMAX_SINK /;"	d
GL_MINMAX_SINK_EXT	./GL/glew.h	/^#define GL_MINMAX_SINK_EXT /;"	d
GL_MINOR_VERSION	./GL/glew.h	/^#define GL_MINOR_VERSION /;"	d
GL_MINUS_CLAMPED_NV	./GL/glew.h	/^#define GL_MINUS_CLAMPED_NV /;"	d
GL_MINUS_NV	./GL/glew.h	/^#define GL_MINUS_NV /;"	d
GL_MIN_ALPHA_SGIS	./GL/glew.h	/^#define GL_MIN_ALPHA_SGIS /;"	d
GL_MIN_BLUE_SGIS	./GL/glew.h	/^#define GL_MIN_BLUE_SGIS /;"	d
GL_MIN_EXT	./GL/glew.h	/^#define GL_MIN_EXT /;"	d
GL_MIN_FRAGMENT_INTERPOLATION_OFFSET	./GL/glew.h	/^#define GL_MIN_FRAGMENT_INTERPOLATION_OFFSET /;"	d
GL_MIN_FRAGMENT_INTERPOLATION_OFFSET_NV	./GL/glew.h	/^#define GL_MIN_FRAGMENT_INTERPOLATION_OFFSET_NV /;"	d
GL_MIN_FRAGMENT_INTERPOLATION_OFFSET_OES	./GL/glew.h	/^#define GL_MIN_FRAGMENT_INTERPOLATION_OFFSET_OES /;"	d
GL_MIN_GREEN_SGIS	./GL/glew.h	/^#define GL_MIN_GREEN_SGIS /;"	d
GL_MIN_INTENSITY_SGIS	./GL/glew.h	/^#define GL_MIN_INTENSITY_SGIS /;"	d
GL_MIN_LOD_WARNING_AMD	./GL/glew.h	/^#define GL_MIN_LOD_WARNING_AMD /;"	d
GL_MIN_LUMINANCE_SGIS	./GL/glew.h	/^#define GL_MIN_LUMINANCE_SGIS /;"	d
GL_MIN_MAP_BUFFER_ALIGNMENT	./GL/glew.h	/^#define GL_MIN_MAP_BUFFER_ALIGNMENT /;"	d
GL_MIN_PBUFFER_VIEWPORT_DIMS_APPLE	./GL/glew.h	/^#define GL_MIN_PBUFFER_VIEWPORT_DIMS_APPLE /;"	d
GL_MIN_PROGRAM_TEXEL_OFFSET	./GL/glew.h	/^#define GL_MIN_PROGRAM_TEXEL_OFFSET /;"	d
GL_MIN_PROGRAM_TEXEL_OFFSET_NV	./GL/glew.h	/^#define GL_MIN_PROGRAM_TEXEL_OFFSET_NV /;"	d
GL_MIN_PROGRAM_TEXTURE_GATHER_OFFSET	./GL/glew.h	/^#define GL_MIN_PROGRAM_TEXTURE_GATHER_OFFSET /;"	d
GL_MIN_PROGRAM_TEXTURE_GATHER_OFFSET_ARB	./GL/glew.h	/^#define GL_MIN_PROGRAM_TEXTURE_GATHER_OFFSET_ARB /;"	d
GL_MIN_PROGRAM_TEXTURE_GATHER_OFFSET_NV	./GL/glew.h	/^#define GL_MIN_PROGRAM_TEXTURE_GATHER_OFFSET_NV /;"	d
GL_MIN_RED_SGIS	./GL/glew.h	/^#define GL_MIN_RED_SGIS /;"	d
GL_MIN_SAMPLE_SHADING_VALUE	./GL/glew.h	/^#define GL_MIN_SAMPLE_SHADING_VALUE /;"	d
GL_MIN_SAMPLE_SHADING_VALUE_ARB	./GL/glew.h	/^#define GL_MIN_SAMPLE_SHADING_VALUE_ARB /;"	d
GL_MIN_SAMPLE_SHADING_VALUE_OES	./GL/glew.h	/^#define GL_MIN_SAMPLE_SHADING_VALUE_OES /;"	d
GL_MIN_SPARSE_LEVEL_AMD	./GL/glew.h	/^#define GL_MIN_SPARSE_LEVEL_AMD /;"	d
GL_MIPMAP	./GL/glew.h	/^#define GL_MIPMAP /;"	d
GL_MIRRORED_REPEAT	./GL/glew.h	/^#define GL_MIRRORED_REPEAT /;"	d
GL_MIRRORED_REPEAT_ARB	./GL/glew.h	/^#define GL_MIRRORED_REPEAT_ARB /;"	d
GL_MIRRORED_REPEAT_IBM	./GL/glew.h	/^#define GL_MIRRORED_REPEAT_IBM /;"	d
GL_MIRROR_CLAMP_ATI	./GL/glew.h	/^#define GL_MIRROR_CLAMP_ATI /;"	d
GL_MIRROR_CLAMP_EXT	./GL/glew.h	/^#define GL_MIRROR_CLAMP_EXT /;"	d
GL_MIRROR_CLAMP_TO_BORDER_EXT	./GL/glew.h	/^#define GL_MIRROR_CLAMP_TO_BORDER_EXT /;"	d
GL_MIRROR_CLAMP_TO_EDGE	./GL/glew.h	/^#define GL_MIRROR_CLAMP_TO_EDGE /;"	d
GL_MIRROR_CLAMP_TO_EDGE_ATI	./GL/glew.h	/^#define GL_MIRROR_CLAMP_TO_EDGE_ATI /;"	d
GL_MIRROR_CLAMP_TO_EDGE_EXT	./GL/glew.h	/^#define GL_MIRROR_CLAMP_TO_EDGE_EXT /;"	d
GL_MISSING_REGAL	./GL/glew.h	/^#define GL_MISSING_REGAL /;"	d
GL_MITER_REVERT_NV	./GL/glew.h	/^#define GL_MITER_REVERT_NV /;"	d
GL_MITER_TRUNCATE_NV	./GL/glew.h	/^#define GL_MITER_TRUNCATE_NV /;"	d
GL_MIXED_DEPTH_SAMPLES_SUPPORTED_NV	./GL/glew.h	/^#define GL_MIXED_DEPTH_SAMPLES_SUPPORTED_NV /;"	d
GL_MIXED_STENCIL_SAMPLES_SUPPORTED_NV	./GL/glew.h	/^#define GL_MIXED_STENCIL_SAMPLES_SUPPORTED_NV /;"	d
GL_MODELVIEW	./GL/glew.h	/^#define GL_MODELVIEW /;"	d
GL_MODELVIEW0_ARB	./GL/glew.h	/^#define GL_MODELVIEW0_ARB /;"	d
GL_MODELVIEW0_EXT	./GL/glew.h	/^#define GL_MODELVIEW0_EXT /;"	d
GL_MODELVIEW0_MATRIX_EXT	./GL/glew.h	/^#define GL_MODELVIEW0_MATRIX_EXT /;"	d
GL_MODELVIEW0_STACK_DEPTH_EXT	./GL/glew.h	/^#define GL_MODELVIEW0_STACK_DEPTH_EXT /;"	d
GL_MODELVIEW10_ARB	./GL/glew.h	/^#define GL_MODELVIEW10_ARB /;"	d
GL_MODELVIEW11_ARB	./GL/glew.h	/^#define GL_MODELVIEW11_ARB /;"	d
GL_MODELVIEW12_ARB	./GL/glew.h	/^#define GL_MODELVIEW12_ARB /;"	d
GL_MODELVIEW13_ARB	./GL/glew.h	/^#define GL_MODELVIEW13_ARB /;"	d
GL_MODELVIEW14_ARB	./GL/glew.h	/^#define GL_MODELVIEW14_ARB /;"	d
GL_MODELVIEW15_ARB	./GL/glew.h	/^#define GL_MODELVIEW15_ARB /;"	d
GL_MODELVIEW16_ARB	./GL/glew.h	/^#define GL_MODELVIEW16_ARB /;"	d
GL_MODELVIEW17_ARB	./GL/glew.h	/^#define GL_MODELVIEW17_ARB /;"	d
GL_MODELVIEW18_ARB	./GL/glew.h	/^#define GL_MODELVIEW18_ARB /;"	d
GL_MODELVIEW19_ARB	./GL/glew.h	/^#define GL_MODELVIEW19_ARB /;"	d
GL_MODELVIEW1_ARB	./GL/glew.h	/^#define GL_MODELVIEW1_ARB /;"	d
GL_MODELVIEW1_EXT	./GL/glew.h	/^#define GL_MODELVIEW1_EXT /;"	d
GL_MODELVIEW1_MATRIX_EXT	./GL/glew.h	/^#define GL_MODELVIEW1_MATRIX_EXT /;"	d
GL_MODELVIEW1_STACK_DEPTH_EXT	./GL/glew.h	/^#define GL_MODELVIEW1_STACK_DEPTH_EXT /;"	d
GL_MODELVIEW20_ARB	./GL/glew.h	/^#define GL_MODELVIEW20_ARB /;"	d
GL_MODELVIEW21_ARB	./GL/glew.h	/^#define GL_MODELVIEW21_ARB /;"	d
GL_MODELVIEW22_ARB	./GL/glew.h	/^#define GL_MODELVIEW22_ARB /;"	d
GL_MODELVIEW23_ARB	./GL/glew.h	/^#define GL_MODELVIEW23_ARB /;"	d
GL_MODELVIEW24_ARB	./GL/glew.h	/^#define GL_MODELVIEW24_ARB /;"	d
GL_MODELVIEW25_ARB	./GL/glew.h	/^#define GL_MODELVIEW25_ARB /;"	d
GL_MODELVIEW26_ARB	./GL/glew.h	/^#define GL_MODELVIEW26_ARB /;"	d
GL_MODELVIEW27_ARB	./GL/glew.h	/^#define GL_MODELVIEW27_ARB /;"	d
GL_MODELVIEW28_ARB	./GL/glew.h	/^#define GL_MODELVIEW28_ARB /;"	d
GL_MODELVIEW29_ARB	./GL/glew.h	/^#define GL_MODELVIEW29_ARB /;"	d
GL_MODELVIEW2_ARB	./GL/glew.h	/^#define GL_MODELVIEW2_ARB /;"	d
GL_MODELVIEW30_ARB	./GL/glew.h	/^#define GL_MODELVIEW30_ARB /;"	d
GL_MODELVIEW31_ARB	./GL/glew.h	/^#define GL_MODELVIEW31_ARB /;"	d
GL_MODELVIEW3_ARB	./GL/glew.h	/^#define GL_MODELVIEW3_ARB /;"	d
GL_MODELVIEW4_ARB	./GL/glew.h	/^#define GL_MODELVIEW4_ARB /;"	d
GL_MODELVIEW5_ARB	./GL/glew.h	/^#define GL_MODELVIEW5_ARB /;"	d
GL_MODELVIEW6_ARB	./GL/glew.h	/^#define GL_MODELVIEW6_ARB /;"	d
GL_MODELVIEW7_ARB	./GL/glew.h	/^#define GL_MODELVIEW7_ARB /;"	d
GL_MODELVIEW8_ARB	./GL/glew.h	/^#define GL_MODELVIEW8_ARB /;"	d
GL_MODELVIEW9_ARB	./GL/glew.h	/^#define GL_MODELVIEW9_ARB /;"	d
GL_MODELVIEW_MATRIX	./GL/glew.h	/^#define GL_MODELVIEW_MATRIX /;"	d
GL_MODELVIEW_MATRIX_FLOAT_AS_INT_BITS_OES	./GL/glew.h	/^#define GL_MODELVIEW_MATRIX_FLOAT_AS_INT_BITS_OES /;"	d
GL_MODELVIEW_PROJECTION_NV	./GL/glew.h	/^#define GL_MODELVIEW_PROJECTION_NV /;"	d
GL_MODELVIEW_STACK_DEPTH	./GL/glew.h	/^#define GL_MODELVIEW_STACK_DEPTH /;"	d
GL_MODULATE	./GL/glew.h	/^#define GL_MODULATE /;"	d
GL_MODULATE_ADD_ATI	./GL/glew.h	/^#define GL_MODULATE_ADD_ATI /;"	d
GL_MODULATE_ADD_ATIX	./GL/glew.h	/^#define GL_MODULATE_ADD_ATIX /;"	d
GL_MODULATE_COLOR_IMG	./GL/glew.h	/^#define GL_MODULATE_COLOR_IMG /;"	d
GL_MODULATE_SIGNED_ADD_ATI	./GL/glew.h	/^#define GL_MODULATE_SIGNED_ADD_ATI /;"	d
GL_MODULATE_SIGNED_ADD_ATIX	./GL/glew.h	/^#define GL_MODULATE_SIGNED_ADD_ATIX /;"	d
GL_MODULATE_SUBTRACT_ATI	./GL/glew.h	/^#define GL_MODULATE_SUBTRACT_ATI /;"	d
GL_MODULATE_SUBTRACT_ATIX	./GL/glew.h	/^#define GL_MODULATE_SUBTRACT_ATIX /;"	d
GL_MOVE_TO_CONTINUES_NV	./GL/glew.h	/^#define GL_MOVE_TO_CONTINUES_NV /;"	d
GL_MOVE_TO_NV	./GL/glew.h	/^#define GL_MOVE_TO_NV /;"	d
GL_MOVE_TO_RESETS_NV	./GL/glew.h	/^#define GL_MOVE_TO_RESETS_NV /;"	d
GL_MOV_ATI	./GL/glew.h	/^#define GL_MOV_ATI /;"	d
GL_MULT	./GL/glew.h	/^#define GL_MULT /;"	d
GL_MULTICAST_GPUS_NV	./GL/glew.h	/^#define GL_MULTICAST_GPUS_NV /;"	d
GL_MULTICAST_PROGRAMMABLE_SAMPLE_LOCATION_NV	./GL/glew.h	/^#define GL_MULTICAST_PROGRAMMABLE_SAMPLE_LOCATION_NV /;"	d
GL_MULTIPLY_KHR	./GL/glew.h	/^#define GL_MULTIPLY_KHR /;"	d
GL_MULTIPLY_NV	./GL/glew.h	/^#define GL_MULTIPLY_NV /;"	d
GL_MULTISAMPLE	./GL/glew.h	/^#define GL_MULTISAMPLE /;"	d
GL_MULTISAMPLES_NV	./GL/glew.h	/^#define GL_MULTISAMPLES_NV /;"	d
GL_MULTISAMPLE_3DFX	./GL/glew.h	/^#define GL_MULTISAMPLE_3DFX /;"	d
GL_MULTISAMPLE_ARB	./GL/glew.h	/^#define GL_MULTISAMPLE_ARB /;"	d
GL_MULTISAMPLE_BIT	./GL/glew.h	/^#define GL_MULTISAMPLE_BIT /;"	d
GL_MULTISAMPLE_BIT_3DFX	./GL/glew.h	/^#define GL_MULTISAMPLE_BIT_3DFX /;"	d
GL_MULTISAMPLE_BIT_ARB	./GL/glew.h	/^#define GL_MULTISAMPLE_BIT_ARB /;"	d
GL_MULTISAMPLE_BIT_EXT	./GL/glew.h	/^#define GL_MULTISAMPLE_BIT_EXT /;"	d
GL_MULTISAMPLE_BUFFER_BIT0_QCOM	./GL/glew.h	/^#define GL_MULTISAMPLE_BUFFER_BIT0_QCOM /;"	d
GL_MULTISAMPLE_BUFFER_BIT1_QCOM	./GL/glew.h	/^#define GL_MULTISAMPLE_BUFFER_BIT1_QCOM /;"	d
GL_MULTISAMPLE_BUFFER_BIT2_QCOM	./GL/glew.h	/^#define GL_MULTISAMPLE_BUFFER_BIT2_QCOM /;"	d
GL_MULTISAMPLE_BUFFER_BIT3_QCOM	./GL/glew.h	/^#define GL_MULTISAMPLE_BUFFER_BIT3_QCOM /;"	d
GL_MULTISAMPLE_BUFFER_BIT4_QCOM	./GL/glew.h	/^#define GL_MULTISAMPLE_BUFFER_BIT4_QCOM /;"	d
GL_MULTISAMPLE_BUFFER_BIT5_QCOM	./GL/glew.h	/^#define GL_MULTISAMPLE_BUFFER_BIT5_QCOM /;"	d
GL_MULTISAMPLE_BUFFER_BIT6_QCOM	./GL/glew.h	/^#define GL_MULTISAMPLE_BUFFER_BIT6_QCOM /;"	d
GL_MULTISAMPLE_BUFFER_BIT7_QCOM	./GL/glew.h	/^#define GL_MULTISAMPLE_BUFFER_BIT7_QCOM /;"	d
GL_MULTISAMPLE_COVERAGE_MODES_NV	./GL/glew.h	/^#define GL_MULTISAMPLE_COVERAGE_MODES_NV /;"	d
GL_MULTISAMPLE_EXT	./GL/glew.h	/^#define GL_MULTISAMPLE_EXT /;"	d
GL_MULTISAMPLE_FILTER_HINT_NV	./GL/glew.h	/^#define GL_MULTISAMPLE_FILTER_HINT_NV /;"	d
GL_MULTISAMPLE_LINE_WIDTH_GRANULARITY_ARB	./GL/glew.h	/^#define GL_MULTISAMPLE_LINE_WIDTH_GRANULARITY_ARB /;"	d
GL_MULTISAMPLE_LINE_WIDTH_RANGE_ARB	./GL/glew.h	/^#define GL_MULTISAMPLE_LINE_WIDTH_RANGE_ARB /;"	d
GL_MULTISAMPLE_RASTERIZATION_ALLOWED_EXT	./GL/glew.h	/^#define GL_MULTISAMPLE_RASTERIZATION_ALLOWED_EXT /;"	d
GL_MULTISAMPLE_SGIS	./GL/glew.h	/^#define GL_MULTISAMPLE_SGIS /;"	d
GL_MULTIVIEW_EXT	./GL/glew.h	/^#define GL_MULTIVIEW_EXT /;"	d
GL_MUL_ATI	./GL/glew.h	/^#define GL_MUL_ATI /;"	d
GL_MVP_MATRIX_EXT	./GL/glew.h	/^#define GL_MVP_MATRIX_EXT /;"	d
GL_N3F_V3F	./GL/glew.h	/^#define GL_N3F_V3F /;"	d
GL_NAMED_STRING_LENGTH_ARB	./GL/glew.h	/^#define GL_NAMED_STRING_LENGTH_ARB /;"	d
GL_NAMED_STRING_TYPE_ARB	./GL/glew.h	/^#define GL_NAMED_STRING_TYPE_ARB /;"	d
GL_NAME_LENGTH	./GL/glew.h	/^#define GL_NAME_LENGTH /;"	d
GL_NAME_STACK_DEPTH	./GL/glew.h	/^#define GL_NAME_STACK_DEPTH /;"	d
GL_NAND	./GL/glew.h	/^#define GL_NAND /;"	d
GL_NATIVE_GRAPHICS_BEGIN_HINT_PGI	./GL/glew.h	/^#define GL_NATIVE_GRAPHICS_BEGIN_HINT_PGI /;"	d
GL_NATIVE_GRAPHICS_END_HINT_PGI	./GL/glew.h	/^#define GL_NATIVE_GRAPHICS_END_HINT_PGI /;"	d
GL_NATIVE_GRAPHICS_HANDLE_PGI	./GL/glew.h	/^#define GL_NATIVE_GRAPHICS_HANDLE_PGI /;"	d
GL_NEAREST	./GL/glew.h	/^#define GL_NEAREST /;"	d
GL_NEAREST_MIPMAP_LINEAR	./GL/glew.h	/^#define GL_NEAREST_MIPMAP_LINEAR /;"	d
GL_NEAREST_MIPMAP_NEAREST	./GL/glew.h	/^#define GL_NEAREST_MIPMAP_NEAREST /;"	d
GL_NEGATE_BIT_ATI	./GL/glew.h	/^#define GL_NEGATE_BIT_ATI /;"	d
GL_NEGATIVE_ONE_EXT	./GL/glew.h	/^#define GL_NEGATIVE_ONE_EXT /;"	d
GL_NEGATIVE_ONE_TO_ONE	./GL/glew.h	/^#define GL_NEGATIVE_ONE_TO_ONE /;"	d
GL_NEGATIVE_ONE_TO_ONE_EXT	./GL/glew.h	/^#define GL_NEGATIVE_ONE_TO_ONE_EXT /;"	d
GL_NEGATIVE_W_EXT	./GL/glew.h	/^#define GL_NEGATIVE_W_EXT /;"	d
GL_NEGATIVE_X_EXT	./GL/glew.h	/^#define GL_NEGATIVE_X_EXT /;"	d
GL_NEGATIVE_Y_EXT	./GL/glew.h	/^#define GL_NEGATIVE_Y_EXT /;"	d
GL_NEGATIVE_Z_EXT	./GL/glew.h	/^#define GL_NEGATIVE_Z_EXT /;"	d
GL_NEVER	./GL/glew.h	/^#define GL_NEVER /;"	d
GL_NEXT_VIDEO_CAPTURE_BUFFER_STATUS_NV	./GL/glew.h	/^#define GL_NEXT_VIDEO_CAPTURE_BUFFER_STATUS_NV /;"	d
GL_NICEST	./GL/glew.h	/^#define GL_NICEST /;"	d
GL_NONE	./GL/glew.h	/^#define GL_NONE /;"	d
GL_NONE_OES	./GL/glew.h	/^#define GL_NONE_OES /;"	d
GL_NOOP	./GL/glew.h	/^#define GL_NOOP /;"	d
GL_NOP_COMMAND_NV	./GL/glew.h	/^#define GL_NOP_COMMAND_NV /;"	d
GL_NOR	./GL/glew.h	/^#define GL_NOR /;"	d
GL_NORMALIZE	./GL/glew.h	/^#define GL_NORMALIZE /;"	d
GL_NORMALIZED_RANGE_EXT	./GL/glew.h	/^#define GL_NORMALIZED_RANGE_EXT /;"	d
GL_NORMAL_ARRAY	./GL/glew.h	/^#define GL_NORMAL_ARRAY /;"	d
GL_NORMAL_ARRAY_ADDRESS_NV	./GL/glew.h	/^#define GL_NORMAL_ARRAY_ADDRESS_NV /;"	d
GL_NORMAL_ARRAY_BUFFER_BINDING	./GL/glew.h	/^#define GL_NORMAL_ARRAY_BUFFER_BINDING /;"	d
GL_NORMAL_ARRAY_BUFFER_BINDING_ARB	./GL/glew.h	/^#define GL_NORMAL_ARRAY_BUFFER_BINDING_ARB /;"	d
GL_NORMAL_ARRAY_COUNT_EXT	./GL/glew.h	/^#define GL_NORMAL_ARRAY_COUNT_EXT /;"	d
GL_NORMAL_ARRAY_EXT	./GL/glew.h	/^#define GL_NORMAL_ARRAY_EXT /;"	d
GL_NORMAL_ARRAY_LENGTH_NV	./GL/glew.h	/^#define GL_NORMAL_ARRAY_LENGTH_NV /;"	d
GL_NORMAL_ARRAY_LIST_IBM	./GL/glew.h	/^#define GL_NORMAL_ARRAY_LIST_IBM /;"	d
GL_NORMAL_ARRAY_LIST_STRIDE_IBM	./GL/glew.h	/^#define GL_NORMAL_ARRAY_LIST_STRIDE_IBM /;"	d
GL_NORMAL_ARRAY_PARALLEL_POINTERS_INTEL	./GL/glew.h	/^#define GL_NORMAL_ARRAY_PARALLEL_POINTERS_INTEL /;"	d
GL_NORMAL_ARRAY_POINTER	./GL/glew.h	/^#define GL_NORMAL_ARRAY_POINTER /;"	d
GL_NORMAL_ARRAY_POINTER_EXT	./GL/glew.h	/^#define GL_NORMAL_ARRAY_POINTER_EXT /;"	d
GL_NORMAL_ARRAY_STRIDE	./GL/glew.h	/^#define GL_NORMAL_ARRAY_STRIDE /;"	d
GL_NORMAL_ARRAY_STRIDE_EXT	./GL/glew.h	/^#define GL_NORMAL_ARRAY_STRIDE_EXT /;"	d
GL_NORMAL_ARRAY_TYPE	./GL/glew.h	/^#define GL_NORMAL_ARRAY_TYPE /;"	d
GL_NORMAL_ARRAY_TYPE_EXT	./GL/glew.h	/^#define GL_NORMAL_ARRAY_TYPE_EXT /;"	d
GL_NORMAL_BIT_PGI	./GL/glew.h	/^#define GL_NORMAL_BIT_PGI /;"	d
GL_NORMAL_MAP	./GL/glew.h	/^#define GL_NORMAL_MAP /;"	d
GL_NORMAL_MAP_ARB	./GL/glew.h	/^#define GL_NORMAL_MAP_ARB /;"	d
GL_NORMAL_MAP_EXT	./GL/glew.h	/^#define GL_NORMAL_MAP_EXT /;"	d
GL_NORMAL_MAP_NV	./GL/glew.h	/^#define GL_NORMAL_MAP_NV /;"	d
GL_NORMAL_MAP_OES	./GL/glew.h	/^#define GL_NORMAL_MAP_OES /;"	d
GL_NOTEQUAL	./GL/glew.h	/^#define GL_NOTEQUAL /;"	d
GL_NO_ERROR	./GL/glew.h	/^#define GL_NO_ERROR /;"	d
GL_NO_RESET_NOTIFICATION	./GL/glew.h	/^#define GL_NO_RESET_NOTIFICATION /;"	d
GL_NO_RESET_NOTIFICATION_ARB	./GL/glew.h	/^#define GL_NO_RESET_NOTIFICATION_ARB /;"	d
GL_NO_RESET_NOTIFICATION_EXT	./GL/glew.h	/^#define GL_NO_RESET_NOTIFICATION_EXT /;"	d
GL_NUM_ACTIVE_VARIABLES	./GL/glew.h	/^#define GL_NUM_ACTIVE_VARIABLES /;"	d
GL_NUM_COMPATIBLE_SUBROUTINES	./GL/glew.h	/^#define GL_NUM_COMPATIBLE_SUBROUTINES /;"	d
GL_NUM_COMPRESSED_TEXTURE_FORMATS	./GL/glew.h	/^#define GL_NUM_COMPRESSED_TEXTURE_FORMATS /;"	d
GL_NUM_COMPRESSED_TEXTURE_FORMATS_ARB	./GL/glew.h	/^#define GL_NUM_COMPRESSED_TEXTURE_FORMATS_ARB /;"	d
GL_NUM_DEVICE_UUIDS_EXT	./GL/glew.h	/^#define GL_NUM_DEVICE_UUIDS_EXT /;"	d
GL_NUM_DOWNSAMPLE_SCALES_IMG	./GL/glew.h	/^#define GL_NUM_DOWNSAMPLE_SCALES_IMG /;"	d
GL_NUM_EXTENSIONS	./GL/glew.h	/^#define GL_NUM_EXTENSIONS /;"	d
GL_NUM_FILL_STREAMS_NV	./GL/glew.h	/^#define GL_NUM_FILL_STREAMS_NV /;"	d
GL_NUM_FRAGMENT_CONSTANTS_ATI	./GL/glew.h	/^#define GL_NUM_FRAGMENT_CONSTANTS_ATI /;"	d
GL_NUM_FRAGMENT_REGISTERS_ATI	./GL/glew.h	/^#define GL_NUM_FRAGMENT_REGISTERS_ATI /;"	d
GL_NUM_GENERAL_COMBINERS_NV	./GL/glew.h	/^#define GL_NUM_GENERAL_COMBINERS_NV /;"	d
GL_NUM_INPUT_INTERPOLATOR_COMPONENTS_ATI	./GL/glew.h	/^#define GL_NUM_INPUT_INTERPOLATOR_COMPONENTS_ATI /;"	d
GL_NUM_INSTRUCTIONS_PER_PASS_ATI	./GL/glew.h	/^#define GL_NUM_INSTRUCTIONS_PER_PASS_ATI /;"	d
GL_NUM_INSTRUCTIONS_TOTAL_ATI	./GL/glew.h	/^#define GL_NUM_INSTRUCTIONS_TOTAL_ATI /;"	d
GL_NUM_LOOPBACK_COMPONENTS_ATI	./GL/glew.h	/^#define GL_NUM_LOOPBACK_COMPONENTS_ATI /;"	d
GL_NUM_PASSES_ATI	./GL/glew.h	/^#define GL_NUM_PASSES_ATI /;"	d
GL_NUM_PROGRAM_BINARY_FORMATS	./GL/glew.h	/^#define GL_NUM_PROGRAM_BINARY_FORMATS /;"	d
GL_NUM_PROGRAM_BINARY_FORMATS_OES	./GL/glew.h	/^#define GL_NUM_PROGRAM_BINARY_FORMATS_OES /;"	d
GL_NUM_SAMPLE_COUNTS	./GL/glew.h	/^#define GL_NUM_SAMPLE_COUNTS /;"	d
GL_NUM_SHADER_BINARY_FORMATS	./GL/glew.h	/^#define GL_NUM_SHADER_BINARY_FORMATS /;"	d
GL_NUM_SHADING_LANGUAGE_VERSIONS	./GL/glew.h	/^#define GL_NUM_SHADING_LANGUAGE_VERSIONS /;"	d
GL_NUM_SPARSE_LEVELS_ARB	./GL/glew.h	/^#define GL_NUM_SPARSE_LEVELS_ARB /;"	d
GL_NUM_SPARSE_LEVELS_EXT	./GL/glew.h	/^#define GL_NUM_SPARSE_LEVELS_EXT /;"	d
GL_NUM_SPIR_V_EXTENSIONS	./GL/glew.h	/^#define GL_NUM_SPIR_V_EXTENSIONS /;"	d
GL_NUM_SUPPORTED_MULTISAMPLE_MODES_AMD	./GL/glew.h	/^#define GL_NUM_SUPPORTED_MULTISAMPLE_MODES_AMD /;"	d
GL_NUM_TILING_TYPES_EXT	./GL/glew.h	/^#define GL_NUM_TILING_TYPES_EXT /;"	d
GL_NUM_VIDEO_CAPTURE_STREAMS_NV	./GL/glew.h	/^#define GL_NUM_VIDEO_CAPTURE_STREAMS_NV /;"	d
GL_NUM_VIRTUAL_PAGE_SIZES_ARB	./GL/glew.h	/^#define GL_NUM_VIRTUAL_PAGE_SIZES_ARB /;"	d
GL_NUM_VIRTUAL_PAGE_SIZES_EXT	./GL/glew.h	/^#define GL_NUM_VIRTUAL_PAGE_SIZES_EXT /;"	d
GL_NUM_WINDOW_RECTANGLES_EXT	./GL/glew.h	/^#define GL_NUM_WINDOW_RECTANGLES_EXT /;"	d
GL_NURBS_KNOT_COUNT_SGIX	./GL/glew.h	/^#define GL_NURBS_KNOT_COUNT_SGIX /;"	d
GL_NURBS_KNOT_VECTOR_SGIX	./GL/glew.h	/^#define GL_NURBS_KNOT_VECTOR_SGIX /;"	d
GL_NVIDIA_PLATFORM_BINARY_NV	./GL/glew.h	/^#define GL_NVIDIA_PLATFORM_BINARY_NV /;"	d
GL_NVX_blend_equation_advanced_multi_draw_buffers	./GL/glew.h	/^#define GL_NVX_blend_equation_advanced_multi_draw_buffers /;"	d
GL_NVX_conditional_render	./GL/glew.h	/^#define GL_NVX_conditional_render /;"	d
GL_NVX_gpu_memory_info	./GL/glew.h	/^#define GL_NVX_gpu_memory_info /;"	d
GL_NVX_gpu_multicast2	./GL/glew.h	/^#define GL_NVX_gpu_multicast2 /;"	d
GL_NVX_linked_gpu_multicast	./GL/glew.h	/^#define GL_NVX_linked_gpu_multicast /;"	d
GL_NVX_progress_fence	./GL/glew.h	/^#define GL_NVX_progress_fence /;"	d
GL_NV_3dvision_settings	./GL/glew.h	/^#define GL_NV_3dvision_settings /;"	d
GL_NV_EGL_stream_consumer_external	./GL/glew.h	/^#define GL_NV_EGL_stream_consumer_external /;"	d
GL_NV_alpha_to_coverage_dither_control	./GL/glew.h	/^#define GL_NV_alpha_to_coverage_dither_control /;"	d
GL_NV_bgr	./GL/glew.h	/^#define GL_NV_bgr /;"	d
GL_NV_bindless_multi_draw_indirect	./GL/glew.h	/^#define GL_NV_bindless_multi_draw_indirect /;"	d
GL_NV_bindless_multi_draw_indirect_count	./GL/glew.h	/^#define GL_NV_bindless_multi_draw_indirect_count /;"	d
GL_NV_bindless_texture	./GL/glew.h	/^#define GL_NV_bindless_texture /;"	d
GL_NV_blend_equation_advanced	./GL/glew.h	/^#define GL_NV_blend_equation_advanced /;"	d
GL_NV_blend_equation_advanced_coherent	./GL/glew.h	/^#define GL_NV_blend_equation_advanced_coherent /;"	d
GL_NV_blend_minmax_factor	./GL/glew.h	/^#define GL_NV_blend_minmax_factor /;"	d
GL_NV_blend_square	./GL/glew.h	/^#define GL_NV_blend_square /;"	d
GL_NV_clip_space_w_scaling	./GL/glew.h	/^#define GL_NV_clip_space_w_scaling /;"	d
GL_NV_command_list	./GL/glew.h	/^#define GL_NV_command_list /;"	d
GL_NV_compute_program5	./GL/glew.h	/^#define GL_NV_compute_program5 /;"	d
GL_NV_compute_shader_derivatives	./GL/glew.h	/^#define GL_NV_compute_shader_derivatives /;"	d
GL_NV_conditional_render	./GL/glew.h	/^#define GL_NV_conditional_render /;"	d
GL_NV_conservative_raster	./GL/glew.h	/^#define GL_NV_conservative_raster /;"	d
GL_NV_conservative_raster_dilate	./GL/glew.h	/^#define GL_NV_conservative_raster_dilate /;"	d
GL_NV_conservative_raster_pre_snap	./GL/glew.h	/^#define GL_NV_conservative_raster_pre_snap /;"	d
GL_NV_conservative_raster_pre_snap_triangles	./GL/glew.h	/^#define GL_NV_conservative_raster_pre_snap_triangles /;"	d
GL_NV_conservative_raster_underestimation	./GL/glew.h	/^#define GL_NV_conservative_raster_underestimation /;"	d
GL_NV_copy_buffer	./GL/glew.h	/^#define GL_NV_copy_buffer /;"	d
GL_NV_copy_depth_to_color	./GL/glew.h	/^#define GL_NV_copy_depth_to_color /;"	d
GL_NV_copy_image	./GL/glew.h	/^#define GL_NV_copy_image /;"	d
GL_NV_deep_texture3D	./GL/glew.h	/^#define GL_NV_deep_texture3D /;"	d
GL_NV_depth_buffer_float	./GL/glew.h	/^#define GL_NV_depth_buffer_float /;"	d
GL_NV_depth_clamp	./GL/glew.h	/^#define GL_NV_depth_clamp /;"	d
GL_NV_depth_nonlinear	./GL/glew.h	/^#define GL_NV_depth_nonlinear /;"	d
GL_NV_depth_range_unclamped	./GL/glew.h	/^#define GL_NV_depth_range_unclamped /;"	d
GL_NV_draw_buffers	./GL/glew.h	/^#define GL_NV_draw_buffers /;"	d
GL_NV_draw_instanced	./GL/glew.h	/^#define GL_NV_draw_instanced /;"	d
GL_NV_draw_texture	./GL/glew.h	/^#define GL_NV_draw_texture /;"	d
GL_NV_draw_vulkan_image	./GL/glew.h	/^#define GL_NV_draw_vulkan_image /;"	d
GL_NV_evaluators	./GL/glew.h	/^#define GL_NV_evaluators /;"	d
GL_NV_explicit_attrib_location	./GL/glew.h	/^#define GL_NV_explicit_attrib_location /;"	d
GL_NV_explicit_multisample	./GL/glew.h	/^#define GL_NV_explicit_multisample /;"	d
GL_NV_fbo_color_attachments	./GL/glew.h	/^#define GL_NV_fbo_color_attachments /;"	d
GL_NV_fence	./GL/glew.h	/^#define GL_NV_fence /;"	d
GL_NV_fill_rectangle	./GL/glew.h	/^#define GL_NV_fill_rectangle /;"	d
GL_NV_float_buffer	./GL/glew.h	/^#define GL_NV_float_buffer /;"	d
GL_NV_fog_distance	./GL/glew.h	/^#define GL_NV_fog_distance /;"	d
GL_NV_fragment_coverage_to_color	./GL/glew.h	/^#define GL_NV_fragment_coverage_to_color /;"	d
GL_NV_fragment_program	./GL/glew.h	/^#define GL_NV_fragment_program /;"	d
GL_NV_fragment_program2	./GL/glew.h	/^#define GL_NV_fragment_program2 /;"	d
GL_NV_fragment_program4	./GL/glew.h	/^#define GL_NV_fragment_program4 /;"	d
GL_NV_fragment_program_option	./GL/glew.h	/^#define GL_NV_fragment_program_option /;"	d
GL_NV_fragment_shader_barycentric	./GL/glew.h	/^#define GL_NV_fragment_shader_barycentric /;"	d
GL_NV_fragment_shader_interlock	./GL/glew.h	/^#define GL_NV_fragment_shader_interlock /;"	d
GL_NV_framebuffer_blit	./GL/glew.h	/^#define GL_NV_framebuffer_blit /;"	d
GL_NV_framebuffer_mixed_samples	./GL/glew.h	/^#define GL_NV_framebuffer_mixed_samples /;"	d
GL_NV_framebuffer_multisample	./GL/glew.h	/^#define GL_NV_framebuffer_multisample /;"	d
GL_NV_framebuffer_multisample_coverage	./GL/glew.h	/^#define GL_NV_framebuffer_multisample_coverage /;"	d
GL_NV_generate_mipmap_sRGB	./GL/glew.h	/^#define GL_NV_generate_mipmap_sRGB /;"	d
GL_NV_geometry_program4	./GL/glew.h	/^#define GL_NV_geometry_program4 /;"	d
GL_NV_geometry_shader4	./GL/glew.h	/^#define GL_NV_geometry_shader4 /;"	d
GL_NV_geometry_shader_passthrough	./GL/glew.h	/^#define GL_NV_geometry_shader_passthrough /;"	d
GL_NV_gpu_multicast	./GL/glew.h	/^#define GL_NV_gpu_multicast /;"	d
GL_NV_gpu_program4	./GL/glew.h	/^#define GL_NV_gpu_program4 /;"	d
GL_NV_gpu_program5	./GL/glew.h	/^#define GL_NV_gpu_program5 /;"	d
GL_NV_gpu_program5_mem_extended	./GL/glew.h	/^#define GL_NV_gpu_program5_mem_extended /;"	d
GL_NV_gpu_program_fp64	./GL/glew.h	/^#define GL_NV_gpu_program_fp64 /;"	d
GL_NV_gpu_shader5	./GL/glew.h	/^#define GL_NV_gpu_shader5 /;"	d
GL_NV_half_float	./GL/glew.h	/^#define GL_NV_half_float /;"	d
GL_NV_image_formats	./GL/glew.h	/^#define GL_NV_image_formats /;"	d
GL_NV_instanced_arrays	./GL/glew.h	/^#define GL_NV_instanced_arrays /;"	d
GL_NV_internalformat_sample_query	./GL/glew.h	/^#define GL_NV_internalformat_sample_query /;"	d
GL_NV_light_max_exponent	./GL/glew.h	/^#define GL_NV_light_max_exponent /;"	d
GL_NV_memory_attachment	./GL/glew.h	/^#define GL_NV_memory_attachment /;"	d
GL_NV_mesh_shader	./GL/glew.h	/^#define GL_NV_mesh_shader /;"	d
GL_NV_multisample_coverage	./GL/glew.h	/^#define GL_NV_multisample_coverage /;"	d
GL_NV_multisample_filter_hint	./GL/glew.h	/^#define GL_NV_multisample_filter_hint /;"	d
GL_NV_non_square_matrices	./GL/glew.h	/^#define GL_NV_non_square_matrices /;"	d
GL_NV_occlusion_query	./GL/glew.h	/^#define GL_NV_occlusion_query /;"	d
GL_NV_pack_subimage	./GL/glew.h	/^#define GL_NV_pack_subimage /;"	d
GL_NV_packed_depth_stencil	./GL/glew.h	/^#define GL_NV_packed_depth_stencil /;"	d
GL_NV_packed_float	./GL/glew.h	/^#define GL_NV_packed_float /;"	d
GL_NV_packed_float_linear	./GL/glew.h	/^#define GL_NV_packed_float_linear /;"	d
GL_NV_parameter_buffer_object	./GL/glew.h	/^#define GL_NV_parameter_buffer_object /;"	d
GL_NV_parameter_buffer_object2	./GL/glew.h	/^#define GL_NV_parameter_buffer_object2 /;"	d
GL_NV_path_rendering	./GL/glew.h	/^#define GL_NV_path_rendering /;"	d
GL_NV_path_rendering_shared_edge	./GL/glew.h	/^#define GL_NV_path_rendering_shared_edge /;"	d
GL_NV_pixel_buffer_object	./GL/glew.h	/^#define GL_NV_pixel_buffer_object /;"	d
GL_NV_pixel_data_range	./GL/glew.h	/^#define GL_NV_pixel_data_range /;"	d
GL_NV_platform_binary	./GL/glew.h	/^#define GL_NV_platform_binary /;"	d
GL_NV_point_sprite	./GL/glew.h	/^#define GL_NV_point_sprite /;"	d
GL_NV_polygon_mode	./GL/glew.h	/^#define GL_NV_polygon_mode /;"	d
GL_NV_present_video	./GL/glew.h	/^#define GL_NV_present_video /;"	d
GL_NV_primitive_restart	./GL/glew.h	/^#define GL_NV_primitive_restart /;"	d
GL_NV_query_resource_tag	./GL/glew.h	/^#define GL_NV_query_resource_tag /;"	d
GL_NV_read_buffer	./GL/glew.h	/^#define GL_NV_read_buffer /;"	d
GL_NV_read_buffer_front	./GL/glew.h	/^#define GL_NV_read_buffer_front /;"	d
GL_NV_read_depth	./GL/glew.h	/^#define GL_NV_read_depth /;"	d
GL_NV_read_depth_stencil	./GL/glew.h	/^#define GL_NV_read_depth_stencil /;"	d
GL_NV_read_stencil	./GL/glew.h	/^#define GL_NV_read_stencil /;"	d
GL_NV_register_combiners	./GL/glew.h	/^#define GL_NV_register_combiners /;"	d
GL_NV_register_combiners2	./GL/glew.h	/^#define GL_NV_register_combiners2 /;"	d
GL_NV_representative_fragment_test	./GL/glew.h	/^#define GL_NV_representative_fragment_test /;"	d
GL_NV_robustness_video_memory_purge	./GL/glew.h	/^#define GL_NV_robustness_video_memory_purge /;"	d
GL_NV_sRGB_formats	./GL/glew.h	/^#define GL_NV_sRGB_formats /;"	d
GL_NV_sample_locations	./GL/glew.h	/^#define GL_NV_sample_locations /;"	d
GL_NV_sample_mask_override_coverage	./GL/glew.h	/^#define GL_NV_sample_mask_override_coverage /;"	d
GL_NV_scissor_exclusive	./GL/glew.h	/^#define GL_NV_scissor_exclusive /;"	d
GL_NV_shader_atomic_counters	./GL/glew.h	/^#define GL_NV_shader_atomic_counters /;"	d
GL_NV_shader_atomic_float	./GL/glew.h	/^#define GL_NV_shader_atomic_float /;"	d
GL_NV_shader_atomic_float64	./GL/glew.h	/^#define GL_NV_shader_atomic_float64 /;"	d
GL_NV_shader_atomic_fp16_vector	./GL/glew.h	/^#define GL_NV_shader_atomic_fp16_vector /;"	d
GL_NV_shader_atomic_int64	./GL/glew.h	/^#define GL_NV_shader_atomic_int64 /;"	d
GL_NV_shader_buffer_load	./GL/glew.h	/^#define GL_NV_shader_buffer_load /;"	d
GL_NV_shader_noperspective_interpolation	./GL/glew.h	/^#define GL_NV_shader_noperspective_interpolation /;"	d
GL_NV_shader_storage_buffer_object	./GL/glew.h	/^#define GL_NV_shader_storage_buffer_object /;"	d
GL_NV_shader_subgroup_partitioned	./GL/glew.h	/^#define GL_NV_shader_subgroup_partitioned /;"	d
GL_NV_shader_texture_footprint	./GL/glew.h	/^#define GL_NV_shader_texture_footprint /;"	d
GL_NV_shader_thread_group	./GL/glew.h	/^#define GL_NV_shader_thread_group /;"	d
GL_NV_shader_thread_shuffle	./GL/glew.h	/^#define GL_NV_shader_thread_shuffle /;"	d
GL_NV_shading_rate_image	./GL/glew.h	/^#define GL_NV_shading_rate_image /;"	d
GL_NV_shadow_samplers_array	./GL/glew.h	/^#define GL_NV_shadow_samplers_array /;"	d
GL_NV_shadow_samplers_cube	./GL/glew.h	/^#define GL_NV_shadow_samplers_cube /;"	d
GL_NV_stereo_view_rendering	./GL/glew.h	/^#define GL_NV_stereo_view_rendering /;"	d
GL_NV_tessellation_program5	./GL/glew.h	/^#define GL_NV_tessellation_program5 /;"	d
GL_NV_texgen_emboss	./GL/glew.h	/^#define GL_NV_texgen_emboss /;"	d
GL_NV_texgen_reflection	./GL/glew.h	/^#define GL_NV_texgen_reflection /;"	d
GL_NV_texture_array	./GL/glew.h	/^#define GL_NV_texture_array /;"	d
GL_NV_texture_barrier	./GL/glew.h	/^#define GL_NV_texture_barrier /;"	d
GL_NV_texture_border_clamp	./GL/glew.h	/^#define GL_NV_texture_border_clamp /;"	d
GL_NV_texture_compression_latc	./GL/glew.h	/^#define GL_NV_texture_compression_latc /;"	d
GL_NV_texture_compression_s3tc	./GL/glew.h	/^#define GL_NV_texture_compression_s3tc /;"	d
GL_NV_texture_compression_s3tc_update	./GL/glew.h	/^#define GL_NV_texture_compression_s3tc_update /;"	d
GL_NV_texture_compression_vtc	./GL/glew.h	/^#define GL_NV_texture_compression_vtc /;"	d
GL_NV_texture_env_combine4	./GL/glew.h	/^#define GL_NV_texture_env_combine4 /;"	d
GL_NV_texture_expand_normal	./GL/glew.h	/^#define GL_NV_texture_expand_normal /;"	d
GL_NV_texture_multisample	./GL/glew.h	/^#define GL_NV_texture_multisample /;"	d
GL_NV_texture_npot_2D_mipmap	./GL/glew.h	/^#define GL_NV_texture_npot_2D_mipmap /;"	d
GL_NV_texture_rectangle	./GL/glew.h	/^#define GL_NV_texture_rectangle /;"	d
GL_NV_texture_rectangle_compressed	./GL/glew.h	/^#define GL_NV_texture_rectangle_compressed /;"	d
GL_NV_texture_shader	./GL/glew.h	/^#define GL_NV_texture_shader /;"	d
GL_NV_texture_shader2	./GL/glew.h	/^#define GL_NV_texture_shader2 /;"	d
GL_NV_texture_shader3	./GL/glew.h	/^#define GL_NV_texture_shader3 /;"	d
GL_NV_transform_feedback	./GL/glew.h	/^#define GL_NV_transform_feedback /;"	d
GL_NV_transform_feedback2	./GL/glew.h	/^#define GL_NV_transform_feedback2 /;"	d
GL_NV_uniform_buffer_unified_memory	./GL/glew.h	/^#define GL_NV_uniform_buffer_unified_memory /;"	d
GL_NV_vdpau_interop	./GL/glew.h	/^#define GL_NV_vdpau_interop /;"	d
GL_NV_vdpau_interop2	./GL/glew.h	/^#define GL_NV_vdpau_interop2 /;"	d
GL_NV_vertex_array_range	./GL/glew.h	/^#define GL_NV_vertex_array_range /;"	d
GL_NV_vertex_array_range2	./GL/glew.h	/^#define GL_NV_vertex_array_range2 /;"	d
GL_NV_vertex_attrib_integer_64bit	./GL/glew.h	/^#define GL_NV_vertex_attrib_integer_64bit /;"	d
GL_NV_vertex_buffer_unified_memory	./GL/glew.h	/^#define GL_NV_vertex_buffer_unified_memory /;"	d
GL_NV_vertex_program	./GL/glew.h	/^#define GL_NV_vertex_program /;"	d
GL_NV_vertex_program1_1	./GL/glew.h	/^#define GL_NV_vertex_program1_1 /;"	d
GL_NV_vertex_program2	./GL/glew.h	/^#define GL_NV_vertex_program2 /;"	d
GL_NV_vertex_program2_option	./GL/glew.h	/^#define GL_NV_vertex_program2_option /;"	d
GL_NV_vertex_program3	./GL/glew.h	/^#define GL_NV_vertex_program3 /;"	d
GL_NV_vertex_program4	./GL/glew.h	/^#define GL_NV_vertex_program4 /;"	d
GL_NV_video_capture	./GL/glew.h	/^#define GL_NV_video_capture /;"	d
GL_NV_viewport_array	./GL/glew.h	/^#define GL_NV_viewport_array /;"	d
GL_NV_viewport_array2	./GL/glew.h	/^#define GL_NV_viewport_array2 /;"	d
GL_NV_viewport_swizzle	./GL/glew.h	/^#define GL_NV_viewport_swizzle /;"	d
GL_OBJECT_ACTIVE_ATTRIBUTES_ARB	./GL/glew.h	/^#define GL_OBJECT_ACTIVE_ATTRIBUTES_ARB /;"	d
GL_OBJECT_ACTIVE_ATTRIBUTE_MAX_LENGTH_ARB	./GL/glew.h	/^#define GL_OBJECT_ACTIVE_ATTRIBUTE_MAX_LENGTH_ARB /;"	d
GL_OBJECT_ACTIVE_UNIFORMS_ARB	./GL/glew.h	/^#define GL_OBJECT_ACTIVE_UNIFORMS_ARB /;"	d
GL_OBJECT_ACTIVE_UNIFORM_MAX_LENGTH_ARB	./GL/glew.h	/^#define GL_OBJECT_ACTIVE_UNIFORM_MAX_LENGTH_ARB /;"	d
GL_OBJECT_ATTACHED_OBJECTS_ARB	./GL/glew.h	/^#define GL_OBJECT_ATTACHED_OBJECTS_ARB /;"	d
GL_OBJECT_BUFFER_SIZE_ATI	./GL/glew.h	/^#define GL_OBJECT_BUFFER_SIZE_ATI /;"	d
GL_OBJECT_BUFFER_USAGE_ATI	./GL/glew.h	/^#define GL_OBJECT_BUFFER_USAGE_ATI /;"	d
GL_OBJECT_COMPILE_STATUS_ARB	./GL/glew.h	/^#define GL_OBJECT_COMPILE_STATUS_ARB /;"	d
GL_OBJECT_DELETE_STATUS_ARB	./GL/glew.h	/^#define GL_OBJECT_DELETE_STATUS_ARB /;"	d
GL_OBJECT_DISTANCE_TO_LINE_SGIS	./GL/glew.h	/^#define GL_OBJECT_DISTANCE_TO_LINE_SGIS /;"	d
GL_OBJECT_DISTANCE_TO_POINT_SGIS	./GL/glew.h	/^#define GL_OBJECT_DISTANCE_TO_POINT_SGIS /;"	d
GL_OBJECT_INFO_LOG_LENGTH_ARB	./GL/glew.h	/^#define GL_OBJECT_INFO_LOG_LENGTH_ARB /;"	d
GL_OBJECT_LINEAR	./GL/glew.h	/^#define GL_OBJECT_LINEAR /;"	d
GL_OBJECT_LINE_SGIS	./GL/glew.h	/^#define GL_OBJECT_LINE_SGIS /;"	d
GL_OBJECT_LINK_STATUS_ARB	./GL/glew.h	/^#define GL_OBJECT_LINK_STATUS_ARB /;"	d
GL_OBJECT_PLANE	./GL/glew.h	/^#define GL_OBJECT_PLANE /;"	d
GL_OBJECT_POINT_SGIS	./GL/glew.h	/^#define GL_OBJECT_POINT_SGIS /;"	d
GL_OBJECT_SHADER_SOURCE_LENGTH_ARB	./GL/glew.h	/^#define GL_OBJECT_SHADER_SOURCE_LENGTH_ARB /;"	d
GL_OBJECT_SPACE_SGIX	./GL/glew.h	/^#define GL_OBJECT_SPACE_SGIX /;"	d
GL_OBJECT_SUBTYPE_ARB	./GL/glew.h	/^#define GL_OBJECT_SUBTYPE_ARB /;"	d
GL_OBJECT_TYPE	./GL/glew.h	/^#define GL_OBJECT_TYPE /;"	d
GL_OBJECT_TYPE_APPLE	./GL/glew.h	/^#define GL_OBJECT_TYPE_APPLE /;"	d
GL_OBJECT_TYPE_ARB	./GL/glew.h	/^#define GL_OBJECT_TYPE_ARB /;"	d
GL_OBJECT_VALIDATE_STATUS_ARB	./GL/glew.h	/^#define GL_OBJECT_VALIDATE_STATUS_ARB /;"	d
GL_OCCLUSION_INSTRUMENT_SGIX	./GL/glew.h	/^#define GL_OCCLUSION_INSTRUMENT_SGIX /;"	d
GL_OCCLUSION_QUERY_EVENT_MASK_AMD	./GL/glew.h	/^#define GL_OCCLUSION_QUERY_EVENT_MASK_AMD /;"	d
GL_OES_EGL_image	./GL/glew.h	/^#define GL_OES_EGL_image /;"	d
GL_OES_EGL_image_external	./GL/glew.h	/^#define GL_OES_EGL_image_external /;"	d
GL_OES_EGL_image_external_essl3	./GL/glew.h	/^#define GL_OES_EGL_image_external_essl3 /;"	d
GL_OES_blend_equation_separate	./GL/glew.h	/^#define GL_OES_blend_equation_separate /;"	d
GL_OES_blend_func_separate	./GL/glew.h	/^#define GL_OES_blend_func_separate /;"	d
GL_OES_blend_subtract	./GL/glew.h	/^#define GL_OES_blend_subtract /;"	d
GL_OES_byte_coordinates	./GL/glew.h	/^#define GL_OES_byte_coordinates /;"	d
GL_OES_compressed_ETC1_RGB8_texture	./GL/glew.h	/^#define GL_OES_compressed_ETC1_RGB8_texture /;"	d
GL_OES_compressed_paletted_texture	./GL/glew.h	/^#define GL_OES_compressed_paletted_texture /;"	d
GL_OES_copy_image	./GL/glew.h	/^#define GL_OES_copy_image /;"	d
GL_OES_depth24	./GL/glew.h	/^#define GL_OES_depth24 /;"	d
GL_OES_depth32	./GL/glew.h	/^#define GL_OES_depth32 /;"	d
GL_OES_depth_texture	./GL/glew.h	/^#define GL_OES_depth_texture /;"	d
GL_OES_depth_texture_cube_map	./GL/glew.h	/^#define GL_OES_depth_texture_cube_map /;"	d
GL_OES_draw_buffers_indexed	./GL/glew.h	/^#define GL_OES_draw_buffers_indexed /;"	d
GL_OES_draw_texture	./GL/glew.h	/^#define GL_OES_draw_texture /;"	d
GL_OES_element_index_uint	./GL/glew.h	/^#define GL_OES_element_index_uint /;"	d
GL_OES_extended_matrix_palette	./GL/glew.h	/^#define GL_OES_extended_matrix_palette /;"	d
GL_OES_fbo_render_mipmap	./GL/glew.h	/^#define GL_OES_fbo_render_mipmap /;"	d
GL_OES_fragment_precision_high	./GL/glew.h	/^#define GL_OES_fragment_precision_high /;"	d
GL_OES_framebuffer_object	./GL/glew.h	/^#define GL_OES_framebuffer_object /;"	d
GL_OES_geometry_point_size	./GL/glew.h	/^#define GL_OES_geometry_point_size /;"	d
GL_OES_geometry_shader	./GL/glew.h	/^#define GL_OES_geometry_shader /;"	d
GL_OES_get_program_binary	./GL/glew.h	/^#define GL_OES_get_program_binary /;"	d
GL_OES_gpu_shader5	./GL/glew.h	/^#define GL_OES_gpu_shader5 /;"	d
GL_OES_mapbuffer	./GL/glew.h	/^#define GL_OES_mapbuffer /;"	d
GL_OES_matrix_get	./GL/glew.h	/^#define GL_OES_matrix_get /;"	d
GL_OES_matrix_palette	./GL/glew.h	/^#define GL_OES_matrix_palette /;"	d
GL_OES_packed_depth_stencil	./GL/glew.h	/^#define GL_OES_packed_depth_stencil /;"	d
GL_OES_point_size_array	./GL/glew.h	/^#define GL_OES_point_size_array /;"	d
GL_OES_point_sprite	./GL/glew.h	/^#define GL_OES_point_sprite /;"	d
GL_OES_read_format	./GL/glew.h	/^#define GL_OES_read_format /;"	d
GL_OES_required_internalformat	./GL/glew.h	/^#define GL_OES_required_internalformat /;"	d
GL_OES_rgb8_rgba8	./GL/glew.h	/^#define GL_OES_rgb8_rgba8 /;"	d
GL_OES_sample_shading	./GL/glew.h	/^#define GL_OES_sample_shading /;"	d
GL_OES_sample_variables	./GL/glew.h	/^#define GL_OES_sample_variables /;"	d
GL_OES_shader_image_atomic	./GL/glew.h	/^#define GL_OES_shader_image_atomic /;"	d
GL_OES_shader_io_blocks	./GL/glew.h	/^#define GL_OES_shader_io_blocks /;"	d
GL_OES_shader_multisample_interpolation	./GL/glew.h	/^#define GL_OES_shader_multisample_interpolation /;"	d
GL_OES_single_precision	./GL/glew.h	/^#define GL_OES_single_precision /;"	d
GL_OES_standard_derivatives	./GL/glew.h	/^#define GL_OES_standard_derivatives /;"	d
GL_OES_stencil1	./GL/glew.h	/^#define GL_OES_stencil1 /;"	d
GL_OES_stencil4	./GL/glew.h	/^#define GL_OES_stencil4 /;"	d
GL_OES_stencil8	./GL/glew.h	/^#define GL_OES_stencil8 /;"	d
GL_OES_surfaceless_context	./GL/glew.h	/^#define GL_OES_surfaceless_context /;"	d
GL_OES_tessellation_point_size	./GL/glew.h	/^#define GL_OES_tessellation_point_size /;"	d
GL_OES_tessellation_shader	./GL/glew.h	/^#define GL_OES_tessellation_shader /;"	d
GL_OES_texture_3D	./GL/glew.h	/^#define GL_OES_texture_3D /;"	d
GL_OES_texture_border_clamp	./GL/glew.h	/^#define GL_OES_texture_border_clamp /;"	d
GL_OES_texture_buffer	./GL/glew.h	/^#define GL_OES_texture_buffer /;"	d
GL_OES_texture_compression_astc	./GL/glew.h	/^#define GL_OES_texture_compression_astc /;"	d
GL_OES_texture_cube_map	./GL/glew.h	/^#define GL_OES_texture_cube_map /;"	d
GL_OES_texture_cube_map_array	./GL/glew.h	/^#define GL_OES_texture_cube_map_array /;"	d
GL_OES_texture_env_crossbar	./GL/glew.h	/^#define GL_OES_texture_env_crossbar /;"	d
GL_OES_texture_mirrored_repeat	./GL/glew.h	/^#define GL_OES_texture_mirrored_repeat /;"	d
GL_OES_texture_npot	./GL/glew.h	/^#define GL_OES_texture_npot /;"	d
GL_OES_texture_stencil8	./GL/glew.h	/^#define GL_OES_texture_stencil8 /;"	d
GL_OES_texture_storage_multisample_2d_array	./GL/glew.h	/^#define GL_OES_texture_storage_multisample_2d_array /;"	d
GL_OES_texture_view	./GL/glew.h	/^#define GL_OES_texture_view /;"	d
GL_OES_vertex_array_object	./GL/glew.h	/^#define GL_OES_vertex_array_object /;"	d
GL_OES_vertex_half_float	./GL/glew.h	/^#define GL_OES_vertex_half_float /;"	d
GL_OES_vertex_type_10_10_10_2	./GL/glew.h	/^#define GL_OES_vertex_type_10_10_10_2 /;"	d
GL_OFFSET	./GL/glew.h	/^#define GL_OFFSET /;"	d
GL_OFFSET_HILO_PROJECTIVE_TEXTURE_2D_NV	./GL/glew.h	/^#define GL_OFFSET_HILO_PROJECTIVE_TEXTURE_2D_NV /;"	d
GL_OFFSET_HILO_PROJECTIVE_TEXTURE_RECTANGLE_NV	./GL/glew.h	/^#define GL_OFFSET_HILO_PROJECTIVE_TEXTURE_RECTANGLE_NV /;"	d
GL_OFFSET_HILO_TEXTURE_2D_NV	./GL/glew.h	/^#define GL_OFFSET_HILO_TEXTURE_2D_NV /;"	d
GL_OFFSET_HILO_TEXTURE_RECTANGLE_NV	./GL/glew.h	/^#define GL_OFFSET_HILO_TEXTURE_RECTANGLE_NV /;"	d
GL_OFFSET_PROJECTIVE_TEXTURE_2D_NV	./GL/glew.h	/^#define GL_OFFSET_PROJECTIVE_TEXTURE_2D_NV /;"	d
GL_OFFSET_PROJECTIVE_TEXTURE_2D_SCALE_NV	./GL/glew.h	/^#define GL_OFFSET_PROJECTIVE_TEXTURE_2D_SCALE_NV /;"	d
GL_OFFSET_PROJECTIVE_TEXTURE_RECTANGLE_NV	./GL/glew.h	/^#define GL_OFFSET_PROJECTIVE_TEXTURE_RECTANGLE_NV /;"	d
GL_OFFSET_PROJECTIVE_TEXTURE_RECTANGLE_SCALE_NV	./GL/glew.h	/^#define GL_OFFSET_PROJECTIVE_TEXTURE_RECTANGLE_SCALE_NV /;"	d
GL_OFFSET_TEXTURE_2D_BIAS_NV	./GL/glew.h	/^#define GL_OFFSET_TEXTURE_2D_BIAS_NV /;"	d
GL_OFFSET_TEXTURE_2D_MATRIX_NV	./GL/glew.h	/^#define GL_OFFSET_TEXTURE_2D_MATRIX_NV /;"	d
GL_OFFSET_TEXTURE_2D_NV	./GL/glew.h	/^#define GL_OFFSET_TEXTURE_2D_NV /;"	d
GL_OFFSET_TEXTURE_2D_SCALE_NV	./GL/glew.h	/^#define GL_OFFSET_TEXTURE_2D_SCALE_NV /;"	d
GL_OFFSET_TEXTURE_BIAS_NV	./GL/glew.h	/^#define GL_OFFSET_TEXTURE_BIAS_NV /;"	d
GL_OFFSET_TEXTURE_MATRIX_NV	./GL/glew.h	/^#define GL_OFFSET_TEXTURE_MATRIX_NV /;"	d
GL_OFFSET_TEXTURE_RECTANGLE_NV	./GL/glew.h	/^#define GL_OFFSET_TEXTURE_RECTANGLE_NV /;"	d
GL_OFFSET_TEXTURE_RECTANGLE_SCALE_NV	./GL/glew.h	/^#define GL_OFFSET_TEXTURE_RECTANGLE_SCALE_NV /;"	d
GL_OFFSET_TEXTURE_SCALE_NV	./GL/glew.h	/^#define GL_OFFSET_TEXTURE_SCALE_NV /;"	d
GL_OML_interlace	./GL/glew.h	/^#define GL_OML_interlace /;"	d
GL_OML_resample	./GL/glew.h	/^#define GL_OML_resample /;"	d
GL_OML_subsample	./GL/glew.h	/^#define GL_OML_subsample /;"	d
GL_ONE	./GL/glew.h	/^#define GL_ONE /;"	d
GL_ONE_EXT	./GL/glew.h	/^#define GL_ONE_EXT /;"	d
GL_ONE_MINUS_CONSTANT_ALPHA	./GL/glew.h	/^#define GL_ONE_MINUS_CONSTANT_ALPHA /;"	d
GL_ONE_MINUS_CONSTANT_ALPHA_EXT	./GL/glew.h	/^#define GL_ONE_MINUS_CONSTANT_ALPHA_EXT /;"	d
GL_ONE_MINUS_CONSTANT_COLOR	./GL/glew.h	/^#define GL_ONE_MINUS_CONSTANT_COLOR /;"	d
GL_ONE_MINUS_CONSTANT_COLOR_EXT	./GL/glew.h	/^#define GL_ONE_MINUS_CONSTANT_COLOR_EXT /;"	d
GL_ONE_MINUS_DST_ALPHA	./GL/glew.h	/^#define GL_ONE_MINUS_DST_ALPHA /;"	d
GL_ONE_MINUS_DST_COLOR	./GL/glew.h	/^#define GL_ONE_MINUS_DST_COLOR /;"	d
GL_ONE_MINUS_SRC1_ALPHA	./GL/glew.h	/^#define GL_ONE_MINUS_SRC1_ALPHA /;"	d
GL_ONE_MINUS_SRC1_ALPHA_EXT	./GL/glew.h	/^#define GL_ONE_MINUS_SRC1_ALPHA_EXT /;"	d
GL_ONE_MINUS_SRC1_COLOR	./GL/glew.h	/^#define GL_ONE_MINUS_SRC1_COLOR /;"	d
GL_ONE_MINUS_SRC1_COLOR_EXT	./GL/glew.h	/^#define GL_ONE_MINUS_SRC1_COLOR_EXT /;"	d
GL_ONE_MINUS_SRC_ALPHA	./GL/glew.h	/^#define GL_ONE_MINUS_SRC_ALPHA /;"	d
GL_ONE_MINUS_SRC_COLOR	./GL/glew.h	/^#define GL_ONE_MINUS_SRC_COLOR /;"	d
GL_OPERAND0_ALPHA	./GL/glew.h	/^#define GL_OPERAND0_ALPHA /;"	d
GL_OPERAND0_ALPHA_ARB	./GL/glew.h	/^#define GL_OPERAND0_ALPHA_ARB /;"	d
GL_OPERAND0_ALPHA_EXT	./GL/glew.h	/^#define GL_OPERAND0_ALPHA_EXT /;"	d
GL_OPERAND0_RGB	./GL/glew.h	/^#define GL_OPERAND0_RGB /;"	d
GL_OPERAND0_RGB_ARB	./GL/glew.h	/^#define GL_OPERAND0_RGB_ARB /;"	d
GL_OPERAND0_RGB_EXT	./GL/glew.h	/^#define GL_OPERAND0_RGB_EXT /;"	d
GL_OPERAND1_ALPHA	./GL/glew.h	/^#define GL_OPERAND1_ALPHA /;"	d
GL_OPERAND1_ALPHA_ARB	./GL/glew.h	/^#define GL_OPERAND1_ALPHA_ARB /;"	d
GL_OPERAND1_ALPHA_EXT	./GL/glew.h	/^#define GL_OPERAND1_ALPHA_EXT /;"	d
GL_OPERAND1_RGB	./GL/glew.h	/^#define GL_OPERAND1_RGB /;"	d
GL_OPERAND1_RGB_ARB	./GL/glew.h	/^#define GL_OPERAND1_RGB_ARB /;"	d
GL_OPERAND1_RGB_EXT	./GL/glew.h	/^#define GL_OPERAND1_RGB_EXT /;"	d
GL_OPERAND2_ALPHA	./GL/glew.h	/^#define GL_OPERAND2_ALPHA /;"	d
GL_OPERAND2_ALPHA_ARB	./GL/glew.h	/^#define GL_OPERAND2_ALPHA_ARB /;"	d
GL_OPERAND2_ALPHA_EXT	./GL/glew.h	/^#define GL_OPERAND2_ALPHA_EXT /;"	d
GL_OPERAND2_RGB	./GL/glew.h	/^#define GL_OPERAND2_RGB /;"	d
GL_OPERAND2_RGB_ARB	./GL/glew.h	/^#define GL_OPERAND2_RGB_ARB /;"	d
GL_OPERAND2_RGB_EXT	./GL/glew.h	/^#define GL_OPERAND2_RGB_EXT /;"	d
GL_OPERAND3_ALPHA_NV	./GL/glew.h	/^#define GL_OPERAND3_ALPHA_NV /;"	d
GL_OPERAND3_RGB_NV	./GL/glew.h	/^#define GL_OPERAND3_RGB_NV /;"	d
GL_OPTIMAL_TILING_EXT	./GL/glew.h	/^#define GL_OPTIMAL_TILING_EXT /;"	d
GL_OP_ADD_EXT	./GL/glew.h	/^#define GL_OP_ADD_EXT /;"	d
GL_OP_CLAMP_EXT	./GL/glew.h	/^#define GL_OP_CLAMP_EXT /;"	d
GL_OP_CROSS_PRODUCT_EXT	./GL/glew.h	/^#define GL_OP_CROSS_PRODUCT_EXT /;"	d
GL_OP_DOT3_EXT	./GL/glew.h	/^#define GL_OP_DOT3_EXT /;"	d
GL_OP_DOT4_EXT	./GL/glew.h	/^#define GL_OP_DOT4_EXT /;"	d
GL_OP_EXP_BASE_2_EXT	./GL/glew.h	/^#define GL_OP_EXP_BASE_2_EXT /;"	d
GL_OP_FLOOR_EXT	./GL/glew.h	/^#define GL_OP_FLOOR_EXT /;"	d
GL_OP_FRAC_EXT	./GL/glew.h	/^#define GL_OP_FRAC_EXT /;"	d
GL_OP_INDEX_EXT	./GL/glew.h	/^#define GL_OP_INDEX_EXT /;"	d
GL_OP_LOG_BASE_2_EXT	./GL/glew.h	/^#define GL_OP_LOG_BASE_2_EXT /;"	d
GL_OP_MADD_EXT	./GL/glew.h	/^#define GL_OP_MADD_EXT /;"	d
GL_OP_MAX_EXT	./GL/glew.h	/^#define GL_OP_MAX_EXT /;"	d
GL_OP_MIN_EXT	./GL/glew.h	/^#define GL_OP_MIN_EXT /;"	d
GL_OP_MOV_EXT	./GL/glew.h	/^#define GL_OP_MOV_EXT /;"	d
GL_OP_MULTIPLY_MATRIX_EXT	./GL/glew.h	/^#define GL_OP_MULTIPLY_MATRIX_EXT /;"	d
GL_OP_MUL_EXT	./GL/glew.h	/^#define GL_OP_MUL_EXT /;"	d
GL_OP_NEGATE_EXT	./GL/glew.h	/^#define GL_OP_NEGATE_EXT /;"	d
GL_OP_POWER_EXT	./GL/glew.h	/^#define GL_OP_POWER_EXT /;"	d
GL_OP_RECIP_EXT	./GL/glew.h	/^#define GL_OP_RECIP_EXT /;"	d
GL_OP_RECIP_SQRT_EXT	./GL/glew.h	/^#define GL_OP_RECIP_SQRT_EXT /;"	d
GL_OP_ROUND_EXT	./GL/glew.h	/^#define GL_OP_ROUND_EXT /;"	d
GL_OP_SET_GE_EXT	./GL/glew.h	/^#define GL_OP_SET_GE_EXT /;"	d
GL_OP_SET_LT_EXT	./GL/glew.h	/^#define GL_OP_SET_LT_EXT /;"	d
GL_OP_SUB_EXT	./GL/glew.h	/^#define GL_OP_SUB_EXT /;"	d
GL_OR	./GL/glew.h	/^#define GL_OR /;"	d
GL_ORDER	./GL/glew.h	/^#define GL_ORDER /;"	d
GL_OR_INVERTED	./GL/glew.h	/^#define GL_OR_INVERTED /;"	d
GL_OR_REVERSE	./GL/glew.h	/^#define GL_OR_REVERSE /;"	d
GL_OUTPUT_COLOR0_EXT	./GL/glew.h	/^#define GL_OUTPUT_COLOR0_EXT /;"	d
GL_OUTPUT_COLOR1_EXT	./GL/glew.h	/^#define GL_OUTPUT_COLOR1_EXT /;"	d
GL_OUTPUT_FOG_EXT	./GL/glew.h	/^#define GL_OUTPUT_FOG_EXT /;"	d
GL_OUTPUT_POINT_SIZE_ATIX	./GL/glew.h	/^#define GL_OUTPUT_POINT_SIZE_ATIX /;"	d
GL_OUTPUT_TEXTURE_COORD0_EXT	./GL/glew.h	/^#define GL_OUTPUT_TEXTURE_COORD0_EXT /;"	d
GL_OUTPUT_TEXTURE_COORD10_EXT	./GL/glew.h	/^#define GL_OUTPUT_TEXTURE_COORD10_EXT /;"	d
GL_OUTPUT_TEXTURE_COORD11_EXT	./GL/glew.h	/^#define GL_OUTPUT_TEXTURE_COORD11_EXT /;"	d
GL_OUTPUT_TEXTURE_COORD12_EXT	./GL/glew.h	/^#define GL_OUTPUT_TEXTURE_COORD12_EXT /;"	d
GL_OUTPUT_TEXTURE_COORD13_EXT	./GL/glew.h	/^#define GL_OUTPUT_TEXTURE_COORD13_EXT /;"	d
GL_OUTPUT_TEXTURE_COORD14_EXT	./GL/glew.h	/^#define GL_OUTPUT_TEXTURE_COORD14_EXT /;"	d
GL_OUTPUT_TEXTURE_COORD15_EXT	./GL/glew.h	/^#define GL_OUTPUT_TEXTURE_COORD15_EXT /;"	d
GL_OUTPUT_TEXTURE_COORD16_EXT	./GL/glew.h	/^#define GL_OUTPUT_TEXTURE_COORD16_EXT /;"	d
GL_OUTPUT_TEXTURE_COORD17_EXT	./GL/glew.h	/^#define GL_OUTPUT_TEXTURE_COORD17_EXT /;"	d
GL_OUTPUT_TEXTURE_COORD18_EXT	./GL/glew.h	/^#define GL_OUTPUT_TEXTURE_COORD18_EXT /;"	d
GL_OUTPUT_TEXTURE_COORD19_EXT	./GL/glew.h	/^#define GL_OUTPUT_TEXTURE_COORD19_EXT /;"	d
GL_OUTPUT_TEXTURE_COORD1_EXT	./GL/glew.h	/^#define GL_OUTPUT_TEXTURE_COORD1_EXT /;"	d
GL_OUTPUT_TEXTURE_COORD20_EXT	./GL/glew.h	/^#define GL_OUTPUT_TEXTURE_COORD20_EXT /;"	d
GL_OUTPUT_TEXTURE_COORD21_EXT	./GL/glew.h	/^#define GL_OUTPUT_TEXTURE_COORD21_EXT /;"	d
GL_OUTPUT_TEXTURE_COORD22_EXT	./GL/glew.h	/^#define GL_OUTPUT_TEXTURE_COORD22_EXT /;"	d
GL_OUTPUT_TEXTURE_COORD23_EXT	./GL/glew.h	/^#define GL_OUTPUT_TEXTURE_COORD23_EXT /;"	d
GL_OUTPUT_TEXTURE_COORD24_EXT	./GL/glew.h	/^#define GL_OUTPUT_TEXTURE_COORD24_EXT /;"	d
GL_OUTPUT_TEXTURE_COORD25_EXT	./GL/glew.h	/^#define GL_OUTPUT_TEXTURE_COORD25_EXT /;"	d
GL_OUTPUT_TEXTURE_COORD26_EXT	./GL/glew.h	/^#define GL_OUTPUT_TEXTURE_COORD26_EXT /;"	d
GL_OUTPUT_TEXTURE_COORD27_EXT	./GL/glew.h	/^#define GL_OUTPUT_TEXTURE_COORD27_EXT /;"	d
GL_OUTPUT_TEXTURE_COORD28_EXT	./GL/glew.h	/^#define GL_OUTPUT_TEXTURE_COORD28_EXT /;"	d
GL_OUTPUT_TEXTURE_COORD29_EXT	./GL/glew.h	/^#define GL_OUTPUT_TEXTURE_COORD29_EXT /;"	d
GL_OUTPUT_TEXTURE_COORD2_EXT	./GL/glew.h	/^#define GL_OUTPUT_TEXTURE_COORD2_EXT /;"	d
GL_OUTPUT_TEXTURE_COORD30_EXT	./GL/glew.h	/^#define GL_OUTPUT_TEXTURE_COORD30_EXT /;"	d
GL_OUTPUT_TEXTURE_COORD31_EXT	./GL/glew.h	/^#define GL_OUTPUT_TEXTURE_COORD31_EXT /;"	d
GL_OUTPUT_TEXTURE_COORD3_EXT	./GL/glew.h	/^#define GL_OUTPUT_TEXTURE_COORD3_EXT /;"	d
GL_OUTPUT_TEXTURE_COORD4_EXT	./GL/glew.h	/^#define GL_OUTPUT_TEXTURE_COORD4_EXT /;"	d
GL_OUTPUT_TEXTURE_COORD5_EXT	./GL/glew.h	/^#define GL_OUTPUT_TEXTURE_COORD5_EXT /;"	d
GL_OUTPUT_TEXTURE_COORD6_EXT	./GL/glew.h	/^#define GL_OUTPUT_TEXTURE_COORD6_EXT /;"	d
GL_OUTPUT_TEXTURE_COORD7_EXT	./GL/glew.h	/^#define GL_OUTPUT_TEXTURE_COORD7_EXT /;"	d
GL_OUTPUT_TEXTURE_COORD8_EXT	./GL/glew.h	/^#define GL_OUTPUT_TEXTURE_COORD8_EXT /;"	d
GL_OUTPUT_TEXTURE_COORD9_EXT	./GL/glew.h	/^#define GL_OUTPUT_TEXTURE_COORD9_EXT /;"	d
GL_OUTPUT_VERTEX_EXT	./GL/glew.h	/^#define GL_OUTPUT_VERTEX_EXT /;"	d
GL_OUT_OF_MEMORY	./GL/glew.h	/^#define GL_OUT_OF_MEMORY /;"	d
GL_OVERLAY_KHR	./GL/glew.h	/^#define GL_OVERLAY_KHR /;"	d
GL_OVERLAY_NV	./GL/glew.h	/^#define GL_OVERLAY_NV /;"	d
GL_OVR_multiview	./GL/glew.h	/^#define GL_OVR_multiview /;"	d
GL_OVR_multiview2	./GL/glew.h	/^#define GL_OVR_multiview2 /;"	d
GL_OVR_multiview_multisampled_render_to_texture	./GL/glew.h	/^#define GL_OVR_multiview_multisampled_render_to_texture /;"	d
GL_PACK_ALIGNMENT	./GL/glew.h	/^#define GL_PACK_ALIGNMENT /;"	d
GL_PACK_CMYK_HINT_EXT	./GL/glew.h	/^#define GL_PACK_CMYK_HINT_EXT /;"	d
GL_PACK_COMPRESSED_BLOCK_DEPTH	./GL/glew.h	/^#define GL_PACK_COMPRESSED_BLOCK_DEPTH /;"	d
GL_PACK_COMPRESSED_BLOCK_HEIGHT	./GL/glew.h	/^#define GL_PACK_COMPRESSED_BLOCK_HEIGHT /;"	d
GL_PACK_COMPRESSED_BLOCK_SIZE	./GL/glew.h	/^#define GL_PACK_COMPRESSED_BLOCK_SIZE /;"	d
GL_PACK_COMPRESSED_BLOCK_WIDTH	./GL/glew.h	/^#define GL_PACK_COMPRESSED_BLOCK_WIDTH /;"	d
GL_PACK_IMAGE_HEIGHT	./GL/glew.h	/^#define GL_PACK_IMAGE_HEIGHT /;"	d
GL_PACK_IMAGE_HEIGHT_EXT	./GL/glew.h	/^#define GL_PACK_IMAGE_HEIGHT_EXT /;"	d
GL_PACK_INVERT_MESA	./GL/glew.h	/^#define GL_PACK_INVERT_MESA /;"	d
GL_PACK_LSB_FIRST	./GL/glew.h	/^#define GL_PACK_LSB_FIRST /;"	d
GL_PACK_MAX_COMPRESSED_SIZE_SGIX	./GL/glew.h	/^#define GL_PACK_MAX_COMPRESSED_SIZE_SGIX /;"	d
GL_PACK_RESAMPLE_OML	./GL/glew.h	/^#define GL_PACK_RESAMPLE_OML /;"	d
GL_PACK_RESAMPLE_SGIX	./GL/glew.h	/^#define GL_PACK_RESAMPLE_SGIX /;"	d
GL_PACK_REVERSE_ROW_ORDER_ANGLE	./GL/glew.h	/^#define GL_PACK_REVERSE_ROW_ORDER_ANGLE /;"	d
GL_PACK_ROW_BYTES_APPLE	./GL/glew.h	/^#define GL_PACK_ROW_BYTES_APPLE /;"	d
GL_PACK_ROW_LENGTH	./GL/glew.h	/^#define GL_PACK_ROW_LENGTH /;"	d
GL_PACK_ROW_LENGTH_NV	./GL/glew.h	/^#define GL_PACK_ROW_LENGTH_NV /;"	d
GL_PACK_SKIP_IMAGES	./GL/glew.h	/^#define GL_PACK_SKIP_IMAGES /;"	d
GL_PACK_SKIP_IMAGES_EXT	./GL/glew.h	/^#define GL_PACK_SKIP_IMAGES_EXT /;"	d
GL_PACK_SKIP_PIXELS	./GL/glew.h	/^#define GL_PACK_SKIP_PIXELS /;"	d
GL_PACK_SKIP_PIXELS_NV	./GL/glew.h	/^#define GL_PACK_SKIP_PIXELS_NV /;"	d
GL_PACK_SKIP_ROWS	./GL/glew.h	/^#define GL_PACK_SKIP_ROWS /;"	d
GL_PACK_SKIP_ROWS_NV	./GL/glew.h	/^#define GL_PACK_SKIP_ROWS_NV /;"	d
GL_PACK_SUBSAMPLE_RATE_SGIX	./GL/glew.h	/^#define GL_PACK_SUBSAMPLE_RATE_SGIX /;"	d
GL_PACK_SWAP_BYTES	./GL/glew.h	/^#define GL_PACK_SWAP_BYTES /;"	d
GL_PALETTE4_R5_G6_B5_OES	./GL/glew.h	/^#define GL_PALETTE4_R5_G6_B5_OES /;"	d
GL_PALETTE4_RGB5_A1_OES	./GL/glew.h	/^#define GL_PALETTE4_RGB5_A1_OES /;"	d
GL_PALETTE4_RGB8_OES	./GL/glew.h	/^#define GL_PALETTE4_RGB8_OES /;"	d
GL_PALETTE4_RGBA4_OES	./GL/glew.h	/^#define GL_PALETTE4_RGBA4_OES /;"	d
GL_PALETTE4_RGBA8_OES	./GL/glew.h	/^#define GL_PALETTE4_RGBA8_OES /;"	d
GL_PALETTE8_R5_G6_B5_OES	./GL/glew.h	/^#define GL_PALETTE8_R5_G6_B5_OES /;"	d
GL_PALETTE8_RGB5_A1_OES	./GL/glew.h	/^#define GL_PALETTE8_RGB5_A1_OES /;"	d
GL_PALETTE8_RGB8_OES	./GL/glew.h	/^#define GL_PALETTE8_RGB8_OES /;"	d
GL_PALETTE8_RGBA4_OES	./GL/glew.h	/^#define GL_PALETTE8_RGBA4_OES /;"	d
GL_PALETTE8_RGBA8_OES	./GL/glew.h	/^#define GL_PALETTE8_RGBA8_OES /;"	d
GL_PARALLEL_ARRAYS_INTEL	./GL/glew.h	/^#define GL_PARALLEL_ARRAYS_INTEL /;"	d
GL_PARAMETER_BUFFER	./GL/glew.h	/^#define GL_PARAMETER_BUFFER /;"	d
GL_PARAMETER_BUFFER_ARB	./GL/glew.h	/^#define GL_PARAMETER_BUFFER_ARB /;"	d
GL_PARAMETER_BUFFER_BINDING	./GL/glew.h	/^#define GL_PARAMETER_BUFFER_BINDING /;"	d
GL_PARAMETER_BUFFER_BINDING_ARB	./GL/glew.h	/^#define GL_PARAMETER_BUFFER_BINDING_ARB /;"	d
GL_PARTIAL_SUCCESS_NV	./GL/glew.h	/^#define GL_PARTIAL_SUCCESS_NV /;"	d
GL_PASS_THROUGH_NV	./GL/glew.h	/^#define GL_PASS_THROUGH_NV /;"	d
GL_PASS_THROUGH_TOKEN	./GL/glew.h	/^#define GL_PASS_THROUGH_TOKEN /;"	d
GL_PATCHES	./GL/glew.h	/^#define GL_PATCHES /;"	d
GL_PATCHES_EXT	./GL/glew.h	/^#define GL_PATCHES_EXT /;"	d
GL_PATCHES_OES	./GL/glew.h	/^#define GL_PATCHES_OES /;"	d
GL_PATCH_DEFAULT_INNER_LEVEL	./GL/glew.h	/^#define GL_PATCH_DEFAULT_INNER_LEVEL /;"	d
GL_PATCH_DEFAULT_OUTER_LEVEL	./GL/glew.h	/^#define GL_PATCH_DEFAULT_OUTER_LEVEL /;"	d
GL_PATCH_VERTICES	./GL/glew.h	/^#define GL_PATCH_VERTICES /;"	d
GL_PATCH_VERTICES_EXT	./GL/glew.h	/^#define GL_PATCH_VERTICES_EXT /;"	d
GL_PATCH_VERTICES_OES	./GL/glew.h	/^#define GL_PATCH_VERTICES_OES /;"	d
GL_PATH_CLIENT_LENGTH_NV	./GL/glew.h	/^#define GL_PATH_CLIENT_LENGTH_NV /;"	d
GL_PATH_COMMAND_COUNT_NV	./GL/glew.h	/^#define GL_PATH_COMMAND_COUNT_NV /;"	d
GL_PATH_COMPUTED_LENGTH_NV	./GL/glew.h	/^#define GL_PATH_COMPUTED_LENGTH_NV /;"	d
GL_PATH_COORD_COUNT_NV	./GL/glew.h	/^#define GL_PATH_COORD_COUNT_NV /;"	d
GL_PATH_COVER_DEPTH_FUNC_NV	./GL/glew.h	/^#define GL_PATH_COVER_DEPTH_FUNC_NV /;"	d
GL_PATH_DASH_ARRAY_COUNT_NV	./GL/glew.h	/^#define GL_PATH_DASH_ARRAY_COUNT_NV /;"	d
GL_PATH_DASH_CAPS_NV	./GL/glew.h	/^#define GL_PATH_DASH_CAPS_NV /;"	d
GL_PATH_DASH_OFFSET_NV	./GL/glew.h	/^#define GL_PATH_DASH_OFFSET_NV /;"	d
GL_PATH_DASH_OFFSET_RESET_NV	./GL/glew.h	/^#define GL_PATH_DASH_OFFSET_RESET_NV /;"	d
GL_PATH_END_CAPS_NV	./GL/glew.h	/^#define GL_PATH_END_CAPS_NV /;"	d
GL_PATH_ERROR_POSITION_NV	./GL/glew.h	/^#define GL_PATH_ERROR_POSITION_NV /;"	d
GL_PATH_FILL_BOUNDING_BOX_NV	./GL/glew.h	/^#define GL_PATH_FILL_BOUNDING_BOX_NV /;"	d
GL_PATH_FILL_COVER_MODE_NV	./GL/glew.h	/^#define GL_PATH_FILL_COVER_MODE_NV /;"	d
GL_PATH_FILL_MASK_NV	./GL/glew.h	/^#define GL_PATH_FILL_MASK_NV /;"	d
GL_PATH_FILL_MODE_NV	./GL/glew.h	/^#define GL_PATH_FILL_MODE_NV /;"	d
GL_PATH_FOG_GEN_MODE_NV	./GL/glew.h	/^#define GL_PATH_FOG_GEN_MODE_NV /;"	d
GL_PATH_FORMAT_PS_NV	./GL/glew.h	/^#define GL_PATH_FORMAT_PS_NV /;"	d
GL_PATH_FORMAT_SVG_NV	./GL/glew.h	/^#define GL_PATH_FORMAT_SVG_NV /;"	d
GL_PATH_GEN_COEFF_NV	./GL/glew.h	/^#define GL_PATH_GEN_COEFF_NV /;"	d
GL_PATH_GEN_COLOR_FORMAT_NV	./GL/glew.h	/^#define GL_PATH_GEN_COLOR_FORMAT_NV /;"	d
GL_PATH_GEN_COMPONENTS_NV	./GL/glew.h	/^#define GL_PATH_GEN_COMPONENTS_NV /;"	d
GL_PATH_GEN_MODE_NV	./GL/glew.h	/^#define GL_PATH_GEN_MODE_NV /;"	d
GL_PATH_INITIAL_DASH_CAP_NV	./GL/glew.h	/^#define GL_PATH_INITIAL_DASH_CAP_NV /;"	d
GL_PATH_INITIAL_END_CAP_NV	./GL/glew.h	/^#define GL_PATH_INITIAL_END_CAP_NV /;"	d
GL_PATH_JOIN_STYLE_NV	./GL/glew.h	/^#define GL_PATH_JOIN_STYLE_NV /;"	d
GL_PATH_MITER_LIMIT_NV	./GL/glew.h	/^#define GL_PATH_MITER_LIMIT_NV /;"	d
GL_PATH_OBJECT_BOUNDING_BOX_NV	./GL/glew.h	/^#define GL_PATH_OBJECT_BOUNDING_BOX_NV /;"	d
GL_PATH_STENCIL_DEPTH_OFFSET_FACTOR_NV	./GL/glew.h	/^#define GL_PATH_STENCIL_DEPTH_OFFSET_FACTOR_NV /;"	d
GL_PATH_STENCIL_DEPTH_OFFSET_UNITS_NV	./GL/glew.h	/^#define GL_PATH_STENCIL_DEPTH_OFFSET_UNITS_NV /;"	d
GL_PATH_STENCIL_FUNC_NV	./GL/glew.h	/^#define GL_PATH_STENCIL_FUNC_NV /;"	d
GL_PATH_STENCIL_REF_NV	./GL/glew.h	/^#define GL_PATH_STENCIL_REF_NV /;"	d
GL_PATH_STENCIL_VALUE_MASK_NV	./GL/glew.h	/^#define GL_PATH_STENCIL_VALUE_MASK_NV /;"	d
GL_PATH_STROKE_BOUNDING_BOX_NV	./GL/glew.h	/^#define GL_PATH_STROKE_BOUNDING_BOX_NV /;"	d
GL_PATH_STROKE_BOUND_NV	./GL/glew.h	/^#define GL_PATH_STROKE_BOUND_NV /;"	d
GL_PATH_STROKE_COVER_MODE_NV	./GL/glew.h	/^#define GL_PATH_STROKE_COVER_MODE_NV /;"	d
GL_PATH_STROKE_MASK_NV	./GL/glew.h	/^#define GL_PATH_STROKE_MASK_NV /;"	d
GL_PATH_STROKE_WIDTH_NV	./GL/glew.h	/^#define GL_PATH_STROKE_WIDTH_NV /;"	d
GL_PATH_TERMINAL_DASH_CAP_NV	./GL/glew.h	/^#define GL_PATH_TERMINAL_DASH_CAP_NV /;"	d
GL_PATH_TERMINAL_END_CAP_NV	./GL/glew.h	/^#define GL_PATH_TERMINAL_END_CAP_NV /;"	d
GL_PERCENTAGE_AMD	./GL/glew.h	/^#define GL_PERCENTAGE_AMD /;"	d
GL_PERFMON_GLOBAL_MODE_QCOM	./GL/glew.h	/^#define GL_PERFMON_GLOBAL_MODE_QCOM /;"	d
GL_PERFMON_RESULT_AMD	./GL/glew.h	/^#define GL_PERFMON_RESULT_AMD /;"	d
GL_PERFMON_RESULT_AVAILABLE_AMD	./GL/glew.h	/^#define GL_PERFMON_RESULT_AVAILABLE_AMD /;"	d
GL_PERFMON_RESULT_SIZE_AMD	./GL/glew.h	/^#define GL_PERFMON_RESULT_SIZE_AMD /;"	d
GL_PERFORMANCE_MONITOR_AMD	./GL/glew.h	/^#define GL_PERFORMANCE_MONITOR_AMD /;"	d
GL_PERFQUERY_COUNTER_DATA_BOOL32_INTEL	./GL/glew.h	/^#define GL_PERFQUERY_COUNTER_DATA_BOOL32_INTEL /;"	d
GL_PERFQUERY_COUNTER_DATA_DOUBLE_INTEL	./GL/glew.h	/^#define GL_PERFQUERY_COUNTER_DATA_DOUBLE_INTEL /;"	d
GL_PERFQUERY_COUNTER_DATA_FLOAT_INTEL	./GL/glew.h	/^#define GL_PERFQUERY_COUNTER_DATA_FLOAT_INTEL /;"	d
GL_PERFQUERY_COUNTER_DATA_UINT32_INTEL	./GL/glew.h	/^#define GL_PERFQUERY_COUNTER_DATA_UINT32_INTEL /;"	d
GL_PERFQUERY_COUNTER_DATA_UINT64_INTEL	./GL/glew.h	/^#define GL_PERFQUERY_COUNTER_DATA_UINT64_INTEL /;"	d
GL_PERFQUERY_COUNTER_DESC_LENGTH_MAX_INTEL	./GL/glew.h	/^#define GL_PERFQUERY_COUNTER_DESC_LENGTH_MAX_INTEL /;"	d
GL_PERFQUERY_COUNTER_DURATION_NORM_INTEL	./GL/glew.h	/^#define GL_PERFQUERY_COUNTER_DURATION_NORM_INTEL /;"	d
GL_PERFQUERY_COUNTER_DURATION_RAW_INTEL	./GL/glew.h	/^#define GL_PERFQUERY_COUNTER_DURATION_RAW_INTEL /;"	d
GL_PERFQUERY_COUNTER_EVENT_INTEL	./GL/glew.h	/^#define GL_PERFQUERY_COUNTER_EVENT_INTEL /;"	d
GL_PERFQUERY_COUNTER_NAME_LENGTH_MAX_INTEL	./GL/glew.h	/^#define GL_PERFQUERY_COUNTER_NAME_LENGTH_MAX_INTEL /;"	d
GL_PERFQUERY_COUNTER_RAW_INTEL	./GL/glew.h	/^#define GL_PERFQUERY_COUNTER_RAW_INTEL /;"	d
GL_PERFQUERY_COUNTER_THROUGHPUT_INTEL	./GL/glew.h	/^#define GL_PERFQUERY_COUNTER_THROUGHPUT_INTEL /;"	d
GL_PERFQUERY_COUNTER_TIMESTAMP_INTEL	./GL/glew.h	/^#define GL_PERFQUERY_COUNTER_TIMESTAMP_INTEL /;"	d
GL_PERFQUERY_DONOT_FLUSH_INTEL	./GL/glew.h	/^#define GL_PERFQUERY_DONOT_FLUSH_INTEL /;"	d
GL_PERFQUERY_FLUSH_INTEL	./GL/glew.h	/^#define GL_PERFQUERY_FLUSH_INTEL /;"	d
GL_PERFQUERY_GLOBAL_CONTEXT_INTEL	./GL/glew.h	/^#define GL_PERFQUERY_GLOBAL_CONTEXT_INTEL /;"	d
GL_PERFQUERY_GPA_EXTENDED_COUNTERS_INTEL	./GL/glew.h	/^#define GL_PERFQUERY_GPA_EXTENDED_COUNTERS_INTEL /;"	d
GL_PERFQUERY_QUERY_NAME_LENGTH_MAX_INTEL	./GL/glew.h	/^#define GL_PERFQUERY_QUERY_NAME_LENGTH_MAX_INTEL /;"	d
GL_PERFQUERY_SINGLE_CONTEXT_INTEL	./GL/glew.h	/^#define GL_PERFQUERY_SINGLE_CONTEXT_INTEL /;"	d
GL_PERFQUERY_WAIT_INTEL	./GL/glew.h	/^#define GL_PERFQUERY_WAIT_INTEL /;"	d
GL_PERSPECTIVE_CORRECTION_HINT	./GL/glew.h	/^#define GL_PERSPECTIVE_CORRECTION_HINT /;"	d
GL_PERTURB_EXT	./GL/glew.h	/^#define GL_PERTURB_EXT /;"	d
GL_PER_GPU_STORAGE_BIT_NV	./GL/glew.h	/^#define GL_PER_GPU_STORAGE_BIT_NV /;"	d
GL_PER_GPU_STORAGE_NV	./GL/glew.h	/^#define GL_PER_GPU_STORAGE_NV /;"	d
GL_PER_STAGE_CONSTANTS_NV	./GL/glew.h	/^#define GL_PER_STAGE_CONSTANTS_NV /;"	d
GL_PGI_misc_hints	./GL/glew.h	/^#define GL_PGI_misc_hints /;"	d
GL_PGI_vertex_hints	./GL/glew.h	/^#define GL_PGI_vertex_hints /;"	d
GL_PHASE_SGIX	./GL/glew.h	/^#define GL_PHASE_SGIX /;"	d
GL_PHONG_HINT_WIN	./GL/glew.h	/^#define GL_PHONG_HINT_WIN /;"	d
GL_PHONG_WIN	./GL/glew.h	/^#define GL_PHONG_WIN /;"	d
GL_PINLIGHT_NV	./GL/glew.h	/^#define GL_PINLIGHT_NV /;"	d
GL_PIXELS_PER_SAMPLE_PATTERN_X_AMD	./GL/glew.h	/^#define GL_PIXELS_PER_SAMPLE_PATTERN_X_AMD /;"	d
GL_PIXELS_PER_SAMPLE_PATTERN_Y_AMD	./GL/glew.h	/^#define GL_PIXELS_PER_SAMPLE_PATTERN_Y_AMD /;"	d
GL_PIXEL_BUFFER_BARRIER_BIT	./GL/glew.h	/^#define GL_PIXEL_BUFFER_BARRIER_BIT /;"	d
GL_PIXEL_BUFFER_BARRIER_BIT_EXT	./GL/glew.h	/^#define GL_PIXEL_BUFFER_BARRIER_BIT_EXT /;"	d
GL_PIXEL_COUNTER_BITS_NV	./GL/glew.h	/^#define GL_PIXEL_COUNTER_BITS_NV /;"	d
GL_PIXEL_COUNT_AVAILABLE_NV	./GL/glew.h	/^#define GL_PIXEL_COUNT_AVAILABLE_NV /;"	d
GL_PIXEL_COUNT_NV	./GL/glew.h	/^#define GL_PIXEL_COUNT_NV /;"	d
GL_PIXEL_CUBIC_WEIGHT_EXT	./GL/glew.h	/^#define GL_PIXEL_CUBIC_WEIGHT_EXT /;"	d
GL_PIXEL_MAG_FILTER_EXT	./GL/glew.h	/^#define GL_PIXEL_MAG_FILTER_EXT /;"	d
GL_PIXEL_MAP_A_TO_A	./GL/glew.h	/^#define GL_PIXEL_MAP_A_TO_A /;"	d
GL_PIXEL_MAP_A_TO_A_SIZE	./GL/glew.h	/^#define GL_PIXEL_MAP_A_TO_A_SIZE /;"	d
GL_PIXEL_MAP_B_TO_B	./GL/glew.h	/^#define GL_PIXEL_MAP_B_TO_B /;"	d
GL_PIXEL_MAP_B_TO_B_SIZE	./GL/glew.h	/^#define GL_PIXEL_MAP_B_TO_B_SIZE /;"	d
GL_PIXEL_MAP_G_TO_G	./GL/glew.h	/^#define GL_PIXEL_MAP_G_TO_G /;"	d
GL_PIXEL_MAP_G_TO_G_SIZE	./GL/glew.h	/^#define GL_PIXEL_MAP_G_TO_G_SIZE /;"	d
GL_PIXEL_MAP_I_TO_A	./GL/glew.h	/^#define GL_PIXEL_MAP_I_TO_A /;"	d
GL_PIXEL_MAP_I_TO_A_SIZE	./GL/glew.h	/^#define GL_PIXEL_MAP_I_TO_A_SIZE /;"	d
GL_PIXEL_MAP_I_TO_B	./GL/glew.h	/^#define GL_PIXEL_MAP_I_TO_B /;"	d
GL_PIXEL_MAP_I_TO_B_SIZE	./GL/glew.h	/^#define GL_PIXEL_MAP_I_TO_B_SIZE /;"	d
GL_PIXEL_MAP_I_TO_G	./GL/glew.h	/^#define GL_PIXEL_MAP_I_TO_G /;"	d
GL_PIXEL_MAP_I_TO_G_SIZE	./GL/glew.h	/^#define GL_PIXEL_MAP_I_TO_G_SIZE /;"	d
GL_PIXEL_MAP_I_TO_I	./GL/glew.h	/^#define GL_PIXEL_MAP_I_TO_I /;"	d
GL_PIXEL_MAP_I_TO_I_SIZE	./GL/glew.h	/^#define GL_PIXEL_MAP_I_TO_I_SIZE /;"	d
GL_PIXEL_MAP_I_TO_R	./GL/glew.h	/^#define GL_PIXEL_MAP_I_TO_R /;"	d
GL_PIXEL_MAP_I_TO_R_SIZE	./GL/glew.h	/^#define GL_PIXEL_MAP_I_TO_R_SIZE /;"	d
GL_PIXEL_MAP_R_TO_R	./GL/glew.h	/^#define GL_PIXEL_MAP_R_TO_R /;"	d
GL_PIXEL_MAP_R_TO_R_SIZE	./GL/glew.h	/^#define GL_PIXEL_MAP_R_TO_R_SIZE /;"	d
GL_PIXEL_MAP_S_TO_S	./GL/glew.h	/^#define GL_PIXEL_MAP_S_TO_S /;"	d
GL_PIXEL_MAP_S_TO_S_SIZE	./GL/glew.h	/^#define GL_PIXEL_MAP_S_TO_S_SIZE /;"	d
GL_PIXEL_MIN_FILTER_EXT	./GL/glew.h	/^#define GL_PIXEL_MIN_FILTER_EXT /;"	d
GL_PIXEL_MODE_BIT	./GL/glew.h	/^#define GL_PIXEL_MODE_BIT /;"	d
GL_PIXEL_PACK_BUFFER	./GL/glew.h	/^#define GL_PIXEL_PACK_BUFFER /;"	d
GL_PIXEL_PACK_BUFFER_ARB	./GL/glew.h	/^#define GL_PIXEL_PACK_BUFFER_ARB /;"	d
GL_PIXEL_PACK_BUFFER_BINDING	./GL/glew.h	/^#define GL_PIXEL_PACK_BUFFER_BINDING /;"	d
GL_PIXEL_PACK_BUFFER_BINDING_ARB	./GL/glew.h	/^#define GL_PIXEL_PACK_BUFFER_BINDING_ARB /;"	d
GL_PIXEL_PACK_BUFFER_BINDING_EXT	./GL/glew.h	/^#define GL_PIXEL_PACK_BUFFER_BINDING_EXT /;"	d
GL_PIXEL_PACK_BUFFER_BINDING_NV	./GL/glew.h	/^#define GL_PIXEL_PACK_BUFFER_BINDING_NV /;"	d
GL_PIXEL_PACK_BUFFER_EXT	./GL/glew.h	/^#define GL_PIXEL_PACK_BUFFER_EXT /;"	d
GL_PIXEL_PACK_BUFFER_NV	./GL/glew.h	/^#define GL_PIXEL_PACK_BUFFER_NV /;"	d
GL_PIXEL_SUBSAMPLE_2424_SGIX	./GL/glew.h	/^#define GL_PIXEL_SUBSAMPLE_2424_SGIX /;"	d
GL_PIXEL_SUBSAMPLE_4242_SGIX	./GL/glew.h	/^#define GL_PIXEL_SUBSAMPLE_4242_SGIX /;"	d
GL_PIXEL_SUBSAMPLE_4444_SGIX	./GL/glew.h	/^#define GL_PIXEL_SUBSAMPLE_4444_SGIX /;"	d
GL_PIXEL_TRANSFORM_2D_EXT	./GL/glew.h	/^#define GL_PIXEL_TRANSFORM_2D_EXT /;"	d
GL_PIXEL_TRANSFORM_2D_MATRIX_EXT	./GL/glew.h	/^#define GL_PIXEL_TRANSFORM_2D_MATRIX_EXT /;"	d
GL_PIXEL_TRANSFORM_2D_STACK_DEPTH_EXT	./GL/glew.h	/^#define GL_PIXEL_TRANSFORM_2D_STACK_DEPTH_EXT /;"	d
GL_PIXEL_TRANSFORM_OPERATOR_SGI	./GL/glew.h	/^#define GL_PIXEL_TRANSFORM_OPERATOR_SGI /;"	d
GL_PIXEL_TRANSFORM_SGI	./GL/glew.h	/^#define GL_PIXEL_TRANSFORM_SGI /;"	d
GL_PIXEL_UNPACK_BUFFER	./GL/glew.h	/^#define GL_PIXEL_UNPACK_BUFFER /;"	d
GL_PIXEL_UNPACK_BUFFER_ARB	./GL/glew.h	/^#define GL_PIXEL_UNPACK_BUFFER_ARB /;"	d
GL_PIXEL_UNPACK_BUFFER_BINDING	./GL/glew.h	/^#define GL_PIXEL_UNPACK_BUFFER_BINDING /;"	d
GL_PIXEL_UNPACK_BUFFER_BINDING_ARB	./GL/glew.h	/^#define GL_PIXEL_UNPACK_BUFFER_BINDING_ARB /;"	d
GL_PIXEL_UNPACK_BUFFER_BINDING_EXT	./GL/glew.h	/^#define GL_PIXEL_UNPACK_BUFFER_BINDING_EXT /;"	d
GL_PIXEL_UNPACK_BUFFER_BINDING_NV	./GL/glew.h	/^#define GL_PIXEL_UNPACK_BUFFER_BINDING_NV /;"	d
GL_PIXEL_UNPACK_BUFFER_EXT	./GL/glew.h	/^#define GL_PIXEL_UNPACK_BUFFER_EXT /;"	d
GL_PIXEL_UNPACK_BUFFER_NV	./GL/glew.h	/^#define GL_PIXEL_UNPACK_BUFFER_NV /;"	d
GL_PLUS_CLAMPED_ALPHA_NV	./GL/glew.h	/^#define GL_PLUS_CLAMPED_ALPHA_NV /;"	d
GL_PLUS_CLAMPED_NV	./GL/glew.h	/^#define GL_PLUS_CLAMPED_NV /;"	d
GL_PLUS_DARKER_NV	./GL/glew.h	/^#define GL_PLUS_DARKER_NV /;"	d
GL_PLUS_NV	./GL/glew.h	/^#define GL_PLUS_NV /;"	d
GL_PN_TRIANGLES_ATI	./GL/glew.h	/^#define GL_PN_TRIANGLES_ATI /;"	d
GL_PN_TRIANGLES_NORMAL_MODE_ATI	./GL/glew.h	/^#define GL_PN_TRIANGLES_NORMAL_MODE_ATI /;"	d
GL_PN_TRIANGLES_NORMAL_MODE_LINEAR_ATI	./GL/glew.h	/^#define GL_PN_TRIANGLES_NORMAL_MODE_LINEAR_ATI /;"	d
GL_PN_TRIANGLES_NORMAL_MODE_QUADRATIC_ATI	./GL/glew.h	/^#define GL_PN_TRIANGLES_NORMAL_MODE_QUADRATIC_ATI /;"	d
GL_PN_TRIANGLES_POINT_MODE_ATI	./GL/glew.h	/^#define GL_PN_TRIANGLES_POINT_MODE_ATI /;"	d
GL_PN_TRIANGLES_POINT_MODE_CUBIC_ATI	./GL/glew.h	/^#define GL_PN_TRIANGLES_POINT_MODE_CUBIC_ATI /;"	d
GL_PN_TRIANGLES_POINT_MODE_LINEAR_ATI	./GL/glew.h	/^#define GL_PN_TRIANGLES_POINT_MODE_LINEAR_ATI /;"	d
GL_PN_TRIANGLES_TESSELATION_LEVEL_ATI	./GL/glew.h	/^#define GL_PN_TRIANGLES_TESSELATION_LEVEL_ATI /;"	d
GL_POINT	./GL/glew.h	/^#define GL_POINT /;"	d
GL_POINTS	./GL/glew.h	/^#define GL_POINTS /;"	d
GL_POINT_BIT	./GL/glew.h	/^#define GL_POINT_BIT /;"	d
GL_POINT_DISTANCE_ATTENUATION	./GL/glew.h	/^#define GL_POINT_DISTANCE_ATTENUATION /;"	d
GL_POINT_DISTANCE_ATTENUATION_ARB	./GL/glew.h	/^#define GL_POINT_DISTANCE_ATTENUATION_ARB /;"	d
GL_POINT_FADE_THRESHOLD_SIZE	./GL/glew.h	/^#define GL_POINT_FADE_THRESHOLD_SIZE /;"	d
GL_POINT_FADE_THRESHOLD_SIZE_ARB	./GL/glew.h	/^#define GL_POINT_FADE_THRESHOLD_SIZE_ARB /;"	d
GL_POINT_FADE_THRESHOLD_SIZE_EXT	./GL/glew.h	/^#define GL_POINT_FADE_THRESHOLD_SIZE_EXT /;"	d
GL_POINT_NV	./GL/glew.h	/^#define GL_POINT_NV /;"	d
GL_POINT_SIZE	./GL/glew.h	/^#define GL_POINT_SIZE /;"	d
GL_POINT_SIZE_ARRAY_BUFFER_BINDING_OES	./GL/glew.h	/^#define GL_POINT_SIZE_ARRAY_BUFFER_BINDING_OES /;"	d
GL_POINT_SIZE_ARRAY_OES	./GL/glew.h	/^#define GL_POINT_SIZE_ARRAY_OES /;"	d
GL_POINT_SIZE_ARRAY_POINTER_OES	./GL/glew.h	/^#define GL_POINT_SIZE_ARRAY_POINTER_OES /;"	d
GL_POINT_SIZE_ARRAY_STRIDE_OES	./GL/glew.h	/^#define GL_POINT_SIZE_ARRAY_STRIDE_OES /;"	d
GL_POINT_SIZE_ARRAY_TYPE_OES	./GL/glew.h	/^#define GL_POINT_SIZE_ARRAY_TYPE_OES /;"	d
GL_POINT_SIZE_GRANULARITY	./GL/glew.h	/^#define GL_POINT_SIZE_GRANULARITY /;"	d
GL_POINT_SIZE_MAX	./GL/glew.h	/^#define GL_POINT_SIZE_MAX /;"	d
GL_POINT_SIZE_MAX_ARB	./GL/glew.h	/^#define GL_POINT_SIZE_MAX_ARB /;"	d
GL_POINT_SIZE_MAX_EXT	./GL/glew.h	/^#define GL_POINT_SIZE_MAX_EXT /;"	d
GL_POINT_SIZE_MIN	./GL/glew.h	/^#define GL_POINT_SIZE_MIN /;"	d
GL_POINT_SIZE_MIN_ARB	./GL/glew.h	/^#define GL_POINT_SIZE_MIN_ARB /;"	d
GL_POINT_SIZE_MIN_EXT	./GL/glew.h	/^#define GL_POINT_SIZE_MIN_EXT /;"	d
GL_POINT_SIZE_RANGE	./GL/glew.h	/^#define GL_POINT_SIZE_RANGE /;"	d
GL_POINT_SMOOTH	./GL/glew.h	/^#define GL_POINT_SMOOTH /;"	d
GL_POINT_SMOOTH_HINT	./GL/glew.h	/^#define GL_POINT_SMOOTH_HINT /;"	d
GL_POINT_SPRITE	./GL/glew.h	/^#define GL_POINT_SPRITE /;"	d
GL_POINT_SPRITE_ARB	./GL/glew.h	/^#define GL_POINT_SPRITE_ARB /;"	d
GL_POINT_SPRITE_COORD_ORIGIN	./GL/glew.h	/^#define GL_POINT_SPRITE_COORD_ORIGIN /;"	d
GL_POINT_SPRITE_CULL_CENTER_ATIX	./GL/glew.h	/^#define GL_POINT_SPRITE_CULL_CENTER_ATIX /;"	d
GL_POINT_SPRITE_CULL_CLIP_ATIX	./GL/glew.h	/^#define GL_POINT_SPRITE_CULL_CLIP_ATIX /;"	d
GL_POINT_SPRITE_CULL_MODE_ATIX	./GL/glew.h	/^#define GL_POINT_SPRITE_CULL_MODE_ATIX /;"	d
GL_POINT_SPRITE_NV	./GL/glew.h	/^#define GL_POINT_SPRITE_NV /;"	d
GL_POINT_SPRITE_OES	./GL/glew.h	/^#define GL_POINT_SPRITE_OES /;"	d
GL_POINT_SPRITE_R_MODE_NV	./GL/glew.h	/^#define GL_POINT_SPRITE_R_MODE_NV /;"	d
GL_POINT_TOKEN	./GL/glew.h	/^#define GL_POINT_TOKEN /;"	d
GL_POLYGON	./GL/glew.h	/^#define GL_POLYGON /;"	d
GL_POLYGON_BIT	./GL/glew.h	/^#define GL_POLYGON_BIT /;"	d
GL_POLYGON_MODE	./GL/glew.h	/^#define GL_POLYGON_MODE /;"	d
GL_POLYGON_MODE_NV	./GL/glew.h	/^#define GL_POLYGON_MODE_NV /;"	d
GL_POLYGON_OFFSET_BIAS_EXT	./GL/glew.h	/^#define GL_POLYGON_OFFSET_BIAS_EXT /;"	d
GL_POLYGON_OFFSET_CLAMP	./GL/glew.h	/^#define GL_POLYGON_OFFSET_CLAMP /;"	d
GL_POLYGON_OFFSET_CLAMP_EXT	./GL/glew.h	/^#define GL_POLYGON_OFFSET_CLAMP_EXT /;"	d
GL_POLYGON_OFFSET_COMMAND_NV	./GL/glew.h	/^#define GL_POLYGON_OFFSET_COMMAND_NV /;"	d
GL_POLYGON_OFFSET_EXT	./GL/glew.h	/^#define GL_POLYGON_OFFSET_EXT /;"	d
GL_POLYGON_OFFSET_FACTOR	./GL/glew.h	/^#define GL_POLYGON_OFFSET_FACTOR /;"	d
GL_POLYGON_OFFSET_FACTOR_EXT	./GL/glew.h	/^#define GL_POLYGON_OFFSET_FACTOR_EXT /;"	d
GL_POLYGON_OFFSET_FILL	./GL/glew.h	/^#define GL_POLYGON_OFFSET_FILL /;"	d
GL_POLYGON_OFFSET_LINE	./GL/glew.h	/^#define GL_POLYGON_OFFSET_LINE /;"	d
GL_POLYGON_OFFSET_LINE_NV	./GL/glew.h	/^#define GL_POLYGON_OFFSET_LINE_NV /;"	d
GL_POLYGON_OFFSET_POINT	./GL/glew.h	/^#define GL_POLYGON_OFFSET_POINT /;"	d
GL_POLYGON_OFFSET_POINT_NV	./GL/glew.h	/^#define GL_POLYGON_OFFSET_POINT_NV /;"	d
GL_POLYGON_OFFSET_UNITS	./GL/glew.h	/^#define GL_POLYGON_OFFSET_UNITS /;"	d
GL_POLYGON_SMOOTH	./GL/glew.h	/^#define GL_POLYGON_SMOOTH /;"	d
GL_POLYGON_SMOOTH_HINT	./GL/glew.h	/^#define GL_POLYGON_SMOOTH_HINT /;"	d
GL_POLYGON_STIPPLE	./GL/glew.h	/^#define GL_POLYGON_STIPPLE /;"	d
GL_POLYGON_STIPPLE_BIT	./GL/glew.h	/^#define GL_POLYGON_STIPPLE_BIT /;"	d
GL_POLYGON_TOKEN	./GL/glew.h	/^#define GL_POLYGON_TOKEN /;"	d
GL_POSITION	./GL/glew.h	/^#define GL_POSITION /;"	d
GL_POST_COLOR_MATRIX_ALPHA_BIAS	./GL/glew.h	/^#define GL_POST_COLOR_MATRIX_ALPHA_BIAS /;"	d
GL_POST_COLOR_MATRIX_ALPHA_BIAS_SGI	./GL/glew.h	/^#define GL_POST_COLOR_MATRIX_ALPHA_BIAS_SGI /;"	d
GL_POST_COLOR_MATRIX_ALPHA_SCALE	./GL/glew.h	/^#define GL_POST_COLOR_MATRIX_ALPHA_SCALE /;"	d
GL_POST_COLOR_MATRIX_ALPHA_SCALE_SGI	./GL/glew.h	/^#define GL_POST_COLOR_MATRIX_ALPHA_SCALE_SGI /;"	d
GL_POST_COLOR_MATRIX_BLUE_BIAS	./GL/glew.h	/^#define GL_POST_COLOR_MATRIX_BLUE_BIAS /;"	d
GL_POST_COLOR_MATRIX_BLUE_BIAS_SGI	./GL/glew.h	/^#define GL_POST_COLOR_MATRIX_BLUE_BIAS_SGI /;"	d
GL_POST_COLOR_MATRIX_BLUE_SCALE	./GL/glew.h	/^#define GL_POST_COLOR_MATRIX_BLUE_SCALE /;"	d
GL_POST_COLOR_MATRIX_BLUE_SCALE_SGI	./GL/glew.h	/^#define GL_POST_COLOR_MATRIX_BLUE_SCALE_SGI /;"	d
GL_POST_COLOR_MATRIX_COLOR_TABLE	./GL/glew.h	/^#define GL_POST_COLOR_MATRIX_COLOR_TABLE /;"	d
GL_POST_COLOR_MATRIX_COLOR_TABLE_SGI	./GL/glew.h	/^#define GL_POST_COLOR_MATRIX_COLOR_TABLE_SGI /;"	d
GL_POST_COLOR_MATRIX_GREEN_BIAS	./GL/glew.h	/^#define GL_POST_COLOR_MATRIX_GREEN_BIAS /;"	d
GL_POST_COLOR_MATRIX_GREEN_BIAS_SGI	./GL/glew.h	/^#define GL_POST_COLOR_MATRIX_GREEN_BIAS_SGI /;"	d
GL_POST_COLOR_MATRIX_GREEN_SCALE	./GL/glew.h	/^#define GL_POST_COLOR_MATRIX_GREEN_SCALE /;"	d
GL_POST_COLOR_MATRIX_GREEN_SCALE_SGI	./GL/glew.h	/^#define GL_POST_COLOR_MATRIX_GREEN_SCALE_SGI /;"	d
GL_POST_COLOR_MATRIX_RED_BIAS	./GL/glew.h	/^#define GL_POST_COLOR_MATRIX_RED_BIAS /;"	d
GL_POST_COLOR_MATRIX_RED_BIAS_SGI	./GL/glew.h	/^#define GL_POST_COLOR_MATRIX_RED_BIAS_SGI /;"	d
GL_POST_COLOR_MATRIX_RED_SCALE	./GL/glew.h	/^#define GL_POST_COLOR_MATRIX_RED_SCALE /;"	d
GL_POST_COLOR_MATRIX_RED_SCALE_SGI	./GL/glew.h	/^#define GL_POST_COLOR_MATRIX_RED_SCALE_SGI /;"	d
GL_POST_CONVOLUTION_ALPHA_BIAS	./GL/glew.h	/^#define GL_POST_CONVOLUTION_ALPHA_BIAS /;"	d
GL_POST_CONVOLUTION_ALPHA_BIAS_EXT	./GL/glew.h	/^#define GL_POST_CONVOLUTION_ALPHA_BIAS_EXT /;"	d
GL_POST_CONVOLUTION_ALPHA_SCALE	./GL/glew.h	/^#define GL_POST_CONVOLUTION_ALPHA_SCALE /;"	d
GL_POST_CONVOLUTION_ALPHA_SCALE_EXT	./GL/glew.h	/^#define GL_POST_CONVOLUTION_ALPHA_SCALE_EXT /;"	d
GL_POST_CONVOLUTION_BLUE_BIAS	./GL/glew.h	/^#define GL_POST_CONVOLUTION_BLUE_BIAS /;"	d
GL_POST_CONVOLUTION_BLUE_BIAS_EXT	./GL/glew.h	/^#define GL_POST_CONVOLUTION_BLUE_BIAS_EXT /;"	d
GL_POST_CONVOLUTION_BLUE_SCALE	./GL/glew.h	/^#define GL_POST_CONVOLUTION_BLUE_SCALE /;"	d
GL_POST_CONVOLUTION_BLUE_SCALE_EXT	./GL/glew.h	/^#define GL_POST_CONVOLUTION_BLUE_SCALE_EXT /;"	d
GL_POST_CONVOLUTION_COLOR_TABLE	./GL/glew.h	/^#define GL_POST_CONVOLUTION_COLOR_TABLE /;"	d
GL_POST_CONVOLUTION_COLOR_TABLE_SGI	./GL/glew.h	/^#define GL_POST_CONVOLUTION_COLOR_TABLE_SGI /;"	d
GL_POST_CONVOLUTION_GREEN_BIAS	./GL/glew.h	/^#define GL_POST_CONVOLUTION_GREEN_BIAS /;"	d
GL_POST_CONVOLUTION_GREEN_BIAS_EXT	./GL/glew.h	/^#define GL_POST_CONVOLUTION_GREEN_BIAS_EXT /;"	d
GL_POST_CONVOLUTION_GREEN_SCALE	./GL/glew.h	/^#define GL_POST_CONVOLUTION_GREEN_SCALE /;"	d
GL_POST_CONVOLUTION_GREEN_SCALE_EXT	./GL/glew.h	/^#define GL_POST_CONVOLUTION_GREEN_SCALE_EXT /;"	d
GL_POST_CONVOLUTION_RED_BIAS	./GL/glew.h	/^#define GL_POST_CONVOLUTION_RED_BIAS /;"	d
GL_POST_CONVOLUTION_RED_BIAS_EXT	./GL/glew.h	/^#define GL_POST_CONVOLUTION_RED_BIAS_EXT /;"	d
GL_POST_CONVOLUTION_RED_SCALE	./GL/glew.h	/^#define GL_POST_CONVOLUTION_RED_SCALE /;"	d
GL_POST_CONVOLUTION_RED_SCALE_EXT	./GL/glew.h	/^#define GL_POST_CONVOLUTION_RED_SCALE_EXT /;"	d
GL_POST_TEXTURE_FILTER_BIAS_RANGE_SGIX	./GL/glew.h	/^#define GL_POST_TEXTURE_FILTER_BIAS_RANGE_SGIX /;"	d
GL_POST_TEXTURE_FILTER_BIAS_SGIX	./GL/glew.h	/^#define GL_POST_TEXTURE_FILTER_BIAS_SGIX /;"	d
GL_POST_TEXTURE_FILTER_SCALE_RANGE_SGIX	./GL/glew.h	/^#define GL_POST_TEXTURE_FILTER_SCALE_RANGE_SGIX /;"	d
GL_POST_TEXTURE_FILTER_SCALE_SGIX	./GL/glew.h	/^#define GL_POST_TEXTURE_FILTER_SCALE_SGIX /;"	d
GL_PREFER_DOUBLEBUFFER_HINT_PGI	./GL/glew.h	/^#define GL_PREFER_DOUBLEBUFFER_HINT_PGI /;"	d
GL_PRESENT_DURATION_NV	./GL/glew.h	/^#define GL_PRESENT_DURATION_NV /;"	d
GL_PRESENT_TIME_NV	./GL/glew.h	/^#define GL_PRESENT_TIME_NV /;"	d
GL_PRESERVE_ATI	./GL/glew.h	/^#define GL_PRESERVE_ATI /;"	d
GL_PREVIOUS	./GL/glew.h	/^#define GL_PREVIOUS /;"	d
GL_PREVIOUS_ARB	./GL/glew.h	/^#define GL_PREVIOUS_ARB /;"	d
GL_PREVIOUS_EXT	./GL/glew.h	/^#define GL_PREVIOUS_EXT /;"	d
GL_PREVIOUS_TEXTURE_INPUT_NV	./GL/glew.h	/^#define GL_PREVIOUS_TEXTURE_INPUT_NV /;"	d
GL_PRIMARY_COLOR	./GL/glew.h	/^#define GL_PRIMARY_COLOR /;"	d
GL_PRIMARY_COLOR_ARB	./GL/glew.h	/^#define GL_PRIMARY_COLOR_ARB /;"	d
GL_PRIMARY_COLOR_EXT	./GL/glew.h	/^#define GL_PRIMARY_COLOR_EXT /;"	d
GL_PRIMARY_COLOR_NV	./GL/glew.h	/^#define GL_PRIMARY_COLOR_NV /;"	d
GL_PRIMITIVES_GENERATED	./GL/glew.h	/^#define GL_PRIMITIVES_GENERATED /;"	d
GL_PRIMITIVES_GENERATED_EXT	./GL/glew.h	/^#define GL_PRIMITIVES_GENERATED_EXT /;"	d
GL_PRIMITIVES_GENERATED_NV	./GL/glew.h	/^#define GL_PRIMITIVES_GENERATED_NV /;"	d
GL_PRIMITIVES_GENERATED_OES	./GL/glew.h	/^#define GL_PRIMITIVES_GENERATED_OES /;"	d
GL_PRIMITIVES_SUBMITTED	./GL/glew.h	/^#define GL_PRIMITIVES_SUBMITTED /;"	d
GL_PRIMITIVES_SUBMITTED_ARB	./GL/glew.h	/^#define GL_PRIMITIVES_SUBMITTED_ARB /;"	d
GL_PRIMITIVE_BOUNDING_BOX_ARB	./GL/glew.h	/^#define GL_PRIMITIVE_BOUNDING_BOX_ARB /;"	d
GL_PRIMITIVE_BOUNDING_BOX_EXT	./GL/glew.h	/^#define GL_PRIMITIVE_BOUNDING_BOX_EXT /;"	d
GL_PRIMITIVE_ID_NV	./GL/glew.h	/^#define GL_PRIMITIVE_ID_NV /;"	d
GL_PRIMITIVE_RESTART	./GL/glew.h	/^#define GL_PRIMITIVE_RESTART /;"	d
GL_PRIMITIVE_RESTART_FIXED_INDEX	./GL/glew.h	/^#define GL_PRIMITIVE_RESTART_FIXED_INDEX /;"	d
GL_PRIMITIVE_RESTART_FOR_PATCHES_SUPPORTED	./GL/glew.h	/^#define GL_PRIMITIVE_RESTART_FOR_PATCHES_SUPPORTED /;"	d
GL_PRIMITIVE_RESTART_FOR_PATCHES_SUPPORTED_OES	./GL/glew.h	/^#define GL_PRIMITIVE_RESTART_FOR_PATCHES_SUPPORTED_OES /;"	d
GL_PRIMITIVE_RESTART_INDEX	./GL/glew.h	/^#define GL_PRIMITIVE_RESTART_INDEX /;"	d
GL_PRIMITIVE_RESTART_INDEX_NV	./GL/glew.h	/^#define GL_PRIMITIVE_RESTART_INDEX_NV /;"	d
GL_PRIMITIVE_RESTART_NV	./GL/glew.h	/^#define GL_PRIMITIVE_RESTART_NV /;"	d
GL_PROGRAM	./GL/glew.h	/^#define GL_PROGRAM /;"	d
GL_PROGRAMMABLE_SAMPLE_LOCATION_ARB	./GL/glew.h	/^#define GL_PROGRAMMABLE_SAMPLE_LOCATION_ARB /;"	d
GL_PROGRAMMABLE_SAMPLE_LOCATION_NV	./GL/glew.h	/^#define GL_PROGRAMMABLE_SAMPLE_LOCATION_NV /;"	d
GL_PROGRAMMABLE_SAMPLE_LOCATION_TABLE_SIZE_ARB	./GL/glew.h	/^#define GL_PROGRAMMABLE_SAMPLE_LOCATION_TABLE_SIZE_ARB /;"	d
GL_PROGRAMMABLE_SAMPLE_LOCATION_TABLE_SIZE_NV	./GL/glew.h	/^#define GL_PROGRAMMABLE_SAMPLE_LOCATION_TABLE_SIZE_NV /;"	d
GL_PROGRAM_ADDRESS_REGISTERS_ARB	./GL/glew.h	/^#define GL_PROGRAM_ADDRESS_REGISTERS_ARB /;"	d
GL_PROGRAM_ALU_INSTRUCTIONS_ARB	./GL/glew.h	/^#define GL_PROGRAM_ALU_INSTRUCTIONS_ARB /;"	d
GL_PROGRAM_ATTRIBS_ARB	./GL/glew.h	/^#define GL_PROGRAM_ATTRIBS_ARB /;"	d
GL_PROGRAM_ATTRIB_COMPONENTS_NV	./GL/glew.h	/^#define GL_PROGRAM_ATTRIB_COMPONENTS_NV /;"	d
GL_PROGRAM_BINARY_ANGLE	./GL/glew.h	/^#define GL_PROGRAM_BINARY_ANGLE /;"	d
GL_PROGRAM_BINARY_FORMATS	./GL/glew.h	/^#define GL_PROGRAM_BINARY_FORMATS /;"	d
GL_PROGRAM_BINARY_FORMATS_OES	./GL/glew.h	/^#define GL_PROGRAM_BINARY_FORMATS_OES /;"	d
GL_PROGRAM_BINARY_FORMAT_MESA	./GL/glew.h	/^#define GL_PROGRAM_BINARY_FORMAT_MESA /;"	d
GL_PROGRAM_BINARY_LENGTH	./GL/glew.h	/^#define GL_PROGRAM_BINARY_LENGTH /;"	d
GL_PROGRAM_BINARY_LENGTH_OES	./GL/glew.h	/^#define GL_PROGRAM_BINARY_LENGTH_OES /;"	d
GL_PROGRAM_BINARY_RETRIEVABLE_HINT	./GL/glew.h	/^#define GL_PROGRAM_BINARY_RETRIEVABLE_HINT /;"	d
GL_PROGRAM_BINDING_ARB	./GL/glew.h	/^#define GL_PROGRAM_BINDING_ARB /;"	d
GL_PROGRAM_ERROR_POSITION_ARB	./GL/glew.h	/^#define GL_PROGRAM_ERROR_POSITION_ARB /;"	d
GL_PROGRAM_ERROR_POSITION_NV	./GL/glew.h	/^#define GL_PROGRAM_ERROR_POSITION_NV /;"	d
GL_PROGRAM_ERROR_STRING_ARB	./GL/glew.h	/^#define GL_PROGRAM_ERROR_STRING_ARB /;"	d
GL_PROGRAM_ERROR_STRING_NV	./GL/glew.h	/^#define GL_PROGRAM_ERROR_STRING_NV /;"	d
GL_PROGRAM_FORMAT_ARB	./GL/glew.h	/^#define GL_PROGRAM_FORMAT_ARB /;"	d
GL_PROGRAM_FORMAT_ASCII_ARB	./GL/glew.h	/^#define GL_PROGRAM_FORMAT_ASCII_ARB /;"	d
GL_PROGRAM_INPUT	./GL/glew.h	/^#define GL_PROGRAM_INPUT /;"	d
GL_PROGRAM_INSTRUCTIONS_ARB	./GL/glew.h	/^#define GL_PROGRAM_INSTRUCTIONS_ARB /;"	d
GL_PROGRAM_LENGTH_ARB	./GL/glew.h	/^#define GL_PROGRAM_LENGTH_ARB /;"	d
GL_PROGRAM_LENGTH_NV	./GL/glew.h	/^#define GL_PROGRAM_LENGTH_NV /;"	d
GL_PROGRAM_MATRIX_EXT	./GL/glew.h	/^#define GL_PROGRAM_MATRIX_EXT /;"	d
GL_PROGRAM_MATRIX_STACK_DEPTH_EXT	./GL/glew.h	/^#define GL_PROGRAM_MATRIX_STACK_DEPTH_EXT /;"	d
GL_PROGRAM_NATIVE_ADDRESS_REGISTERS_ARB	./GL/glew.h	/^#define GL_PROGRAM_NATIVE_ADDRESS_REGISTERS_ARB /;"	d
GL_PROGRAM_NATIVE_ALU_INSTRUCTIONS_ARB	./GL/glew.h	/^#define GL_PROGRAM_NATIVE_ALU_INSTRUCTIONS_ARB /;"	d
GL_PROGRAM_NATIVE_ATTRIBS_ARB	./GL/glew.h	/^#define GL_PROGRAM_NATIVE_ATTRIBS_ARB /;"	d
GL_PROGRAM_NATIVE_INSTRUCTIONS_ARB	./GL/glew.h	/^#define GL_PROGRAM_NATIVE_INSTRUCTIONS_ARB /;"	d
GL_PROGRAM_NATIVE_PARAMETERS_ARB	./GL/glew.h	/^#define GL_PROGRAM_NATIVE_PARAMETERS_ARB /;"	d
GL_PROGRAM_NATIVE_TEMPORARIES_ARB	./GL/glew.h	/^#define GL_PROGRAM_NATIVE_TEMPORARIES_ARB /;"	d
GL_PROGRAM_NATIVE_TEX_INDIRECTIONS_ARB	./GL/glew.h	/^#define GL_PROGRAM_NATIVE_TEX_INDIRECTIONS_ARB /;"	d
GL_PROGRAM_NATIVE_TEX_INSTRUCTIONS_ARB	./GL/glew.h	/^#define GL_PROGRAM_NATIVE_TEX_INSTRUCTIONS_ARB /;"	d
GL_PROGRAM_OBJECT_ARB	./GL/glew.h	/^#define GL_PROGRAM_OBJECT_ARB /;"	d
GL_PROGRAM_OBJECT_EXT	./GL/glew.h	/^#define GL_PROGRAM_OBJECT_EXT /;"	d
GL_PROGRAM_OUTPUT	./GL/glew.h	/^#define GL_PROGRAM_OUTPUT /;"	d
GL_PROGRAM_PARAMETERS_ARB	./GL/glew.h	/^#define GL_PROGRAM_PARAMETERS_ARB /;"	d
GL_PROGRAM_PARAMETER_NV	./GL/glew.h	/^#define GL_PROGRAM_PARAMETER_NV /;"	d
GL_PROGRAM_PIPELINE	./GL/glew.h	/^#define GL_PROGRAM_PIPELINE /;"	d
GL_PROGRAM_PIPELINE_BINDING	./GL/glew.h	/^#define GL_PROGRAM_PIPELINE_BINDING /;"	d
GL_PROGRAM_PIPELINE_OBJECT_EXT	./GL/glew.h	/^#define GL_PROGRAM_PIPELINE_OBJECT_EXT /;"	d
GL_PROGRAM_POINT_SIZE	./GL/glew.h	/^#define GL_PROGRAM_POINT_SIZE /;"	d
GL_PROGRAM_POINT_SIZE_ARB	./GL/glew.h	/^#define GL_PROGRAM_POINT_SIZE_ARB /;"	d
GL_PROGRAM_POINT_SIZE_EXT	./GL/glew.h	/^#define GL_PROGRAM_POINT_SIZE_EXT /;"	d
GL_PROGRAM_RESIDENT_NV	./GL/glew.h	/^#define GL_PROGRAM_RESIDENT_NV /;"	d
GL_PROGRAM_RESULT_COMPONENTS_NV	./GL/glew.h	/^#define GL_PROGRAM_RESULT_COMPONENTS_NV /;"	d
GL_PROGRAM_SEPARABLE	./GL/glew.h	/^#define GL_PROGRAM_SEPARABLE /;"	d
GL_PROGRAM_STRING_ARB	./GL/glew.h	/^#define GL_PROGRAM_STRING_ARB /;"	d
GL_PROGRAM_STRING_NV	./GL/glew.h	/^#define GL_PROGRAM_STRING_NV /;"	d
GL_PROGRAM_TARGET_NV	./GL/glew.h	/^#define GL_PROGRAM_TARGET_NV /;"	d
GL_PROGRAM_TEMPORARIES_ARB	./GL/glew.h	/^#define GL_PROGRAM_TEMPORARIES_ARB /;"	d
GL_PROGRAM_TEX_INDIRECTIONS_ARB	./GL/glew.h	/^#define GL_PROGRAM_TEX_INDIRECTIONS_ARB /;"	d
GL_PROGRAM_TEX_INSTRUCTIONS_ARB	./GL/glew.h	/^#define GL_PROGRAM_TEX_INSTRUCTIONS_ARB /;"	d
GL_PROGRAM_UNDER_NATIVE_LIMITS_ARB	./GL/glew.h	/^#define GL_PROGRAM_UNDER_NATIVE_LIMITS_ARB /;"	d
GL_PROJECTION	./GL/glew.h	/^#define GL_PROJECTION /;"	d
GL_PROJECTION_MATRIX	./GL/glew.h	/^#define GL_PROJECTION_MATRIX /;"	d
GL_PROJECTION_MATRIX_FLOAT_AS_INT_BITS_OES	./GL/glew.h	/^#define GL_PROJECTION_MATRIX_FLOAT_AS_INT_BITS_OES /;"	d
GL_PROJECTION_STACK_DEPTH	./GL/glew.h	/^#define GL_PROJECTION_STACK_DEPTH /;"	d
GL_PROTECTED_MEMORY_OBJECT_EXT	./GL/glew.h	/^#define GL_PROTECTED_MEMORY_OBJECT_EXT /;"	d
GL_PROVOKING_VERTEX	./GL/glew.h	/^#define GL_PROVOKING_VERTEX /;"	d
GL_PROVOKING_VERTEX_EXT	./GL/glew.h	/^#define GL_PROVOKING_VERTEX_EXT /;"	d
GL_PROXY_COLOR_TABLE	./GL/glew.h	/^#define GL_PROXY_COLOR_TABLE /;"	d
GL_PROXY_COLOR_TABLE_SGI	./GL/glew.h	/^#define GL_PROXY_COLOR_TABLE_SGI /;"	d
GL_PROXY_HISTOGRAM	./GL/glew.h	/^#define GL_PROXY_HISTOGRAM /;"	d
GL_PROXY_HISTOGRAM_EXT	./GL/glew.h	/^#define GL_PROXY_HISTOGRAM_EXT /;"	d
GL_PROXY_POST_COLOR_MATRIX_COLOR_TABLE	./GL/glew.h	/^#define GL_PROXY_POST_COLOR_MATRIX_COLOR_TABLE /;"	d
GL_PROXY_POST_COLOR_MATRIX_COLOR_TABLE_SGI	./GL/glew.h	/^#define GL_PROXY_POST_COLOR_MATRIX_COLOR_TABLE_SGI /;"	d
GL_PROXY_POST_CONVOLUTION_COLOR_TABLE	./GL/glew.h	/^#define GL_PROXY_POST_CONVOLUTION_COLOR_TABLE /;"	d
GL_PROXY_POST_CONVOLUTION_COLOR_TABLE_SGI	./GL/glew.h	/^#define GL_PROXY_POST_CONVOLUTION_COLOR_TABLE_SGI /;"	d
GL_PROXY_TEXTURE_1D	./GL/glew.h	/^#define GL_PROXY_TEXTURE_1D /;"	d
GL_PROXY_TEXTURE_1D_ARRAY	./GL/glew.h	/^#define GL_PROXY_TEXTURE_1D_ARRAY /;"	d
GL_PROXY_TEXTURE_1D_ARRAY_EXT	./GL/glew.h	/^#define GL_PROXY_TEXTURE_1D_ARRAY_EXT /;"	d
GL_PROXY_TEXTURE_1D_EXT	./GL/glew.h	/^#define GL_PROXY_TEXTURE_1D_EXT /;"	d
GL_PROXY_TEXTURE_1D_STACK_MESAX	./GL/glew.h	/^#define GL_PROXY_TEXTURE_1D_STACK_MESAX /;"	d
GL_PROXY_TEXTURE_2D	./GL/glew.h	/^#define GL_PROXY_TEXTURE_2D /;"	d
GL_PROXY_TEXTURE_2D_ARRAY	./GL/glew.h	/^#define GL_PROXY_TEXTURE_2D_ARRAY /;"	d
GL_PROXY_TEXTURE_2D_ARRAY_EXT	./GL/glew.h	/^#define GL_PROXY_TEXTURE_2D_ARRAY_EXT /;"	d
GL_PROXY_TEXTURE_2D_EXT	./GL/glew.h	/^#define GL_PROXY_TEXTURE_2D_EXT /;"	d
GL_PROXY_TEXTURE_2D_MULTISAMPLE	./GL/glew.h	/^#define GL_PROXY_TEXTURE_2D_MULTISAMPLE /;"	d
GL_PROXY_TEXTURE_2D_MULTISAMPLE_ARRAY	./GL/glew.h	/^#define GL_PROXY_TEXTURE_2D_MULTISAMPLE_ARRAY /;"	d
GL_PROXY_TEXTURE_2D_STACK_MESAX	./GL/glew.h	/^#define GL_PROXY_TEXTURE_2D_STACK_MESAX /;"	d
GL_PROXY_TEXTURE_3D	./GL/glew.h	/^#define GL_PROXY_TEXTURE_3D /;"	d
GL_PROXY_TEXTURE_3D_EXT	./GL/glew.h	/^#define GL_PROXY_TEXTURE_3D_EXT /;"	d
GL_PROXY_TEXTURE_COLOR_TABLE_SGI	./GL/glew.h	/^#define GL_PROXY_TEXTURE_COLOR_TABLE_SGI /;"	d
GL_PROXY_TEXTURE_CUBE_MAP	./GL/glew.h	/^#define GL_PROXY_TEXTURE_CUBE_MAP /;"	d
GL_PROXY_TEXTURE_CUBE_MAP_ARB	./GL/glew.h	/^#define GL_PROXY_TEXTURE_CUBE_MAP_ARB /;"	d
GL_PROXY_TEXTURE_CUBE_MAP_ARRAY	./GL/glew.h	/^#define GL_PROXY_TEXTURE_CUBE_MAP_ARRAY /;"	d
GL_PROXY_TEXTURE_CUBE_MAP_ARRAY_ARB	./GL/glew.h	/^#define GL_PROXY_TEXTURE_CUBE_MAP_ARRAY_ARB /;"	d
GL_PROXY_TEXTURE_CUBE_MAP_EXT	./GL/glew.h	/^#define GL_PROXY_TEXTURE_CUBE_MAP_EXT /;"	d
GL_PROXY_TEXTURE_RECTANGLE	./GL/glew.h	/^#define GL_PROXY_TEXTURE_RECTANGLE /;"	d
GL_PROXY_TEXTURE_RECTANGLE_ARB	./GL/glew.h	/^#define GL_PROXY_TEXTURE_RECTANGLE_ARB /;"	d
GL_PROXY_TEXTURE_RECTANGLE_EXT	./GL/glew.h	/^#define GL_PROXY_TEXTURE_RECTANGLE_EXT /;"	d
GL_PROXY_TEXTURE_RECTANGLE_NV	./GL/glew.h	/^#define GL_PROXY_TEXTURE_RECTANGLE_NV /;"	d
GL_PURGEABLE_APPLE	./GL/glew.h	/^#define GL_PURGEABLE_APPLE /;"	d
GL_PURGED_CONTEXT_RESET_NV	./GL/glew.h	/^#define GL_PURGED_CONTEXT_RESET_NV /;"	d
GL_Q	./GL/glew.h	/^#define GL_Q /;"	d
GL_QCOM_YUV_texture_gather	./GL/glew.h	/^#define GL_QCOM_YUV_texture_gather /;"	d
GL_QCOM_alpha_test	./GL/glew.h	/^#define GL_QCOM_alpha_test /;"	d
GL_QCOM_binning_control	./GL/glew.h	/^#define GL_QCOM_binning_control /;"	d
GL_QCOM_driver_control	./GL/glew.h	/^#define GL_QCOM_driver_control /;"	d
GL_QCOM_extended_get	./GL/glew.h	/^#define GL_QCOM_extended_get /;"	d
GL_QCOM_extended_get2	./GL/glew.h	/^#define GL_QCOM_extended_get2 /;"	d
GL_QCOM_framebuffer_foveated	./GL/glew.h	/^#define GL_QCOM_framebuffer_foveated /;"	d
GL_QCOM_perfmon_global_mode	./GL/glew.h	/^#define GL_QCOM_perfmon_global_mode /;"	d
GL_QCOM_shader_framebuffer_fetch_noncoherent	./GL/glew.h	/^#define GL_QCOM_shader_framebuffer_fetch_noncoherent /;"	d
GL_QCOM_shader_framebuffer_fetch_rate	./GL/glew.h	/^#define GL_QCOM_shader_framebuffer_fetch_rate /;"	d
GL_QCOM_texture_foveated	./GL/glew.h	/^#define GL_QCOM_texture_foveated /;"	d
GL_QCOM_texture_foveated_subsampled_layout	./GL/glew.h	/^#define GL_QCOM_texture_foveated_subsampled_layout /;"	d
GL_QCOM_tiled_rendering	./GL/glew.h	/^#define GL_QCOM_tiled_rendering /;"	d
GL_QCOM_writeonly_rendering	./GL/glew.h	/^#define GL_QCOM_writeonly_rendering /;"	d
GL_QUADRATIC_ATTENUATION	./GL/glew.h	/^#define GL_QUADRATIC_ATTENUATION /;"	d
GL_QUADRATIC_CURVE_TO_NV	./GL/glew.h	/^#define GL_QUADRATIC_CURVE_TO_NV /;"	d
GL_QUADS	./GL/glew.h	/^#define GL_QUADS /;"	d
GL_QUADS_EXT	./GL/glew.h	/^#define GL_QUADS_EXT /;"	d
GL_QUADS_FOLLOW_PROVOKING_VERTEX_CONVENTION	./GL/glew.h	/^#define GL_QUADS_FOLLOW_PROVOKING_VERTEX_CONVENTION /;"	d
GL_QUADS_FOLLOW_PROVOKING_VERTEX_CONVENTION_EXT	./GL/glew.h	/^#define GL_QUADS_FOLLOW_PROVOKING_VERTEX_CONVENTION_EXT /;"	d
GL_QUADS_OES	./GL/glew.h	/^#define GL_QUADS_OES /;"	d
GL_QUAD_MESH_SUN	./GL/glew.h	/^#define GL_QUAD_MESH_SUN /;"	d
GL_QUAD_STRIP	./GL/glew.h	/^#define GL_QUAD_STRIP /;"	d
GL_QUARTER_BIT_ATI	./GL/glew.h	/^#define GL_QUARTER_BIT_ATI /;"	d
GL_QUERY	./GL/glew.h	/^#define GL_QUERY /;"	d
GL_QUERY_ALL_EVENT_BITS_AMD	./GL/glew.h	/^#define GL_QUERY_ALL_EVENT_BITS_AMD /;"	d
GL_QUERY_BUFFER	./GL/glew.h	/^#define GL_QUERY_BUFFER /;"	d
GL_QUERY_BUFFER_AMD	./GL/glew.h	/^#define GL_QUERY_BUFFER_AMD /;"	d
GL_QUERY_BUFFER_BARRIER_BIT	./GL/glew.h	/^#define GL_QUERY_BUFFER_BARRIER_BIT /;"	d
GL_QUERY_BUFFER_BINDING	./GL/glew.h	/^#define GL_QUERY_BUFFER_BINDING /;"	d
GL_QUERY_BUFFER_BINDING_AMD	./GL/glew.h	/^#define GL_QUERY_BUFFER_BINDING_AMD /;"	d
GL_QUERY_BY_REGION_NO_WAIT	./GL/glew.h	/^#define GL_QUERY_BY_REGION_NO_WAIT /;"	d
GL_QUERY_BY_REGION_NO_WAIT_INVERTED	./GL/glew.h	/^#define GL_QUERY_BY_REGION_NO_WAIT_INVERTED /;"	d
GL_QUERY_BY_REGION_NO_WAIT_NV	./GL/glew.h	/^#define GL_QUERY_BY_REGION_NO_WAIT_NV /;"	d
GL_QUERY_BY_REGION_WAIT	./GL/glew.h	/^#define GL_QUERY_BY_REGION_WAIT /;"	d
GL_QUERY_BY_REGION_WAIT_INVERTED	./GL/glew.h	/^#define GL_QUERY_BY_REGION_WAIT_INVERTED /;"	d
GL_QUERY_BY_REGION_WAIT_NV	./GL/glew.h	/^#define GL_QUERY_BY_REGION_WAIT_NV /;"	d
GL_QUERY_COUNTER_BITS	./GL/glew.h	/^#define GL_QUERY_COUNTER_BITS /;"	d
GL_QUERY_COUNTER_BITS_ANGLE	./GL/glew.h	/^#define GL_QUERY_COUNTER_BITS_ANGLE /;"	d
GL_QUERY_COUNTER_BITS_ARB	./GL/glew.h	/^#define GL_QUERY_COUNTER_BITS_ARB /;"	d
GL_QUERY_COUNTER_BITS_EXT	./GL/glew.h	/^#define GL_QUERY_COUNTER_BITS_EXT /;"	d
GL_QUERY_DEPTH_BOUNDS_FAIL_EVENT_BIT_AMD	./GL/glew.h	/^#define GL_QUERY_DEPTH_BOUNDS_FAIL_EVENT_BIT_AMD /;"	d
GL_QUERY_DEPTH_FAIL_EVENT_BIT_AMD	./GL/glew.h	/^#define GL_QUERY_DEPTH_FAIL_EVENT_BIT_AMD /;"	d
GL_QUERY_DEPTH_PASS_EVENT_BIT_AMD	./GL/glew.h	/^#define GL_QUERY_DEPTH_PASS_EVENT_BIT_AMD /;"	d
GL_QUERY_NO_WAIT	./GL/glew.h	/^#define GL_QUERY_NO_WAIT /;"	d
GL_QUERY_NO_WAIT_INVERTED	./GL/glew.h	/^#define GL_QUERY_NO_WAIT_INVERTED /;"	d
GL_QUERY_NO_WAIT_NV	./GL/glew.h	/^#define GL_QUERY_NO_WAIT_NV /;"	d
GL_QUERY_OBJECT_AMD	./GL/glew.h	/^#define GL_QUERY_OBJECT_AMD /;"	d
GL_QUERY_OBJECT_EXT	./GL/glew.h	/^#define GL_QUERY_OBJECT_EXT /;"	d
GL_QUERY_RESULT	./GL/glew.h	/^#define GL_QUERY_RESULT /;"	d
GL_QUERY_RESULT_ANGLE	./GL/glew.h	/^#define GL_QUERY_RESULT_ANGLE /;"	d
GL_QUERY_RESULT_ARB	./GL/glew.h	/^#define GL_QUERY_RESULT_ARB /;"	d
GL_QUERY_RESULT_AVAILABLE	./GL/glew.h	/^#define GL_QUERY_RESULT_AVAILABLE /;"	d
GL_QUERY_RESULT_AVAILABLE_ANGLE	./GL/glew.h	/^#define GL_QUERY_RESULT_AVAILABLE_ANGLE /;"	d
GL_QUERY_RESULT_AVAILABLE_ARB	./GL/glew.h	/^#define GL_QUERY_RESULT_AVAILABLE_ARB /;"	d
GL_QUERY_RESULT_AVAILABLE_EXT	./GL/glew.h	/^#define GL_QUERY_RESULT_AVAILABLE_EXT /;"	d
GL_QUERY_RESULT_AVAILABLE_NV	./GL/glew.h	/^#define GL_QUERY_RESULT_AVAILABLE_NV /;"	d
GL_QUERY_RESULT_EXT	./GL/glew.h	/^#define GL_QUERY_RESULT_EXT /;"	d
GL_QUERY_RESULT_NO_WAIT	./GL/glew.h	/^#define GL_QUERY_RESULT_NO_WAIT /;"	d
GL_QUERY_RESULT_NO_WAIT_AMD	./GL/glew.h	/^#define GL_QUERY_RESULT_NO_WAIT_AMD /;"	d
GL_QUERY_RESULT_NV	./GL/glew.h	/^#define GL_QUERY_RESULT_NV /;"	d
GL_QUERY_STENCIL_FAIL_EVENT_BIT_AMD	./GL/glew.h	/^#define GL_QUERY_STENCIL_FAIL_EVENT_BIT_AMD /;"	d
GL_QUERY_TARGET	./GL/glew.h	/^#define GL_QUERY_TARGET /;"	d
GL_QUERY_WAIT	./GL/glew.h	/^#define GL_QUERY_WAIT /;"	d
GL_QUERY_WAIT_INVERTED	./GL/glew.h	/^#define GL_QUERY_WAIT_INVERTED /;"	d
GL_QUERY_WAIT_NV	./GL/glew.h	/^#define GL_QUERY_WAIT_NV /;"	d
GL_R	./GL/glew.h	/^#define GL_R /;"	d
GL_R11F_G11F_B10F	./GL/glew.h	/^#define GL_R11F_G11F_B10F /;"	d
GL_R11F_G11F_B10F_APPLE	./GL/glew.h	/^#define GL_R11F_G11F_B10F_APPLE /;"	d
GL_R11F_G11F_B10F_EXT	./GL/glew.h	/^#define GL_R11F_G11F_B10F_EXT /;"	d
GL_R11F_G11F_B10F_NV	./GL/glew.h	/^#define GL_R11F_G11F_B10F_NV /;"	d
GL_R16	./GL/glew.h	/^#define GL_R16 /;"	d
GL_R16F	./GL/glew.h	/^#define GL_R16F /;"	d
GL_R16F_EXT	./GL/glew.h	/^#define GL_R16F_EXT /;"	d
GL_R16I	./GL/glew.h	/^#define GL_R16I /;"	d
GL_R16UI	./GL/glew.h	/^#define GL_R16UI /;"	d
GL_R16_EXT	./GL/glew.h	/^#define GL_R16_EXT /;"	d
GL_R16_SNORM	./GL/glew.h	/^#define GL_R16_SNORM /;"	d
GL_R16_SNORM_EXT	./GL/glew.h	/^#define GL_R16_SNORM_EXT /;"	d
GL_R1UI_C3F_V3F_SUN	./GL/glew.h	/^#define GL_R1UI_C3F_V3F_SUN /;"	d
GL_R1UI_C4F_N3F_V3F_SUN	./GL/glew.h	/^#define GL_R1UI_C4F_N3F_V3F_SUN /;"	d
GL_R1UI_C4UB_V3F_SUN	./GL/glew.h	/^#define GL_R1UI_C4UB_V3F_SUN /;"	d
GL_R1UI_N3F_V3F_SUN	./GL/glew.h	/^#define GL_R1UI_N3F_V3F_SUN /;"	d
GL_R1UI_T2F_C4F_N3F_V3F_SUN	./GL/glew.h	/^#define GL_R1UI_T2F_C4F_N3F_V3F_SUN /;"	d
GL_R1UI_T2F_N3F_V3F_SUN	./GL/glew.h	/^#define GL_R1UI_T2F_N3F_V3F_SUN /;"	d
GL_R1UI_T2F_V3F_SUN	./GL/glew.h	/^#define GL_R1UI_T2F_V3F_SUN /;"	d
GL_R1UI_V3F_SUN	./GL/glew.h	/^#define GL_R1UI_V3F_SUN /;"	d
GL_R32F	./GL/glew.h	/^#define GL_R32F /;"	d
GL_R32F_EXT	./GL/glew.h	/^#define GL_R32F_EXT /;"	d
GL_R32I	./GL/glew.h	/^#define GL_R32I /;"	d
GL_R32UI	./GL/glew.h	/^#define GL_R32UI /;"	d
GL_R3_G3_B2	./GL/glew.h	/^#define GL_R3_G3_B2 /;"	d
GL_R5_G6_B5_A8_ICC_SGIX	./GL/glew.h	/^#define GL_R5_G6_B5_A8_ICC_SGIX /;"	d
GL_R5_G6_B5_ICC_SGIX	./GL/glew.h	/^#define GL_R5_G6_B5_ICC_SGIX /;"	d
GL_R8	./GL/glew.h	/^#define GL_R8 /;"	d
GL_R8I	./GL/glew.h	/^#define GL_R8I /;"	d
GL_R8UI	./GL/glew.h	/^#define GL_R8UI /;"	d
GL_R8_EXT	./GL/glew.h	/^#define GL_R8_EXT /;"	d
GL_R8_SNORM	./GL/glew.h	/^#define GL_R8_SNORM /;"	d
GL_RASTERIZER_DISCARD	./GL/glew.h	/^#define GL_RASTERIZER_DISCARD /;"	d
GL_RASTERIZER_DISCARD_EXT	./GL/glew.h	/^#define GL_RASTERIZER_DISCARD_EXT /;"	d
GL_RASTERIZER_DISCARD_NV	./GL/glew.h	/^#define GL_RASTERIZER_DISCARD_NV /;"	d
GL_RASTER_FIXED_SAMPLE_LOCATIONS_EXT	./GL/glew.h	/^#define GL_RASTER_FIXED_SAMPLE_LOCATIONS_EXT /;"	d
GL_RASTER_MULTISAMPLE_EXT	./GL/glew.h	/^#define GL_RASTER_MULTISAMPLE_EXT /;"	d
GL_RASTER_POSITION_UNCLIPPED_IBM	./GL/glew.h	/^#define GL_RASTER_POSITION_UNCLIPPED_IBM /;"	d
GL_RASTER_SAMPLES_EXT	./GL/glew.h	/^#define GL_RASTER_SAMPLES_EXT /;"	d
GL_READ_BUFFER	./GL/glew.h	/^#define GL_READ_BUFFER /;"	d
GL_READ_BUFFER_EXT	./GL/glew.h	/^#define GL_READ_BUFFER_EXT /;"	d
GL_READ_BUFFER_NV	./GL/glew.h	/^#define GL_READ_BUFFER_NV /;"	d
GL_READ_FRAMEBUFFER	./GL/glew.h	/^#define GL_READ_FRAMEBUFFER /;"	d
GL_READ_FRAMEBUFFER_ANGLE	./GL/glew.h	/^#define GL_READ_FRAMEBUFFER_ANGLE /;"	d
GL_READ_FRAMEBUFFER_APPLE	./GL/glew.h	/^#define GL_READ_FRAMEBUFFER_APPLE /;"	d
GL_READ_FRAMEBUFFER_BINDING	./GL/glew.h	/^#define GL_READ_FRAMEBUFFER_BINDING /;"	d
GL_READ_FRAMEBUFFER_BINDING_ANGLE	./GL/glew.h	/^#define GL_READ_FRAMEBUFFER_BINDING_ANGLE /;"	d
GL_READ_FRAMEBUFFER_BINDING_APPLE	./GL/glew.h	/^#define GL_READ_FRAMEBUFFER_BINDING_APPLE /;"	d
GL_READ_FRAMEBUFFER_BINDING_EXT	./GL/glew.h	/^#define GL_READ_FRAMEBUFFER_BINDING_EXT /;"	d
GL_READ_FRAMEBUFFER_BINDING_NV	./GL/glew.h	/^#define GL_READ_FRAMEBUFFER_BINDING_NV /;"	d
GL_READ_FRAMEBUFFER_EXT	./GL/glew.h	/^#define GL_READ_FRAMEBUFFER_EXT /;"	d
GL_READ_FRAMEBUFFER_NV	./GL/glew.h	/^#define GL_READ_FRAMEBUFFER_NV /;"	d
GL_READ_ONLY	./GL/glew.h	/^#define GL_READ_ONLY /;"	d
GL_READ_ONLY_ARB	./GL/glew.h	/^#define GL_READ_ONLY_ARB /;"	d
GL_READ_PIXELS	./GL/glew.h	/^#define GL_READ_PIXELS /;"	d
GL_READ_PIXELS_FORMAT	./GL/glew.h	/^#define GL_READ_PIXELS_FORMAT /;"	d
GL_READ_PIXELS_TYPE	./GL/glew.h	/^#define GL_READ_PIXELS_TYPE /;"	d
GL_READ_PIXEL_DATA_RANGE_LENGTH_NV	./GL/glew.h	/^#define GL_READ_PIXEL_DATA_RANGE_LENGTH_NV /;"	d
GL_READ_PIXEL_DATA_RANGE_NV	./GL/glew.h	/^#define GL_READ_PIXEL_DATA_RANGE_NV /;"	d
GL_READ_PIXEL_DATA_RANGE_POINTER_NV	./GL/glew.h	/^#define GL_READ_PIXEL_DATA_RANGE_POINTER_NV /;"	d
GL_READ_WRITE	./GL/glew.h	/^#define GL_READ_WRITE /;"	d
GL_READ_WRITE_ARB	./GL/glew.h	/^#define GL_READ_WRITE_ARB /;"	d
GL_RECIP_ADD_SIGNED_ALPHA_IMG	./GL/glew.h	/^#define GL_RECIP_ADD_SIGNED_ALPHA_IMG /;"	d
GL_RECLAIM_MEMORY_HINT_PGI	./GL/glew.h	/^#define GL_RECLAIM_MEMORY_HINT_PGI /;"	d
GL_RECT_NV	./GL/glew.h	/^#define GL_RECT_NV /;"	d
GL_RED	./GL/glew.h	/^#define GL_RED /;"	d
GL_REDUCE	./GL/glew.h	/^#define GL_REDUCE /;"	d
GL_REDUCE_EXT	./GL/glew.h	/^#define GL_REDUCE_EXT /;"	d
GL_RED_BIAS	./GL/glew.h	/^#define GL_RED_BIAS /;"	d
GL_RED_BITS	./GL/glew.h	/^#define GL_RED_BITS /;"	d
GL_RED_BIT_ATI	./GL/glew.h	/^#define GL_RED_BIT_ATI /;"	d
GL_RED_EXT	./GL/glew.h	/^#define GL_RED_EXT /;"	d
GL_RED_INTEGER	./GL/glew.h	/^#define GL_RED_INTEGER /;"	d
GL_RED_INTEGER_EXT	./GL/glew.h	/^#define GL_RED_INTEGER_EXT /;"	d
GL_RED_MAX_CLAMP_INGR	./GL/glew.h	/^#define GL_RED_MAX_CLAMP_INGR /;"	d
GL_RED_MIN_CLAMP_INGR	./GL/glew.h	/^#define GL_RED_MIN_CLAMP_INGR /;"	d
GL_RED_NV	./GL/glew.h	/^#define GL_RED_NV /;"	d
GL_RED_SCALE	./GL/glew.h	/^#define GL_RED_SCALE /;"	d
GL_RED_SNORM	./GL/glew.h	/^#define GL_RED_SNORM /;"	d
GL_REFERENCED_BY_COMPUTE_SHADER	./GL/glew.h	/^#define GL_REFERENCED_BY_COMPUTE_SHADER /;"	d
GL_REFERENCED_BY_FRAGMENT_SHADER	./GL/glew.h	/^#define GL_REFERENCED_BY_FRAGMENT_SHADER /;"	d
GL_REFERENCED_BY_GEOMETRY_SHADER	./GL/glew.h	/^#define GL_REFERENCED_BY_GEOMETRY_SHADER /;"	d
GL_REFERENCED_BY_GEOMETRY_SHADER_EXT	./GL/glew.h	/^#define GL_REFERENCED_BY_GEOMETRY_SHADER_EXT /;"	d
GL_REFERENCED_BY_GEOMETRY_SHADER_OES	./GL/glew.h	/^#define GL_REFERENCED_BY_GEOMETRY_SHADER_OES /;"	d
GL_REFERENCED_BY_MESH_SHADER_NV	./GL/glew.h	/^#define GL_REFERENCED_BY_MESH_SHADER_NV /;"	d
GL_REFERENCED_BY_TASK_SHADER_NV	./GL/glew.h	/^#define GL_REFERENCED_BY_TASK_SHADER_NV /;"	d
GL_REFERENCED_BY_TESS_CONTROL_SHADER	./GL/glew.h	/^#define GL_REFERENCED_BY_TESS_CONTROL_SHADER /;"	d
GL_REFERENCED_BY_TESS_CONTROL_SHADER_EXT	./GL/glew.h	/^#define GL_REFERENCED_BY_TESS_CONTROL_SHADER_EXT /;"	d
GL_REFERENCED_BY_TESS_CONTROL_SHADER_OES	./GL/glew.h	/^#define GL_REFERENCED_BY_TESS_CONTROL_SHADER_OES /;"	d
GL_REFERENCED_BY_TESS_EVALUATION_SHADER	./GL/glew.h	/^#define GL_REFERENCED_BY_TESS_EVALUATION_SHADER /;"	d
GL_REFERENCED_BY_TESS_EVALUATION_SHADER_EXT	./GL/glew.h	/^#define GL_REFERENCED_BY_TESS_EVALUATION_SHADER_EXT /;"	d
GL_REFERENCED_BY_TESS_EVALUATION_SHADER_OES	./GL/glew.h	/^#define GL_REFERENCED_BY_TESS_EVALUATION_SHADER_OES /;"	d
GL_REFERENCED_BY_VERTEX_SHADER	./GL/glew.h	/^#define GL_REFERENCED_BY_VERTEX_SHADER /;"	d
GL_REFLECTION_MAP	./GL/glew.h	/^#define GL_REFLECTION_MAP /;"	d
GL_REFLECTION_MAP_ARB	./GL/glew.h	/^#define GL_REFLECTION_MAP_ARB /;"	d
GL_REFLECTION_MAP_EXT	./GL/glew.h	/^#define GL_REFLECTION_MAP_EXT /;"	d
GL_REFLECTION_MAP_NV	./GL/glew.h	/^#define GL_REFLECTION_MAP_NV /;"	d
GL_REFLECTION_MAP_OES	./GL/glew.h	/^#define GL_REFLECTION_MAP_OES /;"	d
GL_REGAL_ES1_0_compatibility	./GL/glew.h	/^#define GL_REGAL_ES1_0_compatibility /;"	d
GL_REGAL_ES1_1_compatibility	./GL/glew.h	/^#define GL_REGAL_ES1_1_compatibility /;"	d
GL_REGAL_enable	./GL/glew.h	/^#define GL_REGAL_enable /;"	d
GL_REGAL_error_string	./GL/glew.h	/^#define GL_REGAL_error_string /;"	d
GL_REGAL_extension_query	./GL/glew.h	/^#define GL_REGAL_extension_query /;"	d
GL_REGAL_log	./GL/glew.h	/^#define GL_REGAL_log /;"	d
GL_REGAL_proc_address	./GL/glew.h	/^#define GL_REGAL_proc_address /;"	d
GL_REGISTER_COMBINERS_NV	./GL/glew.h	/^#define GL_REGISTER_COMBINERS_NV /;"	d
GL_REG_0_ATI	./GL/glew.h	/^#define GL_REG_0_ATI /;"	d
GL_REG_1_ATI	./GL/glew.h	/^#define GL_REG_1_ATI /;"	d
GL_REG_2_ATI	./GL/glew.h	/^#define GL_REG_2_ATI /;"	d
GL_REG_3_ATI	./GL/glew.h	/^#define GL_REG_3_ATI /;"	d
GL_REG_4_ATI	./GL/glew.h	/^#define GL_REG_4_ATI /;"	d
GL_REG_5_ATI	./GL/glew.h	/^#define GL_REG_5_ATI /;"	d
GL_RELATIVE_ARC_TO_NV	./GL/glew.h	/^#define GL_RELATIVE_ARC_TO_NV /;"	d
GL_RELATIVE_CONIC_CURVE_TO_NV	./GL/glew.h	/^#define GL_RELATIVE_CONIC_CURVE_TO_NV /;"	d
GL_RELATIVE_CUBIC_CURVE_TO_NV	./GL/glew.h	/^#define GL_RELATIVE_CUBIC_CURVE_TO_NV /;"	d
GL_RELATIVE_HORIZONTAL_LINE_TO_NV	./GL/glew.h	/^#define GL_RELATIVE_HORIZONTAL_LINE_TO_NV /;"	d
GL_RELATIVE_LARGE_CCW_ARC_TO_NV	./GL/glew.h	/^#define GL_RELATIVE_LARGE_CCW_ARC_TO_NV /;"	d
GL_RELATIVE_LARGE_CW_ARC_TO_NV	./GL/glew.h	/^#define GL_RELATIVE_LARGE_CW_ARC_TO_NV /;"	d
GL_RELATIVE_LINE_TO_NV	./GL/glew.h	/^#define GL_RELATIVE_LINE_TO_NV /;"	d
GL_RELATIVE_MOVE_TO_NV	./GL/glew.h	/^#define GL_RELATIVE_MOVE_TO_NV /;"	d
GL_RELATIVE_QUADRATIC_CURVE_TO_NV	./GL/glew.h	/^#define GL_RELATIVE_QUADRATIC_CURVE_TO_NV /;"	d
GL_RELATIVE_RECT_NV	./GL/glew.h	/^#define GL_RELATIVE_RECT_NV /;"	d
GL_RELATIVE_ROUNDED_RECT2_NV	./GL/glew.h	/^#define GL_RELATIVE_ROUNDED_RECT2_NV /;"	d
GL_RELATIVE_ROUNDED_RECT4_NV	./GL/glew.h	/^#define GL_RELATIVE_ROUNDED_RECT4_NV /;"	d
GL_RELATIVE_ROUNDED_RECT8_NV	./GL/glew.h	/^#define GL_RELATIVE_ROUNDED_RECT8_NV /;"	d
GL_RELATIVE_ROUNDED_RECT_NV	./GL/glew.h	/^#define GL_RELATIVE_ROUNDED_RECT_NV /;"	d
GL_RELATIVE_SMALL_CCW_ARC_TO_NV	./GL/glew.h	/^#define GL_RELATIVE_SMALL_CCW_ARC_TO_NV /;"	d
GL_RELATIVE_SMALL_CW_ARC_TO_NV	./GL/glew.h	/^#define GL_RELATIVE_SMALL_CW_ARC_TO_NV /;"	d
GL_RELATIVE_SMOOTH_CUBIC_CURVE_TO_NV	./GL/glew.h	/^#define GL_RELATIVE_SMOOTH_CUBIC_CURVE_TO_NV /;"	d
GL_RELATIVE_SMOOTH_QUADRATIC_CURVE_TO_NV	./GL/glew.h	/^#define GL_RELATIVE_SMOOTH_QUADRATIC_CURVE_TO_NV /;"	d
GL_RELATIVE_VERTICAL_LINE_TO_NV	./GL/glew.h	/^#define GL_RELATIVE_VERTICAL_LINE_TO_NV /;"	d
GL_RELEASED_APPLE	./GL/glew.h	/^#define GL_RELEASED_APPLE /;"	d
GL_RENDER	./GL/glew.h	/^#define GL_RENDER /;"	d
GL_RENDERBUFFER	./GL/glew.h	/^#define GL_RENDERBUFFER /;"	d
GL_RENDERBUFFER_ALPHA_SIZE	./GL/glew.h	/^#define GL_RENDERBUFFER_ALPHA_SIZE /;"	d
GL_RENDERBUFFER_ALPHA_SIZE_EXT	./GL/glew.h	/^#define GL_RENDERBUFFER_ALPHA_SIZE_EXT /;"	d
GL_RENDERBUFFER_ALPHA_SIZE_OES	./GL/glew.h	/^#define GL_RENDERBUFFER_ALPHA_SIZE_OES /;"	d
GL_RENDERBUFFER_BINDING	./GL/glew.h	/^#define GL_RENDERBUFFER_BINDING /;"	d
GL_RENDERBUFFER_BINDING_EXT	./GL/glew.h	/^#define GL_RENDERBUFFER_BINDING_EXT /;"	d
GL_RENDERBUFFER_BINDING_OES	./GL/glew.h	/^#define GL_RENDERBUFFER_BINDING_OES /;"	d
GL_RENDERBUFFER_BLUE_SIZE	./GL/glew.h	/^#define GL_RENDERBUFFER_BLUE_SIZE /;"	d
GL_RENDERBUFFER_BLUE_SIZE_EXT	./GL/glew.h	/^#define GL_RENDERBUFFER_BLUE_SIZE_EXT /;"	d
GL_RENDERBUFFER_BLUE_SIZE_OES	./GL/glew.h	/^#define GL_RENDERBUFFER_BLUE_SIZE_OES /;"	d
GL_RENDERBUFFER_COLOR_SAMPLES_NV	./GL/glew.h	/^#define GL_RENDERBUFFER_COLOR_SAMPLES_NV /;"	d
GL_RENDERBUFFER_COVERAGE_SAMPLES_NV	./GL/glew.h	/^#define GL_RENDERBUFFER_COVERAGE_SAMPLES_NV /;"	d
GL_RENDERBUFFER_DEPTH_SIZE	./GL/glew.h	/^#define GL_RENDERBUFFER_DEPTH_SIZE /;"	d
GL_RENDERBUFFER_DEPTH_SIZE_EXT	./GL/glew.h	/^#define GL_RENDERBUFFER_DEPTH_SIZE_EXT /;"	d
GL_RENDERBUFFER_DEPTH_SIZE_OES	./GL/glew.h	/^#define GL_RENDERBUFFER_DEPTH_SIZE_OES /;"	d
GL_RENDERBUFFER_EXT	./GL/glew.h	/^#define GL_RENDERBUFFER_EXT /;"	d
GL_RENDERBUFFER_FREE_MEMORY_ATI	./GL/glew.h	/^#define GL_RENDERBUFFER_FREE_MEMORY_ATI /;"	d
GL_RENDERBUFFER_GREEN_SIZE	./GL/glew.h	/^#define GL_RENDERBUFFER_GREEN_SIZE /;"	d
GL_RENDERBUFFER_GREEN_SIZE_EXT	./GL/glew.h	/^#define GL_RENDERBUFFER_GREEN_SIZE_EXT /;"	d
GL_RENDERBUFFER_GREEN_SIZE_OES	./GL/glew.h	/^#define GL_RENDERBUFFER_GREEN_SIZE_OES /;"	d
GL_RENDERBUFFER_HEIGHT	./GL/glew.h	/^#define GL_RENDERBUFFER_HEIGHT /;"	d
GL_RENDERBUFFER_HEIGHT_EXT	./GL/glew.h	/^#define GL_RENDERBUFFER_HEIGHT_EXT /;"	d
GL_RENDERBUFFER_HEIGHT_OES	./GL/glew.h	/^#define GL_RENDERBUFFER_HEIGHT_OES /;"	d
GL_RENDERBUFFER_INTERNAL_FORMAT	./GL/glew.h	/^#define GL_RENDERBUFFER_INTERNAL_FORMAT /;"	d
GL_RENDERBUFFER_INTERNAL_FORMAT_EXT	./GL/glew.h	/^#define GL_RENDERBUFFER_INTERNAL_FORMAT_EXT /;"	d
GL_RENDERBUFFER_INTERNAL_FORMAT_OES	./GL/glew.h	/^#define GL_RENDERBUFFER_INTERNAL_FORMAT_OES /;"	d
GL_RENDERBUFFER_OES	./GL/glew.h	/^#define GL_RENDERBUFFER_OES /;"	d
GL_RENDERBUFFER_RED_SIZE	./GL/glew.h	/^#define GL_RENDERBUFFER_RED_SIZE /;"	d
GL_RENDERBUFFER_RED_SIZE_EXT	./GL/glew.h	/^#define GL_RENDERBUFFER_RED_SIZE_EXT /;"	d
GL_RENDERBUFFER_RED_SIZE_OES	./GL/glew.h	/^#define GL_RENDERBUFFER_RED_SIZE_OES /;"	d
GL_RENDERBUFFER_SAMPLES	./GL/glew.h	/^#define GL_RENDERBUFFER_SAMPLES /;"	d
GL_RENDERBUFFER_SAMPLES_ANGLE	./GL/glew.h	/^#define GL_RENDERBUFFER_SAMPLES_ANGLE /;"	d
GL_RENDERBUFFER_SAMPLES_APPLE	./GL/glew.h	/^#define GL_RENDERBUFFER_SAMPLES_APPLE /;"	d
GL_RENDERBUFFER_SAMPLES_EXT	./GL/glew.h	/^#define GL_RENDERBUFFER_SAMPLES_EXT /;"	d
GL_RENDERBUFFER_SAMPLES_IMG	./GL/glew.h	/^#define GL_RENDERBUFFER_SAMPLES_IMG /;"	d
GL_RENDERBUFFER_SAMPLES_NV	./GL/glew.h	/^#define GL_RENDERBUFFER_SAMPLES_NV /;"	d
GL_RENDERBUFFER_STENCIL_SIZE	./GL/glew.h	/^#define GL_RENDERBUFFER_STENCIL_SIZE /;"	d
GL_RENDERBUFFER_STENCIL_SIZE_EXT	./GL/glew.h	/^#define GL_RENDERBUFFER_STENCIL_SIZE_EXT /;"	d
GL_RENDERBUFFER_STENCIL_SIZE_OES	./GL/glew.h	/^#define GL_RENDERBUFFER_STENCIL_SIZE_OES /;"	d
GL_RENDERBUFFER_STORAGE_SAMPLES_AMD	./GL/glew.h	/^#define GL_RENDERBUFFER_STORAGE_SAMPLES_AMD /;"	d
GL_RENDERBUFFER_WIDTH	./GL/glew.h	/^#define GL_RENDERBUFFER_WIDTH /;"	d
GL_RENDERBUFFER_WIDTH_EXT	./GL/glew.h	/^#define GL_RENDERBUFFER_WIDTH_EXT /;"	d
GL_RENDERBUFFER_WIDTH_OES	./GL/glew.h	/^#define GL_RENDERBUFFER_WIDTH_OES /;"	d
GL_RENDERER	./GL/glew.h	/^#define GL_RENDERER /;"	d
GL_RENDER_DIRECT_TO_FRAMEBUFFER_QCOM	./GL/glew.h	/^#define GL_RENDER_DIRECT_TO_FRAMEBUFFER_QCOM /;"	d
GL_RENDER_GPU_MASK_NV	./GL/glew.h	/^#define GL_RENDER_GPU_MASK_NV /;"	d
GL_RENDER_MODE	./GL/glew.h	/^#define GL_RENDER_MODE /;"	d
GL_REND_screen_coordinates	./GL/glew.h	/^#define GL_REND_screen_coordinates /;"	d
GL_REPEAT	./GL/glew.h	/^#define GL_REPEAT /;"	d
GL_REPLACE	./GL/glew.h	/^#define GL_REPLACE /;"	d
GL_REPLACEMENT_CODE_ARRAY_POINTER_SUN	./GL/glew.h	/^#define GL_REPLACEMENT_CODE_ARRAY_POINTER_SUN /;"	d
GL_REPLACEMENT_CODE_ARRAY_STRIDE_SUN	./GL/glew.h	/^#define GL_REPLACEMENT_CODE_ARRAY_STRIDE_SUN /;"	d
GL_REPLACEMENT_CODE_ARRAY_SUN	./GL/glew.h	/^#define GL_REPLACEMENT_CODE_ARRAY_SUN /;"	d
GL_REPLACEMENT_CODE_ARRAY_TYPE_SUN	./GL/glew.h	/^#define GL_REPLACEMENT_CODE_ARRAY_TYPE_SUN /;"	d
GL_REPLACEMENT_CODE_SUN	./GL/glew.h	/^#define GL_REPLACEMENT_CODE_SUN /;"	d
GL_REPLACE_EXT	./GL/glew.h	/^#define GL_REPLACE_EXT /;"	d
GL_REPLACE_MIDDLE_SUN	./GL/glew.h	/^#define GL_REPLACE_MIDDLE_SUN /;"	d
GL_REPLACE_OLDEST_SUN	./GL/glew.h	/^#define GL_REPLACE_OLDEST_SUN /;"	d
GL_REPLACE_VALUE_AMD	./GL/glew.h	/^#define GL_REPLACE_VALUE_AMD /;"	d
GL_REPLICATE_BORDER	./GL/glew.h	/^#define GL_REPLICATE_BORDER /;"	d
GL_REPRESENTATIVE_FRAGMENT_TEST_NV	./GL/glew.h	/^#define GL_REPRESENTATIVE_FRAGMENT_TEST_NV /;"	d
GL_REQUIRED_TEXTURE_IMAGE_UNITS_OES	./GL/glew.h	/^#define GL_REQUIRED_TEXTURE_IMAGE_UNITS_OES /;"	d
GL_RESAMPLE_AVERAGE_OML	./GL/glew.h	/^#define GL_RESAMPLE_AVERAGE_OML /;"	d
GL_RESAMPLE_DECIMATE_OML	./GL/glew.h	/^#define GL_RESAMPLE_DECIMATE_OML /;"	d
GL_RESAMPLE_DECIMATE_SGIX	./GL/glew.h	/^#define GL_RESAMPLE_DECIMATE_SGIX /;"	d
GL_RESAMPLE_REPLICATE_OML	./GL/glew.h	/^#define GL_RESAMPLE_REPLICATE_OML /;"	d
GL_RESAMPLE_REPLICATE_SGIX	./GL/glew.h	/^#define GL_RESAMPLE_REPLICATE_SGIX /;"	d
GL_RESAMPLE_ZERO_FILL_OML	./GL/glew.h	/^#define GL_RESAMPLE_ZERO_FILL_OML /;"	d
GL_RESAMPLE_ZERO_FILL_SGIX	./GL/glew.h	/^#define GL_RESAMPLE_ZERO_FILL_SGIX /;"	d
GL_RESCALE_NORMAL	./GL/glew.h	/^#define GL_RESCALE_NORMAL /;"	d
GL_RESCALE_NORMAL_EXT	./GL/glew.h	/^#define GL_RESCALE_NORMAL_EXT /;"	d
GL_RESET_NOTIFICATION_STRATEGY	./GL/glew.h	/^#define GL_RESET_NOTIFICATION_STRATEGY /;"	d
GL_RESET_NOTIFICATION_STRATEGY_ARB	./GL/glew.h	/^#define GL_RESET_NOTIFICATION_STRATEGY_ARB /;"	d
GL_RESET_NOTIFICATION_STRATEGY_EXT	./GL/glew.h	/^#define GL_RESET_NOTIFICATION_STRATEGY_EXT /;"	d
GL_RESTART_PATH_NV	./GL/glew.h	/^#define GL_RESTART_PATH_NV /;"	d
GL_RESTART_SUN	./GL/glew.h	/^#define GL_RESTART_SUN /;"	d
GL_RETAINED_APPLE	./GL/glew.h	/^#define GL_RETAINED_APPLE /;"	d
GL_RETURN	./GL/glew.h	/^#define GL_RETURN /;"	d
GL_RG	./GL/glew.h	/^#define GL_RG /;"	d
GL_RG16	./GL/glew.h	/^#define GL_RG16 /;"	d
GL_RG16F	./GL/glew.h	/^#define GL_RG16F /;"	d
GL_RG16F_EXT	./GL/glew.h	/^#define GL_RG16F_EXT /;"	d
GL_RG16I	./GL/glew.h	/^#define GL_RG16I /;"	d
GL_RG16UI	./GL/glew.h	/^#define GL_RG16UI /;"	d
GL_RG16_EXT	./GL/glew.h	/^#define GL_RG16_EXT /;"	d
GL_RG16_SNORM	./GL/glew.h	/^#define GL_RG16_SNORM /;"	d
GL_RG16_SNORM_EXT	./GL/glew.h	/^#define GL_RG16_SNORM_EXT /;"	d
GL_RG32F	./GL/glew.h	/^#define GL_RG32F /;"	d
GL_RG32F_EXT	./GL/glew.h	/^#define GL_RG32F_EXT /;"	d
GL_RG32I	./GL/glew.h	/^#define GL_RG32I /;"	d
GL_RG32UI	./GL/glew.h	/^#define GL_RG32UI /;"	d
GL_RG8	./GL/glew.h	/^#define GL_RG8 /;"	d
GL_RG8I	./GL/glew.h	/^#define GL_RG8I /;"	d
GL_RG8UI	./GL/glew.h	/^#define GL_RG8UI /;"	d
GL_RG8_EXT	./GL/glew.h	/^#define GL_RG8_EXT /;"	d
GL_RG8_SNORM	./GL/glew.h	/^#define GL_RG8_SNORM /;"	d
GL_RGB	./GL/glew.h	/^#define GL_RGB /;"	d
GL_RGB10	./GL/glew.h	/^#define GL_RGB10 /;"	d
GL_RGB10_A2	./GL/glew.h	/^#define GL_RGB10_A2 /;"	d
GL_RGB10_A2UI	./GL/glew.h	/^#define GL_RGB10_A2UI /;"	d
GL_RGB10_A2_EXT	./GL/glew.h	/^#define GL_RGB10_A2_EXT /;"	d
GL_RGB10_EXT	./GL/glew.h	/^#define GL_RGB10_EXT /;"	d
GL_RGB12	./GL/glew.h	/^#define GL_RGB12 /;"	d
GL_RGB12_EXT	./GL/glew.h	/^#define GL_RGB12_EXT /;"	d
GL_RGB16	./GL/glew.h	/^#define GL_RGB16 /;"	d
GL_RGB16F	./GL/glew.h	/^#define GL_RGB16F /;"	d
GL_RGB16F_ARB	./GL/glew.h	/^#define GL_RGB16F_ARB /;"	d
GL_RGB16F_EXT	./GL/glew.h	/^#define GL_RGB16F_EXT /;"	d
GL_RGB16I	./GL/glew.h	/^#define GL_RGB16I /;"	d
GL_RGB16I_EXT	./GL/glew.h	/^#define GL_RGB16I_EXT /;"	d
GL_RGB16UI	./GL/glew.h	/^#define GL_RGB16UI /;"	d
GL_RGB16UI_EXT	./GL/glew.h	/^#define GL_RGB16UI_EXT /;"	d
GL_RGB16_EXT	./GL/glew.h	/^#define GL_RGB16_EXT /;"	d
GL_RGB16_EXTENDED_RANGE_SGIX	./GL/glew.h	/^#define GL_RGB16_EXTENDED_RANGE_SGIX /;"	d
GL_RGB16_SIGNED_SGIX	./GL/glew.h	/^#define GL_RGB16_SIGNED_SGIX /;"	d
GL_RGB16_SNORM	./GL/glew.h	/^#define GL_RGB16_SNORM /;"	d
GL_RGB16_SNORM_EXT	./GL/glew.h	/^#define GL_RGB16_SNORM_EXT /;"	d
GL_RGB2_EXT	./GL/glew.h	/^#define GL_RGB2_EXT /;"	d
GL_RGB32F	./GL/glew.h	/^#define GL_RGB32F /;"	d
GL_RGB32F_ARB	./GL/glew.h	/^#define GL_RGB32F_ARB /;"	d
GL_RGB32F_EXT	./GL/glew.h	/^#define GL_RGB32F_EXT /;"	d
GL_RGB32I	./GL/glew.h	/^#define GL_RGB32I /;"	d
GL_RGB32I_EXT	./GL/glew.h	/^#define GL_RGB32I_EXT /;"	d
GL_RGB32UI	./GL/glew.h	/^#define GL_RGB32UI /;"	d
GL_RGB32UI_EXT	./GL/glew.h	/^#define GL_RGB32UI_EXT /;"	d
GL_RGB4	./GL/glew.h	/^#define GL_RGB4 /;"	d
GL_RGB4_EXT	./GL/glew.h	/^#define GL_RGB4_EXT /;"	d
GL_RGB4_S3TC	./GL/glew.h	/^#define GL_RGB4_S3TC /;"	d
GL_RGB5	./GL/glew.h	/^#define GL_RGB5 /;"	d
GL_RGB565	./GL/glew.h	/^#define GL_RGB565 /;"	d
GL_RGB565_OES	./GL/glew.h	/^#define GL_RGB565_OES /;"	d
GL_RGB5_A1	./GL/glew.h	/^#define GL_RGB5_A1 /;"	d
GL_RGB5_A1_EXT	./GL/glew.h	/^#define GL_RGB5_A1_EXT /;"	d
GL_RGB5_A1_OES	./GL/glew.h	/^#define GL_RGB5_A1_OES /;"	d
GL_RGB5_EXT	./GL/glew.h	/^#define GL_RGB5_EXT /;"	d
GL_RGB8	./GL/glew.h	/^#define GL_RGB8 /;"	d
GL_RGB8I	./GL/glew.h	/^#define GL_RGB8I /;"	d
GL_RGB8I_EXT	./GL/glew.h	/^#define GL_RGB8I_EXT /;"	d
GL_RGB8UI	./GL/glew.h	/^#define GL_RGB8UI /;"	d
GL_RGB8UI_EXT	./GL/glew.h	/^#define GL_RGB8UI_EXT /;"	d
GL_RGB8_EXT	./GL/glew.h	/^#define GL_RGB8_EXT /;"	d
GL_RGB8_OES	./GL/glew.h	/^#define GL_RGB8_OES /;"	d
GL_RGB8_SNORM	./GL/glew.h	/^#define GL_RGB8_SNORM /;"	d
GL_RGB9_E5	./GL/glew.h	/^#define GL_RGB9_E5 /;"	d
GL_RGB9_E5_APPLE	./GL/glew.h	/^#define GL_RGB9_E5_APPLE /;"	d
GL_RGB9_E5_EXT	./GL/glew.h	/^#define GL_RGB9_E5_EXT /;"	d
GL_RGBA	./GL/glew.h	/^#define GL_RGBA /;"	d
GL_RGBA12	./GL/glew.h	/^#define GL_RGBA12 /;"	d
GL_RGBA12_EXT	./GL/glew.h	/^#define GL_RGBA12_EXT /;"	d
GL_RGBA16	./GL/glew.h	/^#define GL_RGBA16 /;"	d
GL_RGBA16F	./GL/glew.h	/^#define GL_RGBA16F /;"	d
GL_RGBA16F_ARB	./GL/glew.h	/^#define GL_RGBA16F_ARB /;"	d
GL_RGBA16F_EXT	./GL/glew.h	/^#define GL_RGBA16F_EXT /;"	d
GL_RGBA16I	./GL/glew.h	/^#define GL_RGBA16I /;"	d
GL_RGBA16I_EXT	./GL/glew.h	/^#define GL_RGBA16I_EXT /;"	d
GL_RGBA16UI	./GL/glew.h	/^#define GL_RGBA16UI /;"	d
GL_RGBA16UI_EXT	./GL/glew.h	/^#define GL_RGBA16UI_EXT /;"	d
GL_RGBA16_EXT	./GL/glew.h	/^#define GL_RGBA16_EXT /;"	d
GL_RGBA16_EXTENDED_RANGE_SGIX	./GL/glew.h	/^#define GL_RGBA16_EXTENDED_RANGE_SGIX /;"	d
GL_RGBA16_SIGNED_SGIX	./GL/glew.h	/^#define GL_RGBA16_SIGNED_SGIX /;"	d
GL_RGBA16_SNORM	./GL/glew.h	/^#define GL_RGBA16_SNORM /;"	d
GL_RGBA16_SNORM_EXT	./GL/glew.h	/^#define GL_RGBA16_SNORM_EXT /;"	d
GL_RGBA2	./GL/glew.h	/^#define GL_RGBA2 /;"	d
GL_RGBA2_EXT	./GL/glew.h	/^#define GL_RGBA2_EXT /;"	d
GL_RGBA32F	./GL/glew.h	/^#define GL_RGBA32F /;"	d
GL_RGBA32F_ARB	./GL/glew.h	/^#define GL_RGBA32F_ARB /;"	d
GL_RGBA32F_EXT	./GL/glew.h	/^#define GL_RGBA32F_EXT /;"	d
GL_RGBA32I	./GL/glew.h	/^#define GL_RGBA32I /;"	d
GL_RGBA32I_EXT	./GL/glew.h	/^#define GL_RGBA32I_EXT /;"	d
GL_RGBA32UI	./GL/glew.h	/^#define GL_RGBA32UI /;"	d
GL_RGBA32UI_EXT	./GL/glew.h	/^#define GL_RGBA32UI_EXT /;"	d
GL_RGBA4	./GL/glew.h	/^#define GL_RGBA4 /;"	d
GL_RGBA4_DXT5_S3TC	./GL/glew.h	/^#define GL_RGBA4_DXT5_S3TC /;"	d
GL_RGBA4_EXT	./GL/glew.h	/^#define GL_RGBA4_EXT /;"	d
GL_RGBA4_OES	./GL/glew.h	/^#define GL_RGBA4_OES /;"	d
GL_RGBA4_S3TC	./GL/glew.h	/^#define GL_RGBA4_S3TC /;"	d
GL_RGBA8	./GL/glew.h	/^#define GL_RGBA8 /;"	d
GL_RGBA8I	./GL/glew.h	/^#define GL_RGBA8I /;"	d
GL_RGBA8I_EXT	./GL/glew.h	/^#define GL_RGBA8I_EXT /;"	d
GL_RGBA8UI	./GL/glew.h	/^#define GL_RGBA8UI /;"	d
GL_RGBA8UI_EXT	./GL/glew.h	/^#define GL_RGBA8UI_EXT /;"	d
GL_RGBA8_EXT	./GL/glew.h	/^#define GL_RGBA8_EXT /;"	d
GL_RGBA8_OES	./GL/glew.h	/^#define GL_RGBA8_OES /;"	d
GL_RGBA8_SNORM	./GL/glew.h	/^#define GL_RGBA8_SNORM /;"	d
GL_RGBA_DXT5_S3TC	./GL/glew.h	/^#define GL_RGBA_DXT5_S3TC /;"	d
GL_RGBA_EXTENDED_RANGE_SGIX	./GL/glew.h	/^#define GL_RGBA_EXTENDED_RANGE_SGIX /;"	d
GL_RGBA_FLOAT16_APPLE	./GL/glew.h	/^#define GL_RGBA_FLOAT16_APPLE /;"	d
GL_RGBA_FLOAT16_ATI	./GL/glew.h	/^#define GL_RGBA_FLOAT16_ATI /;"	d
GL_RGBA_FLOAT32_APPLE	./GL/glew.h	/^#define GL_RGBA_FLOAT32_APPLE /;"	d
GL_RGBA_FLOAT32_ATI	./GL/glew.h	/^#define GL_RGBA_FLOAT32_ATI /;"	d
GL_RGBA_FLOAT_MODE_ARB	./GL/glew.h	/^#define GL_RGBA_FLOAT_MODE_ARB /;"	d
GL_RGBA_FLOAT_MODE_ATI	./GL/wglew.h	/^#define GL_RGBA_FLOAT_MODE_ATI /;"	d
GL_RGBA_ICC_SGIX	./GL/glew.h	/^#define GL_RGBA_ICC_SGIX /;"	d
GL_RGBA_INTEGER	./GL/glew.h	/^#define GL_RGBA_INTEGER /;"	d
GL_RGBA_INTEGER_EXT	./GL/glew.h	/^#define GL_RGBA_INTEGER_EXT /;"	d
GL_RGBA_INTEGER_MODE_EXT	./GL/glew.h	/^#define GL_RGBA_INTEGER_MODE_EXT /;"	d
GL_RGBA_MODE	./GL/glew.h	/^#define GL_RGBA_MODE /;"	d
GL_RGBA_S3TC	./GL/glew.h	/^#define GL_RGBA_S3TC /;"	d
GL_RGBA_SIGNED_COMPONENTS_EXT	./GL/glew.h	/^#define GL_RGBA_SIGNED_COMPONENTS_EXT /;"	d
GL_RGBA_SIGNED_SGIX	./GL/glew.h	/^#define GL_RGBA_SIGNED_SGIX /;"	d
GL_RGBA_SNORM	./GL/glew.h	/^#define GL_RGBA_SNORM /;"	d
GL_RGBA_UNSIGNED_DOT_PRODUCT_MAPPING_NV	./GL/glew.h	/^#define GL_RGBA_UNSIGNED_DOT_PRODUCT_MAPPING_NV /;"	d
GL_RGB_422_APPLE	./GL/glew.h	/^#define GL_RGB_422_APPLE /;"	d
GL_RGB_EXTENDED_RANGE_SGIX	./GL/glew.h	/^#define GL_RGB_EXTENDED_RANGE_SGIX /;"	d
GL_RGB_FLOAT16_APPLE	./GL/glew.h	/^#define GL_RGB_FLOAT16_APPLE /;"	d
GL_RGB_FLOAT16_ATI	./GL/glew.h	/^#define GL_RGB_FLOAT16_ATI /;"	d
GL_RGB_FLOAT32_APPLE	./GL/glew.h	/^#define GL_RGB_FLOAT32_APPLE /;"	d
GL_RGB_FLOAT32_ATI	./GL/glew.h	/^#define GL_RGB_FLOAT32_ATI /;"	d
GL_RGB_ICC_SGIX	./GL/glew.h	/^#define GL_RGB_ICC_SGIX /;"	d
GL_RGB_INTEGER	./GL/glew.h	/^#define GL_RGB_INTEGER /;"	d
GL_RGB_INTEGER_EXT	./GL/glew.h	/^#define GL_RGB_INTEGER_EXT /;"	d
GL_RGB_RAW_422_APPLE	./GL/glew.h	/^#define GL_RGB_RAW_422_APPLE /;"	d
GL_RGB_S3TC	./GL/glew.h	/^#define GL_RGB_S3TC /;"	d
GL_RGB_SCALE	./GL/glew.h	/^#define GL_RGB_SCALE /;"	d
GL_RGB_SCALE_ARB	./GL/glew.h	/^#define GL_RGB_SCALE_ARB /;"	d
GL_RGB_SCALE_EXT	./GL/glew.h	/^#define GL_RGB_SCALE_EXT /;"	d
GL_RGB_SIGNED_SGIX	./GL/glew.h	/^#define GL_RGB_SIGNED_SGIX /;"	d
GL_RGB_SNORM	./GL/glew.h	/^#define GL_RGB_SNORM /;"	d
GL_RG_EXT	./GL/glew.h	/^#define GL_RG_EXT /;"	d
GL_RG_INTEGER	./GL/glew.h	/^#define GL_RG_INTEGER /;"	d
GL_RG_SNORM	./GL/glew.h	/^#define GL_RG_SNORM /;"	d
GL_RIGHT	./GL/glew.h	/^#define GL_RIGHT /;"	d
GL_ROUNDED_RECT2_NV	./GL/glew.h	/^#define GL_ROUNDED_RECT2_NV /;"	d
GL_ROUNDED_RECT4_NV	./GL/glew.h	/^#define GL_ROUNDED_RECT4_NV /;"	d
GL_ROUNDED_RECT8_NV	./GL/glew.h	/^#define GL_ROUNDED_RECT8_NV /;"	d
GL_ROUNDED_RECT_NV	./GL/glew.h	/^#define GL_ROUNDED_RECT_NV /;"	d
GL_ROUND_NV	./GL/glew.h	/^#define GL_ROUND_NV /;"	d
GL_S	./GL/glew.h	/^#define GL_S /;"	d
GL_S3_s3tc	./GL/glew.h	/^#define GL_S3_s3tc /;"	d
GL_SAMPLER	./GL/glew.h	/^#define GL_SAMPLER /;"	d
GL_SAMPLER_1D	./GL/glew.h	/^#define GL_SAMPLER_1D /;"	d
GL_SAMPLER_1D_ARB	./GL/glew.h	/^#define GL_SAMPLER_1D_ARB /;"	d
GL_SAMPLER_1D_ARRAY	./GL/glew.h	/^#define GL_SAMPLER_1D_ARRAY /;"	d
GL_SAMPLER_1D_ARRAY_EXT	./GL/glew.h	/^#define GL_SAMPLER_1D_ARRAY_EXT /;"	d
GL_SAMPLER_1D_ARRAY_SHADOW	./GL/glew.h	/^#define GL_SAMPLER_1D_ARRAY_SHADOW /;"	d
GL_SAMPLER_1D_ARRAY_SHADOW_EXT	./GL/glew.h	/^#define GL_SAMPLER_1D_ARRAY_SHADOW_EXT /;"	d
GL_SAMPLER_1D_SHADOW	./GL/glew.h	/^#define GL_SAMPLER_1D_SHADOW /;"	d
GL_SAMPLER_1D_SHADOW_ARB	./GL/glew.h	/^#define GL_SAMPLER_1D_SHADOW_ARB /;"	d
GL_SAMPLER_2D	./GL/glew.h	/^#define GL_SAMPLER_2D /;"	d
GL_SAMPLER_2D_ARB	./GL/glew.h	/^#define GL_SAMPLER_2D_ARB /;"	d
GL_SAMPLER_2D_ARRAY	./GL/glew.h	/^#define GL_SAMPLER_2D_ARRAY /;"	d
GL_SAMPLER_2D_ARRAY_EXT	./GL/glew.h	/^#define GL_SAMPLER_2D_ARRAY_EXT /;"	d
GL_SAMPLER_2D_ARRAY_NV	./GL/glew.h	/^#define GL_SAMPLER_2D_ARRAY_NV /;"	d
GL_SAMPLER_2D_ARRAY_SHADOW	./GL/glew.h	/^#define GL_SAMPLER_2D_ARRAY_SHADOW /;"	d
GL_SAMPLER_2D_ARRAY_SHADOW_EXT	./GL/glew.h	/^#define GL_SAMPLER_2D_ARRAY_SHADOW_EXT /;"	d
GL_SAMPLER_2D_ARRAY_SHADOW_NV	./GL/glew.h	/^#define GL_SAMPLER_2D_ARRAY_SHADOW_NV /;"	d
GL_SAMPLER_2D_MULTISAMPLE	./GL/glew.h	/^#define GL_SAMPLER_2D_MULTISAMPLE /;"	d
GL_SAMPLER_2D_MULTISAMPLE_ARRAY	./GL/glew.h	/^#define GL_SAMPLER_2D_MULTISAMPLE_ARRAY /;"	d
GL_SAMPLER_2D_MULTISAMPLE_ARRAY_OES	./GL/glew.h	/^#define GL_SAMPLER_2D_MULTISAMPLE_ARRAY_OES /;"	d
GL_SAMPLER_2D_RECT	./GL/glew.h	/^#define GL_SAMPLER_2D_RECT /;"	d
GL_SAMPLER_2D_RECT_ARB	./GL/glew.h	/^#define GL_SAMPLER_2D_RECT_ARB /;"	d
GL_SAMPLER_2D_RECT_SHADOW	./GL/glew.h	/^#define GL_SAMPLER_2D_RECT_SHADOW /;"	d
GL_SAMPLER_2D_RECT_SHADOW_ARB	./GL/glew.h	/^#define GL_SAMPLER_2D_RECT_SHADOW_ARB /;"	d
GL_SAMPLER_2D_SHADOW	./GL/glew.h	/^#define GL_SAMPLER_2D_SHADOW /;"	d
GL_SAMPLER_2D_SHADOW_ARB	./GL/glew.h	/^#define GL_SAMPLER_2D_SHADOW_ARB /;"	d
GL_SAMPLER_2D_SHADOW_EXT	./GL/glew.h	/^#define GL_SAMPLER_2D_SHADOW_EXT /;"	d
GL_SAMPLER_3D	./GL/glew.h	/^#define GL_SAMPLER_3D /;"	d
GL_SAMPLER_3D_ARB	./GL/glew.h	/^#define GL_SAMPLER_3D_ARB /;"	d
GL_SAMPLER_BINDING	./GL/glew.h	/^#define GL_SAMPLER_BINDING /;"	d
GL_SAMPLER_BUFFER	./GL/glew.h	/^#define GL_SAMPLER_BUFFER /;"	d
GL_SAMPLER_BUFFER_AMD	./GL/glew.h	/^#define GL_SAMPLER_BUFFER_AMD /;"	d
GL_SAMPLER_BUFFER_EXT	./GL/glew.h	/^#define GL_SAMPLER_BUFFER_EXT /;"	d
GL_SAMPLER_BUFFER_OES	./GL/glew.h	/^#define GL_SAMPLER_BUFFER_OES /;"	d
GL_SAMPLER_CUBE	./GL/glew.h	/^#define GL_SAMPLER_CUBE /;"	d
GL_SAMPLER_CUBE_ARB	./GL/glew.h	/^#define GL_SAMPLER_CUBE_ARB /;"	d
GL_SAMPLER_CUBE_MAP_ARRAY	./GL/glew.h	/^#define GL_SAMPLER_CUBE_MAP_ARRAY /;"	d
GL_SAMPLER_CUBE_MAP_ARRAY_ARB	./GL/glew.h	/^#define GL_SAMPLER_CUBE_MAP_ARRAY_ARB /;"	d
GL_SAMPLER_CUBE_MAP_ARRAY_EXT	./GL/glew.h	/^#define GL_SAMPLER_CUBE_MAP_ARRAY_EXT /;"	d
GL_SAMPLER_CUBE_MAP_ARRAY_OES	./GL/glew.h	/^#define GL_SAMPLER_CUBE_MAP_ARRAY_OES /;"	d
GL_SAMPLER_CUBE_MAP_ARRAY_SHADOW	./GL/glew.h	/^#define GL_SAMPLER_CUBE_MAP_ARRAY_SHADOW /;"	d
GL_SAMPLER_CUBE_MAP_ARRAY_SHADOW_ARB	./GL/glew.h	/^#define GL_SAMPLER_CUBE_MAP_ARRAY_SHADOW_ARB /;"	d
GL_SAMPLER_CUBE_MAP_ARRAY_SHADOW_EXT	./GL/glew.h	/^#define GL_SAMPLER_CUBE_MAP_ARRAY_SHADOW_EXT /;"	d
GL_SAMPLER_CUBE_MAP_ARRAY_SHADOW_OES	./GL/glew.h	/^#define GL_SAMPLER_CUBE_MAP_ARRAY_SHADOW_OES /;"	d
GL_SAMPLER_CUBE_SHADOW	./GL/glew.h	/^#define GL_SAMPLER_CUBE_SHADOW /;"	d
GL_SAMPLER_CUBE_SHADOW_EXT	./GL/glew.h	/^#define GL_SAMPLER_CUBE_SHADOW_EXT /;"	d
GL_SAMPLER_CUBE_SHADOW_NV	./GL/glew.h	/^#define GL_SAMPLER_CUBE_SHADOW_NV /;"	d
GL_SAMPLER_EXTERNAL_2D_Y2Y_EXT	./GL/glew.h	/^#define GL_SAMPLER_EXTERNAL_2D_Y2Y_EXT /;"	d
GL_SAMPLER_EXTERNAL_OES	./GL/glew.h	/^#define GL_SAMPLER_EXTERNAL_OES /;"	d
GL_SAMPLER_OBJECT_AMD	./GL/glew.h	/^#define GL_SAMPLER_OBJECT_AMD /;"	d
GL_SAMPLER_RENDERBUFFER_NV	./GL/glew.h	/^#define GL_SAMPLER_RENDERBUFFER_NV /;"	d
GL_SAMPLES	./GL/glew.h	/^#define GL_SAMPLES /;"	d
GL_SAMPLES_3DFX	./GL/glew.h	/^#define GL_SAMPLES_3DFX /;"	d
GL_SAMPLES_ARB	./GL/glew.h	/^#define GL_SAMPLES_ARB /;"	d
GL_SAMPLES_EXT	./GL/glew.h	/^#define GL_SAMPLES_EXT /;"	d
GL_SAMPLES_PASSED	./GL/glew.h	/^#define GL_SAMPLES_PASSED /;"	d
GL_SAMPLES_PASSED_ARB	./GL/glew.h	/^#define GL_SAMPLES_PASSED_ARB /;"	d
GL_SAMPLES_SGIS	./GL/glew.h	/^#define GL_SAMPLES_SGIS /;"	d
GL_SAMPLE_ALPHA_TO_COVERAGE	./GL/glew.h	/^#define GL_SAMPLE_ALPHA_TO_COVERAGE /;"	d
GL_SAMPLE_ALPHA_TO_COVERAGE_ARB	./GL/glew.h	/^#define GL_SAMPLE_ALPHA_TO_COVERAGE_ARB /;"	d
GL_SAMPLE_ALPHA_TO_MASK_EXT	./GL/glew.h	/^#define GL_SAMPLE_ALPHA_TO_MASK_EXT /;"	d
GL_SAMPLE_ALPHA_TO_MASK_SGIS	./GL/glew.h	/^#define GL_SAMPLE_ALPHA_TO_MASK_SGIS /;"	d
GL_SAMPLE_ALPHA_TO_ONE	./GL/glew.h	/^#define GL_SAMPLE_ALPHA_TO_ONE /;"	d
GL_SAMPLE_ALPHA_TO_ONE_ARB	./GL/glew.h	/^#define GL_SAMPLE_ALPHA_TO_ONE_ARB /;"	d
GL_SAMPLE_ALPHA_TO_ONE_EXT	./GL/glew.h	/^#define GL_SAMPLE_ALPHA_TO_ONE_EXT /;"	d
GL_SAMPLE_ALPHA_TO_ONE_SGIS	./GL/glew.h	/^#define GL_SAMPLE_ALPHA_TO_ONE_SGIS /;"	d
GL_SAMPLE_BUFFERS	./GL/glew.h	/^#define GL_SAMPLE_BUFFERS /;"	d
GL_SAMPLE_BUFFERS_3DFX	./GL/glew.h	/^#define GL_SAMPLE_BUFFERS_3DFX /;"	d
GL_SAMPLE_BUFFERS_ARB	./GL/glew.h	/^#define GL_SAMPLE_BUFFERS_ARB /;"	d
GL_SAMPLE_BUFFERS_EXT	./GL/glew.h	/^#define GL_SAMPLE_BUFFERS_EXT /;"	d
GL_SAMPLE_BUFFERS_SGIS	./GL/glew.h	/^#define GL_SAMPLE_BUFFERS_SGIS /;"	d
GL_SAMPLE_COUNT_BITS_NV	./GL/glew.h	/^#define GL_SAMPLE_COUNT_BITS_NV /;"	d
GL_SAMPLE_COUNT_NV	./GL/glew.h	/^#define GL_SAMPLE_COUNT_NV /;"	d
GL_SAMPLE_COVERAGE	./GL/glew.h	/^#define GL_SAMPLE_COVERAGE /;"	d
GL_SAMPLE_COVERAGE_ARB	./GL/glew.h	/^#define GL_SAMPLE_COVERAGE_ARB /;"	d
GL_SAMPLE_COVERAGE_INVERT	./GL/glew.h	/^#define GL_SAMPLE_COVERAGE_INVERT /;"	d
GL_SAMPLE_COVERAGE_INVERT_ARB	./GL/glew.h	/^#define GL_SAMPLE_COVERAGE_INVERT_ARB /;"	d
GL_SAMPLE_COVERAGE_VALUE	./GL/glew.h	/^#define GL_SAMPLE_COVERAGE_VALUE /;"	d
GL_SAMPLE_COVERAGE_VALUE_ARB	./GL/glew.h	/^#define GL_SAMPLE_COVERAGE_VALUE_ARB /;"	d
GL_SAMPLE_LOCATION_ARB	./GL/glew.h	/^#define GL_SAMPLE_LOCATION_ARB /;"	d
GL_SAMPLE_LOCATION_NV	./GL/glew.h	/^#define GL_SAMPLE_LOCATION_NV /;"	d
GL_SAMPLE_LOCATION_PIXEL_GRID_HEIGHT_ARB	./GL/glew.h	/^#define GL_SAMPLE_LOCATION_PIXEL_GRID_HEIGHT_ARB /;"	d
GL_SAMPLE_LOCATION_PIXEL_GRID_HEIGHT_NV	./GL/glew.h	/^#define GL_SAMPLE_LOCATION_PIXEL_GRID_HEIGHT_NV /;"	d
GL_SAMPLE_LOCATION_PIXEL_GRID_WIDTH_ARB	./GL/glew.h	/^#define GL_SAMPLE_LOCATION_PIXEL_GRID_WIDTH_ARB /;"	d
GL_SAMPLE_LOCATION_PIXEL_GRID_WIDTH_NV	./GL/glew.h	/^#define GL_SAMPLE_LOCATION_PIXEL_GRID_WIDTH_NV /;"	d
GL_SAMPLE_LOCATION_SUBPIXEL_BITS_ARB	./GL/glew.h	/^#define GL_SAMPLE_LOCATION_SUBPIXEL_BITS_ARB /;"	d
GL_SAMPLE_LOCATION_SUBPIXEL_BITS_NV	./GL/glew.h	/^#define GL_SAMPLE_LOCATION_SUBPIXEL_BITS_NV /;"	d
GL_SAMPLE_MASK	./GL/glew.h	/^#define GL_SAMPLE_MASK /;"	d
GL_SAMPLE_MASK_EXT	./GL/glew.h	/^#define GL_SAMPLE_MASK_EXT /;"	d
GL_SAMPLE_MASK_INVERT_EXT	./GL/glew.h	/^#define GL_SAMPLE_MASK_INVERT_EXT /;"	d
GL_SAMPLE_MASK_INVERT_SGIS	./GL/glew.h	/^#define GL_SAMPLE_MASK_INVERT_SGIS /;"	d
GL_SAMPLE_MASK_NV	./GL/glew.h	/^#define GL_SAMPLE_MASK_NV /;"	d
GL_SAMPLE_MASK_SGIS	./GL/glew.h	/^#define GL_SAMPLE_MASK_SGIS /;"	d
GL_SAMPLE_MASK_VALUE	./GL/glew.h	/^#define GL_SAMPLE_MASK_VALUE /;"	d
GL_SAMPLE_MASK_VALUE_EXT	./GL/glew.h	/^#define GL_SAMPLE_MASK_VALUE_EXT /;"	d
GL_SAMPLE_MASK_VALUE_NV	./GL/glew.h	/^#define GL_SAMPLE_MASK_VALUE_NV /;"	d
GL_SAMPLE_MASK_VALUE_SGIS	./GL/glew.h	/^#define GL_SAMPLE_MASK_VALUE_SGIS /;"	d
GL_SAMPLE_PATTERN_EXT	./GL/glew.h	/^#define GL_SAMPLE_PATTERN_EXT /;"	d
GL_SAMPLE_PATTERN_SGIS	./GL/glew.h	/^#define GL_SAMPLE_PATTERN_SGIS /;"	d
GL_SAMPLE_POSITION	./GL/glew.h	/^#define GL_SAMPLE_POSITION /;"	d
GL_SAMPLE_POSITION_NV	./GL/glew.h	/^#define GL_SAMPLE_POSITION_NV /;"	d
GL_SAMPLE_SHADING	./GL/glew.h	/^#define GL_SAMPLE_SHADING /;"	d
GL_SAMPLE_SHADING_ARB	./GL/glew.h	/^#define GL_SAMPLE_SHADING_ARB /;"	d
GL_SAMPLE_SHADING_OES	./GL/glew.h	/^#define GL_SAMPLE_SHADING_OES /;"	d
GL_SATURATE_BIT_ATI	./GL/glew.h	/^#define GL_SATURATE_BIT_ATI /;"	d
GL_SCALAR_EXT	./GL/glew.h	/^#define GL_SCALAR_EXT /;"	d
GL_SCALEBIAS_HINT_SGIX	./GL/glew.h	/^#define GL_SCALEBIAS_HINT_SGIX /;"	d
GL_SCALED_RESOLVE_FASTEST_EXT	./GL/glew.h	/^#define GL_SCALED_RESOLVE_FASTEST_EXT /;"	d
GL_SCALED_RESOLVE_NICEST_EXT	./GL/glew.h	/^#define GL_SCALED_RESOLVE_NICEST_EXT /;"	d
GL_SCALE_BY_FOUR_NV	./GL/glew.h	/^#define GL_SCALE_BY_FOUR_NV /;"	d
GL_SCALE_BY_ONE_HALF_NV	./GL/glew.h	/^#define GL_SCALE_BY_ONE_HALF_NV /;"	d
GL_SCALE_BY_TWO_NV	./GL/glew.h	/^#define GL_SCALE_BY_TWO_NV /;"	d
GL_SCISSOR_BIT	./GL/glew.h	/^#define GL_SCISSOR_BIT /;"	d
GL_SCISSOR_BOX	./GL/glew.h	/^#define GL_SCISSOR_BOX /;"	d
GL_SCISSOR_BOX_EXCLUSIVE_NV	./GL/glew.h	/^#define GL_SCISSOR_BOX_EXCLUSIVE_NV /;"	d
GL_SCISSOR_COMMAND_NV	./GL/glew.h	/^#define GL_SCISSOR_COMMAND_NV /;"	d
GL_SCISSOR_TEST	./GL/glew.h	/^#define GL_SCISSOR_TEST /;"	d
GL_SCISSOR_TEST_EXCLUSIVE_NV	./GL/glew.h	/^#define GL_SCISSOR_TEST_EXCLUSIVE_NV /;"	d
GL_SCREEN_COORDINATES_REND	./GL/glew.h	/^#define GL_SCREEN_COORDINATES_REND /;"	d
GL_SCREEN_KHR	./GL/glew.h	/^#define GL_SCREEN_KHR /;"	d
GL_SCREEN_NV	./GL/glew.h	/^#define GL_SCREEN_NV /;"	d
GL_SECONDARY_COLOR_ARRAY	./GL/glew.h	/^#define GL_SECONDARY_COLOR_ARRAY /;"	d
GL_SECONDARY_COLOR_ARRAY_ADDRESS_NV	./GL/glew.h	/^#define GL_SECONDARY_COLOR_ARRAY_ADDRESS_NV /;"	d
GL_SECONDARY_COLOR_ARRAY_BUFFER_BINDING	./GL/glew.h	/^#define GL_SECONDARY_COLOR_ARRAY_BUFFER_BINDING /;"	d
GL_SECONDARY_COLOR_ARRAY_BUFFER_BINDING_ARB	./GL/glew.h	/^#define GL_SECONDARY_COLOR_ARRAY_BUFFER_BINDING_ARB /;"	d
GL_SECONDARY_COLOR_ARRAY_EXT	./GL/glew.h	/^#define GL_SECONDARY_COLOR_ARRAY_EXT /;"	d
GL_SECONDARY_COLOR_ARRAY_LENGTH_NV	./GL/glew.h	/^#define GL_SECONDARY_COLOR_ARRAY_LENGTH_NV /;"	d
GL_SECONDARY_COLOR_ARRAY_LIST_IBM	./GL/glew.h	/^#define GL_SECONDARY_COLOR_ARRAY_LIST_IBM /;"	d
GL_SECONDARY_COLOR_ARRAY_LIST_STRIDE_IBM	./GL/glew.h	/^#define GL_SECONDARY_COLOR_ARRAY_LIST_STRIDE_IBM /;"	d
GL_SECONDARY_COLOR_ARRAY_POINTER	./GL/glew.h	/^#define GL_SECONDARY_COLOR_ARRAY_POINTER /;"	d
GL_SECONDARY_COLOR_ARRAY_POINTER_EXT	./GL/glew.h	/^#define GL_SECONDARY_COLOR_ARRAY_POINTER_EXT /;"	d
GL_SECONDARY_COLOR_ARRAY_SIZE	./GL/glew.h	/^#define GL_SECONDARY_COLOR_ARRAY_SIZE /;"	d
GL_SECONDARY_COLOR_ARRAY_SIZE_EXT	./GL/glew.h	/^#define GL_SECONDARY_COLOR_ARRAY_SIZE_EXT /;"	d
GL_SECONDARY_COLOR_ARRAY_STRIDE	./GL/glew.h	/^#define GL_SECONDARY_COLOR_ARRAY_STRIDE /;"	d
GL_SECONDARY_COLOR_ARRAY_STRIDE_EXT	./GL/glew.h	/^#define GL_SECONDARY_COLOR_ARRAY_STRIDE_EXT /;"	d
GL_SECONDARY_COLOR_ARRAY_TYPE	./GL/glew.h	/^#define GL_SECONDARY_COLOR_ARRAY_TYPE /;"	d
GL_SECONDARY_COLOR_ARRAY_TYPE_EXT	./GL/glew.h	/^#define GL_SECONDARY_COLOR_ARRAY_TYPE_EXT /;"	d
GL_SECONDARY_COLOR_ATIX	./GL/glew.h	/^#define GL_SECONDARY_COLOR_ATIX /;"	d
GL_SECONDARY_COLOR_NV	./GL/glew.h	/^#define GL_SECONDARY_COLOR_NV /;"	d
GL_SECONDARY_INTERPOLATOR_ATI	./GL/glew.h	/^#define GL_SECONDARY_INTERPOLATOR_ATI /;"	d
GL_SELECT	./GL/glew.h	/^#define GL_SELECT /;"	d
GL_SELECTED_TEXTURE_COORD_SET_SGIS	./GL/glew.h	/^#define GL_SELECTED_TEXTURE_COORD_SET_SGIS /;"	d
GL_SELECTED_TEXTURE_SGIS	./GL/glew.h	/^#define GL_SELECTED_TEXTURE_SGIS /;"	d
GL_SELECTED_TEXTURE_TRANSFORM_SGIS	./GL/glew.h	/^#define GL_SELECTED_TEXTURE_TRANSFORM_SGIS /;"	d
GL_SELECTION_BUFFER_POINTER	./GL/glew.h	/^#define GL_SELECTION_BUFFER_POINTER /;"	d
GL_SELECTION_BUFFER_SIZE	./GL/glew.h	/^#define GL_SELECTION_BUFFER_SIZE /;"	d
GL_SEPARABLE_2D	./GL/glew.h	/^#define GL_SEPARABLE_2D /;"	d
GL_SEPARABLE_2D_EXT	./GL/glew.h	/^#define GL_SEPARABLE_2D_EXT /;"	d
GL_SEPARATE_ATTRIBS	./GL/glew.h	/^#define GL_SEPARATE_ATTRIBS /;"	d
GL_SEPARATE_ATTRIBS_EXT	./GL/glew.h	/^#define GL_SEPARATE_ATTRIBS_EXT /;"	d
GL_SEPARATE_ATTRIBS_NV	./GL/glew.h	/^#define GL_SEPARATE_ATTRIBS_NV /;"	d
GL_SEPARATE_SPECULAR_COLOR	./GL/glew.h	/^#define GL_SEPARATE_SPECULAR_COLOR /;"	d
GL_SEPARATE_SPECULAR_COLOR_EXT	./GL/glew.h	/^#define GL_SEPARATE_SPECULAR_COLOR_EXT /;"	d
GL_SET	./GL/glew.h	/^#define GL_SET /;"	d
GL_SET_AMD	./GL/glew.h	/^#define GL_SET_AMD /;"	d
GL_SGIS_clip_band_hint	./GL/glew.h	/^#define GL_SGIS_clip_band_hint /;"	d
GL_SGIS_color_range	./GL/glew.h	/^#define GL_SGIS_color_range /;"	d
GL_SGIS_detail_texture	./GL/glew.h	/^#define GL_SGIS_detail_texture /;"	d
GL_SGIS_fog_function	./GL/glew.h	/^#define GL_SGIS_fog_function /;"	d
GL_SGIS_generate_mipmap	./GL/glew.h	/^#define GL_SGIS_generate_mipmap /;"	d
GL_SGIS_line_texgen	./GL/glew.h	/^#define GL_SGIS_line_texgen /;"	d
GL_SGIS_multisample	./GL/glew.h	/^#define GL_SGIS_multisample /;"	d
GL_SGIS_multitexture	./GL/glew.h	/^#define GL_SGIS_multitexture /;"	d
GL_SGIS_pixel_texture	./GL/glew.h	/^#define GL_SGIS_pixel_texture /;"	d
GL_SGIS_point_line_texgen	./GL/glew.h	/^#define GL_SGIS_point_line_texgen /;"	d
GL_SGIS_shared_multisample	./GL/glew.h	/^#define GL_SGIS_shared_multisample /;"	d
GL_SGIS_sharpen_texture	./GL/glew.h	/^#define GL_SGIS_sharpen_texture /;"	d
GL_SGIS_texture4D	./GL/glew.h	/^#define GL_SGIS_texture4D /;"	d
GL_SGIS_texture_border_clamp	./GL/glew.h	/^#define GL_SGIS_texture_border_clamp /;"	d
GL_SGIS_texture_edge_clamp	./GL/glew.h	/^#define GL_SGIS_texture_edge_clamp /;"	d
GL_SGIS_texture_filter4	./GL/glew.h	/^#define GL_SGIS_texture_filter4 /;"	d
GL_SGIS_texture_lod	./GL/glew.h	/^#define GL_SGIS_texture_lod /;"	d
GL_SGIS_texture_select	./GL/glew.h	/^#define GL_SGIS_texture_select /;"	d
GL_SGIX_async	./GL/glew.h	/^#define GL_SGIX_async /;"	d
GL_SGIX_async_histogram	./GL/glew.h	/^#define GL_SGIX_async_histogram /;"	d
GL_SGIX_async_pixel	./GL/glew.h	/^#define GL_SGIX_async_pixel /;"	d
GL_SGIX_bali_g_instruments	./GL/glew.h	/^#define GL_SGIX_bali_g_instruments /;"	d
GL_SGIX_bali_r_instruments	./GL/glew.h	/^#define GL_SGIX_bali_r_instruments /;"	d
GL_SGIX_bali_timer_instruments	./GL/glew.h	/^#define GL_SGIX_bali_timer_instruments /;"	d
GL_SGIX_blend_alpha_minmax	./GL/glew.h	/^#define GL_SGIX_blend_alpha_minmax /;"	d
GL_SGIX_blend_cadd	./GL/glew.h	/^#define GL_SGIX_blend_cadd /;"	d
GL_SGIX_blend_cmultiply	./GL/glew.h	/^#define GL_SGIX_blend_cmultiply /;"	d
GL_SGIX_calligraphic_fragment	./GL/glew.h	/^#define GL_SGIX_calligraphic_fragment /;"	d
GL_SGIX_clipmap	./GL/glew.h	/^#define GL_SGIX_clipmap /;"	d
GL_SGIX_color_matrix_accuracy	./GL/glew.h	/^#define GL_SGIX_color_matrix_accuracy /;"	d
GL_SGIX_color_table_index_mode	./GL/glew.h	/^#define GL_SGIX_color_table_index_mode /;"	d
GL_SGIX_complex_polar	./GL/glew.h	/^#define GL_SGIX_complex_polar /;"	d
GL_SGIX_convolution_accuracy	./GL/glew.h	/^#define GL_SGIX_convolution_accuracy /;"	d
GL_SGIX_cube_map	./GL/glew.h	/^#define GL_SGIX_cube_map /;"	d
GL_SGIX_cylinder_texgen	./GL/glew.h	/^#define GL_SGIX_cylinder_texgen /;"	d
GL_SGIX_datapipe	./GL/glew.h	/^#define GL_SGIX_datapipe /;"	d
GL_SGIX_decimation	./GL/glew.h	/^#define GL_SGIX_decimation /;"	d
GL_SGIX_depth_pass_instrument	./GL/glew.h	/^#define GL_SGIX_depth_pass_instrument /;"	d
GL_SGIX_depth_texture	./GL/glew.h	/^#define GL_SGIX_depth_texture /;"	d
GL_SGIX_dvc	./GL/glew.h	/^#define GL_SGIX_dvc /;"	d
GL_SGIX_flush_raster	./GL/glew.h	/^#define GL_SGIX_flush_raster /;"	d
GL_SGIX_fog_blend	./GL/glew.h	/^#define GL_SGIX_fog_blend /;"	d
GL_SGIX_fog_factor_to_alpha	./GL/glew.h	/^#define GL_SGIX_fog_factor_to_alpha /;"	d
GL_SGIX_fog_layers	./GL/glew.h	/^#define GL_SGIX_fog_layers /;"	d
GL_SGIX_fog_offset	./GL/glew.h	/^#define GL_SGIX_fog_offset /;"	d
GL_SGIX_fog_patchy	./GL/glew.h	/^#define GL_SGIX_fog_patchy /;"	d
GL_SGIX_fog_scale	./GL/glew.h	/^#define GL_SGIX_fog_scale /;"	d
GL_SGIX_fog_texture	./GL/glew.h	/^#define GL_SGIX_fog_texture /;"	d
GL_SGIX_fragment_lighting_space	./GL/glew.h	/^#define GL_SGIX_fragment_lighting_space /;"	d
GL_SGIX_fragment_specular_lighting	./GL/glew.h	/^#define GL_SGIX_fragment_specular_lighting /;"	d
GL_SGIX_fragments_instrument	./GL/glew.h	/^#define GL_SGIX_fragments_instrument /;"	d
GL_SGIX_framezoom	./GL/glew.h	/^#define GL_SGIX_framezoom /;"	d
GL_SGIX_icc_texture	./GL/glew.h	/^#define GL_SGIX_icc_texture /;"	d
GL_SGIX_igloo_interface	./GL/glew.h	/^#define GL_SGIX_igloo_interface /;"	d
GL_SGIX_image_compression	./GL/glew.h	/^#define GL_SGIX_image_compression /;"	d
GL_SGIX_impact_pixel_texture	./GL/glew.h	/^#define GL_SGIX_impact_pixel_texture /;"	d
GL_SGIX_instrument_error	./GL/glew.h	/^#define GL_SGIX_instrument_error /;"	d
GL_SGIX_interlace	./GL/glew.h	/^#define GL_SGIX_interlace /;"	d
GL_SGIX_ir_instrument1	./GL/glew.h	/^#define GL_SGIX_ir_instrument1 /;"	d
GL_SGIX_line_quality_hint	./GL/glew.h	/^#define GL_SGIX_line_quality_hint /;"	d
GL_SGIX_list_priority	./GL/glew.h	/^#define GL_SGIX_list_priority /;"	d
GL_SGIX_mpeg1	./GL/glew.h	/^#define GL_SGIX_mpeg1 /;"	d
GL_SGIX_mpeg2	./GL/glew.h	/^#define GL_SGIX_mpeg2 /;"	d
GL_SGIX_nonlinear_lighting_pervertex	./GL/glew.h	/^#define GL_SGIX_nonlinear_lighting_pervertex /;"	d
GL_SGIX_nurbs_eval	./GL/glew.h	/^#define GL_SGIX_nurbs_eval /;"	d
GL_SGIX_occlusion_instrument	./GL/glew.h	/^#define GL_SGIX_occlusion_instrument /;"	d
GL_SGIX_packed_6bytes	./GL/glew.h	/^#define GL_SGIX_packed_6bytes /;"	d
GL_SGIX_pixel_texture	./GL/glew.h	/^#define GL_SGIX_pixel_texture /;"	d
GL_SGIX_pixel_texture_bits	./GL/glew.h	/^#define GL_SGIX_pixel_texture_bits /;"	d
GL_SGIX_pixel_texture_lod	./GL/glew.h	/^#define GL_SGIX_pixel_texture_lod /;"	d
GL_SGIX_pixel_tiles	./GL/glew.h	/^#define GL_SGIX_pixel_tiles /;"	d
GL_SGIX_polynomial_ffd	./GL/glew.h	/^#define GL_SGIX_polynomial_ffd /;"	d
GL_SGIX_quad_mesh	./GL/glew.h	/^#define GL_SGIX_quad_mesh /;"	d
GL_SGIX_reference_plane	./GL/glew.h	/^#define GL_SGIX_reference_plane /;"	d
GL_SGIX_resample	./GL/glew.h	/^#define GL_SGIX_resample /;"	d
GL_SGIX_scalebias_hint	./GL/glew.h	/^#define GL_SGIX_scalebias_hint /;"	d
GL_SGIX_shadow	./GL/glew.h	/^#define GL_SGIX_shadow /;"	d
GL_SGIX_shadow_ambient	./GL/glew.h	/^#define GL_SGIX_shadow_ambient /;"	d
GL_SGIX_slim	./GL/glew.h	/^#define GL_SGIX_slim /;"	d
GL_SGIX_spotlight_cutoff	./GL/glew.h	/^#define GL_SGIX_spotlight_cutoff /;"	d
GL_SGIX_sprite	./GL/glew.h	/^#define GL_SGIX_sprite /;"	d
GL_SGIX_subdiv_patch	./GL/glew.h	/^#define GL_SGIX_subdiv_patch /;"	d
GL_SGIX_subsample	./GL/glew.h	/^#define GL_SGIX_subsample /;"	d
GL_SGIX_tag_sample_buffer	./GL/glew.h	/^#define GL_SGIX_tag_sample_buffer /;"	d
GL_SGIX_texture_add_env	./GL/glew.h	/^#define GL_SGIX_texture_add_env /;"	d
GL_SGIX_texture_coordinate_clamp	./GL/glew.h	/^#define GL_SGIX_texture_coordinate_clamp /;"	d
GL_SGIX_texture_lod_bias	./GL/glew.h	/^#define GL_SGIX_texture_lod_bias /;"	d
GL_SGIX_texture_mipmap_anisotropic	./GL/glew.h	/^#define GL_SGIX_texture_mipmap_anisotropic /;"	d
GL_SGIX_texture_multi_buffer	./GL/glew.h	/^#define GL_SGIX_texture_multi_buffer /;"	d
GL_SGIX_texture_phase	./GL/glew.h	/^#define GL_SGIX_texture_phase /;"	d
GL_SGIX_texture_range	./GL/glew.h	/^#define GL_SGIX_texture_range /;"	d
GL_SGIX_texture_scale_bias	./GL/glew.h	/^#define GL_SGIX_texture_scale_bias /;"	d
GL_SGIX_texture_supersample	./GL/glew.h	/^#define GL_SGIX_texture_supersample /;"	d
GL_SGIX_vector_ops	./GL/glew.h	/^#define GL_SGIX_vector_ops /;"	d
GL_SGIX_vertex_array_object	./GL/glew.h	/^#define GL_SGIX_vertex_array_object /;"	d
GL_SGIX_vertex_preclip	./GL/glew.h	/^#define GL_SGIX_vertex_preclip /;"	d
GL_SGIX_vertex_preclip_hint	./GL/glew.h	/^#define GL_SGIX_vertex_preclip_hint /;"	d
GL_SGIX_ycrcb	./GL/glew.h	/^#define GL_SGIX_ycrcb /;"	d
GL_SGIX_ycrcb_subsample	./GL/glew.h	/^#define GL_SGIX_ycrcb_subsample /;"	d
GL_SGIX_ycrcba	./GL/glew.h	/^#define GL_SGIX_ycrcba /;"	d
GL_SGI_color_matrix	./GL/glew.h	/^#define GL_SGI_color_matrix /;"	d
GL_SGI_color_table	./GL/glew.h	/^#define GL_SGI_color_table /;"	d
GL_SGI_complex	./GL/glew.h	/^#define GL_SGI_complex /;"	d
GL_SGI_complex_type	./GL/glew.h	/^#define GL_SGI_complex_type /;"	d
GL_SGI_fft	./GL/glew.h	/^#define GL_SGI_fft /;"	d
GL_SGI_texture_color_table	./GL/glew.h	/^#define GL_SGI_texture_color_table /;"	d
GL_SGX_BINARY_IMG	./GL/glew.h	/^#define GL_SGX_BINARY_IMG /;"	d
GL_SGX_PROGRAM_BINARY_IMG	./GL/glew.h	/^#define GL_SGX_PROGRAM_BINARY_IMG /;"	d
GL_SHADER	./GL/glew.h	/^#define GL_SHADER /;"	d
GL_SHADER_BINARY_DMP	./GL/glew.h	/^#define GL_SHADER_BINARY_DMP /;"	d
GL_SHADER_BINARY_FORMATS	./GL/glew.h	/^#define GL_SHADER_BINARY_FORMATS /;"	d
GL_SHADER_BINARY_FORMAT_SPIR_V	./GL/glew.h	/^#define GL_SHADER_BINARY_FORMAT_SPIR_V /;"	d
GL_SHADER_BINARY_FORMAT_SPIR_V_ARB	./GL/glew.h	/^#define GL_SHADER_BINARY_FORMAT_SPIR_V_ARB /;"	d
GL_SHADER_BINARY_VIV	./GL/glew.h	/^#define GL_SHADER_BINARY_VIV /;"	d
GL_SHADER_COMPILER	./GL/glew.h	/^#define GL_SHADER_COMPILER /;"	d
GL_SHADER_CONSISTENT_NV	./GL/glew.h	/^#define GL_SHADER_CONSISTENT_NV /;"	d
GL_SHADER_IMAGE_ACCESS_BARRIER_BIT	./GL/glew.h	/^#define GL_SHADER_IMAGE_ACCESS_BARRIER_BIT /;"	d
GL_SHADER_IMAGE_ACCESS_BARRIER_BIT_EXT	./GL/glew.h	/^#define GL_SHADER_IMAGE_ACCESS_BARRIER_BIT_EXT /;"	d
GL_SHADER_IMAGE_ATOMIC	./GL/glew.h	/^#define GL_SHADER_IMAGE_ATOMIC /;"	d
GL_SHADER_IMAGE_LOAD	./GL/glew.h	/^#define GL_SHADER_IMAGE_LOAD /;"	d
GL_SHADER_IMAGE_STORE	./GL/glew.h	/^#define GL_SHADER_IMAGE_STORE /;"	d
GL_SHADER_INCLUDE_ARB	./GL/glew.h	/^#define GL_SHADER_INCLUDE_ARB /;"	d
GL_SHADER_OBJECT_ARB	./GL/glew.h	/^#define GL_SHADER_OBJECT_ARB /;"	d
GL_SHADER_OBJECT_EXT	./GL/glew.h	/^#define GL_SHADER_OBJECT_EXT /;"	d
GL_SHADER_OPERATION_NV	./GL/glew.h	/^#define GL_SHADER_OPERATION_NV /;"	d
GL_SHADER_PIXEL_LOCAL_STORAGE_EXT	./GL/glew.h	/^#define GL_SHADER_PIXEL_LOCAL_STORAGE_EXT /;"	d
GL_SHADER_SOURCE_LENGTH	./GL/glew.h	/^#define GL_SHADER_SOURCE_LENGTH /;"	d
GL_SHADER_STORAGE_BARRIER_BIT	./GL/glew.h	/^#define GL_SHADER_STORAGE_BARRIER_BIT /;"	d
GL_SHADER_STORAGE_BLOCK	./GL/glew.h	/^#define GL_SHADER_STORAGE_BLOCK /;"	d
GL_SHADER_STORAGE_BUFFER	./GL/glew.h	/^#define GL_SHADER_STORAGE_BUFFER /;"	d
GL_SHADER_STORAGE_BUFFER_BINDING	./GL/glew.h	/^#define GL_SHADER_STORAGE_BUFFER_BINDING /;"	d
GL_SHADER_STORAGE_BUFFER_OFFSET_ALIGNMENT	./GL/glew.h	/^#define GL_SHADER_STORAGE_BUFFER_OFFSET_ALIGNMENT /;"	d
GL_SHADER_STORAGE_BUFFER_SIZE	./GL/glew.h	/^#define GL_SHADER_STORAGE_BUFFER_SIZE /;"	d
GL_SHADER_STORAGE_BUFFER_START	./GL/glew.h	/^#define GL_SHADER_STORAGE_BUFFER_START /;"	d
GL_SHADER_TYPE	./GL/glew.h	/^#define GL_SHADER_TYPE /;"	d
GL_SHADE_MODEL	./GL/glew.h	/^#define GL_SHADE_MODEL /;"	d
GL_SHADING_LANGUAGE_VERSION	./GL/glew.h	/^#define GL_SHADING_LANGUAGE_VERSION /;"	d
GL_SHADING_LANGUAGE_VERSION_ARB	./GL/glew.h	/^#define GL_SHADING_LANGUAGE_VERSION_ARB /;"	d
GL_SHADING_RATE_16_INVOCATIONS_PER_PIXEL_NV	./GL/glew.h	/^#define GL_SHADING_RATE_16_INVOCATIONS_PER_PIXEL_NV /;"	d
GL_SHADING_RATE_1_INVOCATION_PER_1X2_PIXELS_NV	./GL/glew.h	/^#define GL_SHADING_RATE_1_INVOCATION_PER_1X2_PIXELS_NV /;"	d
GL_SHADING_RATE_1_INVOCATION_PER_2X1_PIXELS_NV	./GL/glew.h	/^#define GL_SHADING_RATE_1_INVOCATION_PER_2X1_PIXELS_NV /;"	d
GL_SHADING_RATE_1_INVOCATION_PER_2X2_PIXELS_NV	./GL/glew.h	/^#define GL_SHADING_RATE_1_INVOCATION_PER_2X2_PIXELS_NV /;"	d
GL_SHADING_RATE_1_INVOCATION_PER_2X4_PIXELS_NV	./GL/glew.h	/^#define GL_SHADING_RATE_1_INVOCATION_PER_2X4_PIXELS_NV /;"	d
GL_SHADING_RATE_1_INVOCATION_PER_4X2_PIXELS_NV	./GL/glew.h	/^#define GL_SHADING_RATE_1_INVOCATION_PER_4X2_PIXELS_NV /;"	d
GL_SHADING_RATE_1_INVOCATION_PER_4X4_PIXELS_NV	./GL/glew.h	/^#define GL_SHADING_RATE_1_INVOCATION_PER_4X4_PIXELS_NV /;"	d
GL_SHADING_RATE_1_INVOCATION_PER_PIXEL_NV	./GL/glew.h	/^#define GL_SHADING_RATE_1_INVOCATION_PER_PIXEL_NV /;"	d
GL_SHADING_RATE_2_INVOCATIONS_PER_PIXEL_NV	./GL/glew.h	/^#define GL_SHADING_RATE_2_INVOCATIONS_PER_PIXEL_NV /;"	d
GL_SHADING_RATE_4_INVOCATIONS_PER_PIXEL_NV	./GL/glew.h	/^#define GL_SHADING_RATE_4_INVOCATIONS_PER_PIXEL_NV /;"	d
GL_SHADING_RATE_8_INVOCATIONS_PER_PIXEL_NV	./GL/glew.h	/^#define GL_SHADING_RATE_8_INVOCATIONS_PER_PIXEL_NV /;"	d
GL_SHADING_RATE_IMAGE_BINDING_NV	./GL/glew.h	/^#define GL_SHADING_RATE_IMAGE_BINDING_NV /;"	d
GL_SHADING_RATE_IMAGE_NV	./GL/glew.h	/^#define GL_SHADING_RATE_IMAGE_NV /;"	d
GL_SHADING_RATE_IMAGE_PALETTE_SIZE_NV	./GL/glew.h	/^#define GL_SHADING_RATE_IMAGE_PALETTE_SIZE_NV /;"	d
GL_SHADING_RATE_IMAGE_TEXEL_HEIGHT_NV	./GL/glew.h	/^#define GL_SHADING_RATE_IMAGE_TEXEL_HEIGHT_NV /;"	d
GL_SHADING_RATE_IMAGE_TEXEL_WIDTH_NV	./GL/glew.h	/^#define GL_SHADING_RATE_IMAGE_TEXEL_WIDTH_NV /;"	d
GL_SHADING_RATE_NO_INVOCATIONS_NV	./GL/glew.h	/^#define GL_SHADING_RATE_NO_INVOCATIONS_NV /;"	d
GL_SHADING_RATE_SAMPLE_ORDER_DEFAULT_NV	./GL/glew.h	/^#define GL_SHADING_RATE_SAMPLE_ORDER_DEFAULT_NV /;"	d
GL_SHADING_RATE_SAMPLE_ORDER_PIXEL_MAJOR_NV	./GL/glew.h	/^#define GL_SHADING_RATE_SAMPLE_ORDER_PIXEL_MAJOR_NV /;"	d
GL_SHADING_RATE_SAMPLE_ORDER_SAMPLE_MAJOR_NV	./GL/glew.h	/^#define GL_SHADING_RATE_SAMPLE_ORDER_SAMPLE_MAJOR_NV /;"	d
GL_SHADOW_AMBIENT_SGIX	./GL/glew.h	/^#define GL_SHADOW_AMBIENT_SGIX /;"	d
GL_SHADOW_ATTENUATION_EXT	./GL/glew.h	/^#define GL_SHADOW_ATTENUATION_EXT /;"	d
GL_SHARED_EDGE_NV	./GL/glew.h	/^#define GL_SHARED_EDGE_NV /;"	d
GL_SHARED_TEXTURE_PALETTE_EXT	./GL/glew.h	/^#define GL_SHARED_TEXTURE_PALETTE_EXT /;"	d
GL_SHININESS	./GL/glew.h	/^#define GL_SHININESS /;"	d
GL_SHORT	./GL/glew.h	/^#define GL_SHORT /;"	d
GL_SIGNALED	./GL/glew.h	/^#define GL_SIGNALED /;"	d
GL_SIGNALED_APPLE	./GL/glew.h	/^#define GL_SIGNALED_APPLE /;"	d
GL_SIGNED_ALPHA8_NV	./GL/glew.h	/^#define GL_SIGNED_ALPHA8_NV /;"	d
GL_SIGNED_ALPHA_NV	./GL/glew.h	/^#define GL_SIGNED_ALPHA_NV /;"	d
GL_SIGNED_HILO16_NV	./GL/glew.h	/^#define GL_SIGNED_HILO16_NV /;"	d
GL_SIGNED_HILO8_NV	./GL/glew.h	/^#define GL_SIGNED_HILO8_NV /;"	d
GL_SIGNED_HILO_NV	./GL/glew.h	/^#define GL_SIGNED_HILO_NV /;"	d
GL_SIGNED_IDENTITY_NV	./GL/glew.h	/^#define GL_SIGNED_IDENTITY_NV /;"	d
GL_SIGNED_INTENSITY8_NV	./GL/glew.h	/^#define GL_SIGNED_INTENSITY8_NV /;"	d
GL_SIGNED_INTENSITY_NV	./GL/glew.h	/^#define GL_SIGNED_INTENSITY_NV /;"	d
GL_SIGNED_LUMINANCE8_ALPHA8_NV	./GL/glew.h	/^#define GL_SIGNED_LUMINANCE8_ALPHA8_NV /;"	d
GL_SIGNED_LUMINANCE8_NV	./GL/glew.h	/^#define GL_SIGNED_LUMINANCE8_NV /;"	d
GL_SIGNED_LUMINANCE_ALPHA_NV	./GL/glew.h	/^#define GL_SIGNED_LUMINANCE_ALPHA_NV /;"	d
GL_SIGNED_LUMINANCE_NV	./GL/glew.h	/^#define GL_SIGNED_LUMINANCE_NV /;"	d
GL_SIGNED_NEGATE_NV	./GL/glew.h	/^#define GL_SIGNED_NEGATE_NV /;"	d
GL_SIGNED_NORMALIZED	./GL/glew.h	/^#define GL_SIGNED_NORMALIZED /;"	d
GL_SIGNED_RGB8_NV	./GL/glew.h	/^#define GL_SIGNED_RGB8_NV /;"	d
GL_SIGNED_RGB8_UNSIGNED_ALPHA8_NV	./GL/glew.h	/^#define GL_SIGNED_RGB8_UNSIGNED_ALPHA8_NV /;"	d
GL_SIGNED_RGBA8_NV	./GL/glew.h	/^#define GL_SIGNED_RGBA8_NV /;"	d
GL_SIGNED_RGBA_NV	./GL/glew.h	/^#define GL_SIGNED_RGBA_NV /;"	d
GL_SIGNED_RGB_NV	./GL/glew.h	/^#define GL_SIGNED_RGB_NV /;"	d
GL_SIGNED_RGB_UNSIGNED_ALPHA_NV	./GL/glew.h	/^#define GL_SIGNED_RGB_UNSIGNED_ALPHA_NV /;"	d
GL_SIMULTANEOUS_TEXTURE_AND_DEPTH_TEST	./GL/glew.h	/^#define GL_SIMULTANEOUS_TEXTURE_AND_DEPTH_TEST /;"	d
GL_SIMULTANEOUS_TEXTURE_AND_DEPTH_WRITE	./GL/glew.h	/^#define GL_SIMULTANEOUS_TEXTURE_AND_DEPTH_WRITE /;"	d
GL_SIMULTANEOUS_TEXTURE_AND_STENCIL_TEST	./GL/glew.h	/^#define GL_SIMULTANEOUS_TEXTURE_AND_STENCIL_TEST /;"	d
GL_SIMULTANEOUS_TEXTURE_AND_STENCIL_WRITE	./GL/glew.h	/^#define GL_SIMULTANEOUS_TEXTURE_AND_STENCIL_WRITE /;"	d
GL_SINGLE_COLOR	./GL/glew.h	/^#define GL_SINGLE_COLOR /;"	d
GL_SINGLE_COLOR_EXT	./GL/glew.h	/^#define GL_SINGLE_COLOR_EXT /;"	d
GL_SKIP_DECODE_EXT	./GL/glew.h	/^#define GL_SKIP_DECODE_EXT /;"	d
GL_SKIP_MISSING_GLYPH_NV	./GL/glew.h	/^#define GL_SKIP_MISSING_GLYPH_NV /;"	d
GL_SLICE_ACCUM_SUN	./GL/glew.h	/^#define GL_SLICE_ACCUM_SUN /;"	d
GL_SLIM10U_SGIX	./GL/glew.h	/^#define GL_SLIM10U_SGIX /;"	d
GL_SLIM12S_SGIX	./GL/glew.h	/^#define GL_SLIM12S_SGIX /;"	d
GL_SLIM8U_SGIX	./GL/glew.h	/^#define GL_SLIM8U_SGIX /;"	d
GL_SLUMINANCE	./GL/glew.h	/^#define GL_SLUMINANCE /;"	d
GL_SLUMINANCE8	./GL/glew.h	/^#define GL_SLUMINANCE8 /;"	d
GL_SLUMINANCE8_ALPHA8	./GL/glew.h	/^#define GL_SLUMINANCE8_ALPHA8 /;"	d
GL_SLUMINANCE8_ALPHA8_EXT	./GL/glew.h	/^#define GL_SLUMINANCE8_ALPHA8_EXT /;"	d
GL_SLUMINANCE8_ALPHA8_NV	./GL/glew.h	/^#define GL_SLUMINANCE8_ALPHA8_NV /;"	d
GL_SLUMINANCE8_EXT	./GL/glew.h	/^#define GL_SLUMINANCE8_EXT /;"	d
GL_SLUMINANCE8_NV	./GL/glew.h	/^#define GL_SLUMINANCE8_NV /;"	d
GL_SLUMINANCE_ALPHA	./GL/glew.h	/^#define GL_SLUMINANCE_ALPHA /;"	d
GL_SLUMINANCE_ALPHA_EXT	./GL/glew.h	/^#define GL_SLUMINANCE_ALPHA_EXT /;"	d
GL_SLUMINANCE_ALPHA_NV	./GL/glew.h	/^#define GL_SLUMINANCE_ALPHA_NV /;"	d
GL_SLUMINANCE_EXT	./GL/glew.h	/^#define GL_SLUMINANCE_EXT /;"	d
GL_SLUMINANCE_NV	./GL/glew.h	/^#define GL_SLUMINANCE_NV /;"	d
GL_SMALL_CCW_ARC_TO_NV	./GL/glew.h	/^#define GL_SMALL_CCW_ARC_TO_NV /;"	d
GL_SMALL_CW_ARC_TO_NV	./GL/glew.h	/^#define GL_SMALL_CW_ARC_TO_NV /;"	d
GL_SMAPHS30_PROGRAM_BINARY_DMP	./GL/glew.h	/^#define GL_SMAPHS30_PROGRAM_BINARY_DMP /;"	d
GL_SMAPHS_PROGRAM_BINARY_DMP	./GL/glew.h	/^#define GL_SMAPHS_PROGRAM_BINARY_DMP /;"	d
GL_SMOOTH	./GL/glew.h	/^#define GL_SMOOTH /;"	d
GL_SMOOTH_CUBIC_CURVE_TO_NV	./GL/glew.h	/^#define GL_SMOOTH_CUBIC_CURVE_TO_NV /;"	d
GL_SMOOTH_LINE_WIDTH_GRANULARITY	./GL/glew.h	/^#define GL_SMOOTH_LINE_WIDTH_GRANULARITY /;"	d
GL_SMOOTH_LINE_WIDTH_RANGE	./GL/glew.h	/^#define GL_SMOOTH_LINE_WIDTH_RANGE /;"	d
GL_SMOOTH_POINT_SIZE_GRANULARITY	./GL/glew.h	/^#define GL_SMOOTH_POINT_SIZE_GRANULARITY /;"	d
GL_SMOOTH_POINT_SIZE_RANGE	./GL/glew.h	/^#define GL_SMOOTH_POINT_SIZE_RANGE /;"	d
GL_SMOOTH_QUADRATIC_CURVE_TO_NV	./GL/glew.h	/^#define GL_SMOOTH_QUADRATIC_CURVE_TO_NV /;"	d
GL_SM_COUNT_NV	./GL/glew.h	/^#define GL_SM_COUNT_NV /;"	d
GL_SOFTLIGHT_KHR	./GL/glew.h	/^#define GL_SOFTLIGHT_KHR /;"	d
GL_SOFTLIGHT_NV	./GL/glew.h	/^#define GL_SOFTLIGHT_NV /;"	d
GL_SOURCE0_ALPHA	./GL/glew.h	/^#define GL_SOURCE0_ALPHA /;"	d
GL_SOURCE0_ALPHA_ARB	./GL/glew.h	/^#define GL_SOURCE0_ALPHA_ARB /;"	d
GL_SOURCE0_ALPHA_EXT	./GL/glew.h	/^#define GL_SOURCE0_ALPHA_EXT /;"	d
GL_SOURCE0_RGB	./GL/glew.h	/^#define GL_SOURCE0_RGB /;"	d
GL_SOURCE0_RGB_ARB	./GL/glew.h	/^#define GL_SOURCE0_RGB_ARB /;"	d
GL_SOURCE0_RGB_EXT	./GL/glew.h	/^#define GL_SOURCE0_RGB_EXT /;"	d
GL_SOURCE1_ALPHA	./GL/glew.h	/^#define GL_SOURCE1_ALPHA /;"	d
GL_SOURCE1_ALPHA_ARB	./GL/glew.h	/^#define GL_SOURCE1_ALPHA_ARB /;"	d
GL_SOURCE1_ALPHA_EXT	./GL/glew.h	/^#define GL_SOURCE1_ALPHA_EXT /;"	d
GL_SOURCE1_RGB	./GL/glew.h	/^#define GL_SOURCE1_RGB /;"	d
GL_SOURCE1_RGB_ARB	./GL/glew.h	/^#define GL_SOURCE1_RGB_ARB /;"	d
GL_SOURCE1_RGB_EXT	./GL/glew.h	/^#define GL_SOURCE1_RGB_EXT /;"	d
GL_SOURCE2_ALPHA	./GL/glew.h	/^#define GL_SOURCE2_ALPHA /;"	d
GL_SOURCE2_ALPHA_ARB	./GL/glew.h	/^#define GL_SOURCE2_ALPHA_ARB /;"	d
GL_SOURCE2_ALPHA_EXT	./GL/glew.h	/^#define GL_SOURCE2_ALPHA_EXT /;"	d
GL_SOURCE2_RGB	./GL/glew.h	/^#define GL_SOURCE2_RGB /;"	d
GL_SOURCE2_RGB_ARB	./GL/glew.h	/^#define GL_SOURCE2_RGB_ARB /;"	d
GL_SOURCE2_RGB_EXT	./GL/glew.h	/^#define GL_SOURCE2_RGB_EXT /;"	d
GL_SOURCE3_ALPHA_NV	./GL/glew.h	/^#define GL_SOURCE3_ALPHA_NV /;"	d
GL_SOURCE3_RGB_NV	./GL/glew.h	/^#define GL_SOURCE3_RGB_NV /;"	d
GL_SPARE0_NV	./GL/glew.h	/^#define GL_SPARE0_NV /;"	d
GL_SPARE0_PLUS_SECONDARY_COLOR_NV	./GL/glew.h	/^#define GL_SPARE0_PLUS_SECONDARY_COLOR_NV /;"	d
GL_SPARE1_NV	./GL/glew.h	/^#define GL_SPARE1_NV /;"	d
GL_SPARSE_BUFFER_PAGE_SIZE_ARB	./GL/glew.h	/^#define GL_SPARSE_BUFFER_PAGE_SIZE_ARB /;"	d
GL_SPARSE_STORAGE_BIT_ARB	./GL/glew.h	/^#define GL_SPARSE_STORAGE_BIT_ARB /;"	d
GL_SPARSE_TEXTURE_FULL_ARRAY_CUBE_MIPMAPS_ARB	./GL/glew.h	/^#define GL_SPARSE_TEXTURE_FULL_ARRAY_CUBE_MIPMAPS_ARB /;"	d
GL_SPARSE_TEXTURE_FULL_ARRAY_CUBE_MIPMAPS_EXT	./GL/glew.h	/^#define GL_SPARSE_TEXTURE_FULL_ARRAY_CUBE_MIPMAPS_EXT /;"	d
GL_SPECULAR	./GL/glew.h	/^#define GL_SPECULAR /;"	d
GL_SPHERE_MAP	./GL/glew.h	/^#define GL_SPHERE_MAP /;"	d
GL_SPIR_V_BINARY	./GL/glew.h	/^#define GL_SPIR_V_BINARY /;"	d
GL_SPIR_V_BINARY_ARB	./GL/glew.h	/^#define GL_SPIR_V_BINARY_ARB /;"	d
GL_SPIR_V_EXTENSIONS	./GL/glew.h	/^#define GL_SPIR_V_EXTENSIONS /;"	d
GL_SPOT_CUTOFF	./GL/glew.h	/^#define GL_SPOT_CUTOFF /;"	d
GL_SPOT_CUTOFF_DELTA_SGIX	./GL/glew.h	/^#define GL_SPOT_CUTOFF_DELTA_SGIX /;"	d
GL_SPOT_DIRECTION	./GL/glew.h	/^#define GL_SPOT_DIRECTION /;"	d
GL_SPOT_EXPONENT	./GL/glew.h	/^#define GL_SPOT_EXPONENT /;"	d
GL_SQUARE_NV	./GL/glew.h	/^#define GL_SQUARE_NV /;"	d
GL_SR8_EXT	./GL/glew.h	/^#define GL_SR8_EXT /;"	d
GL_SRC0_ALPHA	./GL/glew.h	/^#define GL_SRC0_ALPHA /;"	d
GL_SRC0_RGB	./GL/glew.h	/^#define GL_SRC0_RGB /;"	d
GL_SRC1_ALPHA	./GL/glew.h	/^#define GL_SRC1_ALPHA /;"	d
GL_SRC1_ALPHA_EXT	./GL/glew.h	/^#define GL_SRC1_ALPHA_EXT /;"	d
GL_SRC1_COLOR	./GL/glew.h	/^#define GL_SRC1_COLOR /;"	d
GL_SRC1_COLOR_EXT	./GL/glew.h	/^#define GL_SRC1_COLOR_EXT /;"	d
GL_SRC1_RGB	./GL/glew.h	/^#define GL_SRC1_RGB /;"	d
GL_SRC2_ALPHA	./GL/glew.h	/^#define GL_SRC2_ALPHA /;"	d
GL_SRC2_RGB	./GL/glew.h	/^#define GL_SRC2_RGB /;"	d
GL_SRC_ALPHA	./GL/glew.h	/^#define GL_SRC_ALPHA /;"	d
GL_SRC_ALPHA_SATURATE	./GL/glew.h	/^#define GL_SRC_ALPHA_SATURATE /;"	d
GL_SRC_ALPHA_SATURATE_EXT	./GL/glew.h	/^#define GL_SRC_ALPHA_SATURATE_EXT /;"	d
GL_SRC_ATOP_NV	./GL/glew.h	/^#define GL_SRC_ATOP_NV /;"	d
GL_SRC_COLOR	./GL/glew.h	/^#define GL_SRC_COLOR /;"	d
GL_SRC_IN_NV	./GL/glew.h	/^#define GL_SRC_IN_NV /;"	d
GL_SRC_NV	./GL/glew.h	/^#define GL_SRC_NV /;"	d
GL_SRC_OUT_NV	./GL/glew.h	/^#define GL_SRC_OUT_NV /;"	d
GL_SRC_OVER_NV	./GL/glew.h	/^#define GL_SRC_OVER_NV /;"	d
GL_SRG8_EXT	./GL/glew.h	/^#define GL_SRG8_EXT /;"	d
GL_SRGB	./GL/glew.h	/^#define GL_SRGB /;"	d
GL_SRGB8	./GL/glew.h	/^#define GL_SRGB8 /;"	d
GL_SRGB8_ALPHA8	./GL/glew.h	/^#define GL_SRGB8_ALPHA8 /;"	d
GL_SRGB8_ALPHA8_EXT	./GL/glew.h	/^#define GL_SRGB8_ALPHA8_EXT /;"	d
GL_SRGB8_EXT	./GL/glew.h	/^#define GL_SRGB8_EXT /;"	d
GL_SRGB8_NV	./GL/glew.h	/^#define GL_SRGB8_NV /;"	d
GL_SRGB_ALPHA	./GL/glew.h	/^#define GL_SRGB_ALPHA /;"	d
GL_SRGB_ALPHA_EXT	./GL/glew.h	/^#define GL_SRGB_ALPHA_EXT /;"	d
GL_SRGB_DECODE_ARB	./GL/glew.h	/^#define GL_SRGB_DECODE_ARB /;"	d
GL_SRGB_EXT	./GL/glew.h	/^#define GL_SRGB_EXT /;"	d
GL_SRGB_READ	./GL/glew.h	/^#define GL_SRGB_READ /;"	d
GL_SRGB_WRITE	./GL/glew.h	/^#define GL_SRGB_WRITE /;"	d
GL_STACK_OVERFLOW	./GL/glew.h	/^#define GL_STACK_OVERFLOW /;"	d
GL_STACK_UNDERFLOW	./GL/glew.h	/^#define GL_STACK_UNDERFLOW /;"	d
GL_STANDARD_FONT_FORMAT_NV	./GL/glew.h	/^#define GL_STANDARD_FONT_FORMAT_NV /;"	d
GL_STANDARD_FONT_NAME_NV	./GL/glew.h	/^#define GL_STANDARD_FONT_NAME_NV /;"	d
GL_STATE_RESTORE	./GL/glew.h	/^#define GL_STATE_RESTORE /;"	d
GL_STATIC_ATI	./GL/glew.h	/^#define GL_STATIC_ATI /;"	d
GL_STATIC_COPY	./GL/glew.h	/^#define GL_STATIC_COPY /;"	d
GL_STATIC_COPY_ARB	./GL/glew.h	/^#define GL_STATIC_COPY_ARB /;"	d
GL_STATIC_DRAW	./GL/glew.h	/^#define GL_STATIC_DRAW /;"	d
GL_STATIC_DRAW_ARB	./GL/glew.h	/^#define GL_STATIC_DRAW_ARB /;"	d
GL_STATIC_READ	./GL/glew.h	/^#define GL_STATIC_READ /;"	d
GL_STATIC_READ_ARB	./GL/glew.h	/^#define GL_STATIC_READ_ARB /;"	d
GL_STATIC_VERTEX_ARRAY_IBM	./GL/glew.h	/^#define GL_STATIC_VERTEX_ARRAY_IBM /;"	d
GL_STATISTICS_REGAL	./GL/glew.h	/^#define GL_STATISTICS_REGAL /;"	d
GL_STENCIL	./GL/glew.h	/^#define GL_STENCIL /;"	d
GL_STENCIL_ATTACHMENT	./GL/glew.h	/^#define GL_STENCIL_ATTACHMENT /;"	d
GL_STENCIL_ATTACHMENT_EXT	./GL/glew.h	/^#define GL_STENCIL_ATTACHMENT_EXT /;"	d
GL_STENCIL_ATTACHMENT_OES	./GL/glew.h	/^#define GL_STENCIL_ATTACHMENT_OES /;"	d
GL_STENCIL_BACK_FAIL	./GL/glew.h	/^#define GL_STENCIL_BACK_FAIL /;"	d
GL_STENCIL_BACK_FAIL_ATI	./GL/glew.h	/^#define GL_STENCIL_BACK_FAIL_ATI /;"	d
GL_STENCIL_BACK_FUNC	./GL/glew.h	/^#define GL_STENCIL_BACK_FUNC /;"	d
GL_STENCIL_BACK_FUNC_ATI	./GL/glew.h	/^#define GL_STENCIL_BACK_FUNC_ATI /;"	d
GL_STENCIL_BACK_OP_VALUE_AMD	./GL/glew.h	/^#define GL_STENCIL_BACK_OP_VALUE_AMD /;"	d
GL_STENCIL_BACK_PASS_DEPTH_FAIL	./GL/glew.h	/^#define GL_STENCIL_BACK_PASS_DEPTH_FAIL /;"	d
GL_STENCIL_BACK_PASS_DEPTH_FAIL_ATI	./GL/glew.h	/^#define GL_STENCIL_BACK_PASS_DEPTH_FAIL_ATI /;"	d
GL_STENCIL_BACK_PASS_DEPTH_PASS	./GL/glew.h	/^#define GL_STENCIL_BACK_PASS_DEPTH_PASS /;"	d
GL_STENCIL_BACK_PASS_DEPTH_PASS_ATI	./GL/glew.h	/^#define GL_STENCIL_BACK_PASS_DEPTH_PASS_ATI /;"	d
GL_STENCIL_BACK_REF	./GL/glew.h	/^#define GL_STENCIL_BACK_REF /;"	d
GL_STENCIL_BACK_VALUE_MASK	./GL/glew.h	/^#define GL_STENCIL_BACK_VALUE_MASK /;"	d
GL_STENCIL_BACK_WRITEMASK	./GL/glew.h	/^#define GL_STENCIL_BACK_WRITEMASK /;"	d
GL_STENCIL_BITS	./GL/glew.h	/^#define GL_STENCIL_BITS /;"	d
GL_STENCIL_BUFFER	./GL/glew.h	/^#define GL_STENCIL_BUFFER /;"	d
GL_STENCIL_BUFFER_BIT	./GL/glew.h	/^#define GL_STENCIL_BUFFER_BIT /;"	d
GL_STENCIL_BUFFER_BIT0_QCOM	./GL/glew.h	/^#define GL_STENCIL_BUFFER_BIT0_QCOM /;"	d
GL_STENCIL_BUFFER_BIT1_QCOM	./GL/glew.h	/^#define GL_STENCIL_BUFFER_BIT1_QCOM /;"	d
GL_STENCIL_BUFFER_BIT2_QCOM	./GL/glew.h	/^#define GL_STENCIL_BUFFER_BIT2_QCOM /;"	d
GL_STENCIL_BUFFER_BIT3_QCOM	./GL/glew.h	/^#define GL_STENCIL_BUFFER_BIT3_QCOM /;"	d
GL_STENCIL_BUFFER_BIT4_QCOM	./GL/glew.h	/^#define GL_STENCIL_BUFFER_BIT4_QCOM /;"	d
GL_STENCIL_BUFFER_BIT5_QCOM	./GL/glew.h	/^#define GL_STENCIL_BUFFER_BIT5_QCOM /;"	d
GL_STENCIL_BUFFER_BIT6_QCOM	./GL/glew.h	/^#define GL_STENCIL_BUFFER_BIT6_QCOM /;"	d
GL_STENCIL_BUFFER_BIT7_QCOM	./GL/glew.h	/^#define GL_STENCIL_BUFFER_BIT7_QCOM /;"	d
GL_STENCIL_CLEAR_TAG_VALUE_EXT	./GL/glew.h	/^#define GL_STENCIL_CLEAR_TAG_VALUE_EXT /;"	d
GL_STENCIL_CLEAR_VALUE	./GL/glew.h	/^#define GL_STENCIL_CLEAR_VALUE /;"	d
GL_STENCIL_COMPONENTS	./GL/glew.h	/^#define GL_STENCIL_COMPONENTS /;"	d
GL_STENCIL_EXT	./GL/glew.h	/^#define GL_STENCIL_EXT /;"	d
GL_STENCIL_FAIL	./GL/glew.h	/^#define GL_STENCIL_FAIL /;"	d
GL_STENCIL_FUNC	./GL/glew.h	/^#define GL_STENCIL_FUNC /;"	d
GL_STENCIL_INDEX	./GL/glew.h	/^#define GL_STENCIL_INDEX /;"	d
GL_STENCIL_INDEX1	./GL/glew.h	/^#define GL_STENCIL_INDEX1 /;"	d
GL_STENCIL_INDEX16	./GL/glew.h	/^#define GL_STENCIL_INDEX16 /;"	d
GL_STENCIL_INDEX16_EXT	./GL/glew.h	/^#define GL_STENCIL_INDEX16_EXT /;"	d
GL_STENCIL_INDEX1_EXT	./GL/glew.h	/^#define GL_STENCIL_INDEX1_EXT /;"	d
GL_STENCIL_INDEX1_OES	./GL/glew.h	/^#define GL_STENCIL_INDEX1_OES /;"	d
GL_STENCIL_INDEX4	./GL/glew.h	/^#define GL_STENCIL_INDEX4 /;"	d
GL_STENCIL_INDEX4_EXT	./GL/glew.h	/^#define GL_STENCIL_INDEX4_EXT /;"	d
GL_STENCIL_INDEX4_OES	./GL/glew.h	/^#define GL_STENCIL_INDEX4_OES /;"	d
GL_STENCIL_INDEX8	./GL/glew.h	/^#define GL_STENCIL_INDEX8 /;"	d
GL_STENCIL_INDEX8_EXT	./GL/glew.h	/^#define GL_STENCIL_INDEX8_EXT /;"	d
GL_STENCIL_INDEX8_OES	./GL/glew.h	/^#define GL_STENCIL_INDEX8_OES /;"	d
GL_STENCIL_OP_VALUE_AMD	./GL/glew.h	/^#define GL_STENCIL_OP_VALUE_AMD /;"	d
GL_STENCIL_PASS_DEPTH_FAIL	./GL/glew.h	/^#define GL_STENCIL_PASS_DEPTH_FAIL /;"	d
GL_STENCIL_PASS_DEPTH_PASS	./GL/glew.h	/^#define GL_STENCIL_PASS_DEPTH_PASS /;"	d
GL_STENCIL_REF	./GL/glew.h	/^#define GL_STENCIL_REF /;"	d
GL_STENCIL_REF_COMMAND_NV	./GL/glew.h	/^#define GL_STENCIL_REF_COMMAND_NV /;"	d
GL_STENCIL_RENDERABLE	./GL/glew.h	/^#define GL_STENCIL_RENDERABLE /;"	d
GL_STENCIL_SAMPLES_NV	./GL/glew.h	/^#define GL_STENCIL_SAMPLES_NV /;"	d
GL_STENCIL_TAG_BITS_EXT	./GL/glew.h	/^#define GL_STENCIL_TAG_BITS_EXT /;"	d
GL_STENCIL_TEST	./GL/glew.h	/^#define GL_STENCIL_TEST /;"	d
GL_STENCIL_TEST_TWO_SIDE_EXT	./GL/glew.h	/^#define GL_STENCIL_TEST_TWO_SIDE_EXT /;"	d
GL_STENCIL_VALUE_MASK	./GL/glew.h	/^#define GL_STENCIL_VALUE_MASK /;"	d
GL_STENCIL_WRITEMASK	./GL/glew.h	/^#define GL_STENCIL_WRITEMASK /;"	d
GL_STEREO	./GL/glew.h	/^#define GL_STEREO /;"	d
GL_STEREO_CONVERGENCE_NV	./GL/glew.h	/^#define GL_STEREO_CONVERGENCE_NV /;"	d
GL_STEREO_CUTOFF_NV	./GL/glew.h	/^#define GL_STEREO_CUTOFF_NV /;"	d
GL_STEREO_PROJECTION_NV	./GL/glew.h	/^#define GL_STEREO_PROJECTION_NV /;"	d
GL_STEREO_PROJECTION_ORTHO_NV	./GL/glew.h	/^#define GL_STEREO_PROJECTION_ORTHO_NV /;"	d
GL_STEREO_PROJECTION_PERSPECTIVE_NV	./GL/glew.h	/^#define GL_STEREO_PROJECTION_PERSPECTIVE_NV /;"	d
GL_STEREO_SEPARATION_NV	./GL/glew.h	/^#define GL_STEREO_SEPARATION_NV /;"	d
GL_STORAGE_CACHED_APPLE	./GL/glew.h	/^#define GL_STORAGE_CACHED_APPLE /;"	d
GL_STORAGE_CLIENT_APPLE	./GL/glew.h	/^#define GL_STORAGE_CLIENT_APPLE /;"	d
GL_STORAGE_PRIVATE_APPLE	./GL/glew.h	/^#define GL_STORAGE_PRIVATE_APPLE /;"	d
GL_STORAGE_SHARED_APPLE	./GL/glew.h	/^#define GL_STORAGE_SHARED_APPLE /;"	d
GL_STREAM_COPY	./GL/glew.h	/^#define GL_STREAM_COPY /;"	d
GL_STREAM_COPY_ARB	./GL/glew.h	/^#define GL_STREAM_COPY_ARB /;"	d
GL_STREAM_DRAW	./GL/glew.h	/^#define GL_STREAM_DRAW /;"	d
GL_STREAM_DRAW_ARB	./GL/glew.h	/^#define GL_STREAM_DRAW_ARB /;"	d
GL_STREAM_RASTERIZATION_AMD	./GL/glew.h	/^#define GL_STREAM_RASTERIZATION_AMD /;"	d
GL_STREAM_READ	./GL/glew.h	/^#define GL_STREAM_READ /;"	d
GL_STREAM_READ_ARB	./GL/glew.h	/^#define GL_STREAM_READ_ARB /;"	d
GL_STRICT_DEPTHFUNC_HINT_PGI	./GL/glew.h	/^#define GL_STRICT_DEPTHFUNC_HINT_PGI /;"	d
GL_STRICT_LIGHTING_HINT_PGI	./GL/glew.h	/^#define GL_STRICT_LIGHTING_HINT_PGI /;"	d
GL_STRICT_SCISSOR_HINT_PGI	./GL/glew.h	/^#define GL_STRICT_SCISSOR_HINT_PGI /;"	d
GL_SUBGROUP_FEATURE_ARITHMETIC_BIT_KHR	./GL/glew.h	/^#define GL_SUBGROUP_FEATURE_ARITHMETIC_BIT_KHR /;"	d
GL_SUBGROUP_FEATURE_BALLOT_BIT_KHR	./GL/glew.h	/^#define GL_SUBGROUP_FEATURE_BALLOT_BIT_KHR /;"	d
GL_SUBGROUP_FEATURE_BASIC_BIT_KHR	./GL/glew.h	/^#define GL_SUBGROUP_FEATURE_BASIC_BIT_KHR /;"	d
GL_SUBGROUP_FEATURE_CLUSTERED_BIT_KHR	./GL/glew.h	/^#define GL_SUBGROUP_FEATURE_CLUSTERED_BIT_KHR /;"	d
GL_SUBGROUP_FEATURE_PARTITIONED_BIT_NV	./GL/glew.h	/^#define GL_SUBGROUP_FEATURE_PARTITIONED_BIT_NV /;"	d
GL_SUBGROUP_FEATURE_QUAD_BIT_KHR	./GL/glew.h	/^#define GL_SUBGROUP_FEATURE_QUAD_BIT_KHR /;"	d
GL_SUBGROUP_FEATURE_SHUFFLE_BIT_KHR	./GL/glew.h	/^#define GL_SUBGROUP_FEATURE_SHUFFLE_BIT_KHR /;"	d
GL_SUBGROUP_FEATURE_SHUFFLE_RELATIVE_BIT_KHR	./GL/glew.h	/^#define GL_SUBGROUP_FEATURE_SHUFFLE_RELATIVE_BIT_KHR /;"	d
GL_SUBGROUP_FEATURE_VOTE_BIT_KHR	./GL/glew.h	/^#define GL_SUBGROUP_FEATURE_VOTE_BIT_KHR /;"	d
GL_SUBGROUP_QUAD_ALL_STAGES_KHR	./GL/glew.h	/^#define GL_SUBGROUP_QUAD_ALL_STAGES_KHR /;"	d
GL_SUBGROUP_SIZE_KHR	./GL/glew.h	/^#define GL_SUBGROUP_SIZE_KHR /;"	d
GL_SUBGROUP_SUPPORTED_FEATURES_KHR	./GL/glew.h	/^#define GL_SUBGROUP_SUPPORTED_FEATURES_KHR /;"	d
GL_SUBGROUP_SUPPORTED_STAGES_KHR	./GL/glew.h	/^#define GL_SUBGROUP_SUPPORTED_STAGES_KHR /;"	d
GL_SUBPIXEL_BITS	./GL/glew.h	/^#define GL_SUBPIXEL_BITS /;"	d
GL_SUBPIXEL_PRECISION_BIAS_X_BITS_NV	./GL/glew.h	/^#define GL_SUBPIXEL_PRECISION_BIAS_X_BITS_NV /;"	d
GL_SUBPIXEL_PRECISION_BIAS_Y_BITS_NV	./GL/glew.h	/^#define GL_SUBPIXEL_PRECISION_BIAS_Y_BITS_NV /;"	d
GL_SUBSAMPLE_DISTANCE_AMD	./GL/glew.h	/^#define GL_SUBSAMPLE_DISTANCE_AMD /;"	d
GL_SUBTRACT	./GL/glew.h	/^#define GL_SUBTRACT /;"	d
GL_SUBTRACT_ARB	./GL/glew.h	/^#define GL_SUBTRACT_ARB /;"	d
GL_SUB_ATI	./GL/glew.h	/^#define GL_SUB_ATI /;"	d
GL_SUCCESS_NV	./GL/glew.h	/^#define GL_SUCCESS_NV /;"	d
GL_SUNX_constant_data	./GL/glew.h	/^#define GL_SUNX_constant_data /;"	d
GL_SUN_convolution_border_modes	./GL/glew.h	/^#define GL_SUN_convolution_border_modes /;"	d
GL_SUN_global_alpha	./GL/glew.h	/^#define GL_SUN_global_alpha /;"	d
GL_SUN_mesh_array	./GL/glew.h	/^#define GL_SUN_mesh_array /;"	d
GL_SUN_read_video_pixels	./GL/glew.h	/^#define GL_SUN_read_video_pixels /;"	d
GL_SUN_slice_accum	./GL/glew.h	/^#define GL_SUN_slice_accum /;"	d
GL_SUN_triangle_list	./GL/glew.h	/^#define GL_SUN_triangle_list /;"	d
GL_SUN_vertex	./GL/glew.h	/^#define GL_SUN_vertex /;"	d
GL_SUPERSAMPLE_SCALE_X_NV	./GL/glew.h	/^#define GL_SUPERSAMPLE_SCALE_X_NV /;"	d
GL_SUPERSAMPLE_SCALE_Y_NV	./GL/glew.h	/^#define GL_SUPERSAMPLE_SCALE_Y_NV /;"	d
GL_SUPPORTED_MULTISAMPLE_MODES_AMD	./GL/glew.h	/^#define GL_SUPPORTED_MULTISAMPLE_MODES_AMD /;"	d
GL_SURFACE_MAPPED_NV	./GL/glew.h	/^#define GL_SURFACE_MAPPED_NV /;"	d
GL_SURFACE_REGISTERED_NV	./GL/glew.h	/^#define GL_SURFACE_REGISTERED_NV /;"	d
GL_SURFACE_STATE_NV	./GL/glew.h	/^#define GL_SURFACE_STATE_NV /;"	d
GL_SWIZZLE_STQ_ATI	./GL/glew.h	/^#define GL_SWIZZLE_STQ_ATI /;"	d
GL_SWIZZLE_STQ_DQ_ATI	./GL/glew.h	/^#define GL_SWIZZLE_STQ_DQ_ATI /;"	d
GL_SWIZZLE_STRQ_ATI	./GL/glew.h	/^#define GL_SWIZZLE_STRQ_ATI /;"	d
GL_SWIZZLE_STRQ_DQ_ATI	./GL/glew.h	/^#define GL_SWIZZLE_STRQ_DQ_ATI /;"	d
GL_SWIZZLE_STR_ATI	./GL/glew.h	/^#define GL_SWIZZLE_STR_ATI /;"	d
GL_SWIZZLE_STR_DR_ATI	./GL/glew.h	/^#define GL_SWIZZLE_STR_DR_ATI /;"	d
GL_SYNC_CL_EVENT_ARB	./GL/glew.h	/^#define GL_SYNC_CL_EVENT_ARB /;"	d
GL_SYNC_CL_EVENT_COMPLETE_ARB	./GL/glew.h	/^#define GL_SYNC_CL_EVENT_COMPLETE_ARB /;"	d
GL_SYNC_CONDITION	./GL/glew.h	/^#define GL_SYNC_CONDITION /;"	d
GL_SYNC_CONDITION_APPLE	./GL/glew.h	/^#define GL_SYNC_CONDITION_APPLE /;"	d
GL_SYNC_FENCE	./GL/glew.h	/^#define GL_SYNC_FENCE /;"	d
GL_SYNC_FENCE_APPLE	./GL/glew.h	/^#define GL_SYNC_FENCE_APPLE /;"	d
GL_SYNC_FLAGS	./GL/glew.h	/^#define GL_SYNC_FLAGS /;"	d
GL_SYNC_FLAGS_APPLE	./GL/glew.h	/^#define GL_SYNC_FLAGS_APPLE /;"	d
GL_SYNC_FLUSH_COMMANDS_BIT	./GL/glew.h	/^#define GL_SYNC_FLUSH_COMMANDS_BIT /;"	d
GL_SYNC_FLUSH_COMMANDS_BIT_APPLE	./GL/glew.h	/^#define GL_SYNC_FLUSH_COMMANDS_BIT_APPLE /;"	d
GL_SYNC_GPU_COMMANDS_COMPLETE	./GL/glew.h	/^#define GL_SYNC_GPU_COMMANDS_COMPLETE /;"	d
GL_SYNC_GPU_COMMANDS_COMPLETE_APPLE	./GL/glew.h	/^#define GL_SYNC_GPU_COMMANDS_COMPLETE_APPLE /;"	d
GL_SYNC_OBJECT_APPLE	./GL/glew.h	/^#define GL_SYNC_OBJECT_APPLE /;"	d
GL_SYNC_STATUS	./GL/glew.h	/^#define GL_SYNC_STATUS /;"	d
GL_SYNC_STATUS_APPLE	./GL/glew.h	/^#define GL_SYNC_STATUS_APPLE /;"	d
GL_SYNC_X11_FENCE_EXT	./GL/glew.h	/^#define GL_SYNC_X11_FENCE_EXT /;"	d
GL_SYSTEM_FONT_NAME_NV	./GL/glew.h	/^#define GL_SYSTEM_FONT_NAME_NV /;"	d
GL_T	./GL/glew.h	/^#define GL_T /;"	d
GL_T2F_C3F_V3F	./GL/glew.h	/^#define GL_T2F_C3F_V3F /;"	d
GL_T2F_C4F_N3F_V3F	./GL/glew.h	/^#define GL_T2F_C4F_N3F_V3F /;"	d
GL_T2F_C4UB_V3F	./GL/glew.h	/^#define GL_T2F_C4UB_V3F /;"	d
GL_T2F_N3F_V3F	./GL/glew.h	/^#define GL_T2F_N3F_V3F /;"	d
GL_T2F_V3F	./GL/glew.h	/^#define GL_T2F_V3F /;"	d
GL_T4F_C4F_N3F_V4F	./GL/glew.h	/^#define GL_T4F_C4F_N3F_V4F /;"	d
GL_T4F_V4F	./GL/glew.h	/^#define GL_T4F_V4F /;"	d
GL_TABLE_TOO_LARGE	./GL/glew.h	/^#define GL_TABLE_TOO_LARGE /;"	d
GL_TANGENT_ARRAY_EXT	./GL/glew.h	/^#define GL_TANGENT_ARRAY_EXT /;"	d
GL_TANGENT_ARRAY_POINTER_EXT	./GL/glew.h	/^#define GL_TANGENT_ARRAY_POINTER_EXT /;"	d
GL_TANGENT_ARRAY_STRIDE_EXT	./GL/glew.h	/^#define GL_TANGENT_ARRAY_STRIDE_EXT /;"	d
GL_TANGENT_ARRAY_TYPE_EXT	./GL/glew.h	/^#define GL_TANGENT_ARRAY_TYPE_EXT /;"	d
GL_TANGENT_SPACE_SGIX	./GL/glew.h	/^#define GL_TANGENT_SPACE_SGIX /;"	d
GL_TASK_SHADER_BIT_NV	./GL/glew.h	/^#define GL_TASK_SHADER_BIT_NV /;"	d
GL_TASK_SHADER_NV	./GL/glew.h	/^#define GL_TASK_SHADER_NV /;"	d
GL_TASK_SUBROUTINE_NV	./GL/glew.h	/^#define GL_TASK_SUBROUTINE_NV /;"	d
GL_TASK_SUBROUTINE_UNIFORM_NV	./GL/glew.h	/^#define GL_TASK_SUBROUTINE_UNIFORM_NV /;"	d
GL_TASK_WORK_GROUP_SIZE_NV	./GL/glew.h	/^#define GL_TASK_WORK_GROUP_SIZE_NV /;"	d
GL_TERMINATE_SEQUENCE_COMMAND_NV	./GL/glew.h	/^#define GL_TERMINATE_SEQUENCE_COMMAND_NV /;"	d
GL_TESSELLATION_FACTOR_AMD	./GL/glew.h	/^#define GL_TESSELLATION_FACTOR_AMD /;"	d
GL_TESSELLATION_MODE_AMD	./GL/glew.h	/^#define GL_TESSELLATION_MODE_AMD /;"	d
GL_TESS_CONTROL_OUTPUT_VERTICES	./GL/glew.h	/^#define GL_TESS_CONTROL_OUTPUT_VERTICES /;"	d
GL_TESS_CONTROL_OUTPUT_VERTICES_EXT	./GL/glew.h	/^#define GL_TESS_CONTROL_OUTPUT_VERTICES_EXT /;"	d
GL_TESS_CONTROL_OUTPUT_VERTICES_OES	./GL/glew.h	/^#define GL_TESS_CONTROL_OUTPUT_VERTICES_OES /;"	d
GL_TESS_CONTROL_PROGRAM_NV	./GL/glew.h	/^#define GL_TESS_CONTROL_PROGRAM_NV /;"	d
GL_TESS_CONTROL_PROGRAM_PARAMETER_BUFFER_NV	./GL/glew.h	/^#define GL_TESS_CONTROL_PROGRAM_PARAMETER_BUFFER_NV /;"	d
GL_TESS_CONTROL_SHADER	./GL/glew.h	/^#define GL_TESS_CONTROL_SHADER /;"	d
GL_TESS_CONTROL_SHADER_BIT	./GL/glew.h	/^#define GL_TESS_CONTROL_SHADER_BIT /;"	d
GL_TESS_CONTROL_SHADER_BIT_EXT	./GL/glew.h	/^#define GL_TESS_CONTROL_SHADER_BIT_EXT /;"	d
GL_TESS_CONTROL_SHADER_BIT_OES	./GL/glew.h	/^#define GL_TESS_CONTROL_SHADER_BIT_OES /;"	d
GL_TESS_CONTROL_SHADER_EXT	./GL/glew.h	/^#define GL_TESS_CONTROL_SHADER_EXT /;"	d
GL_TESS_CONTROL_SHADER_OES	./GL/glew.h	/^#define GL_TESS_CONTROL_SHADER_OES /;"	d
GL_TESS_CONTROL_SHADER_PATCHES	./GL/glew.h	/^#define GL_TESS_CONTROL_SHADER_PATCHES /;"	d
GL_TESS_CONTROL_SHADER_PATCHES_ARB	./GL/glew.h	/^#define GL_TESS_CONTROL_SHADER_PATCHES_ARB /;"	d
GL_TESS_CONTROL_SUBROUTINE	./GL/glew.h	/^#define GL_TESS_CONTROL_SUBROUTINE /;"	d
GL_TESS_CONTROL_SUBROUTINE_UNIFORM	./GL/glew.h	/^#define GL_TESS_CONTROL_SUBROUTINE_UNIFORM /;"	d
GL_TESS_CONTROL_TEXTURE	./GL/glew.h	/^#define GL_TESS_CONTROL_TEXTURE /;"	d
GL_TESS_EVALUATION_PROGRAM_NV	./GL/glew.h	/^#define GL_TESS_EVALUATION_PROGRAM_NV /;"	d
GL_TESS_EVALUATION_PROGRAM_PARAMETER_BUFFER_NV	./GL/glew.h	/^#define GL_TESS_EVALUATION_PROGRAM_PARAMETER_BUFFER_NV /;"	d
GL_TESS_EVALUATION_SHADER	./GL/glew.h	/^#define GL_TESS_EVALUATION_SHADER /;"	d
GL_TESS_EVALUATION_SHADER_BIT	./GL/glew.h	/^#define GL_TESS_EVALUATION_SHADER_BIT /;"	d
GL_TESS_EVALUATION_SHADER_BIT_EXT	./GL/glew.h	/^#define GL_TESS_EVALUATION_SHADER_BIT_EXT /;"	d
GL_TESS_EVALUATION_SHADER_BIT_OES	./GL/glew.h	/^#define GL_TESS_EVALUATION_SHADER_BIT_OES /;"	d
GL_TESS_EVALUATION_SHADER_EXT	./GL/glew.h	/^#define GL_TESS_EVALUATION_SHADER_EXT /;"	d
GL_TESS_EVALUATION_SHADER_INVOCATIONS	./GL/glew.h	/^#define GL_TESS_EVALUATION_SHADER_INVOCATIONS /;"	d
GL_TESS_EVALUATION_SHADER_INVOCATIONS_ARB	./GL/glew.h	/^#define GL_TESS_EVALUATION_SHADER_INVOCATIONS_ARB /;"	d
GL_TESS_EVALUATION_SHADER_OES	./GL/glew.h	/^#define GL_TESS_EVALUATION_SHADER_OES /;"	d
GL_TESS_EVALUATION_SUBROUTINE	./GL/glew.h	/^#define GL_TESS_EVALUATION_SUBROUTINE /;"	d
GL_TESS_EVALUATION_SUBROUTINE_UNIFORM	./GL/glew.h	/^#define GL_TESS_EVALUATION_SUBROUTINE_UNIFORM /;"	d
GL_TESS_EVALUATION_TEXTURE	./GL/glew.h	/^#define GL_TESS_EVALUATION_TEXTURE /;"	d
GL_TESS_GEN_MODE	./GL/glew.h	/^#define GL_TESS_GEN_MODE /;"	d
GL_TESS_GEN_MODE_EXT	./GL/glew.h	/^#define GL_TESS_GEN_MODE_EXT /;"	d
GL_TESS_GEN_MODE_OES	./GL/glew.h	/^#define GL_TESS_GEN_MODE_OES /;"	d
GL_TESS_GEN_POINT_MODE	./GL/glew.h	/^#define GL_TESS_GEN_POINT_MODE /;"	d
GL_TESS_GEN_POINT_MODE_EXT	./GL/glew.h	/^#define GL_TESS_GEN_POINT_MODE_EXT /;"	d
GL_TESS_GEN_POINT_MODE_OES	./GL/glew.h	/^#define GL_TESS_GEN_POINT_MODE_OES /;"	d
GL_TESS_GEN_SPACING	./GL/glew.h	/^#define GL_TESS_GEN_SPACING /;"	d
GL_TESS_GEN_SPACING_EXT	./GL/glew.h	/^#define GL_TESS_GEN_SPACING_EXT /;"	d
GL_TESS_GEN_SPACING_OES	./GL/glew.h	/^#define GL_TESS_GEN_SPACING_OES /;"	d
GL_TESS_GEN_VERTEX_ORDER	./GL/glew.h	/^#define GL_TESS_GEN_VERTEX_ORDER /;"	d
GL_TESS_GEN_VERTEX_ORDER_EXT	./GL/glew.h	/^#define GL_TESS_GEN_VERTEX_ORDER_EXT /;"	d
GL_TESS_GEN_VERTEX_ORDER_OES	./GL/glew.h	/^#define GL_TESS_GEN_VERTEX_ORDER_OES /;"	d
GL_TEXCOORD1_BIT_PGI	./GL/glew.h	/^#define GL_TEXCOORD1_BIT_PGI /;"	d
GL_TEXCOORD2_BIT_PGI	./GL/glew.h	/^#define GL_TEXCOORD2_BIT_PGI /;"	d
GL_TEXCOORD3_BIT_PGI	./GL/glew.h	/^#define GL_TEXCOORD3_BIT_PGI /;"	d
GL_TEXCOORD4_BIT_PGI	./GL/glew.h	/^#define GL_TEXCOORD4_BIT_PGI /;"	d
GL_TEXTURE	./GL/glew.h	/^#define GL_TEXTURE /;"	d
GL_TEXTURE0	./GL/glew.h	/^#define GL_TEXTURE0 /;"	d
GL_TEXTURE0_ARB	./GL/glew.h	/^#define GL_TEXTURE0_ARB /;"	d
GL_TEXTURE0_SGIS	./GL/glew.h	/^#define GL_TEXTURE0_SGIS /;"	d
GL_TEXTURE1	./GL/glew.h	/^#define GL_TEXTURE1 /;"	d
GL_TEXTURE10	./GL/glew.h	/^#define GL_TEXTURE10 /;"	d
GL_TEXTURE10_ARB	./GL/glew.h	/^#define GL_TEXTURE10_ARB /;"	d
GL_TEXTURE11	./GL/glew.h	/^#define GL_TEXTURE11 /;"	d
GL_TEXTURE11_ARB	./GL/glew.h	/^#define GL_TEXTURE11_ARB /;"	d
GL_TEXTURE12	./GL/glew.h	/^#define GL_TEXTURE12 /;"	d
GL_TEXTURE12_ARB	./GL/glew.h	/^#define GL_TEXTURE12_ARB /;"	d
GL_TEXTURE13	./GL/glew.h	/^#define GL_TEXTURE13 /;"	d
GL_TEXTURE13_ARB	./GL/glew.h	/^#define GL_TEXTURE13_ARB /;"	d
GL_TEXTURE14	./GL/glew.h	/^#define GL_TEXTURE14 /;"	d
GL_TEXTURE14_ARB	./GL/glew.h	/^#define GL_TEXTURE14_ARB /;"	d
GL_TEXTURE15	./GL/glew.h	/^#define GL_TEXTURE15 /;"	d
GL_TEXTURE15_ARB	./GL/glew.h	/^#define GL_TEXTURE15_ARB /;"	d
GL_TEXTURE16	./GL/glew.h	/^#define GL_TEXTURE16 /;"	d
GL_TEXTURE16_ARB	./GL/glew.h	/^#define GL_TEXTURE16_ARB /;"	d
GL_TEXTURE17	./GL/glew.h	/^#define GL_TEXTURE17 /;"	d
GL_TEXTURE17_ARB	./GL/glew.h	/^#define GL_TEXTURE17_ARB /;"	d
GL_TEXTURE18	./GL/glew.h	/^#define GL_TEXTURE18 /;"	d
GL_TEXTURE18_ARB	./GL/glew.h	/^#define GL_TEXTURE18_ARB /;"	d
GL_TEXTURE19	./GL/glew.h	/^#define GL_TEXTURE19 /;"	d
GL_TEXTURE19_ARB	./GL/glew.h	/^#define GL_TEXTURE19_ARB /;"	d
GL_TEXTURE1_ARB	./GL/glew.h	/^#define GL_TEXTURE1_ARB /;"	d
GL_TEXTURE1_SGIS	./GL/glew.h	/^#define GL_TEXTURE1_SGIS /;"	d
GL_TEXTURE2	./GL/glew.h	/^#define GL_TEXTURE2 /;"	d
GL_TEXTURE20	./GL/glew.h	/^#define GL_TEXTURE20 /;"	d
GL_TEXTURE20_ARB	./GL/glew.h	/^#define GL_TEXTURE20_ARB /;"	d
GL_TEXTURE21	./GL/glew.h	/^#define GL_TEXTURE21 /;"	d
GL_TEXTURE21_ARB	./GL/glew.h	/^#define GL_TEXTURE21_ARB /;"	d
GL_TEXTURE22	./GL/glew.h	/^#define GL_TEXTURE22 /;"	d
GL_TEXTURE22_ARB	./GL/glew.h	/^#define GL_TEXTURE22_ARB /;"	d
GL_TEXTURE23	./GL/glew.h	/^#define GL_TEXTURE23 /;"	d
GL_TEXTURE23_ARB	./GL/glew.h	/^#define GL_TEXTURE23_ARB /;"	d
GL_TEXTURE24	./GL/glew.h	/^#define GL_TEXTURE24 /;"	d
GL_TEXTURE24_ARB	./GL/glew.h	/^#define GL_TEXTURE24_ARB /;"	d
GL_TEXTURE25	./GL/glew.h	/^#define GL_TEXTURE25 /;"	d
GL_TEXTURE25_ARB	./GL/glew.h	/^#define GL_TEXTURE25_ARB /;"	d
GL_TEXTURE26	./GL/glew.h	/^#define GL_TEXTURE26 /;"	d
GL_TEXTURE26_ARB	./GL/glew.h	/^#define GL_TEXTURE26_ARB /;"	d
GL_TEXTURE27	./GL/glew.h	/^#define GL_TEXTURE27 /;"	d
GL_TEXTURE27_ARB	./GL/glew.h	/^#define GL_TEXTURE27_ARB /;"	d
GL_TEXTURE28	./GL/glew.h	/^#define GL_TEXTURE28 /;"	d
GL_TEXTURE28_ARB	./GL/glew.h	/^#define GL_TEXTURE28_ARB /;"	d
GL_TEXTURE29	./GL/glew.h	/^#define GL_TEXTURE29 /;"	d
GL_TEXTURE29_ARB	./GL/glew.h	/^#define GL_TEXTURE29_ARB /;"	d
GL_TEXTURE2_ARB	./GL/glew.h	/^#define GL_TEXTURE2_ARB /;"	d
GL_TEXTURE2_SGIS	./GL/glew.h	/^#define GL_TEXTURE2_SGIS /;"	d
GL_TEXTURE3	./GL/glew.h	/^#define GL_TEXTURE3 /;"	d
GL_TEXTURE30	./GL/glew.h	/^#define GL_TEXTURE30 /;"	d
GL_TEXTURE30_ARB	./GL/glew.h	/^#define GL_TEXTURE30_ARB /;"	d
GL_TEXTURE31	./GL/glew.h	/^#define GL_TEXTURE31 /;"	d
GL_TEXTURE31_ARB	./GL/glew.h	/^#define GL_TEXTURE31_ARB /;"	d
GL_TEXTURE3_ARB	./GL/glew.h	/^#define GL_TEXTURE3_ARB /;"	d
GL_TEXTURE3_SGIS	./GL/glew.h	/^#define GL_TEXTURE3_SGIS /;"	d
GL_TEXTURE4	./GL/glew.h	/^#define GL_TEXTURE4 /;"	d
GL_TEXTURE4_ARB	./GL/glew.h	/^#define GL_TEXTURE4_ARB /;"	d
GL_TEXTURE5	./GL/glew.h	/^#define GL_TEXTURE5 /;"	d
GL_TEXTURE5_ARB	./GL/glew.h	/^#define GL_TEXTURE5_ARB /;"	d
GL_TEXTURE6	./GL/glew.h	/^#define GL_TEXTURE6 /;"	d
GL_TEXTURE6_ARB	./GL/glew.h	/^#define GL_TEXTURE6_ARB /;"	d
GL_TEXTURE7	./GL/glew.h	/^#define GL_TEXTURE7 /;"	d
GL_TEXTURE7_ARB	./GL/glew.h	/^#define GL_TEXTURE7_ARB /;"	d
GL_TEXTURE8	./GL/glew.h	/^#define GL_TEXTURE8 /;"	d
GL_TEXTURE8_ARB	./GL/glew.h	/^#define GL_TEXTURE8_ARB /;"	d
GL_TEXTURE9	./GL/glew.h	/^#define GL_TEXTURE9 /;"	d
GL_TEXTURE9_ARB	./GL/glew.h	/^#define GL_TEXTURE9_ARB /;"	d
GL_TEXTURE_1D	./GL/glew.h	/^#define GL_TEXTURE_1D /;"	d
GL_TEXTURE_1D_ARRAY	./GL/glew.h	/^#define GL_TEXTURE_1D_ARRAY /;"	d
GL_TEXTURE_1D_ARRAY_EXT	./GL/glew.h	/^#define GL_TEXTURE_1D_ARRAY_EXT /;"	d
GL_TEXTURE_1D_BINDING_EXT	./GL/glew.h	/^#define GL_TEXTURE_1D_BINDING_EXT /;"	d
GL_TEXTURE_1D_STACK_BINDING_MESAX	./GL/glew.h	/^#define GL_TEXTURE_1D_STACK_BINDING_MESAX /;"	d
GL_TEXTURE_1D_STACK_MESAX	./GL/glew.h	/^#define GL_TEXTURE_1D_STACK_MESAX /;"	d
GL_TEXTURE_2D	./GL/glew.h	/^#define GL_TEXTURE_2D /;"	d
GL_TEXTURE_2D_ARRAY	./GL/glew.h	/^#define GL_TEXTURE_2D_ARRAY /;"	d
GL_TEXTURE_2D_ARRAY_EXT	./GL/glew.h	/^#define GL_TEXTURE_2D_ARRAY_EXT /;"	d
GL_TEXTURE_2D_ARRAY_NV	./GL/glew.h	/^#define GL_TEXTURE_2D_ARRAY_NV /;"	d
GL_TEXTURE_2D_BINDING_EXT	./GL/glew.h	/^#define GL_TEXTURE_2D_BINDING_EXT /;"	d
GL_TEXTURE_2D_MULTISAMPLE	./GL/glew.h	/^#define GL_TEXTURE_2D_MULTISAMPLE /;"	d
GL_TEXTURE_2D_MULTISAMPLE_ARRAY	./GL/glew.h	/^#define GL_TEXTURE_2D_MULTISAMPLE_ARRAY /;"	d
GL_TEXTURE_2D_MULTISAMPLE_ARRAY_OES	./GL/glew.h	/^#define GL_TEXTURE_2D_MULTISAMPLE_ARRAY_OES /;"	d
GL_TEXTURE_2D_STACK_BINDING_MESAX	./GL/glew.h	/^#define GL_TEXTURE_2D_STACK_BINDING_MESAX /;"	d
GL_TEXTURE_2D_STACK_MESAX	./GL/glew.h	/^#define GL_TEXTURE_2D_STACK_MESAX /;"	d
GL_TEXTURE_3D	./GL/glew.h	/^#define GL_TEXTURE_3D /;"	d
GL_TEXTURE_3D_BINDING_EXT	./GL/glew.h	/^#define GL_TEXTURE_3D_BINDING_EXT /;"	d
GL_TEXTURE_3D_EXT	./GL/glew.h	/^#define GL_TEXTURE_3D_EXT /;"	d
GL_TEXTURE_3D_OES	./GL/glew.h	/^#define GL_TEXTURE_3D_OES /;"	d
GL_TEXTURE_ALPHA_MODULATE_IMG	./GL/glew.h	/^#define GL_TEXTURE_ALPHA_MODULATE_IMG /;"	d
GL_TEXTURE_ALPHA_SIZE	./GL/glew.h	/^#define GL_TEXTURE_ALPHA_SIZE /;"	d
GL_TEXTURE_ALPHA_SIZE_EXT	./GL/glew.h	/^#define GL_TEXTURE_ALPHA_SIZE_EXT /;"	d
GL_TEXTURE_ALPHA_TYPE	./GL/glew.h	/^#define GL_TEXTURE_ALPHA_TYPE /;"	d
GL_TEXTURE_ALPHA_TYPE_ARB	./GL/glew.h	/^#define GL_TEXTURE_ALPHA_TYPE_ARB /;"	d
GL_TEXTURE_APPLICATION_MODE_EXT	./GL/glew.h	/^#define GL_TEXTURE_APPLICATION_MODE_EXT /;"	d
GL_TEXTURE_ASTC_DECODE_PRECISION_EXT	./GL/glew.h	/^#define GL_TEXTURE_ASTC_DECODE_PRECISION_EXT /;"	d
GL_TEXTURE_BASE_LEVEL	./GL/glew.h	/^#define GL_TEXTURE_BASE_LEVEL /;"	d
GL_TEXTURE_BASE_LEVEL_SGIS	./GL/glew.h	/^#define GL_TEXTURE_BASE_LEVEL_SGIS /;"	d
GL_TEXTURE_BINDING_1D	./GL/glew.h	/^#define GL_TEXTURE_BINDING_1D /;"	d
GL_TEXTURE_BINDING_1D_ARRAY	./GL/glew.h	/^#define GL_TEXTURE_BINDING_1D_ARRAY /;"	d
GL_TEXTURE_BINDING_1D_ARRAY_EXT	./GL/glew.h	/^#define GL_TEXTURE_BINDING_1D_ARRAY_EXT /;"	d
GL_TEXTURE_BINDING_2D	./GL/glew.h	/^#define GL_TEXTURE_BINDING_2D /;"	d
GL_TEXTURE_BINDING_2D_ARRAY	./GL/glew.h	/^#define GL_TEXTURE_BINDING_2D_ARRAY /;"	d
GL_TEXTURE_BINDING_2D_ARRAY_EXT	./GL/glew.h	/^#define GL_TEXTURE_BINDING_2D_ARRAY_EXT /;"	d
GL_TEXTURE_BINDING_2D_ARRAY_NV	./GL/glew.h	/^#define GL_TEXTURE_BINDING_2D_ARRAY_NV /;"	d
GL_TEXTURE_BINDING_2D_MULTISAMPLE	./GL/glew.h	/^#define GL_TEXTURE_BINDING_2D_MULTISAMPLE /;"	d
GL_TEXTURE_BINDING_2D_MULTISAMPLE_ARRAY	./GL/glew.h	/^#define GL_TEXTURE_BINDING_2D_MULTISAMPLE_ARRAY /;"	d
GL_TEXTURE_BINDING_2D_MULTISAMPLE_ARRAY_OES	./GL/glew.h	/^#define GL_TEXTURE_BINDING_2D_MULTISAMPLE_ARRAY_OES /;"	d
GL_TEXTURE_BINDING_3D	./GL/glew.h	/^#define GL_TEXTURE_BINDING_3D /;"	d
GL_TEXTURE_BINDING_3D_OES	./GL/glew.h	/^#define GL_TEXTURE_BINDING_3D_OES /;"	d
GL_TEXTURE_BINDING_BUFFER	./GL/glew.h	/^#define GL_TEXTURE_BINDING_BUFFER /;"	d
GL_TEXTURE_BINDING_BUFFER_ARB	./GL/glew.h	/^#define GL_TEXTURE_BINDING_BUFFER_ARB /;"	d
GL_TEXTURE_BINDING_BUFFER_EXT	./GL/glew.h	/^#define GL_TEXTURE_BINDING_BUFFER_EXT /;"	d
GL_TEXTURE_BINDING_BUFFER_OES	./GL/glew.h	/^#define GL_TEXTURE_BINDING_BUFFER_OES /;"	d
GL_TEXTURE_BINDING_CUBE_MAP	./GL/glew.h	/^#define GL_TEXTURE_BINDING_CUBE_MAP /;"	d
GL_TEXTURE_BINDING_CUBE_MAP_ARB	./GL/glew.h	/^#define GL_TEXTURE_BINDING_CUBE_MAP_ARB /;"	d
GL_TEXTURE_BINDING_CUBE_MAP_ARRAY	./GL/glew.h	/^#define GL_TEXTURE_BINDING_CUBE_MAP_ARRAY /;"	d
GL_TEXTURE_BINDING_CUBE_MAP_ARRAY_ARB	./GL/glew.h	/^#define GL_TEXTURE_BINDING_CUBE_MAP_ARRAY_ARB /;"	d
GL_TEXTURE_BINDING_CUBE_MAP_ARRAY_EXT	./GL/glew.h	/^#define GL_TEXTURE_BINDING_CUBE_MAP_ARRAY_EXT /;"	d
GL_TEXTURE_BINDING_CUBE_MAP_ARRAY_OES	./GL/glew.h	/^#define GL_TEXTURE_BINDING_CUBE_MAP_ARRAY_OES /;"	d
GL_TEXTURE_BINDING_CUBE_MAP_EXT	./GL/glew.h	/^#define GL_TEXTURE_BINDING_CUBE_MAP_EXT /;"	d
GL_TEXTURE_BINDING_CUBE_MAP_OES	./GL/glew.h	/^#define GL_TEXTURE_BINDING_CUBE_MAP_OES /;"	d
GL_TEXTURE_BINDING_EXTERNAL_OES	./GL/glew.h	/^#define GL_TEXTURE_BINDING_EXTERNAL_OES /;"	d
GL_TEXTURE_BINDING_RECTANGLE	./GL/glew.h	/^#define GL_TEXTURE_BINDING_RECTANGLE /;"	d
GL_TEXTURE_BINDING_RECTANGLE_ARB	./GL/glew.h	/^#define GL_TEXTURE_BINDING_RECTANGLE_ARB /;"	d
GL_TEXTURE_BINDING_RECTANGLE_EXT	./GL/glew.h	/^#define GL_TEXTURE_BINDING_RECTANGLE_EXT /;"	d
GL_TEXTURE_BINDING_RECTANGLE_NV	./GL/glew.h	/^#define GL_TEXTURE_BINDING_RECTANGLE_NV /;"	d
GL_TEXTURE_BINDING_RENDERBUFFER_NV	./GL/glew.h	/^#define GL_TEXTURE_BINDING_RENDERBUFFER_NV /;"	d
GL_TEXTURE_BIT	./GL/glew.h	/^#define GL_TEXTURE_BIT /;"	d
GL_TEXTURE_BLUE_SIZE	./GL/glew.h	/^#define GL_TEXTURE_BLUE_SIZE /;"	d
GL_TEXTURE_BLUE_SIZE_EXT	./GL/glew.h	/^#define GL_TEXTURE_BLUE_SIZE_EXT /;"	d
GL_TEXTURE_BLUE_TYPE	./GL/glew.h	/^#define GL_TEXTURE_BLUE_TYPE /;"	d
GL_TEXTURE_BLUE_TYPE_ARB	./GL/glew.h	/^#define GL_TEXTURE_BLUE_TYPE_ARB /;"	d
GL_TEXTURE_BORDER	./GL/glew.h	/^#define GL_TEXTURE_BORDER /;"	d
GL_TEXTURE_BORDER_COLOR	./GL/glew.h	/^#define GL_TEXTURE_BORDER_COLOR /;"	d
GL_TEXTURE_BORDER_COLOR_EXT	./GL/glew.h	/^#define GL_TEXTURE_BORDER_COLOR_EXT /;"	d
GL_TEXTURE_BORDER_COLOR_NV	./GL/glew.h	/^#define GL_TEXTURE_BORDER_COLOR_NV /;"	d
GL_TEXTURE_BORDER_COLOR_OES	./GL/glew.h	/^#define GL_TEXTURE_BORDER_COLOR_OES /;"	d
GL_TEXTURE_BORDER_VALUES_NV	./GL/glew.h	/^#define GL_TEXTURE_BORDER_VALUES_NV /;"	d
GL_TEXTURE_BUFFER	./GL/glew.h	/^#define GL_TEXTURE_BUFFER /;"	d
GL_TEXTURE_BUFFER_ARB	./GL/glew.h	/^#define GL_TEXTURE_BUFFER_ARB /;"	d
GL_TEXTURE_BUFFER_BINDING	./GL/glew.h	/^#define GL_TEXTURE_BUFFER_BINDING /;"	d
GL_TEXTURE_BUFFER_BINDING_EXT	./GL/glew.h	/^#define GL_TEXTURE_BUFFER_BINDING_EXT /;"	d
GL_TEXTURE_BUFFER_BINDING_OES	./GL/glew.h	/^#define GL_TEXTURE_BUFFER_BINDING_OES /;"	d
GL_TEXTURE_BUFFER_DATA_STORE_BINDING	./GL/glew.h	/^#define GL_TEXTURE_BUFFER_DATA_STORE_BINDING /;"	d
GL_TEXTURE_BUFFER_DATA_STORE_BINDING_ARB	./GL/glew.h	/^#define GL_TEXTURE_BUFFER_DATA_STORE_BINDING_ARB /;"	d
GL_TEXTURE_BUFFER_DATA_STORE_BINDING_EXT	./GL/glew.h	/^#define GL_TEXTURE_BUFFER_DATA_STORE_BINDING_EXT /;"	d
GL_TEXTURE_BUFFER_DATA_STORE_BINDING_OES	./GL/glew.h	/^#define GL_TEXTURE_BUFFER_DATA_STORE_BINDING_OES /;"	d
GL_TEXTURE_BUFFER_EXT	./GL/glew.h	/^#define GL_TEXTURE_BUFFER_EXT /;"	d
GL_TEXTURE_BUFFER_FORMAT	./GL/glew.h	/^#define GL_TEXTURE_BUFFER_FORMAT /;"	d
GL_TEXTURE_BUFFER_FORMAT_ARB	./GL/glew.h	/^#define GL_TEXTURE_BUFFER_FORMAT_ARB /;"	d
GL_TEXTURE_BUFFER_FORMAT_EXT	./GL/glew.h	/^#define GL_TEXTURE_BUFFER_FORMAT_EXT /;"	d
GL_TEXTURE_BUFFER_OES	./GL/glew.h	/^#define GL_TEXTURE_BUFFER_OES /;"	d
GL_TEXTURE_BUFFER_OFFSET	./GL/glew.h	/^#define GL_TEXTURE_BUFFER_OFFSET /;"	d
GL_TEXTURE_BUFFER_OFFSET_ALIGNMENT	./GL/glew.h	/^#define GL_TEXTURE_BUFFER_OFFSET_ALIGNMENT /;"	d
GL_TEXTURE_BUFFER_OFFSET_ALIGNMENT_EXT	./GL/glew.h	/^#define GL_TEXTURE_BUFFER_OFFSET_ALIGNMENT_EXT /;"	d
GL_TEXTURE_BUFFER_OFFSET_ALIGNMENT_OES	./GL/glew.h	/^#define GL_TEXTURE_BUFFER_OFFSET_ALIGNMENT_OES /;"	d
GL_TEXTURE_BUFFER_OFFSET_EXT	./GL/glew.h	/^#define GL_TEXTURE_BUFFER_OFFSET_EXT /;"	d
GL_TEXTURE_BUFFER_OFFSET_OES	./GL/glew.h	/^#define GL_TEXTURE_BUFFER_OFFSET_OES /;"	d
GL_TEXTURE_BUFFER_SIZE	./GL/glew.h	/^#define GL_TEXTURE_BUFFER_SIZE /;"	d
GL_TEXTURE_BUFFER_SIZE_EXT	./GL/glew.h	/^#define GL_TEXTURE_BUFFER_SIZE_EXT /;"	d
GL_TEXTURE_BUFFER_SIZE_OES	./GL/glew.h	/^#define GL_TEXTURE_BUFFER_SIZE_OES /;"	d
GL_TEXTURE_COLOR_SAMPLES_NV	./GL/glew.h	/^#define GL_TEXTURE_COLOR_SAMPLES_NV /;"	d
GL_TEXTURE_COLOR_TABLE_SGI	./GL/glew.h	/^#define GL_TEXTURE_COLOR_TABLE_SGI /;"	d
GL_TEXTURE_COMPARE_FAIL_VALUE_ARB	./GL/glew.h	/^#define GL_TEXTURE_COMPARE_FAIL_VALUE_ARB /;"	d
GL_TEXTURE_COMPARE_FUNC	./GL/glew.h	/^#define GL_TEXTURE_COMPARE_FUNC /;"	d
GL_TEXTURE_COMPARE_FUNC_ARB	./GL/glew.h	/^#define GL_TEXTURE_COMPARE_FUNC_ARB /;"	d
GL_TEXTURE_COMPARE_FUNC_EXT	./GL/glew.h	/^#define GL_TEXTURE_COMPARE_FUNC_EXT /;"	d
GL_TEXTURE_COMPARE_MODE	./GL/glew.h	/^#define GL_TEXTURE_COMPARE_MODE /;"	d
GL_TEXTURE_COMPARE_MODE_ARB	./GL/glew.h	/^#define GL_TEXTURE_COMPARE_MODE_ARB /;"	d
GL_TEXTURE_COMPARE_MODE_EXT	./GL/glew.h	/^#define GL_TEXTURE_COMPARE_MODE_EXT /;"	d
GL_TEXTURE_COMPARE_OPERATOR_SGIX	./GL/glew.h	/^#define GL_TEXTURE_COMPARE_OPERATOR_SGIX /;"	d
GL_TEXTURE_COMPARE_SGIX	./GL/glew.h	/^#define GL_TEXTURE_COMPARE_SGIX /;"	d
GL_TEXTURE_COMPONENTS	./GL/glew.h	/^#define GL_TEXTURE_COMPONENTS /;"	d
GL_TEXTURE_COMPRESSED	./GL/glew.h	/^#define GL_TEXTURE_COMPRESSED /;"	d
GL_TEXTURE_COMPRESSED_ARB	./GL/glew.h	/^#define GL_TEXTURE_COMPRESSED_ARB /;"	d
GL_TEXTURE_COMPRESSED_BLOCK_HEIGHT	./GL/glew.h	/^#define GL_TEXTURE_COMPRESSED_BLOCK_HEIGHT /;"	d
GL_TEXTURE_COMPRESSED_BLOCK_SIZE	./GL/glew.h	/^#define GL_TEXTURE_COMPRESSED_BLOCK_SIZE /;"	d
GL_TEXTURE_COMPRESSED_BLOCK_WIDTH	./GL/glew.h	/^#define GL_TEXTURE_COMPRESSED_BLOCK_WIDTH /;"	d
GL_TEXTURE_COMPRESSED_IMAGE_SIZE	./GL/glew.h	/^#define GL_TEXTURE_COMPRESSED_IMAGE_SIZE /;"	d
GL_TEXTURE_COMPRESSED_IMAGE_SIZE_ARB	./GL/glew.h	/^#define GL_TEXTURE_COMPRESSED_IMAGE_SIZE_ARB /;"	d
GL_TEXTURE_COMPRESSION_HINT	./GL/glew.h	/^#define GL_TEXTURE_COMPRESSION_HINT /;"	d
GL_TEXTURE_COMPRESSION_HINT_ARB	./GL/glew.h	/^#define GL_TEXTURE_COMPRESSION_HINT_ARB /;"	d
GL_TEXTURE_CONSTANT_DATA_SUNX	./GL/glew.h	/^#define GL_TEXTURE_CONSTANT_DATA_SUNX /;"	d
GL_TEXTURE_COORD_ARRAY	./GL/glew.h	/^#define GL_TEXTURE_COORD_ARRAY /;"	d
GL_TEXTURE_COORD_ARRAY_ADDRESS_NV	./GL/glew.h	/^#define GL_TEXTURE_COORD_ARRAY_ADDRESS_NV /;"	d
GL_TEXTURE_COORD_ARRAY_BUFFER_BINDING	./GL/glew.h	/^#define GL_TEXTURE_COORD_ARRAY_BUFFER_BINDING /;"	d
GL_TEXTURE_COORD_ARRAY_BUFFER_BINDING_ARB	./GL/glew.h	/^#define GL_TEXTURE_COORD_ARRAY_BUFFER_BINDING_ARB /;"	d
GL_TEXTURE_COORD_ARRAY_COUNT_EXT	./GL/glew.h	/^#define GL_TEXTURE_COORD_ARRAY_COUNT_EXT /;"	d
GL_TEXTURE_COORD_ARRAY_EXT	./GL/glew.h	/^#define GL_TEXTURE_COORD_ARRAY_EXT /;"	d
GL_TEXTURE_COORD_ARRAY_LENGTH_NV	./GL/glew.h	/^#define GL_TEXTURE_COORD_ARRAY_LENGTH_NV /;"	d
GL_TEXTURE_COORD_ARRAY_LIST_IBM	./GL/glew.h	/^#define GL_TEXTURE_COORD_ARRAY_LIST_IBM /;"	d
GL_TEXTURE_COORD_ARRAY_LIST_STRIDE_IBM	./GL/glew.h	/^#define GL_TEXTURE_COORD_ARRAY_LIST_STRIDE_IBM /;"	d
GL_TEXTURE_COORD_ARRAY_PARALLEL_POINTERS_INTEL	./GL/glew.h	/^#define GL_TEXTURE_COORD_ARRAY_PARALLEL_POINTERS_INTEL /;"	d
GL_TEXTURE_COORD_ARRAY_POINTER	./GL/glew.h	/^#define GL_TEXTURE_COORD_ARRAY_POINTER /;"	d
GL_TEXTURE_COORD_ARRAY_POINTER_EXT	./GL/glew.h	/^#define GL_TEXTURE_COORD_ARRAY_POINTER_EXT /;"	d
GL_TEXTURE_COORD_ARRAY_SIZE	./GL/glew.h	/^#define GL_TEXTURE_COORD_ARRAY_SIZE /;"	d
GL_TEXTURE_COORD_ARRAY_SIZE_EXT	./GL/glew.h	/^#define GL_TEXTURE_COORD_ARRAY_SIZE_EXT /;"	d
GL_TEXTURE_COORD_ARRAY_STRIDE	./GL/glew.h	/^#define GL_TEXTURE_COORD_ARRAY_STRIDE /;"	d
GL_TEXTURE_COORD_ARRAY_STRIDE_EXT	./GL/glew.h	/^#define GL_TEXTURE_COORD_ARRAY_STRIDE_EXT /;"	d
GL_TEXTURE_COORD_ARRAY_TYPE	./GL/glew.h	/^#define GL_TEXTURE_COORD_ARRAY_TYPE /;"	d
GL_TEXTURE_COORD_ARRAY_TYPE_EXT	./GL/glew.h	/^#define GL_TEXTURE_COORD_ARRAY_TYPE_EXT /;"	d
GL_TEXTURE_COORD_NV	./GL/glew.h	/^#define GL_TEXTURE_COORD_NV /;"	d
GL_TEXTURE_COORD_SET_INTERLEAVE_FACTOR_SGIS	./GL/glew.h	/^#define GL_TEXTURE_COORD_SET_INTERLEAVE_FACTOR_SGIS /;"	d
GL_TEXTURE_COVERAGE_SAMPLES_NV	./GL/glew.h	/^#define GL_TEXTURE_COVERAGE_SAMPLES_NV /;"	d
GL_TEXTURE_CROP_RECT_OES	./GL/glew.h	/^#define GL_TEXTURE_CROP_RECT_OES /;"	d
GL_TEXTURE_CUBE_MAP	./GL/glew.h	/^#define GL_TEXTURE_CUBE_MAP /;"	d
GL_TEXTURE_CUBE_MAP_ARB	./GL/glew.h	/^#define GL_TEXTURE_CUBE_MAP_ARB /;"	d
GL_TEXTURE_CUBE_MAP_ARRAY	./GL/glew.h	/^#define GL_TEXTURE_CUBE_MAP_ARRAY /;"	d
GL_TEXTURE_CUBE_MAP_ARRAY_ARB	./GL/glew.h	/^#define GL_TEXTURE_CUBE_MAP_ARRAY_ARB /;"	d
GL_TEXTURE_CUBE_MAP_ARRAY_EXT	./GL/glew.h	/^#define GL_TEXTURE_CUBE_MAP_ARRAY_EXT /;"	d
GL_TEXTURE_CUBE_MAP_ARRAY_OES	./GL/glew.h	/^#define GL_TEXTURE_CUBE_MAP_ARRAY_OES /;"	d
GL_TEXTURE_CUBE_MAP_EXT	./GL/glew.h	/^#define GL_TEXTURE_CUBE_MAP_EXT /;"	d
GL_TEXTURE_CUBE_MAP_NEGATIVE_X	./GL/glew.h	/^#define GL_TEXTURE_CUBE_MAP_NEGATIVE_X /;"	d
GL_TEXTURE_CUBE_MAP_NEGATIVE_X_ARB	./GL/glew.h	/^#define GL_TEXTURE_CUBE_MAP_NEGATIVE_X_ARB /;"	d
GL_TEXTURE_CUBE_MAP_NEGATIVE_X_EXT	./GL/glew.h	/^#define GL_TEXTURE_CUBE_MAP_NEGATIVE_X_EXT /;"	d
GL_TEXTURE_CUBE_MAP_NEGATIVE_X_OES	./GL/glew.h	/^#define GL_TEXTURE_CUBE_MAP_NEGATIVE_X_OES /;"	d
GL_TEXTURE_CUBE_MAP_NEGATIVE_Y	./GL/glew.h	/^#define GL_TEXTURE_CUBE_MAP_NEGATIVE_Y /;"	d
GL_TEXTURE_CUBE_MAP_NEGATIVE_Y_ARB	./GL/glew.h	/^#define GL_TEXTURE_CUBE_MAP_NEGATIVE_Y_ARB /;"	d
GL_TEXTURE_CUBE_MAP_NEGATIVE_Y_EXT	./GL/glew.h	/^#define GL_TEXTURE_CUBE_MAP_NEGATIVE_Y_EXT /;"	d
GL_TEXTURE_CUBE_MAP_NEGATIVE_Y_OES	./GL/glew.h	/^#define GL_TEXTURE_CUBE_MAP_NEGATIVE_Y_OES /;"	d
GL_TEXTURE_CUBE_MAP_NEGATIVE_Z	./GL/glew.h	/^#define GL_TEXTURE_CUBE_MAP_NEGATIVE_Z /;"	d
GL_TEXTURE_CUBE_MAP_NEGATIVE_Z_ARB	./GL/glew.h	/^#define GL_TEXTURE_CUBE_MAP_NEGATIVE_Z_ARB /;"	d
GL_TEXTURE_CUBE_MAP_NEGATIVE_Z_EXT	./GL/glew.h	/^#define GL_TEXTURE_CUBE_MAP_NEGATIVE_Z_EXT /;"	d
GL_TEXTURE_CUBE_MAP_NEGATIVE_Z_OES	./GL/glew.h	/^#define GL_TEXTURE_CUBE_MAP_NEGATIVE_Z_OES /;"	d
GL_TEXTURE_CUBE_MAP_OES	./GL/glew.h	/^#define GL_TEXTURE_CUBE_MAP_OES /;"	d
GL_TEXTURE_CUBE_MAP_POSITIVE_X	./GL/glew.h	/^#define GL_TEXTURE_CUBE_MAP_POSITIVE_X /;"	d
GL_TEXTURE_CUBE_MAP_POSITIVE_X_ARB	./GL/glew.h	/^#define GL_TEXTURE_CUBE_MAP_POSITIVE_X_ARB /;"	d
GL_TEXTURE_CUBE_MAP_POSITIVE_X_EXT	./GL/glew.h	/^#define GL_TEXTURE_CUBE_MAP_POSITIVE_X_EXT /;"	d
GL_TEXTURE_CUBE_MAP_POSITIVE_X_OES	./GL/glew.h	/^#define GL_TEXTURE_CUBE_MAP_POSITIVE_X_OES /;"	d
GL_TEXTURE_CUBE_MAP_POSITIVE_Y	./GL/glew.h	/^#define GL_TEXTURE_CUBE_MAP_POSITIVE_Y /;"	d
GL_TEXTURE_CUBE_MAP_POSITIVE_Y_ARB	./GL/glew.h	/^#define GL_TEXTURE_CUBE_MAP_POSITIVE_Y_ARB /;"	d
GL_TEXTURE_CUBE_MAP_POSITIVE_Y_EXT	./GL/glew.h	/^#define GL_TEXTURE_CUBE_MAP_POSITIVE_Y_EXT /;"	d
GL_TEXTURE_CUBE_MAP_POSITIVE_Y_OES	./GL/glew.h	/^#define GL_TEXTURE_CUBE_MAP_POSITIVE_Y_OES /;"	d
GL_TEXTURE_CUBE_MAP_POSITIVE_Z	./GL/glew.h	/^#define GL_TEXTURE_CUBE_MAP_POSITIVE_Z /;"	d
GL_TEXTURE_CUBE_MAP_POSITIVE_Z_ARB	./GL/glew.h	/^#define GL_TEXTURE_CUBE_MAP_POSITIVE_Z_ARB /;"	d
GL_TEXTURE_CUBE_MAP_POSITIVE_Z_EXT	./GL/glew.h	/^#define GL_TEXTURE_CUBE_MAP_POSITIVE_Z_EXT /;"	d
GL_TEXTURE_CUBE_MAP_POSITIVE_Z_OES	./GL/glew.h	/^#define GL_TEXTURE_CUBE_MAP_POSITIVE_Z_OES /;"	d
GL_TEXTURE_CUBE_MAP_SEAMLESS	./GL/glew.h	/^#define GL_TEXTURE_CUBE_MAP_SEAMLESS /;"	d
GL_TEXTURE_DEFORMATION_BIT_SGIX	./GL/glew.h	/^#define GL_TEXTURE_DEFORMATION_BIT_SGIX /;"	d
GL_TEXTURE_DEPTH	./GL/glew.h	/^#define GL_TEXTURE_DEPTH /;"	d
GL_TEXTURE_DEPTH_EXT	./GL/glew.h	/^#define GL_TEXTURE_DEPTH_EXT /;"	d
GL_TEXTURE_DEPTH_QCOM	./GL/glew.h	/^#define GL_TEXTURE_DEPTH_QCOM /;"	d
GL_TEXTURE_DEPTH_SIZE	./GL/glew.h	/^#define GL_TEXTURE_DEPTH_SIZE /;"	d
GL_TEXTURE_DEPTH_SIZE_ARB	./GL/glew.h	/^#define GL_TEXTURE_DEPTH_SIZE_ARB /;"	d
GL_TEXTURE_DEPTH_TYPE	./GL/glew.h	/^#define GL_TEXTURE_DEPTH_TYPE /;"	d
GL_TEXTURE_DEPTH_TYPE_ARB	./GL/glew.h	/^#define GL_TEXTURE_DEPTH_TYPE_ARB /;"	d
GL_TEXTURE_DS_SIZE_NV	./GL/glew.h	/^#define GL_TEXTURE_DS_SIZE_NV /;"	d
GL_TEXTURE_DT_SIZE_NV	./GL/glew.h	/^#define GL_TEXTURE_DT_SIZE_NV /;"	d
GL_TEXTURE_ENV	./GL/glew.h	/^#define GL_TEXTURE_ENV /;"	d
GL_TEXTURE_ENV_COLOR	./GL/glew.h	/^#define GL_TEXTURE_ENV_COLOR /;"	d
GL_TEXTURE_ENV_COORD_SET_SGIS	./GL/glew.h	/^#define GL_TEXTURE_ENV_COORD_SET_SGIS /;"	d
GL_TEXTURE_ENV_MODE	./GL/glew.h	/^#define GL_TEXTURE_ENV_MODE /;"	d
GL_TEXTURE_EXTERNAL_OES	./GL/glew.h	/^#define GL_TEXTURE_EXTERNAL_OES /;"	d
GL_TEXTURE_FETCH_BARRIER_BIT	./GL/glew.h	/^#define GL_TEXTURE_FETCH_BARRIER_BIT /;"	d
GL_TEXTURE_FETCH_BARRIER_BIT_EXT	./GL/glew.h	/^#define GL_TEXTURE_FETCH_BARRIER_BIT_EXT /;"	d
GL_TEXTURE_FILTER_CONTROL	./GL/glew.h	/^#define GL_TEXTURE_FILTER_CONTROL /;"	d
GL_TEXTURE_FILTER_CONTROL_EXT	./GL/glew.h	/^#define GL_TEXTURE_FILTER_CONTROL_EXT /;"	d
GL_TEXTURE_FIXED_SAMPLE_LOCATIONS	./GL/glew.h	/^#define GL_TEXTURE_FIXED_SAMPLE_LOCATIONS /;"	d
GL_TEXTURE_FLOAT_COMPONENTS_NV	./GL/glew.h	/^#define GL_TEXTURE_FLOAT_COMPONENTS_NV /;"	d
GL_TEXTURE_FORMAT_QCOM	./GL/glew.h	/^#define GL_TEXTURE_FORMAT_QCOM /;"	d
GL_TEXTURE_FORMAT_SRGB_OVERRIDE_EXT	./GL/glew.h	/^#define GL_TEXTURE_FORMAT_SRGB_OVERRIDE_EXT /;"	d
GL_TEXTURE_FOVEATED_FEATURE_BITS_QCOM	./GL/glew.h	/^#define GL_TEXTURE_FOVEATED_FEATURE_BITS_QCOM /;"	d
GL_TEXTURE_FOVEATED_FEATURE_QUERY_QCOM	./GL/glew.h	/^#define GL_TEXTURE_FOVEATED_FEATURE_QUERY_QCOM /;"	d
GL_TEXTURE_FOVEATED_MIN_PIXEL_DENSITY_QCOM	./GL/glew.h	/^#define GL_TEXTURE_FOVEATED_MIN_PIXEL_DENSITY_QCOM /;"	d
GL_TEXTURE_FOVEATED_NUM_FOCAL_POINTS_QUERY_QCOM	./GL/glew.h	/^#define GL_TEXTURE_FOVEATED_NUM_FOCAL_POINTS_QUERY_QCOM /;"	d
GL_TEXTURE_FREE_MEMORY_ATI	./GL/glew.h	/^#define GL_TEXTURE_FREE_MEMORY_ATI /;"	d
GL_TEXTURE_GATHER	./GL/glew.h	/^#define GL_TEXTURE_GATHER /;"	d
GL_TEXTURE_GATHER_SHADOW	./GL/glew.h	/^#define GL_TEXTURE_GATHER_SHADOW /;"	d
GL_TEXTURE_GEN_MODE	./GL/glew.h	/^#define GL_TEXTURE_GEN_MODE /;"	d
GL_TEXTURE_GEN_MODE_OES	./GL/glew.h	/^#define GL_TEXTURE_GEN_MODE_OES /;"	d
GL_TEXTURE_GEN_Q	./GL/glew.h	/^#define GL_TEXTURE_GEN_Q /;"	d
GL_TEXTURE_GEN_R	./GL/glew.h	/^#define GL_TEXTURE_GEN_R /;"	d
GL_TEXTURE_GEN_S	./GL/glew.h	/^#define GL_TEXTURE_GEN_S /;"	d
GL_TEXTURE_GEN_STR_OES	./GL/glew.h	/^#define GL_TEXTURE_GEN_STR_OES /;"	d
GL_TEXTURE_GEN_T	./GL/glew.h	/^#define GL_TEXTURE_GEN_T /;"	d
GL_TEXTURE_GEQUAL_R_SGIX	./GL/glew.h	/^#define GL_TEXTURE_GEQUAL_R_SGIX /;"	d
GL_TEXTURE_GREEN_SIZE	./GL/glew.h	/^#define GL_TEXTURE_GREEN_SIZE /;"	d
GL_TEXTURE_GREEN_SIZE_EXT	./GL/glew.h	/^#define GL_TEXTURE_GREEN_SIZE_EXT /;"	d
GL_TEXTURE_GREEN_TYPE	./GL/glew.h	/^#define GL_TEXTURE_GREEN_TYPE /;"	d
GL_TEXTURE_GREEN_TYPE_ARB	./GL/glew.h	/^#define GL_TEXTURE_GREEN_TYPE_ARB /;"	d
GL_TEXTURE_HEIGHT	./GL/glew.h	/^#define GL_TEXTURE_HEIGHT /;"	d
GL_TEXTURE_HEIGHT_QCOM	./GL/glew.h	/^#define GL_TEXTURE_HEIGHT_QCOM /;"	d
GL_TEXTURE_HI_SIZE_NV	./GL/glew.h	/^#define GL_TEXTURE_HI_SIZE_NV /;"	d
GL_TEXTURE_IMAGE_FORMAT	./GL/glew.h	/^#define GL_TEXTURE_IMAGE_FORMAT /;"	d
GL_TEXTURE_IMAGE_TYPE	./GL/glew.h	/^#define GL_TEXTURE_IMAGE_TYPE /;"	d
GL_TEXTURE_IMAGE_VALID_QCOM	./GL/glew.h	/^#define GL_TEXTURE_IMAGE_VALID_QCOM /;"	d
GL_TEXTURE_IMMUTABLE_FORMAT	./GL/glew.h	/^#define GL_TEXTURE_IMMUTABLE_FORMAT /;"	d
GL_TEXTURE_IMMUTABLE_FORMAT_EXT	./GL/glew.h	/^#define GL_TEXTURE_IMMUTABLE_FORMAT_EXT /;"	d
GL_TEXTURE_IMMUTABLE_LEVELS	./GL/glew.h	/^#define GL_TEXTURE_IMMUTABLE_LEVELS /;"	d
GL_TEXTURE_INDEX_SIZE_EXT	./GL/glew.h	/^#define GL_TEXTURE_INDEX_SIZE_EXT /;"	d
GL_TEXTURE_INTENSITY_SIZE	./GL/glew.h	/^#define GL_TEXTURE_INTENSITY_SIZE /;"	d
GL_TEXTURE_INTENSITY_SIZE_EXT	./GL/glew.h	/^#define GL_TEXTURE_INTENSITY_SIZE_EXT /;"	d
GL_TEXTURE_INTENSITY_TYPE	./GL/glew.h	/^#define GL_TEXTURE_INTENSITY_TYPE /;"	d
GL_TEXTURE_INTENSITY_TYPE_ARB	./GL/glew.h	/^#define GL_TEXTURE_INTENSITY_TYPE_ARB /;"	d
GL_TEXTURE_INTERNAL_FORMAT	./GL/glew.h	/^#define GL_TEXTURE_INTERNAL_FORMAT /;"	d
GL_TEXTURE_INTERNAL_FORMAT_QCOM	./GL/glew.h	/^#define GL_TEXTURE_INTERNAL_FORMAT_QCOM /;"	d
GL_TEXTURE_LEQUAL_R_SGIX	./GL/glew.h	/^#define GL_TEXTURE_LEQUAL_R_SGIX /;"	d
GL_TEXTURE_LIGHT_EXT	./GL/glew.h	/^#define GL_TEXTURE_LIGHT_EXT /;"	d
GL_TEXTURE_LOD_BIAS	./GL/glew.h	/^#define GL_TEXTURE_LOD_BIAS /;"	d
GL_TEXTURE_LOD_BIAS_EXT	./GL/glew.h	/^#define GL_TEXTURE_LOD_BIAS_EXT /;"	d
GL_TEXTURE_LO_SIZE_NV	./GL/glew.h	/^#define GL_TEXTURE_LO_SIZE_NV /;"	d
GL_TEXTURE_LUMINANCE_SIZE	./GL/glew.h	/^#define GL_TEXTURE_LUMINANCE_SIZE /;"	d
GL_TEXTURE_LUMINANCE_SIZE_EXT	./GL/glew.h	/^#define GL_TEXTURE_LUMINANCE_SIZE_EXT /;"	d
GL_TEXTURE_LUMINANCE_TYPE	./GL/glew.h	/^#define GL_TEXTURE_LUMINANCE_TYPE /;"	d
GL_TEXTURE_LUMINANCE_TYPE_ARB	./GL/glew.h	/^#define GL_TEXTURE_LUMINANCE_TYPE_ARB /;"	d
GL_TEXTURE_MAG_FILTER	./GL/glew.h	/^#define GL_TEXTURE_MAG_FILTER /;"	d
GL_TEXTURE_MAG_SIZE_NV	./GL/glew.h	/^#define GL_TEXTURE_MAG_SIZE_NV /;"	d
GL_TEXTURE_MATERIAL_FACE_EXT	./GL/glew.h	/^#define GL_TEXTURE_MATERIAL_FACE_EXT /;"	d
GL_TEXTURE_MATERIAL_PARAMETER_EXT	./GL/glew.h	/^#define GL_TEXTURE_MATERIAL_PARAMETER_EXT /;"	d
GL_TEXTURE_MATRIX	./GL/glew.h	/^#define GL_TEXTURE_MATRIX /;"	d
GL_TEXTURE_MATRIX_FLOAT_AS_INT_BITS_OES	./GL/glew.h	/^#define GL_TEXTURE_MATRIX_FLOAT_AS_INT_BITS_OES /;"	d
GL_TEXTURE_MAX_ANISOTROPY	./GL/glew.h	/^#define GL_TEXTURE_MAX_ANISOTROPY /;"	d
GL_TEXTURE_MAX_ANISOTROPY_EXT	./GL/glew.h	/^#define GL_TEXTURE_MAX_ANISOTROPY_EXT /;"	d
GL_TEXTURE_MAX_CLAMP_R_SGIX	./GL/glew.h	/^#define GL_TEXTURE_MAX_CLAMP_R_SGIX /;"	d
GL_TEXTURE_MAX_CLAMP_S_SGIX	./GL/glew.h	/^#define GL_TEXTURE_MAX_CLAMP_S_SGIX /;"	d
GL_TEXTURE_MAX_CLAMP_T_SGIX	./GL/glew.h	/^#define GL_TEXTURE_MAX_CLAMP_T_SGIX /;"	d
GL_TEXTURE_MAX_LEVEL	./GL/glew.h	/^#define GL_TEXTURE_MAX_LEVEL /;"	d
GL_TEXTURE_MAX_LEVEL_APPLE	./GL/glew.h	/^#define GL_TEXTURE_MAX_LEVEL_APPLE /;"	d
GL_TEXTURE_MAX_LEVEL_SGIS	./GL/glew.h	/^#define GL_TEXTURE_MAX_LEVEL_SGIS /;"	d
GL_TEXTURE_MAX_LOD	./GL/glew.h	/^#define GL_TEXTURE_MAX_LOD /;"	d
GL_TEXTURE_MAX_LOD_SGIS	./GL/glew.h	/^#define GL_TEXTURE_MAX_LOD_SGIS /;"	d
GL_TEXTURE_MEMORY_LAYOUT_INTEL	./GL/glew.h	/^#define GL_TEXTURE_MEMORY_LAYOUT_INTEL /;"	d
GL_TEXTURE_MIN_FILTER	./GL/glew.h	/^#define GL_TEXTURE_MIN_FILTER /;"	d
GL_TEXTURE_MIN_LOD	./GL/glew.h	/^#define GL_TEXTURE_MIN_LOD /;"	d
GL_TEXTURE_MIN_LOD_SGIS	./GL/glew.h	/^#define GL_TEXTURE_MIN_LOD_SGIS /;"	d
GL_TEXTURE_MIPMAP_ANISOTROPY_SGIX	./GL/glew.h	/^#define GL_TEXTURE_MIPMAP_ANISOTROPY_SGIX /;"	d
GL_TEXTURE_MULTI_BUFFER_HINT_SGIX	./GL/glew.h	/^#define GL_TEXTURE_MULTI_BUFFER_HINT_SGIX /;"	d
GL_TEXTURE_NORMAL_EXT	./GL/glew.h	/^#define GL_TEXTURE_NORMAL_EXT /;"	d
GL_TEXTURE_NUM_LEVELS_QCOM	./GL/glew.h	/^#define GL_TEXTURE_NUM_LEVELS_QCOM /;"	d
GL_TEXTURE_OBJECT_VALID_QCOM	./GL/glew.h	/^#define GL_TEXTURE_OBJECT_VALID_QCOM /;"	d
GL_TEXTURE_OUTPUT_ALPHA_ATIX	./GL/glew.h	/^#define GL_TEXTURE_OUTPUT_ALPHA_ATIX /;"	d
GL_TEXTURE_OUTPUT_RGB_ATIX	./GL/glew.h	/^#define GL_TEXTURE_OUTPUT_RGB_ATIX /;"	d
GL_TEXTURE_POINT_MODE_ATIX	./GL/glew.h	/^#define GL_TEXTURE_POINT_MODE_ATIX /;"	d
GL_TEXTURE_POINT_ONE_COORD_ATIX	./GL/glew.h	/^#define GL_TEXTURE_POINT_ONE_COORD_ATIX /;"	d
GL_TEXTURE_POINT_SPRITE_ATIX	./GL/glew.h	/^#define GL_TEXTURE_POINT_SPRITE_ATIX /;"	d
GL_TEXTURE_PRIORITY	./GL/glew.h	/^#define GL_TEXTURE_PRIORITY /;"	d
GL_TEXTURE_PRIORITY_EXT	./GL/glew.h	/^#define GL_TEXTURE_PRIORITY_EXT /;"	d
GL_TEXTURE_PROTECTED_EXT	./GL/glew.h	/^#define GL_TEXTURE_PROTECTED_EXT /;"	d
GL_TEXTURE_RANGE_LENGTH_APPLE	./GL/glew.h	/^#define GL_TEXTURE_RANGE_LENGTH_APPLE /;"	d
GL_TEXTURE_RANGE_POINTER_APPLE	./GL/glew.h	/^#define GL_TEXTURE_RANGE_POINTER_APPLE /;"	d
GL_TEXTURE_RECTANGLE	./GL/glew.h	/^#define GL_TEXTURE_RECTANGLE /;"	d
GL_TEXTURE_RECTANGLE_ARB	./GL/glew.h	/^#define GL_TEXTURE_RECTANGLE_ARB /;"	d
GL_TEXTURE_RECTANGLE_EXT	./GL/glew.h	/^#define GL_TEXTURE_RECTANGLE_EXT /;"	d
GL_TEXTURE_RECTANGLE_NV	./GL/glew.h	/^#define GL_TEXTURE_RECTANGLE_NV /;"	d
GL_TEXTURE_REDUCTION_MODE_ARB	./GL/glew.h	/^#define GL_TEXTURE_REDUCTION_MODE_ARB /;"	d
GL_TEXTURE_REDUCTION_MODE_EXT	./GL/glew.h	/^#define GL_TEXTURE_REDUCTION_MODE_EXT /;"	d
GL_TEXTURE_RED_SIZE	./GL/glew.h	/^#define GL_TEXTURE_RED_SIZE /;"	d
GL_TEXTURE_RED_SIZE_EXT	./GL/glew.h	/^#define GL_TEXTURE_RED_SIZE_EXT /;"	d
GL_TEXTURE_RED_TYPE	./GL/glew.h	/^#define GL_TEXTURE_RED_TYPE /;"	d
GL_TEXTURE_RED_TYPE_ARB	./GL/glew.h	/^#define GL_TEXTURE_RED_TYPE_ARB /;"	d
GL_TEXTURE_RENDERBUFFER_DATA_STORE_BINDING_NV	./GL/glew.h	/^#define GL_TEXTURE_RENDERBUFFER_DATA_STORE_BINDING_NV /;"	d
GL_TEXTURE_RENDERBUFFER_NV	./GL/glew.h	/^#define GL_TEXTURE_RENDERBUFFER_NV /;"	d
GL_TEXTURE_RESIDENT	./GL/glew.h	/^#define GL_TEXTURE_RESIDENT /;"	d
GL_TEXTURE_RESIDENT_EXT	./GL/glew.h	/^#define GL_TEXTURE_RESIDENT_EXT /;"	d
GL_TEXTURE_SAMPLES	./GL/glew.h	/^#define GL_TEXTURE_SAMPLES /;"	d
GL_TEXTURE_SAMPLES_IMG	./GL/glew.h	/^#define GL_TEXTURE_SAMPLES_IMG /;"	d
GL_TEXTURE_SHADER_NV	./GL/glew.h	/^#define GL_TEXTURE_SHADER_NV /;"	d
GL_TEXTURE_SHADOW	./GL/glew.h	/^#define GL_TEXTURE_SHADOW /;"	d
GL_TEXTURE_SHARED_SIZE	./GL/glew.h	/^#define GL_TEXTURE_SHARED_SIZE /;"	d
GL_TEXTURE_SHARED_SIZE_EXT	./GL/glew.h	/^#define GL_TEXTURE_SHARED_SIZE_EXT /;"	d
GL_TEXTURE_SPARSE_ARB	./GL/glew.h	/^#define GL_TEXTURE_SPARSE_ARB /;"	d
GL_TEXTURE_SPARSE_EXT	./GL/glew.h	/^#define GL_TEXTURE_SPARSE_EXT /;"	d
GL_TEXTURE_SRGB_DECODE_EXT	./GL/glew.h	/^#define GL_TEXTURE_SRGB_DECODE_EXT /;"	d
GL_TEXTURE_STACK_DEPTH	./GL/glew.h	/^#define GL_TEXTURE_STACK_DEPTH /;"	d
GL_TEXTURE_STENCIL_SIZE	./GL/glew.h	/^#define GL_TEXTURE_STENCIL_SIZE /;"	d
GL_TEXTURE_STENCIL_SIZE_EXT	./GL/glew.h	/^#define GL_TEXTURE_STENCIL_SIZE_EXT /;"	d
GL_TEXTURE_STORAGE_HINT_APPLE	./GL/glew.h	/^#define GL_TEXTURE_STORAGE_HINT_APPLE /;"	d
GL_TEXTURE_STORAGE_SPARSE_BIT_AMD	./GL/glew.h	/^#define GL_TEXTURE_STORAGE_SPARSE_BIT_AMD /;"	d
GL_TEXTURE_SWIZZLE_A	./GL/glew.h	/^#define GL_TEXTURE_SWIZZLE_A /;"	d
GL_TEXTURE_SWIZZLE_A_EXT	./GL/glew.h	/^#define GL_TEXTURE_SWIZZLE_A_EXT /;"	d
GL_TEXTURE_SWIZZLE_B	./GL/glew.h	/^#define GL_TEXTURE_SWIZZLE_B /;"	d
GL_TEXTURE_SWIZZLE_B_EXT	./GL/glew.h	/^#define GL_TEXTURE_SWIZZLE_B_EXT /;"	d
GL_TEXTURE_SWIZZLE_G	./GL/glew.h	/^#define GL_TEXTURE_SWIZZLE_G /;"	d
GL_TEXTURE_SWIZZLE_G_EXT	./GL/glew.h	/^#define GL_TEXTURE_SWIZZLE_G_EXT /;"	d
GL_TEXTURE_SWIZZLE_R	./GL/glew.h	/^#define GL_TEXTURE_SWIZZLE_R /;"	d
GL_TEXTURE_SWIZZLE_RGBA	./GL/glew.h	/^#define GL_TEXTURE_SWIZZLE_RGBA /;"	d
GL_TEXTURE_SWIZZLE_RGBA_EXT	./GL/glew.h	/^#define GL_TEXTURE_SWIZZLE_RGBA_EXT /;"	d
GL_TEXTURE_SWIZZLE_R_EXT	./GL/glew.h	/^#define GL_TEXTURE_SWIZZLE_R_EXT /;"	d
GL_TEXTURE_TARGET	./GL/glew.h	/^#define GL_TEXTURE_TARGET /;"	d
GL_TEXTURE_TARGET_QCOM	./GL/glew.h	/^#define GL_TEXTURE_TARGET_QCOM /;"	d
GL_TEXTURE_TILING_EXT	./GL/glew.h	/^#define GL_TEXTURE_TILING_EXT /;"	d
GL_TEXTURE_TYPE_QCOM	./GL/glew.h	/^#define GL_TEXTURE_TYPE_QCOM /;"	d
GL_TEXTURE_UNNORMALIZED_COORDINATES_ARM	./GL/glew.h	/^#define GL_TEXTURE_UNNORMALIZED_COORDINATES_ARM /;"	d
GL_TEXTURE_UNSIGNED_REMAP_MODE_NV	./GL/glew.h	/^#define GL_TEXTURE_UNSIGNED_REMAP_MODE_NV /;"	d
GL_TEXTURE_UPDATE_BARRIER_BIT	./GL/glew.h	/^#define GL_TEXTURE_UPDATE_BARRIER_BIT /;"	d
GL_TEXTURE_UPDATE_BARRIER_BIT_EXT	./GL/glew.h	/^#define GL_TEXTURE_UPDATE_BARRIER_BIT_EXT /;"	d
GL_TEXTURE_USAGE_ANGLE	./GL/glew.h	/^#define GL_TEXTURE_USAGE_ANGLE /;"	d
GL_TEXTURE_VIEW	./GL/glew.h	/^#define GL_TEXTURE_VIEW /;"	d
GL_TEXTURE_VIEW_MIN_LAYER	./GL/glew.h	/^#define GL_TEXTURE_VIEW_MIN_LAYER /;"	d
GL_TEXTURE_VIEW_MIN_LAYER_EXT	./GL/glew.h	/^#define GL_TEXTURE_VIEW_MIN_LAYER_EXT /;"	d
GL_TEXTURE_VIEW_MIN_LAYER_OES	./GL/glew.h	/^#define GL_TEXTURE_VIEW_MIN_LAYER_OES /;"	d
GL_TEXTURE_VIEW_MIN_LEVEL	./GL/glew.h	/^#define GL_TEXTURE_VIEW_MIN_LEVEL /;"	d
GL_TEXTURE_VIEW_MIN_LEVEL_EXT	./GL/glew.h	/^#define GL_TEXTURE_VIEW_MIN_LEVEL_EXT /;"	d
GL_TEXTURE_VIEW_MIN_LEVEL_OES	./GL/glew.h	/^#define GL_TEXTURE_VIEW_MIN_LEVEL_OES /;"	d
GL_TEXTURE_VIEW_NUM_LAYERS	./GL/glew.h	/^#define GL_TEXTURE_VIEW_NUM_LAYERS /;"	d
GL_TEXTURE_VIEW_NUM_LAYERS_EXT	./GL/glew.h	/^#define GL_TEXTURE_VIEW_NUM_LAYERS_EXT /;"	d
GL_TEXTURE_VIEW_NUM_LAYERS_OES	./GL/glew.h	/^#define GL_TEXTURE_VIEW_NUM_LAYERS_OES /;"	d
GL_TEXTURE_VIEW_NUM_LEVELS	./GL/glew.h	/^#define GL_TEXTURE_VIEW_NUM_LEVELS /;"	d
GL_TEXTURE_VIEW_NUM_LEVELS_EXT	./GL/glew.h	/^#define GL_TEXTURE_VIEW_NUM_LEVELS_EXT /;"	d
GL_TEXTURE_VIEW_NUM_LEVELS_OES	./GL/glew.h	/^#define GL_TEXTURE_VIEW_NUM_LEVELS_OES /;"	d
GL_TEXTURE_WIDTH	./GL/glew.h	/^#define GL_TEXTURE_WIDTH /;"	d
GL_TEXTURE_WIDTH_QCOM	./GL/glew.h	/^#define GL_TEXTURE_WIDTH_QCOM /;"	d
GL_TEXTURE_WRAP_R	./GL/glew.h	/^#define GL_TEXTURE_WRAP_R /;"	d
GL_TEXTURE_WRAP_R_EXT	./GL/glew.h	/^#define GL_TEXTURE_WRAP_R_EXT /;"	d
GL_TEXTURE_WRAP_R_OES	./GL/glew.h	/^#define GL_TEXTURE_WRAP_R_OES /;"	d
GL_TEXTURE_WRAP_S	./GL/glew.h	/^#define GL_TEXTURE_WRAP_S /;"	d
GL_TEXTURE_WRAP_T	./GL/glew.h	/^#define GL_TEXTURE_WRAP_T /;"	d
GL_TEXT_FRAGMENT_SHADER_ATI	./GL/glew.h	/^#define GL_TEXT_FRAGMENT_SHADER_ATI /;"	d
GL_TILING_TYPES_EXT	./GL/glew.h	/^#define GL_TILING_TYPES_EXT /;"	d
GL_TIMEOUT_EXPIRED	./GL/glew.h	/^#define GL_TIMEOUT_EXPIRED /;"	d
GL_TIMEOUT_EXPIRED_APPLE	./GL/glew.h	/^#define GL_TIMEOUT_EXPIRED_APPLE /;"	d
GL_TIMEOUT_IGNORED	./GL/glew.h	/^#define GL_TIMEOUT_IGNORED /;"	d
GL_TIMEOUT_IGNORED_APPLE	./GL/glew.h	/^#define GL_TIMEOUT_IGNORED_APPLE /;"	d
GL_TIMESTAMP	./GL/glew.h	/^#define GL_TIMESTAMP /;"	d
GL_TIMESTAMP_ANGLE	./GL/glew.h	/^#define GL_TIMESTAMP_ANGLE /;"	d
GL_TIMESTAMP_EXT	./GL/glew.h	/^#define GL_TIMESTAMP_EXT /;"	d
GL_TIME_ELAPSED	./GL/glew.h	/^#define GL_TIME_ELAPSED /;"	d
GL_TIME_ELAPSED_ANGLE	./GL/glew.h	/^#define GL_TIME_ELAPSED_ANGLE /;"	d
GL_TIME_ELAPSED_EXT	./GL/glew.h	/^#define GL_TIME_ELAPSED_EXT /;"	d
GL_TOP_LEVEL_ARRAY_SIZE	./GL/glew.h	/^#define GL_TOP_LEVEL_ARRAY_SIZE /;"	d
GL_TOP_LEVEL_ARRAY_STRIDE	./GL/glew.h	/^#define GL_TOP_LEVEL_ARRAY_STRIDE /;"	d
GL_TRACE_REGAL	./GL/glew.h	/^#define GL_TRACE_REGAL /;"	d
GL_TRACK_MATRIX_NV	./GL/glew.h	/^#define GL_TRACK_MATRIX_NV /;"	d
GL_TRACK_MATRIX_TRANSFORM_NV	./GL/glew.h	/^#define GL_TRACK_MATRIX_TRANSFORM_NV /;"	d
GL_TRANSFORM_BIT	./GL/glew.h	/^#define GL_TRANSFORM_BIT /;"	d
GL_TRANSFORM_FEEDBACK	./GL/glew.h	/^#define GL_TRANSFORM_FEEDBACK /;"	d
GL_TRANSFORM_FEEDBACK_ACTIVE	./GL/glew.h	/^#define GL_TRANSFORM_FEEDBACK_ACTIVE /;"	d
GL_TRANSFORM_FEEDBACK_ATTRIBS_NV	./GL/glew.h	/^#define GL_TRANSFORM_FEEDBACK_ATTRIBS_NV /;"	d
GL_TRANSFORM_FEEDBACK_BARRIER_BIT	./GL/glew.h	/^#define GL_TRANSFORM_FEEDBACK_BARRIER_BIT /;"	d
GL_TRANSFORM_FEEDBACK_BARRIER_BIT_EXT	./GL/glew.h	/^#define GL_TRANSFORM_FEEDBACK_BARRIER_BIT_EXT /;"	d
GL_TRANSFORM_FEEDBACK_BINDING	./GL/glew.h	/^#define GL_TRANSFORM_FEEDBACK_BINDING /;"	d
GL_TRANSFORM_FEEDBACK_BINDING_NV	./GL/glew.h	/^#define GL_TRANSFORM_FEEDBACK_BINDING_NV /;"	d
GL_TRANSFORM_FEEDBACK_BUFFER	./GL/glew.h	/^#define GL_TRANSFORM_FEEDBACK_BUFFER /;"	d
GL_TRANSFORM_FEEDBACK_BUFFER_ACTIVE	./GL/glew.h	/^#define GL_TRANSFORM_FEEDBACK_BUFFER_ACTIVE /;"	d
GL_TRANSFORM_FEEDBACK_BUFFER_ACTIVE_NV	./GL/glew.h	/^#define GL_TRANSFORM_FEEDBACK_BUFFER_ACTIVE_NV /;"	d
GL_TRANSFORM_FEEDBACK_BUFFER_BINDING	./GL/glew.h	/^#define GL_TRANSFORM_FEEDBACK_BUFFER_BINDING /;"	d
GL_TRANSFORM_FEEDBACK_BUFFER_BINDING_EXT	./GL/glew.h	/^#define GL_TRANSFORM_FEEDBACK_BUFFER_BINDING_EXT /;"	d
GL_TRANSFORM_FEEDBACK_BUFFER_BINDING_NV	./GL/glew.h	/^#define GL_TRANSFORM_FEEDBACK_BUFFER_BINDING_NV /;"	d
GL_TRANSFORM_FEEDBACK_BUFFER_EXT	./GL/glew.h	/^#define GL_TRANSFORM_FEEDBACK_BUFFER_EXT /;"	d
GL_TRANSFORM_FEEDBACK_BUFFER_INDEX	./GL/glew.h	/^#define GL_TRANSFORM_FEEDBACK_BUFFER_INDEX /;"	d
GL_TRANSFORM_FEEDBACK_BUFFER_MODE	./GL/glew.h	/^#define GL_TRANSFORM_FEEDBACK_BUFFER_MODE /;"	d
GL_TRANSFORM_FEEDBACK_BUFFER_MODE_EXT	./GL/glew.h	/^#define GL_TRANSFORM_FEEDBACK_BUFFER_MODE_EXT /;"	d
GL_TRANSFORM_FEEDBACK_BUFFER_MODE_NV	./GL/glew.h	/^#define GL_TRANSFORM_FEEDBACK_BUFFER_MODE_NV /;"	d
GL_TRANSFORM_FEEDBACK_BUFFER_NV	./GL/glew.h	/^#define GL_TRANSFORM_FEEDBACK_BUFFER_NV /;"	d
GL_TRANSFORM_FEEDBACK_BUFFER_PAUSED	./GL/glew.h	/^#define GL_TRANSFORM_FEEDBACK_BUFFER_PAUSED /;"	d
GL_TRANSFORM_FEEDBACK_BUFFER_PAUSED_NV	./GL/glew.h	/^#define GL_TRANSFORM_FEEDBACK_BUFFER_PAUSED_NV /;"	d
GL_TRANSFORM_FEEDBACK_BUFFER_SIZE	./GL/glew.h	/^#define GL_TRANSFORM_FEEDBACK_BUFFER_SIZE /;"	d
GL_TRANSFORM_FEEDBACK_BUFFER_SIZE_EXT	./GL/glew.h	/^#define GL_TRANSFORM_FEEDBACK_BUFFER_SIZE_EXT /;"	d
GL_TRANSFORM_FEEDBACK_BUFFER_SIZE_NV	./GL/glew.h	/^#define GL_TRANSFORM_FEEDBACK_BUFFER_SIZE_NV /;"	d
GL_TRANSFORM_FEEDBACK_BUFFER_START	./GL/glew.h	/^#define GL_TRANSFORM_FEEDBACK_BUFFER_START /;"	d
GL_TRANSFORM_FEEDBACK_BUFFER_START_EXT	./GL/glew.h	/^#define GL_TRANSFORM_FEEDBACK_BUFFER_START_EXT /;"	d
GL_TRANSFORM_FEEDBACK_BUFFER_START_NV	./GL/glew.h	/^#define GL_TRANSFORM_FEEDBACK_BUFFER_START_NV /;"	d
GL_TRANSFORM_FEEDBACK_BUFFER_STRIDE	./GL/glew.h	/^#define GL_TRANSFORM_FEEDBACK_BUFFER_STRIDE /;"	d
GL_TRANSFORM_FEEDBACK_NV	./GL/glew.h	/^#define GL_TRANSFORM_FEEDBACK_NV /;"	d
GL_TRANSFORM_FEEDBACK_OVERFLOW	./GL/glew.h	/^#define GL_TRANSFORM_FEEDBACK_OVERFLOW /;"	d
GL_TRANSFORM_FEEDBACK_OVERFLOW_ARB	./GL/glew.h	/^#define GL_TRANSFORM_FEEDBACK_OVERFLOW_ARB /;"	d
GL_TRANSFORM_FEEDBACK_PAUSED	./GL/glew.h	/^#define GL_TRANSFORM_FEEDBACK_PAUSED /;"	d
GL_TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN	./GL/glew.h	/^#define GL_TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN /;"	d
GL_TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN_EXT	./GL/glew.h	/^#define GL_TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN_EXT /;"	d
GL_TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN_NV	./GL/glew.h	/^#define GL_TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN_NV /;"	d
GL_TRANSFORM_FEEDBACK_RECORD_NV	./GL/glew.h	/^#define GL_TRANSFORM_FEEDBACK_RECORD_NV /;"	d
GL_TRANSFORM_FEEDBACK_STREAM_OVERFLOW	./GL/glew.h	/^#define GL_TRANSFORM_FEEDBACK_STREAM_OVERFLOW /;"	d
GL_TRANSFORM_FEEDBACK_STREAM_OVERFLOW_ARB	./GL/glew.h	/^#define GL_TRANSFORM_FEEDBACK_STREAM_OVERFLOW_ARB /;"	d
GL_TRANSFORM_FEEDBACK_VARYING	./GL/glew.h	/^#define GL_TRANSFORM_FEEDBACK_VARYING /;"	d
GL_TRANSFORM_FEEDBACK_VARYINGS	./GL/glew.h	/^#define GL_TRANSFORM_FEEDBACK_VARYINGS /;"	d
GL_TRANSFORM_FEEDBACK_VARYINGS_EXT	./GL/glew.h	/^#define GL_TRANSFORM_FEEDBACK_VARYINGS_EXT /;"	d
GL_TRANSFORM_FEEDBACK_VARYINGS_NV	./GL/glew.h	/^#define GL_TRANSFORM_FEEDBACK_VARYINGS_NV /;"	d
GL_TRANSFORM_FEEDBACK_VARYING_MAX_LENGTH	./GL/glew.h	/^#define GL_TRANSFORM_FEEDBACK_VARYING_MAX_LENGTH /;"	d
GL_TRANSFORM_FEEDBACK_VARYING_MAX_LENGTH_EXT	./GL/glew.h	/^#define GL_TRANSFORM_FEEDBACK_VARYING_MAX_LENGTH_EXT /;"	d
GL_TRANSFORM_HINT_APPLE	./GL/glew.h	/^#define GL_TRANSFORM_HINT_APPLE /;"	d
GL_TRANSLATED_SHADER_SOURCE_LENGTH_ANGLE	./GL/glew.h	/^#define GL_TRANSLATED_SHADER_SOURCE_LENGTH_ANGLE /;"	d
GL_TRANSLATE_2D_NV	./GL/glew.h	/^#define GL_TRANSLATE_2D_NV /;"	d
GL_TRANSLATE_3D_NV	./GL/glew.h	/^#define GL_TRANSLATE_3D_NV /;"	d
GL_TRANSLATE_X_NV	./GL/glew.h	/^#define GL_TRANSLATE_X_NV /;"	d
GL_TRANSLATE_Y_NV	./GL/glew.h	/^#define GL_TRANSLATE_Y_NV /;"	d
GL_TRANSPOSE_AFFINE_2D_NV	./GL/glew.h	/^#define GL_TRANSPOSE_AFFINE_2D_NV /;"	d
GL_TRANSPOSE_AFFINE_3D_NV	./GL/glew.h	/^#define GL_TRANSPOSE_AFFINE_3D_NV /;"	d
GL_TRANSPOSE_COLOR_MATRIX	./GL/glew.h	/^#define GL_TRANSPOSE_COLOR_MATRIX /;"	d
GL_TRANSPOSE_COLOR_MATRIX_ARB	./GL/glew.h	/^#define GL_TRANSPOSE_COLOR_MATRIX_ARB /;"	d
GL_TRANSPOSE_CURRENT_MATRIX_ARB	./GL/glew.h	/^#define GL_TRANSPOSE_CURRENT_MATRIX_ARB /;"	d
GL_TRANSPOSE_MODELVIEW_MATRIX	./GL/glew.h	/^#define GL_TRANSPOSE_MODELVIEW_MATRIX /;"	d
GL_TRANSPOSE_MODELVIEW_MATRIX_ARB	./GL/glew.h	/^#define GL_TRANSPOSE_MODELVIEW_MATRIX_ARB /;"	d
GL_TRANSPOSE_NV	./GL/glew.h	/^#define GL_TRANSPOSE_NV /;"	d
GL_TRANSPOSE_PROGRAM_MATRIX_EXT	./GL/glew.h	/^#define GL_TRANSPOSE_PROGRAM_MATRIX_EXT /;"	d
GL_TRANSPOSE_PROJECTION_MATRIX	./GL/glew.h	/^#define GL_TRANSPOSE_PROJECTION_MATRIX /;"	d
GL_TRANSPOSE_PROJECTION_MATRIX_ARB	./GL/glew.h	/^#define GL_TRANSPOSE_PROJECTION_MATRIX_ARB /;"	d
GL_TRANSPOSE_TEXTURE_MATRIX	./GL/glew.h	/^#define GL_TRANSPOSE_TEXTURE_MATRIX /;"	d
GL_TRANSPOSE_TEXTURE_MATRIX_ARB	./GL/glew.h	/^#define GL_TRANSPOSE_TEXTURE_MATRIX_ARB /;"	d
GL_TRIANGLES	./GL/glew.h	/^#define GL_TRIANGLES /;"	d
GL_TRIANGLES_ADJACENCY	./GL/glew.h	/^#define GL_TRIANGLES_ADJACENCY /;"	d
GL_TRIANGLES_ADJACENCY_ARB	./GL/glew.h	/^#define GL_TRIANGLES_ADJACENCY_ARB /;"	d
GL_TRIANGLES_ADJACENCY_EXT	./GL/glew.h	/^#define GL_TRIANGLES_ADJACENCY_EXT /;"	d
GL_TRIANGLES_ADJACENCY_OES	./GL/glew.h	/^#define GL_TRIANGLES_ADJACENCY_OES /;"	d
GL_TRIANGLE_FAN	./GL/glew.h	/^#define GL_TRIANGLE_FAN /;"	d
GL_TRIANGLE_LIST_SUN	./GL/glew.h	/^#define GL_TRIANGLE_LIST_SUN /;"	d
GL_TRIANGLE_MESH_SUN	./GL/glew.h	/^#define GL_TRIANGLE_MESH_SUN /;"	d
GL_TRIANGLE_STRIP	./GL/glew.h	/^#define GL_TRIANGLE_STRIP /;"	d
GL_TRIANGLE_STRIP_ADJACENCY	./GL/glew.h	/^#define GL_TRIANGLE_STRIP_ADJACENCY /;"	d
GL_TRIANGLE_STRIP_ADJACENCY_ARB	./GL/glew.h	/^#define GL_TRIANGLE_STRIP_ADJACENCY_ARB /;"	d
GL_TRIANGLE_STRIP_ADJACENCY_EXT	./GL/glew.h	/^#define GL_TRIANGLE_STRIP_ADJACENCY_EXT /;"	d
GL_TRIANGLE_STRIP_ADJACENCY_OES	./GL/glew.h	/^#define GL_TRIANGLE_STRIP_ADJACENCY_OES /;"	d
GL_TRIANGULAR_NV	./GL/glew.h	/^#define GL_TRIANGULAR_NV /;"	d
GL_TRUE	./GL/glew.h	/^#define GL_TRUE /;"	d
GL_TYPE	./GL/glew.h	/^#define GL_TYPE /;"	d
GL_UNCORRELATED_NV	./GL/glew.h	/^#define GL_UNCORRELATED_NV /;"	d
GL_UNDEFINED_APPLE	./GL/glew.h	/^#define GL_UNDEFINED_APPLE /;"	d
GL_UNDEFINED_VERTEX	./GL/glew.h	/^#define GL_UNDEFINED_VERTEX /;"	d
GL_UNDEFINED_VERTEX_EXT	./GL/glew.h	/^#define GL_UNDEFINED_VERTEX_EXT /;"	d
GL_UNDEFINED_VERTEX_OES	./GL/glew.h	/^#define GL_UNDEFINED_VERTEX_OES /;"	d
GL_UNIFORM	./GL/glew.h	/^#define GL_UNIFORM /;"	d
GL_UNIFORM_ADDRESS_COMMAND_NV	./GL/glew.h	/^#define GL_UNIFORM_ADDRESS_COMMAND_NV /;"	d
GL_UNIFORM_ARRAY_STRIDE	./GL/glew.h	/^#define GL_UNIFORM_ARRAY_STRIDE /;"	d
GL_UNIFORM_ATOMIC_COUNTER_BUFFER_INDEX	./GL/glew.h	/^#define GL_UNIFORM_ATOMIC_COUNTER_BUFFER_INDEX /;"	d
GL_UNIFORM_BARRIER_BIT	./GL/glew.h	/^#define GL_UNIFORM_BARRIER_BIT /;"	d
GL_UNIFORM_BARRIER_BIT_EXT	./GL/glew.h	/^#define GL_UNIFORM_BARRIER_BIT_EXT /;"	d
GL_UNIFORM_BLOCK	./GL/glew.h	/^#define GL_UNIFORM_BLOCK /;"	d
GL_UNIFORM_BLOCK_ACTIVE_UNIFORMS	./GL/glew.h	/^#define GL_UNIFORM_BLOCK_ACTIVE_UNIFORMS /;"	d
GL_UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES	./GL/glew.h	/^#define GL_UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES /;"	d
GL_UNIFORM_BLOCK_BINDING	./GL/glew.h	/^#define GL_UNIFORM_BLOCK_BINDING /;"	d
GL_UNIFORM_BLOCK_DATA_SIZE	./GL/glew.h	/^#define GL_UNIFORM_BLOCK_DATA_SIZE /;"	d
GL_UNIFORM_BLOCK_INDEX	./GL/glew.h	/^#define GL_UNIFORM_BLOCK_INDEX /;"	d
GL_UNIFORM_BLOCK_NAME_LENGTH	./GL/glew.h	/^#define GL_UNIFORM_BLOCK_NAME_LENGTH /;"	d
GL_UNIFORM_BLOCK_REFERENCED_BY_COMPUTE_SHADER	./GL/glew.h	/^#define GL_UNIFORM_BLOCK_REFERENCED_BY_COMPUTE_SHADER /;"	d
GL_UNIFORM_BLOCK_REFERENCED_BY_FRAGMENT_SHADER	./GL/glew.h	/^#define GL_UNIFORM_BLOCK_REFERENCED_BY_FRAGMENT_SHADER /;"	d
GL_UNIFORM_BLOCK_REFERENCED_BY_GEOMETRY_SHADER	./GL/glew.h	/^#define GL_UNIFORM_BLOCK_REFERENCED_BY_GEOMETRY_SHADER /;"	d
GL_UNIFORM_BLOCK_REFERENCED_BY_MESH_SHADER_NV	./GL/glew.h	/^#define GL_UNIFORM_BLOCK_REFERENCED_BY_MESH_SHADER_NV /;"	d
GL_UNIFORM_BLOCK_REFERENCED_BY_TASK_SHADER_NV	./GL/glew.h	/^#define GL_UNIFORM_BLOCK_REFERENCED_BY_TASK_SHADER_NV /;"	d
GL_UNIFORM_BLOCK_REFERENCED_BY_TESS_CONTROL_SHADER	./GL/glew.h	/^#define GL_UNIFORM_BLOCK_REFERENCED_BY_TESS_CONTROL_SHADER /;"	d
GL_UNIFORM_BLOCK_REFERENCED_BY_TESS_EVALUATION_SHADER	./GL/glew.h	/^#define GL_UNIFORM_BLOCK_REFERENCED_BY_TESS_EVALUATION_SHADER /;"	d
GL_UNIFORM_BLOCK_REFERENCED_BY_VERTEX_SHADER	./GL/glew.h	/^#define GL_UNIFORM_BLOCK_REFERENCED_BY_VERTEX_SHADER /;"	d
GL_UNIFORM_BUFFER	./GL/glew.h	/^#define GL_UNIFORM_BUFFER /;"	d
GL_UNIFORM_BUFFER_ADDRESS_NV	./GL/glew.h	/^#define GL_UNIFORM_BUFFER_ADDRESS_NV /;"	d
GL_UNIFORM_BUFFER_BINDING	./GL/glew.h	/^#define GL_UNIFORM_BUFFER_BINDING /;"	d
GL_UNIFORM_BUFFER_BINDING_EXT	./GL/glew.h	/^#define GL_UNIFORM_BUFFER_BINDING_EXT /;"	d
GL_UNIFORM_BUFFER_EXT	./GL/glew.h	/^#define GL_UNIFORM_BUFFER_EXT /;"	d
GL_UNIFORM_BUFFER_LENGTH_NV	./GL/glew.h	/^#define GL_UNIFORM_BUFFER_LENGTH_NV /;"	d
GL_UNIFORM_BUFFER_OFFSET_ALIGNMENT	./GL/glew.h	/^#define GL_UNIFORM_BUFFER_OFFSET_ALIGNMENT /;"	d
GL_UNIFORM_BUFFER_SIZE	./GL/glew.h	/^#define GL_UNIFORM_BUFFER_SIZE /;"	d
GL_UNIFORM_BUFFER_START	./GL/glew.h	/^#define GL_UNIFORM_BUFFER_START /;"	d
GL_UNIFORM_BUFFER_UNIFIED_NV	./GL/glew.h	/^#define GL_UNIFORM_BUFFER_UNIFIED_NV /;"	d
GL_UNIFORM_IS_ROW_MAJOR	./GL/glew.h	/^#define GL_UNIFORM_IS_ROW_MAJOR /;"	d
GL_UNIFORM_MATRIX_STRIDE	./GL/glew.h	/^#define GL_UNIFORM_MATRIX_STRIDE /;"	d
GL_UNIFORM_NAME_LENGTH	./GL/glew.h	/^#define GL_UNIFORM_NAME_LENGTH /;"	d
GL_UNIFORM_OFFSET	./GL/glew.h	/^#define GL_UNIFORM_OFFSET /;"	d
GL_UNIFORM_SGIX	./GL/glew.h	/^#define GL_UNIFORM_SGIX /;"	d
GL_UNIFORM_SIZE	./GL/glew.h	/^#define GL_UNIFORM_SIZE /;"	d
GL_UNIFORM_TYPE	./GL/glew.h	/^#define GL_UNIFORM_TYPE /;"	d
GL_UNKNOWN_CONTEXT_RESET	./GL/glew.h	/^#define GL_UNKNOWN_CONTEXT_RESET /;"	d
GL_UNKNOWN_CONTEXT_RESET_ARB	./GL/glew.h	/^#define GL_UNKNOWN_CONTEXT_RESET_ARB /;"	d
GL_UNKNOWN_CONTEXT_RESET_EXT	./GL/glew.h	/^#define GL_UNKNOWN_CONTEXT_RESET_EXT /;"	d
GL_UNPACK_ALIGNMENT	./GL/glew.h	/^#define GL_UNPACK_ALIGNMENT /;"	d
GL_UNPACK_CLIENT_STORAGE_APPLE	./GL/glew.h	/^#define GL_UNPACK_CLIENT_STORAGE_APPLE /;"	d
GL_UNPACK_CMYK_HINT_EXT	./GL/glew.h	/^#define GL_UNPACK_CMYK_HINT_EXT /;"	d
GL_UNPACK_COMPRESSED_BLOCK_DEPTH	./GL/glew.h	/^#define GL_UNPACK_COMPRESSED_BLOCK_DEPTH /;"	d
GL_UNPACK_COMPRESSED_BLOCK_HEIGHT	./GL/glew.h	/^#define GL_UNPACK_COMPRESSED_BLOCK_HEIGHT /;"	d
GL_UNPACK_COMPRESSED_BLOCK_SIZE	./GL/glew.h	/^#define GL_UNPACK_COMPRESSED_BLOCK_SIZE /;"	d
GL_UNPACK_COMPRESSED_BLOCK_WIDTH	./GL/glew.h	/^#define GL_UNPACK_COMPRESSED_BLOCK_WIDTH /;"	d
GL_UNPACK_CONSTANT_DATA_SUNX	./GL/glew.h	/^#define GL_UNPACK_CONSTANT_DATA_SUNX /;"	d
GL_UNPACK_IMAGE_HEIGHT	./GL/glew.h	/^#define GL_UNPACK_IMAGE_HEIGHT /;"	d
GL_UNPACK_IMAGE_HEIGHT_EXT	./GL/glew.h	/^#define GL_UNPACK_IMAGE_HEIGHT_EXT /;"	d
GL_UNPACK_IMAGE_HEIGHT_NV	./GL/glew.h	/^#define GL_UNPACK_IMAGE_HEIGHT_NV /;"	d
GL_UNPACK_LSB_FIRST	./GL/glew.h	/^#define GL_UNPACK_LSB_FIRST /;"	d
GL_UNPACK_RESAMPLE_OML	./GL/glew.h	/^#define GL_UNPACK_RESAMPLE_OML /;"	d
GL_UNPACK_RESAMPLE_SGIX	./GL/glew.h	/^#define GL_UNPACK_RESAMPLE_SGIX /;"	d
GL_UNPACK_ROW_BYTES_APPLE	./GL/glew.h	/^#define GL_UNPACK_ROW_BYTES_APPLE /;"	d
GL_UNPACK_ROW_LENGTH	./GL/glew.h	/^#define GL_UNPACK_ROW_LENGTH /;"	d
GL_UNPACK_ROW_LENGTH_EXT	./GL/glew.h	/^#define GL_UNPACK_ROW_LENGTH_EXT /;"	d
GL_UNPACK_SKIP_IMAGES	./GL/glew.h	/^#define GL_UNPACK_SKIP_IMAGES /;"	d
GL_UNPACK_SKIP_IMAGES_EXT	./GL/glew.h	/^#define GL_UNPACK_SKIP_IMAGES_EXT /;"	d
GL_UNPACK_SKIP_IMAGES_NV	./GL/glew.h	/^#define GL_UNPACK_SKIP_IMAGES_NV /;"	d
GL_UNPACK_SKIP_PIXELS	./GL/glew.h	/^#define GL_UNPACK_SKIP_PIXELS /;"	d
GL_UNPACK_SKIP_PIXELS_EXT	./GL/glew.h	/^#define GL_UNPACK_SKIP_PIXELS_EXT /;"	d
GL_UNPACK_SKIP_ROWS	./GL/glew.h	/^#define GL_UNPACK_SKIP_ROWS /;"	d
GL_UNPACK_SKIP_ROWS_EXT	./GL/glew.h	/^#define GL_UNPACK_SKIP_ROWS_EXT /;"	d
GL_UNPACK_SUBSAMPLE_RATE_SGIX	./GL/glew.h	/^#define GL_UNPACK_SUBSAMPLE_RATE_SGIX /;"	d
GL_UNPACK_SWAP_BYTES	./GL/glew.h	/^#define GL_UNPACK_SWAP_BYTES /;"	d
GL_UNSIGNALED	./GL/glew.h	/^#define GL_UNSIGNALED /;"	d
GL_UNSIGNALED_APPLE	./GL/glew.h	/^#define GL_UNSIGNALED_APPLE /;"	d
GL_UNSIGNED_BYTE	./GL/glew.h	/^#define GL_UNSIGNED_BYTE /;"	d
GL_UNSIGNED_BYTE_2_3_3_REV	./GL/glew.h	/^#define GL_UNSIGNED_BYTE_2_3_3_REV /;"	d
GL_UNSIGNED_BYTE_3_3_2	./GL/glew.h	/^#define GL_UNSIGNED_BYTE_3_3_2 /;"	d
GL_UNSIGNED_BYTE_3_3_2_EXT	./GL/glew.h	/^#define GL_UNSIGNED_BYTE_3_3_2_EXT /;"	d
GL_UNSIGNED_IDENTITY_NV	./GL/glew.h	/^#define GL_UNSIGNED_IDENTITY_NV /;"	d
GL_UNSIGNED_INT	./GL/glew.h	/^#define GL_UNSIGNED_INT /;"	d
GL_UNSIGNED_INT16_NV	./GL/glew.h	/^#define GL_UNSIGNED_INT16_NV /;"	d
GL_UNSIGNED_INT16_VEC2_NV	./GL/glew.h	/^#define GL_UNSIGNED_INT16_VEC2_NV /;"	d
GL_UNSIGNED_INT16_VEC3_NV	./GL/glew.h	/^#define GL_UNSIGNED_INT16_VEC3_NV /;"	d
GL_UNSIGNED_INT16_VEC4_NV	./GL/glew.h	/^#define GL_UNSIGNED_INT16_VEC4_NV /;"	d
GL_UNSIGNED_INT64_AMD	./GL/glew.h	/^#define GL_UNSIGNED_INT64_AMD /;"	d
GL_UNSIGNED_INT64_ARB	./GL/glew.h	/^#define GL_UNSIGNED_INT64_ARB /;"	d
GL_UNSIGNED_INT64_NV	./GL/glew.h	/^#define GL_UNSIGNED_INT64_NV /;"	d
GL_UNSIGNED_INT64_VEC2_ARB	./GL/glew.h	/^#define GL_UNSIGNED_INT64_VEC2_ARB /;"	d
GL_UNSIGNED_INT64_VEC2_NV	./GL/glew.h	/^#define GL_UNSIGNED_INT64_VEC2_NV /;"	d
GL_UNSIGNED_INT64_VEC3_ARB	./GL/glew.h	/^#define GL_UNSIGNED_INT64_VEC3_ARB /;"	d
GL_UNSIGNED_INT64_VEC3_NV	./GL/glew.h	/^#define GL_UNSIGNED_INT64_VEC3_NV /;"	d
GL_UNSIGNED_INT64_VEC4_ARB	./GL/glew.h	/^#define GL_UNSIGNED_INT64_VEC4_ARB /;"	d
GL_UNSIGNED_INT64_VEC4_NV	./GL/glew.h	/^#define GL_UNSIGNED_INT64_VEC4_NV /;"	d
GL_UNSIGNED_INT8_NV	./GL/glew.h	/^#define GL_UNSIGNED_INT8_NV /;"	d
GL_UNSIGNED_INT8_VEC2_NV	./GL/glew.h	/^#define GL_UNSIGNED_INT8_VEC2_NV /;"	d
GL_UNSIGNED_INT8_VEC3_NV	./GL/glew.h	/^#define GL_UNSIGNED_INT8_VEC3_NV /;"	d
GL_UNSIGNED_INT8_VEC4_NV	./GL/glew.h	/^#define GL_UNSIGNED_INT8_VEC4_NV /;"	d
GL_UNSIGNED_INT_10F_11F_11F_REV	./GL/glew.h	/^#define GL_UNSIGNED_INT_10F_11F_11F_REV /;"	d
GL_UNSIGNED_INT_10F_11F_11F_REV_APPLE	./GL/glew.h	/^#define GL_UNSIGNED_INT_10F_11F_11F_REV_APPLE /;"	d
GL_UNSIGNED_INT_10F_11F_11F_REV_EXT	./GL/glew.h	/^#define GL_UNSIGNED_INT_10F_11F_11F_REV_EXT /;"	d
GL_UNSIGNED_INT_10F_11F_11F_REV_NV	./GL/glew.h	/^#define GL_UNSIGNED_INT_10F_11F_11F_REV_NV /;"	d
GL_UNSIGNED_INT_10_10_10_2	./GL/glew.h	/^#define GL_UNSIGNED_INT_10_10_10_2 /;"	d
GL_UNSIGNED_INT_10_10_10_2_EXT	./GL/glew.h	/^#define GL_UNSIGNED_INT_10_10_10_2_EXT /;"	d
GL_UNSIGNED_INT_10_10_10_2_OES	./GL/glew.h	/^#define GL_UNSIGNED_INT_10_10_10_2_OES /;"	d
GL_UNSIGNED_INT_24_8	./GL/glew.h	/^#define GL_UNSIGNED_INT_24_8 /;"	d
GL_UNSIGNED_INT_24_8_EXT	./GL/glew.h	/^#define GL_UNSIGNED_INT_24_8_EXT /;"	d
GL_UNSIGNED_INT_24_8_NV	./GL/glew.h	/^#define GL_UNSIGNED_INT_24_8_NV /;"	d
GL_UNSIGNED_INT_24_8_OES	./GL/glew.h	/^#define GL_UNSIGNED_INT_24_8_OES /;"	d
GL_UNSIGNED_INT_2_10_10_10_REV	./GL/glew.h	/^#define GL_UNSIGNED_INT_2_10_10_10_REV /;"	d
GL_UNSIGNED_INT_2_10_10_10_REV_EXT	./GL/glew.h	/^#define GL_UNSIGNED_INT_2_10_10_10_REV_EXT /;"	d
GL_UNSIGNED_INT_5_9_9_9_REV	./GL/glew.h	/^#define GL_UNSIGNED_INT_5_9_9_9_REV /;"	d
GL_UNSIGNED_INT_5_9_9_9_REV_APPLE	./GL/glew.h	/^#define GL_UNSIGNED_INT_5_9_9_9_REV_APPLE /;"	d
GL_UNSIGNED_INT_5_9_9_9_REV_EXT	./GL/glew.h	/^#define GL_UNSIGNED_INT_5_9_9_9_REV_EXT /;"	d
GL_UNSIGNED_INT_8_8_8_8	./GL/glew.h	/^#define GL_UNSIGNED_INT_8_8_8_8 /;"	d
GL_UNSIGNED_INT_8_8_8_8_EXT	./GL/glew.h	/^#define GL_UNSIGNED_INT_8_8_8_8_EXT /;"	d
GL_UNSIGNED_INT_8_8_8_8_REV	./GL/glew.h	/^#define GL_UNSIGNED_INT_8_8_8_8_REV /;"	d
GL_UNSIGNED_INT_8_8_S8_S8_REV_NV	./GL/glew.h	/^#define GL_UNSIGNED_INT_8_8_S8_S8_REV_NV /;"	d
GL_UNSIGNED_INT_ATOMIC_COUNTER	./GL/glew.h	/^#define GL_UNSIGNED_INT_ATOMIC_COUNTER /;"	d
GL_UNSIGNED_INT_IMAGE_1D	./GL/glew.h	/^#define GL_UNSIGNED_INT_IMAGE_1D /;"	d
GL_UNSIGNED_INT_IMAGE_1D_ARRAY	./GL/glew.h	/^#define GL_UNSIGNED_INT_IMAGE_1D_ARRAY /;"	d
GL_UNSIGNED_INT_IMAGE_1D_ARRAY_EXT	./GL/glew.h	/^#define GL_UNSIGNED_INT_IMAGE_1D_ARRAY_EXT /;"	d
GL_UNSIGNED_INT_IMAGE_1D_EXT	./GL/glew.h	/^#define GL_UNSIGNED_INT_IMAGE_1D_EXT /;"	d
GL_UNSIGNED_INT_IMAGE_2D	./GL/glew.h	/^#define GL_UNSIGNED_INT_IMAGE_2D /;"	d
GL_UNSIGNED_INT_IMAGE_2D_ARRAY	./GL/glew.h	/^#define GL_UNSIGNED_INT_IMAGE_2D_ARRAY /;"	d
GL_UNSIGNED_INT_IMAGE_2D_ARRAY_EXT	./GL/glew.h	/^#define GL_UNSIGNED_INT_IMAGE_2D_ARRAY_EXT /;"	d
GL_UNSIGNED_INT_IMAGE_2D_EXT	./GL/glew.h	/^#define GL_UNSIGNED_INT_IMAGE_2D_EXT /;"	d
GL_UNSIGNED_INT_IMAGE_2D_MULTISAMPLE	./GL/glew.h	/^#define GL_UNSIGNED_INT_IMAGE_2D_MULTISAMPLE /;"	d
GL_UNSIGNED_INT_IMAGE_2D_MULTISAMPLE_ARRAY	./GL/glew.h	/^#define GL_UNSIGNED_INT_IMAGE_2D_MULTISAMPLE_ARRAY /;"	d
GL_UNSIGNED_INT_IMAGE_2D_MULTISAMPLE_ARRAY_EXT	./GL/glew.h	/^#define GL_UNSIGNED_INT_IMAGE_2D_MULTISAMPLE_ARRAY_EXT /;"	d
GL_UNSIGNED_INT_IMAGE_2D_MULTISAMPLE_EXT	./GL/glew.h	/^#define GL_UNSIGNED_INT_IMAGE_2D_MULTISAMPLE_EXT /;"	d
GL_UNSIGNED_INT_IMAGE_2D_RECT	./GL/glew.h	/^#define GL_UNSIGNED_INT_IMAGE_2D_RECT /;"	d
GL_UNSIGNED_INT_IMAGE_2D_RECT_EXT	./GL/glew.h	/^#define GL_UNSIGNED_INT_IMAGE_2D_RECT_EXT /;"	d
GL_UNSIGNED_INT_IMAGE_3D	./GL/glew.h	/^#define GL_UNSIGNED_INT_IMAGE_3D /;"	d
GL_UNSIGNED_INT_IMAGE_3D_EXT	./GL/glew.h	/^#define GL_UNSIGNED_INT_IMAGE_3D_EXT /;"	d
GL_UNSIGNED_INT_IMAGE_BUFFER	./GL/glew.h	/^#define GL_UNSIGNED_INT_IMAGE_BUFFER /;"	d
GL_UNSIGNED_INT_IMAGE_BUFFER_EXT	./GL/glew.h	/^#define GL_UNSIGNED_INT_IMAGE_BUFFER_EXT /;"	d
GL_UNSIGNED_INT_IMAGE_BUFFER_OES	./GL/glew.h	/^#define GL_UNSIGNED_INT_IMAGE_BUFFER_OES /;"	d
GL_UNSIGNED_INT_IMAGE_CUBE	./GL/glew.h	/^#define GL_UNSIGNED_INT_IMAGE_CUBE /;"	d
GL_UNSIGNED_INT_IMAGE_CUBE_EXT	./GL/glew.h	/^#define GL_UNSIGNED_INT_IMAGE_CUBE_EXT /;"	d
GL_UNSIGNED_INT_IMAGE_CUBE_MAP_ARRAY	./GL/glew.h	/^#define GL_UNSIGNED_INT_IMAGE_CUBE_MAP_ARRAY /;"	d
GL_UNSIGNED_INT_IMAGE_CUBE_MAP_ARRAY_EXT	./GL/glew.h	/^#define GL_UNSIGNED_INT_IMAGE_CUBE_MAP_ARRAY_EXT /;"	d
GL_UNSIGNED_INT_IMAGE_CUBE_MAP_ARRAY_OES	./GL/glew.h	/^#define GL_UNSIGNED_INT_IMAGE_CUBE_MAP_ARRAY_OES /;"	d
GL_UNSIGNED_INT_S8_S8_8_8_NV	./GL/glew.h	/^#define GL_UNSIGNED_INT_S8_S8_8_8_NV /;"	d
GL_UNSIGNED_INT_SAMPLER_1D	./GL/glew.h	/^#define GL_UNSIGNED_INT_SAMPLER_1D /;"	d
GL_UNSIGNED_INT_SAMPLER_1D_ARRAY	./GL/glew.h	/^#define GL_UNSIGNED_INT_SAMPLER_1D_ARRAY /;"	d
GL_UNSIGNED_INT_SAMPLER_1D_ARRAY_EXT	./GL/glew.h	/^#define GL_UNSIGNED_INT_SAMPLER_1D_ARRAY_EXT /;"	d
GL_UNSIGNED_INT_SAMPLER_1D_EXT	./GL/glew.h	/^#define GL_UNSIGNED_INT_SAMPLER_1D_EXT /;"	d
GL_UNSIGNED_INT_SAMPLER_2D	./GL/glew.h	/^#define GL_UNSIGNED_INT_SAMPLER_2D /;"	d
GL_UNSIGNED_INT_SAMPLER_2D_ARRAY	./GL/glew.h	/^#define GL_UNSIGNED_INT_SAMPLER_2D_ARRAY /;"	d
GL_UNSIGNED_INT_SAMPLER_2D_ARRAY_EXT	./GL/glew.h	/^#define GL_UNSIGNED_INT_SAMPLER_2D_ARRAY_EXT /;"	d
GL_UNSIGNED_INT_SAMPLER_2D_EXT	./GL/glew.h	/^#define GL_UNSIGNED_INT_SAMPLER_2D_EXT /;"	d
GL_UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE	./GL/glew.h	/^#define GL_UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE /;"	d
GL_UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE_ARRAY	./GL/glew.h	/^#define GL_UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE_ARRAY /;"	d
GL_UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE_ARRAY_OES	./GL/glew.h	/^#define GL_UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE_ARRAY_OES /;"	d
GL_UNSIGNED_INT_SAMPLER_2D_RECT	./GL/glew.h	/^#define GL_UNSIGNED_INT_SAMPLER_2D_RECT /;"	d
GL_UNSIGNED_INT_SAMPLER_2D_RECT_EXT	./GL/glew.h	/^#define GL_UNSIGNED_INT_SAMPLER_2D_RECT_EXT /;"	d
GL_UNSIGNED_INT_SAMPLER_3D	./GL/glew.h	/^#define GL_UNSIGNED_INT_SAMPLER_3D /;"	d
GL_UNSIGNED_INT_SAMPLER_3D_EXT	./GL/glew.h	/^#define GL_UNSIGNED_INT_SAMPLER_3D_EXT /;"	d
GL_UNSIGNED_INT_SAMPLER_BUFFER	./GL/glew.h	/^#define GL_UNSIGNED_INT_SAMPLER_BUFFER /;"	d
GL_UNSIGNED_INT_SAMPLER_BUFFER_AMD	./GL/glew.h	/^#define GL_UNSIGNED_INT_SAMPLER_BUFFER_AMD /;"	d
GL_UNSIGNED_INT_SAMPLER_BUFFER_EXT	./GL/glew.h	/^#define GL_UNSIGNED_INT_SAMPLER_BUFFER_EXT /;"	d
GL_UNSIGNED_INT_SAMPLER_BUFFER_OES	./GL/glew.h	/^#define GL_UNSIGNED_INT_SAMPLER_BUFFER_OES /;"	d
GL_UNSIGNED_INT_SAMPLER_CUBE	./GL/glew.h	/^#define GL_UNSIGNED_INT_SAMPLER_CUBE /;"	d
GL_UNSIGNED_INT_SAMPLER_CUBE_EXT	./GL/glew.h	/^#define GL_UNSIGNED_INT_SAMPLER_CUBE_EXT /;"	d
GL_UNSIGNED_INT_SAMPLER_CUBE_MAP_ARRAY	./GL/glew.h	/^#define GL_UNSIGNED_INT_SAMPLER_CUBE_MAP_ARRAY /;"	d
GL_UNSIGNED_INT_SAMPLER_CUBE_MAP_ARRAY_ARB	./GL/glew.h	/^#define GL_UNSIGNED_INT_SAMPLER_CUBE_MAP_ARRAY_ARB /;"	d
GL_UNSIGNED_INT_SAMPLER_CUBE_MAP_ARRAY_EXT	./GL/glew.h	/^#define GL_UNSIGNED_INT_SAMPLER_CUBE_MAP_ARRAY_EXT /;"	d
GL_UNSIGNED_INT_SAMPLER_CUBE_MAP_ARRAY_OES	./GL/glew.h	/^#define GL_UNSIGNED_INT_SAMPLER_CUBE_MAP_ARRAY_OES /;"	d
GL_UNSIGNED_INT_SAMPLER_RENDERBUFFER_NV	./GL/glew.h	/^#define GL_UNSIGNED_INT_SAMPLER_RENDERBUFFER_NV /;"	d
GL_UNSIGNED_INT_VEC2	./GL/glew.h	/^#define GL_UNSIGNED_INT_VEC2 /;"	d
GL_UNSIGNED_INT_VEC2_EXT	./GL/glew.h	/^#define GL_UNSIGNED_INT_VEC2_EXT /;"	d
GL_UNSIGNED_INT_VEC3	./GL/glew.h	/^#define GL_UNSIGNED_INT_VEC3 /;"	d
GL_UNSIGNED_INT_VEC3_EXT	./GL/glew.h	/^#define GL_UNSIGNED_INT_VEC3_EXT /;"	d
GL_UNSIGNED_INT_VEC4	./GL/glew.h	/^#define GL_UNSIGNED_INT_VEC4 /;"	d
GL_UNSIGNED_INT_VEC4_EXT	./GL/glew.h	/^#define GL_UNSIGNED_INT_VEC4_EXT /;"	d
GL_UNSIGNED_INVERT_NV	./GL/glew.h	/^#define GL_UNSIGNED_INVERT_NV /;"	d
GL_UNSIGNED_NORMALIZED	./GL/glew.h	/^#define GL_UNSIGNED_NORMALIZED /;"	d
GL_UNSIGNED_NORMALIZED_ARB	./GL/glew.h	/^#define GL_UNSIGNED_NORMALIZED_ARB /;"	d
GL_UNSIGNED_NORMALIZED_EXT	./GL/glew.h	/^#define GL_UNSIGNED_NORMALIZED_EXT /;"	d
GL_UNSIGNED_SHORT	./GL/glew.h	/^#define GL_UNSIGNED_SHORT /;"	d
GL_UNSIGNED_SHORT_1_5_5_5_REV	./GL/glew.h	/^#define GL_UNSIGNED_SHORT_1_5_5_5_REV /;"	d
GL_UNSIGNED_SHORT_1_5_5_5_REV_EXT	./GL/glew.h	/^#define GL_UNSIGNED_SHORT_1_5_5_5_REV_EXT /;"	d
GL_UNSIGNED_SHORT_4_4_4_4	./GL/glew.h	/^#define GL_UNSIGNED_SHORT_4_4_4_4 /;"	d
GL_UNSIGNED_SHORT_4_4_4_4_EXT	./GL/glew.h	/^#define GL_UNSIGNED_SHORT_4_4_4_4_EXT /;"	d
GL_UNSIGNED_SHORT_4_4_4_4_REV	./GL/glew.h	/^#define GL_UNSIGNED_SHORT_4_4_4_4_REV /;"	d
GL_UNSIGNED_SHORT_4_4_4_4_REV_EXT	./GL/glew.h	/^#define GL_UNSIGNED_SHORT_4_4_4_4_REV_EXT /;"	d
GL_UNSIGNED_SHORT_4_4_4_4_REV_IMG	./GL/glew.h	/^#define GL_UNSIGNED_SHORT_4_4_4_4_REV_IMG /;"	d
GL_UNSIGNED_SHORT_5_5_5_1	./GL/glew.h	/^#define GL_UNSIGNED_SHORT_5_5_5_1 /;"	d
GL_UNSIGNED_SHORT_5_5_5_1_EXT	./GL/glew.h	/^#define GL_UNSIGNED_SHORT_5_5_5_1_EXT /;"	d
GL_UNSIGNED_SHORT_5_6_5	./GL/glew.h	/^#define GL_UNSIGNED_SHORT_5_6_5 /;"	d
GL_UNSIGNED_SHORT_5_6_5_REV	./GL/glew.h	/^#define GL_UNSIGNED_SHORT_5_6_5_REV /;"	d
GL_UNSIGNED_SHORT_8_8_APPLE	./GL/glew.h	/^#define GL_UNSIGNED_SHORT_8_8_APPLE /;"	d
GL_UNSIGNED_SHORT_8_8_MESA	./GL/glew.h	/^#define GL_UNSIGNED_SHORT_8_8_MESA /;"	d
GL_UNSIGNED_SHORT_8_8_REV_APPLE	./GL/glew.h	/^#define GL_UNSIGNED_SHORT_8_8_REV_APPLE /;"	d
GL_UNSIGNED_SHORT_8_8_REV_MESA	./GL/glew.h	/^#define GL_UNSIGNED_SHORT_8_8_REV_MESA /;"	d
GL_UPLOAD_GPU_MASK_NVX	./GL/glew.h	/^#define GL_UPLOAD_GPU_MASK_NVX /;"	d
GL_UPPER_LEFT	./GL/glew.h	/^#define GL_UPPER_LEFT /;"	d
GL_UPPER_LEFT_EXT	./GL/glew.h	/^#define GL_UPPER_LEFT_EXT /;"	d
GL_USE_MISSING_GLYPH_NV	./GL/glew.h	/^#define GL_USE_MISSING_GLYPH_NV /;"	d
GL_UTF16_NV	./GL/glew.h	/^#define GL_UTF16_NV /;"	d
GL_UTF8_NV	./GL/glew.h	/^#define GL_UTF8_NV /;"	d
GL_UUID_SIZE_EXT	./GL/glew.h	/^#define GL_UUID_SIZE_EXT /;"	d
GL_V2F	./GL/glew.h	/^#define GL_V2F /;"	d
GL_V3F	./GL/glew.h	/^#define GL_V3F /;"	d
GL_VALIDATE_STATUS	./GL/glew.h	/^#define GL_VALIDATE_STATUS /;"	d
GL_VARIABLE_A_NV	./GL/glew.h	/^#define GL_VARIABLE_A_NV /;"	d
GL_VARIABLE_B_NV	./GL/glew.h	/^#define GL_VARIABLE_B_NV /;"	d
GL_VARIABLE_C_NV	./GL/glew.h	/^#define GL_VARIABLE_C_NV /;"	d
GL_VARIABLE_D_NV	./GL/glew.h	/^#define GL_VARIABLE_D_NV /;"	d
GL_VARIABLE_E_NV	./GL/glew.h	/^#define GL_VARIABLE_E_NV /;"	d
GL_VARIABLE_F_NV	./GL/glew.h	/^#define GL_VARIABLE_F_NV /;"	d
GL_VARIABLE_G_NV	./GL/glew.h	/^#define GL_VARIABLE_G_NV /;"	d
GL_VARIANT_ARRAY_EXT	./GL/glew.h	/^#define GL_VARIANT_ARRAY_EXT /;"	d
GL_VARIANT_ARRAY_POINTER_EXT	./GL/glew.h	/^#define GL_VARIANT_ARRAY_POINTER_EXT /;"	d
GL_VARIANT_ARRAY_STRIDE_EXT	./GL/glew.h	/^#define GL_VARIANT_ARRAY_STRIDE_EXT /;"	d
GL_VARIANT_ARRAY_TYPE_EXT	./GL/glew.h	/^#define GL_VARIANT_ARRAY_TYPE_EXT /;"	d
GL_VARIANT_DATATYPE_EXT	./GL/glew.h	/^#define GL_VARIANT_DATATYPE_EXT /;"	d
GL_VARIANT_EXT	./GL/glew.h	/^#define GL_VARIANT_EXT /;"	d
GL_VARIANT_VALUE_EXT	./GL/glew.h	/^#define GL_VARIANT_VALUE_EXT /;"	d
GL_VBO_FREE_MEMORY_ATI	./GL/glew.h	/^#define GL_VBO_FREE_MEMORY_ATI /;"	d
GL_VECTOR_EXT	./GL/glew.h	/^#define GL_VECTOR_EXT /;"	d
GL_VENDOR	./GL/glew.h	/^#define GL_VENDOR /;"	d
GL_VERSION	./GL/glew.h	/^#define GL_VERSION /;"	d
GL_VERSION_1_1	./GL/glew.h	/^#define GL_VERSION_1_1 /;"	d
GL_VERSION_1_2	./GL/glew.h	/^#define GL_VERSION_1_2 /;"	d
GL_VERSION_1_2_1	./GL/glew.h	/^#define GL_VERSION_1_2_1 /;"	d
GL_VERSION_1_3	./GL/glew.h	/^#define GL_VERSION_1_3 /;"	d
GL_VERSION_1_4	./GL/glew.h	/^#define GL_VERSION_1_4 /;"	d
GL_VERSION_1_5	./GL/glew.h	/^#define GL_VERSION_1_5 /;"	d
GL_VERSION_2_0	./GL/glew.h	/^#define GL_VERSION_2_0 /;"	d
GL_VERSION_2_1	./GL/glew.h	/^#define GL_VERSION_2_1 /;"	d
GL_VERSION_3_0	./GL/glew.h	/^#define GL_VERSION_3_0 /;"	d
GL_VERSION_3_1	./GL/glew.h	/^#define GL_VERSION_3_1 /;"	d
GL_VERSION_3_2	./GL/glew.h	/^#define GL_VERSION_3_2 /;"	d
GL_VERSION_3_3	./GL/glew.h	/^#define GL_VERSION_3_3 /;"	d
GL_VERSION_4_0	./GL/glew.h	/^#define GL_VERSION_4_0 /;"	d
GL_VERSION_4_1	./GL/glew.h	/^#define GL_VERSION_4_1 /;"	d
GL_VERSION_4_2	./GL/glew.h	/^#define GL_VERSION_4_2 /;"	d
GL_VERSION_4_3	./GL/glew.h	/^#define GL_VERSION_4_3 /;"	d
GL_VERSION_4_4	./GL/glew.h	/^#define GL_VERSION_4_4 /;"	d
GL_VERSION_4_5	./GL/glew.h	/^#define GL_VERSION_4_5 /;"	d
GL_VERSION_4_6	./GL/glew.h	/^#define GL_VERSION_4_6 /;"	d
GL_VERTEX23_BIT_PGI	./GL/glew.h	/^#define GL_VERTEX23_BIT_PGI /;"	d
GL_VERTEX4_BIT_PGI	./GL/glew.h	/^#define GL_VERTEX4_BIT_PGI /;"	d
GL_VERTEX_ARRAY	./GL/glew.h	/^#define GL_VERTEX_ARRAY /;"	d
GL_VERTEX_ARRAY_ADDRESS_NV	./GL/glew.h	/^#define GL_VERTEX_ARRAY_ADDRESS_NV /;"	d
GL_VERTEX_ARRAY_BINDING	./GL/glew.h	/^#define GL_VERTEX_ARRAY_BINDING /;"	d
GL_VERTEX_ARRAY_BINDING_APPLE	./GL/glew.h	/^#define GL_VERTEX_ARRAY_BINDING_APPLE /;"	d
GL_VERTEX_ARRAY_BINDING_OES	./GL/glew.h	/^#define GL_VERTEX_ARRAY_BINDING_OES /;"	d
GL_VERTEX_ARRAY_BUFFER_BINDING	./GL/glew.h	/^#define GL_VERTEX_ARRAY_BUFFER_BINDING /;"	d
GL_VERTEX_ARRAY_BUFFER_BINDING_ARB	./GL/glew.h	/^#define GL_VERTEX_ARRAY_BUFFER_BINDING_ARB /;"	d
GL_VERTEX_ARRAY_COUNT_EXT	./GL/glew.h	/^#define GL_VERTEX_ARRAY_COUNT_EXT /;"	d
GL_VERTEX_ARRAY_EXT	./GL/glew.h	/^#define GL_VERTEX_ARRAY_EXT /;"	d
GL_VERTEX_ARRAY_LENGTH_NV	./GL/glew.h	/^#define GL_VERTEX_ARRAY_LENGTH_NV /;"	d
GL_VERTEX_ARRAY_LIST_IBM	./GL/glew.h	/^#define GL_VERTEX_ARRAY_LIST_IBM /;"	d
GL_VERTEX_ARRAY_LIST_STRIDE_IBM	./GL/glew.h	/^#define GL_VERTEX_ARRAY_LIST_STRIDE_IBM /;"	d
GL_VERTEX_ARRAY_OBJECT_AMD	./GL/glew.h	/^#define GL_VERTEX_ARRAY_OBJECT_AMD /;"	d
GL_VERTEX_ARRAY_OBJECT_EXT	./GL/glew.h	/^#define GL_VERTEX_ARRAY_OBJECT_EXT /;"	d
GL_VERTEX_ARRAY_PARALLEL_POINTERS_INTEL	./GL/glew.h	/^#define GL_VERTEX_ARRAY_PARALLEL_POINTERS_INTEL /;"	d
GL_VERTEX_ARRAY_POINTER	./GL/glew.h	/^#define GL_VERTEX_ARRAY_POINTER /;"	d
GL_VERTEX_ARRAY_POINTER_EXT	./GL/glew.h	/^#define GL_VERTEX_ARRAY_POINTER_EXT /;"	d
GL_VERTEX_ARRAY_RANGE_APPLE	./GL/glew.h	/^#define GL_VERTEX_ARRAY_RANGE_APPLE /;"	d
GL_VERTEX_ARRAY_RANGE_LENGTH_APPLE	./GL/glew.h	/^#define GL_VERTEX_ARRAY_RANGE_LENGTH_APPLE /;"	d
GL_VERTEX_ARRAY_RANGE_LENGTH_NV	./GL/glew.h	/^#define GL_VERTEX_ARRAY_RANGE_LENGTH_NV /;"	d
GL_VERTEX_ARRAY_RANGE_NV	./GL/glew.h	/^#define GL_VERTEX_ARRAY_RANGE_NV /;"	d
GL_VERTEX_ARRAY_RANGE_POINTER_APPLE	./GL/glew.h	/^#define GL_VERTEX_ARRAY_RANGE_POINTER_APPLE /;"	d
GL_VERTEX_ARRAY_RANGE_POINTER_NV	./GL/glew.h	/^#define GL_VERTEX_ARRAY_RANGE_POINTER_NV /;"	d
GL_VERTEX_ARRAY_RANGE_VALID_NV	./GL/glew.h	/^#define GL_VERTEX_ARRAY_RANGE_VALID_NV /;"	d
GL_VERTEX_ARRAY_RANGE_WITHOUT_FLUSH_NV	./GL/glew.h	/^#define GL_VERTEX_ARRAY_RANGE_WITHOUT_FLUSH_NV /;"	d
GL_VERTEX_ARRAY_SIZE	./GL/glew.h	/^#define GL_VERTEX_ARRAY_SIZE /;"	d
GL_VERTEX_ARRAY_SIZE_EXT	./GL/glew.h	/^#define GL_VERTEX_ARRAY_SIZE_EXT /;"	d
GL_VERTEX_ARRAY_STORAGE_HINT_APPLE	./GL/glew.h	/^#define GL_VERTEX_ARRAY_STORAGE_HINT_APPLE /;"	d
GL_VERTEX_ARRAY_STRIDE	./GL/glew.h	/^#define GL_VERTEX_ARRAY_STRIDE /;"	d
GL_VERTEX_ARRAY_STRIDE_EXT	./GL/glew.h	/^#define GL_VERTEX_ARRAY_STRIDE_EXT /;"	d
GL_VERTEX_ARRAY_TYPE	./GL/glew.h	/^#define GL_VERTEX_ARRAY_TYPE /;"	d
GL_VERTEX_ARRAY_TYPE_EXT	./GL/glew.h	/^#define GL_VERTEX_ARRAY_TYPE_EXT /;"	d
GL_VERTEX_ATTRIB_ARRAY0_NV	./GL/glew.h	/^#define GL_VERTEX_ATTRIB_ARRAY0_NV /;"	d
GL_VERTEX_ATTRIB_ARRAY10_NV	./GL/glew.h	/^#define GL_VERTEX_ATTRIB_ARRAY10_NV /;"	d
GL_VERTEX_ATTRIB_ARRAY11_NV	./GL/glew.h	/^#define GL_VERTEX_ATTRIB_ARRAY11_NV /;"	d
GL_VERTEX_ATTRIB_ARRAY12_NV	./GL/glew.h	/^#define GL_VERTEX_ATTRIB_ARRAY12_NV /;"	d
GL_VERTEX_ATTRIB_ARRAY13_NV	./GL/glew.h	/^#define GL_VERTEX_ATTRIB_ARRAY13_NV /;"	d
GL_VERTEX_ATTRIB_ARRAY14_NV	./GL/glew.h	/^#define GL_VERTEX_ATTRIB_ARRAY14_NV /;"	d
GL_VERTEX_ATTRIB_ARRAY15_NV	./GL/glew.h	/^#define GL_VERTEX_ATTRIB_ARRAY15_NV /;"	d
GL_VERTEX_ATTRIB_ARRAY1_NV	./GL/glew.h	/^#define GL_VERTEX_ATTRIB_ARRAY1_NV /;"	d
GL_VERTEX_ATTRIB_ARRAY2_NV	./GL/glew.h	/^#define GL_VERTEX_ATTRIB_ARRAY2_NV /;"	d
GL_VERTEX_ATTRIB_ARRAY3_NV	./GL/glew.h	/^#define GL_VERTEX_ATTRIB_ARRAY3_NV /;"	d
GL_VERTEX_ATTRIB_ARRAY4_NV	./GL/glew.h	/^#define GL_VERTEX_ATTRIB_ARRAY4_NV /;"	d
GL_VERTEX_ATTRIB_ARRAY5_NV	./GL/glew.h	/^#define GL_VERTEX_ATTRIB_ARRAY5_NV /;"	d
GL_VERTEX_ATTRIB_ARRAY6_NV	./GL/glew.h	/^#define GL_VERTEX_ATTRIB_ARRAY6_NV /;"	d
GL_VERTEX_ATTRIB_ARRAY7_NV	./GL/glew.h	/^#define GL_VERTEX_ATTRIB_ARRAY7_NV /;"	d
GL_VERTEX_ATTRIB_ARRAY8_NV	./GL/glew.h	/^#define GL_VERTEX_ATTRIB_ARRAY8_NV /;"	d
GL_VERTEX_ATTRIB_ARRAY9_NV	./GL/glew.h	/^#define GL_VERTEX_ATTRIB_ARRAY9_NV /;"	d
GL_VERTEX_ATTRIB_ARRAY_ADDRESS_NV	./GL/glew.h	/^#define GL_VERTEX_ATTRIB_ARRAY_ADDRESS_NV /;"	d
GL_VERTEX_ATTRIB_ARRAY_BARRIER_BIT	./GL/glew.h	/^#define GL_VERTEX_ATTRIB_ARRAY_BARRIER_BIT /;"	d
GL_VERTEX_ATTRIB_ARRAY_BARRIER_BIT_EXT	./GL/glew.h	/^#define GL_VERTEX_ATTRIB_ARRAY_BARRIER_BIT_EXT /;"	d
GL_VERTEX_ATTRIB_ARRAY_BUFFER_BINDING	./GL/glew.h	/^#define GL_VERTEX_ATTRIB_ARRAY_BUFFER_BINDING /;"	d
GL_VERTEX_ATTRIB_ARRAY_BUFFER_BINDING_ARB	./GL/glew.h	/^#define GL_VERTEX_ATTRIB_ARRAY_BUFFER_BINDING_ARB /;"	d
GL_VERTEX_ATTRIB_ARRAY_DIVISOR	./GL/glew.h	/^#define GL_VERTEX_ATTRIB_ARRAY_DIVISOR /;"	d
GL_VERTEX_ATTRIB_ARRAY_DIVISOR_ANGLE	./GL/glew.h	/^#define GL_VERTEX_ATTRIB_ARRAY_DIVISOR_ANGLE /;"	d
GL_VERTEX_ATTRIB_ARRAY_DIVISOR_ARB	./GL/glew.h	/^#define GL_VERTEX_ATTRIB_ARRAY_DIVISOR_ARB /;"	d
GL_VERTEX_ATTRIB_ARRAY_DIVISOR_EXT	./GL/glew.h	/^#define GL_VERTEX_ATTRIB_ARRAY_DIVISOR_EXT /;"	d
GL_VERTEX_ATTRIB_ARRAY_DIVISOR_NV	./GL/glew.h	/^#define GL_VERTEX_ATTRIB_ARRAY_DIVISOR_NV /;"	d
GL_VERTEX_ATTRIB_ARRAY_ENABLED	./GL/glew.h	/^#define GL_VERTEX_ATTRIB_ARRAY_ENABLED /;"	d
GL_VERTEX_ATTRIB_ARRAY_ENABLED_ARB	./GL/glew.h	/^#define GL_VERTEX_ATTRIB_ARRAY_ENABLED_ARB /;"	d
GL_VERTEX_ATTRIB_ARRAY_INTEGER	./GL/glew.h	/^#define GL_VERTEX_ATTRIB_ARRAY_INTEGER /;"	d
GL_VERTEX_ATTRIB_ARRAY_INTEGER_EXT	./GL/glew.h	/^#define GL_VERTEX_ATTRIB_ARRAY_INTEGER_EXT /;"	d
GL_VERTEX_ATTRIB_ARRAY_INTEGER_NV	./GL/glew.h	/^#define GL_VERTEX_ATTRIB_ARRAY_INTEGER_NV /;"	d
GL_VERTEX_ATTRIB_ARRAY_LENGTH_NV	./GL/glew.h	/^#define GL_VERTEX_ATTRIB_ARRAY_LENGTH_NV /;"	d
GL_VERTEX_ATTRIB_ARRAY_LONG	./GL/glew.h	/^#define GL_VERTEX_ATTRIB_ARRAY_LONG /;"	d
GL_VERTEX_ATTRIB_ARRAY_NORMALIZED	./GL/glew.h	/^#define GL_VERTEX_ATTRIB_ARRAY_NORMALIZED /;"	d
GL_VERTEX_ATTRIB_ARRAY_NORMALIZED_ARB	./GL/glew.h	/^#define GL_VERTEX_ATTRIB_ARRAY_NORMALIZED_ARB /;"	d
GL_VERTEX_ATTRIB_ARRAY_POINTER	./GL/glew.h	/^#define GL_VERTEX_ATTRIB_ARRAY_POINTER /;"	d
GL_VERTEX_ATTRIB_ARRAY_POINTER_ARB	./GL/glew.h	/^#define GL_VERTEX_ATTRIB_ARRAY_POINTER_ARB /;"	d
GL_VERTEX_ATTRIB_ARRAY_SIZE	./GL/glew.h	/^#define GL_VERTEX_ATTRIB_ARRAY_SIZE /;"	d
GL_VERTEX_ATTRIB_ARRAY_SIZE_ARB	./GL/glew.h	/^#define GL_VERTEX_ATTRIB_ARRAY_SIZE_ARB /;"	d
GL_VERTEX_ATTRIB_ARRAY_STRIDE	./GL/glew.h	/^#define GL_VERTEX_ATTRIB_ARRAY_STRIDE /;"	d
GL_VERTEX_ATTRIB_ARRAY_STRIDE_ARB	./GL/glew.h	/^#define GL_VERTEX_ATTRIB_ARRAY_STRIDE_ARB /;"	d
GL_VERTEX_ATTRIB_ARRAY_TYPE	./GL/glew.h	/^#define GL_VERTEX_ATTRIB_ARRAY_TYPE /;"	d
GL_VERTEX_ATTRIB_ARRAY_TYPE_ARB	./GL/glew.h	/^#define GL_VERTEX_ATTRIB_ARRAY_TYPE_ARB /;"	d
GL_VERTEX_ATTRIB_ARRAY_UNIFIED_NV	./GL/glew.h	/^#define GL_VERTEX_ATTRIB_ARRAY_UNIFIED_NV /;"	d
GL_VERTEX_ATTRIB_BINDING	./GL/glew.h	/^#define GL_VERTEX_ATTRIB_BINDING /;"	d
GL_VERTEX_ATTRIB_MAP1_APPLE	./GL/glew.h	/^#define GL_VERTEX_ATTRIB_MAP1_APPLE /;"	d
GL_VERTEX_ATTRIB_MAP1_COEFF_APPLE	./GL/glew.h	/^#define GL_VERTEX_ATTRIB_MAP1_COEFF_APPLE /;"	d
GL_VERTEX_ATTRIB_MAP1_DOMAIN_APPLE	./GL/glew.h	/^#define GL_VERTEX_ATTRIB_MAP1_DOMAIN_APPLE /;"	d
GL_VERTEX_ATTRIB_MAP1_ORDER_APPLE	./GL/glew.h	/^#define GL_VERTEX_ATTRIB_MAP1_ORDER_APPLE /;"	d
GL_VERTEX_ATTRIB_MAP1_SIZE_APPLE	./GL/glew.h	/^#define GL_VERTEX_ATTRIB_MAP1_SIZE_APPLE /;"	d
GL_VERTEX_ATTRIB_MAP2_APPLE	./GL/glew.h	/^#define GL_VERTEX_ATTRIB_MAP2_APPLE /;"	d
GL_VERTEX_ATTRIB_MAP2_COEFF_APPLE	./GL/glew.h	/^#define GL_VERTEX_ATTRIB_MAP2_COEFF_APPLE /;"	d
GL_VERTEX_ATTRIB_MAP2_DOMAIN_APPLE	./GL/glew.h	/^#define GL_VERTEX_ATTRIB_MAP2_DOMAIN_APPLE /;"	d
GL_VERTEX_ATTRIB_MAP2_ORDER_APPLE	./GL/glew.h	/^#define GL_VERTEX_ATTRIB_MAP2_ORDER_APPLE /;"	d
GL_VERTEX_ATTRIB_MAP2_SIZE_APPLE	./GL/glew.h	/^#define GL_VERTEX_ATTRIB_MAP2_SIZE_APPLE /;"	d
GL_VERTEX_ATTRIB_RELATIVE_OFFSET	./GL/glew.h	/^#define GL_VERTEX_ATTRIB_RELATIVE_OFFSET /;"	d
GL_VERTEX_BINDING_BUFFER	./GL/glew.h	/^#define GL_VERTEX_BINDING_BUFFER /;"	d
GL_VERTEX_BINDING_DIVISOR	./GL/glew.h	/^#define GL_VERTEX_BINDING_DIVISOR /;"	d
GL_VERTEX_BINDING_OFFSET	./GL/glew.h	/^#define GL_VERTEX_BINDING_OFFSET /;"	d
GL_VERTEX_BINDING_STRIDE	./GL/glew.h	/^#define GL_VERTEX_BINDING_STRIDE /;"	d
GL_VERTEX_BLEND_ARB	./GL/glew.h	/^#define GL_VERTEX_BLEND_ARB /;"	d
GL_VERTEX_CONSISTENT_HINT_PGI	./GL/glew.h	/^#define GL_VERTEX_CONSISTENT_HINT_PGI /;"	d
GL_VERTEX_DATA_HINT_PGI	./GL/glew.h	/^#define GL_VERTEX_DATA_HINT_PGI /;"	d
GL_VERTEX_ELEMENT_SWIZZLE_AMD	./GL/glew.h	/^#define GL_VERTEX_ELEMENT_SWIZZLE_AMD /;"	d
GL_VERTEX_ID_NV	./GL/glew.h	/^#define GL_VERTEX_ID_NV /;"	d
GL_VERTEX_ID_SWIZZLE_AMD	./GL/glew.h	/^#define GL_VERTEX_ID_SWIZZLE_AMD /;"	d
GL_VERTEX_PRECLIP_HINT_SGIX	./GL/glew.h	/^#define GL_VERTEX_PRECLIP_HINT_SGIX /;"	d
GL_VERTEX_PRECLIP_SGIX	./GL/glew.h	/^#define GL_VERTEX_PRECLIP_SGIX /;"	d
GL_VERTEX_PROGRAM_ARB	./GL/glew.h	/^#define GL_VERTEX_PROGRAM_ARB /;"	d
GL_VERTEX_PROGRAM_BINDING_NV	./GL/glew.h	/^#define GL_VERTEX_PROGRAM_BINDING_NV /;"	d
GL_VERTEX_PROGRAM_NV	./GL/glew.h	/^#define GL_VERTEX_PROGRAM_NV /;"	d
GL_VERTEX_PROGRAM_PARAMETER_BUFFER_NV	./GL/glew.h	/^#define GL_VERTEX_PROGRAM_PARAMETER_BUFFER_NV /;"	d
GL_VERTEX_PROGRAM_POINT_SIZE	./GL/glew.h	/^#define GL_VERTEX_PROGRAM_POINT_SIZE /;"	d
GL_VERTEX_PROGRAM_POINT_SIZE_ARB	./GL/glew.h	/^#define GL_VERTEX_PROGRAM_POINT_SIZE_ARB /;"	d
GL_VERTEX_PROGRAM_POINT_SIZE_NV	./GL/glew.h	/^#define GL_VERTEX_PROGRAM_POINT_SIZE_NV /;"	d
GL_VERTEX_PROGRAM_TWO_SIDE	./GL/glew.h	/^#define GL_VERTEX_PROGRAM_TWO_SIDE /;"	d
GL_VERTEX_PROGRAM_TWO_SIDE_ARB	./GL/glew.h	/^#define GL_VERTEX_PROGRAM_TWO_SIDE_ARB /;"	d
GL_VERTEX_PROGRAM_TWO_SIDE_NV	./GL/glew.h	/^#define GL_VERTEX_PROGRAM_TWO_SIDE_NV /;"	d
GL_VERTEX_SHADER	./GL/glew.h	/^#define GL_VERTEX_SHADER /;"	d
GL_VERTEX_SHADER_ARB	./GL/glew.h	/^#define GL_VERTEX_SHADER_ARB /;"	d
GL_VERTEX_SHADER_BINDING_EXT	./GL/glew.h	/^#define GL_VERTEX_SHADER_BINDING_EXT /;"	d
GL_VERTEX_SHADER_BIT	./GL/glew.h	/^#define GL_VERTEX_SHADER_BIT /;"	d
GL_VERTEX_SHADER_EXT	./GL/glew.h	/^#define GL_VERTEX_SHADER_EXT /;"	d
GL_VERTEX_SHADER_INSTRUCTIONS_EXT	./GL/glew.h	/^#define GL_VERTEX_SHADER_INSTRUCTIONS_EXT /;"	d
GL_VERTEX_SHADER_INVARIANTS_EXT	./GL/glew.h	/^#define GL_VERTEX_SHADER_INVARIANTS_EXT /;"	d
GL_VERTEX_SHADER_INVOCATIONS	./GL/glew.h	/^#define GL_VERTEX_SHADER_INVOCATIONS /;"	d
GL_VERTEX_SHADER_INVOCATIONS_ARB	./GL/glew.h	/^#define GL_VERTEX_SHADER_INVOCATIONS_ARB /;"	d
GL_VERTEX_SHADER_LOCALS_EXT	./GL/glew.h	/^#define GL_VERTEX_SHADER_LOCALS_EXT /;"	d
GL_VERTEX_SHADER_LOCAL_CONSTANTS_EXT	./GL/glew.h	/^#define GL_VERTEX_SHADER_LOCAL_CONSTANTS_EXT /;"	d
GL_VERTEX_SHADER_OPTIMIZED_EXT	./GL/glew.h	/^#define GL_VERTEX_SHADER_OPTIMIZED_EXT /;"	d
GL_VERTEX_SHADER_VARIANTS_EXT	./GL/glew.h	/^#define GL_VERTEX_SHADER_VARIANTS_EXT /;"	d
GL_VERTEX_SOURCE_ATI	./GL/glew.h	/^#define GL_VERTEX_SOURCE_ATI /;"	d
GL_VERTEX_STATE_PROGRAM_NV	./GL/glew.h	/^#define GL_VERTEX_STATE_PROGRAM_NV /;"	d
GL_VERTEX_STREAM0_ATI	./GL/glew.h	/^#define GL_VERTEX_STREAM0_ATI /;"	d
GL_VERTEX_STREAM1_ATI	./GL/glew.h	/^#define GL_VERTEX_STREAM1_ATI /;"	d
GL_VERTEX_STREAM2_ATI	./GL/glew.h	/^#define GL_VERTEX_STREAM2_ATI /;"	d
GL_VERTEX_STREAM3_ATI	./GL/glew.h	/^#define GL_VERTEX_STREAM3_ATI /;"	d
GL_VERTEX_STREAM4_ATI	./GL/glew.h	/^#define GL_VERTEX_STREAM4_ATI /;"	d
GL_VERTEX_STREAM5_ATI	./GL/glew.h	/^#define GL_VERTEX_STREAM5_ATI /;"	d
GL_VERTEX_STREAM6_ATI	./GL/glew.h	/^#define GL_VERTEX_STREAM6_ATI /;"	d
GL_VERTEX_STREAM7_ATI	./GL/glew.h	/^#define GL_VERTEX_STREAM7_ATI /;"	d
GL_VERTEX_SUBROUTINE	./GL/glew.h	/^#define GL_VERTEX_SUBROUTINE /;"	d
GL_VERTEX_SUBROUTINE_UNIFORM	./GL/glew.h	/^#define GL_VERTEX_SUBROUTINE_UNIFORM /;"	d
GL_VERTEX_TEXTURE	./GL/glew.h	/^#define GL_VERTEX_TEXTURE /;"	d
GL_VERTEX_WEIGHTING_EXT	./GL/glew.h	/^#define GL_VERTEX_WEIGHTING_EXT /;"	d
GL_VERTEX_WEIGHT_ARRAY_EXT	./GL/glew.h	/^#define GL_VERTEX_WEIGHT_ARRAY_EXT /;"	d
GL_VERTEX_WEIGHT_ARRAY_POINTER_EXT	./GL/glew.h	/^#define GL_VERTEX_WEIGHT_ARRAY_POINTER_EXT /;"	d
GL_VERTEX_WEIGHT_ARRAY_SIZE_EXT	./GL/glew.h	/^#define GL_VERTEX_WEIGHT_ARRAY_SIZE_EXT /;"	d
GL_VERTEX_WEIGHT_ARRAY_STRIDE_EXT	./GL/glew.h	/^#define GL_VERTEX_WEIGHT_ARRAY_STRIDE_EXT /;"	d
GL_VERTEX_WEIGHT_ARRAY_TYPE_EXT	./GL/glew.h	/^#define GL_VERTEX_WEIGHT_ARRAY_TYPE_EXT /;"	d
GL_VERTICAL_LINE_TO_NV	./GL/glew.h	/^#define GL_VERTICAL_LINE_TO_NV /;"	d
GL_VERTICES_SUBMITTED	./GL/glew.h	/^#define GL_VERTICES_SUBMITTED /;"	d
GL_VERTICES_SUBMITTED_ARB	./GL/glew.h	/^#define GL_VERTICES_SUBMITTED_ARB /;"	d
GL_VIBRANCE_BIAS_NV	./GL/glew.h	/^#define GL_VIBRANCE_BIAS_NV /;"	d
GL_VIBRANCE_SCALE_NV	./GL/glew.h	/^#define GL_VIBRANCE_SCALE_NV /;"	d
GL_VIDEO_BUFFER_BINDING_NV	./GL/glew.h	/^#define GL_VIDEO_BUFFER_BINDING_NV /;"	d
GL_VIDEO_BUFFER_INTERNAL_FORMAT_NV	./GL/glew.h	/^#define GL_VIDEO_BUFFER_INTERNAL_FORMAT_NV /;"	d
GL_VIDEO_BUFFER_NV	./GL/glew.h	/^#define GL_VIDEO_BUFFER_NV /;"	d
GL_VIDEO_BUFFER_PITCH_NV	./GL/glew.h	/^#define GL_VIDEO_BUFFER_PITCH_NV /;"	d
GL_VIDEO_CAPTURE_FIELD_LOWER_HEIGHT_NV	./GL/glew.h	/^#define GL_VIDEO_CAPTURE_FIELD_LOWER_HEIGHT_NV /;"	d
GL_VIDEO_CAPTURE_FIELD_UPPER_HEIGHT_NV	./GL/glew.h	/^#define GL_VIDEO_CAPTURE_FIELD_UPPER_HEIGHT_NV /;"	d
GL_VIDEO_CAPTURE_FRAME_HEIGHT_NV	./GL/glew.h	/^#define GL_VIDEO_CAPTURE_FRAME_HEIGHT_NV /;"	d
GL_VIDEO_CAPTURE_FRAME_WIDTH_NV	./GL/glew.h	/^#define GL_VIDEO_CAPTURE_FRAME_WIDTH_NV /;"	d
GL_VIDEO_CAPTURE_SURFACE_ORIGIN_NV	./GL/glew.h	/^#define GL_VIDEO_CAPTURE_SURFACE_ORIGIN_NV /;"	d
GL_VIDEO_CAPTURE_TO_422_SUPPORTED_NV	./GL/glew.h	/^#define GL_VIDEO_CAPTURE_TO_422_SUPPORTED_NV /;"	d
GL_VIDEO_COLOR_CONVERSION_MATRIX_NV	./GL/glew.h	/^#define GL_VIDEO_COLOR_CONVERSION_MATRIX_NV /;"	d
GL_VIDEO_COLOR_CONVERSION_MAX_NV	./GL/glew.h	/^#define GL_VIDEO_COLOR_CONVERSION_MAX_NV /;"	d
GL_VIDEO_COLOR_CONVERSION_MIN_NV	./GL/glew.h	/^#define GL_VIDEO_COLOR_CONVERSION_MIN_NV /;"	d
GL_VIDEO_COLOR_CONVERSION_OFFSET_NV	./GL/glew.h	/^#define GL_VIDEO_COLOR_CONVERSION_OFFSET_NV /;"	d
GL_VIDEO_RESIZE_COMPENSATION_SUN	./GL/glxew.h	/^#define GL_VIDEO_RESIZE_COMPENSATION_SUN /;"	d
GL_VIEWPORT	./GL/glew.h	/^#define GL_VIEWPORT /;"	d
GL_VIEWPORT_BIT	./GL/glew.h	/^#define GL_VIEWPORT_BIT /;"	d
GL_VIEWPORT_BOUNDS_RANGE	./GL/glew.h	/^#define GL_VIEWPORT_BOUNDS_RANGE /;"	d
GL_VIEWPORT_BOUNDS_RANGE_NV	./GL/glew.h	/^#define GL_VIEWPORT_BOUNDS_RANGE_NV /;"	d
GL_VIEWPORT_COMMAND_NV	./GL/glew.h	/^#define GL_VIEWPORT_COMMAND_NV /;"	d
GL_VIEWPORT_INDEX_PROVOKING_VERTEX	./GL/glew.h	/^#define GL_VIEWPORT_INDEX_PROVOKING_VERTEX /;"	d
GL_VIEWPORT_INDEX_PROVOKING_VERTEX_NV	./GL/glew.h	/^#define GL_VIEWPORT_INDEX_PROVOKING_VERTEX_NV /;"	d
GL_VIEWPORT_POSITION_W_SCALE_NV	./GL/glew.h	/^#define GL_VIEWPORT_POSITION_W_SCALE_NV /;"	d
GL_VIEWPORT_POSITION_W_SCALE_X_COEFF_NV	./GL/glew.h	/^#define GL_VIEWPORT_POSITION_W_SCALE_X_COEFF_NV /;"	d
GL_VIEWPORT_POSITION_W_SCALE_Y_COEFF_NV	./GL/glew.h	/^#define GL_VIEWPORT_POSITION_W_SCALE_Y_COEFF_NV /;"	d
GL_VIEWPORT_SUBPIXEL_BITS	./GL/glew.h	/^#define GL_VIEWPORT_SUBPIXEL_BITS /;"	d
GL_VIEWPORT_SUBPIXEL_BITS_NV	./GL/glew.h	/^#define GL_VIEWPORT_SUBPIXEL_BITS_NV /;"	d
GL_VIEWPORT_SWIZZLE_NEGATIVE_W_NV	./GL/glew.h	/^#define GL_VIEWPORT_SWIZZLE_NEGATIVE_W_NV /;"	d
GL_VIEWPORT_SWIZZLE_NEGATIVE_X_NV	./GL/glew.h	/^#define GL_VIEWPORT_SWIZZLE_NEGATIVE_X_NV /;"	d
GL_VIEWPORT_SWIZZLE_NEGATIVE_Y_NV	./GL/glew.h	/^#define GL_VIEWPORT_SWIZZLE_NEGATIVE_Y_NV /;"	d
GL_VIEWPORT_SWIZZLE_NEGATIVE_Z_NV	./GL/glew.h	/^#define GL_VIEWPORT_SWIZZLE_NEGATIVE_Z_NV /;"	d
GL_VIEWPORT_SWIZZLE_POSITIVE_W_NV	./GL/glew.h	/^#define GL_VIEWPORT_SWIZZLE_POSITIVE_W_NV /;"	d
GL_VIEWPORT_SWIZZLE_POSITIVE_X_NV	./GL/glew.h	/^#define GL_VIEWPORT_SWIZZLE_POSITIVE_X_NV /;"	d
GL_VIEWPORT_SWIZZLE_POSITIVE_Y_NV	./GL/glew.h	/^#define GL_VIEWPORT_SWIZZLE_POSITIVE_Y_NV /;"	d
GL_VIEWPORT_SWIZZLE_POSITIVE_Z_NV	./GL/glew.h	/^#define GL_VIEWPORT_SWIZZLE_POSITIVE_Z_NV /;"	d
GL_VIEWPORT_SWIZZLE_W_NV	./GL/glew.h	/^#define GL_VIEWPORT_SWIZZLE_W_NV /;"	d
GL_VIEWPORT_SWIZZLE_X_NV	./GL/glew.h	/^#define GL_VIEWPORT_SWIZZLE_X_NV /;"	d
GL_VIEWPORT_SWIZZLE_Y_NV	./GL/glew.h	/^#define GL_VIEWPORT_SWIZZLE_Y_NV /;"	d
GL_VIEWPORT_SWIZZLE_Z_NV	./GL/glew.h	/^#define GL_VIEWPORT_SWIZZLE_Z_NV /;"	d
GL_VIEW_CLASS_128_BITS	./GL/glew.h	/^#define GL_VIEW_CLASS_128_BITS /;"	d
GL_VIEW_CLASS_16_BITS	./GL/glew.h	/^#define GL_VIEW_CLASS_16_BITS /;"	d
GL_VIEW_CLASS_24_BITS	./GL/glew.h	/^#define GL_VIEW_CLASS_24_BITS /;"	d
GL_VIEW_CLASS_32_BITS	./GL/glew.h	/^#define GL_VIEW_CLASS_32_BITS /;"	d
GL_VIEW_CLASS_48_BITS	./GL/glew.h	/^#define GL_VIEW_CLASS_48_BITS /;"	d
GL_VIEW_CLASS_64_BITS	./GL/glew.h	/^#define GL_VIEW_CLASS_64_BITS /;"	d
GL_VIEW_CLASS_8_BITS	./GL/glew.h	/^#define GL_VIEW_CLASS_8_BITS /;"	d
GL_VIEW_CLASS_96_BITS	./GL/glew.h	/^#define GL_VIEW_CLASS_96_BITS /;"	d
GL_VIEW_CLASS_BPTC_FLOAT	./GL/glew.h	/^#define GL_VIEW_CLASS_BPTC_FLOAT /;"	d
GL_VIEW_CLASS_BPTC_UNORM	./GL/glew.h	/^#define GL_VIEW_CLASS_BPTC_UNORM /;"	d
GL_VIEW_CLASS_RGTC1_RED	./GL/glew.h	/^#define GL_VIEW_CLASS_RGTC1_RED /;"	d
GL_VIEW_CLASS_RGTC2_RG	./GL/glew.h	/^#define GL_VIEW_CLASS_RGTC2_RG /;"	d
GL_VIEW_CLASS_S3TC_DXT1_RGB	./GL/glew.h	/^#define GL_VIEW_CLASS_S3TC_DXT1_RGB /;"	d
GL_VIEW_CLASS_S3TC_DXT1_RGBA	./GL/glew.h	/^#define GL_VIEW_CLASS_S3TC_DXT1_RGBA /;"	d
GL_VIEW_CLASS_S3TC_DXT3_RGBA	./GL/glew.h	/^#define GL_VIEW_CLASS_S3TC_DXT3_RGBA /;"	d
GL_VIEW_CLASS_S3TC_DXT5_RGBA	./GL/glew.h	/^#define GL_VIEW_CLASS_S3TC_DXT5_RGBA /;"	d
GL_VIEW_COMPATIBILITY_CLASS	./GL/glew.h	/^#define GL_VIEW_COMPATIBILITY_CLASS /;"	d
GL_VIRTUAL_PAGE_SIZE_INDEX_ARB	./GL/glew.h	/^#define GL_VIRTUAL_PAGE_SIZE_INDEX_ARB /;"	d
GL_VIRTUAL_PAGE_SIZE_INDEX_EXT	./GL/glew.h	/^#define GL_VIRTUAL_PAGE_SIZE_INDEX_EXT /;"	d
GL_VIRTUAL_PAGE_SIZE_X_AMD	./GL/glew.h	/^#define GL_VIRTUAL_PAGE_SIZE_X_AMD /;"	d
GL_VIRTUAL_PAGE_SIZE_X_ARB	./GL/glew.h	/^#define GL_VIRTUAL_PAGE_SIZE_X_ARB /;"	d
GL_VIRTUAL_PAGE_SIZE_X_EXT	./GL/glew.h	/^#define GL_VIRTUAL_PAGE_SIZE_X_EXT /;"	d
GL_VIRTUAL_PAGE_SIZE_Y_AMD	./GL/glew.h	/^#define GL_VIRTUAL_PAGE_SIZE_Y_AMD /;"	d
GL_VIRTUAL_PAGE_SIZE_Y_ARB	./GL/glew.h	/^#define GL_VIRTUAL_PAGE_SIZE_Y_ARB /;"	d
GL_VIRTUAL_PAGE_SIZE_Y_EXT	./GL/glew.h	/^#define GL_VIRTUAL_PAGE_SIZE_Y_EXT /;"	d
GL_VIRTUAL_PAGE_SIZE_Z_AMD	./GL/glew.h	/^#define GL_VIRTUAL_PAGE_SIZE_Z_AMD /;"	d
GL_VIRTUAL_PAGE_SIZE_Z_ARB	./GL/glew.h	/^#define GL_VIRTUAL_PAGE_SIZE_Z_ARB /;"	d
GL_VIRTUAL_PAGE_SIZE_Z_EXT	./GL/glew.h	/^#define GL_VIRTUAL_PAGE_SIZE_Z_EXT /;"	d
GL_VIVIDLIGHT_NV	./GL/glew.h	/^#define GL_VIVIDLIGHT_NV /;"	d
GL_VIV_shader_binary	./GL/glew.h	/^#define GL_VIV_shader_binary /;"	d
GL_VOLATILE_APPLE	./GL/glew.h	/^#define GL_VOLATILE_APPLE /;"	d
GL_WAIT_FAILED	./GL/glew.h	/^#define GL_WAIT_FAILED /;"	d
GL_WAIT_FAILED_APPLE	./GL/glew.h	/^#define GL_WAIT_FAILED_APPLE /;"	d
GL_WARPS_PER_SM_NV	./GL/glew.h	/^#define GL_WARPS_PER_SM_NV /;"	d
GL_WARP_SIZE_NV	./GL/glew.h	/^#define GL_WARP_SIZE_NV /;"	d
GL_WEIGHTED_AVERAGE_ARB	./GL/glew.h	/^#define GL_WEIGHTED_AVERAGE_ARB /;"	d
GL_WEIGHTED_AVERAGE_EXT	./GL/glew.h	/^#define GL_WEIGHTED_AVERAGE_EXT /;"	d
GL_WEIGHT_ARRAY_ARB	./GL/glew.h	/^#define GL_WEIGHT_ARRAY_ARB /;"	d
GL_WEIGHT_ARRAY_BUFFER_BINDING	./GL/glew.h	/^#define GL_WEIGHT_ARRAY_BUFFER_BINDING /;"	d
GL_WEIGHT_ARRAY_BUFFER_BINDING_ARB	./GL/glew.h	/^#define GL_WEIGHT_ARRAY_BUFFER_BINDING_ARB /;"	d
GL_WEIGHT_ARRAY_BUFFER_BINDING_OES	./GL/glew.h	/^#define GL_WEIGHT_ARRAY_BUFFER_BINDING_OES /;"	d
GL_WEIGHT_ARRAY_OES	./GL/glew.h	/^#define GL_WEIGHT_ARRAY_OES /;"	d
GL_WEIGHT_ARRAY_POINTER_ARB	./GL/glew.h	/^#define GL_WEIGHT_ARRAY_POINTER_ARB /;"	d
GL_WEIGHT_ARRAY_POINTER_OES	./GL/glew.h	/^#define GL_WEIGHT_ARRAY_POINTER_OES /;"	d
GL_WEIGHT_ARRAY_SIZE_ARB	./GL/glew.h	/^#define GL_WEIGHT_ARRAY_SIZE_ARB /;"	d
GL_WEIGHT_ARRAY_SIZE_OES	./GL/glew.h	/^#define GL_WEIGHT_ARRAY_SIZE_OES /;"	d
GL_WEIGHT_ARRAY_STRIDE_ARB	./GL/glew.h	/^#define GL_WEIGHT_ARRAY_STRIDE_ARB /;"	d
GL_WEIGHT_ARRAY_STRIDE_OES	./GL/glew.h	/^#define GL_WEIGHT_ARRAY_STRIDE_OES /;"	d
GL_WEIGHT_ARRAY_TYPE_ARB	./GL/glew.h	/^#define GL_WEIGHT_ARRAY_TYPE_ARB /;"	d
GL_WEIGHT_ARRAY_TYPE_OES	./GL/glew.h	/^#define GL_WEIGHT_ARRAY_TYPE_OES /;"	d
GL_WEIGHT_SUM_UNITY_ARB	./GL/glew.h	/^#define GL_WEIGHT_SUM_UNITY_ARB /;"	d
GL_WIDE_LINE_HINT_PGI	./GL/glew.h	/^#define GL_WIDE_LINE_HINT_PGI /;"	d
GL_WINDOW_RECTANGLE_EXT	./GL/glew.h	/^#define GL_WINDOW_RECTANGLE_EXT /;"	d
GL_WINDOW_RECTANGLE_MODE_EXT	./GL/glew.h	/^#define GL_WINDOW_RECTANGLE_MODE_EXT /;"	d
GL_WIN_phong_shading	./GL/glew.h	/^#define GL_WIN_phong_shading /;"	d
GL_WIN_scene_markerXXX	./GL/glew.h	/^#define GL_WIN_scene_markerXXX /;"	d
GL_WIN_specular_fog	./GL/glew.h	/^#define GL_WIN_specular_fog /;"	d
GL_WIN_swap_hint	./GL/glew.h	/^#define GL_WIN_swap_hint /;"	d
GL_WRAP_BORDER	./GL/glew.h	/^#define GL_WRAP_BORDER /;"	d
GL_WRAP_BORDER_SUN	./GL/glew.h	/^#define GL_WRAP_BORDER_SUN /;"	d
GL_WRITEONLY_RENDERING_QCOM	./GL/glew.h	/^#define GL_WRITEONLY_RENDERING_QCOM /;"	d
GL_WRITE_DISCARD_NV	./GL/glew.h	/^#define GL_WRITE_DISCARD_NV /;"	d
GL_WRITE_ONLY	./GL/glew.h	/^#define GL_WRITE_ONLY /;"	d
GL_WRITE_ONLY_ARB	./GL/glew.h	/^#define GL_WRITE_ONLY_ARB /;"	d
GL_WRITE_ONLY_OES	./GL/glew.h	/^#define GL_WRITE_ONLY_OES /;"	d
GL_WRITE_PIXEL_DATA_RANGE_LENGTH_NV	./GL/glew.h	/^#define GL_WRITE_PIXEL_DATA_RANGE_LENGTH_NV /;"	d
GL_WRITE_PIXEL_DATA_RANGE_NV	./GL/glew.h	/^#define GL_WRITE_PIXEL_DATA_RANGE_NV /;"	d
GL_WRITE_PIXEL_DATA_RANGE_POINTER_NV	./GL/glew.h	/^#define GL_WRITE_PIXEL_DATA_RANGE_POINTER_NV /;"	d
GL_W_EXT	./GL/glew.h	/^#define GL_W_EXT /;"	d
GL_XOR	./GL/glew.h	/^#define GL_XOR /;"	d
GL_XOR_NV	./GL/glew.h	/^#define GL_XOR_NV /;"	d
GL_X_EXT	./GL/glew.h	/^#define GL_X_EXT /;"	d
GL_YCBAYCR8A_4224_NV	./GL/glew.h	/^#define GL_YCBAYCR8A_4224_NV /;"	d
GL_YCBCR_422_APPLE	./GL/glew.h	/^#define GL_YCBCR_422_APPLE /;"	d
GL_YCBCR_MESA	./GL/glew.h	/^#define GL_YCBCR_MESA /;"	d
GL_YCBYCR8_422_NV	./GL/glew.h	/^#define GL_YCBYCR8_422_NV /;"	d
GL_YCRCBA_SGIX	./GL/glew.h	/^#define GL_YCRCBA_SGIX /;"	d
GL_YCRCB_SGIX	./GL/glew.h	/^#define GL_YCRCB_SGIX /;"	d
GL_Y_EXT	./GL/glew.h	/^#define GL_Y_EXT /;"	d
GL_Z400_BINARY_AMD	./GL/glew.h	/^#define GL_Z400_BINARY_AMD /;"	d
GL_Z4Y12Z4CB12Z4A12Z4Y12Z4CR12Z4A12_4224_NV	./GL/glew.h	/^#define GL_Z4Y12Z4CB12Z4A12Z4Y12Z4CR12Z4A12_4224_NV /;"	d
GL_Z4Y12Z4CB12Z4CR12_444_NV	./GL/glew.h	/^#define GL_Z4Y12Z4CB12Z4CR12_444_NV /;"	d
GL_Z4Y12Z4CB12Z4Y12Z4CR12_422_NV	./GL/glew.h	/^#define GL_Z4Y12Z4CB12Z4Y12Z4CR12_422_NV /;"	d
GL_Z6Y10Z6CB10Z6A10Z6Y10Z6CR10Z6A10_4224_NV	./GL/glew.h	/^#define GL_Z6Y10Z6CB10Z6A10Z6Y10Z6CR10Z6A10_4224_NV /;"	d
GL_Z6Y10Z6CB10Z6Y10Z6CR10_422_NV	./GL/glew.h	/^#define GL_Z6Y10Z6CB10Z6Y10Z6CR10_422_NV /;"	d
GL_ZERO	./GL/glew.h	/^#define GL_ZERO /;"	d
GL_ZERO_EXT	./GL/glew.h	/^#define GL_ZERO_EXT /;"	d
GL_ZERO_TO_ONE	./GL/glew.h	/^#define GL_ZERO_TO_ONE /;"	d
GL_ZERO_TO_ONE_EXT	./GL/glew.h	/^#define GL_ZERO_TO_ONE_EXT /;"	d
GL_ZOOM_X	./GL/glew.h	/^#define GL_ZOOM_X /;"	d
GL_ZOOM_Y	./GL/glew.h	/^#define GL_ZOOM_Y /;"	d
GL_Z_EXT	./GL/glew.h	/^#define GL_Z_EXT /;"	d
GLbitfield	./GL/glew.h	/^typedef unsigned int GLbitfield;$/;"	t	typeref:typename:unsigned int
GLboolean	./GL/glew.h	/^typedef unsigned char GLboolean;$/;"	t	typeref:typename:unsigned char
GLbyte	./GL/glew.h	/^typedef signed char GLbyte;$/;"	t	typeref:typename:signed char
GLchar	./GL/glew.h	/^typedef char GLchar;$/;"	t	typeref:typename:char
GLcharARB	./GL/glew.h	/^typedef char GLcharARB;$/;"	t	typeref:typename:char
GLclampd	./GL/glew.h	/^typedef double GLclampd;$/;"	t	typeref:typename:double
GLclampf	./GL/glew.h	/^typedef float GLclampf;$/;"	t	typeref:typename:float
GLclampx	./GL/glew.h	/^typedef int GLclampx;$/;"	t	typeref:typename:int
GLdouble	./GL/glew.h	/^typedef double GLdouble;$/;"	t	typeref:typename:double
GLeglClientBufferEXT	./GL/glew.h	/^typedef void* GLeglClientBufferEXT;$/;"	t	typeref:typename:void *
GLeglImageOES	./GL/glew.h	/^typedef void *GLeglImageOES; \/* GL_EXT_EGL_image_storage *\/$/;"	t	typeref:typename:void *
GLenum	./GL/glew.h	/^typedef unsigned int GLenum;$/;"	t	typeref:typename:unsigned int
GLfixed	./GL/glew.h	/^typedef int GLfixed;$/;"	t	typeref:typename:int
GLfloat	./GL/glew.h	/^typedef float GLfloat;$/;"	t	typeref:typename:float
GLhalf	./GL/glew.h	/^typedef unsigned short GLhalf;$/;"	t	typeref:typename:unsigned short
GLhandleARB	./GL/glew.h	/^typedef unsigned int GLhandleARB;$/;"	t	typeref:typename:unsigned int
GLint	./GL/glew.h	/^typedef int GLint;$/;"	t	typeref:typename:int
GLint64	./GL/glew.h	/^typedef GLint64EXT  GLint64;$/;"	t	typeref:typename:GLint64EXT
GLint64EXT	./GL/glew.h	/^typedef __int64 GLint64EXT;$/;"	t	typeref:typename:__int64
GLint64EXT	./GL/glew.h	/^typedef int64_t GLint64EXT;$/;"	t	typeref:typename:int64_t
GLint64EXT	./GL/glew.h	/^typedef signed long long GLint64EXT;$/;"	t	typeref:typename:signed long long
GLintptr	./GL/glew.h	/^typedef ptrdiff_t GLintptr;$/;"	t	typeref:typename:ptrdiff_t
GLintptrARB	./GL/glew.h	/^typedef ptrdiff_t GLintptrARB;$/;"	t	typeref:typename:ptrdiff_t
GLshort	./GL/glew.h	/^typedef short GLshort;$/;"	t	typeref:typename:short
GLsizei	./GL/glew.h	/^typedef int GLsizei;$/;"	t	typeref:typename:int
GLsizeiptr	./GL/glew.h	/^typedef ptrdiff_t GLsizeiptr;$/;"	t	typeref:typename:ptrdiff_t
GLsizeiptrARB	./GL/glew.h	/^typedef ptrdiff_t GLsizeiptrARB;$/;"	t	typeref:typename:ptrdiff_t
GLsync	./GL/glew.h	/^typedef struct __GLsync *GLsync;$/;"	t	typeref:struct:__GLsync *
GLubyte	./GL/glew.h	/^typedef unsigned char GLubyte;$/;"	t	typeref:typename:unsigned char
GLuint	./GL/glew.h	/^typedef unsigned int GLuint;$/;"	t	typeref:typename:unsigned int
GLuint64	./GL/glew.h	/^typedef GLuint64EXT GLuint64;$/;"	t	typeref:typename:GLuint64EXT
GLuint64EXT	./GL/glew.h	/^typedef uint64_t GLuint64EXT;$/;"	t	typeref:typename:uint64_t
GLuint64EXT	./GL/glew.h	/^typedef unsigned __int64 GLuint64EXT;$/;"	t	typeref:typename:unsigned __int64
GLuint64EXT	./GL/glew.h	/^typedef unsigned long long GLuint64EXT;$/;"	t	typeref:typename:unsigned long long
GLulong	./GL/glew.h	/^typedef unsigned long GLulong;$/;"	t	typeref:typename:unsigned long
GLushort	./GL/glew.h	/^typedef unsigned short GLushort;$/;"	t	typeref:typename:unsigned short
GLvdpauSurfaceNV	./GL/glew.h	/^typedef GLintptr GLvdpauSurfaceNV;$/;"	t	typeref:typename:GLintptr
GLvoid	./GL/glew.h	/^typedef void GLvoid;$/;"	t	typeref:typename:void
GPU_DEVICE	./GL/wglew.h	/^} GPU_DEVICE, *PGPU_DEVICE;$/;"	t	typeref:struct:_GPU_DEVICE
HEX	./glm/build/CMakeFiles/3.31.0-rc1/CompilerIdC/CMakeCCompilerId.c	/^#define HEX(/;"	d	file:
HEX	./glm/build/CMakeFiles/3.31.0-rc1/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^#define HEX(/;"	d	file:
ID_VOID_MAIN	./glm/build/CMakeFiles/3.31.0-rc1/CompilerIdC/CMakeCCompilerId.c	/^# define ID_VOID_MAIN$/;"	d	file:
LabelFalse	./glm/gtx/string_cast.inl	/^	static const char* LabelFalse = "false";$/;"	v	namespace:glm::detail	typeref:typename:const char *	file:
LabelTrue	./glm/gtx/string_cast.inl	/^	static const char* LabelTrue = "true";$/;"	v	namespace:glm::detail	typeref:typename:const char *	file:
MAX_VERTEX_TEXTURE_IMAGE_UNITS_ARB	./GL/glew.h	/^#define MAX_VERTEX_TEXTURE_IMAGE_UNITS_ARB /;"	d
MSVC_CXX_ARCHITECTURE_ID	./glm/build/CMakeFiles/3.31.0-rc1/CMakeCXXCompiler.cmake	/^set(MSVC_CXX_ARCHITECTURE_ID x64)$/;"	v
MSVC_C_ARCHITECTURE_ID	./glm/build/CMakeFiles/3.31.0-rc1/CMakeCCompiler.cmake	/^set(MSVC_C_ARCHITECTURE_ID x64)$/;"	v
PFNEGLBINDAPIPROC	./GL/eglew.h	/^typedef EGLBoolean  ( * PFNEGLBINDAPIPROC) (EGLenum  api);$/;"	t	typeref:typename:EGLBoolean (*)(EGLenum api)
PFNEGLBINDTEXIMAGEPROC	./GL/eglew.h	/^typedef EGLBoolean  ( * PFNEGLBINDTEXIMAGEPROC) (EGLDisplay  dpy, EGLSurface  surface, EGLint  b/;"	t	typeref:typename:EGLBoolean (*)(EGLDisplay dpy,EGLSurface surface,EGLint buffer)
PFNEGLBINDWAYLANDDISPLAYWLPROC	./GL/eglew.h	/^typedef EGLBoolean ( * PFNEGLBINDWAYLANDDISPLAYWLPROC) (EGLDisplay dpy, struct wl_display* displ/;"	t	typeref:typename:EGLBoolean (*)(EGLDisplay dpy,struct wl_display * display)
PFNEGLCHOOSECONFIGPROC	./GL/eglew.h	/^typedef EGLBoolean  ( * PFNEGLCHOOSECONFIGPROC) (EGLDisplay  dpy, const EGLint * attrib_list, EG/;"	t	typeref:typename:EGLBoolean (*)(EGLDisplay dpy,const EGLint * attrib_list,EGLConfig * configs,EGLint config_size,EGLint * num_config)
PFNEGLCLIENTSIGNALSYNCEXTPROC	./GL/eglew.h	/^typedef EGLBoolean ( * PFNEGLCLIENTSIGNALSYNCEXTPROC) (EGLDisplay dpy, EGLSync sync, const EGLAt/;"	t	typeref:typename:EGLBoolean (*)(EGLDisplay dpy,EGLSync sync,const EGLAttrib * attrib_list)
PFNEGLCLIENTWAITSYNCKHRPROC	./GL/eglew.h	/^typedef EGLint ( * PFNEGLCLIENTWAITSYNCKHRPROC) (EGLDisplay dpy, EGLSyncKHR sync, EGLint flags, /;"	t	typeref:typename:EGLint (*)(EGLDisplay dpy,EGLSyncKHR sync,EGLint flags,EGLTimeKHR timeout)
PFNEGLCLIENTWAITSYNCNVPROC	./GL/eglew.h	/^typedef EGLint ( * PFNEGLCLIENTWAITSYNCNVPROC) (EGLSyncNV sync, EGLint flags, EGLTimeNV timeout)/;"	t	typeref:typename:EGLint (*)(EGLSyncNV sync,EGLint flags,EGLTimeNV timeout)
PFNEGLCLIENTWAITSYNCPROC	./GL/eglew.h	/^typedef EGLint  ( * PFNEGLCLIENTWAITSYNCPROC) (EGLDisplay  dpy, EGLSync  sync, EGLint  flags, EG/;"	t	typeref:typename:EGLint (*)(EGLDisplay dpy,EGLSync sync,EGLint flags,EGLTime timeout)
PFNEGLCOMPOSITORBINDTEXWINDOWEXTPROC	./GL/eglew.h	/^typedef EGLBoolean ( * PFNEGLCOMPOSITORBINDTEXWINDOWEXTPROC) (EGLint external_win_id);$/;"	t	typeref:typename:EGLBoolean (*)(EGLint external_win_id)
PFNEGLCOMPOSITORSETCONTEXTATTRIBUTESEXTPROC	./GL/eglew.h	/^typedef EGLBoolean ( * PFNEGLCOMPOSITORSETCONTEXTATTRIBUTESEXTPROC) (EGLint external_ref_id, con/;"	t	typeref:typename:EGLBoolean (*)(EGLint external_ref_id,const EGLint * context_attributes,EGLint num_entries)
PFNEGLCOMPOSITORSETCONTEXTLISTEXTPROC	./GL/eglew.h	/^typedef EGLBoolean ( * PFNEGLCOMPOSITORSETCONTEXTLISTEXTPROC) (const EGLint* external_ref_ids, E/;"	t	typeref:typename:EGLBoolean (*)(const EGLint * external_ref_ids,EGLint num_entries)
PFNEGLCOMPOSITORSETSIZEEXTPROC	./GL/eglew.h	/^typedef EGLBoolean ( * PFNEGLCOMPOSITORSETSIZEEXTPROC) (EGLint external_win_id, EGLint width, EG/;"	t	typeref:typename:EGLBoolean (*)(EGLint external_win_id,EGLint width,EGLint height)
PFNEGLCOMPOSITORSETWINDOWATTRIBUTESEXTPROC	./GL/eglew.h	/^typedef EGLBoolean ( * PFNEGLCOMPOSITORSETWINDOWATTRIBUTESEXTPROC) (EGLint external_win_id, cons/;"	t	typeref:typename:EGLBoolean (*)(EGLint external_win_id,const EGLint * window_attributes,EGLint num_entries)
PFNEGLCOMPOSITORSETWINDOWLISTEXTPROC	./GL/eglew.h	/^typedef EGLBoolean ( * PFNEGLCOMPOSITORSETWINDOWLISTEXTPROC) (EGLint external_ref_id, const EGLi/;"	t	typeref:typename:EGLBoolean (*)(EGLint external_ref_id,const EGLint * external_win_ids,EGLint num_entries)
PFNEGLCOMPOSITORSWAPPOLICYEXTPROC	./GL/eglew.h	/^typedef EGLBoolean ( * PFNEGLCOMPOSITORSWAPPOLICYEXTPROC) (EGLint external_win_id, EGLint policy/;"	t	typeref:typename:EGLBoolean (*)(EGLint external_win_id,EGLint policy)
PFNEGLCOPYBUFFERSPROC	./GL/eglew.h	/^typedef EGLBoolean  ( * PFNEGLCOPYBUFFERSPROC) (EGLDisplay  dpy, EGLSurface  surface, EGLNativeP/;"	t	typeref:typename:EGLBoolean (*)(EGLDisplay dpy,EGLSurface surface,EGLNativePixmapType target)
PFNEGLCREATECONTEXTPROC	./GL/eglew.h	/^typedef EGLContext  ( * PFNEGLCREATECONTEXTPROC) (EGLDisplay  dpy, EGLConfig  config, EGLContext/;"	t	typeref:typename:EGLContext (*)(EGLDisplay dpy,EGLConfig config,EGLContext share_context,const EGLint * attrib_list)
PFNEGLCREATEDRMIMAGEMESAPROC	./GL/eglew.h	/^typedef EGLImageKHR ( * PFNEGLCREATEDRMIMAGEMESAPROC) (EGLDisplay dpy, const EGLint* attrib_list/;"	t	typeref:typename:EGLImageKHR (*)(EGLDisplay dpy,const EGLint * attrib_list)
PFNEGLCREATEFENCESYNCNVPROC	./GL/eglew.h	/^typedef EGLSyncNV ( * PFNEGLCREATEFENCESYNCNVPROC) (EGLDisplay dpy, EGLenum condition, const EGL/;"	t	typeref:typename:EGLSyncNV (*)(EGLDisplay dpy,EGLenum condition,const EGLint * attrib_list)
PFNEGLCREATEIMAGEKHRPROC	./GL/eglew.h	/^typedef EGLImageKHR ( * PFNEGLCREATEIMAGEKHRPROC) (EGLDisplay dpy, EGLContext ctx, EGLenum targe/;"	t	typeref:typename:EGLImageKHR (*)(EGLDisplay dpy,EGLContext ctx,EGLenum target,EGLClientBuffer buffer,const EGLint * attrib_list)
PFNEGLCREATEIMAGEPROC	./GL/eglew.h	/^typedef EGLImage  ( * PFNEGLCREATEIMAGEPROC) (EGLDisplay  dpy, EGLContext  ctx, EGLenum  target,/;"	t	typeref:typename:EGLImage (*)(EGLDisplay dpy,EGLContext ctx,EGLenum target,EGLClientBuffer buffer,const EGLAttrib * attrib_list)
PFNEGLCREATENATIVECLIENTBUFFERANDROIDPROC	./GL/eglew.h	/^typedef EGLClientBuffer ( * PFNEGLCREATENATIVECLIENTBUFFERANDROIDPROC) (const EGLint* attrib_lis/;"	t	typeref:typename:EGLClientBuffer (*)(const EGLint * attrib_list)
PFNEGLCREATEPBUFFERFROMCLIENTBUFFERPROC	./GL/eglew.h	/^typedef EGLSurface  ( * PFNEGLCREATEPBUFFERFROMCLIENTBUFFERPROC) (EGLDisplay  dpy, EGLenum  buft/;"	t	typeref:typename:EGLSurface (*)(EGLDisplay dpy,EGLenum buftype,EGLClientBuffer buffer,EGLConfig config,const EGLint * attrib_list)
PFNEGLCREATEPBUFFERSURFACEPROC	./GL/eglew.h	/^typedef EGLSurface  ( * PFNEGLCREATEPBUFFERSURFACEPROC) (EGLDisplay  dpy, EGLConfig  config, con/;"	t	typeref:typename:EGLSurface (*)(EGLDisplay dpy,EGLConfig config,const EGLint * attrib_list)
PFNEGLCREATEPIXMAPSURFACEHIPROC	./GL/eglew.h	/^typedef EGLSurface ( * PFNEGLCREATEPIXMAPSURFACEHIPROC) (EGLDisplay dpy, EGLConfig config, struc/;"	t	typeref:typename:EGLSurface (*)(EGLDisplay dpy,EGLConfig config,struct EGLClientPixmapHI * pixmap)
PFNEGLCREATEPIXMAPSURFACEPROC	./GL/eglew.h	/^typedef EGLSurface  ( * PFNEGLCREATEPIXMAPSURFACEPROC) (EGLDisplay  dpy, EGLConfig  config, EGLN/;"	t	typeref:typename:EGLSurface (*)(EGLDisplay dpy,EGLConfig config,EGLNativePixmapType pixmap,const EGLint * attrib_list)
PFNEGLCREATEPLATFORMPIXMAPSURFACEEXTPROC	./GL/eglew.h	/^typedef EGLSurface ( * PFNEGLCREATEPLATFORMPIXMAPSURFACEEXTPROC) (EGLDisplay dpy, EGLConfig conf/;"	t	typeref:typename:EGLSurface (*)(EGLDisplay dpy,EGLConfig config,void * native_pixmap,const EGLint * attrib_list)
PFNEGLCREATEPLATFORMPIXMAPSURFACEPROC	./GL/eglew.h	/^typedef EGLSurface  ( * PFNEGLCREATEPLATFORMPIXMAPSURFACEPROC) (EGLDisplay  dpy, EGLConfig  conf/;"	t	typeref:typename:EGLSurface (*)(EGLDisplay dpy,EGLConfig config,void * native_pixmap,const EGLAttrib * attrib_list)
PFNEGLCREATEPLATFORMWINDOWSURFACEEXTPROC	./GL/eglew.h	/^typedef EGLSurface ( * PFNEGLCREATEPLATFORMWINDOWSURFACEEXTPROC) (EGLDisplay dpy, EGLConfig conf/;"	t	typeref:typename:EGLSurface (*)(EGLDisplay dpy,EGLConfig config,void * native_window,const EGLint * attrib_list)
PFNEGLCREATEPLATFORMWINDOWSURFACEPROC	./GL/eglew.h	/^typedef EGLSurface  ( * PFNEGLCREATEPLATFORMWINDOWSURFACEPROC) (EGLDisplay  dpy, EGLConfig  conf/;"	t	typeref:typename:EGLSurface (*)(EGLDisplay dpy,EGLConfig config,void * native_window,const EGLAttrib * attrib_list)
PFNEGLCREATESTREAMATTRIBKHRPROC	./GL/eglew.h	/^typedef EGLStreamKHR ( * PFNEGLCREATESTREAMATTRIBKHRPROC) (EGLDisplay dpy, const EGLAttrib* attr/;"	t	typeref:typename:EGLStreamKHR (*)(EGLDisplay dpy,const EGLAttrib * attrib_list)
PFNEGLCREATESTREAMFROMFILEDESCRIPTORKHRPROC	./GL/eglew.h	/^typedef EGLStreamKHR ( * PFNEGLCREATESTREAMFROMFILEDESCRIPTORKHRPROC) (EGLDisplay dpy, EGLNative/;"	t	typeref:typename:EGLStreamKHR (*)(EGLDisplay dpy,EGLNativeFileDescriptorKHR file_descriptor)
PFNEGLCREATESTREAMKHRPROC	./GL/eglew.h	/^typedef EGLStreamKHR ( * PFNEGLCREATESTREAMKHRPROC) (EGLDisplay dpy, const EGLint* attrib_list);$/;"	t	typeref:typename:EGLStreamKHR (*)(EGLDisplay dpy,const EGLint * attrib_list)
PFNEGLCREATESTREAMPRODUCERSURFACEKHRPROC	./GL/eglew.h	/^typedef EGLSurface ( * PFNEGLCREATESTREAMPRODUCERSURFACEKHRPROC) (EGLDisplay dpy, EGLConfig conf/;"	t	typeref:typename:EGLSurface (*)(EGLDisplay dpy,EGLConfig config,EGLStreamKHR stream,const EGLint * attrib_list)
PFNEGLCREATESTREAMSYNCNVPROC	./GL/eglew.h	/^typedef EGLSyncKHR ( * PFNEGLCREATESTREAMSYNCNVPROC) (EGLDisplay dpy, EGLStreamKHR stream, EGLen/;"	t	typeref:typename:EGLSyncKHR (*)(EGLDisplay dpy,EGLStreamKHR stream,EGLenum type,const EGLint * attrib_list)
PFNEGLCREATESYNC64KHRPROC	./GL/eglew.h	/^typedef EGLSyncKHR ( * PFNEGLCREATESYNC64KHRPROC) (EGLDisplay dpy, EGLenum type, const EGLAttrib/;"	t	typeref:typename:EGLSyncKHR (*)(EGLDisplay dpy,EGLenum type,const EGLAttribKHR * attrib_list)
PFNEGLCREATESYNCKHRPROC	./GL/eglew.h	/^typedef EGLSyncKHR ( * PFNEGLCREATESYNCKHRPROC) (EGLDisplay dpy, EGLenum type, const EGLint* att/;"	t	typeref:typename:EGLSyncKHR (*)(EGLDisplay dpy,EGLenum type,const EGLint * attrib_list)
PFNEGLCREATESYNCPROC	./GL/eglew.h	/^typedef EGLSync  ( * PFNEGLCREATESYNCPROC) (EGLDisplay  dpy, EGLenum  type, const EGLAttrib * at/;"	t	typeref:typename:EGLSync (*)(EGLDisplay dpy,EGLenum type,const EGLAttrib * attrib_list)
PFNEGLCREATEWAYLANDBUFFERFROMIMAGEWLPROC	./GL/eglew.h	/^typedef struct wl_buffer* ( * PFNEGLCREATEWAYLANDBUFFERFROMIMAGEWLPROC) (EGLDisplay dpy, EGLImag/;"	t	typeref:struct:wl_buffer * (*)(EGLDisplay dpy,EGLImageKHR image)
PFNEGLCREATEWINDOWSURFACEPROC	./GL/eglew.h	/^typedef EGLSurface  ( * PFNEGLCREATEWINDOWSURFACEPROC) (EGLDisplay  dpy, EGLConfig  config, EGLN/;"	t	typeref:typename:EGLSurface (*)(EGLDisplay dpy,EGLConfig config,EGLNativeWindowType win,const EGLint * attrib_list)
PFNEGLDEBUGMESSAGECONTROLKHRPROC	./GL/eglew.h	/^typedef EGLint ( * PFNEGLDEBUGMESSAGECONTROLKHRPROC) (EGLDEBUGPROCKHR callback, const EGLAttrib*/;"	t	typeref:typename:EGLint (*)(EGLDEBUGPROCKHR callback,const EGLAttrib * attrib_list)
PFNEGLDESTROYCONTEXTPROC	./GL/eglew.h	/^typedef EGLBoolean  ( * PFNEGLDESTROYCONTEXTPROC) (EGLDisplay  dpy, EGLContext  ctx);$/;"	t	typeref:typename:EGLBoolean (*)(EGLDisplay dpy,EGLContext ctx)
PFNEGLDESTROYIMAGEKHRPROC	./GL/eglew.h	/^typedef EGLBoolean ( * PFNEGLDESTROYIMAGEKHRPROC) (EGLDisplay dpy, EGLImageKHR image);$/;"	t	typeref:typename:EGLBoolean (*)(EGLDisplay dpy,EGLImageKHR image)
PFNEGLDESTROYIMAGEPROC	./GL/eglew.h	/^typedef EGLBoolean  ( * PFNEGLDESTROYIMAGEPROC) (EGLDisplay  dpy, EGLImage  image);$/;"	t	typeref:typename:EGLBoolean (*)(EGLDisplay dpy,EGLImage image)
PFNEGLDESTROYSTREAMKHRPROC	./GL/eglew.h	/^typedef EGLBoolean ( * PFNEGLDESTROYSTREAMKHRPROC) (EGLDisplay dpy, EGLStreamKHR stream);$/;"	t	typeref:typename:EGLBoolean (*)(EGLDisplay dpy,EGLStreamKHR stream)
PFNEGLDESTROYSURFACEPROC	./GL/eglew.h	/^typedef EGLBoolean  ( * PFNEGLDESTROYSURFACEPROC) (EGLDisplay  dpy, EGLSurface  surface);$/;"	t	typeref:typename:EGLBoolean (*)(EGLDisplay dpy,EGLSurface surface)
PFNEGLDESTROYSYNCKHRPROC	./GL/eglew.h	/^typedef EGLBoolean ( * PFNEGLDESTROYSYNCKHRPROC) (EGLDisplay dpy, EGLSyncKHR sync);$/;"	t	typeref:typename:EGLBoolean (*)(EGLDisplay dpy,EGLSyncKHR sync)
PFNEGLDESTROYSYNCNVPROC	./GL/eglew.h	/^typedef EGLBoolean ( * PFNEGLDESTROYSYNCNVPROC) (EGLSyncNV sync);$/;"	t	typeref:typename:EGLBoolean (*)(EGLSyncNV sync)
PFNEGLDESTROYSYNCPROC	./GL/eglew.h	/^typedef EGLBoolean  ( * PFNEGLDESTROYSYNCPROC) (EGLDisplay  dpy, EGLSync  sync);$/;"	t	typeref:typename:EGLBoolean (*)(EGLDisplay dpy,EGLSync sync)
PFNEGLDUPNATIVEFENCEFDANDROIDPROC	./GL/eglew.h	/^typedef EGLint ( * PFNEGLDUPNATIVEFENCEFDANDROIDPROC) (EGLDisplay dpy, EGLSyncKHR sync);$/;"	t	typeref:typename:EGLint (*)(EGLDisplay dpy,EGLSyncKHR sync)
PFNEGLEXPORTDMABUFIMAGEMESAPROC	./GL/eglew.h	/^typedef EGLBoolean ( * PFNEGLEXPORTDMABUFIMAGEMESAPROC) (EGLDisplay dpy, EGLImageKHR image, int*/;"	t	typeref:typename:EGLBoolean (*)(EGLDisplay dpy,EGLImageKHR image,int * fds,EGLint * strides,EGLint * offsets)
PFNEGLEXPORTDMABUFIMAGEQUERYMESAPROC	./GL/eglew.h	/^typedef EGLBoolean ( * PFNEGLEXPORTDMABUFIMAGEQUERYMESAPROC) (EGLDisplay dpy, EGLImageKHR image,/;"	t	typeref:typename:EGLBoolean (*)(EGLDisplay dpy,EGLImageKHR image,int * fourcc,int * num_planes,EGLuint64KHR * modifiers)
PFNEGLEXPORTDRMIMAGEMESAPROC	./GL/eglew.h	/^typedef EGLBoolean ( * PFNEGLEXPORTDRMIMAGEMESAPROC) (EGLDisplay dpy, EGLImageKHR image, EGLint*/;"	t	typeref:typename:EGLBoolean (*)(EGLDisplay dpy,EGLImageKHR image,EGLint * name,EGLint * handle,EGLint * stride)
PFNEGLFENCENVPROC	./GL/eglew.h	/^typedef EGLBoolean ( * PFNEGLFENCENVPROC) (EGLSyncNV sync);$/;"	t	typeref:typename:EGLBoolean (*)(EGLSyncNV sync)
PFNEGLGETCOMPOSITORTIMINGANDROIDPROC	./GL/eglew.h	/^typedef EGLBoolean ( * PFNEGLGETCOMPOSITORTIMINGANDROIDPROC) (EGLDisplay dpy, EGLSurface surface/;"	t	typeref:typename:EGLBoolean (*)(EGLDisplay dpy,EGLSurface surface,EGLint numTimestamps,const EGLint * names,EGLnsecsANDROID * values)
PFNEGLGETCOMPOSITORTIMINGSUPPORTEDANDROIDPROC	./GL/eglew.h	/^typedef EGLBoolean ( * PFNEGLGETCOMPOSITORTIMINGSUPPORTEDANDROIDPROC) (EGLDisplay dpy, EGLSurfac/;"	t	typeref:typename:EGLBoolean (*)(EGLDisplay dpy,EGLSurface surface,EGLint name)
PFNEGLGETCONFIGATTRIBPROC	./GL/eglew.h	/^typedef EGLBoolean  ( * PFNEGLGETCONFIGATTRIBPROC) (EGLDisplay  dpy, EGLConfig  config, EGLint  /;"	t	typeref:typename:EGLBoolean (*)(EGLDisplay dpy,EGLConfig config,EGLint attribute,EGLint * value)
PFNEGLGETCONFIGSPROC	./GL/eglew.h	/^typedef EGLBoolean  ( * PFNEGLGETCONFIGSPROC) (EGLDisplay  dpy, EGLConfig * configs, EGLint  con/;"	t	typeref:typename:EGLBoolean (*)(EGLDisplay dpy,EGLConfig * configs,EGLint config_size,EGLint * num_config)
PFNEGLGETCURRENTCONTEXTPROC	./GL/eglew.h	/^typedef EGLContext  ( * PFNEGLGETCURRENTCONTEXTPROC) ( void );$/;"	t	typeref:typename:EGLContext (*)(void)
PFNEGLGETCURRENTDISPLAYPROC	./GL/eglew.h	/^typedef EGLDisplay  ( * PFNEGLGETCURRENTDISPLAYPROC) ( void );$/;"	t	typeref:typename:EGLDisplay (*)(void)
PFNEGLGETCURRENTSURFACEPROC	./GL/eglew.h	/^typedef EGLSurface  ( * PFNEGLGETCURRENTSURFACEPROC) (EGLint  readdraw);$/;"	t	typeref:typename:EGLSurface (*)(EGLint readdraw)
PFNEGLGETDISPLAYDRIVERCONFIGPROC	./GL/eglew.h	/^typedef char* ( * PFNEGLGETDISPLAYDRIVERCONFIGPROC) (EGLDisplay dpy);$/;"	t	typeref:typename:char * (*)(EGLDisplay dpy)
PFNEGLGETDISPLAYDRIVERNAMEPROC	./GL/eglew.h	/^typedef const char* ( * PFNEGLGETDISPLAYDRIVERNAMEPROC) (EGLDisplay dpy);$/;"	t	typeref:typename:const char * (*)(EGLDisplay dpy)
PFNEGLGETDISPLAYPROC	./GL/eglew.h	/^typedef EGLDisplay  ( * PFNEGLGETDISPLAYPROC) (EGLNativeDisplayType  display_id);$/;"	t	typeref:typename:EGLDisplay (*)(EGLNativeDisplayType display_id)
PFNEGLGETERRORPROC	./GL/eglew.h	/^typedef EGLint  ( * PFNEGLGETERRORPROC) ( void );$/;"	t	typeref:typename:EGLint (*)(void)
PFNEGLGETFRAMETIMESTAMPSANDROIDPROC	./GL/eglew.h	/^typedef EGLBoolean ( * PFNEGLGETFRAMETIMESTAMPSANDROIDPROC) (EGLDisplay dpy, EGLSurface surface,/;"	t	typeref:typename:EGLBoolean (*)(EGLDisplay dpy,EGLSurface surface,EGLuint64KHR frameId,EGLint numTimestamps,const EGLint * timestamps,EGLnsecsANDROID * values)
PFNEGLGETFRAMETIMESTAMPSUPPORTEDANDROIDPROC	./GL/eglew.h	/^typedef EGLBoolean ( * PFNEGLGETFRAMETIMESTAMPSUPPORTEDANDROIDPROC) (EGLDisplay dpy, EGLSurface /;"	t	typeref:typename:EGLBoolean (*)(EGLDisplay dpy,EGLSurface surface,EGLint timestamp)
PFNEGLGETNATIVECLIENTBUFFERANDROIDPROC	./GL/eglew.h	/^typedef EGLClientBuffer ( * PFNEGLGETNATIVECLIENTBUFFERANDROIDPROC) (const struct AHardwareBuffe/;"	t	typeref:typename:EGLClientBuffer (*)(const struct AHardwareBuffer * buffer)
PFNEGLGETNEXTFRAMEIDANDROIDPROC	./GL/eglew.h	/^typedef EGLBoolean ( * PFNEGLGETNEXTFRAMEIDANDROIDPROC) (EGLDisplay dpy, EGLSurface surface, EGL/;"	t	typeref:typename:EGLBoolean (*)(EGLDisplay dpy,EGLSurface surface,EGLuint64KHR * frameId)
PFNEGLGETOUTPUTLAYERSEXTPROC	./GL/eglew.h	/^typedef EGLBoolean ( * PFNEGLGETOUTPUTLAYERSEXTPROC) (EGLDisplay dpy, const EGLAttrib* attrib_li/;"	t	typeref:typename:EGLBoolean (*)(EGLDisplay dpy,const EGLAttrib * attrib_list,EGLOutputLayerEXT * layers,EGLint max_layers,EGLint * num_layers)
PFNEGLGETOUTPUTPORTSEXTPROC	./GL/eglew.h	/^typedef EGLBoolean ( * PFNEGLGETOUTPUTPORTSEXTPROC) (EGLDisplay dpy, const EGLAttrib* attrib_lis/;"	t	typeref:typename:EGLBoolean (*)(EGLDisplay dpy,const EGLAttrib * attrib_list,EGLOutputPortEXT * ports,EGLint max_ports,EGLint * num_ports)
PFNEGLGETPLATFORMDISPLAYEXTPROC	./GL/eglew.h	/^typedef EGLDisplay ( * PFNEGLGETPLATFORMDISPLAYEXTPROC) (EGLenum platform, void* native_display,/;"	t	typeref:typename:EGLDisplay (*)(EGLenum platform,void * native_display,const EGLint * attrib_list)
PFNEGLGETPLATFORMDISPLAYPROC	./GL/eglew.h	/^typedef EGLDisplay  ( * PFNEGLGETPLATFORMDISPLAYPROC) (EGLenum  platform, void * native_display,/;"	t	typeref:typename:EGLDisplay (*)(EGLenum platform,void * native_display,const EGLAttrib * attrib_list)
PFNEGLGETSTREAMFILEDESCRIPTORKHRPROC	./GL/eglew.h	/^typedef EGLNativeFileDescriptorKHR ( * PFNEGLGETSTREAMFILEDESCRIPTORKHRPROC) (EGLDisplay dpy, EG/;"	t	typeref:typename:EGLNativeFileDescriptorKHR (*)(EGLDisplay dpy,EGLStreamKHR stream)
PFNEGLGETSYNCATTRIBKHRPROC	./GL/eglew.h	/^typedef EGLBoolean ( * PFNEGLGETSYNCATTRIBKHRPROC) (EGLDisplay dpy, EGLSyncKHR sync, EGLint attr/;"	t	typeref:typename:EGLBoolean (*)(EGLDisplay dpy,EGLSyncKHR sync,EGLint attribute,EGLint * value)
PFNEGLGETSYNCATTRIBNVPROC	./GL/eglew.h	/^typedef EGLBoolean ( * PFNEGLGETSYNCATTRIBNVPROC) (EGLSyncNV sync, EGLint attribute, EGLint* val/;"	t	typeref:typename:EGLBoolean (*)(EGLSyncNV sync,EGLint attribute,EGLint * value)
PFNEGLGETSYNCATTRIBPROC	./GL/eglew.h	/^typedef EGLBoolean  ( * PFNEGLGETSYNCATTRIBPROC) (EGLDisplay  dpy, EGLSync  sync, EGLint  attrib/;"	t	typeref:typename:EGLBoolean (*)(EGLDisplay dpy,EGLSync sync,EGLint attribute,EGLAttrib * value)
PFNEGLGETSYSTEMTIMEFREQUENCYNVPROC	./GL/eglew.h	/^typedef EGLuint64NV ( * PFNEGLGETSYSTEMTIMEFREQUENCYNVPROC) (void);$/;"	t	typeref:typename:EGLuint64NV (*)(void)
PFNEGLGETSYSTEMTIMENVPROC	./GL/eglew.h	/^typedef EGLuint64NV ( * PFNEGLGETSYSTEMTIMENVPROC) (void);$/;"	t	typeref:typename:EGLuint64NV (*)(void)
PFNEGLINITIALIZEPROC	./GL/eglew.h	/^typedef EGLBoolean  ( * PFNEGLINITIALIZEPROC) (EGLDisplay  dpy, EGLint * major, EGLint * minor);$/;"	t	typeref:typename:EGLBoolean (*)(EGLDisplay dpy,EGLint * major,EGLint * minor)
PFNEGLLABELOBJECTKHRPROC	./GL/eglew.h	/^typedef EGLint ( * PFNEGLLABELOBJECTKHRPROC) (EGLDisplay display, EGLenum objectType, EGLObjectK/;"	t	typeref:typename:EGLint (*)(EGLDisplay display,EGLenum objectType,EGLObjectKHR object,EGLLabelKHR label)
PFNEGLLOCKSURFACEKHRPROC	./GL/eglew.h	/^typedef EGLBoolean ( * PFNEGLLOCKSURFACEKHRPROC) (EGLDisplay dpy, EGLSurface surface, const EGLi/;"	t	typeref:typename:EGLBoolean (*)(EGLDisplay dpy,EGLSurface surface,const EGLint * attrib_list)
PFNEGLMAKECURRENTPROC	./GL/eglew.h	/^typedef EGLBoolean  ( * PFNEGLMAKECURRENTPROC) (EGLDisplay  dpy, EGLSurface  draw, EGLSurface  r/;"	t	typeref:typename:EGLBoolean (*)(EGLDisplay dpy,EGLSurface draw,EGLSurface read,EGLContext ctx)
PFNEGLOUTPUTLAYERATTRIBEXTPROC	./GL/eglew.h	/^typedef EGLBoolean ( * PFNEGLOUTPUTLAYERATTRIBEXTPROC) (EGLDisplay dpy, EGLOutputLayerEXT layer,/;"	t	typeref:typename:EGLBoolean (*)(EGLDisplay dpy,EGLOutputLayerEXT layer,EGLint attribute,EGLAttrib value)
PFNEGLOUTPUTPORTATTRIBEXTPROC	./GL/eglew.h	/^typedef EGLBoolean ( * PFNEGLOUTPUTPORTATTRIBEXTPROC) (EGLDisplay dpy, EGLOutputPortEXT port, EG/;"	t	typeref:typename:EGLBoolean (*)(EGLDisplay dpy,EGLOutputPortEXT port,EGLint attribute,EGLAttrib value)
PFNEGLPOSTSUBBUFFERNVPROC	./GL/eglew.h	/^typedef EGLBoolean ( * PFNEGLPOSTSUBBUFFERNVPROC) (EGLDisplay dpy, EGLSurface surface, EGLint x,/;"	t	typeref:typename:EGLBoolean (*)(EGLDisplay dpy,EGLSurface surface,EGLint x,EGLint y,EGLint width,EGLint height)
PFNEGLPRESENTATIONTIMEANDROIDPROC	./GL/eglew.h	/^typedef EGLBoolean ( * PFNEGLPRESENTATIONTIMEANDROIDPROC) (EGLDisplay dpy, EGLSurface surface, E/;"	t	typeref:typename:EGLBoolean (*)(EGLDisplay dpy,EGLSurface surface,EGLnsecsANDROID time)
PFNEGLQUERYAPIPROC	./GL/eglew.h	/^typedef EGLenum  ( * PFNEGLQUERYAPIPROC) ( void );$/;"	t	typeref:typename:EGLenum (*)(void)
PFNEGLQUERYCONTEXTPROC	./GL/eglew.h	/^typedef EGLBoolean  ( * PFNEGLQUERYCONTEXTPROC) (EGLDisplay  dpy, EGLContext  ctx, EGLint  attri/;"	t	typeref:typename:EGLBoolean (*)(EGLDisplay dpy,EGLContext ctx,EGLint attribute,EGLint * value)
PFNEGLQUERYDEBUGKHRPROC	./GL/eglew.h	/^typedef EGLBoolean ( * PFNEGLQUERYDEBUGKHRPROC) (EGLint attribute, EGLAttrib* value);$/;"	t	typeref:typename:EGLBoolean (*)(EGLint attribute,EGLAttrib * value)
PFNEGLQUERYDEVICEATTRIBEXTPROC	./GL/eglew.h	/^typedef EGLBoolean ( * PFNEGLQUERYDEVICEATTRIBEXTPROC) (EGLDeviceEXT device, EGLint attribute, E/;"	t	typeref:typename:EGLBoolean (*)(EGLDeviceEXT device,EGLint attribute,EGLAttrib * value)
PFNEGLQUERYDEVICESEXTPROC	./GL/eglew.h	/^typedef EGLBoolean ( * PFNEGLQUERYDEVICESEXTPROC) (EGLint max_devices, EGLDeviceEXT* devices, EG/;"	t	typeref:typename:EGLBoolean (*)(EGLint max_devices,EGLDeviceEXT * devices,EGLint * num_devices)
PFNEGLQUERYDEVICESTRINGEXTPROC	./GL/eglew.h	/^typedef const char* ( * PFNEGLQUERYDEVICESTRINGEXTPROC) (EGLDeviceEXT device, EGLint name);$/;"	t	typeref:typename:const char * (*)(EGLDeviceEXT device,EGLint name)
PFNEGLQUERYDISPLAYATTRIBEXTPROC	./GL/eglew.h	/^typedef EGLBoolean ( * PFNEGLQUERYDISPLAYATTRIBEXTPROC) (EGLDisplay dpy, EGLint attribute, EGLAt/;"	t	typeref:typename:EGLBoolean (*)(EGLDisplay dpy,EGLint attribute,EGLAttrib * value)
PFNEGLQUERYDISPLAYATTRIBKHRPROC	./GL/eglew.h	/^typedef EGLBoolean ( * PFNEGLQUERYDISPLAYATTRIBKHRPROC) (EGLDisplay dpy, EGLint name, EGLAttrib*/;"	t	typeref:typename:EGLBoolean (*)(EGLDisplay dpy,EGLint name,EGLAttrib * value)
PFNEGLQUERYDISPLAYATTRIBNVPROC	./GL/eglew.h	/^typedef EGLBoolean ( * PFNEGLQUERYDISPLAYATTRIBNVPROC) (EGLDisplay dpy, EGLint attribute, EGLAtt/;"	t	typeref:typename:EGLBoolean (*)(EGLDisplay dpy,EGLint attribute,EGLAttrib * value)
PFNEGLQUERYDMABUFFORMATSEXTPROC	./GL/eglew.h	/^typedef EGLBoolean ( * PFNEGLQUERYDMABUFFORMATSEXTPROC) (EGLDisplay dpy, EGLint max_formats, EGL/;"	t	typeref:typename:EGLBoolean (*)(EGLDisplay dpy,EGLint max_formats,EGLint * formats,EGLint * num_formats)
PFNEGLQUERYDMABUFMODIFIERSEXTPROC	./GL/eglew.h	/^typedef EGLBoolean ( * PFNEGLQUERYDMABUFMODIFIERSEXTPROC) (EGLDisplay dpy, EGLint format, EGLint/;"	t	typeref:typename:EGLBoolean (*)(EGLDisplay dpy,EGLint format,EGLint max_modifiers,EGLuint64KHR * modifiers,EGLBoolean * external_only,EGLint * num_modifiers)
PFNEGLQUERYNATIVEDISPLAYNVPROC	./GL/eglew.h	/^typedef EGLBoolean ( * PFNEGLQUERYNATIVEDISPLAYNVPROC) (EGLDisplay dpy, EGLNativeDisplayType* di/;"	t	typeref:typename:EGLBoolean (*)(EGLDisplay dpy,EGLNativeDisplayType * display_id)
PFNEGLQUERYNATIVEPIXMAPNVPROC	./GL/eglew.h	/^typedef EGLBoolean ( * PFNEGLQUERYNATIVEPIXMAPNVPROC) (EGLDisplay dpy, EGLSurface surf, EGLNativ/;"	t	typeref:typename:EGLBoolean (*)(EGLDisplay dpy,EGLSurface surf,EGLNativePixmapType * pixmap)
PFNEGLQUERYNATIVEWINDOWNVPROC	./GL/eglew.h	/^typedef EGLBoolean ( * PFNEGLQUERYNATIVEWINDOWNVPROC) (EGLDisplay dpy, EGLSurface surf, EGLNativ/;"	t	typeref:typename:EGLBoolean (*)(EGLDisplay dpy,EGLSurface surf,EGLNativeWindowType * window)
PFNEGLQUERYOUTPUTLAYERATTRIBEXTPROC	./GL/eglew.h	/^typedef EGLBoolean ( * PFNEGLQUERYOUTPUTLAYERATTRIBEXTPROC) (EGLDisplay dpy, EGLOutputLayerEXT l/;"	t	typeref:typename:EGLBoolean (*)(EGLDisplay dpy,EGLOutputLayerEXT layer,EGLint attribute,EGLAttrib * value)
PFNEGLQUERYOUTPUTLAYERSTRINGEXTPROC	./GL/eglew.h	/^typedef const char* ( * PFNEGLQUERYOUTPUTLAYERSTRINGEXTPROC) (EGLDisplay dpy, EGLOutputLayerEXT /;"	t	typeref:typename:const char * (*)(EGLDisplay dpy,EGLOutputLayerEXT layer,EGLint name)
PFNEGLQUERYOUTPUTPORTATTRIBEXTPROC	./GL/eglew.h	/^typedef EGLBoolean ( * PFNEGLQUERYOUTPUTPORTATTRIBEXTPROC) (EGLDisplay dpy, EGLOutputPortEXT por/;"	t	typeref:typename:EGLBoolean (*)(EGLDisplay dpy,EGLOutputPortEXT port,EGLint attribute,EGLAttrib * value)
PFNEGLQUERYOUTPUTPORTSTRINGEXTPROC	./GL/eglew.h	/^typedef const char* ( * PFNEGLQUERYOUTPUTPORTSTRINGEXTPROC) (EGLDisplay dpy, EGLOutputPortEXT po/;"	t	typeref:typename:const char * (*)(EGLDisplay dpy,EGLOutputPortEXT port,EGLint name)
PFNEGLQUERYSTREAMATTRIBKHRPROC	./GL/eglew.h	/^typedef EGLBoolean ( * PFNEGLQUERYSTREAMATTRIBKHRPROC) (EGLDisplay dpy, EGLStreamKHR stream, EGL/;"	t	typeref:typename:EGLBoolean (*)(EGLDisplay dpy,EGLStreamKHR stream,EGLenum attribute,EGLAttrib * value)
PFNEGLQUERYSTREAMKHRPROC	./GL/eglew.h	/^typedef EGLBoolean ( * PFNEGLQUERYSTREAMKHRPROC) (EGLDisplay dpy, EGLStreamKHR stream, EGLenum a/;"	t	typeref:typename:EGLBoolean (*)(EGLDisplay dpy,EGLStreamKHR stream,EGLenum attribute,EGLint * value)
PFNEGLQUERYSTREAMMETADATANVPROC	./GL/eglew.h	/^typedef EGLBoolean ( * PFNEGLQUERYSTREAMMETADATANVPROC) (EGLDisplay dpy, EGLStreamKHR stream, EG/;"	t	typeref:typename:EGLBoolean (*)(EGLDisplay dpy,EGLStreamKHR stream,EGLenum name,EGLint n,EGLint offset,EGLint size,void * data)
PFNEGLQUERYSTREAMTIMEKHRPROC	./GL/eglew.h	/^typedef EGLBoolean ( * PFNEGLQUERYSTREAMTIMEKHRPROC) (EGLDisplay dpy, EGLStreamKHR stream, EGLen/;"	t	typeref:typename:EGLBoolean (*)(EGLDisplay dpy,EGLStreamKHR stream,EGLenum attribute,EGLTimeKHR * value)
PFNEGLQUERYSTREAMU64KHRPROC	./GL/eglew.h	/^typedef EGLBoolean ( * PFNEGLQUERYSTREAMU64KHRPROC) (EGLDisplay dpy, EGLStreamKHR stream, EGLenu/;"	t	typeref:typename:EGLBoolean (*)(EGLDisplay dpy,EGLStreamKHR stream,EGLenum attribute,EGLuint64KHR * value)
PFNEGLQUERYSTRINGPROC	./GL/eglew.h	/^typedef const char * ( * PFNEGLQUERYSTRINGPROC) (EGLDisplay  dpy, EGLint  name);$/;"	t	typeref:typename:const char * (*)(EGLDisplay dpy,EGLint name)
PFNEGLQUERYSURFACE64KHRPROC	./GL/eglew.h	/^typedef EGLBoolean  ( * PFNEGLQUERYSURFACE64KHRPROC) (EGLDisplay  dpy, EGLSurface  surface, EGLi/;"	t	typeref:typename:EGLBoolean (*)(EGLDisplay dpy,EGLSurface surface,EGLint attribute,EGLAttribKHR * value)
PFNEGLQUERYSURFACEPOINTERANGLEPROC	./GL/eglew.h	/^typedef EGLBoolean ( * PFNEGLQUERYSURFACEPOINTERANGLEPROC) (EGLDisplay dpy, EGLSurface surface, /;"	t	typeref:typename:EGLBoolean (*)(EGLDisplay dpy,EGLSurface surface,EGLint attribute,void ** value)
PFNEGLQUERYSURFACEPROC	./GL/eglew.h	/^typedef EGLBoolean  ( * PFNEGLQUERYSURFACEPROC) (EGLDisplay  dpy, EGLSurface  surface, EGLint  a/;"	t	typeref:typename:EGLBoolean (*)(EGLDisplay dpy,EGLSurface surface,EGLint attribute,EGLint * value)
PFNEGLQUERYWAYLANDBUFFERWLPROC	./GL/eglew.h	/^typedef EGLBoolean ( * PFNEGLQUERYWAYLANDBUFFERWLPROC) (EGLDisplay dpy, struct wl_resource* buff/;"	t	typeref:typename:EGLBoolean (*)(EGLDisplay dpy,struct wl_resource * buffer,EGLint attribute,EGLint * value)
PFNEGLRELEASETEXIMAGEPROC	./GL/eglew.h	/^typedef EGLBoolean  ( * PFNEGLRELEASETEXIMAGEPROC) (EGLDisplay  dpy, EGLSurface  surface, EGLint/;"	t	typeref:typename:EGLBoolean (*)(EGLDisplay dpy,EGLSurface surface,EGLint buffer)
PFNEGLRELEASETHREADPROC	./GL/eglew.h	/^typedef EGLBoolean  ( * PFNEGLRELEASETHREADPROC) ( void );$/;"	t	typeref:typename:EGLBoolean (*)(void)
PFNEGLRESETSTREAMNVPROC	./GL/eglew.h	/^typedef EGLBoolean ( * PFNEGLRESETSTREAMNVPROC) (EGLDisplay dpy, EGLStreamKHR stream);$/;"	t	typeref:typename:EGLBoolean (*)(EGLDisplay dpy,EGLStreamKHR stream)
PFNEGLSETBLOBCACHEFUNCSANDROIDPROC	./GL/eglew.h	/^typedef void ( * PFNEGLSETBLOBCACHEFUNCSANDROIDPROC) (EGLDisplay dpy, EGLSetBlobFuncANDROID set,/;"	t	typeref:typename:void (*)(EGLDisplay dpy,EGLSetBlobFuncANDROID set,EGLGetBlobFuncANDROID get)
PFNEGLSETDAMAGEREGIONKHRPROC	./GL/eglew.h	/^typedef EGLBoolean ( * PFNEGLSETDAMAGEREGIONKHRPROC) (EGLDisplay dpy, EGLSurface surface, EGLint/;"	t	typeref:typename:EGLBoolean (*)(EGLDisplay dpy,EGLSurface surface,EGLint * rects,EGLint n_rects)
PFNEGLSETSTREAMATTRIBKHRPROC	./GL/eglew.h	/^typedef EGLBoolean ( * PFNEGLSETSTREAMATTRIBKHRPROC) (EGLDisplay dpy, EGLStreamKHR stream, EGLen/;"	t	typeref:typename:EGLBoolean (*)(EGLDisplay dpy,EGLStreamKHR stream,EGLenum attribute,EGLAttrib value)
PFNEGLSETSTREAMMETADATANVPROC	./GL/eglew.h	/^typedef EGLBoolean ( * PFNEGLSETSTREAMMETADATANVPROC) (EGLDisplay dpy, EGLStreamKHR stream, EGLi/;"	t	typeref:typename:EGLBoolean (*)(EGLDisplay dpy,EGLStreamKHR stream,EGLint n,EGLint offset,EGLint size,const void * data)
PFNEGLSIGNALSYNCKHRPROC	./GL/eglew.h	/^typedef EGLBoolean ( * PFNEGLSIGNALSYNCKHRPROC) (EGLDisplay dpy, EGLSyncKHR sync, EGLenum mode);$/;"	t	typeref:typename:EGLBoolean (*)(EGLDisplay dpy,EGLSyncKHR sync,EGLenum mode)
PFNEGLSIGNALSYNCNVPROC	./GL/eglew.h	/^typedef EGLBoolean ( * PFNEGLSIGNALSYNCNVPROC) (EGLSyncNV sync, EGLenum mode);$/;"	t	typeref:typename:EGLBoolean (*)(EGLSyncNV sync,EGLenum mode)
PFNEGLSTREAMATTRIBKHRPROC	./GL/eglew.h	/^typedef EGLBoolean ( * PFNEGLSTREAMATTRIBKHRPROC) (EGLDisplay dpy, EGLStreamKHR stream, EGLenum /;"	t	typeref:typename:EGLBoolean (*)(EGLDisplay dpy,EGLStreamKHR stream,EGLenum attribute,EGLint value)
PFNEGLSTREAMCONSUMERACQUIREATTRIBKHRPROC	./GL/eglew.h	/^typedef EGLBoolean ( * PFNEGLSTREAMCONSUMERACQUIREATTRIBKHRPROC) (EGLDisplay dpy, EGLStreamKHR s/;"	t	typeref:typename:EGLBoolean (*)(EGLDisplay dpy,EGLStreamKHR stream,const EGLAttrib * attrib_list)
PFNEGLSTREAMCONSUMERACQUIREKHRPROC	./GL/eglew.h	/^typedef EGLBoolean ( * PFNEGLSTREAMCONSUMERACQUIREKHRPROC) (EGLDisplay dpy, EGLStreamKHR stream)/;"	t	typeref:typename:EGLBoolean (*)(EGLDisplay dpy,EGLStreamKHR stream)
PFNEGLSTREAMCONSUMERGLTEXTUREEXTERNALATTRIBSNVPROC	./GL/eglew.h	/^typedef EGLBoolean ( * PFNEGLSTREAMCONSUMERGLTEXTUREEXTERNALATTRIBSNVPROC) (EGLDisplay dpy, EGLS/;"	t	typeref:typename:EGLBoolean (*)(EGLDisplay dpy,EGLStreamKHR stream,const EGLAttrib * attrib_list)
PFNEGLSTREAMCONSUMERGLTEXTUREEXTERNALKHRPROC	./GL/eglew.h	/^typedef EGLBoolean ( * PFNEGLSTREAMCONSUMERGLTEXTUREEXTERNALKHRPROC) (EGLDisplay dpy, EGLStreamK/;"	t	typeref:typename:EGLBoolean (*)(EGLDisplay dpy,EGLStreamKHR stream)
PFNEGLSTREAMCONSUMEROUTPUTEXTPROC	./GL/eglew.h	/^typedef EGLBoolean ( * PFNEGLSTREAMCONSUMEROUTPUTEXTPROC) (EGLDisplay dpy, EGLStreamKHR stream, /;"	t	typeref:typename:EGLBoolean (*)(EGLDisplay dpy,EGLStreamKHR stream,EGLOutputLayerEXT layer)
PFNEGLSTREAMCONSUMERRELEASEATTRIBKHRPROC	./GL/eglew.h	/^typedef EGLBoolean ( * PFNEGLSTREAMCONSUMERRELEASEATTRIBKHRPROC) (EGLDisplay dpy, EGLStreamKHR s/;"	t	typeref:typename:EGLBoolean (*)(EGLDisplay dpy,EGLStreamKHR stream,const EGLAttrib * attrib_list)
PFNEGLSTREAMCONSUMERRELEASEKHRPROC	./GL/eglew.h	/^typedef EGLBoolean ( * PFNEGLSTREAMCONSUMERRELEASEKHRPROC) (EGLDisplay dpy, EGLStreamKHR stream)/;"	t	typeref:typename:EGLBoolean (*)(EGLDisplay dpy,EGLStreamKHR stream)
PFNEGLSTREAMFLUSHNVPROC	./GL/eglew.h	/^typedef EGLBoolean ( * PFNEGLSTREAMFLUSHNVPROC) (EGLDisplay dpy, EGLStreamKHR stream);$/;"	t	typeref:typename:EGLBoolean (*)(EGLDisplay dpy,EGLStreamKHR stream)
PFNEGLSURFACEATTRIBPROC	./GL/eglew.h	/^typedef EGLBoolean  ( * PFNEGLSURFACEATTRIBPROC) (EGLDisplay  dpy, EGLSurface  surface, EGLint  /;"	t	typeref:typename:EGLBoolean (*)(EGLDisplay dpy,EGLSurface surface,EGLint attribute,EGLint value)
PFNEGLSWAPBUFFERSPROC	./GL/eglew.h	/^typedef EGLBoolean  ( * PFNEGLSWAPBUFFERSPROC) (EGLDisplay  dpy, EGLSurface  surface);$/;"	t	typeref:typename:EGLBoolean (*)(EGLDisplay dpy,EGLSurface surface)
PFNEGLSWAPBUFFERSREGION2NOKPROC	./GL/eglew.h	/^typedef EGLBoolean ( * PFNEGLSWAPBUFFERSREGION2NOKPROC) (EGLDisplay dpy, EGLSurface surface, EGL/;"	t	typeref:typename:EGLBoolean (*)(EGLDisplay dpy,EGLSurface surface,EGLint numRects,const EGLint * rects)
PFNEGLSWAPBUFFERSREGIONNOKPROC	./GL/eglew.h	/^typedef EGLBoolean ( * PFNEGLSWAPBUFFERSREGIONNOKPROC) (EGLDisplay dpy, EGLSurface surface, EGLi/;"	t	typeref:typename:EGLBoolean (*)(EGLDisplay dpy,EGLSurface surface,EGLint numRects,const EGLint * rects)
PFNEGLSWAPBUFFERSWITHDAMAGEEXTPROC	./GL/eglew.h	/^typedef EGLBoolean ( * PFNEGLSWAPBUFFERSWITHDAMAGEEXTPROC) (EGLDisplay dpy, EGLSurface surface, /;"	t	typeref:typename:EGLBoolean (*)(EGLDisplay dpy,EGLSurface surface,const EGLint * rects,EGLint n_rects)
PFNEGLSWAPBUFFERSWITHDAMAGEKHRPROC	./GL/eglew.h	/^typedef EGLBoolean ( * PFNEGLSWAPBUFFERSWITHDAMAGEKHRPROC) (EGLDisplay dpy, EGLSurface surface, /;"	t	typeref:typename:EGLBoolean (*)(EGLDisplay dpy,EGLSurface surface,const EGLint * rects,EGLint n_rects)
PFNEGLSWAPINTERVALPROC	./GL/eglew.h	/^typedef EGLBoolean  ( * PFNEGLSWAPINTERVALPROC) (EGLDisplay  dpy, EGLint  interval);$/;"	t	typeref:typename:EGLBoolean (*)(EGLDisplay dpy,EGLint interval)
PFNEGLTERMINATEPROC	./GL/eglew.h	/^typedef EGLBoolean  ( * PFNEGLTERMINATEPROC) (EGLDisplay  dpy);$/;"	t	typeref:typename:EGLBoolean (*)(EGLDisplay dpy)
PFNEGLUNBINDWAYLANDDISPLAYWLPROC	./GL/eglew.h	/^typedef EGLBoolean ( * PFNEGLUNBINDWAYLANDDISPLAYWLPROC) (EGLDisplay dpy, struct wl_display* dis/;"	t	typeref:typename:EGLBoolean (*)(EGLDisplay dpy,struct wl_display * display)
PFNEGLUNLOCKSURFACEKHRPROC	./GL/eglew.h	/^typedef EGLBoolean ( * PFNEGLUNLOCKSURFACEKHRPROC) (EGLDisplay dpy, EGLSurface surface);$/;"	t	typeref:typename:EGLBoolean (*)(EGLDisplay dpy,EGLSurface surface)
PFNEGLUNSIGNALSYNCEXTPROC	./GL/eglew.h	/^typedef EGLBoolean ( * PFNEGLUNSIGNALSYNCEXTPROC) (EGLDisplay dpy, EGLSync sync, const EGLAttrib/;"	t	typeref:typename:EGLBoolean (*)(EGLDisplay dpy,EGLSync sync,const EGLAttrib * attrib_list)
PFNEGLWAITCLIENTPROC	./GL/eglew.h	/^typedef EGLBoolean  ( * PFNEGLWAITCLIENTPROC) ( void );$/;"	t	typeref:typename:EGLBoolean (*)(void)
PFNEGLWAITGLPROC	./GL/eglew.h	/^typedef EGLBoolean  ( * PFNEGLWAITGLPROC) ( void );$/;"	t	typeref:typename:EGLBoolean (*)(void)
PFNEGLWAITNATIVEPROC	./GL/eglew.h	/^typedef EGLBoolean  ( * PFNEGLWAITNATIVEPROC) (EGLint  engine);$/;"	t	typeref:typename:EGLBoolean (*)(EGLint engine)
PFNEGLWAITSYNCKHRPROC	./GL/eglew.h	/^typedef EGLint ( * PFNEGLWAITSYNCKHRPROC) (EGLDisplay dpy, EGLSyncKHR sync, EGLint flags);$/;"	t	typeref:typename:EGLint (*)(EGLDisplay dpy,EGLSyncKHR sync,EGLint flags)
PFNEGLWAITSYNCPROC	./GL/eglew.h	/^typedef EGLBoolean  ( * PFNEGLWAITSYNCPROC) (EGLDisplay  dpy, EGLSync  sync, EGLint  flags);$/;"	t	typeref:typename:EGLBoolean (*)(EGLDisplay dpy,EGLSync sync,EGLint flags)
PFNGLACQUIREKEYEDMUTEXWIN32EXTPROC	./GL/glew.h	/^typedef GLboolean (GLAPIENTRY * PFNGLACQUIREKEYEDMUTEXWIN32EXTPROC) (GLuint memory, GLuint64 key/;"	t	typeref:typename:GLboolean (GLAPIENTRY *)(GLuint memory,GLuint64 key,GLuint timeout)
PFNGLACTIVEPROGRAMEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLACTIVEPROGRAMEXTPROC) (GLuint program);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint program)
PFNGLACTIVESHADERPROGRAMPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLACTIVESHADERPROGRAMPROC) (GLuint pipeline, GLuint program);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint pipeline,GLuint program)
PFNGLACTIVESTENCILFACEEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLACTIVESTENCILFACEEXTPROC) (GLenum face);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum face)
PFNGLACTIVETEXTUREARBPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLACTIVETEXTUREARBPROC) (GLenum texture);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum texture)
PFNGLACTIVETEXTUREPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLACTIVETEXTUREPROC) (GLenum texture);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum texture)
PFNGLACTIVEVARYINGNVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLACTIVEVARYINGNVPROC) (GLuint program, const GLchar *name);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint program,const GLchar * name)
PFNGLADDRESSSPACEPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLADDRESSSPACEPROC) (GLenum space, GLbitfield mask);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum space,GLbitfield mask)
PFNGLADDSWAPHINTRECTWINPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLADDSWAPHINTRECTWINPROC) (GLint x, GLint y, GLsizei width, GLsize/;"	t	typeref:typename:void (GLAPIENTRY *)(GLint x,GLint y,GLsizei width,GLsizei height)
PFNGLALLOCMPEGPREDICTORSSGIXPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLALLOCMPEGPREDICTORSSGIXPROC) (GLsizei width, GLsizei height, GLs/;"	t	typeref:typename:void (GLAPIENTRY *)(GLsizei width,GLsizei height,GLsizei n,GLuint * predictors)
PFNGLALPHAFRAGMENTOP1ATIPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLALPHAFRAGMENTOP1ATIPROC) (GLenum op, GLuint dst, GLuint dstMod, /;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum op,GLuint dst,GLuint dstMod,GLuint arg1,GLuint arg1Rep,GLuint arg1Mod)
PFNGLALPHAFRAGMENTOP2ATIPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLALPHAFRAGMENTOP2ATIPROC) (GLenum op, GLuint dst, GLuint dstMod, /;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum op,GLuint dst,GLuint dstMod,GLuint arg1,GLuint arg1Rep,GLuint arg1Mod,GLuint arg2,GLuint arg2Rep,GLuint arg2Mod)
PFNGLALPHAFRAGMENTOP3ATIPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLALPHAFRAGMENTOP3ATIPROC) (GLenum op, GLuint dst, GLuint dstMod, /;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum op,GLuint dst,GLuint dstMod,GLuint arg1,GLuint arg1Rep,GLuint arg1Mod,GLuint arg2,GLuint arg2Rep,GLuint arg2Mod,GLuint arg3,GLuint arg3Rep,GLuint arg3Mod)
PFNGLALPHAFUNCQCOMPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLALPHAFUNCQCOMPROC) (GLenum func, GLclampf ref);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum func,GLclampf ref)
PFNGLALPHAFUNCXPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLALPHAFUNCXPROC) (GLenum func, GLclampx ref);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum func,GLclampx ref)
PFNGLALPHATOCOVERAGEDITHERCONTROLNVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLALPHATOCOVERAGEDITHERCONTROLNVPROC) (GLenum mode);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum mode)
PFNGLAPPLYTEXTUREEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLAPPLYTEXTUREEXTPROC) (GLenum mode);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum mode)
PFNGLAREPROGRAMSRESIDENTNVPROC	./GL/glew.h	/^typedef GLboolean (GLAPIENTRY * PFNGLAREPROGRAMSRESIDENTNVPROC) (GLsizei n, const GLuint* ids, G/;"	t	typeref:typename:GLboolean (GLAPIENTRY *)(GLsizei n,const GLuint * ids,GLboolean * residences)
PFNGLARETEXTURESRESIDENTEXTPROC	./GL/glew.h	/^typedef GLboolean (GLAPIENTRY * PFNGLARETEXTURESRESIDENTEXTPROC) (GLsizei n, const GLuint* textu/;"	t	typeref:typename:GLboolean (GLAPIENTRY *)(GLsizei n,const GLuint * textures,GLboolean * residences)
PFNGLAREVERTEXARRAYSRESIDENTSGIXPROC	./GL/glew.h	/^typedef GLboolean (GLAPIENTRY * PFNGLAREVERTEXARRAYSRESIDENTSGIXPROC) (GLsizei n, const GLuint* /;"	t	typeref:typename:GLboolean (GLAPIENTRY *)(GLsizei n,const GLuint * arrays,GLboolean * residences)
PFNGLARRAYELEMENTEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLARRAYELEMENTEXTPROC) (GLint i);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLint i)
PFNGLARRAYOBJECTATIPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLARRAYOBJECTATIPROC) (GLenum array, GLint size, GLenum type, GLsi/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum array,GLint size,GLenum type,GLsizei stride,GLuint buffer,GLuint offset)
PFNGLASYNCCOPYBUFFERSUBDATANVXPROC	./GL/glew.h	/^typedef GLsync (GLAPIENTRY * PFNGLASYNCCOPYBUFFERSUBDATANVXPROC) (GLsizei waitSemaphoreCount, co/;"	t	typeref:typename:GLsync (GLAPIENTRY *)(GLsizei waitSemaphoreCount,const GLuint * waitSemaphoreArray,const GLuint64 * fenceValueArray,GLuint readGpu,GLbitfield writeGpuMask,GLuint readBuffer,GLuint writeBuffer,GLintptr readOffset,GLintptr writeOffset,GLsizeiptr size,GLsizei signalSemaphoreCount,const GLuint * signalSemaphoreArray,const GLuint64 * signalValueArray)
PFNGLASYNCCOPYIMAGESUBDATANVXPROC	./GL/glew.h	/^typedef GLuint (GLAPIENTRY * PFNGLASYNCCOPYIMAGESUBDATANVXPROC) (GLsizei waitSemaphoreCount, con/;"	t	typeref:typename:GLuint (GLAPIENTRY *)(GLsizei waitSemaphoreCount,const GLuint * waitSemaphoreArray,const GLuint64 * waitValueArray,GLuint srcGpu,GLbitfield dstGpuMask,GLuint srcName,GLenum srcTarget,GLint srcLevel,GLint srcX,GLint srcY,GLint srcZ,GLuint dstName,GLenum dstTarget,GLint dstLevel,GLint dstX,GLint dstY,GLint dstZ,GLsizei srcWidth,GLsizei srcHeight,GLsizei srcDepth,GLsizei signalSemaphoreCount,const GLuint * signalSemaphoreArray,const GLuint64 * signalValueArray)
PFNGLASYNCMARKERSGIXPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLASYNCMARKERSGIXPROC) (GLuint marker);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint marker)
PFNGLATTACHOBJECTARBPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLATTACHOBJECTARBPROC) (GLhandleARB containerObj, GLhandleARB obj)/;"	t	typeref:typename:void (GLAPIENTRY *)(GLhandleARB containerObj,GLhandleARB obj)
PFNGLATTACHSHADERPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLATTACHSHADERPROC) (GLuint program, GLuint shader);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint program,GLuint shader)
PFNGLBEGINCONDITIONALRENDERNVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLBEGINCONDITIONALRENDERNVPROC) (GLuint id, GLenum mode);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint id,GLenum mode)
PFNGLBEGINCONDITIONALRENDERNVXPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLBEGINCONDITIONALRENDERNVXPROC) (GLuint id);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint id)
PFNGLBEGINCONDITIONALRENDERPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLBEGINCONDITIONALRENDERPROC) (GLuint id, GLenum mode);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint id,GLenum mode)
PFNGLBEGINFRAGMENTSHADERATIPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLBEGINFRAGMENTSHADERATIPROC) (void);$/;"	t	typeref:typename:void (GLAPIENTRY *)(void)
PFNGLBEGINOCCLUSIONQUERYNVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLBEGINOCCLUSIONQUERYNVPROC) (GLuint id);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint id)
PFNGLBEGINPERFMONITORAMDPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLBEGINPERFMONITORAMDPROC) (GLuint monitor);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint monitor)
PFNGLBEGINPERFQUERYINTELPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLBEGINPERFQUERYINTELPROC) (GLuint queryHandle);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint queryHandle)
PFNGLBEGINQUERYANGLEPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLBEGINQUERYANGLEPROC) (GLenum target, GLuint id);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLuint id)
PFNGLBEGINQUERYARBPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLBEGINQUERYARBPROC) (GLenum target, GLuint id);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLuint id)
PFNGLBEGINQUERYEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLBEGINQUERYEXTPROC) (GLenum target, GLuint id);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLuint id)
PFNGLBEGINQUERYINDEXEDPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLBEGINQUERYINDEXEDPROC) (GLenum target, GLuint index, GLuint id);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLuint index,GLuint id)
PFNGLBEGINQUERYPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLBEGINQUERYPROC) (GLenum target, GLuint id);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLuint id)
PFNGLBEGINSCENEEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLBEGINSCENEEXTPROC) (void);$/;"	t	typeref:typename:void (GLAPIENTRY *)(void)
PFNGLBEGINTRANSFORMFEEDBACKEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLBEGINTRANSFORMFEEDBACKEXTPROC) (GLenum primitiveMode);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum primitiveMode)
PFNGLBEGINTRANSFORMFEEDBACKNVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLBEGINTRANSFORMFEEDBACKNVPROC) (GLenum primitiveMode);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum primitiveMode)
PFNGLBEGINTRANSFORMFEEDBACKPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLBEGINTRANSFORMFEEDBACKPROC) (GLenum primitiveMode);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum primitiveMode)
PFNGLBEGINVERTEXSHADEREXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLBEGINVERTEXSHADEREXTPROC) (void);$/;"	t	typeref:typename:void (GLAPIENTRY *)(void)
PFNGLBEGINVIDEOCAPTURENVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLBEGINVIDEOCAPTURENVPROC) (GLuint video_capture_slot);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint video_capture_slot)
PFNGLBINDARRAYSETEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLBINDARRAYSETEXTPROC) (const void *arrayset);$/;"	t	typeref:typename:void (GLAPIENTRY *)(const void * arrayset)
PFNGLBINDATTRIBLOCATIONARBPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLBINDATTRIBLOCATIONARBPROC) (GLhandleARB programObj, GLuint index/;"	t	typeref:typename:void (GLAPIENTRY *)(GLhandleARB programObj,GLuint index,const GLcharARB * name)
PFNGLBINDATTRIBLOCATIONPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLBINDATTRIBLOCATIONPROC) (GLuint program, GLuint index, const GLc/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint program,GLuint index,const GLchar * name)
PFNGLBINDBUFFERARBPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLBINDBUFFERARBPROC) (GLenum target, GLuint buffer);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLuint buffer)
PFNGLBINDBUFFERBASEEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLBINDBUFFERBASEEXTPROC) (GLenum target, GLuint index, GLuint buff/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLuint index,GLuint buffer)
PFNGLBINDBUFFERBASENVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLBINDBUFFERBASENVPROC) (GLenum target, GLuint index, GLuint buffe/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLuint index,GLuint buffer)
PFNGLBINDBUFFERBASEPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLBINDBUFFERBASEPROC) (GLenum target, GLuint index, GLuint buffer)/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLuint index,GLuint buffer)
PFNGLBINDBUFFEROFFSETEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLBINDBUFFEROFFSETEXTPROC) (GLenum target, GLuint index, GLuint bu/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLuint index,GLuint buffer,GLintptr offset)
PFNGLBINDBUFFEROFFSETNVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLBINDBUFFEROFFSETNVPROC) (GLenum target, GLuint index, GLuint buf/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLuint index,GLuint buffer,GLintptr offset)
PFNGLBINDBUFFERPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLBINDBUFFERPROC) (GLenum target, GLuint buffer);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLuint buffer)
PFNGLBINDBUFFERRANGEEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLBINDBUFFERRANGEEXTPROC) (GLenum target, GLuint index, GLuint buf/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLuint index,GLuint buffer,GLintptr offset,GLsizeiptr size)
PFNGLBINDBUFFERRANGENVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLBINDBUFFERRANGENVPROC) (GLenum target, GLuint index, GLuint buff/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLuint index,GLuint buffer,GLintptr offset,GLsizeiptr size)
PFNGLBINDBUFFERRANGEPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLBINDBUFFERRANGEPROC) (GLenum target, GLuint index, GLuint buffer/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLuint index,GLuint buffer,GLintptr offset,GLsizeiptr size)
PFNGLBINDBUFFERSBASEPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLBINDBUFFERSBASEPROC) (GLenum target, GLuint first, GLsizei count/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLuint first,GLsizei count,const GLuint * buffers)
PFNGLBINDBUFFERSRANGEPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLBINDBUFFERSRANGEPROC) (GLenum target, GLuint first, GLsizei coun/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLuint first,GLsizei count,const GLuint * buffers,const GLintptr * offsets,const GLsizeiptr * sizes)
PFNGLBINDFRAGDATALOCATIONEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLBINDFRAGDATALOCATIONEXTPROC) (GLuint program, GLuint color, cons/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint program,GLuint color,const GLchar * name)
PFNGLBINDFRAGDATALOCATIONINDEXEDEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLBINDFRAGDATALOCATIONINDEXEDEXTPROC) (GLuint program, GLuint colo/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint program,GLuint colorNumber,GLuint index,const GLchar * name)
PFNGLBINDFRAGDATALOCATIONINDEXEDPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLBINDFRAGDATALOCATIONINDEXEDPROC) (GLuint program, GLuint colorNu/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint program,GLuint colorNumber,GLuint index,const GLchar * name)
PFNGLBINDFRAGDATALOCATIONPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLBINDFRAGDATALOCATIONPROC) (GLuint program, GLuint colorNumber, c/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint program,GLuint colorNumber,const GLchar * name)
PFNGLBINDFRAGMENTSHADERATIPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLBINDFRAGMENTSHADERATIPROC) (GLuint id);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint id)
PFNGLBINDFRAMEBUFFEREXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLBINDFRAMEBUFFEREXTPROC) (GLenum target, GLuint framebuffer);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLuint framebuffer)
PFNGLBINDFRAMEBUFFEROESPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLBINDFRAMEBUFFEROESPROC) (GLenum target, GLuint framebuffer);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLuint framebuffer)
PFNGLBINDFRAMEBUFFERPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLBINDFRAMEBUFFERPROC) (GLenum target, GLuint framebuffer);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLuint framebuffer)
PFNGLBINDIMAGETEXTUREEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLBINDIMAGETEXTUREEXTPROC) (GLuint index, GLuint texture, GLint le/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,GLuint texture,GLint level,GLboolean layered,GLint layer,GLenum access,GLint format)
PFNGLBINDIMAGETEXTUREPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLBINDIMAGETEXTUREPROC) (GLuint unit, GLuint texture, GLint level,/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint unit,GLuint texture,GLint level,GLboolean layered,GLint layer,GLenum access,GLenum format)
PFNGLBINDIMAGETEXTURESPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLBINDIMAGETEXTURESPROC) (GLuint first, GLsizei count, const GLuin/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint first,GLsizei count,const GLuint * textures)
PFNGLBINDLIGHTPARAMETEREXTPROC	./GL/glew.h	/^typedef GLuint (GLAPIENTRY * PFNGLBINDLIGHTPARAMETEREXTPROC) (GLenum light, GLenum value);$/;"	t	typeref:typename:GLuint (GLAPIENTRY *)(GLenum light,GLenum value)
PFNGLBINDMATERIALPARAMETEREXTPROC	./GL/glew.h	/^typedef GLuint (GLAPIENTRY * PFNGLBINDMATERIALPARAMETEREXTPROC) (GLenum face, GLenum value);$/;"	t	typeref:typename:GLuint (GLAPIENTRY *)(GLenum face,GLenum value)
PFNGLBINDMULTITEXTUREEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLBINDMULTITEXTUREEXTPROC) (GLenum texunit, GLenum target, GLuint /;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum texunit,GLenum target,GLuint texture)
PFNGLBINDPARAMETEREXTPROC	./GL/glew.h	/^typedef GLuint (GLAPIENTRY * PFNGLBINDPARAMETEREXTPROC) (GLenum value);$/;"	t	typeref:typename:GLuint (GLAPIENTRY *)(GLenum value)
PFNGLBINDPROGRAMARBPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLBINDPROGRAMARBPROC) (GLenum target, GLuint program);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLuint program)
PFNGLBINDPROGRAMNVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLBINDPROGRAMNVPROC) (GLenum target, GLuint id);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLuint id)
PFNGLBINDPROGRAMPIPELINEPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLBINDPROGRAMPIPELINEPROC) (GLuint pipeline);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint pipeline)
PFNGLBINDRENDERBUFFEREXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLBINDRENDERBUFFEREXTPROC) (GLenum target, GLuint renderbuffer);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLuint renderbuffer)
PFNGLBINDRENDERBUFFEROESPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLBINDRENDERBUFFEROESPROC) (GLenum target, GLuint renderbuffer);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLuint renderbuffer)
PFNGLBINDRENDERBUFFERPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLBINDRENDERBUFFERPROC) (GLenum target, GLuint renderbuffer);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLuint renderbuffer)
PFNGLBINDSAMPLERPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLBINDSAMPLERPROC) (GLuint unit, GLuint sampler);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint unit,GLuint sampler)
PFNGLBINDSAMPLERSPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLBINDSAMPLERSPROC) (GLuint first, GLsizei count, const GLuint* sa/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint first,GLsizei count,const GLuint * samplers)
PFNGLBINDSHADINGRATEIMAGENVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLBINDSHADINGRATEIMAGENVPROC) (GLuint texture);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint texture)
PFNGLBINDTEXGENPARAMETEREXTPROC	./GL/glew.h	/^typedef GLuint (GLAPIENTRY * PFNGLBINDTEXGENPARAMETEREXTPROC) (GLenum unit, GLenum coord, GLenum/;"	t	typeref:typename:GLuint (GLAPIENTRY *)(GLenum unit,GLenum coord,GLenum value)
PFNGLBINDTEXTUREEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLBINDTEXTUREEXTPROC) (GLenum target, GLuint texture);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLuint texture)
PFNGLBINDTEXTURESPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLBINDTEXTURESPROC) (GLuint first, GLsizei count, const GLuint* te/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint first,GLsizei count,const GLuint * textures)
PFNGLBINDTEXTUREUNITPARAMETEREXTPROC	./GL/glew.h	/^typedef GLuint (GLAPIENTRY * PFNGLBINDTEXTUREUNITPARAMETEREXTPROC) (GLenum unit, GLenum value);$/;"	t	typeref:typename:GLuint (GLAPIENTRY *)(GLenum unit,GLenum value)
PFNGLBINDTEXTUREUNITPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLBINDTEXTUREUNITPROC) (GLuint unit, GLuint texture);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint unit,GLuint texture)
PFNGLBINDTRANSFORMFEEDBACKNVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLBINDTRANSFORMFEEDBACKNVPROC) (GLenum target, GLuint id);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLuint id)
PFNGLBINDTRANSFORMFEEDBACKPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLBINDTRANSFORMFEEDBACKPROC) (GLenum target, GLuint id);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLuint id)
PFNGLBINDVERTEXARRAYAPPLEPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLBINDVERTEXARRAYAPPLEPROC) (GLuint array);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint array)
PFNGLBINDVERTEXARRAYOESPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLBINDVERTEXARRAYOESPROC) (GLuint array);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint array)
PFNGLBINDVERTEXARRAYPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLBINDVERTEXARRAYPROC) (GLuint array);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint array)
PFNGLBINDVERTEXARRAYSGIXPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLBINDVERTEXARRAYSGIXPROC) (GLuint array);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint array)
PFNGLBINDVERTEXBUFFERPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLBINDVERTEXBUFFERPROC) (GLuint bindingindex, GLuint buffer, GLint/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint bindingindex,GLuint buffer,GLintptr offset,GLsizei stride)
PFNGLBINDVERTEXBUFFERSPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLBINDVERTEXBUFFERSPROC) (GLuint first, GLsizei count, const GLuin/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint first,GLsizei count,const GLuint * buffers,const GLintptr * offsets,const GLsizei * strides)
PFNGLBINDVERTEXSHADEREXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLBINDVERTEXSHADEREXTPROC) (GLuint id);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint id)
PFNGLBINDVIDEOCAPTURESTREAMBUFFERNVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLBINDVIDEOCAPTURESTREAMBUFFERNVPROC) (GLuint video_capture_slot, /;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint video_capture_slot,GLuint stream,GLenum frame_region,GLintptrARB offset)
PFNGLBINDVIDEOCAPTURESTREAMTEXTURENVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLBINDVIDEOCAPTURESTREAMTEXTURENVPROC) (GLuint video_capture_slot,/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint video_capture_slot,GLuint stream,GLenum frame_region,GLenum target,GLuint texture)
PFNGLBINORMALPOINTEREXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLBINORMALPOINTEREXTPROC) (GLenum type, GLsizei stride, void *poin/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum type,GLsizei stride,void * pointer)
PFNGLBLENDBARRIERKHRPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLBLENDBARRIERKHRPROC) (void);$/;"	t	typeref:typename:void (GLAPIENTRY *)(void)
PFNGLBLENDBARRIERNVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLBLENDBARRIERNVPROC) (void);$/;"	t	typeref:typename:void (GLAPIENTRY *)(void)
PFNGLBLENDCOLOREXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLBLENDCOLOREXTPROC) (GLclampf red, GLclampf green, GLclampf blue,/;"	t	typeref:typename:void (GLAPIENTRY *)(GLclampf red,GLclampf green,GLclampf blue,GLclampf alpha)
PFNGLBLENDCOLORPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLBLENDCOLORPROC) (GLclampf red, GLclampf green, GLclampf blue, GL/;"	t	typeref:typename:void (GLAPIENTRY *)(GLclampf red,GLclampf green,GLclampf blue,GLclampf alpha)
PFNGLBLENDEQUATIONEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLBLENDEQUATIONEXTPROC) (GLenum mode);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum mode)
PFNGLBLENDEQUATIONIARBPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLBLENDEQUATIONIARBPROC) (GLuint buf, GLenum mode);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint buf,GLenum mode)
PFNGLBLENDEQUATIONIEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLBLENDEQUATIONIEXTPROC) (GLuint buf, GLenum mode);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint buf,GLenum mode)
PFNGLBLENDEQUATIONINDEXEDAMDPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLBLENDEQUATIONINDEXEDAMDPROC) (GLuint buf, GLenum mode);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint buf,GLenum mode)
PFNGLBLENDEQUATIONIOESPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLBLENDEQUATIONIOESPROC) (GLuint buf, GLenum mode);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint buf,GLenum mode)
PFNGLBLENDEQUATIONIPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLBLENDEQUATIONIPROC) (GLuint buf, GLenum mode);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint buf,GLenum mode)
PFNGLBLENDEQUATIONOESPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLBLENDEQUATIONOESPROC) (GLenum mode);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum mode)
PFNGLBLENDEQUATIONPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLBLENDEQUATIONPROC) (GLenum mode);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum mode)
PFNGLBLENDEQUATIONSEPARATEEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLBLENDEQUATIONSEPARATEEXTPROC) (GLenum modeRGB, GLenum modeAlpha)/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum modeRGB,GLenum modeAlpha)
PFNGLBLENDEQUATIONSEPARATEIARBPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLBLENDEQUATIONSEPARATEIARBPROC) (GLuint buf, GLenum modeRGB, GLen/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint buf,GLenum modeRGB,GLenum modeAlpha)
PFNGLBLENDEQUATIONSEPARATEIEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLBLENDEQUATIONSEPARATEIEXTPROC) (GLuint buf, GLenum modeRGB, GLen/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint buf,GLenum modeRGB,GLenum modeAlpha)
PFNGLBLENDEQUATIONSEPARATEINDEXEDAMDPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLBLENDEQUATIONSEPARATEINDEXEDAMDPROC) (GLuint buf, GLenum modeRGB/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint buf,GLenum modeRGB,GLenum modeAlpha)
PFNGLBLENDEQUATIONSEPARATEIOESPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLBLENDEQUATIONSEPARATEIOESPROC) (GLuint buf, GLenum modeRGB, GLen/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint buf,GLenum modeRGB,GLenum modeAlpha)
PFNGLBLENDEQUATIONSEPARATEIPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLBLENDEQUATIONSEPARATEIPROC) (GLuint buf, GLenum modeRGB, GLenum /;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint buf,GLenum modeRGB,GLenum modeAlpha)
PFNGLBLENDEQUATIONSEPARATEOESPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLBLENDEQUATIONSEPARATEOESPROC) (GLenum modeRGB, GLenum modeAlpha)/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum modeRGB,GLenum modeAlpha)
PFNGLBLENDEQUATIONSEPARATEPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLBLENDEQUATIONSEPARATEPROC) (GLenum modeRGB, GLenum modeAlpha);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum modeRGB,GLenum modeAlpha)
PFNGLBLENDFUNCIARBPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLBLENDFUNCIARBPROC) (GLuint buf, GLenum src, GLenum dst);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint buf,GLenum src,GLenum dst)
PFNGLBLENDFUNCIEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLBLENDFUNCIEXTPROC) (GLuint buf, GLenum src, GLenum dst);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint buf,GLenum src,GLenum dst)
PFNGLBLENDFUNCINDEXEDAMDPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLBLENDFUNCINDEXEDAMDPROC) (GLuint buf, GLenum src, GLenum dst);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint buf,GLenum src,GLenum dst)
PFNGLBLENDFUNCIOESPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLBLENDFUNCIOESPROC) (GLuint buf, GLenum src, GLenum dst);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint buf,GLenum src,GLenum dst)
PFNGLBLENDFUNCIPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLBLENDFUNCIPROC) (GLuint buf, GLenum src, GLenum dst);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint buf,GLenum src,GLenum dst)
PFNGLBLENDFUNCSEPARATEEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLBLENDFUNCSEPARATEEXTPROC) (GLenum sfactorRGB, GLenum dfactorRGB,/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum sfactorRGB,GLenum dfactorRGB,GLenum sfactorAlpha,GLenum dfactorAlpha)
PFNGLBLENDFUNCSEPARATEIARBPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLBLENDFUNCSEPARATEIARBPROC) (GLuint buf, GLenum srcRGB, GLenum ds/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint buf,GLenum srcRGB,GLenum dstRGB,GLenum srcAlpha,GLenum dstAlpha)
PFNGLBLENDFUNCSEPARATEIEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLBLENDFUNCSEPARATEIEXTPROC) (GLuint buf, GLenum srcRGB, GLenum ds/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint buf,GLenum srcRGB,GLenum dstRGB,GLenum srcAlpha,GLenum dstAlpha)
PFNGLBLENDFUNCSEPARATEINDEXEDAMDPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLBLENDFUNCSEPARATEINDEXEDAMDPROC) (GLuint buf, GLenum srcRGB, GLe/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint buf,GLenum srcRGB,GLenum dstRGB,GLenum srcAlpha,GLenum dstAlpha)
PFNGLBLENDFUNCSEPARATEIOESPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLBLENDFUNCSEPARATEIOESPROC) (GLuint buf, GLenum srcRGB, GLenum ds/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint buf,GLenum srcRGB,GLenum dstRGB,GLenum srcAlpha,GLenum dstAlpha)
PFNGLBLENDFUNCSEPARATEIPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLBLENDFUNCSEPARATEIPROC) (GLuint buf, GLenum srcRGB, GLenum dstRG/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint buf,GLenum srcRGB,GLenum dstRGB,GLenum srcAlpha,GLenum dstAlpha)
PFNGLBLENDFUNCSEPARATEOESPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLBLENDFUNCSEPARATEOESPROC) (GLenum sfactorRGB, GLenum dfactorRGB,/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum sfactorRGB,GLenum dfactorRGB,GLenum sfactorAlpha,GLenum dfactorAlpha)
PFNGLBLENDFUNCSEPARATEPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLBLENDFUNCSEPARATEPROC) (GLenum sfactorRGB, GLenum dfactorRGB, GL/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum sfactorRGB,GLenum dfactorRGB,GLenum sfactorAlpha,GLenum dfactorAlpha)
PFNGLBLENDPARAMETERINVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLBLENDPARAMETERINVPROC) (GLenum pname, GLint value);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum pname,GLint value)
PFNGLBLITFRAMEBUFFERANGLEPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLBLITFRAMEBUFFERANGLEPROC) (GLint srcX0, GLint srcY0, GLint srcX1/;"	t	typeref:typename:void (GLAPIENTRY *)(GLint srcX0,GLint srcY0,GLint srcX1,GLint srcY1,GLint dstX0,GLint dstY0,GLint dstX1,GLint dstY1,GLbitfield mask,GLenum filter)
PFNGLBLITFRAMEBUFFEREXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLBLITFRAMEBUFFEREXTPROC) (GLint srcX0, GLint srcY0, GLint srcX1, /;"	t	typeref:typename:void (GLAPIENTRY *)(GLint srcX0,GLint srcY0,GLint srcX1,GLint srcY1,GLint dstX0,GLint dstY0,GLint dstX1,GLint dstY1,GLbitfield mask,GLenum filter)
PFNGLBLITFRAMEBUFFERNVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLBLITFRAMEBUFFERNVPROC) (GLint srcX0, GLint srcY0, GLint srcX1, G/;"	t	typeref:typename:void (GLAPIENTRY *)(GLint srcX0,GLint srcY0,GLint srcX1,GLint srcY1,GLint dstX0,GLint dstY0,GLint dstX1,GLint dstY1,GLbitfield mask,GLenum filter)
PFNGLBLITFRAMEBUFFERPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLBLITFRAMEBUFFERPROC) (GLint srcX0, GLint srcY0, GLint srcX1, GLi/;"	t	typeref:typename:void (GLAPIENTRY *)(GLint srcX0,GLint srcY0,GLint srcX1,GLint srcY1,GLint dstX0,GLint dstY0,GLint dstX1,GLint dstY1,GLbitfield mask,GLenum filter)
PFNGLBLITNAMEDFRAMEBUFFERPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLBLITNAMEDFRAMEBUFFERPROC) (GLuint readFramebuffer, GLuint drawFr/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint readFramebuffer,GLuint drawFramebuffer,GLint srcX0,GLint srcY0,GLint srcX1,GLint srcY1,GLint dstX0,GLint dstY0,GLint dstX1,GLint dstY1,GLbitfield mask,GLenum filter)
PFNGLBUFFERADDRESSRANGENVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLBUFFERADDRESSRANGENVPROC) (GLenum pname, GLuint index, GLuint64E/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum pname,GLuint index,GLuint64EXT address,GLsizeiptr length)
PFNGLBUFFERATTACHMEMORYNVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLBUFFERATTACHMEMORYNVPROC) (GLenum target, GLuint memory, GLuint6/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLuint memory,GLuint64 offset)
PFNGLBUFFERDATAARBPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLBUFFERDATAARBPROC) (GLenum target, GLsizeiptrARB size, const voi/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLsizeiptrARB size,const void * data,GLenum usage)
PFNGLBUFFERDATAPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLBUFFERDATAPROC) (GLenum target, GLsizeiptr size, const void* dat/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLsizeiptr size,const void * data,GLenum usage)
PFNGLBUFFERPAGECOMMITMENTARBPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLBUFFERPAGECOMMITMENTARBPROC) (GLenum target, GLintptr offset, GL/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLintptr offset,GLsizeiptr size,GLboolean commit)
PFNGLBUFFERPARAMETERIAPPLEPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLBUFFERPARAMETERIAPPLEPROC) (GLenum target, GLenum pname, GLint p/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLenum pname,GLint param)
PFNGLBUFFERREGIONENABLEDPROC	./GL/glew.h	/^typedef GLuint (GLAPIENTRY * PFNGLBUFFERREGIONENABLEDPROC) (void);$/;"	t	typeref:typename:GLuint (GLAPIENTRY *)(void)
PFNGLBUFFERSTORAGEEXTERNALEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLBUFFERSTORAGEEXTERNALEXTPROC) (GLenum target, GLintptr offset, G/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLintptr offset,GLsizeiptr size,GLeglClientBufferEXT clientBuffer,GLbitfield flags)
PFNGLBUFFERSTORAGEEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLBUFFERSTORAGEEXTPROC) (GLenum target, GLsizeiptr size, const voi/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLsizeiptr size,const void * data,GLbitfield flags)
PFNGLBUFFERSTORAGEMEMEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLBUFFERSTORAGEMEMEXTPROC) (GLenum target, GLsizeiptr size, GLuint/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLsizeiptr size,GLuint memory,GLuint64 offset)
PFNGLBUFFERSTORAGEPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLBUFFERSTORAGEPROC) (GLenum target, GLsizeiptr size, const void */;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLsizeiptr size,const void * data,GLbitfield flags)
PFNGLBUFFERSUBDATAARBPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLBUFFERSUBDATAARBPROC) (GLenum target, GLintptrARB offset, GLsize/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLintptrARB offset,GLsizeiptrARB size,const void * data)
PFNGLBUFFERSUBDATAPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLBUFFERSUBDATAPROC) (GLenum target, GLintptr offset, GLsizeiptr s/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLintptr offset,GLsizeiptr size,const void * data)
PFNGLCALLCOMMANDLISTNVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLCALLCOMMANDLISTNVPROC) (GLuint list);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint list)
PFNGLCHECKFRAMEBUFFERSTATUSEXTPROC	./GL/glew.h	/^typedef GLenum (GLAPIENTRY * PFNGLCHECKFRAMEBUFFERSTATUSEXTPROC) (GLenum target);$/;"	t	typeref:typename:GLenum (GLAPIENTRY *)(GLenum target)
PFNGLCHECKFRAMEBUFFERSTATUSOESPROC	./GL/glew.h	/^typedef GLenum (GLAPIENTRY * PFNGLCHECKFRAMEBUFFERSTATUSOESPROC) (GLenum target);$/;"	t	typeref:typename:GLenum (GLAPIENTRY *)(GLenum target)
PFNGLCHECKFRAMEBUFFERSTATUSPROC	./GL/glew.h	/^typedef GLenum (GLAPIENTRY * PFNGLCHECKFRAMEBUFFERSTATUSPROC) (GLenum target);$/;"	t	typeref:typename:GLenum (GLAPIENTRY *)(GLenum target)
PFNGLCHECKNAMEDFRAMEBUFFERSTATUSEXTPROC	./GL/glew.h	/^typedef GLenum (GLAPIENTRY * PFNGLCHECKNAMEDFRAMEBUFFERSTATUSEXTPROC) (GLuint framebuffer, GLenu/;"	t	typeref:typename:GLenum (GLAPIENTRY *)(GLuint framebuffer,GLenum target)
PFNGLCHECKNAMEDFRAMEBUFFERSTATUSPROC	./GL/glew.h	/^typedef GLenum (GLAPIENTRY * PFNGLCHECKNAMEDFRAMEBUFFERSTATUSPROC) (GLuint framebuffer, GLenum t/;"	t	typeref:typename:GLenum (GLAPIENTRY *)(GLuint framebuffer,GLenum target)
PFNGLCLAMPCOLORARBPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLCLAMPCOLORARBPROC) (GLenum target, GLenum clamp);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLenum clamp)
PFNGLCLAMPCOLORPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLCLAMPCOLORPROC) (GLenum target, GLenum clamp);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLenum clamp)
PFNGLCLEARBUFFERDATAPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLCLEARBUFFERDATAPROC) (GLenum target, GLenum internalformat, GLen/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLenum internalformat,GLenum format,GLenum type,const void * data)
PFNGLCLEARBUFFERFIPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLCLEARBUFFERFIPROC) (GLenum buffer, GLint drawBuffer, GLfloat dep/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum buffer,GLint drawBuffer,GLfloat depth,GLint stencil)
PFNGLCLEARBUFFERFVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLCLEARBUFFERFVPROC) (GLenum buffer, GLint drawBuffer, const GLflo/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum buffer,GLint drawBuffer,const GLfloat * value)
PFNGLCLEARBUFFERIVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLCLEARBUFFERIVPROC) (GLenum buffer, GLint drawBuffer, const GLint/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum buffer,GLint drawBuffer,const GLint * value)
PFNGLCLEARBUFFERSUBDATAPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLCLEARBUFFERSUBDATAPROC) (GLenum target, GLenum internalformat, G/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLenum internalformat,GLintptr offset,GLsizeiptr size,GLenum format,GLenum type,const void * data)
PFNGLCLEARBUFFERUIVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLCLEARBUFFERUIVPROC) (GLenum buffer, GLint drawBuffer, const GLui/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum buffer,GLint drawBuffer,const GLuint * value)
PFNGLCLEARCOLORIIEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLCLEARCOLORIIEXTPROC) (GLint red, GLint green, GLint blue, GLint /;"	t	typeref:typename:void (GLAPIENTRY *)(GLint red,GLint green,GLint blue,GLint alpha)
PFNGLCLEARCOLORIUIEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLCLEARCOLORIUIEXTPROC) (GLuint red, GLuint green, GLuint blue, GL/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint red,GLuint green,GLuint blue,GLuint alpha)
PFNGLCLEARCOLORXPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLCLEARCOLORXPROC) (GLclampx red, GLclampx green, GLclampx blue, G/;"	t	typeref:typename:void (GLAPIENTRY *)(GLclampx red,GLclampx green,GLclampx blue,GLclampx alpha)
PFNGLCLEARDEPTHDNVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLCLEARDEPTHDNVPROC) (GLdouble depth);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLdouble depth)
PFNGLCLEARDEPTHFOESPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLCLEARDEPTHFOESPROC) (GLclampf depth);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLclampf depth)
PFNGLCLEARDEPTHFPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLCLEARDEPTHFPROC) (GLclampf d);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLclampf d)
PFNGLCLEARDEPTHXPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLCLEARDEPTHXPROC) (GLclampx depth);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLclampx depth)
PFNGLCLEARNAMEDBUFFERDATAEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLCLEARNAMEDBUFFERDATAEXTPROC) (GLuint buffer, GLenum internalform/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint buffer,GLenum internalformat,GLenum format,GLenum type,const void * data)
PFNGLCLEARNAMEDBUFFERDATAPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLCLEARNAMEDBUFFERDATAPROC) (GLuint buffer, GLenum internalformat,/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint buffer,GLenum internalformat,GLenum format,GLenum type,const void * data)
PFNGLCLEARNAMEDBUFFERSUBDATAEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLCLEARNAMEDBUFFERSUBDATAEXTPROC) (GLuint buffer, GLenum internalf/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint buffer,GLenum internalformat,GLintptr offset,GLsizeiptr size,GLenum format,GLenum type,const void * data)
PFNGLCLEARNAMEDBUFFERSUBDATAPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLCLEARNAMEDBUFFERSUBDATAPROC) (GLuint buffer, GLenum internalform/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint buffer,GLenum internalformat,GLintptr offset,GLsizeiptr size,GLenum format,GLenum type,const void * data)
PFNGLCLEARNAMEDFRAMEBUFFERFIPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLCLEARNAMEDFRAMEBUFFERFIPROC) (GLuint framebuffer, GLenum buffer,/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint framebuffer,GLenum buffer,GLint drawbuffer,GLfloat depth,GLint stencil)
PFNGLCLEARNAMEDFRAMEBUFFERFVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLCLEARNAMEDFRAMEBUFFERFVPROC) (GLuint framebuffer, GLenum buffer,/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint framebuffer,GLenum buffer,GLint drawbuffer,const GLfloat * value)
PFNGLCLEARNAMEDFRAMEBUFFERIVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLCLEARNAMEDFRAMEBUFFERIVPROC) (GLuint framebuffer, GLenum buffer,/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint framebuffer,GLenum buffer,GLint drawbuffer,const GLint * value)
PFNGLCLEARNAMEDFRAMEBUFFERUIVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLCLEARNAMEDFRAMEBUFFERUIVPROC) (GLuint framebuffer, GLenum buffer/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint framebuffer,GLenum buffer,GLint drawbuffer,const GLuint * value)
PFNGLCLEARPIXELLOCALSTORAGEUIEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLCLEARPIXELLOCALSTORAGEUIEXTPROC) (GLsizei offset, GLsizei n, con/;"	t	typeref:typename:void (GLAPIENTRY *)(GLsizei offset,GLsizei n,const GLuint * values)
PFNGLCLEARTEXIMAGEEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLCLEARTEXIMAGEEXTPROC) (GLuint texture, GLint level, GLenum forma/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint texture,GLint level,GLenum format,GLenum type,const void * data)
PFNGLCLEARTEXIMAGEPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLCLEARTEXIMAGEPROC) (GLuint texture, GLint level, GLenum format, /;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint texture,GLint level,GLenum format,GLenum type,const void * data)
PFNGLCLEARTEXSUBIMAGEEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLCLEARTEXSUBIMAGEEXTPROC) (GLuint texture, GLint level, GLint xof/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint texture,GLint level,GLint xoffset,GLint yoffset,GLint zoffset,GLsizei width,GLsizei height,GLsizei depth,GLenum format,GLenum type,const void * data)
PFNGLCLEARTEXSUBIMAGEPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLCLEARTEXSUBIMAGEPROC) (GLuint texture, GLint level, GLint xoffse/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint texture,GLint level,GLint xoffset,GLint yoffset,GLint zoffset,GLsizei width,GLsizei height,GLsizei depth,GLenum format,GLenum type,const void * data)
PFNGLCLIENTACTIVETEXTUREARBPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLCLIENTACTIVETEXTUREARBPROC) (GLenum texture);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum texture)
PFNGLCLIENTACTIVETEXTUREPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLCLIENTACTIVETEXTUREPROC) (GLenum texture);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum texture)
PFNGLCLIENTACTIVEVERTEXSTREAMATIPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLCLIENTACTIVEVERTEXSTREAMATIPROC) (GLenum stream);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum stream)
PFNGLCLIENTATTRIBDEFAULTEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLCLIENTATTRIBDEFAULTEXTPROC) (GLbitfield mask);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLbitfield mask)
PFNGLCLIENTWAITSEMAPHOREUI64NVXPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLCLIENTWAITSEMAPHOREUI64NVXPROC) (GLsizei fenceObjectCount, const/;"	t	typeref:typename:void (GLAPIENTRY *)(GLsizei fenceObjectCount,const GLuint * semaphoreArray,const GLuint64 * fenceValueArray)
PFNGLCLIENTWAITSYNCAPPLEPROC	./GL/glew.h	/^typedef GLenum (GLAPIENTRY * PFNGLCLIENTWAITSYNCAPPLEPROC) (GLsync GLsync, GLbitfield flags, GLu/;"	t	typeref:typename:GLenum (GLAPIENTRY *)(GLsync GLsync,GLbitfield flags,GLuint64 timeout)
PFNGLCLIENTWAITSYNCPROC	./GL/glew.h	/^typedef GLenum (GLAPIENTRY * PFNGLCLIENTWAITSYNCPROC) (GLsync GLsync,GLbitfield flags,GLuint64 t/;"	t	typeref:typename:GLenum (GLAPIENTRY *)(GLsync GLsync,GLbitfield flags,GLuint64 timeout)
PFNGLCLIPCONTROLEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLCLIPCONTROLEXTPROC) (GLenum origin, GLenum depth);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum origin,GLenum depth)
PFNGLCLIPCONTROLPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLCLIPCONTROLPROC) (GLenum origin, GLenum depth);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum origin,GLenum depth)
PFNGLCLIPPLANEFOESPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLCLIPPLANEFOESPROC) (GLenum plane, const GLfloat* equation);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum plane,const GLfloat * equation)
PFNGLCLIPPLANEFPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLCLIPPLANEFPROC) (GLenum plane, const GLfloat* equation);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum plane,const GLfloat * equation)
PFNGLCLIPPLANEXPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLCLIPPLANEXPROC) (GLenum plane, const GLfixed* equation);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum plane,const GLfixed * equation)
PFNGLCOLOR3FVERTEX3FSUNPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLCOLOR3FVERTEX3FSUNPROC) (GLfloat r, GLfloat g, GLfloat b, GLfloa/;"	t	typeref:typename:void (GLAPIENTRY *)(GLfloat r,GLfloat g,GLfloat b,GLfloat x,GLfloat y,GLfloat z)
PFNGLCOLOR3FVERTEX3FVSUNPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLCOLOR3FVERTEX3FVSUNPROC) (const GLfloat* c, const GLfloat *v);$/;"	t	typeref:typename:void (GLAPIENTRY *)(const GLfloat * c,const GLfloat * v)
PFNGLCOLOR3HNVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLCOLOR3HNVPROC) (GLhalf red, GLhalf green, GLhalf blue);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLhalf red,GLhalf green,GLhalf blue)
PFNGLCOLOR3HVNVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLCOLOR3HVNVPROC) (const GLhalf* v);$/;"	t	typeref:typename:void (GLAPIENTRY *)(const GLhalf * v)
PFNGLCOLOR4FNORMAL3FVERTEX3FSUNPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLCOLOR4FNORMAL3FVERTEX3FSUNPROC) (GLfloat r, GLfloat g, GLfloat b/;"	t	typeref:typename:void (GLAPIENTRY *)(GLfloat r,GLfloat g,GLfloat b,GLfloat a,GLfloat nx,GLfloat ny,GLfloat nz,GLfloat x,GLfloat y,GLfloat z)
PFNGLCOLOR4FNORMAL3FVERTEX3FVSUNPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLCOLOR4FNORMAL3FVERTEX3FVSUNPROC) (const GLfloat* c, const GLfloa/;"	t	typeref:typename:void (GLAPIENTRY *)(const GLfloat * c,const GLfloat * n,const GLfloat * v)
PFNGLCOLOR4HNVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLCOLOR4HNVPROC) (GLhalf red, GLhalf green, GLhalf blue, GLhalf al/;"	t	typeref:typename:void (GLAPIENTRY *)(GLhalf red,GLhalf green,GLhalf blue,GLhalf alpha)
PFNGLCOLOR4HVNVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLCOLOR4HVNVPROC) (const GLhalf* v);$/;"	t	typeref:typename:void (GLAPIENTRY *)(const GLhalf * v)
PFNGLCOLOR4UBVERTEX2FSUNPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLCOLOR4UBVERTEX2FSUNPROC) (GLubyte r, GLubyte g, GLubyte b, GLuby/;"	t	typeref:typename:void (GLAPIENTRY *)(GLubyte r,GLubyte g,GLubyte b,GLubyte a,GLfloat x,GLfloat y)
PFNGLCOLOR4UBVERTEX2FVSUNPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLCOLOR4UBVERTEX2FVSUNPROC) (const GLubyte* c, const GLfloat *v);$/;"	t	typeref:typename:void (GLAPIENTRY *)(const GLubyte * c,const GLfloat * v)
PFNGLCOLOR4UBVERTEX3FSUNPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLCOLOR4UBVERTEX3FSUNPROC) (GLubyte r, GLubyte g, GLubyte b, GLuby/;"	t	typeref:typename:void (GLAPIENTRY *)(GLubyte r,GLubyte g,GLubyte b,GLubyte a,GLfloat x,GLfloat y,GLfloat z)
PFNGLCOLOR4UBVERTEX3FVSUNPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLCOLOR4UBVERTEX3FVSUNPROC) (const GLubyte* c, const GLfloat *v);$/;"	t	typeref:typename:void (GLAPIENTRY *)(const GLubyte * c,const GLfloat * v)
PFNGLCOLOR4XPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLCOLOR4XPROC) (GLfixed red, GLfixed green, GLfixed blue, GLfixed /;"	t	typeref:typename:void (GLAPIENTRY *)(GLfixed red,GLfixed green,GLfixed blue,GLfixed alpha)
PFNGLCOLORFORMATNVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLCOLORFORMATNVPROC) (GLint size, GLenum type, GLsizei stride);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLint size,GLenum type,GLsizei stride)
PFNGLCOLORFRAGMENTOP1ATIPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLCOLORFRAGMENTOP1ATIPROC) (GLenum op, GLuint dst, GLuint dstMask,/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum op,GLuint dst,GLuint dstMask,GLuint dstMod,GLuint arg1,GLuint arg1Rep,GLuint arg1Mod)
PFNGLCOLORFRAGMENTOP2ATIPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLCOLORFRAGMENTOP2ATIPROC) (GLenum op, GLuint dst, GLuint dstMask,/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum op,GLuint dst,GLuint dstMask,GLuint dstMod,GLuint arg1,GLuint arg1Rep,GLuint arg1Mod,GLuint arg2,GLuint arg2Rep,GLuint arg2Mod)
PFNGLCOLORFRAGMENTOP3ATIPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLCOLORFRAGMENTOP3ATIPROC) (GLenum op, GLuint dst, GLuint dstMask,/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum op,GLuint dst,GLuint dstMask,GLuint dstMod,GLuint arg1,GLuint arg1Rep,GLuint arg1Mod,GLuint arg2,GLuint arg2Rep,GLuint arg2Mod,GLuint arg3,GLuint arg3Rep,GLuint arg3Mod)
PFNGLCOLORMASKIEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLCOLORMASKIEXTPROC) (GLuint buf, GLboolean r, GLboolean g, GLbool/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint buf,GLboolean r,GLboolean g,GLboolean b,GLboolean a)
PFNGLCOLORMASKINDEXEDEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLCOLORMASKINDEXEDEXTPROC) (GLuint buf, GLboolean r, GLboolean g, /;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint buf,GLboolean r,GLboolean g,GLboolean b,GLboolean a)
PFNGLCOLORMASKIOESPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLCOLORMASKIOESPROC) (GLuint buf, GLboolean r, GLboolean g, GLbool/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint buf,GLboolean r,GLboolean g,GLboolean b,GLboolean a)
PFNGLCOLORMASKIPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLCOLORMASKIPROC) (GLuint buf, GLboolean red, GLboolean green, GLb/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint buf,GLboolean red,GLboolean green,GLboolean blue,GLboolean alpha)
PFNGLCOLORP3UIPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLCOLORP3UIPROC) (GLenum type, GLuint color);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum type,GLuint color)
PFNGLCOLORP3UIVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLCOLORP3UIVPROC) (GLenum type, const GLuint* color);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum type,const GLuint * color)
PFNGLCOLORP4UIPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLCOLORP4UIPROC) (GLenum type, GLuint color);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum type,GLuint color)
PFNGLCOLORP4UIVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLCOLORP4UIVPROC) (GLenum type, const GLuint* color);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum type,const GLuint * color)
PFNGLCOLORPOINTEREXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLCOLORPOINTEREXTPROC) (GLint size, GLenum type, GLsizei stride, G/;"	t	typeref:typename:void (GLAPIENTRY *)(GLint size,GLenum type,GLsizei stride,GLsizei count,const void * pointer)
PFNGLCOLORPOINTERLISTIBMPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLCOLORPOINTERLISTIBMPROC) (GLint size, GLenum type, GLint stride,/;"	t	typeref:typename:void (GLAPIENTRY *)(GLint size,GLenum type,GLint stride,const void ** pointer,GLint ptrstride)
PFNGLCOLORPOINTERVINTELPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLCOLORPOINTERVINTELPROC) (GLint size, GLenum type, const void** p/;"	t	typeref:typename:void (GLAPIENTRY *)(GLint size,GLenum type,const void ** pointer)
PFNGLCOLORSUBTABLEEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLCOLORSUBTABLEEXTPROC) (GLenum target, GLsizei start, GLsizei cou/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLsizei start,GLsizei count,GLenum format,GLenum type,const void * data)
PFNGLCOLORSUBTABLEPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLCOLORSUBTABLEPROC) (GLenum target, GLsizei start, GLsizei count,/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLsizei start,GLsizei count,GLenum format,GLenum type,const void * data)
PFNGLCOLORTABLEEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLCOLORTABLEEXTPROC) (GLenum target, GLenum internalFormat, GLsize/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLenum internalFormat,GLsizei width,GLenum format,GLenum type,const void * data)
PFNGLCOLORTABLEPARAMETERFVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLCOLORTABLEPARAMETERFVPROC) (GLenum target, GLenum pname, const G/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLenum pname,const GLfloat * params)
PFNGLCOLORTABLEPARAMETERFVSGIPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLCOLORTABLEPARAMETERFVSGIPROC) (GLenum target, GLenum pname, cons/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLenum pname,const GLfloat * params)
PFNGLCOLORTABLEPARAMETERIVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLCOLORTABLEPARAMETERIVPROC) (GLenum target, GLenum pname, const G/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLenum pname,const GLint * params)
PFNGLCOLORTABLEPARAMETERIVSGIPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLCOLORTABLEPARAMETERIVSGIPROC) (GLenum target, GLenum pname, cons/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLenum pname,const GLint * params)
PFNGLCOLORTABLEPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLCOLORTABLEPROC) (GLenum target, GLenum internalformat, GLsizei w/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLenum internalformat,GLsizei width,GLenum format,GLenum type,const void * table)
PFNGLCOLORTABLESGIPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLCOLORTABLESGIPROC) (GLenum target, GLenum internalformat, GLsize/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLenum internalformat,GLsizei width,GLenum format,GLenum type,const void * table)
PFNGLCOMBINERINPUTNVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLCOMBINERINPUTNVPROC) (GLenum stage, GLenum portion, GLenum varia/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum stage,GLenum portion,GLenum variable,GLenum input,GLenum mapping,GLenum componentUsage)
PFNGLCOMBINEROUTPUTNVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLCOMBINEROUTPUTNVPROC) (GLenum stage, GLenum portion, GLenum abOu/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum stage,GLenum portion,GLenum abOutput,GLenum cdOutput,GLenum sumOutput,GLenum scale,GLenum bias,GLboolean abDotProduct,GLboolean cdDotProduct,GLboolean muxSum)
PFNGLCOMBINERPARAMETERFNVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLCOMBINERPARAMETERFNVPROC) (GLenum pname, GLfloat param);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum pname,GLfloat param)
PFNGLCOMBINERPARAMETERFVNVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLCOMBINERPARAMETERFVNVPROC) (GLenum pname, const GLfloat* params)/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum pname,const GLfloat * params)
PFNGLCOMBINERPARAMETERINVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLCOMBINERPARAMETERINVPROC) (GLenum pname, GLint param);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum pname,GLint param)
PFNGLCOMBINERPARAMETERIVNVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLCOMBINERPARAMETERIVNVPROC) (GLenum pname, const GLint* params);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum pname,const GLint * params)
PFNGLCOMBINERSTAGEPARAMETERFVNVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLCOMBINERSTAGEPARAMETERFVNVPROC) (GLenum stage, GLenum pname, con/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum stage,GLenum pname,const GLfloat * params)
PFNGLCOMMANDLISTSEGMENTSNVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLCOMMANDLISTSEGMENTSNVPROC) (GLuint list, GLuint segments);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint list,GLuint segments)
PFNGLCOMPILECOMMANDLISTNVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLCOMPILECOMMANDLISTNVPROC) (GLuint list);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint list)
PFNGLCOMPILESHADERARBPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLCOMPILESHADERARBPROC) (GLhandleARB shaderObj);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLhandleARB shaderObj)
PFNGLCOMPILESHADERINCLUDEARBPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLCOMPILESHADERINCLUDEARBPROC) (GLuint shader, GLsizei count, cons/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint shader,GLsizei count,const GLchar * const * path,const GLint * length)
PFNGLCOMPILESHADERPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLCOMPILESHADERPROC) (GLuint shader);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint shader)
PFNGLCOMPRESSEDMULTITEXIMAGE1DEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLCOMPRESSEDMULTITEXIMAGE1DEXTPROC) (GLenum texunit, GLenum target/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum texunit,GLenum target,GLint level,GLenum internalformat,GLsizei width,GLint border,GLsizei imageSize,const void * data)
PFNGLCOMPRESSEDMULTITEXIMAGE2DEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLCOMPRESSEDMULTITEXIMAGE2DEXTPROC) (GLenum texunit, GLenum target/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum texunit,GLenum target,GLint level,GLenum internalformat,GLsizei width,GLsizei height,GLint border,GLsizei imageSize,const void * data)
PFNGLCOMPRESSEDMULTITEXIMAGE3DEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLCOMPRESSEDMULTITEXIMAGE3DEXTPROC) (GLenum texunit, GLenum target/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum texunit,GLenum target,GLint level,GLenum internalformat,GLsizei width,GLsizei height,GLsizei depth,GLint border,GLsizei imageSize,const void * data)
PFNGLCOMPRESSEDMULTITEXSUBIMAGE1DEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLCOMPRESSEDMULTITEXSUBIMAGE1DEXTPROC) (GLenum texunit, GLenum tar/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum texunit,GLenum target,GLint level,GLint xoffset,GLsizei width,GLenum format,GLsizei imageSize,const void * data)
PFNGLCOMPRESSEDMULTITEXSUBIMAGE2DEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLCOMPRESSEDMULTITEXSUBIMAGE2DEXTPROC) (GLenum texunit, GLenum tar/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum texunit,GLenum target,GLint level,GLint xoffset,GLint yoffset,GLsizei width,GLsizei height,GLenum format,GLsizei imageSize,const void * data)
PFNGLCOMPRESSEDMULTITEXSUBIMAGE3DEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLCOMPRESSEDMULTITEXSUBIMAGE3DEXTPROC) (GLenum texunit, GLenum tar/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum texunit,GLenum target,GLint level,GLint xoffset,GLint yoffset,GLint zoffset,GLsizei width,GLsizei height,GLsizei depth,GLenum format,GLsizei imageSize,const void * data)
PFNGLCOMPRESSEDTEXIMAGE1DARBPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLCOMPRESSEDTEXIMAGE1DARBPROC) (GLenum target, GLint level, GLenum/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLint level,GLenum internalformat,GLsizei width,GLint border,GLsizei imageSize,const void * data)
PFNGLCOMPRESSEDTEXIMAGE1DPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLCOMPRESSEDTEXIMAGE1DPROC) (GLenum target, GLint level, GLenum in/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLint level,GLenum internalformat,GLsizei width,GLint border,GLsizei imageSize,const void * data)
PFNGLCOMPRESSEDTEXIMAGE2DARBPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLCOMPRESSEDTEXIMAGE2DARBPROC) (GLenum target, GLint level, GLenum/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLint level,GLenum internalformat,GLsizei width,GLsizei height,GLint border,GLsizei imageSize,const void * data)
PFNGLCOMPRESSEDTEXIMAGE2DPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLCOMPRESSEDTEXIMAGE2DPROC) (GLenum target, GLint level, GLenum in/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLint level,GLenum internalformat,GLsizei width,GLsizei height,GLint border,GLsizei imageSize,const void * data)
PFNGLCOMPRESSEDTEXIMAGE3DARBPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLCOMPRESSEDTEXIMAGE3DARBPROC) (GLenum target, GLint level, GLenum/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLint level,GLenum internalformat,GLsizei width,GLsizei height,GLsizei depth,GLint border,GLsizei imageSize,const void * data)
PFNGLCOMPRESSEDTEXIMAGE3DNVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLCOMPRESSEDTEXIMAGE3DNVPROC) (GLenum target, GLint level, GLenum /;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLint level,GLenum internalformat,GLsizei width,GLsizei height,GLsizei depth,GLint border,GLsizei imageSize,const void * data)
PFNGLCOMPRESSEDTEXIMAGE3DOESPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLCOMPRESSEDTEXIMAGE3DOESPROC) (GLenum target, GLint level, GLenum/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLint level,GLenum internalformat,GLsizei width,GLsizei height,GLsizei depth,GLint border,GLsizei imageSize,const void * data)
PFNGLCOMPRESSEDTEXIMAGE3DPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLCOMPRESSEDTEXIMAGE3DPROC) (GLenum target, GLint level, GLenum in/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLint level,GLenum internalformat,GLsizei width,GLsizei height,GLsizei depth,GLint border,GLsizei imageSize,const void * data)
PFNGLCOMPRESSEDTEXSUBIMAGE1DARBPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLCOMPRESSEDTEXSUBIMAGE1DARBPROC) (GLenum target, GLint level, GLi/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLint level,GLint xoffset,GLsizei width,GLenum format,GLsizei imageSize,const void * data)
PFNGLCOMPRESSEDTEXSUBIMAGE1DPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLCOMPRESSEDTEXSUBIMAGE1DPROC) (GLenum target, GLint level, GLint /;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLint level,GLint xoffset,GLsizei width,GLenum format,GLsizei imageSize,const void * data)
PFNGLCOMPRESSEDTEXSUBIMAGE2DARBPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLCOMPRESSEDTEXSUBIMAGE2DARBPROC) (GLenum target, GLint level, GLi/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLint level,GLint xoffset,GLint yoffset,GLsizei width,GLsizei height,GLenum format,GLsizei imageSize,const void * data)
PFNGLCOMPRESSEDTEXSUBIMAGE2DPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLCOMPRESSEDTEXSUBIMAGE2DPROC) (GLenum target, GLint level, GLint /;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLint level,GLint xoffset,GLint yoffset,GLsizei width,GLsizei height,GLenum format,GLsizei imageSize,const void * data)
PFNGLCOMPRESSEDTEXSUBIMAGE3DARBPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLCOMPRESSEDTEXSUBIMAGE3DARBPROC) (GLenum target, GLint level, GLi/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLint level,GLint xoffset,GLint yoffset,GLint zoffset,GLsizei width,GLsizei height,GLsizei depth,GLenum format,GLsizei imageSize,const void * data)
PFNGLCOMPRESSEDTEXSUBIMAGE3DNVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLCOMPRESSEDTEXSUBIMAGE3DNVPROC) (GLenum target, GLint level, GLin/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLint level,GLint xoffset,GLint yoffset,GLint zoffset,GLsizei width,GLsizei height,GLsizei depth,GLenum format,GLsizei imageSize,const void * data)
PFNGLCOMPRESSEDTEXSUBIMAGE3DOESPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLCOMPRESSEDTEXSUBIMAGE3DOESPROC) (GLenum target, GLint level, GLi/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLint level,GLint xoffset,GLint yoffset,GLint zoffset,GLsizei width,GLsizei height,GLsizei depth,GLenum format,GLsizei imageSize,const void * data)
PFNGLCOMPRESSEDTEXSUBIMAGE3DPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLCOMPRESSEDTEXSUBIMAGE3DPROC) (GLenum target, GLint level, GLint /;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLint level,GLint xoffset,GLint yoffset,GLint zoffset,GLsizei width,GLsizei height,GLsizei depth,GLenum format,GLsizei imageSize,const void * data)
PFNGLCOMPRESSEDTEXTUREIMAGE1DEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLCOMPRESSEDTEXTUREIMAGE1DEXTPROC) (GLuint texture, GLenum target,/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint texture,GLenum target,GLint level,GLenum internalformat,GLsizei width,GLint border,GLsizei imageSize,const void * data)
PFNGLCOMPRESSEDTEXTUREIMAGE2DEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLCOMPRESSEDTEXTUREIMAGE2DEXTPROC) (GLuint texture, GLenum target,/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint texture,GLenum target,GLint level,GLenum internalformat,GLsizei width,GLsizei height,GLint border,GLsizei imageSize,const void * data)
PFNGLCOMPRESSEDTEXTUREIMAGE3DEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLCOMPRESSEDTEXTUREIMAGE3DEXTPROC) (GLuint texture, GLenum target,/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint texture,GLenum target,GLint level,GLenum internalformat,GLsizei width,GLsizei height,GLsizei depth,GLint border,GLsizei imageSize,const void * data)
PFNGLCOMPRESSEDTEXTURESUBIMAGE1DEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLCOMPRESSEDTEXTURESUBIMAGE1DEXTPROC) (GLuint texture, GLenum targ/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint texture,GLenum target,GLint level,GLint xoffset,GLsizei width,GLenum format,GLsizei imageSize,const void * data)
PFNGLCOMPRESSEDTEXTURESUBIMAGE1DPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLCOMPRESSEDTEXTURESUBIMAGE1DPROC) (GLuint texture, GLint level, G/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint texture,GLint level,GLint xoffset,GLsizei width,GLenum format,GLsizei imageSize,const void * data)
PFNGLCOMPRESSEDTEXTURESUBIMAGE2DEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLCOMPRESSEDTEXTURESUBIMAGE2DEXTPROC) (GLuint texture, GLenum targ/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint texture,GLenum target,GLint level,GLint xoffset,GLint yoffset,GLsizei width,GLsizei height,GLenum format,GLsizei imageSize,const void * data)
PFNGLCOMPRESSEDTEXTURESUBIMAGE2DPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLCOMPRESSEDTEXTURESUBIMAGE2DPROC) (GLuint texture, GLint level, G/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint texture,GLint level,GLint xoffset,GLint yoffset,GLsizei width,GLsizei height,GLenum format,GLsizei imageSize,const void * data)
PFNGLCOMPRESSEDTEXTURESUBIMAGE3DEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLCOMPRESSEDTEXTURESUBIMAGE3DEXTPROC) (GLuint texture, GLenum targ/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint texture,GLenum target,GLint level,GLint xoffset,GLint yoffset,GLint zoffset,GLsizei width,GLsizei height,GLsizei depth,GLenum format,GLsizei imageSize,const void * data)
PFNGLCOMPRESSEDTEXTURESUBIMAGE3DPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLCOMPRESSEDTEXTURESUBIMAGE3DPROC) (GLuint texture, GLint level, G/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint texture,GLint level,GLint xoffset,GLint yoffset,GLint zoffset,GLsizei width,GLsizei height,GLsizei depth,GLenum format,GLsizei imageSize,const void * data)
PFNGLCONSERVATIVERASTERPARAMETERFNVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLCONSERVATIVERASTERPARAMETERFNVPROC) (GLenum pname, GLfloat value/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum pname,GLfloat value)
PFNGLCONSERVATIVERASTERPARAMETERINVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLCONSERVATIVERASTERPARAMETERINVPROC) (GLenum pname, GLint param);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum pname,GLint param)
PFNGLCONVOLUTIONFILTER1DEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLCONVOLUTIONFILTER1DEXTPROC) (GLenum target, GLenum internalforma/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLenum internalformat,GLsizei width,GLenum format,GLenum type,const void * image)
PFNGLCONVOLUTIONFILTER1DPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLCONVOLUTIONFILTER1DPROC) (GLenum target, GLenum internalformat, /;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLenum internalformat,GLsizei width,GLenum format,GLenum type,const void * image)
PFNGLCONVOLUTIONFILTER2DEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLCONVOLUTIONFILTER2DEXTPROC) (GLenum target, GLenum internalforma/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLenum internalformat,GLsizei width,GLsizei height,GLenum format,GLenum type,const void * image)
PFNGLCONVOLUTIONFILTER2DPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLCONVOLUTIONFILTER2DPROC) (GLenum target, GLenum internalformat, /;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLenum internalformat,GLsizei width,GLsizei height,GLenum format,GLenum type,const void * image)
PFNGLCONVOLUTIONPARAMETERFEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLCONVOLUTIONPARAMETERFEXTPROC) (GLenum target, GLenum pname, GLfl/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLenum pname,GLfloat param)
PFNGLCONVOLUTIONPARAMETERFPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLCONVOLUTIONPARAMETERFPROC) (GLenum target, GLenum pname, GLfloat/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLenum pname,GLfloat params)
PFNGLCONVOLUTIONPARAMETERFVEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLCONVOLUTIONPARAMETERFVEXTPROC) (GLenum target, GLenum pname, con/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLenum pname,const GLfloat * params)
PFNGLCONVOLUTIONPARAMETERFVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLCONVOLUTIONPARAMETERFVPROC) (GLenum target, GLenum pname, const /;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLenum pname,const GLfloat * params)
PFNGLCONVOLUTIONPARAMETERIEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLCONVOLUTIONPARAMETERIEXTPROC) (GLenum target, GLenum pname, GLin/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLenum pname,GLint param)
PFNGLCONVOLUTIONPARAMETERIPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLCONVOLUTIONPARAMETERIPROC) (GLenum target, GLenum pname, GLint p/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLenum pname,GLint params)
PFNGLCONVOLUTIONPARAMETERIVEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLCONVOLUTIONPARAMETERIVEXTPROC) (GLenum target, GLenum pname, con/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLenum pname,const GLint * params)
PFNGLCONVOLUTIONPARAMETERIVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLCONVOLUTIONPARAMETERIVPROC) (GLenum target, GLenum pname, const /;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLenum pname,const GLint * params)
PFNGLCOPYBUFFERSUBDATANVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLCOPYBUFFERSUBDATANVPROC) (GLenum readtarget, GLenum writetarget,/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum readtarget,GLenum writetarget,GLintptr readoffset,GLintptr writeoffset,GLsizeiptr size)
PFNGLCOPYBUFFERSUBDATAPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLCOPYBUFFERSUBDATAPROC) (GLenum readtarget, GLenum writetarget, G/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum readtarget,GLenum writetarget,GLintptr readoffset,GLintptr writeoffset,GLsizeiptr size)
PFNGLCOPYCOLORSUBTABLEEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLCOPYCOLORSUBTABLEEXTPROC) (GLenum target, GLsizei start, GLint x/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLsizei start,GLint x,GLint y,GLsizei width)
PFNGLCOPYCOLORSUBTABLEPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLCOPYCOLORSUBTABLEPROC) (GLenum target, GLsizei start, GLint x, G/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLsizei start,GLint x,GLint y,GLsizei width)
PFNGLCOPYCOLORTABLEPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLCOPYCOLORTABLEPROC) (GLenum target, GLenum internalformat, GLint/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLenum internalformat,GLint x,GLint y,GLsizei width)
PFNGLCOPYCOLORTABLESGIPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLCOPYCOLORTABLESGIPROC) (GLenum target, GLenum internalformat, GL/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLenum internalformat,GLint x,GLint y,GLsizei width)
PFNGLCOPYCONVOLUTIONFILTER1DEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLCOPYCONVOLUTIONFILTER1DEXTPROC) (GLenum target, GLenum internalf/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLenum internalformat,GLint x,GLint y,GLsizei width)
PFNGLCOPYCONVOLUTIONFILTER1DPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLCOPYCONVOLUTIONFILTER1DPROC) (GLenum target, GLenum internalform/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLenum internalformat,GLint x,GLint y,GLsizei width)
PFNGLCOPYCONVOLUTIONFILTER2DEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLCOPYCONVOLUTIONFILTER2DEXTPROC) (GLenum target, GLenum internalf/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLenum internalformat,GLint x,GLint y,GLsizei width,GLsizei height)
PFNGLCOPYCONVOLUTIONFILTER2DPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLCOPYCONVOLUTIONFILTER2DPROC) (GLenum target, GLenum internalform/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLenum internalformat,GLint x,GLint y,GLsizei width,GLsizei height)
PFNGLCOPYIMAGESUBDATAEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLCOPYIMAGESUBDATAEXTPROC) (GLuint srcName, GLenum srcTarget, GLin/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint srcName,GLenum srcTarget,GLint srcLevel,GLint srcX,GLint srcY,GLint srcZ,GLuint dstName,GLenum dstTarget,GLint dstLevel,GLint dstX,GLint dstY,GLint dstZ,GLsizei srcWidth,GLsizei srcHeight,GLsizei srcDepth)
PFNGLCOPYIMAGESUBDATANVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLCOPYIMAGESUBDATANVPROC) (GLuint srcName, GLenum srcTarget, GLint/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint srcName,GLenum srcTarget,GLint srcLevel,GLint srcX,GLint srcY,GLint srcZ,GLuint dstName,GLenum dstTarget,GLint dstLevel,GLint dstX,GLint dstY,GLint dstZ,GLsizei width,GLsizei height,GLsizei depth)
PFNGLCOPYIMAGESUBDATAOESPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLCOPYIMAGESUBDATAOESPROC) (GLuint srcName, GLenum srcTarget, GLin/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint srcName,GLenum srcTarget,GLint srcLevel,GLint srcX,GLint srcY,GLint srcZ,GLuint dstName,GLenum dstTarget,GLint dstLevel,GLint dstX,GLint dstY,GLint dstZ,GLsizei srcWidth,GLsizei srcHeight,GLsizei srcDepth)
PFNGLCOPYIMAGESUBDATAPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLCOPYIMAGESUBDATAPROC) (GLuint srcName, GLenum srcTarget, GLint s/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint srcName,GLenum srcTarget,GLint srcLevel,GLint srcX,GLint srcY,GLint srcZ,GLuint dstName,GLenum dstTarget,GLint dstLevel,GLint dstX,GLint dstY,GLint dstZ,GLsizei srcWidth,GLsizei srcHeight,GLsizei srcDepth)
PFNGLCOPYMULTITEXIMAGE1DEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLCOPYMULTITEXIMAGE1DEXTPROC) (GLenum texunit, GLenum target, GLin/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum texunit,GLenum target,GLint level,GLenum internalformat,GLint x,GLint y,GLsizei width,GLint border)
PFNGLCOPYMULTITEXIMAGE2DEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLCOPYMULTITEXIMAGE2DEXTPROC) (GLenum texunit, GLenum target, GLin/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum texunit,GLenum target,GLint level,GLenum internalformat,GLint x,GLint y,GLsizei width,GLsizei height,GLint border)
PFNGLCOPYMULTITEXSUBIMAGE1DEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLCOPYMULTITEXSUBIMAGE1DEXTPROC) (GLenum texunit, GLenum target, G/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum texunit,GLenum target,GLint level,GLint xoffset,GLint x,GLint y,GLsizei width)
PFNGLCOPYMULTITEXSUBIMAGE2DEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLCOPYMULTITEXSUBIMAGE2DEXTPROC) (GLenum texunit, GLenum target, G/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum texunit,GLenum target,GLint level,GLint xoffset,GLint yoffset,GLint x,GLint y,GLsizei width,GLsizei height)
PFNGLCOPYMULTITEXSUBIMAGE3DEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLCOPYMULTITEXSUBIMAGE3DEXTPROC) (GLenum texunit, GLenum target, G/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum texunit,GLenum target,GLint level,GLint xoffset,GLint yoffset,GLint zoffset,GLint x,GLint y,GLsizei width,GLsizei height)
PFNGLCOPYNAMEDBUFFERSUBDATAPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLCOPYNAMEDBUFFERSUBDATAPROC) (GLuint readBuffer, GLuint writeBuff/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint readBuffer,GLuint writeBuffer,GLintptr readOffset,GLintptr writeOffset,GLsizeiptr size)
PFNGLCOPYPATHNVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLCOPYPATHNVPROC) (GLuint resultPath, GLuint srcPath);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint resultPath,GLuint srcPath)
PFNGLCOPYTEXIMAGE1DEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLCOPYTEXIMAGE1DEXTPROC) (GLenum target, GLint level, GLenum inter/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLint level,GLenum internalformat,GLint x,GLint y,GLsizei width,GLint border)
PFNGLCOPYTEXIMAGE2DEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLCOPYTEXIMAGE2DEXTPROC) (GLenum target, GLint level, GLenum inter/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLint level,GLenum internalformat,GLint x,GLint y,GLsizei width,GLsizei height,GLint border)
PFNGLCOPYTEXSUBIMAGE1DEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLCOPYTEXSUBIMAGE1DEXTPROC) (GLenum target, GLint level, GLint xof/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLint level,GLint xoffset,GLint x,GLint y,GLsizei width)
PFNGLCOPYTEXSUBIMAGE2DEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLCOPYTEXSUBIMAGE2DEXTPROC) (GLenum target, GLint level, GLint xof/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLint level,GLint xoffset,GLint yoffset,GLint x,GLint y,GLsizei width,GLsizei height)
PFNGLCOPYTEXSUBIMAGE3DEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLCOPYTEXSUBIMAGE3DEXTPROC) (GLenum target, GLint level, GLint xof/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLint level,GLint xoffset,GLint yoffset,GLint zoffset,GLint x,GLint y,GLsizei width,GLsizei height)
PFNGLCOPYTEXSUBIMAGE3DNVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLCOPYTEXSUBIMAGE3DNVPROC) (GLenum target, GLint level, GLint xoff/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLint level,GLint xoffset,GLint yoffset,GLint zoffset,GLint x,GLint y,GLsizei width,GLsizei height)
PFNGLCOPYTEXSUBIMAGE3DOESPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLCOPYTEXSUBIMAGE3DOESPROC) (GLenum target, GLint level, GLint xof/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLint level,GLint xoffset,GLint yoffset,GLint zoffset,GLint x,GLint y,GLsizei width,GLsizei height)
PFNGLCOPYTEXSUBIMAGE3DPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLCOPYTEXSUBIMAGE3DPROC) (GLenum target, GLint level, GLint xoffse/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLint level,GLint xoffset,GLint yoffset,GLint zoffset,GLint x,GLint y,GLsizei width,GLsizei height)
PFNGLCOPYTEXTUREIMAGE1DEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLCOPYTEXTUREIMAGE1DEXTPROC) (GLuint texture, GLenum target, GLint/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint texture,GLenum target,GLint level,GLenum internalformat,GLint x,GLint y,GLsizei width,GLint border)
PFNGLCOPYTEXTUREIMAGE2DEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLCOPYTEXTUREIMAGE2DEXTPROC) (GLuint texture, GLenum target, GLint/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint texture,GLenum target,GLint level,GLenum internalformat,GLint x,GLint y,GLsizei width,GLsizei height,GLint border)
PFNGLCOPYTEXTURELEVELSAPPLEPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLCOPYTEXTURELEVELSAPPLEPROC) (GLuint destinationTexture, GLuint s/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint destinationTexture,GLuint sourceTexture,GLint sourceBaseLevel,GLsizei sourceLevelCount)
PFNGLCOPYTEXTURESUBIMAGE1DEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLCOPYTEXTURESUBIMAGE1DEXTPROC) (GLuint texture, GLenum target, GL/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint texture,GLenum target,GLint level,GLint xoffset,GLint x,GLint y,GLsizei width)
PFNGLCOPYTEXTURESUBIMAGE1DPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLCOPYTEXTURESUBIMAGE1DPROC) (GLuint texture, GLint level, GLint x/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint texture,GLint level,GLint xoffset,GLint x,GLint y,GLsizei width)
PFNGLCOPYTEXTURESUBIMAGE2DEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLCOPYTEXTURESUBIMAGE2DEXTPROC) (GLuint texture, GLenum target, GL/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint texture,GLenum target,GLint level,GLint xoffset,GLint yoffset,GLint x,GLint y,GLsizei width,GLsizei height)
PFNGLCOPYTEXTURESUBIMAGE2DPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLCOPYTEXTURESUBIMAGE2DPROC) (GLuint texture, GLint level, GLint x/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint texture,GLint level,GLint xoffset,GLint yoffset,GLint x,GLint y,GLsizei width,GLsizei height)
PFNGLCOPYTEXTURESUBIMAGE3DEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLCOPYTEXTURESUBIMAGE3DEXTPROC) (GLuint texture, GLenum target, GL/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint texture,GLenum target,GLint level,GLint xoffset,GLint yoffset,GLint zoffset,GLint x,GLint y,GLsizei width,GLsizei height)
PFNGLCOPYTEXTURESUBIMAGE3DPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLCOPYTEXTURESUBIMAGE3DPROC) (GLuint texture, GLint level, GLint x/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint texture,GLint level,GLint xoffset,GLint yoffset,GLint zoffset,GLint x,GLint y,GLsizei width,GLsizei height)
PFNGLCOVERAGEMODULATIONNVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLCOVERAGEMODULATIONNVPROC) (GLenum components);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum components)
PFNGLCOVERAGEMODULATIONTABLENVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLCOVERAGEMODULATIONTABLENVPROC) (GLsizei n, const GLfloat* v);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLsizei n,const GLfloat * v)
PFNGLCOVERFILLPATHINSTANCEDNVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLCOVERFILLPATHINSTANCEDNVPROC) (GLsizei numPaths, GLenum pathName/;"	t	typeref:typename:void (GLAPIENTRY *)(GLsizei numPaths,GLenum pathNameType,const void * paths,GLuint pathBase,GLenum coverMode,GLenum transformType,const GLfloat * transformValues)
PFNGLCOVERFILLPATHNVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLCOVERFILLPATHNVPROC) (GLuint path, GLenum coverMode);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint path,GLenum coverMode)
PFNGLCOVERSTROKEPATHINSTANCEDNVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLCOVERSTROKEPATHINSTANCEDNVPROC) (GLsizei numPaths, GLenum pathNa/;"	t	typeref:typename:void (GLAPIENTRY *)(GLsizei numPaths,GLenum pathNameType,const void * paths,GLuint pathBase,GLenum coverMode,GLenum transformType,const GLfloat * transformValues)
PFNGLCOVERSTROKEPATHNVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLCOVERSTROKEPATHNVPROC) (GLuint path, GLenum coverMode);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint path,GLenum coverMode)
PFNGLCREATEARRAYSETEXTPROC	./GL/glew.h	/^typedef const void * (GLAPIENTRY * PFNGLCREATEARRAYSETEXTPROC) (void);$/;"	t	typeref:typename:const void * (GLAPIENTRY *)(void)
PFNGLCREATEBUFFERSPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLCREATEBUFFERSPROC) (GLsizei n, GLuint* buffers);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLsizei n,GLuint * buffers)
PFNGLCREATECOMMANDLISTSNVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLCREATECOMMANDLISTSNVPROC) (GLsizei n, GLuint* lists);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLsizei n,GLuint * lists)
PFNGLCREATEFRAMEBUFFERSPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLCREATEFRAMEBUFFERSPROC) (GLsizei n, GLuint* framebuffers);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLsizei n,GLuint * framebuffers)
PFNGLCREATEMEMORYOBJECTSEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLCREATEMEMORYOBJECTSEXTPROC) (GLsizei n, GLuint* memoryObjects);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLsizei n,GLuint * memoryObjects)
PFNGLCREATEPERFQUERYINTELPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLCREATEPERFQUERYINTELPROC) (GLuint queryId, GLuint* queryHandle);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint queryId,GLuint * queryHandle)
PFNGLCREATEPROGRAMOBJECTARBPROC	./GL/glew.h	/^typedef GLhandleARB (GLAPIENTRY * PFNGLCREATEPROGRAMOBJECTARBPROC) (void);$/;"	t	typeref:typename:GLhandleARB (GLAPIENTRY *)(void)
PFNGLCREATEPROGRAMPIPELINESPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLCREATEPROGRAMPIPELINESPROC) (GLsizei n, GLuint* pipelines);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLsizei n,GLuint * pipelines)
PFNGLCREATEPROGRAMPROC	./GL/glew.h	/^typedef GLuint (GLAPIENTRY * PFNGLCREATEPROGRAMPROC) (void);$/;"	t	typeref:typename:GLuint (GLAPIENTRY *)(void)
PFNGLCREATEQUERIESPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLCREATEQUERIESPROC) (GLenum target, GLsizei n, GLuint* ids);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLsizei n,GLuint * ids)
PFNGLCREATERENDERBUFFERSPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLCREATERENDERBUFFERSPROC) (GLsizei n, GLuint* renderbuffers);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLsizei n,GLuint * renderbuffers)
PFNGLCREATESAMPLERSPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLCREATESAMPLERSPROC) (GLsizei n, GLuint* samplers);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLsizei n,GLuint * samplers)
PFNGLCREATESHADEROBJECTARBPROC	./GL/glew.h	/^typedef GLhandleARB (GLAPIENTRY * PFNGLCREATESHADEROBJECTARBPROC) (GLenum shaderType);$/;"	t	typeref:typename:GLhandleARB (GLAPIENTRY *)(GLenum shaderType)
PFNGLCREATESHADERPROC	./GL/glew.h	/^typedef GLuint (GLAPIENTRY * PFNGLCREATESHADERPROC) (GLenum type);$/;"	t	typeref:typename:GLuint (GLAPIENTRY *)(GLenum type)
PFNGLCREATESHADERPROGRAMEXTPROC	./GL/glew.h	/^typedef GLuint (GLAPIENTRY * PFNGLCREATESHADERPROGRAMEXTPROC) (GLenum type, const GLchar* string/;"	t	typeref:typename:GLuint (GLAPIENTRY *)(GLenum type,const GLchar * string)
PFNGLCREATESHADERPROGRAMVPROC	./GL/glew.h	/^typedef GLuint (GLAPIENTRY * PFNGLCREATESHADERPROGRAMVPROC) (GLenum type, GLsizei count, const G/;"	t	typeref:typename:GLuint (GLAPIENTRY *)(GLenum type,GLsizei count,const GLchar * const * strings)
PFNGLCREATESTATESNVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLCREATESTATESNVPROC) (GLsizei n, GLuint* states);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLsizei n,GLuint * states)
PFNGLCREATESYNCFROMCLEVENTARBPROC	./GL/glew.h	/^typedef GLsync (GLAPIENTRY * PFNGLCREATESYNCFROMCLEVENTARBPROC) (cl_context context, cl_event ev/;"	t	typeref:typename:GLsync (GLAPIENTRY *)(cl_context context,cl_event event,GLbitfield flags)
PFNGLCREATETEXTURESPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLCREATETEXTURESPROC) (GLenum target, GLsizei n, GLuint* textures)/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLsizei n,GLuint * textures)
PFNGLCREATETRANSFORMFEEDBACKSPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLCREATETRANSFORMFEEDBACKSPROC) (GLsizei n, GLuint* ids);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLsizei n,GLuint * ids)
PFNGLCREATEVERTEXARRAYSPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLCREATEVERTEXARRAYSPROC) (GLsizei n, GLuint* arrays);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLsizei n,GLuint * arrays)
PFNGLCULLPARAMETERDVEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLCULLPARAMETERDVEXTPROC) (GLenum pname, GLdouble* params);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum pname,GLdouble * params)
PFNGLCULLPARAMETERFVEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLCULLPARAMETERFVEXTPROC) (GLenum pname, GLfloat* params);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum pname,GLfloat * params)
PFNGLCURRENTPALETTEMATRIXARBPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLCURRENTPALETTEMATRIXARBPROC) (GLint index);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLint index)
PFNGLCURRENTPALETTEMATRIXOESPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLCURRENTPALETTEMATRIXOESPROC) (GLuint index);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index)
PFNGLDATAPIPEPROC	./GL/glew.h	/^typedef GLint (GLAPIENTRY * PFNGLDATAPIPEPROC) (GLenum space);$/;"	t	typeref:typename:GLint (GLAPIENTRY *)(GLenum space)
PFNGLDEBUGMESSAGECALLBACKAMDPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLDEBUGMESSAGECALLBACKAMDPROC) (GLDEBUGPROCAMD callback, void *use/;"	t	typeref:typename:void (GLAPIENTRY *)(GLDEBUGPROCAMD callback,void * userParam)
PFNGLDEBUGMESSAGECALLBACKARBPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLDEBUGMESSAGECALLBACKARBPROC) (GLDEBUGPROCARB callback, const voi/;"	t	typeref:typename:void (GLAPIENTRY *)(GLDEBUGPROCARB callback,const void * userParam)
PFNGLDEBUGMESSAGECALLBACKPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLDEBUGMESSAGECALLBACKPROC) (GLDEBUGPROC callback, const void *use/;"	t	typeref:typename:void (GLAPIENTRY *)(GLDEBUGPROC callback,const void * userParam)
PFNGLDEBUGMESSAGECONTROLARBPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLDEBUGMESSAGECONTROLARBPROC) (GLenum source, GLenum type, GLenum /;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum source,GLenum type,GLenum severity,GLsizei count,const GLuint * ids,GLboolean enabled)
PFNGLDEBUGMESSAGECONTROLPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLDEBUGMESSAGECONTROLPROC) (GLenum source, GLenum type, GLenum sev/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum source,GLenum type,GLenum severity,GLsizei count,const GLuint * ids,GLboolean enabled)
PFNGLDEBUGMESSAGEENABLEAMDPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLDEBUGMESSAGEENABLEAMDPROC) (GLenum category, GLenum severity, GL/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum category,GLenum severity,GLsizei count,const GLuint * ids,GLboolean enabled)
PFNGLDEBUGMESSAGEINSERTAMDPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLDEBUGMESSAGEINSERTAMDPROC) (GLenum category, GLenum severity, GL/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum category,GLenum severity,GLuint id,GLsizei length,const GLchar * buf)
PFNGLDEBUGMESSAGEINSERTARBPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLDEBUGMESSAGEINSERTARBPROC) (GLenum source, GLenum type, GLuint i/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum source,GLenum type,GLuint id,GLenum severity,GLsizei length,const GLchar * buf)
PFNGLDEBUGMESSAGEINSERTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLDEBUGMESSAGEINSERTPROC) (GLenum source, GLenum type, GLuint id, /;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum source,GLenum type,GLuint id,GLenum severity,GLsizei length,const GLchar * buf)
PFNGLDEFORMSGIXPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLDEFORMSGIXPROC) (GLbitfield mask);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLbitfield mask)
PFNGLDELETEARRAYSETSEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLDELETEARRAYSETSEXTPROC) (GLsizei n, const void *arrayset[]);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLsizei n,const void * arrayset[])
PFNGLDELETEASYNCMARKERSSGIXPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLDELETEASYNCMARKERSSGIXPROC) (GLuint marker, GLsizei range);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint marker,GLsizei range)
PFNGLDELETEBUFFERREGIONPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLDELETEBUFFERREGIONPROC) (GLenum region);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum region)
PFNGLDELETEBUFFERSARBPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLDELETEBUFFERSARBPROC) (GLsizei n, const GLuint* buffers);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLsizei n,const GLuint * buffers)
PFNGLDELETEBUFFERSPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLDELETEBUFFERSPROC) (GLsizei n, const GLuint* buffers);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLsizei n,const GLuint * buffers)
PFNGLDELETECOMMANDLISTSNVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLDELETECOMMANDLISTSNVPROC) (GLsizei n, const GLuint* lists);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLsizei n,const GLuint * lists)
PFNGLDELETEFENCESAPPLEPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLDELETEFENCESAPPLEPROC) (GLsizei n, const GLuint* fences);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLsizei n,const GLuint * fences)
PFNGLDELETEFENCESNVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLDELETEFENCESNVPROC) (GLsizei n, const GLuint* fences);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLsizei n,const GLuint * fences)
PFNGLDELETEFRAGMENTSHADERATIPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLDELETEFRAGMENTSHADERATIPROC) (GLuint id);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint id)
PFNGLDELETEFRAMEBUFFERSEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLDELETEFRAMEBUFFERSEXTPROC) (GLsizei n, const GLuint* framebuffer/;"	t	typeref:typename:void (GLAPIENTRY *)(GLsizei n,const GLuint * framebuffers)
PFNGLDELETEFRAMEBUFFERSOESPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLDELETEFRAMEBUFFERSOESPROC) (GLsizei n, const GLuint* framebuffer/;"	t	typeref:typename:void (GLAPIENTRY *)(GLsizei n,const GLuint * framebuffers)
PFNGLDELETEFRAMEBUFFERSPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLDELETEFRAMEBUFFERSPROC) (GLsizei n, const GLuint* framebuffers);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLsizei n,const GLuint * framebuffers)
PFNGLDELETEMEMORYOBJECTSEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLDELETEMEMORYOBJECTSEXTPROC) (GLsizei n, const GLuint* memoryObje/;"	t	typeref:typename:void (GLAPIENTRY *)(GLsizei n,const GLuint * memoryObjects)
PFNGLDELETEMPEGPREDICTORSSGIXPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLDELETEMPEGPREDICTORSSGIXPROC) (GLsizei n, GLuint* predictors);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLsizei n,GLuint * predictors)
PFNGLDELETENAMEDSTRINGARBPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLDELETENAMEDSTRINGARBPROC) (GLint namelen, const GLchar* name);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLint namelen,const GLchar * name)
PFNGLDELETENAMESAMDPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLDELETENAMESAMDPROC) (GLenum identifier, GLuint num, const GLuint/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum identifier,GLuint num,const GLuint * names)
PFNGLDELETEOBJECTARBPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLDELETEOBJECTARBPROC) (GLhandleARB obj);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLhandleARB obj)
PFNGLDELETEOCCLUSIONQUERIESNVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLDELETEOCCLUSIONQUERIESNVPROC) (GLsizei n, const GLuint* ids);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLsizei n,const GLuint * ids)
PFNGLDELETEPATHSNVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLDELETEPATHSNVPROC) (GLuint path, GLsizei range);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint path,GLsizei range)
PFNGLDELETEPERFMONITORSAMDPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLDELETEPERFMONITORSAMDPROC) (GLsizei n, GLuint* monitors);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLsizei n,GLuint * monitors)
PFNGLDELETEPERFQUERYINTELPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLDELETEPERFQUERYINTELPROC) (GLuint queryHandle);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint queryHandle)
PFNGLDELETEPROGRAMPIPELINESPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLDELETEPROGRAMPIPELINESPROC) (GLsizei n, const GLuint* pipelines)/;"	t	typeref:typename:void (GLAPIENTRY *)(GLsizei n,const GLuint * pipelines)
PFNGLDELETEPROGRAMPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLDELETEPROGRAMPROC) (GLuint program);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint program)
PFNGLDELETEPROGRAMSARBPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLDELETEPROGRAMSARBPROC) (GLsizei n, const GLuint* programs);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLsizei n,const GLuint * programs)
PFNGLDELETEPROGRAMSNVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLDELETEPROGRAMSNVPROC) (GLsizei n, const GLuint* ids);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLsizei n,const GLuint * ids)
PFNGLDELETEQUERIESANGLEPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLDELETEQUERIESANGLEPROC) (GLsizei n, const GLuint* ids);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLsizei n,const GLuint * ids)
PFNGLDELETEQUERIESARBPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLDELETEQUERIESARBPROC) (GLsizei n, const GLuint* ids);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLsizei n,const GLuint * ids)
PFNGLDELETEQUERIESEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLDELETEQUERIESEXTPROC) (GLsizei n, const GLuint* ids);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLsizei n,const GLuint * ids)
PFNGLDELETEQUERIESPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLDELETEQUERIESPROC) (GLsizei n, const GLuint* ids);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLsizei n,const GLuint * ids)
PFNGLDELETERENDERBUFFERSEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLDELETERENDERBUFFERSEXTPROC) (GLsizei n, const GLuint* renderbuff/;"	t	typeref:typename:void (GLAPIENTRY *)(GLsizei n,const GLuint * renderbuffers)
PFNGLDELETERENDERBUFFERSOESPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLDELETERENDERBUFFERSOESPROC) (GLsizei n, const GLuint* renderbuff/;"	t	typeref:typename:void (GLAPIENTRY *)(GLsizei n,const GLuint * renderbuffers)
PFNGLDELETERENDERBUFFERSPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLDELETERENDERBUFFERSPROC) (GLsizei n, const GLuint* renderbuffers/;"	t	typeref:typename:void (GLAPIENTRY *)(GLsizei n,const GLuint * renderbuffers)
PFNGLDELETESAMPLERSPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLDELETESAMPLERSPROC) (GLsizei count, const GLuint * samplers);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLsizei count,const GLuint * samplers)
PFNGLDELETESEMAPHORESEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLDELETESEMAPHORESEXTPROC) (GLsizei n, const GLuint* semaphores);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLsizei n,const GLuint * semaphores)
PFNGLDELETESHADERPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLDELETESHADERPROC) (GLuint shader);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint shader)
PFNGLDELETESTATESNVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLDELETESTATESNVPROC) (GLsizei n, const GLuint* states);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLsizei n,const GLuint * states)
PFNGLDELETESYNCAPPLEPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLDELETESYNCAPPLEPROC) (GLsync GLsync);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLsync GLsync)
PFNGLDELETESYNCPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLDELETESYNCPROC) (GLsync GLsync);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLsync GLsync)
PFNGLDELETETEXTURESEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLDELETETEXTURESEXTPROC) (GLsizei n, const GLuint* textures);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLsizei n,const GLuint * textures)
PFNGLDELETETRANSFORMFEEDBACKSNVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLDELETETRANSFORMFEEDBACKSNVPROC) (GLsizei n, const GLuint* ids);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLsizei n,const GLuint * ids)
PFNGLDELETETRANSFORMFEEDBACKSPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLDELETETRANSFORMFEEDBACKSPROC) (GLsizei n, const GLuint* ids);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLsizei n,const GLuint * ids)
PFNGLDELETEVERTEXARRAYSAPPLEPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLDELETEVERTEXARRAYSAPPLEPROC) (GLsizei n, const GLuint* arrays);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLsizei n,const GLuint * arrays)
PFNGLDELETEVERTEXARRAYSOESPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLDELETEVERTEXARRAYSOESPROC) (GLsizei n, const GLuint* arrays);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLsizei n,const GLuint * arrays)
PFNGLDELETEVERTEXARRAYSPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLDELETEVERTEXARRAYSPROC) (GLsizei n, const GLuint* arrays);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLsizei n,const GLuint * arrays)
PFNGLDELETEVERTEXARRAYSSGIXPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLDELETEVERTEXARRAYSSGIXPROC) (GLsizei n, const GLuint* arrays);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLsizei n,const GLuint * arrays)
PFNGLDELETEVERTEXSHADEREXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLDELETEVERTEXSHADEREXTPROC) (GLuint id);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint id)
PFNGLDEPTHBOUNDSDNVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLDEPTHBOUNDSDNVPROC) (GLdouble zmin, GLdouble zmax);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLdouble zmin,GLdouble zmax)
PFNGLDEPTHBOUNDSEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLDEPTHBOUNDSEXTPROC) (GLclampd zmin, GLclampd zmax);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLclampd zmin,GLclampd zmax)
PFNGLDEPTHRANGEARRAYFVNVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLDEPTHRANGEARRAYFVNVPROC) (GLuint first, GLsizei count, const GLf/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint first,GLsizei count,const GLfloat * v)
PFNGLDEPTHRANGEARRAYVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLDEPTHRANGEARRAYVPROC) (GLuint first, GLsizei count, const GLclam/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint first,GLsizei count,const GLclampd * v)
PFNGLDEPTHRANGEDNVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLDEPTHRANGEDNVPROC) (GLdouble zNear, GLdouble zFar);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLdouble zNear,GLdouble zFar)
PFNGLDEPTHRANGEFOESPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLDEPTHRANGEFOESPROC) (GLclampf n, GLclampf f);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLclampf n,GLclampf f)
PFNGLDEPTHRANGEFPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLDEPTHRANGEFPROC) (GLclampf n, GLclampf f);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLclampf n,GLclampf f)
PFNGLDEPTHRANGEINDEXEDFNVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLDEPTHRANGEINDEXEDFNVPROC) (GLuint index, GLfloat n, GLfloat f);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,GLfloat n,GLfloat f)
PFNGLDEPTHRANGEINDEXEDPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLDEPTHRANGEINDEXEDPROC) (GLuint index, GLclampd n, GLclampd f);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,GLclampd n,GLclampd f)
PFNGLDEPTHRANGEXPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLDEPTHRANGEXPROC) (GLclampx zNear, GLclampx zFar);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLclampx zNear,GLclampx zFar)
PFNGLDETACHOBJECTARBPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLDETACHOBJECTARBPROC) (GLhandleARB containerObj, GLhandleARB atta/;"	t	typeref:typename:void (GLAPIENTRY *)(GLhandleARB containerObj,GLhandleARB attachedObj)
PFNGLDETACHSHADERPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLDETACHSHADERPROC) (GLuint program, GLuint shader);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint program,GLuint shader)
PFNGLDETAILTEXFUNCSGISPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLDETAILTEXFUNCSGISPROC) (GLenum target, GLsizei n, const GLfloat*/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLsizei n,const GLfloat * points)
PFNGLDISABLECLIENTSTATEIEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLDISABLECLIENTSTATEIEXTPROC) (GLenum array, GLuint index);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum array,GLuint index)
PFNGLDISABLECLIENTSTATEINDEXEDEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLDISABLECLIENTSTATEINDEXEDEXTPROC) (GLenum array, GLuint index);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum array,GLuint index)
PFNGLDISABLEDRIVERCONTROLQCOMPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLDISABLEDRIVERCONTROLQCOMPROC) (GLuint driverControl);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint driverControl)
PFNGLDISABLEIEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLDISABLEIEXTPROC) (GLenum target, GLuint index);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLuint index)
PFNGLDISABLEINDEXEDEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLDISABLEINDEXEDEXTPROC) (GLenum target, GLuint index);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLuint index)
PFNGLDISABLEINVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLDISABLEINVPROC) (GLenum target, GLuint index);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLuint index)
PFNGLDISABLEIOESPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLDISABLEIOESPROC) (GLenum target, GLuint index);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLuint index)
PFNGLDISABLEIPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLDISABLEIPROC) (GLenum cap, GLuint index);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum cap,GLuint index)
PFNGLDISABLEVARIANTCLIENTSTATEEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLDISABLEVARIANTCLIENTSTATEEXTPROC) (GLuint id);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint id)
PFNGLDISABLEVERTEXARRAYATTRIBEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLDISABLEVERTEXARRAYATTRIBEXTPROC) (GLuint vaobj, GLuint index);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint vaobj,GLuint index)
PFNGLDISABLEVERTEXARRAYATTRIBPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLDISABLEVERTEXARRAYATTRIBPROC) (GLuint vaobj, GLuint index);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint vaobj,GLuint index)
PFNGLDISABLEVERTEXARRAYEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLDISABLEVERTEXARRAYEXTPROC) (GLuint vaobj, GLenum array);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint vaobj,GLenum array)
PFNGLDISABLEVERTEXATTRIBAPPLEPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLDISABLEVERTEXATTRIBAPPLEPROC) (GLuint index, GLenum pname);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,GLenum pname)
PFNGLDISABLEVERTEXATTRIBARRAYARBPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLDISABLEVERTEXATTRIBARRAYARBPROC) (GLuint index);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index)
PFNGLDISABLEVERTEXATTRIBARRAYPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLDISABLEVERTEXATTRIBARRAYPROC) (GLuint index);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index)
PFNGLDISCARDFRAMEBUFFEREXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLDISCARDFRAMEBUFFEREXTPROC) (GLenum target, GLsizei numAttachment/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLsizei numAttachments,const GLenum * attachments)
PFNGLDISPATCHCOMPUTEGROUPSIZEARBPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLDISPATCHCOMPUTEGROUPSIZEARBPROC) (GLuint num_groups_x, GLuint nu/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint num_groups_x,GLuint num_groups_y,GLuint num_groups_z,GLuint group_size_x,GLuint group_size_y,GLuint group_size_z)
PFNGLDISPATCHCOMPUTEINDIRECTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLDISPATCHCOMPUTEINDIRECTPROC) (GLintptr indirect);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLintptr indirect)
PFNGLDISPATCHCOMPUTEPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLDISPATCHCOMPUTEPROC) (GLuint num_groups_x, GLuint num_groups_y, /;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint num_groups_x,GLuint num_groups_y,GLuint num_groups_z)
PFNGLDRAWARRAYSEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLDRAWARRAYSEXTPROC) (GLenum mode, GLint first, GLsizei count);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum mode,GLint first,GLsizei count)
PFNGLDRAWARRAYSINDIRECTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLDRAWARRAYSINDIRECTPROC) (GLenum mode, const void *indirect);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum mode,const void * indirect)
PFNGLDRAWARRAYSINSTANCEDANGLEPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLDRAWARRAYSINSTANCEDANGLEPROC) (GLenum mode, GLint first, GLsizei/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum mode,GLint first,GLsizei count,GLsizei primcount)
PFNGLDRAWARRAYSINSTANCEDARBPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLDRAWARRAYSINSTANCEDARBPROC) (GLenum mode, GLint first, GLsizei c/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum mode,GLint first,GLsizei count,GLsizei primcount)
PFNGLDRAWARRAYSINSTANCEDBASEINSTANCEEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLDRAWARRAYSINSTANCEDBASEINSTANCEEXTPROC) (GLenum mode, GLint firs/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum mode,GLint first,GLsizei count,GLsizei instancecount,GLuint baseinstance)
PFNGLDRAWARRAYSINSTANCEDBASEINSTANCEPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLDRAWARRAYSINSTANCEDBASEINSTANCEPROC) (GLenum mode, GLint first, /;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum mode,GLint first,GLsizei count,GLsizei primcount,GLuint baseinstance)
PFNGLDRAWARRAYSINSTANCEDEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLDRAWARRAYSINSTANCEDEXTPROC) (GLenum mode, GLint start, GLsizei c/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum mode,GLint start,GLsizei count,GLsizei primcount)
PFNGLDRAWARRAYSINSTANCEDNVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLDRAWARRAYSINSTANCEDNVPROC) (GLenum mode, GLint first, GLsizei co/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum mode,GLint first,GLsizei count,GLsizei primcount)
PFNGLDRAWARRAYSINSTANCEDPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLDRAWARRAYSINSTANCEDPROC) (GLenum mode, GLint first, GLsizei coun/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum mode,GLint first,GLsizei count,GLsizei primcount)
PFNGLDRAWBUFFERREGIONPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLDRAWBUFFERREGIONPROC) (GLuint region, GLint x, GLint y, GLsizei /;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint region,GLint x,GLint y,GLsizei width,GLsizei height,GLint xDest,GLint yDest)
PFNGLDRAWBUFFERSARBPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLDRAWBUFFERSARBPROC) (GLsizei n, const GLenum* bufs);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLsizei n,const GLenum * bufs)
PFNGLDRAWBUFFERSATIPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLDRAWBUFFERSATIPROC) (GLsizei n, const GLenum* bufs);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLsizei n,const GLenum * bufs)
PFNGLDRAWBUFFERSEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLDRAWBUFFERSEXTPROC) (GLsizei n, const GLenum* bufs);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLsizei n,const GLenum * bufs)
PFNGLDRAWBUFFERSINDEXEDEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLDRAWBUFFERSINDEXEDEXTPROC) (GLint n, const GLenum* location, con/;"	t	typeref:typename:void (GLAPIENTRY *)(GLint n,const GLenum * location,const GLint * indices)
PFNGLDRAWBUFFERSNVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLDRAWBUFFERSNVPROC) (GLsizei n, const GLenum* bufs);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLsizei n,const GLenum * bufs)
PFNGLDRAWBUFFERSPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLDRAWBUFFERSPROC) (GLsizei n, const GLenum* bufs);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLsizei n,const GLenum * bufs)
PFNGLDRAWCOMMANDSADDRESSNVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLDRAWCOMMANDSADDRESSNVPROC) (GLenum primitiveMode, const GLuint64/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum primitiveMode,const GLuint64 * indirects,const GLsizei * sizes,GLuint count)
PFNGLDRAWCOMMANDSNVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLDRAWCOMMANDSNVPROC) (GLenum primitiveMode, GLuint buffer, const /;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum primitiveMode,GLuint buffer,const GLintptr * indirects,const GLsizei * sizes,GLuint count)
PFNGLDRAWCOMMANDSSTATESADDRESSNVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLDRAWCOMMANDSSTATESADDRESSNVPROC) (const GLuint64* indirects, con/;"	t	typeref:typename:void (GLAPIENTRY *)(const GLuint64 * indirects,const GLsizei * sizes,const GLuint * states,const GLuint * fbos,GLuint count)
PFNGLDRAWCOMMANDSSTATESNVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLDRAWCOMMANDSSTATESNVPROC) (GLuint buffer, const GLintptr* indire/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint buffer,const GLintptr * indirects,const GLsizei * sizes,const GLuint * states,const GLuint * fbos,GLuint count)
PFNGLDRAWELEMENTARRAYAPPLEPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLDRAWELEMENTARRAYAPPLEPROC) (GLenum mode, GLint first, GLsizei co/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum mode,GLint first,GLsizei count)
PFNGLDRAWELEMENTARRAYATIPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLDRAWELEMENTARRAYATIPROC) (GLenum mode, GLsizei count);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum mode,GLsizei count)
PFNGLDRAWELEMENTSBASEVERTEXEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLDRAWELEMENTSBASEVERTEXEXTPROC) (GLenum mode, GLsizei count, GLen/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum mode,GLsizei count,GLenum type,const void * indices,GLint basevertex)
PFNGLDRAWELEMENTSBASEVERTEXPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLDRAWELEMENTSBASEVERTEXPROC) (GLenum mode, GLsizei count, GLenum /;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum mode,GLsizei count,GLenum type,const void * indices,GLint basevertex)
PFNGLDRAWELEMENTSINDIRECTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLDRAWELEMENTSINDIRECTPROC) (GLenum mode, GLenum type, const void /;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum mode,GLenum type,const void * indirect)
PFNGLDRAWELEMENTSINSTANCEDANGLEPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLDRAWELEMENTSINSTANCEDANGLEPROC) (GLenum mode, GLsizei count, GLe/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum mode,GLsizei count,GLenum type,const void * indices,GLsizei primcount)
PFNGLDRAWELEMENTSINSTANCEDARBPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLDRAWELEMENTSINSTANCEDARBPROC) (GLenum mode, GLsizei count, GLenu/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum mode,GLsizei count,GLenum type,const void * indices,GLsizei primcount)
PFNGLDRAWELEMENTSINSTANCEDBASEINSTANCEEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLDRAWELEMENTSINSTANCEDBASEINSTANCEEXTPROC) (GLenum mode, GLsizei /;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum mode,GLsizei count,GLenum type,const void * indices,GLsizei instancecount,GLuint baseinstance)
PFNGLDRAWELEMENTSINSTANCEDBASEINSTANCEPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLDRAWELEMENTSINSTANCEDBASEINSTANCEPROC) (GLenum mode, GLsizei cou/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum mode,GLsizei count,GLenum type,const void * indices,GLsizei primcount,GLuint baseinstance)
PFNGLDRAWELEMENTSINSTANCEDBASEVERTEXBASEINSTANCEEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLDRAWELEMENTSINSTANCEDBASEVERTEXBASEINSTANCEEXTPROC) (GLenum mode/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum mode,GLsizei count,GLenum type,const void * indices,GLsizei instancecount,GLint basevertex,GLuint baseinstance)
PFNGLDRAWELEMENTSINSTANCEDBASEVERTEXBASEINSTANCEPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLDRAWELEMENTSINSTANCEDBASEVERTEXBASEINSTANCEPROC) (GLenum mode, G/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum mode,GLsizei count,GLenum type,const void * indices,GLsizei primcount,GLint basevertex,GLuint baseinstance)
PFNGLDRAWELEMENTSINSTANCEDBASEVERTEXEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLDRAWELEMENTSINSTANCEDBASEVERTEXEXTPROC) (GLenum mode, GLsizei co/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum mode,GLsizei count,GLenum type,const void * indices,GLsizei instancecount,GLint basevertex)
PFNGLDRAWELEMENTSINSTANCEDBASEVERTEXPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLDRAWELEMENTSINSTANCEDBASEVERTEXPROC) (GLenum mode, GLsizei count/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum mode,GLsizei count,GLenum type,const void * indices,GLsizei instancecount,GLint basevertex)
PFNGLDRAWELEMENTSINSTANCEDEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLDRAWELEMENTSINSTANCEDEXTPROC) (GLenum mode, GLsizei count, GLenu/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum mode,GLsizei count,GLenum type,const void * indices,GLsizei primcount)
PFNGLDRAWELEMENTSINSTANCEDNVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLDRAWELEMENTSINSTANCEDNVPROC) (GLenum mode, GLsizei count, GLenum/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum mode,GLsizei count,GLenum type,const void * indices,GLsizei primcount)
PFNGLDRAWELEMENTSINSTANCEDPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLDRAWELEMENTSINSTANCEDPROC) (GLenum mode, GLsizei count, GLenum t/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum mode,GLsizei count,GLenum type,const void * indices,GLsizei primcount)
PFNGLDRAWMESHTASKSINDIRECTNVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLDRAWMESHTASKSINDIRECTNVPROC) (GLintptr indirect);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLintptr indirect)
PFNGLDRAWMESHTASKSNVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLDRAWMESHTASKSNVPROC) (GLuint first, GLuint count);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint first,GLuint count)
PFNGLDRAWRANGEELEMENTARRAYAPPLEPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLDRAWRANGEELEMENTARRAYAPPLEPROC) (GLenum mode, GLuint start, GLui/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum mode,GLuint start,GLuint end,GLint first,GLsizei count)
PFNGLDRAWRANGEELEMENTARRAYATIPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLDRAWRANGEELEMENTARRAYATIPROC) (GLenum mode, GLuint start, GLuint/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum mode,GLuint start,GLuint end,GLsizei count)
PFNGLDRAWRANGEELEMENTSBASEVERTEXEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLDRAWRANGEELEMENTSBASEVERTEXEXTPROC) (GLenum mode, GLuint start, /;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum mode,GLuint start,GLuint end,GLsizei count,GLenum type,const void * indices,GLint basevertex)
PFNGLDRAWRANGEELEMENTSBASEVERTEXPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLDRAWRANGEELEMENTSBASEVERTEXPROC) (GLenum mode, GLuint start, GLu/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum mode,GLuint start,GLuint end,GLsizei count,GLenum type,const void * indices,GLint basevertex)
PFNGLDRAWRANGEELEMENTSEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLDRAWRANGEELEMENTSEXTPROC) (GLenum mode, GLuint start, GLuint end/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum mode,GLuint start,GLuint end,GLsizei count,GLenum type,const void * indices)
PFNGLDRAWRANGEELEMENTSPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLDRAWRANGEELEMENTSPROC) (GLenum mode, GLuint start, GLuint end, G/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum mode,GLuint start,GLuint end,GLsizei count,GLenum type,const void * indices)
PFNGLDRAWTEXTURENVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLDRAWTEXTURENVPROC) (GLuint texture, GLuint sampler, GLfloat x0, /;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint texture,GLuint sampler,GLfloat x0,GLfloat y0,GLfloat x1,GLfloat y1,GLfloat z,GLfloat s0,GLfloat t0,GLfloat s1,GLfloat t1)
PFNGLDRAWTRANSFORMFEEDBACKEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLDRAWTRANSFORMFEEDBACKEXTPROC) (GLenum mode, GLuint id);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum mode,GLuint id)
PFNGLDRAWTRANSFORMFEEDBACKINSTANCEDEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLDRAWTRANSFORMFEEDBACKINSTANCEDEXTPROC) (GLenum mode, GLuint id, /;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum mode,GLuint id,GLsizei instancecount)
PFNGLDRAWTRANSFORMFEEDBACKINSTANCEDPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLDRAWTRANSFORMFEEDBACKINSTANCEDPROC) (GLenum mode, GLuint id, GLs/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum mode,GLuint id,GLsizei primcount)
PFNGLDRAWTRANSFORMFEEDBACKNVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLDRAWTRANSFORMFEEDBACKNVPROC) (GLenum mode, GLuint id);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum mode,GLuint id)
PFNGLDRAWTRANSFORMFEEDBACKPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLDRAWTRANSFORMFEEDBACKPROC) (GLenum mode, GLuint id);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum mode,GLuint id)
PFNGLDRAWTRANSFORMFEEDBACKSTREAMINSTANCEDPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLDRAWTRANSFORMFEEDBACKSTREAMINSTANCEDPROC) (GLenum mode, GLuint i/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum mode,GLuint id,GLuint stream,GLsizei primcount)
PFNGLDRAWTRANSFORMFEEDBACKSTREAMPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLDRAWTRANSFORMFEEDBACKSTREAMPROC) (GLenum mode, GLuint id, GLuint/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum mode,GLuint id,GLuint stream)
PFNGLDRAWVKIMAGENVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLDRAWVKIMAGENVPROC) (GLuint64 vkImage, GLuint sampler, GLfloat x0/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint64 vkImage,GLuint sampler,GLfloat x0,GLfloat y0,GLfloat x1,GLfloat y1,GLfloat z,GLfloat s0,GLfloat t0,GLfloat s1,GLfloat t1)
PFNGLEDGEFLAGFORMATNVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLEDGEFLAGFORMATNVPROC) (GLsizei stride);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLsizei stride)
PFNGLEDGEFLAGPOINTEREXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLEDGEFLAGPOINTEREXTPROC) (GLsizei stride, GLsizei count, const GL/;"	t	typeref:typename:void (GLAPIENTRY *)(GLsizei stride,GLsizei count,const GLboolean * pointer)
PFNGLEDGEFLAGPOINTERLISTIBMPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLEDGEFLAGPOINTERLISTIBMPROC) (GLint stride, const GLboolean ** po/;"	t	typeref:typename:void (GLAPIENTRY *)(GLint stride,const GLboolean ** pointer,GLint ptrstride)
PFNGLEGLIMAGETARGETRENDERBUFFERSTORAGEOESPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLEGLIMAGETARGETRENDERBUFFERSTORAGEOESPROC) (GLenum target, GLeglI/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLeglImageOES image)
PFNGLEGLIMAGETARGETTEXSTORAGEEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLEGLIMAGETARGETTEXSTORAGEEXTPROC) (GLenum target, GLeglImageOES i/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLeglImageOES image,const GLint * attrib_list)
PFNGLEGLIMAGETARGETTEXTURE2DOESPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLEGLIMAGETARGETTEXTURE2DOESPROC) (GLenum target, GLeglImageOES im/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLeglImageOES image)
PFNGLEGLIMAGETARGETTEXTURESTORAGEEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLEGLIMAGETARGETTEXTURESTORAGEEXTPROC) (GLuint texture, GLeglImage/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint texture,GLeglImageOES image,const GLint * attrib_list)
PFNGLELEMENTPOINTERAPPLEPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLELEMENTPOINTERAPPLEPROC) (GLenum type, const void *pointer);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum type,const void * pointer)
PFNGLELEMENTPOINTERATIPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLELEMENTPOINTERATIPROC) (GLenum type, const void *pointer);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum type,const void * pointer)
PFNGLENABLECLIENTSTATEIEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLENABLECLIENTSTATEIEXTPROC) (GLenum array, GLuint index);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum array,GLuint index)
PFNGLENABLECLIENTSTATEINDEXEDEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLENABLECLIENTSTATEINDEXEDEXTPROC) (GLenum array, GLuint index);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum array,GLuint index)
PFNGLENABLEDRIVERCONTROLQCOMPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLENABLEDRIVERCONTROLQCOMPROC) (GLuint driverControl);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint driverControl)
PFNGLENABLEIEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLENABLEIEXTPROC) (GLenum target, GLuint index);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLuint index)
PFNGLENABLEINDEXEDEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLENABLEINDEXEDEXTPROC) (GLenum target, GLuint index);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLuint index)
PFNGLENABLEINVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLENABLEINVPROC) (GLenum target, GLuint index);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLuint index)
PFNGLENABLEIOESPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLENABLEIOESPROC) (GLenum target, GLuint index);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLuint index)
PFNGLENABLEIPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLENABLEIPROC) (GLenum cap, GLuint index);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum cap,GLuint index)
PFNGLENABLEVARIANTCLIENTSTATEEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLENABLEVARIANTCLIENTSTATEEXTPROC) (GLuint id);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint id)
PFNGLENABLEVERTEXARRAYATTRIBEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLENABLEVERTEXARRAYATTRIBEXTPROC) (GLuint vaobj, GLuint index);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint vaobj,GLuint index)
PFNGLENABLEVERTEXARRAYATTRIBPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLENABLEVERTEXARRAYATTRIBPROC) (GLuint vaobj, GLuint index);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint vaobj,GLuint index)
PFNGLENABLEVERTEXARRAYEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLENABLEVERTEXARRAYEXTPROC) (GLuint vaobj, GLenum array);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint vaobj,GLenum array)
PFNGLENABLEVERTEXATTRIBAPPLEPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLENABLEVERTEXATTRIBAPPLEPROC) (GLuint index, GLenum pname);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,GLenum pname)
PFNGLENABLEVERTEXATTRIBARRAYARBPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLENABLEVERTEXATTRIBARRAYARBPROC) (GLuint index);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index)
PFNGLENABLEVERTEXATTRIBARRAYPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLENABLEVERTEXATTRIBARRAYPROC) (GLuint index);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index)
PFNGLENDCONDITIONALRENDERNVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLENDCONDITIONALRENDERNVPROC) (void);$/;"	t	typeref:typename:void (GLAPIENTRY *)(void)
PFNGLENDCONDITIONALRENDERNVXPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLENDCONDITIONALRENDERNVXPROC) (void);$/;"	t	typeref:typename:void (GLAPIENTRY *)(void)
PFNGLENDCONDITIONALRENDERPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLENDCONDITIONALRENDERPROC) (void);$/;"	t	typeref:typename:void (GLAPIENTRY *)(void)
PFNGLENDFRAGMENTSHADERATIPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLENDFRAGMENTSHADERATIPROC) (void);$/;"	t	typeref:typename:void (GLAPIENTRY *)(void)
PFNGLENDOCCLUSIONQUERYNVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLENDOCCLUSIONQUERYNVPROC) (void);$/;"	t	typeref:typename:void (GLAPIENTRY *)(void)
PFNGLENDPERFMONITORAMDPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLENDPERFMONITORAMDPROC) (GLuint monitor);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint monitor)
PFNGLENDPERFQUERYINTELPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLENDPERFQUERYINTELPROC) (GLuint queryHandle);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint queryHandle)
PFNGLENDQUERYANGLEPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLENDQUERYANGLEPROC) (GLenum target);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target)
PFNGLENDQUERYARBPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLENDQUERYARBPROC) (GLenum target);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target)
PFNGLENDQUERYEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLENDQUERYEXTPROC) (GLenum target);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target)
PFNGLENDQUERYINDEXEDPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLENDQUERYINDEXEDPROC) (GLenum target, GLuint index);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLuint index)
PFNGLENDQUERYPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLENDQUERYPROC) (GLenum target);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target)
PFNGLENDSCENEEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLENDSCENEEXTPROC) (void);$/;"	t	typeref:typename:void (GLAPIENTRY *)(void)
PFNGLENDTILINGQCOMPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLENDTILINGQCOMPROC) (GLbitfield preserveMask);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLbitfield preserveMask)
PFNGLENDTRANSFORMFEEDBACKEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLENDTRANSFORMFEEDBACKEXTPROC) (void);$/;"	t	typeref:typename:void (GLAPIENTRY *)(void)
PFNGLENDTRANSFORMFEEDBACKNVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLENDTRANSFORMFEEDBACKNVPROC) (void);$/;"	t	typeref:typename:void (GLAPIENTRY *)(void)
PFNGLENDTRANSFORMFEEDBACKPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLENDTRANSFORMFEEDBACKPROC) (void);$/;"	t	typeref:typename:void (GLAPIENTRY *)(void)
PFNGLENDVERTEXSHADEREXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLENDVERTEXSHADEREXTPROC) (void);$/;"	t	typeref:typename:void (GLAPIENTRY *)(void)
PFNGLENDVIDEOCAPTURENVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLENDVIDEOCAPTURENVPROC) (GLuint video_capture_slot);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint video_capture_slot)
PFNGLERRORSTRINGREGALPROC	./GL/glew.h	/^typedef const GLchar* (GLAPIENTRY * PFNGLERRORSTRINGREGALPROC) (GLenum error);$/;"	t	typeref:typename:const GLchar * (GLAPIENTRY *)(GLenum error)
PFNGLEVALMAPSNVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLEVALMAPSNVPROC) (GLenum target, GLenum mode);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLenum mode)
PFNGLEXECUTEPROGRAMNVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLEXECUTEPROGRAMNVPROC) (GLenum target, GLuint id, const GLfloat* /;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLuint id,const GLfloat * params)
PFNGLEXTGETBUFFERPOINTERVQCOMPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLEXTGETBUFFERPOINTERVQCOMPROC) (GLenum target, void** params);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,void ** params)
PFNGLEXTGETBUFFERSQCOMPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLEXTGETBUFFERSQCOMPROC) (GLuint* buffers, GLint maxBuffers, GLint/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint * buffers,GLint maxBuffers,GLint * numBuffers)
PFNGLEXTGETFRAMEBUFFERSQCOMPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLEXTGETFRAMEBUFFERSQCOMPROC) (GLuint* framebuffers, GLint maxFram/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint * framebuffers,GLint maxFramebuffers,GLint * numFramebuffers)
PFNGLEXTGETPROGRAMBINARYSOURCEQCOMPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLEXTGETPROGRAMBINARYSOURCEQCOMPROC) (GLuint program, GLenum shade/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint program,GLenum shadertype,GLchar * source,GLint * length)
PFNGLEXTGETPROGRAMSQCOMPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLEXTGETPROGRAMSQCOMPROC) (GLuint* programs, GLint maxPrograms, GL/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint * programs,GLint maxPrograms,GLint * numPrograms)
PFNGLEXTGETRENDERBUFFERSQCOMPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLEXTGETRENDERBUFFERSQCOMPROC) (GLuint* renderbuffers, GLint maxRe/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint * renderbuffers,GLint maxRenderbuffers,GLint * numRenderbuffers)
PFNGLEXTGETSHADERSQCOMPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLEXTGETSHADERSQCOMPROC) (GLuint* shaders, GLint maxShaders, GLint/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint * shaders,GLint maxShaders,GLint * numShaders)
PFNGLEXTGETTEXLEVELPARAMETERIVQCOMPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLEXTGETTEXLEVELPARAMETERIVQCOMPROC) (GLuint texture, GLenum face,/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint texture,GLenum face,GLint level,GLenum pname,GLint * params)
PFNGLEXTGETTEXSUBIMAGEQCOMPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLEXTGETTEXSUBIMAGEQCOMPROC) (GLenum target, GLint level, GLint xo/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLint level,GLint xoffset,GLint yoffset,GLint zoffset,GLsizei width,GLsizei height,GLsizei depth,GLenum format,GLenum type,void * texels)
PFNGLEXTGETTEXTURESQCOMPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLEXTGETTEXTURESQCOMPROC) (GLuint* textures, GLint maxTextures, GL/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint * textures,GLint maxTextures,GLint * numTextures)
PFNGLEXTISPROGRAMBINARYQCOMPROC	./GL/glew.h	/^typedef GLboolean (GLAPIENTRY * PFNGLEXTISPROGRAMBINARYQCOMPROC) (GLuint program);$/;"	t	typeref:typename:GLboolean (GLAPIENTRY *)(GLuint program)
PFNGLEXTRACTCOMPONENTEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLEXTRACTCOMPONENTEXTPROC) (GLuint res, GLuint src, GLuint num);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint res,GLuint src,GLuint num)
PFNGLEXTTEXOBJECTSTATEOVERRIDEIQCOMPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLEXTTEXOBJECTSTATEOVERRIDEIQCOMPROC) (GLenum target, GLenum pname/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLenum pname,GLint param)
PFNGLFENCESYNCAPPLEPROC	./GL/glew.h	/^typedef GLsync (GLAPIENTRY * PFNGLFENCESYNCAPPLEPROC) (GLenum condition, GLbitfield flags);$/;"	t	typeref:typename:GLsync (GLAPIENTRY *)(GLenum condition,GLbitfield flags)
PFNGLFENCESYNCPROC	./GL/glew.h	/^typedef GLsync (GLAPIENTRY * PFNGLFENCESYNCPROC) (GLenum condition,GLbitfield flags);$/;"	t	typeref:typename:GLsync (GLAPIENTRY *)(GLenum condition,GLbitfield flags)
PFNGLFINALCOMBINERINPUTNVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLFINALCOMBINERINPUTNVPROC) (GLenum variable, GLenum input, GLenum/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum variable,GLenum input,GLenum mapping,GLenum componentUsage)
PFNGLFINISHASYNCSGIXPROC	./GL/glew.h	/^typedef GLint (GLAPIENTRY * PFNGLFINISHASYNCSGIXPROC) (GLuint* markerp);$/;"	t	typeref:typename:GLint (GLAPIENTRY *)(GLuint * markerp)
PFNGLFINISHFENCEAPPLEPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLFINISHFENCEAPPLEPROC) (GLuint fence);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint fence)
PFNGLFINISHFENCENVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLFINISHFENCENVPROC) (GLuint fence);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint fence)
PFNGLFINISHOBJECTAPPLEPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLFINISHOBJECTAPPLEPROC) (GLenum object, GLint name);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum object,GLint name)
PFNGLFINISHTEXTURESUNXPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLFINISHTEXTURESUNXPROC) (void);$/;"	t	typeref:typename:void (GLAPIENTRY *)(void)
PFNGLFLUSHMAPPEDBUFFERRANGEAPPLEPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLFLUSHMAPPEDBUFFERRANGEAPPLEPROC) (GLenum target, GLintptr offset/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLintptr offset,GLsizeiptr size)
PFNGLFLUSHMAPPEDBUFFERRANGEEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLFLUSHMAPPEDBUFFERRANGEEXTPROC) (GLenum target, GLintptr offset, /;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLintptr offset,GLsizeiptr length)
PFNGLFLUSHMAPPEDBUFFERRANGEPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLFLUSHMAPPEDBUFFERRANGEPROC) (GLenum target, GLintptr offset, GLs/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLintptr offset,GLsizeiptr length)
PFNGLFLUSHMAPPEDNAMEDBUFFERRANGEEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLFLUSHMAPPEDNAMEDBUFFERRANGEEXTPROC) (GLuint buffer, GLintptr off/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint buffer,GLintptr offset,GLsizeiptr length)
PFNGLFLUSHMAPPEDNAMEDBUFFERRANGEPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLFLUSHMAPPEDNAMEDBUFFERRANGEPROC) (GLuint buffer, GLintptr offset/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint buffer,GLintptr offset,GLsizeiptr length)
PFNGLFLUSHPIXELDATARANGENVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLFLUSHPIXELDATARANGENVPROC) (GLenum target);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target)
PFNGLFLUSHRASTERSGIXPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLFLUSHRASTERSGIXPROC) (void);$/;"	t	typeref:typename:void (GLAPIENTRY *)(void)
PFNGLFLUSHVERTEXARRAYRANGEAPPLEPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLFLUSHVERTEXARRAYRANGEAPPLEPROC) (GLsizei length, void *pointer);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLsizei length,void * pointer)
PFNGLFLUSHVERTEXARRAYRANGENVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLFLUSHVERTEXARRAYRANGENVPROC) (void);$/;"	t	typeref:typename:void (GLAPIENTRY *)(void)
PFNGLFOGCOORDDEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLFOGCOORDDEXTPROC) (GLdouble coord);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLdouble coord)
PFNGLFOGCOORDDPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLFOGCOORDDPROC) (GLdouble coord);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLdouble coord)
PFNGLFOGCOORDDVEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLFOGCOORDDVEXTPROC) (const GLdouble *coord);$/;"	t	typeref:typename:void (GLAPIENTRY *)(const GLdouble * coord)
PFNGLFOGCOORDDVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLFOGCOORDDVPROC) (const GLdouble *coord);$/;"	t	typeref:typename:void (GLAPIENTRY *)(const GLdouble * coord)
PFNGLFOGCOORDFEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLFOGCOORDFEXTPROC) (GLfloat coord);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLfloat coord)
PFNGLFOGCOORDFORMATNVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLFOGCOORDFORMATNVPROC) (GLenum type, GLsizei stride);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum type,GLsizei stride)
PFNGLFOGCOORDFPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLFOGCOORDFPROC) (GLfloat coord);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLfloat coord)
PFNGLFOGCOORDFVEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLFOGCOORDFVEXTPROC) (const GLfloat *coord);$/;"	t	typeref:typename:void (GLAPIENTRY *)(const GLfloat * coord)
PFNGLFOGCOORDFVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLFOGCOORDFVPROC) (const GLfloat *coord);$/;"	t	typeref:typename:void (GLAPIENTRY *)(const GLfloat * coord)
PFNGLFOGCOORDHNVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLFOGCOORDHNVPROC) (GLhalf fog);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLhalf fog)
PFNGLFOGCOORDHVNVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLFOGCOORDHVNVPROC) (const GLhalf* fog);$/;"	t	typeref:typename:void (GLAPIENTRY *)(const GLhalf * fog)
PFNGLFOGCOORDPOINTEREXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLFOGCOORDPOINTEREXTPROC) (GLenum type, GLsizei stride, const void/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum type,GLsizei stride,const void * pointer)
PFNGLFOGCOORDPOINTERLISTIBMPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLFOGCOORDPOINTERLISTIBMPROC) (GLenum type, GLint stride, const vo/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum type,GLint stride,const void ** pointer,GLint ptrstride)
PFNGLFOGCOORDPOINTERPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLFOGCOORDPOINTERPROC) (GLenum type, GLsizei stride, const void *p/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum type,GLsizei stride,const void * pointer)
PFNGLFOGFUNCSGISPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLFOGFUNCSGISPROC) (GLsizei n, const GLfloat* points);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLsizei n,const GLfloat * points)
PFNGLFOGLAYERSSGIXPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLFOGLAYERSSGIXPROC) (GLsizei n, const GLfloat* points);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLsizei n,const GLfloat * points)
PFNGLFOGXPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLFOGXPROC) (GLenum pname, GLfixed param);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum pname,GLfixed param)
PFNGLFOGXVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLFOGXVPROC) (GLenum pname, const GLfixed* params);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum pname,const GLfixed * params)
PFNGLFRAGMENTCOLORMATERIALEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLFRAGMENTCOLORMATERIALEXTPROC) (GLenum face, GLenum mode);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum face,GLenum mode)
PFNGLFRAGMENTCOLORMATERIALSGIXPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLFRAGMENTCOLORMATERIALSGIXPROC) (GLenum face, GLenum mode);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum face,GLenum mode)
PFNGLFRAGMENTCOVERAGECOLORNVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLFRAGMENTCOVERAGECOLORNVPROC) (GLuint color);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint color)
PFNGLFRAGMENTLIGHTFEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLFRAGMENTLIGHTFEXTPROC) (GLenum light, GLenum pname, GLfloat para/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum light,GLenum pname,GLfloat param)
PFNGLFRAGMENTLIGHTFSGIXPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLFRAGMENTLIGHTFSGIXPROC) (GLenum light, GLenum pname, GLfloat par/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum light,GLenum pname,GLfloat param)
PFNGLFRAGMENTLIGHTFVEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLFRAGMENTLIGHTFVEXTPROC) (GLenum light, GLenum pname, GLfloat* pa/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum light,GLenum pname,GLfloat * params)
PFNGLFRAGMENTLIGHTFVSGIXPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLFRAGMENTLIGHTFVSGIXPROC) (GLenum light, GLenum pname, GLfloat* p/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum light,GLenum pname,GLfloat * params)
PFNGLFRAGMENTLIGHTIEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLFRAGMENTLIGHTIEXTPROC) (GLenum light, GLenum pname, GLint param)/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum light,GLenum pname,GLint param)
PFNGLFRAGMENTLIGHTISGIXPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLFRAGMENTLIGHTISGIXPROC) (GLenum light, GLenum pname, GLint param/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum light,GLenum pname,GLint param)
PFNGLFRAGMENTLIGHTIVEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLFRAGMENTLIGHTIVEXTPROC) (GLenum light, GLenum pname, GLint* para/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum light,GLenum pname,GLint * params)
PFNGLFRAGMENTLIGHTIVSGIXPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLFRAGMENTLIGHTIVSGIXPROC) (GLenum light, GLenum pname, GLint* par/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum light,GLenum pname,GLint * params)
PFNGLFRAGMENTLIGHTMODELFEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLFRAGMENTLIGHTMODELFEXTPROC) (GLenum pname, GLfloat param);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum pname,GLfloat param)
PFNGLFRAGMENTLIGHTMODELFSGIXPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLFRAGMENTLIGHTMODELFSGIXPROC) (GLenum pname, GLfloat param);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum pname,GLfloat param)
PFNGLFRAGMENTLIGHTMODELFVEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLFRAGMENTLIGHTMODELFVEXTPROC) (GLenum pname, GLfloat* params);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum pname,GLfloat * params)
PFNGLFRAGMENTLIGHTMODELFVSGIXPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLFRAGMENTLIGHTMODELFVSGIXPROC) (GLenum pname, GLfloat* params);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum pname,GLfloat * params)
PFNGLFRAGMENTLIGHTMODELIEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLFRAGMENTLIGHTMODELIEXTPROC) (GLenum pname, GLint param);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum pname,GLint param)
PFNGLFRAGMENTLIGHTMODELISGIXPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLFRAGMENTLIGHTMODELISGIXPROC) (GLenum pname, GLint param);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum pname,GLint param)
PFNGLFRAGMENTLIGHTMODELIVEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLFRAGMENTLIGHTMODELIVEXTPROC) (GLenum pname, GLint* params);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum pname,GLint * params)
PFNGLFRAGMENTLIGHTMODELIVSGIXPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLFRAGMENTLIGHTMODELIVSGIXPROC) (GLenum pname, GLint* params);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum pname,GLint * params)
PFNGLFRAGMENTMATERIALFEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLFRAGMENTMATERIALFEXTPROC) (GLenum face, GLenum pname, const GLfl/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum face,GLenum pname,const GLfloat param)
PFNGLFRAGMENTMATERIALFSGIXPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLFRAGMENTMATERIALFSGIXPROC) (GLenum face, GLenum pname, const GLf/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum face,GLenum pname,const GLfloat param)
PFNGLFRAGMENTMATERIALFVEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLFRAGMENTMATERIALFVEXTPROC) (GLenum face, GLenum pname, const GLf/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum face,GLenum pname,const GLfloat * params)
PFNGLFRAGMENTMATERIALFVSGIXPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLFRAGMENTMATERIALFVSGIXPROC) (GLenum face, GLenum pname, const GL/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum face,GLenum pname,const GLfloat * params)
PFNGLFRAGMENTMATERIALIEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLFRAGMENTMATERIALIEXTPROC) (GLenum face, GLenum pname, const GLin/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum face,GLenum pname,const GLint param)
PFNGLFRAGMENTMATERIALISGIXPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLFRAGMENTMATERIALISGIXPROC) (GLenum face, GLenum pname, const GLi/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum face,GLenum pname,const GLint param)
PFNGLFRAGMENTMATERIALIVEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLFRAGMENTMATERIALIVEXTPROC) (GLenum face, GLenum pname, const GLi/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum face,GLenum pname,const GLint * params)
PFNGLFRAGMENTMATERIALIVSGIXPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLFRAGMENTMATERIALIVSGIXPROC) (GLenum face, GLenum pname, const GL/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum face,GLenum pname,const GLint * params)
PFNGLFRAMEBUFFERDRAWBUFFEREXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLFRAMEBUFFERDRAWBUFFEREXTPROC) (GLuint framebuffer, GLenum mode);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint framebuffer,GLenum mode)
PFNGLFRAMEBUFFERDRAWBUFFERSEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLFRAMEBUFFERDRAWBUFFERSEXTPROC) (GLuint framebuffer, GLsizei n, c/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint framebuffer,GLsizei n,const GLenum * bufs)
PFNGLFRAMEBUFFERFETCHBARRIEREXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLFRAMEBUFFERFETCHBARRIEREXTPROC) (void);$/;"	t	typeref:typename:void (GLAPIENTRY *)(void)
PFNGLFRAMEBUFFERFETCHBARRIERQCOMPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLFRAMEBUFFERFETCHBARRIERQCOMPROC) (void);$/;"	t	typeref:typename:void (GLAPIENTRY *)(void)
PFNGLFRAMEBUFFERFOVEATIONCONFIGQCOMPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLFRAMEBUFFERFOVEATIONCONFIGQCOMPROC) (GLuint fbo, GLuint numLayer/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint fbo,GLuint numLayers,GLuint focalPointsPerLayer,GLuint requestedFeatures,GLuint * providedFeatures)
PFNGLFRAMEBUFFERFOVEATIONPARAMETERSQCOMPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLFRAMEBUFFERFOVEATIONPARAMETERSQCOMPROC) (GLuint fbo, GLuint laye/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint fbo,GLuint layer,GLuint focalPoint,GLfloat focalX,GLfloat focalY,GLfloat gainX,GLfloat gainY,GLfloat foveaArea)
PFNGLFRAMEBUFFERPARAMETERIMESAPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLFRAMEBUFFERPARAMETERIMESAPROC) (GLenum target, GLenum pname, GLi/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLenum pname,GLint param)
PFNGLFRAMEBUFFERPARAMETERIPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLFRAMEBUFFERPARAMETERIPROC) (GLenum target, GLenum pname, GLint p/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLenum pname,GLint param)
PFNGLFRAMEBUFFERPIXELLOCALSTORAGESIZEEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLFRAMEBUFFERPIXELLOCALSTORAGESIZEEXTPROC) (GLuint target, GLsizei/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint target,GLsizei size)
PFNGLFRAMEBUFFERREADBUFFEREXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLFRAMEBUFFERREADBUFFEREXTPROC) (GLuint framebuffer, GLenum mode);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint framebuffer,GLenum mode)
PFNGLFRAMEBUFFERRENDERBUFFEREXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLFRAMEBUFFERRENDERBUFFEREXTPROC) (GLenum target, GLenum attachmen/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLenum attachment,GLenum renderbuffertarget,GLuint renderbuffer)
PFNGLFRAMEBUFFERRENDERBUFFEROESPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLFRAMEBUFFERRENDERBUFFEROESPROC) (GLenum target, GLenum attachmen/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLenum attachment,GLenum renderbuffertarget,GLuint renderbuffer)
PFNGLFRAMEBUFFERRENDERBUFFERPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLFRAMEBUFFERRENDERBUFFERPROC) (GLenum target, GLenum attachment, /;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLenum attachment,GLenum renderbuffertarget,GLuint renderbuffer)
PFNGLFRAMEBUFFERSAMPLELOCATIONSFVARBPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLFRAMEBUFFERSAMPLELOCATIONSFVARBPROC) (GLenum target, GLuint star/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLuint start,GLsizei count,const GLfloat * v)
PFNGLFRAMEBUFFERSAMPLELOCATIONSFVNVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLFRAMEBUFFERSAMPLELOCATIONSFVNVPROC) (GLenum target, GLuint start/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLuint start,GLsizei count,const GLfloat * v)
PFNGLFRAMEBUFFERSAMPLEPOSITIONSFVAMDPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLFRAMEBUFFERSAMPLEPOSITIONSFVAMDPROC) (GLenum target, GLuint nums/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLuint numsamples,GLuint pixelindex,const GLfloat * values)
PFNGLFRAMEBUFFERTEXTURE1DEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLFRAMEBUFFERTEXTURE1DEXTPROC) (GLenum target, GLenum attachment, /;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLenum attachment,GLenum textarget,GLuint texture,GLint level)
PFNGLFRAMEBUFFERTEXTURE1DPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLFRAMEBUFFERTEXTURE1DPROC) (GLenum target, GLenum attachment, GLe/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLenum attachment,GLenum textarget,GLuint texture,GLint level)
PFNGLFRAMEBUFFERTEXTURE2DDOWNSAMPLEIMGPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLFRAMEBUFFERTEXTURE2DDOWNSAMPLEIMGPROC) (GLenum target, GLenum at/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLenum attachment,GLenum textarget,GLuint texture,GLint level,GLint xscale,GLint yscale)
PFNGLFRAMEBUFFERTEXTURE2DEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLFRAMEBUFFERTEXTURE2DEXTPROC) (GLenum target, GLenum attachment, /;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLenum attachment,GLenum textarget,GLuint texture,GLint level)
PFNGLFRAMEBUFFERTEXTURE2DMULTISAMPLEEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLFRAMEBUFFERTEXTURE2DMULTISAMPLEEXTPROC) (GLenum target, GLenum a/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLenum attachment,GLenum textarget,GLuint texture,GLint level,GLsizei samples)
PFNGLFRAMEBUFFERTEXTURE2DMULTISAMPLEIMGPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLFRAMEBUFFERTEXTURE2DMULTISAMPLEIMGPROC) (GLenum target, GLenum a/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLenum attachment,GLenum textarget,GLuint texture,GLint level,GLsizei samples)
PFNGLFRAMEBUFFERTEXTURE2DOESPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLFRAMEBUFFERTEXTURE2DOESPROC) (GLenum target, GLenum attachment, /;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLenum attachment,GLenum textarget,GLuint texture,GLint level)
PFNGLFRAMEBUFFERTEXTURE2DPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLFRAMEBUFFERTEXTURE2DPROC) (GLenum target, GLenum attachment, GLe/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLenum attachment,GLenum textarget,GLuint texture,GLint level)
PFNGLFRAMEBUFFERTEXTURE3DEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLFRAMEBUFFERTEXTURE3DEXTPROC) (GLenum target, GLenum attachment, /;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLenum attachment,GLenum textarget,GLuint texture,GLint level,GLint zoffset)
PFNGLFRAMEBUFFERTEXTURE3DOESPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLFRAMEBUFFERTEXTURE3DOESPROC) (GLenum target, GLenum attachment, /;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLenum attachment,GLenum textarget,GLuint texture,GLint level,GLint zoffset)
PFNGLFRAMEBUFFERTEXTURE3DPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLFRAMEBUFFERTEXTURE3DPROC) (GLenum target, GLenum attachment, GLe/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLenum attachment,GLenum textarget,GLuint texture,GLint level,GLint layer)
PFNGLFRAMEBUFFERTEXTUREARBPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLFRAMEBUFFERTEXTUREARBPROC) (GLenum target, GLenum attachment, GL/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLenum attachment,GLuint texture,GLint level)
PFNGLFRAMEBUFFERTEXTUREEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLFRAMEBUFFERTEXTUREEXTPROC) (GLenum target, GLenum attachment, GL/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLenum attachment,GLuint texture,GLint level)
PFNGLFRAMEBUFFERTEXTUREFACEARBPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLFRAMEBUFFERTEXTUREFACEARBPROC) (GLenum target, GLenum attachment/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLenum attachment,GLuint texture,GLint level,GLenum face)
PFNGLFRAMEBUFFERTEXTUREFACEEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLFRAMEBUFFERTEXTUREFACEEXTPROC) (GLenum target, GLenum attachment/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLenum attachment,GLuint texture,GLint level,GLenum face)
PFNGLFRAMEBUFFERTEXTURELAYERARBPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLFRAMEBUFFERTEXTURELAYERARBPROC) (GLenum target, GLenum attachmen/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLenum attachment,GLuint texture,GLint level,GLint layer)
PFNGLFRAMEBUFFERTEXTURELAYERDOWNSAMPLEIMGPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLFRAMEBUFFERTEXTURELAYERDOWNSAMPLEIMGPROC) (GLenum target, GLenum/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLenum attachment,GLuint texture,GLint level,GLint layer,GLint xscale,GLint yscale)
PFNGLFRAMEBUFFERTEXTURELAYEREXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLFRAMEBUFFERTEXTURELAYEREXTPROC) (GLenum target, GLenum attachmen/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLenum attachment,GLuint texture,GLint level,GLint layer)
PFNGLFRAMEBUFFERTEXTURELAYERNVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLFRAMEBUFFERTEXTURELAYERNVPROC) (GLenum target, GLenum attachment/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLenum attachment,GLuint texture,GLint level,GLint layer)
PFNGLFRAMEBUFFERTEXTURELAYERPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLFRAMEBUFFERTEXTURELAYERPROC) (GLenum target,GLenum attachment, G/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLenum attachment,GLuint texture,GLint level,GLint layer)
PFNGLFRAMEBUFFERTEXTUREMULTISAMPLEMULTIVIEWOVRPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLFRAMEBUFFERTEXTUREMULTISAMPLEMULTIVIEWOVRPROC) (GLenum target, G/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLenum attachment,GLuint texture,GLint level,GLsizei samples,GLint baseViewIndex,GLsizei numViews)
PFNGLFRAMEBUFFERTEXTUREMULTIVIEWOVRPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLFRAMEBUFFERTEXTUREMULTIVIEWOVRPROC) (GLenum target, GLenum attac/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLenum attachment,GLuint texture,GLint level,GLint baseViewIndex,GLsizei numViews)
PFNGLFRAMEBUFFERTEXTUREPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLFRAMEBUFFERTEXTUREPROC) (GLenum target, GLenum attachment, GLuin/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLenum attachment,GLuint texture,GLint level)
PFNGLFRAMETERMINATORGREMEDYPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLFRAMETERMINATORGREMEDYPROC) (void);$/;"	t	typeref:typename:void (GLAPIENTRY *)(void)
PFNGLFRAMEZOOMSGIXPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLFRAMEZOOMSGIXPROC) (GLint factor);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLint factor)
PFNGLFREEOBJECTBUFFERATIPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLFREEOBJECTBUFFERATIPROC) (GLuint buffer);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint buffer)
PFNGLFRUSTUMFOESPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLFRUSTUMFOESPROC) (GLfloat l, GLfloat r, GLfloat b, GLfloat t, GL/;"	t	typeref:typename:void (GLAPIENTRY *)(GLfloat l,GLfloat r,GLfloat b,GLfloat t,GLfloat n,GLfloat f)
PFNGLFRUSTUMFPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLFRUSTUMFPROC) (GLfloat left, GLfloat right, GLfloat bottom, GLfl/;"	t	typeref:typename:void (GLAPIENTRY *)(GLfloat left,GLfloat right,GLfloat bottom,GLfloat top,GLfloat zNear,GLfloat zFar)
PFNGLFRUSTUMXPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLFRUSTUMXPROC) (GLfixed left, GLfixed right, GLfixed bottom, GLfi/;"	t	typeref:typename:void (GLAPIENTRY *)(GLfixed left,GLfixed right,GLfixed bottom,GLfixed top,GLfixed zNear,GLfixed zFar)
PFNGLGENASYNCMARKERSSGIXPROC	./GL/glew.h	/^typedef GLuint (GLAPIENTRY * PFNGLGENASYNCMARKERSSGIXPROC) (GLsizei range);$/;"	t	typeref:typename:GLuint (GLAPIENTRY *)(GLsizei range)
PFNGLGENBUFFERSARBPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLGENBUFFERSARBPROC) (GLsizei n, GLuint* buffers);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLsizei n,GLuint * buffers)
PFNGLGENBUFFERSPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLGENBUFFERSPROC) (GLsizei n, GLuint* buffers);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLsizei n,GLuint * buffers)
PFNGLGENERATEMIPMAPEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLGENERATEMIPMAPEXTPROC) (GLenum target);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target)
PFNGLGENERATEMIPMAPOESPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLGENERATEMIPMAPOESPROC) (GLenum target);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target)
PFNGLGENERATEMIPMAPPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLGENERATEMIPMAPPROC) (GLenum target);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target)
PFNGLGENERATEMULTITEXMIPMAPEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLGENERATEMULTITEXMIPMAPEXTPROC) (GLenum texunit, GLenum target);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum texunit,GLenum target)
PFNGLGENERATETEXTUREMIPMAPEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLGENERATETEXTUREMIPMAPEXTPROC) (GLuint texture, GLenum target);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint texture,GLenum target)
PFNGLGENERATETEXTUREMIPMAPPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLGENERATETEXTUREMIPMAPPROC) (GLuint texture);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint texture)
PFNGLGENFENCESAPPLEPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLGENFENCESAPPLEPROC) (GLsizei n, GLuint* fences);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLsizei n,GLuint * fences)
PFNGLGENFENCESNVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLGENFENCESNVPROC) (GLsizei n, GLuint* fences);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLsizei n,GLuint * fences)
PFNGLGENFRAGMENTSHADERSATIPROC	./GL/glew.h	/^typedef GLuint (GLAPIENTRY * PFNGLGENFRAGMENTSHADERSATIPROC) (GLuint range);$/;"	t	typeref:typename:GLuint (GLAPIENTRY *)(GLuint range)
PFNGLGENFRAMEBUFFERSEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLGENFRAMEBUFFERSEXTPROC) (GLsizei n, GLuint* framebuffers);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLsizei n,GLuint * framebuffers)
PFNGLGENFRAMEBUFFERSOESPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLGENFRAMEBUFFERSOESPROC) (GLsizei n, GLuint* framebuffers);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLsizei n,GLuint * framebuffers)
PFNGLGENFRAMEBUFFERSPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLGENFRAMEBUFFERSPROC) (GLsizei n, GLuint* framebuffers);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLsizei n,GLuint * framebuffers)
PFNGLGENMPEGPREDICTORSSGIXPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLGENMPEGPREDICTORSSGIXPROC) (GLsizei n, GLuint* predictors);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLsizei n,GLuint * predictors)
PFNGLGENNAMESAMDPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLGENNAMESAMDPROC) (GLenum identifier, GLuint num, GLuint* names);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum identifier,GLuint num,GLuint * names)
PFNGLGENOCCLUSIONQUERIESNVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLGENOCCLUSIONQUERIESNVPROC) (GLsizei n, GLuint* ids);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLsizei n,GLuint * ids)
PFNGLGENPATHSNVPROC	./GL/glew.h	/^typedef GLuint (GLAPIENTRY * PFNGLGENPATHSNVPROC) (GLsizei range);$/;"	t	typeref:typename:GLuint (GLAPIENTRY *)(GLsizei range)
PFNGLGENPERFMONITORSAMDPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLGENPERFMONITORSAMDPROC) (GLsizei n, GLuint* monitors);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLsizei n,GLuint * monitors)
PFNGLGENPROGRAMPIPELINESPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLGENPROGRAMPIPELINESPROC) (GLsizei n, GLuint* pipelines);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLsizei n,GLuint * pipelines)
PFNGLGENPROGRAMSARBPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLGENPROGRAMSARBPROC) (GLsizei n, GLuint* programs);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLsizei n,GLuint * programs)
PFNGLGENPROGRAMSNVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLGENPROGRAMSNVPROC) (GLsizei n, GLuint* ids);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLsizei n,GLuint * ids)
PFNGLGENQUERIESANGLEPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLGENQUERIESANGLEPROC) (GLsizei n, GLuint* ids);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLsizei n,GLuint * ids)
PFNGLGENQUERIESARBPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLGENQUERIESARBPROC) (GLsizei n, GLuint* ids);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLsizei n,GLuint * ids)
PFNGLGENQUERIESEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLGENQUERIESEXTPROC) (GLsizei n, GLuint* ids);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLsizei n,GLuint * ids)
PFNGLGENQUERIESPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLGENQUERIESPROC) (GLsizei n, GLuint* ids);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLsizei n,GLuint * ids)
PFNGLGENRENDERBUFFERSEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLGENRENDERBUFFERSEXTPROC) (GLsizei n, GLuint* renderbuffers);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLsizei n,GLuint * renderbuffers)
PFNGLGENRENDERBUFFERSOESPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLGENRENDERBUFFERSOESPROC) (GLsizei n, GLuint* renderbuffers);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLsizei n,GLuint * renderbuffers)
PFNGLGENRENDERBUFFERSPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLGENRENDERBUFFERSPROC) (GLsizei n, GLuint* renderbuffers);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLsizei n,GLuint * renderbuffers)
PFNGLGENSAMPLERSPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLGENSAMPLERSPROC) (GLsizei count, GLuint* samplers);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLsizei count,GLuint * samplers)
PFNGLGENSEMAPHORESEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLGENSEMAPHORESEXTPROC) (GLsizei n, GLuint* semaphores);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLsizei n,GLuint * semaphores)
PFNGLGENSYMBOLSEXTPROC	./GL/glew.h	/^typedef GLuint (GLAPIENTRY * PFNGLGENSYMBOLSEXTPROC) (GLenum dataType, GLenum storageType, GLenu/;"	t	typeref:typename:GLuint (GLAPIENTRY *)(GLenum dataType,GLenum storageType,GLenum range,GLuint components)
PFNGLGENTEXTURESEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLGENTEXTURESEXTPROC) (GLsizei n, GLuint* textures);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLsizei n,GLuint * textures)
PFNGLGENTRANSFORMFEEDBACKSNVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLGENTRANSFORMFEEDBACKSNVPROC) (GLsizei n, GLuint* ids);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLsizei n,GLuint * ids)
PFNGLGENTRANSFORMFEEDBACKSPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLGENTRANSFORMFEEDBACKSPROC) (GLsizei n, GLuint* ids);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLsizei n,GLuint * ids)
PFNGLGENVERTEXARRAYSAPPLEPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLGENVERTEXARRAYSAPPLEPROC) (GLsizei n, const GLuint* arrays);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLsizei n,const GLuint * arrays)
PFNGLGENVERTEXARRAYSOESPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLGENVERTEXARRAYSOESPROC) (GLsizei n, GLuint* arrays);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLsizei n,GLuint * arrays)
PFNGLGENVERTEXARRAYSPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLGENVERTEXARRAYSPROC) (GLsizei n, GLuint* arrays);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLsizei n,GLuint * arrays)
PFNGLGENVERTEXARRAYSSGIXPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLGENVERTEXARRAYSSGIXPROC) (GLsizei n, GLuint* arrays);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLsizei n,GLuint * arrays)
PFNGLGENVERTEXSHADERSEXTPROC	./GL/glew.h	/^typedef GLuint (GLAPIENTRY * PFNGLGENVERTEXSHADERSEXTPROC) (GLuint range);$/;"	t	typeref:typename:GLuint (GLAPIENTRY *)(GLuint range)
PFNGLGETACTIVEATOMICCOUNTERBUFFERIVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLGETACTIVEATOMICCOUNTERBUFFERIVPROC) (GLuint program, GLuint buff/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint program,GLuint bufferIndex,GLenum pname,GLint * params)
PFNGLGETACTIVEATTRIBARBPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLGETACTIVEATTRIBARBPROC) (GLhandleARB programObj, GLuint index, G/;"	t	typeref:typename:void (GLAPIENTRY *)(GLhandleARB programObj,GLuint index,GLsizei maxLength,GLsizei * length,GLint * size,GLenum * type,GLcharARB * name)
PFNGLGETACTIVEATTRIBPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLGETACTIVEATTRIBPROC) (GLuint program, GLuint index, GLsizei maxL/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint program,GLuint index,GLsizei maxLength,GLsizei * length,GLint * size,GLenum * type,GLchar * name)
PFNGLGETACTIVESUBROUTINENAMEPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLGETACTIVESUBROUTINENAMEPROC) (GLuint program, GLenum shadertype,/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint program,GLenum shadertype,GLuint index,GLsizei bufsize,GLsizei * length,GLchar * name)
PFNGLGETACTIVESUBROUTINEUNIFORMIVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLGETACTIVESUBROUTINEUNIFORMIVPROC) (GLuint program, GLenum shader/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint program,GLenum shadertype,GLuint index,GLenum pname,GLint * values)
PFNGLGETACTIVESUBROUTINEUNIFORMNAMEPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLGETACTIVESUBROUTINEUNIFORMNAMEPROC) (GLuint program, GLenum shad/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint program,GLenum shadertype,GLuint index,GLsizei bufsize,GLsizei * length,GLchar * name)
PFNGLGETACTIVEUNIFORMARBPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLGETACTIVEUNIFORMARBPROC) (GLhandleARB programObj, GLuint index, /;"	t	typeref:typename:void (GLAPIENTRY *)(GLhandleARB programObj,GLuint index,GLsizei maxLength,GLsizei * length,GLint * size,GLenum * type,GLcharARB * name)
PFNGLGETACTIVEUNIFORMBLOCKIVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLGETACTIVEUNIFORMBLOCKIVPROC) (GLuint program, GLuint uniformBloc/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint program,GLuint uniformBlockIndex,GLenum pname,GLint * params)
PFNGLGETACTIVEUNIFORMBLOCKNAMEPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLGETACTIVEUNIFORMBLOCKNAMEPROC) (GLuint program, GLuint uniformBl/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint program,GLuint uniformBlockIndex,GLsizei bufSize,GLsizei * length,GLchar * uniformBlockName)
PFNGLGETACTIVEUNIFORMNAMEPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLGETACTIVEUNIFORMNAMEPROC) (GLuint program, GLuint uniformIndex, /;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint program,GLuint uniformIndex,GLsizei bufSize,GLsizei * length,GLchar * uniformName)
PFNGLGETACTIVEUNIFORMPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLGETACTIVEUNIFORMPROC) (GLuint program, GLuint index, GLsizei max/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint program,GLuint index,GLsizei maxLength,GLsizei * length,GLint * size,GLenum * type,GLchar * name)
PFNGLGETACTIVEUNIFORMSIVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLGETACTIVEUNIFORMSIVPROC) (GLuint program, GLsizei uniformCount, /;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint program,GLsizei uniformCount,const GLuint * uniformIndices,GLenum pname,GLint * params)
PFNGLGETACTIVEVARYINGNVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLGETACTIVEVARYINGNVPROC) (GLuint program, GLuint index, GLsizei b/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint program,GLuint index,GLsizei bufSize,GLsizei * length,GLsizei * size,GLenum * type,GLchar * name)
PFNGLGETARRAYOBJECTFVATIPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLGETARRAYOBJECTFVATIPROC) (GLenum array, GLenum pname, GLfloat* p/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum array,GLenum pname,GLfloat * params)
PFNGLGETARRAYOBJECTIVATIPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLGETARRAYOBJECTIVATIPROC) (GLenum array, GLenum pname, GLint* par/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum array,GLenum pname,GLint * params)
PFNGLGETATTACHEDOBJECTSARBPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLGETATTACHEDOBJECTSARBPROC) (GLhandleARB containerObj, GLsizei ma/;"	t	typeref:typename:void (GLAPIENTRY *)(GLhandleARB containerObj,GLsizei maxCount,GLsizei * count,GLhandleARB * obj)
PFNGLGETATTACHEDSHADERSPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLGETATTACHEDSHADERSPROC) (GLuint program, GLsizei maxCount, GLsiz/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint program,GLsizei maxCount,GLsizei * count,GLuint * shaders)
PFNGLGETATTRIBLOCATIONARBPROC	./GL/glew.h	/^typedef GLint (GLAPIENTRY * PFNGLGETATTRIBLOCATIONARBPROC) (GLhandleARB programObj, const GLchar/;"	t	typeref:typename:GLint (GLAPIENTRY *)(GLhandleARB programObj,const GLcharARB * name)
PFNGLGETATTRIBLOCATIONPROC	./GL/glew.h	/^typedef GLint (GLAPIENTRY * PFNGLGETATTRIBLOCATIONPROC) (GLuint program, const GLchar* name);$/;"	t	typeref:typename:GLint (GLAPIENTRY *)(GLuint program,const GLchar * name)
PFNGLGETBOOLEANINDEXEDVEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLGETBOOLEANINDEXEDVEXTPROC) (GLenum value, GLuint index, GLboolea/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum value,GLuint index,GLboolean * data)
PFNGLGETBOOLEANI_VPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLGETBOOLEANI_VPROC) (GLenum pname, GLuint index, GLboolean* data)/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum pname,GLuint index,GLboolean * data)
PFNGLGETBUFFERPARAMETERI64VPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLGETBUFFERPARAMETERI64VPROC) (GLenum target, GLenum value, GLint6/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLenum value,GLint64 * data)
PFNGLGETBUFFERPARAMETERIVARBPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLGETBUFFERPARAMETERIVARBPROC) (GLenum target, GLenum pname, GLint/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLenum pname,GLint * params)
PFNGLGETBUFFERPARAMETERIVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLGETBUFFERPARAMETERIVPROC) (GLenum target, GLenum pname, GLint* p/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLenum pname,GLint * params)
PFNGLGETBUFFERPARAMETERUI64VNVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLGETBUFFERPARAMETERUI64VNVPROC) (GLenum target, GLenum pname, GLu/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLenum pname,GLuint64EXT * params)
PFNGLGETBUFFERPOINTERVARBPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLGETBUFFERPOINTERVARBPROC) (GLenum target, GLenum pname, void** p/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLenum pname,void ** params)
PFNGLGETBUFFERPOINTERVOESPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLGETBUFFERPOINTERVOESPROC) (GLenum target, GLenum pname, void** p/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLenum pname,void ** params)
PFNGLGETBUFFERPOINTERVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLGETBUFFERPOINTERVPROC) (GLenum target, GLenum pname, void** para/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLenum pname,void ** params)
PFNGLGETBUFFERSUBDATAARBPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLGETBUFFERSUBDATAARBPROC) (GLenum target, GLintptrARB offset, GLs/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLintptrARB offset,GLsizeiptrARB size,void * data)
PFNGLGETBUFFERSUBDATAPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLGETBUFFERSUBDATAPROC) (GLenum target, GLintptr offset, GLsizeipt/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLintptr offset,GLsizeiptr size,void * data)
PFNGLGETCLIPPLANEFOESPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLGETCLIPPLANEFOESPROC) (GLenum plane, GLfloat* equation);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum plane,GLfloat * equation)
PFNGLGETCLIPPLANEFPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLGETCLIPPLANEFPROC) (GLenum pname, GLfloat eqn[4]);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum pname,GLfloat eqn[4])
PFNGLGETCLIPPLANEXPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLGETCLIPPLANEXPROC) (GLenum pname, GLfixed eqn[4]);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum pname,GLfixed eqn[4])
PFNGLGETCOLORTABLEEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLGETCOLORTABLEEXTPROC) (GLenum target, GLenum format, GLenum type/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLenum format,GLenum type,void * data)
PFNGLGETCOLORTABLEPARAMETERFVEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLGETCOLORTABLEPARAMETERFVEXTPROC) (GLenum target, GLenum pname, G/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLenum pname,GLfloat * params)
PFNGLGETCOLORTABLEPARAMETERFVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLGETCOLORTABLEPARAMETERFVPROC) (GLenum target, GLenum pname, GLfl/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLenum pname,GLfloat * params)
PFNGLGETCOLORTABLEPARAMETERFVSGIPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLGETCOLORTABLEPARAMETERFVSGIPROC) (GLenum target, GLenum pname, G/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLenum pname,GLfloat * params)
PFNGLGETCOLORTABLEPARAMETERIVEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLGETCOLORTABLEPARAMETERIVEXTPROC) (GLenum target, GLenum pname, G/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLenum pname,GLint * params)
PFNGLGETCOLORTABLEPARAMETERIVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLGETCOLORTABLEPARAMETERIVPROC) (GLenum target, GLenum pname, GLin/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLenum pname,GLint * params)
PFNGLGETCOLORTABLEPARAMETERIVSGIPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLGETCOLORTABLEPARAMETERIVSGIPROC) (GLenum target, GLenum pname, G/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLenum pname,GLint * params)
PFNGLGETCOLORTABLEPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLGETCOLORTABLEPROC) (GLenum target, GLenum format, GLenum type, v/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLenum format,GLenum type,void * table)
PFNGLGETCOLORTABLESGIPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLGETCOLORTABLESGIPROC) (GLenum target, GLenum format, GLenum type/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLenum format,GLenum type,void * table)
PFNGLGETCOMBINERINPUTPARAMETERFVNVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLGETCOMBINERINPUTPARAMETERFVNVPROC) (GLenum stage, GLenum portion/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum stage,GLenum portion,GLenum variable,GLenum pname,GLfloat * params)
PFNGLGETCOMBINERINPUTPARAMETERIVNVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLGETCOMBINERINPUTPARAMETERIVNVPROC) (GLenum stage, GLenum portion/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum stage,GLenum portion,GLenum variable,GLenum pname,GLint * params)
PFNGLGETCOMBINEROUTPUTPARAMETERFVNVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLGETCOMBINEROUTPUTPARAMETERFVNVPROC) (GLenum stage, GLenum portio/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum stage,GLenum portion,GLenum pname,GLfloat * params)
PFNGLGETCOMBINEROUTPUTPARAMETERIVNVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLGETCOMBINEROUTPUTPARAMETERIVNVPROC) (GLenum stage, GLenum portio/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum stage,GLenum portion,GLenum pname,GLint * params)
PFNGLGETCOMBINERSTAGEPARAMETERFVNVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLGETCOMBINERSTAGEPARAMETERFVNVPROC) (GLenum stage, GLenum pname, /;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum stage,GLenum pname,GLfloat * params)
PFNGLGETCOMMANDHEADERNVPROC	./GL/glew.h	/^typedef GLuint (GLAPIENTRY * PFNGLGETCOMMANDHEADERNVPROC) (GLenum tokenID, GLuint size);$/;"	t	typeref:typename:GLuint (GLAPIENTRY *)(GLenum tokenID,GLuint size)
PFNGLGETCOMPRESSEDMULTITEXIMAGEEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLGETCOMPRESSEDMULTITEXIMAGEEXTPROC) (GLenum texunit, GLenum targe/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum texunit,GLenum target,GLint level,void * img)
PFNGLGETCOMPRESSEDTEXIMAGEARBPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLGETCOMPRESSEDTEXIMAGEARBPROC) (GLenum target, GLint lod, void *i/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLint lod,void * img)
PFNGLGETCOMPRESSEDTEXIMAGEPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLGETCOMPRESSEDTEXIMAGEPROC) (GLenum target, GLint lod, void *img)/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLint lod,void * img)
PFNGLGETCOMPRESSEDTEXTUREIMAGEEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLGETCOMPRESSEDTEXTUREIMAGEEXTPROC) (GLuint texture, GLenum target/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint texture,GLenum target,GLint level,void * img)
PFNGLGETCOMPRESSEDTEXTUREIMAGEPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLGETCOMPRESSEDTEXTUREIMAGEPROC) (GLuint texture, GLint level, GLs/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint texture,GLint level,GLsizei bufSize,void * pixels)
PFNGLGETCOMPRESSEDTEXTURESUBIMAGEPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLGETCOMPRESSEDTEXTURESUBIMAGEPROC) (GLuint texture, GLint level, /;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint texture,GLint level,GLint xoffset,GLint yoffset,GLint zoffset,GLsizei width,GLsizei height,GLsizei depth,GLsizei bufSize,void * pixels)
PFNGLGETCONVOLUTIONFILTEREXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLGETCONVOLUTIONFILTEREXTPROC) (GLenum target, GLenum format, GLen/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLenum format,GLenum type,void * image)
PFNGLGETCONVOLUTIONFILTERPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLGETCONVOLUTIONFILTERPROC) (GLenum target, GLenum format, GLenum /;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLenum format,GLenum type,void * image)
PFNGLGETCONVOLUTIONPARAMETERFVEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLGETCONVOLUTIONPARAMETERFVEXTPROC) (GLenum target, GLenum pname, /;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLenum pname,GLfloat * params)
PFNGLGETCONVOLUTIONPARAMETERFVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLGETCONVOLUTIONPARAMETERFVPROC) (GLenum target, GLenum pname, GLf/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLenum pname,GLfloat * params)
PFNGLGETCONVOLUTIONPARAMETERIVEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLGETCONVOLUTIONPARAMETERIVEXTPROC) (GLenum target, GLenum pname, /;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLenum pname,GLint * params)
PFNGLGETCONVOLUTIONPARAMETERIVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLGETCONVOLUTIONPARAMETERIVPROC) (GLenum target, GLenum pname, GLi/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLenum pname,GLint * params)
PFNGLGETCOVERAGEMODULATIONTABLENVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLGETCOVERAGEMODULATIONTABLENVPROC) (GLsizei bufsize, GLfloat* v);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLsizei bufsize,GLfloat * v)
PFNGLGETDEBUGMESSAGELOGAMDPROC	./GL/glew.h	/^typedef GLuint (GLAPIENTRY * PFNGLGETDEBUGMESSAGELOGAMDPROC) (GLuint count, GLsizei bufsize, GLe/;"	t	typeref:typename:GLuint (GLAPIENTRY *)(GLuint count,GLsizei bufsize,GLenum * categories,GLuint * severities,GLuint * ids,GLsizei * lengths,GLchar * message)
PFNGLGETDEBUGMESSAGELOGARBPROC	./GL/glew.h	/^typedef GLuint (GLAPIENTRY * PFNGLGETDEBUGMESSAGELOGARBPROC) (GLuint count, GLsizei bufSize, GLe/;"	t	typeref:typename:GLuint (GLAPIENTRY *)(GLuint count,GLsizei bufSize,GLenum * sources,GLenum * types,GLuint * ids,GLenum * severities,GLsizei * lengths,GLchar * messageLog)
PFNGLGETDEBUGMESSAGELOGPROC	./GL/glew.h	/^typedef GLuint (GLAPIENTRY * PFNGLGETDEBUGMESSAGELOGPROC) (GLuint count, GLsizei bufSize, GLenum/;"	t	typeref:typename:GLuint (GLAPIENTRY *)(GLuint count,GLsizei bufSize,GLenum * sources,GLenum * types,GLuint * ids,GLenum * severities,GLsizei * lengths,GLchar * messageLog)
PFNGLGETDETAILTEXFUNCSGISPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLGETDETAILTEXFUNCSGISPROC) (GLenum target, GLfloat* points);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLfloat * points)
PFNGLGETDOUBLEINDEXEDVEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLGETDOUBLEINDEXEDVEXTPROC) (GLenum target, GLuint index, GLdouble/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLuint index,GLdouble * params)
PFNGLGETDOUBLEI_VEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLGETDOUBLEI_VEXTPROC) (GLenum pname, GLuint index, GLdouble* para/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum pname,GLuint index,GLdouble * params)
PFNGLGETDOUBLEI_VPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLGETDOUBLEI_VPROC) (GLenum target, GLuint index, GLdouble* data);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLuint index,GLdouble * data)
PFNGLGETDRIVERCONTROLSQCOMPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLGETDRIVERCONTROLSQCOMPROC) (GLint* num, GLsizei size, GLuint *dr/;"	t	typeref:typename:void (GLAPIENTRY *)(GLint * num,GLsizei size,GLuint * driverControls)
PFNGLGETDRIVERCONTROLSTRINGQCOMPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLGETDRIVERCONTROLSTRINGQCOMPROC) (GLuint driverControl, GLsizei b/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint driverControl,GLsizei bufSize,GLsizei * length,GLchar * driverControlString)
PFNGLGETEXTENSIONREGALPROC	./GL/glew.h	/^typedef GLboolean (GLAPIENTRY * PFNGLGETEXTENSIONREGALPROC) (const GLchar* ext);$/;"	t	typeref:typename:GLboolean (GLAPIENTRY *)(const GLchar * ext)
PFNGLGETFENCEIVNVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLGETFENCEIVNVPROC) (GLuint fence, GLenum pname, GLint* params);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint fence,GLenum pname,GLint * params)
PFNGLGETFINALCOMBINERINPUTPARAMETERFVNVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLGETFINALCOMBINERINPUTPARAMETERFVNVPROC) (GLenum variable, GLenum/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum variable,GLenum pname,GLfloat * params)
PFNGLGETFINALCOMBINERINPUTPARAMETERIVNVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLGETFINALCOMBINERINPUTPARAMETERIVNVPROC) (GLenum variable, GLenum/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum variable,GLenum pname,GLint * params)
PFNGLGETFIRSTPERFQUERYIDINTELPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLGETFIRSTPERFQUERYIDINTELPROC) (GLuint* queryId);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint * queryId)
PFNGLGETFIXEDVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLGETFIXEDVPROC) (GLenum pname, GLfixed* params);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum pname,GLfixed * params)
PFNGLGETFLOATINDEXEDVEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLGETFLOATINDEXEDVEXTPROC) (GLenum target, GLuint index, GLfloat* /;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLuint index,GLfloat * params)
PFNGLGETFLOATI_VEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLGETFLOATI_VEXTPROC) (GLenum pname, GLuint index, GLfloat* params/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum pname,GLuint index,GLfloat * params)
PFNGLGETFLOATI_VNVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLGETFLOATI_VNVPROC) (GLenum target, GLuint index, GLfloat* data);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLuint index,GLfloat * data)
PFNGLGETFLOATI_VPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLGETFLOATI_VPROC) (GLenum target, GLuint index, GLfloat* data);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLuint index,GLfloat * data)
PFNGLGETFOGFUNCSGISPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLGETFOGFUNCSGISPROC) (GLfloat* points);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLfloat * points)
PFNGLGETFOGLAYERSSGIXPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLGETFOGLAYERSSGIXPROC) (GLfloat* points);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLfloat * points)
PFNGLGETFRAGDATAINDEXEXTPROC	./GL/glew.h	/^typedef GLint (GLAPIENTRY * PFNGLGETFRAGDATAINDEXEXTPROC) (GLuint program, const GLchar * name);$/;"	t	typeref:typename:GLint (GLAPIENTRY *)(GLuint program,const GLchar * name)
PFNGLGETFRAGDATAINDEXPROC	./GL/glew.h	/^typedef GLint (GLAPIENTRY * PFNGLGETFRAGDATAINDEXPROC) (GLuint program, const GLchar * name);$/;"	t	typeref:typename:GLint (GLAPIENTRY *)(GLuint program,const GLchar * name)
PFNGLGETFRAGDATALOCATIONEXTPROC	./GL/glew.h	/^typedef GLint (GLAPIENTRY * PFNGLGETFRAGDATALOCATIONEXTPROC) (GLuint program, const GLchar *name/;"	t	typeref:typename:GLint (GLAPIENTRY *)(GLuint program,const GLchar * name)
PFNGLGETFRAGDATALOCATIONPROC	./GL/glew.h	/^typedef GLint (GLAPIENTRY * PFNGLGETFRAGDATALOCATIONPROC) (GLuint program, const GLchar* name);$/;"	t	typeref:typename:GLint (GLAPIENTRY *)(GLuint program,const GLchar * name)
PFNGLGETFRAGMENTLIGHTFVEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLGETFRAGMENTLIGHTFVEXTPROC) (GLenum light, GLenum pname, GLfloat*/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum light,GLenum pname,GLfloat * params)
PFNGLGETFRAGMENTLIGHTFVSGIXPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLGETFRAGMENTLIGHTFVSGIXPROC) (GLenum light, GLenum value, GLfloat/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum light,GLenum value,GLfloat * data)
PFNGLGETFRAGMENTLIGHTIVEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLGETFRAGMENTLIGHTIVEXTPROC) (GLenum light, GLenum pname, GLint* p/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum light,GLenum pname,GLint * params)
PFNGLGETFRAGMENTLIGHTIVSGIXPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLGETFRAGMENTLIGHTIVSGIXPROC) (GLenum light, GLenum value, GLint* /;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum light,GLenum value,GLint * data)
PFNGLGETFRAGMENTMATERIALFVEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLGETFRAGMENTMATERIALFVEXTPROC) (GLenum face, GLenum pname, const /;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum face,GLenum pname,const GLfloat * params)
PFNGLGETFRAGMENTMATERIALFVSGIXPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLGETFRAGMENTMATERIALFVSGIXPROC) (GLenum face, GLenum pname, GLflo/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum face,GLenum pname,GLfloat * data)
PFNGLGETFRAGMENTMATERIALIVEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLGETFRAGMENTMATERIALIVEXTPROC) (GLenum face, GLenum pname, const /;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum face,GLenum pname,const GLint * params)
PFNGLGETFRAGMENTMATERIALIVSGIXPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLGETFRAGMENTMATERIALIVSGIXPROC) (GLenum face, GLenum pname, GLint/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum face,GLenum pname,GLint * data)
PFNGLGETFRAMEBUFFERATTACHMENTPARAMETERIVEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLGETFRAMEBUFFERATTACHMENTPARAMETERIVEXTPROC) (GLenum target, GLen/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLenum attachment,GLenum pname,GLint * params)
PFNGLGETFRAMEBUFFERATTACHMENTPARAMETERIVOESPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLGETFRAMEBUFFERATTACHMENTPARAMETERIVOESPROC) (GLenum target, GLen/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLenum attachment,GLenum pname,GLint * params)
PFNGLGETFRAMEBUFFERATTACHMENTPARAMETERIVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLGETFRAMEBUFFERATTACHMENTPARAMETERIVPROC) (GLenum target, GLenum /;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLenum attachment,GLenum pname,GLint * params)
PFNGLGETFRAMEBUFFERPARAMETERFVAMDPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLGETFRAMEBUFFERPARAMETERFVAMDPROC) (GLenum target, GLenum pname, /;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLenum pname,GLuint numsamples,GLuint pixelindex,GLsizei size,GLfloat * values)
PFNGLGETFRAMEBUFFERPARAMETERIVEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLGETFRAMEBUFFERPARAMETERIVEXTPROC) (GLuint framebuffer, GLenum pn/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint framebuffer,GLenum pname,GLint * param)
PFNGLGETFRAMEBUFFERPARAMETERIVMESAPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLGETFRAMEBUFFERPARAMETERIVMESAPROC) (GLenum target, GLenum pname,/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLenum pname,GLint * params)
PFNGLGETFRAMEBUFFERPARAMETERIVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLGETFRAMEBUFFERPARAMETERIVPROC) (GLenum target, GLenum pname, GLi/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLenum pname,GLint * params)
PFNGLGETFRAMEBUFFERPIXELLOCALSTORAGESIZEEXTPROC	./GL/glew.h	/^typedef GLsizei (GLAPIENTRY * PFNGLGETFRAMEBUFFERPIXELLOCALSTORAGESIZEEXTPROC) (GLuint target);$/;"	t	typeref:typename:GLsizei (GLAPIENTRY *)(GLuint target)
PFNGLGETGRAPHICSRESETSTATUSARBPROC	./GL/glew.h	/^typedef GLenum (GLAPIENTRY * PFNGLGETGRAPHICSRESETSTATUSARBPROC) (void);$/;"	t	typeref:typename:GLenum (GLAPIENTRY *)(void)
PFNGLGETGRAPHICSRESETSTATUSPROC	./GL/glew.h	/^typedef GLenum (GLAPIENTRY * PFNGLGETGRAPHICSRESETSTATUSPROC) (void);$/;"	t	typeref:typename:GLenum (GLAPIENTRY *)(void)
PFNGLGETHANDLEARBPROC	./GL/glew.h	/^typedef GLhandleARB (GLAPIENTRY * PFNGLGETHANDLEARBPROC) (GLenum pname);$/;"	t	typeref:typename:GLhandleARB (GLAPIENTRY *)(GLenum pname)
PFNGLGETHISTOGRAMEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLGETHISTOGRAMEXTPROC) (GLenum target, GLboolean reset, GLenum for/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLboolean reset,GLenum format,GLenum type,void * values)
PFNGLGETHISTOGRAMPARAMETERFVEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLGETHISTOGRAMPARAMETERFVEXTPROC) (GLenum target, GLenum pname, GL/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLenum pname,GLfloat * params)
PFNGLGETHISTOGRAMPARAMETERFVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLGETHISTOGRAMPARAMETERFVPROC) (GLenum target, GLenum pname, GLflo/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLenum pname,GLfloat * params)
PFNGLGETHISTOGRAMPARAMETERIVEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLGETHISTOGRAMPARAMETERIVEXTPROC) (GLenum target, GLenum pname, GL/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLenum pname,GLint * params)
PFNGLGETHISTOGRAMPARAMETERIVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLGETHISTOGRAMPARAMETERIVPROC) (GLenum target, GLenum pname, GLint/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLenum pname,GLint * params)
PFNGLGETHISTOGRAMPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLGETHISTOGRAMPROC) (GLenum target, GLboolean reset, GLenum format/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLboolean reset,GLenum format,GLenum type,void * values)
PFNGLGETIMAGEHANDLEARBPROC	./GL/glew.h	/^typedef GLuint64 (GLAPIENTRY * PFNGLGETIMAGEHANDLEARBPROC) (GLuint texture, GLint level, GLboole/;"	t	typeref:typename:GLuint64 (GLAPIENTRY *)(GLuint texture,GLint level,GLboolean layered,GLint layer,GLenum format)
PFNGLGETIMAGEHANDLENVPROC	./GL/glew.h	/^typedef GLuint64 (GLAPIENTRY * PFNGLGETIMAGEHANDLENVPROC) (GLuint texture, GLint level, GLboolea/;"	t	typeref:typename:GLuint64 (GLAPIENTRY *)(GLuint texture,GLint level,GLboolean layered,GLint layer,GLenum format)
PFNGLGETIMAGETRANSFORMPARAMETERFVHPPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLGETIMAGETRANSFORMPARAMETERFVHPPROC) (GLenum target, GLenum pname/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLenum pname,const GLfloat * params)
PFNGLGETIMAGETRANSFORMPARAMETERIVHPPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLGETIMAGETRANSFORMPARAMETERIVHPPROC) (GLenum target, GLenum pname/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLenum pname,const GLint * params)
PFNGLGETINFOLOGARBPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLGETINFOLOGARBPROC) (GLhandleARB obj, GLsizei maxLength, GLsizei*/;"	t	typeref:typename:void (GLAPIENTRY *)(GLhandleARB obj,GLsizei maxLength,GLsizei * length,GLcharARB * infoLog)
PFNGLGETINTEGER64I_VPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLGETINTEGER64I_VPROC) (GLenum pname, GLuint index, GLint64 * data/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum pname,GLuint index,GLint64 * data)
PFNGLGETINTEGER64VAPPLEPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLGETINTEGER64VAPPLEPROC) (GLenum pname, GLint64* params);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum pname,GLint64 * params)
PFNGLGETINTEGER64VEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLGETINTEGER64VEXTPROC) (GLenum pname, GLint64* data);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum pname,GLint64 * data)
PFNGLGETINTEGER64VPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLGETINTEGER64VPROC) (GLenum pname, GLint64* params);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum pname,GLint64 * params)
PFNGLGETINTEGERINDEXEDVEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLGETINTEGERINDEXEDVEXTPROC) (GLenum value, GLuint index, GLint* d/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum value,GLuint index,GLint * data)
PFNGLGETINTEGERI_VEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLGETINTEGERI_VEXTPROC) (GLenum target, GLuint index, GLint* data)/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLuint index,GLint * data)
PFNGLGETINTEGERI_VPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLGETINTEGERI_VPROC) (GLenum target, GLuint index, GLint* data);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLuint index,GLint * data)
PFNGLGETINTEGERUI64I_VNVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLGETINTEGERUI64I_VNVPROC) (GLenum value, GLuint index, GLuint64EX/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum value,GLuint index,GLuint64EXT result[])
PFNGLGETINTEGERUI64VNVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLGETINTEGERUI64VNVPROC) (GLenum value, GLuint64EXT* result);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum value,GLuint64EXT * result)
PFNGLGETINTERNALFORMATI64VPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLGETINTERNALFORMATI64VPROC) (GLenum target, GLenum internalformat/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLenum internalformat,GLenum pname,GLsizei bufSize,GLint64 * params)
PFNGLGETINTERNALFORMATIVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLGETINTERNALFORMATIVPROC) (GLenum target, GLenum internalformat, /;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLenum internalformat,GLenum pname,GLsizei bufSize,GLint * params)
PFNGLGETINTERNALFORMATSAMPLEIVNVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLGETINTERNALFORMATSAMPLEIVNVPROC) (GLenum target, GLenum internal/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLenum internalformat,GLsizei samples,GLenum pname,GLsizei bufSize,GLint * params)
PFNGLGETINVARIANTBOOLEANVEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLGETINVARIANTBOOLEANVEXTPROC) (GLuint id, GLenum value, GLboolean/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint id,GLenum value,GLboolean * data)
PFNGLGETINVARIANTFLOATVEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLGETINVARIANTFLOATVEXTPROC) (GLuint id, GLenum value, GLfloat *da/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint id,GLenum value,GLfloat * data)
PFNGLGETINVARIANTINTEGERVEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLGETINVARIANTINTEGERVEXTPROC) (GLuint id, GLenum value, GLint *da/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint id,GLenum value,GLint * data)
PFNGLGETLIGHTXVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLGETLIGHTXVPROC) (GLenum light, GLenum pname, GLfixed* params);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum light,GLenum pname,GLfixed * params)
PFNGLGETLOCALCONSTANTBOOLEANVEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLGETLOCALCONSTANTBOOLEANVEXTPROC) (GLuint id, GLenum value, GLboo/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint id,GLenum value,GLboolean * data)
PFNGLGETLOCALCONSTANTFLOATVEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLGETLOCALCONSTANTFLOATVEXTPROC) (GLuint id, GLenum value, GLfloat/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint id,GLenum value,GLfloat * data)
PFNGLGETLOCALCONSTANTINTEGERVEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLGETLOCALCONSTANTINTEGERVEXTPROC) (GLuint id, GLenum value, GLint/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint id,GLenum value,GLint * data)
PFNGLGETMAPATTRIBPARAMETERFVNVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLGETMAPATTRIBPARAMETERFVNVPROC) (GLenum target, GLuint index, GLe/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLuint index,GLenum pname,GLfloat * params)
PFNGLGETMAPATTRIBPARAMETERIVNVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLGETMAPATTRIBPARAMETERIVNVPROC) (GLenum target, GLuint index, GLe/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLuint index,GLenum pname,GLint * params)
PFNGLGETMAPCONTROLPOINTSNVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLGETMAPCONTROLPOINTSNVPROC) (GLenum target, GLuint index, GLenum /;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLuint index,GLenum type,GLsizei ustride,GLsizei vstride,GLboolean packed,void * points)
PFNGLGETMAPPARAMETERFVNVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLGETMAPPARAMETERFVNVPROC) (GLenum target, GLenum pname, GLfloat* /;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLenum pname,GLfloat * params)
PFNGLGETMAPPARAMETERIVNVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLGETMAPPARAMETERIVNVPROC) (GLenum target, GLenum pname, GLint* pa/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLenum pname,GLint * params)
PFNGLGETMATERIALXVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLGETMATERIALXVPROC) (GLenum face, GLenum pname, GLfixed* params);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum face,GLenum pname,GLfixed * params)
PFNGLGETMEMORYOBJECTDETACHEDRESOURCESUIVNVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLGETMEMORYOBJECTDETACHEDRESOURCESUIVNVPROC) (GLuint memory, GLenu/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint memory,GLenum pname,GLint first,GLsizei count,GLuint * params)
PFNGLGETMEMORYOBJECTPARAMETERIVEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLGETMEMORYOBJECTPARAMETERIVEXTPROC) (GLuint memoryObject, GLenum /;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint memoryObject,GLenum pname,GLint * params)
PFNGLGETMINMAXEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLGETMINMAXEXTPROC) (GLenum target, GLboolean reset, GLenum format/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLboolean reset,GLenum format,GLenum type,void * values)
PFNGLGETMINMAXPARAMETERFVEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLGETMINMAXPARAMETERFVEXTPROC) (GLenum target, GLenum pname, GLflo/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLenum pname,GLfloat * params)
PFNGLGETMINMAXPARAMETERFVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLGETMINMAXPARAMETERFVPROC) (GLenum target, GLenum pname, GLfloat /;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLenum pname,GLfloat * params)
PFNGLGETMINMAXPARAMETERIVEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLGETMINMAXPARAMETERIVEXTPROC) (GLenum target, GLenum pname, GLint/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLenum pname,GLint * params)
PFNGLGETMINMAXPARAMETERIVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLGETMINMAXPARAMETERIVPROC) (GLenum target, GLenum pname, GLint *p/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLenum pname,GLint * params)
PFNGLGETMINMAXPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLGETMINMAXPROC) (GLenum target, GLboolean reset, GLenum format, G/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLboolean reset,GLenum format,GLenum types,void * values)
PFNGLGETMPEGPARAMETERFVSGIXPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLGETMPEGPARAMETERFVSGIXPROC) (GLenum target, GLenum pname, GLfloa/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLenum pname,GLfloat * params)
PFNGLGETMPEGPARAMETERIVSGIXPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLGETMPEGPARAMETERIVSGIXPROC) (GLenum target, GLenum pname, GLint*/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLenum pname,GLint * params)
PFNGLGETMPEGPREDICTORSGIXPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLGETMPEGPREDICTORSGIXPROC) (GLenum target, GLenum format, GLenum /;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLenum format,GLenum type,void * pixels)
PFNGLGETMPEGQUANTTABLEUBVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLGETMPEGQUANTTABLEUBVPROC) (GLenum target, GLubyte* values);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLubyte * values)
PFNGLGETMULTISAMPLEFVNVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLGETMULTISAMPLEFVNVPROC) (GLenum pname, GLuint index, GLfloat* va/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum pname,GLuint index,GLfloat * val)
PFNGLGETMULTISAMPLEFVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLGETMULTISAMPLEFVPROC) (GLenum pname, GLuint index, GLfloat* val)/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum pname,GLuint index,GLfloat * val)
PFNGLGETMULTITEXENVFVEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLGETMULTITEXENVFVEXTPROC) (GLenum texunit, GLenum target, GLenum /;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum texunit,GLenum target,GLenum pname,GLfloat * params)
PFNGLGETMULTITEXENVIVEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLGETMULTITEXENVIVEXTPROC) (GLenum texunit, GLenum target, GLenum /;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum texunit,GLenum target,GLenum pname,GLint * params)
PFNGLGETMULTITEXGENDVEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLGETMULTITEXGENDVEXTPROC) (GLenum texunit, GLenum coord, GLenum p/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum texunit,GLenum coord,GLenum pname,GLdouble * params)
PFNGLGETMULTITEXGENFVEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLGETMULTITEXGENFVEXTPROC) (GLenum texunit, GLenum coord, GLenum p/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum texunit,GLenum coord,GLenum pname,GLfloat * params)
PFNGLGETMULTITEXGENIVEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLGETMULTITEXGENIVEXTPROC) (GLenum texunit, GLenum coord, GLenum p/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum texunit,GLenum coord,GLenum pname,GLint * params)
PFNGLGETMULTITEXIMAGEEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLGETMULTITEXIMAGEEXTPROC) (GLenum texunit, GLenum target, GLint l/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum texunit,GLenum target,GLint level,GLenum format,GLenum type,void * pixels)
PFNGLGETMULTITEXLEVELPARAMETERFVEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLGETMULTITEXLEVELPARAMETERFVEXTPROC) (GLenum texunit, GLenum targ/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum texunit,GLenum target,GLint level,GLenum pname,GLfloat * params)
PFNGLGETMULTITEXLEVELPARAMETERIVEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLGETMULTITEXLEVELPARAMETERIVEXTPROC) (GLenum texunit, GLenum targ/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum texunit,GLenum target,GLint level,GLenum pname,GLint * params)
PFNGLGETMULTITEXPARAMETERFVEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLGETMULTITEXPARAMETERFVEXTPROC) (GLenum texunit, GLenum target, G/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum texunit,GLenum target,GLenum pname,GLfloat * params)
PFNGLGETMULTITEXPARAMETERIIVEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLGETMULTITEXPARAMETERIIVEXTPROC) (GLenum texunit, GLenum target, /;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum texunit,GLenum target,GLenum pname,GLint * params)
PFNGLGETMULTITEXPARAMETERIUIVEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLGETMULTITEXPARAMETERIUIVEXTPROC) (GLenum texunit, GLenum target,/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum texunit,GLenum target,GLenum pname,GLuint * params)
PFNGLGETMULTITEXPARAMETERIVEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLGETMULTITEXPARAMETERIVEXTPROC) (GLenum texunit, GLenum target, G/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum texunit,GLenum target,GLenum pname,GLint * params)
PFNGLGETNAMEDBUFFERPARAMETERI64VPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLGETNAMEDBUFFERPARAMETERI64VPROC) (GLuint buffer, GLenum pname, G/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint buffer,GLenum pname,GLint64 * params)
PFNGLGETNAMEDBUFFERPARAMETERIVEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLGETNAMEDBUFFERPARAMETERIVEXTPROC) (GLuint buffer, GLenum pname, /;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint buffer,GLenum pname,GLint * params)
PFNGLGETNAMEDBUFFERPARAMETERIVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLGETNAMEDBUFFERPARAMETERIVPROC) (GLuint buffer, GLenum pname, GLi/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint buffer,GLenum pname,GLint * params)
PFNGLGETNAMEDBUFFERPARAMETERUI64VNVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLGETNAMEDBUFFERPARAMETERUI64VNVPROC) (GLuint buffer, GLenum pname/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint buffer,GLenum pname,GLuint64EXT * params)
PFNGLGETNAMEDBUFFERPOINTERVEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLGETNAMEDBUFFERPOINTERVEXTPROC) (GLuint buffer, GLenum pname, voi/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint buffer,GLenum pname,void ** params)
PFNGLGETNAMEDBUFFERPOINTERVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLGETNAMEDBUFFERPOINTERVPROC) (GLuint buffer, GLenum pname, void**/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint buffer,GLenum pname,void ** params)
PFNGLGETNAMEDBUFFERSUBDATAEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLGETNAMEDBUFFERSUBDATAEXTPROC) (GLuint buffer, GLintptr offset, G/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint buffer,GLintptr offset,GLsizeiptr size,void * data)
PFNGLGETNAMEDBUFFERSUBDATAPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLGETNAMEDBUFFERSUBDATAPROC) (GLuint buffer, GLintptr offset, GLsi/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint buffer,GLintptr offset,GLsizeiptr size,void * data)
PFNGLGETNAMEDFRAMEBUFFERATTACHMENTPARAMETERIVEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLGETNAMEDFRAMEBUFFERATTACHMENTPARAMETERIVEXTPROC) (GLuint framebu/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint framebuffer,GLenum attachment,GLenum pname,GLint * params)
PFNGLGETNAMEDFRAMEBUFFERATTACHMENTPARAMETERIVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLGETNAMEDFRAMEBUFFERATTACHMENTPARAMETERIVPROC) (GLuint framebuffe/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint framebuffer,GLenum attachment,GLenum pname,GLint * params)
PFNGLGETNAMEDFRAMEBUFFERPARAMETERFVAMDPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLGETNAMEDFRAMEBUFFERPARAMETERFVAMDPROC) (GLuint framebuffer, GLen/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint framebuffer,GLenum pname,GLuint numsamples,GLuint pixelindex,GLsizei size,GLfloat * values)
PFNGLGETNAMEDFRAMEBUFFERPARAMETERIVEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLGETNAMEDFRAMEBUFFERPARAMETERIVEXTPROC) (GLuint framebuffer, GLen/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint framebuffer,GLenum pname,GLint * params)
PFNGLGETNAMEDFRAMEBUFFERPARAMETERIVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLGETNAMEDFRAMEBUFFERPARAMETERIVPROC) (GLuint framebuffer, GLenum /;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint framebuffer,GLenum pname,GLint * param)
PFNGLGETNAMEDPROGRAMIVEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLGETNAMEDPROGRAMIVEXTPROC) (GLuint program, GLenum target, GLenum/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint program,GLenum target,GLenum pname,GLint * params)
PFNGLGETNAMEDPROGRAMLOCALPARAMETERDVEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLGETNAMEDPROGRAMLOCALPARAMETERDVEXTPROC) (GLuint program, GLenum /;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint program,GLenum target,GLuint index,GLdouble * params)
PFNGLGETNAMEDPROGRAMLOCALPARAMETERFVEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLGETNAMEDPROGRAMLOCALPARAMETERFVEXTPROC) (GLuint program, GLenum /;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint program,GLenum target,GLuint index,GLfloat * params)
PFNGLGETNAMEDPROGRAMLOCALPARAMETERIIVEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLGETNAMEDPROGRAMLOCALPARAMETERIIVEXTPROC) (GLuint program, GLenum/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint program,GLenum target,GLuint index,GLint * params)
PFNGLGETNAMEDPROGRAMLOCALPARAMETERIUIVEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLGETNAMEDPROGRAMLOCALPARAMETERIUIVEXTPROC) (GLuint program, GLenu/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint program,GLenum target,GLuint index,GLuint * params)
PFNGLGETNAMEDPROGRAMSTRINGEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLGETNAMEDPROGRAMSTRINGEXTPROC) (GLuint program, GLenum target, GL/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint program,GLenum target,GLenum pname,void * string)
PFNGLGETNAMEDRENDERBUFFERPARAMETERIVEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLGETNAMEDRENDERBUFFERPARAMETERIVEXTPROC) (GLuint renderbuffer, GL/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint renderbuffer,GLenum pname,GLint * params)
PFNGLGETNAMEDRENDERBUFFERPARAMETERIVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLGETNAMEDRENDERBUFFERPARAMETERIVPROC) (GLuint renderbuffer, GLenu/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint renderbuffer,GLenum pname,GLint * params)
PFNGLGETNAMEDSTRINGARBPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLGETNAMEDSTRINGARBPROC) (GLint namelen, const GLchar* name, GLsiz/;"	t	typeref:typename:void (GLAPIENTRY *)(GLint namelen,const GLchar * name,GLsizei bufSize,GLint * stringlen,GLchar * string)
PFNGLGETNAMEDSTRINGIVARBPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLGETNAMEDSTRINGIVARBPROC) (GLint namelen, const GLchar* name, GLe/;"	t	typeref:typename:void (GLAPIENTRY *)(GLint namelen,const GLchar * name,GLenum pname,GLint * params)
PFNGLGETNCOLORTABLEARBPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLGETNCOLORTABLEARBPROC) (GLenum target, GLenum format, GLenum typ/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLenum format,GLenum type,GLsizei bufSize,void * table)
PFNGLGETNCOMPRESSEDTEXIMAGEARBPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLGETNCOMPRESSEDTEXIMAGEARBPROC) (GLenum target, GLint lod, GLsize/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLint lod,GLsizei bufSize,void * img)
PFNGLGETNCOMPRESSEDTEXIMAGEPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLGETNCOMPRESSEDTEXIMAGEPROC) (GLenum target, GLint lod, GLsizei b/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLint lod,GLsizei bufSize,GLvoid * pixels)
PFNGLGETNCONVOLUTIONFILTERARBPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLGETNCONVOLUTIONFILTERARBPROC) (GLenum target, GLenum format, GLe/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLenum format,GLenum type,GLsizei bufSize,void * image)
PFNGLGETNEXTPERFQUERYIDINTELPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLGETNEXTPERFQUERYIDINTELPROC) (GLuint queryId, GLuint* nextQueryI/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint queryId,GLuint * nextQueryId)
PFNGLGETNHISTOGRAMARBPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLGETNHISTOGRAMARBPROC) (GLenum target, GLboolean reset, GLenum fo/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLboolean reset,GLenum format,GLenum type,GLsizei bufSize,void * values)
PFNGLGETNMAPDVARBPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLGETNMAPDVARBPROC) (GLenum target, GLenum query, GLsizei bufSize,/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLenum query,GLsizei bufSize,GLdouble * v)
PFNGLGETNMAPFVARBPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLGETNMAPFVARBPROC) (GLenum target, GLenum query, GLsizei bufSize,/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLenum query,GLsizei bufSize,GLfloat * v)
PFNGLGETNMAPIVARBPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLGETNMAPIVARBPROC) (GLenum target, GLenum query, GLsizei bufSize,/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLenum query,GLsizei bufSize,GLint * v)
PFNGLGETNMINMAXARBPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLGETNMINMAXARBPROC) (GLenum target, GLboolean reset, GLenum forma/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLboolean reset,GLenum format,GLenum type,GLsizei bufSize,void * values)
PFNGLGETNONLINLIGHTFVSGIXPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLGETNONLINLIGHTFVSGIXPROC) (GLenum light, GLenum pname, GLint* te/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum light,GLenum pname,GLint * terms,GLfloat * data)
PFNGLGETNONLINMATERIALFVSGIXPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLGETNONLINMATERIALFVSGIXPROC) (GLenum face, GLenum pname, GLint* /;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum face,GLenum pname,GLint * terms,const GLfloat * data)
PFNGLGETNPIXELMAPFVARBPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLGETNPIXELMAPFVARBPROC) (GLenum map, GLsizei bufSize, GLfloat* va/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum map,GLsizei bufSize,GLfloat * values)
PFNGLGETNPIXELMAPUIVARBPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLGETNPIXELMAPUIVARBPROC) (GLenum map, GLsizei bufSize, GLuint* va/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum map,GLsizei bufSize,GLuint * values)
PFNGLGETNPIXELMAPUSVARBPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLGETNPIXELMAPUSVARBPROC) (GLenum map, GLsizei bufSize, GLushort* /;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum map,GLsizei bufSize,GLushort * values)
PFNGLGETNPOLYGONSTIPPLEARBPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLGETNPOLYGONSTIPPLEARBPROC) (GLsizei bufSize, GLubyte* pattern);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLsizei bufSize,GLubyte * pattern)
PFNGLGETNSEPARABLEFILTERARBPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLGETNSEPARABLEFILTERARBPROC) (GLenum target, GLenum format, GLenu/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLenum format,GLenum type,GLsizei rowBufSize,void * row,GLsizei columnBufSize,void * column,void * span)
PFNGLGETNTEXIMAGEARBPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLGETNTEXIMAGEARBPROC) (GLenum target, GLint level, GLenum format,/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLint level,GLenum format,GLenum type,GLsizei bufSize,void * img)
PFNGLGETNTEXIMAGEPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLGETNTEXIMAGEPROC) (GLenum tex, GLint level, GLenum format, GLenu/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum tex,GLint level,GLenum format,GLenum type,GLsizei bufSize,GLvoid * pixels)
PFNGLGETNUNIFORMDVARBPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLGETNUNIFORMDVARBPROC) (GLuint program, GLint location, GLsizei b/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint program,GLint location,GLsizei bufSize,GLdouble * params)
PFNGLGETNUNIFORMDVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLGETNUNIFORMDVPROC) (GLuint program, GLint location, GLsizei bufS/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint program,GLint location,GLsizei bufSize,GLdouble * params)
PFNGLGETNUNIFORMFVARBPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLGETNUNIFORMFVARBPROC) (GLuint program, GLint location, GLsizei b/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint program,GLint location,GLsizei bufSize,GLfloat * params)
PFNGLGETNUNIFORMFVEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLGETNUNIFORMFVEXTPROC) (GLuint program, GLint location, GLsizei b/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint program,GLint location,GLsizei bufSize,GLfloat * params)
PFNGLGETNUNIFORMFVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLGETNUNIFORMFVPROC) (GLuint program, GLint location, GLsizei bufS/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint program,GLint location,GLsizei bufSize,GLfloat * params)
PFNGLGETNUNIFORMI64VARBPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLGETNUNIFORMI64VARBPROC) (GLuint program, GLint location, GLsizei/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint program,GLint location,GLsizei bufSize,GLint64 * params)
PFNGLGETNUNIFORMIVARBPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLGETNUNIFORMIVARBPROC) (GLuint program, GLint location, GLsizei b/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint program,GLint location,GLsizei bufSize,GLint * params)
PFNGLGETNUNIFORMIVEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLGETNUNIFORMIVEXTPROC) (GLuint program, GLint location, GLsizei b/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint program,GLint location,GLsizei bufSize,GLint * params)
PFNGLGETNUNIFORMIVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLGETNUNIFORMIVPROC) (GLuint program, GLint location, GLsizei bufS/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint program,GLint location,GLsizei bufSize,GLint * params)
PFNGLGETNUNIFORMUI64VARBPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLGETNUNIFORMUI64VARBPROC) (GLuint program, GLint location, GLsize/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint program,GLint location,GLsizei bufSize,GLuint64 * params)
PFNGLGETNUNIFORMUIVARBPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLGETNUNIFORMUIVARBPROC) (GLuint program, GLint location, GLsizei /;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint program,GLint location,GLsizei bufSize,GLuint * params)
PFNGLGETNUNIFORMUIVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLGETNUNIFORMUIVPROC) (GLuint program, GLint location, GLsizei buf/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint program,GLint location,GLsizei bufSize,GLuint * params)
PFNGLGETOBJECTBUFFERFVATIPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLGETOBJECTBUFFERFVATIPROC) (GLuint buffer, GLenum pname, GLfloat*/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint buffer,GLenum pname,GLfloat * params)
PFNGLGETOBJECTBUFFERIVATIPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLGETOBJECTBUFFERIVATIPROC) (GLuint buffer, GLenum pname, GLint* p/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint buffer,GLenum pname,GLint * params)
PFNGLGETOBJECTLABELEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLGETOBJECTLABELEXTPROC) (GLenum type, GLuint object, GLsizei bufS/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum type,GLuint object,GLsizei bufSize,GLsizei * length,GLchar * label)
PFNGLGETOBJECTLABELPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLGETOBJECTLABELPROC) (GLenum identifier, GLuint name, GLsizei buf/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum identifier,GLuint name,GLsizei bufSize,GLsizei * length,GLchar * label)
PFNGLGETOBJECTPARAMETERFVARBPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLGETOBJECTPARAMETERFVARBPROC) (GLhandleARB obj, GLenum pname, GLf/;"	t	typeref:typename:void (GLAPIENTRY *)(GLhandleARB obj,GLenum pname,GLfloat * params)
PFNGLGETOBJECTPARAMETERIVAPPLEPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLGETOBJECTPARAMETERIVAPPLEPROC) (GLenum objectType, GLuint name, /;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum objectType,GLuint name,GLenum pname,GLint * params)
PFNGLGETOBJECTPARAMETERIVARBPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLGETOBJECTPARAMETERIVARBPROC) (GLhandleARB obj, GLenum pname, GLi/;"	t	typeref:typename:void (GLAPIENTRY *)(GLhandleARB obj,GLenum pname,GLint * params)
PFNGLGETOBJECTPTRLABELPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLGETOBJECTPTRLABELPROC) (void* ptr, GLsizei bufSize, GLsizei* len/;"	t	typeref:typename:void (GLAPIENTRY *)(void * ptr,GLsizei bufSize,GLsizei * length,GLchar * label)
PFNGLGETOCCLUSIONQUERYIVNVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLGETOCCLUSIONQUERYIVNVPROC) (GLuint id, GLenum pname, GLint* para/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint id,GLenum pname,GLint * params)
PFNGLGETOCCLUSIONQUERYUIVNVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLGETOCCLUSIONQUERYUIVNVPROC) (GLuint id, GLenum pname, GLuint* pa/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint id,GLenum pname,GLuint * params)
PFNGLGETPATHCOLORGENFVNVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLGETPATHCOLORGENFVNVPROC) (GLenum color, GLenum pname, GLfloat* v/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum color,GLenum pname,GLfloat * value)
PFNGLGETPATHCOLORGENIVNVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLGETPATHCOLORGENIVNVPROC) (GLenum color, GLenum pname, GLint* val/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum color,GLenum pname,GLint * value)
PFNGLGETPATHCOMMANDSNVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLGETPATHCOMMANDSNVPROC) (GLuint path, GLubyte* commands);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint path,GLubyte * commands)
PFNGLGETPATHCOORDSNVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLGETPATHCOORDSNVPROC) (GLuint path, GLfloat* coords);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint path,GLfloat * coords)
PFNGLGETPATHDASHARRAYNVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLGETPATHDASHARRAYNVPROC) (GLuint path, GLfloat* dashArray);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint path,GLfloat * dashArray)
PFNGLGETPATHLENGTHNVPROC	./GL/glew.h	/^typedef GLfloat (GLAPIENTRY * PFNGLGETPATHLENGTHNVPROC) (GLuint path, GLsizei startSegment, GLsi/;"	t	typeref:typename:GLfloat (GLAPIENTRY *)(GLuint path,GLsizei startSegment,GLsizei numSegments)
PFNGLGETPATHMETRICRANGENVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLGETPATHMETRICRANGENVPROC) (GLbitfield metricQueryMask, GLuint fi/;"	t	typeref:typename:void (GLAPIENTRY *)(GLbitfield metricQueryMask,GLuint firstPathName,GLsizei numPaths,GLsizei stride,GLfloat * metrics)
PFNGLGETPATHMETRICSNVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLGETPATHMETRICSNVPROC) (GLbitfield metricQueryMask, GLsizei numPa/;"	t	typeref:typename:void (GLAPIENTRY *)(GLbitfield metricQueryMask,GLsizei numPaths,GLenum pathNameType,const void * paths,GLuint pathBase,GLsizei stride,GLfloat * metrics)
PFNGLGETPATHPARAMETERFVNVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLGETPATHPARAMETERFVNVPROC) (GLuint path, GLenum pname, GLfloat* v/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint path,GLenum pname,GLfloat * value)
PFNGLGETPATHPARAMETERIVNVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLGETPATHPARAMETERIVNVPROC) (GLuint path, GLenum pname, GLint* val/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint path,GLenum pname,GLint * value)
PFNGLGETPATHSPACINGNVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLGETPATHSPACINGNVPROC) (GLenum pathListMode, GLsizei numPaths, GL/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum pathListMode,GLsizei numPaths,GLenum pathNameType,const void * paths,GLuint pathBase,GLfloat advanceScale,GLfloat kerningScale,GLenum transformType,GLfloat * returnedSpacing)
PFNGLGETPATHTEXGENFVNVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLGETPATHTEXGENFVNVPROC) (GLenum texCoordSet, GLenum pname, GLfloa/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum texCoordSet,GLenum pname,GLfloat * value)
PFNGLGETPATHTEXGENIVNVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLGETPATHTEXGENIVNVPROC) (GLenum texCoordSet, GLenum pname, GLint*/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum texCoordSet,GLenum pname,GLint * value)
PFNGLGETPERFCOUNTERINFOINTELPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLGETPERFCOUNTERINFOINTELPROC) (GLuint queryId, GLuint counterId, /;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint queryId,GLuint counterId,GLuint counterNameLength,GLchar * counterName,GLuint counterDescLength,GLchar * counterDesc,GLuint * counterOffset,GLuint * counterDataSize,GLuint * counterTypeEnum,GLuint * counterDataTypeEnum,GLuint64 * rawCounterMaxValue)
PFNGLGETPERFMONITORCOUNTERDATAAMDPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLGETPERFMONITORCOUNTERDATAAMDPROC) (GLuint monitor, GLenum pname,/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint monitor,GLenum pname,GLsizei dataSize,GLuint * data,GLint * bytesWritten)
PFNGLGETPERFMONITORCOUNTERINFOAMDPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLGETPERFMONITORCOUNTERINFOAMDPROC) (GLuint group, GLuint counter,/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint group,GLuint counter,GLenum pname,void * data)
PFNGLGETPERFMONITORCOUNTERSAMDPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLGETPERFMONITORCOUNTERSAMDPROC) (GLuint group, GLint* numCounters/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint group,GLint * numCounters,GLint * maxActiveCounters,GLsizei countersSize,GLuint * counters)
PFNGLGETPERFMONITORCOUNTERSTRINGAMDPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLGETPERFMONITORCOUNTERSTRINGAMDPROC) (GLuint group, GLuint counte/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint group,GLuint counter,GLsizei bufSize,GLsizei * length,GLchar * counterString)
PFNGLGETPERFMONITORGROUPSAMDPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLGETPERFMONITORGROUPSAMDPROC) (GLint* numGroups, GLsizei groupsSi/;"	t	typeref:typename:void (GLAPIENTRY *)(GLint * numGroups,GLsizei groupsSize,GLuint * groups)
PFNGLGETPERFMONITORGROUPSTRINGAMDPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLGETPERFMONITORGROUPSTRINGAMDPROC) (GLuint group, GLsizei bufSize/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint group,GLsizei bufSize,GLsizei * length,GLchar * groupString)
PFNGLGETPERFQUERYDATAINTELPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLGETPERFQUERYDATAINTELPROC) (GLuint queryHandle, GLuint flags, GL/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint queryHandle,GLuint flags,GLsizei dataSize,void * data,GLuint * bytesWritten)
PFNGLGETPERFQUERYIDBYNAMEINTELPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLGETPERFQUERYIDBYNAMEINTELPROC) (GLchar* queryName, GLuint *query/;"	t	typeref:typename:void (GLAPIENTRY *)(GLchar * queryName,GLuint * queryId)
PFNGLGETPERFQUERYINFOINTELPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLGETPERFQUERYINFOINTELPROC) (GLuint queryId, GLuint queryNameLeng/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint queryId,GLuint queryNameLength,GLchar * queryName,GLuint * dataSize,GLuint * noCounters,GLuint * noInstances,GLuint * capsMask)
PFNGLGETPIXELTRANSFORMPARAMETERFVEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLGETPIXELTRANSFORMPARAMETERFVEXTPROC) (GLenum target, GLenum pnam/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLenum pname,const GLfloat * params)
PFNGLGETPIXELTRANSFORMPARAMETERFVSGIPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLGETPIXELTRANSFORMPARAMETERFVSGIPROC) (GLenum target, GLenum pnam/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLenum pname,GLfloat * params)
PFNGLGETPIXELTRANSFORMPARAMETERIVEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLGETPIXELTRANSFORMPARAMETERIVEXTPROC) (GLenum target, GLenum pnam/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLenum pname,const GLint * params)
PFNGLGETPIXELTRANSFORMPARAMETERIVSGIPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLGETPIXELTRANSFORMPARAMETERIVSGIPROC) (GLenum target, GLenum pnam/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLenum pname,GLint * params)
PFNGLGETPOINTERINDEXEDVEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLGETPOINTERINDEXEDVEXTPROC) (GLenum target, GLuint index, void** /;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLuint index,void ** params)
PFNGLGETPOINTERI_VEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLGETPOINTERI_VEXTPROC) (GLenum pname, GLuint index, void** params/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum pname,GLuint index,void ** params)
PFNGLGETPROCADDRESSREGALPROC	./GL/glew.h	/^typedef void * (GLAPIENTRY * PFNGLGETPROCADDRESSREGALPROC) (const GLchar *name);$/;"	t	typeref:typename:void * (GLAPIENTRY *)(const GLchar * name)
PFNGLGETPROGRAMBINARYOESPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLGETPROGRAMBINARYOESPROC) (GLuint program, GLsizei bufSize, GLsiz/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint program,GLsizei bufSize,GLsizei * length,GLenum * binaryFormat,void * binary)
PFNGLGETPROGRAMBINARYPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLGETPROGRAMBINARYPROC) (GLuint program, GLsizei bufSize, GLsizei*/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint program,GLsizei bufSize,GLsizei * length,GLenum * binaryFormat,void * binary)
PFNGLGETPROGRAMENVPARAMETERDVARBPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLGETPROGRAMENVPARAMETERDVARBPROC) (GLenum target, GLuint index, G/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLuint index,GLdouble * params)
PFNGLGETPROGRAMENVPARAMETERFVARBPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLGETPROGRAMENVPARAMETERFVARBPROC) (GLenum target, GLuint index, G/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLuint index,GLfloat * params)
PFNGLGETPROGRAMINFOLOGPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLGETPROGRAMINFOLOGPROC) (GLuint program, GLsizei bufSize, GLsizei/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint program,GLsizei bufSize,GLsizei * length,GLchar * infoLog)
PFNGLGETPROGRAMINTERFACEIVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLGETPROGRAMINTERFACEIVPROC) (GLuint program, GLenum programInterf/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint program,GLenum programInterface,GLenum pname,GLint * params)
PFNGLGETPROGRAMIVARBPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLGETPROGRAMIVARBPROC) (GLenum target, GLenum pname, GLint* params/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLenum pname,GLint * params)
PFNGLGETPROGRAMIVNVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLGETPROGRAMIVNVPROC) (GLuint id, GLenum pname, GLint* params);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint id,GLenum pname,GLint * params)
PFNGLGETPROGRAMIVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLGETPROGRAMIVPROC) (GLuint program, GLenum pname, GLint* param);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint program,GLenum pname,GLint * param)
PFNGLGETPROGRAMLOCALPARAMETERDVARBPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLGETPROGRAMLOCALPARAMETERDVARBPROC) (GLenum target, GLuint index,/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLuint index,GLdouble * params)
PFNGLGETPROGRAMLOCALPARAMETERFVARBPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLGETPROGRAMLOCALPARAMETERFVARBPROC) (GLenum target, GLuint index,/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLuint index,GLfloat * params)
PFNGLGETPROGRAMNAMEDPARAMETERDVNVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLGETPROGRAMNAMEDPARAMETERDVNVPROC) (GLuint id, GLsizei len, const/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint id,GLsizei len,const GLubyte * name,GLdouble * params)
PFNGLGETPROGRAMNAMEDPARAMETERFVNVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLGETPROGRAMNAMEDPARAMETERFVNVPROC) (GLuint id, GLsizei len, const/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint id,GLsizei len,const GLubyte * name,GLfloat * params)
PFNGLGETPROGRAMPARAMETERDVNVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLGETPROGRAMPARAMETERDVNVPROC) (GLenum target, GLuint index, GLenu/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLuint index,GLenum pname,GLdouble * params)
PFNGLGETPROGRAMPARAMETERFVNVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLGETPROGRAMPARAMETERFVNVPROC) (GLenum target, GLuint index, GLenu/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLuint index,GLenum pname,GLfloat * params)
PFNGLGETPROGRAMPIPELINEINFOLOGPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLGETPROGRAMPIPELINEINFOLOGPROC) (GLuint pipeline, GLsizei bufSize/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint pipeline,GLsizei bufSize,GLsizei * length,GLchar * infoLog)
PFNGLGETPROGRAMPIPELINEIVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLGETPROGRAMPIPELINEIVPROC) (GLuint pipeline, GLenum pname, GLint*/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint pipeline,GLenum pname,GLint * params)
PFNGLGETPROGRAMRESOURCEFVNVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLGETPROGRAMRESOURCEFVNVPROC) (GLuint program, GLenum programInter/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint program,GLenum programInterface,GLuint index,GLsizei propCount,const GLenum * props,GLsizei bufSize,GLsizei * length,GLfloat * params)
PFNGLGETPROGRAMRESOURCEINDEXPROC	./GL/glew.h	/^typedef GLuint (GLAPIENTRY * PFNGLGETPROGRAMRESOURCEINDEXPROC) (GLuint program, GLenum programIn/;"	t	typeref:typename:GLuint (GLAPIENTRY *)(GLuint program,GLenum programInterface,const GLchar * name)
PFNGLGETPROGRAMRESOURCEIVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLGETPROGRAMRESOURCEIVPROC) (GLuint program, GLenum programInterfa/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint program,GLenum programInterface,GLuint index,GLsizei propCount,const GLenum * props,GLsizei bufSize,GLsizei * length,GLint * params)
PFNGLGETPROGRAMRESOURCELOCATIONINDEXEXTPROC	./GL/glew.h	/^typedef GLint (GLAPIENTRY * PFNGLGETPROGRAMRESOURCELOCATIONINDEXEXTPROC) (GLuint program, GLenum/;"	t	typeref:typename:GLint (GLAPIENTRY *)(GLuint program,GLenum programInterface,const GLchar * name)
PFNGLGETPROGRAMRESOURCELOCATIONINDEXPROC	./GL/glew.h	/^typedef GLint (GLAPIENTRY * PFNGLGETPROGRAMRESOURCELOCATIONINDEXPROC) (GLuint program, GLenum pr/;"	t	typeref:typename:GLint (GLAPIENTRY *)(GLuint program,GLenum programInterface,const GLchar * name)
PFNGLGETPROGRAMRESOURCELOCATIONPROC	./GL/glew.h	/^typedef GLint (GLAPIENTRY * PFNGLGETPROGRAMRESOURCELOCATIONPROC) (GLuint program, GLenum program/;"	t	typeref:typename:GLint (GLAPIENTRY *)(GLuint program,GLenum programInterface,const GLchar * name)
PFNGLGETPROGRAMRESOURCENAMEPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLGETPROGRAMRESOURCENAMEPROC) (GLuint program, GLenum programInter/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint program,GLenum programInterface,GLuint index,GLsizei bufSize,GLsizei * length,GLchar * name)
PFNGLGETPROGRAMSTAGEIVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLGETPROGRAMSTAGEIVPROC) (GLuint program, GLenum shadertype, GLenu/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint program,GLenum shadertype,GLenum pname,GLint * values)
PFNGLGETPROGRAMSTRINGARBPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLGETPROGRAMSTRINGARBPROC) (GLenum target, GLenum pname, void *str/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLenum pname,void * string)
PFNGLGETPROGRAMSTRINGNVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLGETPROGRAMSTRINGNVPROC) (GLuint id, GLenum pname, GLubyte* progr/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint id,GLenum pname,GLubyte * program)
PFNGLGETQUERYBUFFEROBJECTI64VPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLGETQUERYBUFFEROBJECTI64VPROC) (GLuint id, GLuint buffer, GLenum /;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint id,GLuint buffer,GLenum pname,GLintptr offset)
PFNGLGETQUERYBUFFEROBJECTIVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLGETQUERYBUFFEROBJECTIVPROC) (GLuint id, GLuint buffer, GLenum pn/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint id,GLuint buffer,GLenum pname,GLintptr offset)
PFNGLGETQUERYBUFFEROBJECTUI64VPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLGETQUERYBUFFEROBJECTUI64VPROC) (GLuint id, GLuint buffer, GLenum/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint id,GLuint buffer,GLenum pname,GLintptr offset)
PFNGLGETQUERYBUFFEROBJECTUIVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLGETQUERYBUFFEROBJECTUIVPROC) (GLuint id, GLuint buffer, GLenum p/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint id,GLuint buffer,GLenum pname,GLintptr offset)
PFNGLGETQUERYINDEXEDIVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLGETQUERYINDEXEDIVPROC) (GLenum target, GLuint index, GLenum pnam/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLuint index,GLenum pname,GLint * params)
PFNGLGETQUERYIVANGLEPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLGETQUERYIVANGLEPROC) (GLenum target, GLenum pname, GLint* params/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLenum pname,GLint * params)
PFNGLGETQUERYIVARBPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLGETQUERYIVARBPROC) (GLenum target, GLenum pname, GLint* params);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLenum pname,GLint * params)
PFNGLGETQUERYIVEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLGETQUERYIVEXTPROC) (GLenum target, GLenum pname, GLint* params);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLenum pname,GLint * params)
PFNGLGETQUERYIVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLGETQUERYIVPROC) (GLenum target, GLenum pname, GLint* params);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLenum pname,GLint * params)
PFNGLGETQUERYOBJECTI64VANGLEPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLGETQUERYOBJECTI64VANGLEPROC) (GLuint id, GLenum pname, GLint64* /;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint id,GLenum pname,GLint64 * params)
PFNGLGETQUERYOBJECTI64VEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLGETQUERYOBJECTI64VEXTPROC) (GLuint id, GLenum pname, GLint64EXT /;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint id,GLenum pname,GLint64EXT * params)
PFNGLGETQUERYOBJECTI64VPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLGETQUERYOBJECTI64VPROC) (GLuint id, GLenum pname, GLint64* param/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint id,GLenum pname,GLint64 * params)
PFNGLGETQUERYOBJECTIVANGLEPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLGETQUERYOBJECTIVANGLEPROC) (GLuint id, GLenum pname, GLint* para/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint id,GLenum pname,GLint * params)
PFNGLGETQUERYOBJECTIVARBPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLGETQUERYOBJECTIVARBPROC) (GLuint id, GLenum pname, GLint* params/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint id,GLenum pname,GLint * params)
PFNGLGETQUERYOBJECTIVEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLGETQUERYOBJECTIVEXTPROC) (GLuint id, GLenum pname, GLint* params/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint id,GLenum pname,GLint * params)
PFNGLGETQUERYOBJECTIVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLGETQUERYOBJECTIVPROC) (GLuint id, GLenum pname, GLint* params);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint id,GLenum pname,GLint * params)
PFNGLGETQUERYOBJECTUI64VANGLEPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLGETQUERYOBJECTUI64VANGLEPROC) (GLuint id, GLenum pname, GLuint64/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint id,GLenum pname,GLuint64 * params)
PFNGLGETQUERYOBJECTUI64VEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLGETQUERYOBJECTUI64VEXTPROC) (GLuint id, GLenum pname, GLuint64EX/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint id,GLenum pname,GLuint64EXT * params)
PFNGLGETQUERYOBJECTUI64VPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLGETQUERYOBJECTUI64VPROC) (GLuint id, GLenum pname, GLuint64* par/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint id,GLenum pname,GLuint64 * params)
PFNGLGETQUERYOBJECTUIVANGLEPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLGETQUERYOBJECTUIVANGLEPROC) (GLuint id, GLenum pname, GLuint* pa/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint id,GLenum pname,GLuint * params)
PFNGLGETQUERYOBJECTUIVARBPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLGETQUERYOBJECTUIVARBPROC) (GLuint id, GLenum pname, GLuint* para/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint id,GLenum pname,GLuint * params)
PFNGLGETQUERYOBJECTUIVEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLGETQUERYOBJECTUIVEXTPROC) (GLuint id, GLenum pname, GLuint* para/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint id,GLenum pname,GLuint * params)
PFNGLGETQUERYOBJECTUIVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLGETQUERYOBJECTUIVPROC) (GLuint id, GLenum pname, GLuint* params)/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint id,GLenum pname,GLuint * params)
PFNGLGETRENDERBUFFERPARAMETERIVEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLGETRENDERBUFFERPARAMETERIVEXTPROC) (GLenum target, GLenum pname,/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLenum pname,GLint * params)
PFNGLGETRENDERBUFFERPARAMETERIVOESPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLGETRENDERBUFFERPARAMETERIVOESPROC) (GLenum target, GLenum pname,/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLenum pname,GLint * params)
PFNGLGETRENDERBUFFERPARAMETERIVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLGETRENDERBUFFERPARAMETERIVPROC) (GLenum target, GLenum pname, GL/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLenum pname,GLint * params)
PFNGLGETSAMPLERPARAMETERFVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLGETSAMPLERPARAMETERFVPROC) (GLuint sampler, GLenum pname, GLfloa/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint sampler,GLenum pname,GLfloat * params)
PFNGLGETSAMPLERPARAMETERIIVEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLGETSAMPLERPARAMETERIIVEXTPROC) (GLuint sampler, GLenum pname, GL/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint sampler,GLenum pname,GLint * params)
PFNGLGETSAMPLERPARAMETERIIVOESPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLGETSAMPLERPARAMETERIIVOESPROC) (GLuint sampler, GLenum pname, GL/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint sampler,GLenum pname,GLint * params)
PFNGLGETSAMPLERPARAMETERIIVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLGETSAMPLERPARAMETERIIVPROC) (GLuint sampler, GLenum pname, GLint/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint sampler,GLenum pname,GLint * params)
PFNGLGETSAMPLERPARAMETERIUIVEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLGETSAMPLERPARAMETERIUIVEXTPROC) (GLuint sampler, GLenum pname, G/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint sampler,GLenum pname,GLuint * params)
PFNGLGETSAMPLERPARAMETERIUIVOESPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLGETSAMPLERPARAMETERIUIVOESPROC) (GLuint sampler, GLenum pname, G/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint sampler,GLenum pname,GLuint * params)
PFNGLGETSAMPLERPARAMETERIUIVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLGETSAMPLERPARAMETERIUIVPROC) (GLuint sampler, GLenum pname, GLui/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint sampler,GLenum pname,GLuint * params)
PFNGLGETSAMPLERPARAMETERIVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLGETSAMPLERPARAMETERIVPROC) (GLuint sampler, GLenum pname, GLint*/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint sampler,GLenum pname,GLint * params)
PFNGLGETSEMAPHOREPARAMETERUI64VEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLGETSEMAPHOREPARAMETERUI64VEXTPROC) (GLuint semaphore, GLenum pna/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint semaphore,GLenum pname,GLuint64 * params)
PFNGLGETSEPARABLEFILTEREXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLGETSEPARABLEFILTEREXTPROC) (GLenum target, GLenum format, GLenum/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLenum format,GLenum type,void * row,void * column,void * span)
PFNGLGETSEPARABLEFILTERPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLGETSEPARABLEFILTERPROC) (GLenum target, GLenum format, GLenum ty/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLenum format,GLenum type,void * row,void * column,void * span)
PFNGLGETSHADERINFOLOGPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLGETSHADERINFOLOGPROC) (GLuint shader, GLsizei bufSize, GLsizei* /;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint shader,GLsizei bufSize,GLsizei * length,GLchar * infoLog)
PFNGLGETSHADERIVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLGETSHADERIVPROC) (GLuint shader, GLenum pname, GLint* param);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint shader,GLenum pname,GLint * param)
PFNGLGETSHADERPRECISIONFORMATPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLGETSHADERPRECISIONFORMATPROC) (GLenum shadertype, GLenum precisi/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum shadertype,GLenum precisiontype,GLint * range,GLint * precision)
PFNGLGETSHADERSOURCEARBPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLGETSHADERSOURCEARBPROC) (GLhandleARB obj, GLsizei maxLength, GLs/;"	t	typeref:typename:void (GLAPIENTRY *)(GLhandleARB obj,GLsizei maxLength,GLsizei * length,GLcharARB * source)
PFNGLGETSHADERSOURCEPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLGETSHADERSOURCEPROC) (GLuint obj, GLsizei maxLength, GLsizei* le/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint obj,GLsizei maxLength,GLsizei * length,GLchar * source)
PFNGLGETSHADINGRATEIMAGEPALETTENVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLGETSHADINGRATEIMAGEPALETTENVPROC) (GLuint viewport, GLuint entry/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint viewport,GLuint entry,GLenum * rate)
PFNGLGETSHADINGRATESAMPLELOCATIONIVNVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLGETSHADINGRATESAMPLELOCATIONIVNVPROC) (GLenum rate, GLuint sampl/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum rate,GLuint samples,GLuint index,GLint * location)
PFNGLGETSHARPENTEXFUNCSGISPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLGETSHARPENTEXFUNCSGISPROC) (GLenum target, GLfloat* points);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLfloat * points)
PFNGLGETSTAGEINDEXNVPROC	./GL/glew.h	/^typedef GLushort (GLAPIENTRY * PFNGLGETSTAGEINDEXNVPROC) (GLenum shadertype);$/;"	t	typeref:typename:GLushort (GLAPIENTRY *)(GLenum shadertype)
PFNGLGETSTRINGIPROC	./GL/glew.h	/^typedef const GLubyte* (GLAPIENTRY * PFNGLGETSTRINGIPROC) (GLenum name, GLuint index);$/;"	t	typeref:typename:const GLubyte * (GLAPIENTRY *)(GLenum name,GLuint index)
PFNGLGETSUBROUTINEINDEXPROC	./GL/glew.h	/^typedef GLuint (GLAPIENTRY * PFNGLGETSUBROUTINEINDEXPROC) (GLuint program, GLenum shadertype, co/;"	t	typeref:typename:GLuint (GLAPIENTRY *)(GLuint program,GLenum shadertype,const GLchar * name)
PFNGLGETSUBROUTINEUNIFORMLOCATIONPROC	./GL/glew.h	/^typedef GLint (GLAPIENTRY * PFNGLGETSUBROUTINEUNIFORMLOCATIONPROC) (GLuint program, GLenum shade/;"	t	typeref:typename:GLint (GLAPIENTRY *)(GLuint program,GLenum shadertype,const GLchar * name)
PFNGLGETSYNCIVAPPLEPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLGETSYNCIVAPPLEPROC) (GLsync GLsync, GLenum pname, GLsizei bufSiz/;"	t	typeref:typename:void (GLAPIENTRY *)(GLsync GLsync,GLenum pname,GLsizei bufSize,GLsizei * length,GLint * values)
PFNGLGETSYNCIVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLGETSYNCIVPROC) (GLsync GLsync,GLenum pname,GLsizei bufSize,GLsiz/;"	t	typeref:typename:void (GLAPIENTRY *)(GLsync GLsync,GLenum pname,GLsizei bufSize,GLsizei * length,GLint * values)
PFNGLGETTEXBUMPPARAMETERFVATIPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLGETTEXBUMPPARAMETERFVATIPROC) (GLenum pname, GLfloat *param);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum pname,GLfloat * param)
PFNGLGETTEXBUMPPARAMETERIVATIPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLGETTEXBUMPPARAMETERIVATIPROC) (GLenum pname, GLint *param);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum pname,GLint * param)
PFNGLGETTEXENVXVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLGETTEXENVXVPROC) (GLenum env, GLenum pname, GLfixed* params);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum env,GLenum pname,GLfixed * params)
PFNGLGETTEXFILTERFUNCSGISPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLGETTEXFILTERFUNCSGISPROC) (GLenum target, GLenum filter, GLfloat/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLenum filter,GLfloat * weights)
PFNGLGETTEXGENFVOESPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLGETTEXGENFVOESPROC) (GLenum coord, GLenum pname, GLfloat* params/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum coord,GLenum pname,GLfloat * params)
PFNGLGETTEXGENIVOESPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLGETTEXGENIVOESPROC) (GLenum coord, GLenum pname, GLint* params);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum coord,GLenum pname,GLint * params)
PFNGLGETTEXGENXVOESPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLGETTEXGENXVOESPROC) (GLenum coord, GLenum pname, GLfixed* params/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum coord,GLenum pname,GLfixed * params)
PFNGLGETTEXPARAMETERIIVEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLGETTEXPARAMETERIIVEXTPROC) (GLenum target, GLenum pname, GLint */;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLenum pname,GLint * params)
PFNGLGETTEXPARAMETERIIVOESPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLGETTEXPARAMETERIIVOESPROC) (GLenum target, GLenum pname, GLint* /;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLenum pname,GLint * params)
PFNGLGETTEXPARAMETERIIVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLGETTEXPARAMETERIIVPROC) (GLenum target, GLenum pname, GLint* par/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLenum pname,GLint * params)
PFNGLGETTEXPARAMETERIUIVEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLGETTEXPARAMETERIUIVEXTPROC) (GLenum target, GLenum pname, GLuint/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLenum pname,GLuint * params)
PFNGLGETTEXPARAMETERIUIVOESPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLGETTEXPARAMETERIUIVOESPROC) (GLenum target, GLenum pname, GLuint/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLenum pname,GLuint * params)
PFNGLGETTEXPARAMETERIUIVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLGETTEXPARAMETERIUIVPROC) (GLenum target, GLenum pname, GLuint* p/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLenum pname,GLuint * params)
PFNGLGETTEXPARAMETERPOINTERVAPPLEPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLGETTEXPARAMETERPOINTERVAPPLEPROC) (GLenum target, GLenum pname, /;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLenum pname,void ** params)
PFNGLGETTEXPARAMETERXVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLGETTEXPARAMETERXVPROC) (GLenum target, GLenum pname, GLfixed* pa/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLenum pname,GLfixed * params)
PFNGLGETTEXTUREHANDLEARBPROC	./GL/glew.h	/^typedef GLuint64 (GLAPIENTRY * PFNGLGETTEXTUREHANDLEARBPROC) (GLuint texture);$/;"	t	typeref:typename:GLuint64 (GLAPIENTRY *)(GLuint texture)
PFNGLGETTEXTUREHANDLEIMGPROC	./GL/glew.h	/^typedef GLuint64 (GLAPIENTRY * PFNGLGETTEXTUREHANDLEIMGPROC) (GLuint texture);$/;"	t	typeref:typename:GLuint64 (GLAPIENTRY *)(GLuint texture)
PFNGLGETTEXTUREHANDLENVPROC	./GL/glew.h	/^typedef GLuint64 (GLAPIENTRY * PFNGLGETTEXTUREHANDLENVPROC) (GLuint texture);$/;"	t	typeref:typename:GLuint64 (GLAPIENTRY *)(GLuint texture)
PFNGLGETTEXTUREIMAGEEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLGETTEXTUREIMAGEEXTPROC) (GLuint texture, GLenum target, GLint le/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint texture,GLenum target,GLint level,GLenum format,GLenum type,void * pixels)
PFNGLGETTEXTUREIMAGEPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLGETTEXTUREIMAGEPROC) (GLuint texture, GLint level, GLenum format/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint texture,GLint level,GLenum format,GLenum type,GLsizei bufSize,void * pixels)
PFNGLGETTEXTURELEVELPARAMETERFVEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLGETTEXTURELEVELPARAMETERFVEXTPROC) (GLuint texture, GLenum targe/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint texture,GLenum target,GLint level,GLenum pname,GLfloat * params)
PFNGLGETTEXTURELEVELPARAMETERFVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLGETTEXTURELEVELPARAMETERFVPROC) (GLuint texture, GLint level, GL/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint texture,GLint level,GLenum pname,GLfloat * params)
PFNGLGETTEXTURELEVELPARAMETERIVEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLGETTEXTURELEVELPARAMETERIVEXTPROC) (GLuint texture, GLenum targe/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint texture,GLenum target,GLint level,GLenum pname,GLint * params)
PFNGLGETTEXTURELEVELPARAMETERIVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLGETTEXTURELEVELPARAMETERIVPROC) (GLuint texture, GLint level, GL/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint texture,GLint level,GLenum pname,GLint * params)
PFNGLGETTEXTUREPARAMETERFVEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLGETTEXTUREPARAMETERFVEXTPROC) (GLuint texture, GLenum target, GL/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint texture,GLenum target,GLenum pname,GLfloat * params)
PFNGLGETTEXTUREPARAMETERFVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLGETTEXTUREPARAMETERFVPROC) (GLuint texture, GLenum pname, GLfloa/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint texture,GLenum pname,GLfloat * params)
PFNGLGETTEXTUREPARAMETERIIVEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLGETTEXTUREPARAMETERIIVEXTPROC) (GLuint texture, GLenum target, G/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint texture,GLenum target,GLenum pname,GLint * params)
PFNGLGETTEXTUREPARAMETERIIVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLGETTEXTUREPARAMETERIIVPROC) (GLuint texture, GLenum pname, GLint/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint texture,GLenum pname,GLint * params)
PFNGLGETTEXTUREPARAMETERIUIVEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLGETTEXTUREPARAMETERIUIVEXTPROC) (GLuint texture, GLenum target, /;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint texture,GLenum target,GLenum pname,GLuint * params)
PFNGLGETTEXTUREPARAMETERIUIVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLGETTEXTUREPARAMETERIUIVPROC) (GLuint texture, GLenum pname, GLui/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint texture,GLenum pname,GLuint * params)
PFNGLGETTEXTUREPARAMETERIVEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLGETTEXTUREPARAMETERIVEXTPROC) (GLuint texture, GLenum target, GL/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint texture,GLenum target,GLenum pname,GLint * params)
PFNGLGETTEXTUREPARAMETERIVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLGETTEXTUREPARAMETERIVPROC) (GLuint texture, GLenum pname, GLint*/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint texture,GLenum pname,GLint * params)
PFNGLGETTEXTURESAMPLERHANDLEARBPROC	./GL/glew.h	/^typedef GLuint64 (GLAPIENTRY * PFNGLGETTEXTURESAMPLERHANDLEARBPROC) (GLuint texture, GLuint samp/;"	t	typeref:typename:GLuint64 (GLAPIENTRY *)(GLuint texture,GLuint sampler)
PFNGLGETTEXTURESAMPLERHANDLEIMGPROC	./GL/glew.h	/^typedef GLuint64 (GLAPIENTRY * PFNGLGETTEXTURESAMPLERHANDLEIMGPROC) (GLuint texture, GLuint samp/;"	t	typeref:typename:GLuint64 (GLAPIENTRY *)(GLuint texture,GLuint sampler)
PFNGLGETTEXTURESAMPLERHANDLENVPROC	./GL/glew.h	/^typedef GLuint64 (GLAPIENTRY * PFNGLGETTEXTURESAMPLERHANDLENVPROC) (GLuint texture, GLuint sampl/;"	t	typeref:typename:GLuint64 (GLAPIENTRY *)(GLuint texture,GLuint sampler)
PFNGLGETTEXTURESUBIMAGEPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLGETTEXTURESUBIMAGEPROC) (GLuint texture, GLint level, GLint xoff/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint texture,GLint level,GLint xoffset,GLint yoffset,GLint zoffset,GLsizei width,GLsizei height,GLsizei depth,GLenum format,GLenum type,GLsizei bufSize,void * pixels)
PFNGLGETTRACKMATRIXIVNVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLGETTRACKMATRIXIVNVPROC) (GLenum target, GLuint address, GLenum p/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLuint address,GLenum pname,GLint * params)
PFNGLGETTRANSFORMFEEDBACKI64_VPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLGETTRANSFORMFEEDBACKI64_VPROC) (GLuint xfb, GLenum pname, GLuint/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint xfb,GLenum pname,GLuint index,GLint64 * param)
PFNGLGETTRANSFORMFEEDBACKIVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLGETTRANSFORMFEEDBACKIVPROC) (GLuint xfb, GLenum pname, GLint* pa/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint xfb,GLenum pname,GLint * param)
PFNGLGETTRANSFORMFEEDBACKI_VPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLGETTRANSFORMFEEDBACKI_VPROC) (GLuint xfb, GLenum pname, GLuint i/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint xfb,GLenum pname,GLuint index,GLint * param)
PFNGLGETTRANSFORMFEEDBACKVARYINGEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLGETTRANSFORMFEEDBACKVARYINGEXTPROC) (GLuint program, GLuint inde/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint program,GLuint index,GLsizei bufSize,GLsizei * length,GLsizei * size,GLenum * type,GLchar * name)
PFNGLGETTRANSFORMFEEDBACKVARYINGNVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLGETTRANSFORMFEEDBACKVARYINGNVPROC) (GLuint program, GLuint index/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint program,GLuint index,GLint * location)
PFNGLGETTRANSFORMFEEDBACKVARYINGPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLGETTRANSFORMFEEDBACKVARYINGPROC) (GLuint program, GLuint index, /;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint program,GLuint index,GLsizei bufSize,GLsizei * length,GLsizei * size,GLenum * type,GLchar * name)
PFNGLGETTRANSLATEDSHADERSOURCEANGLEPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLGETTRANSLATEDSHADERSOURCEANGLEPROC) (GLuint shader, GLsizei bufs/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint shader,GLsizei bufsize,GLsizei * length,GLchar * source)
PFNGLGETUNIFORMBLOCKINDEXPROC	./GL/glew.h	/^typedef GLuint (GLAPIENTRY * PFNGLGETUNIFORMBLOCKINDEXPROC) (GLuint program, const GLchar* unifo/;"	t	typeref:typename:GLuint (GLAPIENTRY *)(GLuint program,const GLchar * uniformBlockName)
PFNGLGETUNIFORMBUFFERSIZEEXTPROC	./GL/glew.h	/^typedef GLint (GLAPIENTRY * PFNGLGETUNIFORMBUFFERSIZEEXTPROC) (GLuint program, GLint location);$/;"	t	typeref:typename:GLint (GLAPIENTRY *)(GLuint program,GLint location)
PFNGLGETUNIFORMDVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLGETUNIFORMDVPROC) (GLuint program, GLint location, GLdouble* par/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint program,GLint location,GLdouble * params)
PFNGLGETUNIFORMFVARBPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLGETUNIFORMFVARBPROC) (GLhandleARB programObj, GLint location, GL/;"	t	typeref:typename:void (GLAPIENTRY *)(GLhandleARB programObj,GLint location,GLfloat * params)
PFNGLGETUNIFORMFVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLGETUNIFORMFVPROC) (GLuint program, GLint location, GLfloat* para/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint program,GLint location,GLfloat * params)
PFNGLGETUNIFORMI64VARBPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLGETUNIFORMI64VARBPROC) (GLuint program, GLint location, GLint64*/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint program,GLint location,GLint64 * params)
PFNGLGETUNIFORMI64VNVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLGETUNIFORMI64VNVPROC) (GLuint program, GLint location, GLint64EX/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint program,GLint location,GLint64EXT * params)
PFNGLGETUNIFORMINDICESPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLGETUNIFORMINDICESPROC) (GLuint program, GLsizei uniformCount, co/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint program,GLsizei uniformCount,const GLchar * const * uniformNames,GLuint * uniformIndices)
PFNGLGETUNIFORMIVARBPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLGETUNIFORMIVARBPROC) (GLhandleARB programObj, GLint location, GL/;"	t	typeref:typename:void (GLAPIENTRY *)(GLhandleARB programObj,GLint location,GLint * params)
PFNGLGETUNIFORMIVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLGETUNIFORMIVPROC) (GLuint program, GLint location, GLint* params/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint program,GLint location,GLint * params)
PFNGLGETUNIFORMLOCATIONARBPROC	./GL/glew.h	/^typedef GLint (GLAPIENTRY * PFNGLGETUNIFORMLOCATIONARBPROC) (GLhandleARB programObj, const GLcha/;"	t	typeref:typename:GLint (GLAPIENTRY *)(GLhandleARB programObj,const GLcharARB * name)
PFNGLGETUNIFORMLOCATIONPROC	./GL/glew.h	/^typedef GLint (GLAPIENTRY * PFNGLGETUNIFORMLOCATIONPROC) (GLuint program, const GLchar* name);$/;"	t	typeref:typename:GLint (GLAPIENTRY *)(GLuint program,const GLchar * name)
PFNGLGETUNIFORMOFFSETEXTPROC	./GL/glew.h	/^typedef GLintptr (GLAPIENTRY * PFNGLGETUNIFORMOFFSETEXTPROC) (GLuint program, GLint location);$/;"	t	typeref:typename:GLintptr (GLAPIENTRY *)(GLuint program,GLint location)
PFNGLGETUNIFORMSUBROUTINEUIVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLGETUNIFORMSUBROUTINEUIVPROC) (GLenum shadertype, GLint location,/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum shadertype,GLint location,GLuint * params)
PFNGLGETUNIFORMUI64VARBPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLGETUNIFORMUI64VARBPROC) (GLuint program, GLint location, GLuint6/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint program,GLint location,GLuint64 * params)
PFNGLGETUNIFORMUI64VNVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLGETUNIFORMUI64VNVPROC) (GLuint program, GLint location, GLuint64/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint program,GLint location,GLuint64EXT * params)
PFNGLGETUNIFORMUIVEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLGETUNIFORMUIVEXTPROC) (GLuint program, GLint location, GLuint *p/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint program,GLint location,GLuint * params)
PFNGLGETUNIFORMUIVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLGETUNIFORMUIVPROC) (GLuint program, GLint location, GLuint* para/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint program,GLint location,GLuint * params)
PFNGLGETUNSIGNEDBYTEI_VEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLGETUNSIGNEDBYTEI_VEXTPROC) (GLenum target, GLuint index, GLubyte/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLuint index,GLubyte * data)
PFNGLGETUNSIGNEDBYTEVEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLGETUNSIGNEDBYTEVEXTPROC) (GLenum pname, GLubyte* data);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum pname,GLubyte * data)
PFNGLGETVARIANTARRAYOBJECTFVATIPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLGETVARIANTARRAYOBJECTFVATIPROC) (GLuint id, GLenum pname, GLfloa/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint id,GLenum pname,GLfloat * params)
PFNGLGETVARIANTARRAYOBJECTIVATIPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLGETVARIANTARRAYOBJECTIVATIPROC) (GLuint id, GLenum pname, GLint*/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint id,GLenum pname,GLint * params)
PFNGLGETVARIANTBOOLEANVEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLGETVARIANTBOOLEANVEXTPROC) (GLuint id, GLenum value, GLboolean */;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint id,GLenum value,GLboolean * data)
PFNGLGETVARIANTFLOATVEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLGETVARIANTFLOATVEXTPROC) (GLuint id, GLenum value, GLfloat *data/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint id,GLenum value,GLfloat * data)
PFNGLGETVARIANTINTEGERVEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLGETVARIANTINTEGERVEXTPROC) (GLuint id, GLenum value, GLint *data/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint id,GLenum value,GLint * data)
PFNGLGETVARIANTPOINTERVEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLGETVARIANTPOINTERVEXTPROC) (GLuint id, GLenum value, void **data/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint id,GLenum value,void ** data)
PFNGLGETVARYINGLOCATIONNVPROC	./GL/glew.h	/^typedef GLint (GLAPIENTRY * PFNGLGETVARYINGLOCATIONNVPROC) (GLuint program, const GLchar *name);$/;"	t	typeref:typename:GLint (GLAPIENTRY *)(GLuint program,const GLchar * name)
PFNGLGETVECTOROPERATIONSGIXPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLGETVECTOROPERATIONSGIXPROC) (GLenum operation);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum operation)
PFNGLGETVERTEXARRAYINDEXED64IVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLGETVERTEXARRAYINDEXED64IVPROC) (GLuint vaobj, GLuint index, GLen/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint vaobj,GLuint index,GLenum pname,GLint64 * param)
PFNGLGETVERTEXARRAYINDEXEDIVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLGETVERTEXARRAYINDEXEDIVPROC) (GLuint vaobj, GLuint index, GLenum/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint vaobj,GLuint index,GLenum pname,GLint * param)
PFNGLGETVERTEXARRAYINTEGERI_VEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLGETVERTEXARRAYINTEGERI_VEXTPROC) (GLuint vaobj, GLuint index, GL/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint vaobj,GLuint index,GLenum pname,GLint * param)
PFNGLGETVERTEXARRAYINTEGERVEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLGETVERTEXARRAYINTEGERVEXTPROC) (GLuint vaobj, GLenum pname, GLin/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint vaobj,GLenum pname,GLint * param)
PFNGLGETVERTEXARRAYIVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLGETVERTEXARRAYIVPROC) (GLuint vaobj, GLenum pname, GLint* param)/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint vaobj,GLenum pname,GLint * param)
PFNGLGETVERTEXARRAYPOINTERI_VEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLGETVERTEXARRAYPOINTERI_VEXTPROC) (GLuint vaobj, GLuint index, GL/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint vaobj,GLuint index,GLenum pname,void ** param)
PFNGLGETVERTEXARRAYPOINTERVEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLGETVERTEXARRAYPOINTERVEXTPROC) (GLuint vaobj, GLenum pname, void/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint vaobj,GLenum pname,void ** param)
PFNGLGETVERTEXATTRIBARRAYOBJECTFVATIPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLGETVERTEXATTRIBARRAYOBJECTFVATIPROC) (GLuint index, GLenum pname/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,GLenum pname,GLfloat * params)
PFNGLGETVERTEXATTRIBARRAYOBJECTIVATIPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLGETVERTEXATTRIBARRAYOBJECTIVATIPROC) (GLuint index, GLenum pname/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,GLenum pname,GLint * params)
PFNGLGETVERTEXATTRIBDVARBPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLGETVERTEXATTRIBDVARBPROC) (GLuint index, GLenum pname, GLdouble*/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,GLenum pname,GLdouble * params)
PFNGLGETVERTEXATTRIBDVNVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLGETVERTEXATTRIBDVNVPROC) (GLuint index, GLenum pname, GLdouble* /;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,GLenum pname,GLdouble * params)
PFNGLGETVERTEXATTRIBDVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLGETVERTEXATTRIBDVPROC) (GLuint index, GLenum pname, GLdouble* pa/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,GLenum pname,GLdouble * params)
PFNGLGETVERTEXATTRIBFVARBPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLGETVERTEXATTRIBFVARBPROC) (GLuint index, GLenum pname, GLfloat* /;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,GLenum pname,GLfloat * params)
PFNGLGETVERTEXATTRIBFVNVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLGETVERTEXATTRIBFVNVPROC) (GLuint index, GLenum pname, GLfloat* p/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,GLenum pname,GLfloat * params)
PFNGLGETVERTEXATTRIBFVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLGETVERTEXATTRIBFVPROC) (GLuint index, GLenum pname, GLfloat* par/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,GLenum pname,GLfloat * params)
PFNGLGETVERTEXATTRIBIIVEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLGETVERTEXATTRIBIIVEXTPROC) (GLuint index, GLenum pname, GLint *p/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,GLenum pname,GLint * params)
PFNGLGETVERTEXATTRIBIIVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLGETVERTEXATTRIBIIVPROC) (GLuint index, GLenum pname, GLint* para/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,GLenum pname,GLint * params)
PFNGLGETVERTEXATTRIBIUIVEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLGETVERTEXATTRIBIUIVEXTPROC) (GLuint index, GLenum pname, GLuint /;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,GLenum pname,GLuint * params)
PFNGLGETVERTEXATTRIBIUIVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLGETVERTEXATTRIBIUIVPROC) (GLuint index, GLenum pname, GLuint* pa/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,GLenum pname,GLuint * params)
PFNGLGETVERTEXATTRIBIVARBPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLGETVERTEXATTRIBIVARBPROC) (GLuint index, GLenum pname, GLint* pa/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,GLenum pname,GLint * params)
PFNGLGETVERTEXATTRIBIVNVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLGETVERTEXATTRIBIVNVPROC) (GLuint index, GLenum pname, GLint* par/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,GLenum pname,GLint * params)
PFNGLGETVERTEXATTRIBIVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLGETVERTEXATTRIBIVPROC) (GLuint index, GLenum pname, GLint* param/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,GLenum pname,GLint * params)
PFNGLGETVERTEXATTRIBLDVEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLGETVERTEXATTRIBLDVEXTPROC) (GLuint index, GLenum pname, GLdouble/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,GLenum pname,GLdouble * params)
PFNGLGETVERTEXATTRIBLDVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLGETVERTEXATTRIBLDVPROC) (GLuint index, GLenum pname, GLdouble* p/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,GLenum pname,GLdouble * params)
PFNGLGETVERTEXATTRIBLI64VNVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLGETVERTEXATTRIBLI64VNVPROC) (GLuint index, GLenum pname, GLint64/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,GLenum pname,GLint64EXT * params)
PFNGLGETVERTEXATTRIBLUI64VARBPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLGETVERTEXATTRIBLUI64VARBPROC) (GLuint index, GLenum pname, GLuin/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,GLenum pname,GLuint64EXT * params)
PFNGLGETVERTEXATTRIBLUI64VNVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLGETVERTEXATTRIBLUI64VNVPROC) (GLuint index, GLenum pname, GLuint/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,GLenum pname,GLuint64EXT * params)
PFNGLGETVERTEXATTRIBPOINTERVARBPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLGETVERTEXATTRIBPOINTERVARBPROC) (GLuint index, GLenum pname, voi/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,GLenum pname,void ** pointer)
PFNGLGETVERTEXATTRIBPOINTERVNVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLGETVERTEXATTRIBPOINTERVNVPROC) (GLuint index, GLenum pname, void/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,GLenum pname,void ** pointer)
PFNGLGETVERTEXATTRIBPOINTERVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLGETVERTEXATTRIBPOINTERVPROC) (GLuint index, GLenum pname, void**/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,GLenum pname,void ** pointer)
PFNGLGETVIDEOCAPTUREIVNVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLGETVIDEOCAPTUREIVNVPROC) (GLuint video_capture_slot, GLenum pnam/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint video_capture_slot,GLenum pname,GLint * params)
PFNGLGETVIDEOCAPTURESTREAMDVNVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLGETVIDEOCAPTURESTREAMDVNVPROC) (GLuint video_capture_slot, GLuin/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint video_capture_slot,GLuint stream,GLenum pname,GLdouble * params)
PFNGLGETVIDEOCAPTURESTREAMFVNVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLGETVIDEOCAPTURESTREAMFVNVPROC) (GLuint video_capture_slot, GLuin/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint video_capture_slot,GLuint stream,GLenum pname,GLfloat * params)
PFNGLGETVIDEOCAPTURESTREAMIVNVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLGETVIDEOCAPTURESTREAMIVNVPROC) (GLuint video_capture_slot, GLuin/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint video_capture_slot,GLuint stream,GLenum pname,GLint * params)
PFNGLGETVIDEOI64VNVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLGETVIDEOI64VNVPROC) (GLuint video_slot, GLenum pname, GLint64EXT/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint video_slot,GLenum pname,GLint64EXT * params)
PFNGLGETVIDEOIVNVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLGETVIDEOIVNVPROC) (GLuint video_slot, GLenum pname, GLint* param/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint video_slot,GLenum pname,GLint * params)
PFNGLGETVIDEOUI64VNVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLGETVIDEOUI64VNVPROC) (GLuint video_slot, GLenum pname, GLuint64E/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint video_slot,GLenum pname,GLuint64EXT * params)
PFNGLGETVIDEOUIVNVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLGETVIDEOUIVNVPROC) (GLuint video_slot, GLenum pname, GLuint* par/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint video_slot,GLenum pname,GLuint * params)
PFNGLGETVKPROCADDRNVPROC	./GL/glew.h	/^typedef GLVULKANPROCNV (GLAPIENTRY * PFNGLGETVKPROCADDRNVPROC) (const GLchar* name);$/;"	t	typeref:typename:GLVULKANPROCNV (GLAPIENTRY *)(const GLchar * name)
PFNGLGLOBALALPHAFACTORBSUNPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLGLOBALALPHAFACTORBSUNPROC) (GLbyte factor);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLbyte factor)
PFNGLGLOBALALPHAFACTORDSUNPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLGLOBALALPHAFACTORDSUNPROC) (GLdouble factor);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLdouble factor)
PFNGLGLOBALALPHAFACTORFSUNPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLGLOBALALPHAFACTORFSUNPROC) (GLfloat factor);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLfloat factor)
PFNGLGLOBALALPHAFACTORISUNPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLGLOBALALPHAFACTORISUNPROC) (GLint factor);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLint factor)
PFNGLGLOBALALPHAFACTORSSUNPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLGLOBALALPHAFACTORSSUNPROC) (GLshort factor);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLshort factor)
PFNGLGLOBALALPHAFACTORUBSUNPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLGLOBALALPHAFACTORUBSUNPROC) (GLubyte factor);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLubyte factor)
PFNGLGLOBALALPHAFACTORUISUNPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLGLOBALALPHAFACTORUISUNPROC) (GLuint factor);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint factor)
PFNGLGLOBALALPHAFACTORUSSUNPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLGLOBALALPHAFACTORUSSUNPROC) (GLushort factor);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLushort factor)
PFNGLHISTOGRAMEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLHISTOGRAMEXTPROC) (GLenum target, GLsizei width, GLenum internal/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLsizei width,GLenum internalformat,GLboolean sink)
PFNGLHISTOGRAMPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLHISTOGRAMPROC) (GLenum target, GLsizei width, GLenum internalfor/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLsizei width,GLenum internalformat,GLboolean sink)
PFNGLIGLOOINTERFACESGIXPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLIGLOOINTERFACESGIXPROC) (GLenum pname, void *param);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum pname,void * param)
PFNGLIMAGETRANSFORMPARAMETERFHPPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLIMAGETRANSFORMPARAMETERFHPPROC) (GLenum target, GLenum pname, co/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLenum pname,const GLfloat param)
PFNGLIMAGETRANSFORMPARAMETERFVHPPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLIMAGETRANSFORMPARAMETERFVHPPROC) (GLenum target, GLenum pname, c/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLenum pname,const GLfloat * params)
PFNGLIMAGETRANSFORMPARAMETERIHPPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLIMAGETRANSFORMPARAMETERIHPPROC) (GLenum target, GLenum pname, co/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLenum pname,const GLint param)
PFNGLIMAGETRANSFORMPARAMETERIVHPPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLIMAGETRANSFORMPARAMETERIVHPPROC) (GLenum target, GLenum pname, c/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLenum pname,const GLint * params)
PFNGLIMPORTMEMORYFDEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLIMPORTMEMORYFDEXTPROC) (GLuint memory, GLuint64 size, GLenum han/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint memory,GLuint64 size,GLenum handleType,GLint fd)
PFNGLIMPORTMEMORYWIN32HANDLEEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLIMPORTMEMORYWIN32HANDLEEXTPROC) (GLuint memory, GLuint64 size, G/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint memory,GLuint64 size,GLenum handleType,void * handle)
PFNGLIMPORTMEMORYWIN32NAMEEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLIMPORTMEMORYWIN32NAMEEXTPROC) (GLuint memory, GLuint64 size, GLe/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint memory,GLuint64 size,GLenum handleType,const void * name)
PFNGLIMPORTSEMAPHOREFDEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLIMPORTSEMAPHOREFDEXTPROC) (GLuint semaphore, GLenum handleType, /;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint semaphore,GLenum handleType,GLint fd)
PFNGLIMPORTSEMAPHOREWIN32HANDLEEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLIMPORTSEMAPHOREWIN32HANDLEEXTPROC) (GLuint semaphore, GLenum han/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint semaphore,GLenum handleType,void * handle)
PFNGLIMPORTSEMAPHOREWIN32NAMEEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLIMPORTSEMAPHOREWIN32NAMEEXTPROC) (GLuint semaphore, GLenum handl/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint semaphore,GLenum handleType,const void * name)
PFNGLIMPORTSYNCEXTPROC	./GL/glew.h	/^typedef GLsync (GLAPIENTRY * PFNGLIMPORTSYNCEXTPROC) (GLenum external_sync_type, GLintptr extern/;"	t	typeref:typename:GLsync (GLAPIENTRY *)(GLenum external_sync_type,GLintptr external_sync,GLbitfield flags)
PFNGLINDEXFORMATNVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLINDEXFORMATNVPROC) (GLenum type, GLsizei stride);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum type,GLsizei stride)
PFNGLINDEXFUNCEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLINDEXFUNCEXTPROC) (GLenum func, GLfloat ref);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum func,GLfloat ref)
PFNGLINDEXMATERIALEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLINDEXMATERIALEXTPROC) (GLenum face, GLenum mode);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum face,GLenum mode)
PFNGLINDEXPOINTEREXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLINDEXPOINTEREXTPROC) (GLenum type, GLsizei stride, GLsizei count/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum type,GLsizei stride,GLsizei count,const void * pointer)
PFNGLINDEXPOINTERLISTIBMPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLINDEXPOINTERLISTIBMPROC) (GLenum type, GLint stride, const void*/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum type,GLint stride,const void ** pointer,GLint ptrstride)
PFNGLINSERTCOMPONENTEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLINSERTCOMPONENTEXTPROC) (GLuint res, GLuint src, GLuint num);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint res,GLuint src,GLuint num)
PFNGLINSERTEVENTMARKEREXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLINSERTEVENTMARKEREXTPROC) (GLsizei length, const GLchar* marker)/;"	t	typeref:typename:void (GLAPIENTRY *)(GLsizei length,const GLchar * marker)
PFNGLINTERLEAVEDTEXTURECOORDSETSSGISPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLINTERLEAVEDTEXTURECOORDSETSSGISPROC) (GLint factor);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLint factor)
PFNGLINTERPOLATEPATHSNVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLINTERPOLATEPATHSNVPROC) (GLuint resultPath, GLuint pathA, GLuint/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint resultPath,GLuint pathA,GLuint pathB,GLfloat weight)
PFNGLINVALIDATEBUFFERDATAPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLINVALIDATEBUFFERDATAPROC) (GLuint buffer);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint buffer)
PFNGLINVALIDATEBUFFERSUBDATAPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLINVALIDATEBUFFERSUBDATAPROC) (GLuint buffer, GLintptr offset, GL/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint buffer,GLintptr offset,GLsizeiptr length)
PFNGLINVALIDATEFRAMEBUFFERPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLINVALIDATEFRAMEBUFFERPROC) (GLenum target, GLsizei numAttachment/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLsizei numAttachments,const GLenum * attachments)
PFNGLINVALIDATENAMEDFRAMEBUFFERDATAPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLINVALIDATENAMEDFRAMEBUFFERDATAPROC) (GLuint framebuffer, GLsizei/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint framebuffer,GLsizei numAttachments,const GLenum * attachments)
PFNGLINVALIDATENAMEDFRAMEBUFFERSUBDATAPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLINVALIDATENAMEDFRAMEBUFFERSUBDATAPROC) (GLuint framebuffer, GLsi/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint framebuffer,GLsizei numAttachments,const GLenum * attachments,GLint x,GLint y,GLsizei width,GLsizei height)
PFNGLINVALIDATESUBFRAMEBUFFERPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLINVALIDATESUBFRAMEBUFFERPROC) (GLenum target, GLsizei numAttachm/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLsizei numAttachments,const GLenum * attachments,GLint x,GLint y,GLsizei width,GLsizei height)
PFNGLINVALIDATETEXIMAGEPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLINVALIDATETEXIMAGEPROC) (GLuint texture, GLint level);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint texture,GLint level)
PFNGLINVALIDATETEXSUBIMAGEPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLINVALIDATETEXSUBIMAGEPROC) (GLuint texture, GLint level, GLint x/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint texture,GLint level,GLint xoffset,GLint yoffset,GLint zoffset,GLsizei width,GLsizei height,GLsizei depth)
PFNGLISASYNCMARKERSGIXPROC	./GL/glew.h	/^typedef GLboolean (GLAPIENTRY * PFNGLISASYNCMARKERSGIXPROC) (GLuint marker);$/;"	t	typeref:typename:GLboolean (GLAPIENTRY *)(GLuint marker)
PFNGLISBUFFERARBPROC	./GL/glew.h	/^typedef GLboolean (GLAPIENTRY * PFNGLISBUFFERARBPROC) (GLuint buffer);$/;"	t	typeref:typename:GLboolean (GLAPIENTRY *)(GLuint buffer)
PFNGLISBUFFERPROC	./GL/glew.h	/^typedef GLboolean (GLAPIENTRY * PFNGLISBUFFERPROC) (GLuint buffer);$/;"	t	typeref:typename:GLboolean (GLAPIENTRY *)(GLuint buffer)
PFNGLISBUFFERRESIDENTNVPROC	./GL/glew.h	/^typedef GLboolean (GLAPIENTRY * PFNGLISBUFFERRESIDENTNVPROC) (GLenum target);$/;"	t	typeref:typename:GLboolean (GLAPIENTRY *)(GLenum target)
PFNGLISCOMMANDLISTNVPROC	./GL/glew.h	/^typedef GLboolean (GLAPIENTRY * PFNGLISCOMMANDLISTNVPROC) (GLuint list);$/;"	t	typeref:typename:GLboolean (GLAPIENTRY *)(GLuint list)
PFNGLISENABLEDIEXTPROC	./GL/glew.h	/^typedef GLboolean (GLAPIENTRY * PFNGLISENABLEDIEXTPROC) (GLenum target, GLuint index);$/;"	t	typeref:typename:GLboolean (GLAPIENTRY *)(GLenum target,GLuint index)
PFNGLISENABLEDINDEXEDEXTPROC	./GL/glew.h	/^typedef GLboolean (GLAPIENTRY * PFNGLISENABLEDINDEXEDEXTPROC) (GLenum target, GLuint index);$/;"	t	typeref:typename:GLboolean (GLAPIENTRY *)(GLenum target,GLuint index)
PFNGLISENABLEDINVPROC	./GL/glew.h	/^typedef GLboolean (GLAPIENTRY * PFNGLISENABLEDINVPROC) (GLenum target, GLuint index);$/;"	t	typeref:typename:GLboolean (GLAPIENTRY *)(GLenum target,GLuint index)
PFNGLISENABLEDIOESPROC	./GL/glew.h	/^typedef GLboolean (GLAPIENTRY * PFNGLISENABLEDIOESPROC) (GLenum target, GLuint index);$/;"	t	typeref:typename:GLboolean (GLAPIENTRY *)(GLenum target,GLuint index)
PFNGLISENABLEDIPROC	./GL/glew.h	/^typedef GLboolean (GLAPIENTRY * PFNGLISENABLEDIPROC) (GLenum cap, GLuint index);$/;"	t	typeref:typename:GLboolean (GLAPIENTRY *)(GLenum cap,GLuint index)
PFNGLISFENCEAPPLEPROC	./GL/glew.h	/^typedef GLboolean (GLAPIENTRY * PFNGLISFENCEAPPLEPROC) (GLuint fence);$/;"	t	typeref:typename:GLboolean (GLAPIENTRY *)(GLuint fence)
PFNGLISFENCENVPROC	./GL/glew.h	/^typedef GLboolean (GLAPIENTRY * PFNGLISFENCENVPROC) (GLuint fence);$/;"	t	typeref:typename:GLboolean (GLAPIENTRY *)(GLuint fence)
PFNGLISFRAMEBUFFEREXTPROC	./GL/glew.h	/^typedef GLboolean (GLAPIENTRY * PFNGLISFRAMEBUFFEREXTPROC) (GLuint framebuffer);$/;"	t	typeref:typename:GLboolean (GLAPIENTRY *)(GLuint framebuffer)
PFNGLISFRAMEBUFFEROESPROC	./GL/glew.h	/^typedef GLboolean (GLAPIENTRY * PFNGLISFRAMEBUFFEROESPROC) (GLuint framebuffer);$/;"	t	typeref:typename:GLboolean (GLAPIENTRY *)(GLuint framebuffer)
PFNGLISFRAMEBUFFERPROC	./GL/glew.h	/^typedef GLboolean (GLAPIENTRY * PFNGLISFRAMEBUFFERPROC) (GLuint framebuffer);$/;"	t	typeref:typename:GLboolean (GLAPIENTRY *)(GLuint framebuffer)
PFNGLISIMAGEHANDLERESIDENTARBPROC	./GL/glew.h	/^typedef GLboolean (GLAPIENTRY * PFNGLISIMAGEHANDLERESIDENTARBPROC) (GLuint64 handle);$/;"	t	typeref:typename:GLboolean (GLAPIENTRY *)(GLuint64 handle)
PFNGLISIMAGEHANDLERESIDENTNVPROC	./GL/glew.h	/^typedef GLboolean (GLAPIENTRY * PFNGLISIMAGEHANDLERESIDENTNVPROC) (GLuint64 handle);$/;"	t	typeref:typename:GLboolean (GLAPIENTRY *)(GLuint64 handle)
PFNGLISMEMORYOBJECTEXTPROC	./GL/glew.h	/^typedef GLboolean (GLAPIENTRY * PFNGLISMEMORYOBJECTEXTPROC) (GLuint memoryObject);$/;"	t	typeref:typename:GLboolean (GLAPIENTRY *)(GLuint memoryObject)
PFNGLISMPEGPREDICTORSGIXPROC	./GL/glew.h	/^typedef GLboolean (GLAPIENTRY * PFNGLISMPEGPREDICTORSGIXPROC) (GLuint predictor);$/;"	t	typeref:typename:GLboolean (GLAPIENTRY *)(GLuint predictor)
PFNGLISNAMEAMDPROC	./GL/glew.h	/^typedef GLboolean (GLAPIENTRY * PFNGLISNAMEAMDPROC) (GLenum identifier, GLuint name);$/;"	t	typeref:typename:GLboolean (GLAPIENTRY *)(GLenum identifier,GLuint name)
PFNGLISNAMEDBUFFERRESIDENTNVPROC	./GL/glew.h	/^typedef GLboolean (GLAPIENTRY * PFNGLISNAMEDBUFFERRESIDENTNVPROC) (GLuint buffer);$/;"	t	typeref:typename:GLboolean (GLAPIENTRY *)(GLuint buffer)
PFNGLISNAMEDSTRINGARBPROC	./GL/glew.h	/^typedef GLboolean (GLAPIENTRY * PFNGLISNAMEDSTRINGARBPROC) (GLint namelen, const GLchar* name);$/;"	t	typeref:typename:GLboolean (GLAPIENTRY *)(GLint namelen,const GLchar * name)
PFNGLISOBJECTBUFFERATIPROC	./GL/glew.h	/^typedef GLboolean (GLAPIENTRY * PFNGLISOBJECTBUFFERATIPROC) (GLuint buffer);$/;"	t	typeref:typename:GLboolean (GLAPIENTRY *)(GLuint buffer)
PFNGLISOCCLUSIONQUERYNVPROC	./GL/glew.h	/^typedef GLboolean (GLAPIENTRY * PFNGLISOCCLUSIONQUERYNVPROC) (GLuint id);$/;"	t	typeref:typename:GLboolean (GLAPIENTRY *)(GLuint id)
PFNGLISPATHNVPROC	./GL/glew.h	/^typedef GLboolean (GLAPIENTRY * PFNGLISPATHNVPROC) (GLuint path);$/;"	t	typeref:typename:GLboolean (GLAPIENTRY *)(GLuint path)
PFNGLISPOINTINFILLPATHNVPROC	./GL/glew.h	/^typedef GLboolean (GLAPIENTRY * PFNGLISPOINTINFILLPATHNVPROC) (GLuint path, GLuint mask, GLfloat/;"	t	typeref:typename:GLboolean (GLAPIENTRY *)(GLuint path,GLuint mask,GLfloat x,GLfloat y)
PFNGLISPOINTINSTROKEPATHNVPROC	./GL/glew.h	/^typedef GLboolean (GLAPIENTRY * PFNGLISPOINTINSTROKEPATHNVPROC) (GLuint path, GLfloat x, GLfloat/;"	t	typeref:typename:GLboolean (GLAPIENTRY *)(GLuint path,GLfloat x,GLfloat y)
PFNGLISPROGRAMARBPROC	./GL/glew.h	/^typedef GLboolean (GLAPIENTRY * PFNGLISPROGRAMARBPROC) (GLuint program);$/;"	t	typeref:typename:GLboolean (GLAPIENTRY *)(GLuint program)
PFNGLISPROGRAMNVPROC	./GL/glew.h	/^typedef GLboolean (GLAPIENTRY * PFNGLISPROGRAMNVPROC) (GLuint id);$/;"	t	typeref:typename:GLboolean (GLAPIENTRY *)(GLuint id)
PFNGLISPROGRAMPIPELINEPROC	./GL/glew.h	/^typedef GLboolean (GLAPIENTRY * PFNGLISPROGRAMPIPELINEPROC) (GLuint pipeline);$/;"	t	typeref:typename:GLboolean (GLAPIENTRY *)(GLuint pipeline)
PFNGLISPROGRAMPROC	./GL/glew.h	/^typedef GLboolean (GLAPIENTRY * PFNGLISPROGRAMPROC) (GLuint program);$/;"	t	typeref:typename:GLboolean (GLAPIENTRY *)(GLuint program)
PFNGLISQUERYANGLEPROC	./GL/glew.h	/^typedef GLboolean (GLAPIENTRY * PFNGLISQUERYANGLEPROC) (GLuint id);$/;"	t	typeref:typename:GLboolean (GLAPIENTRY *)(GLuint id)
PFNGLISQUERYARBPROC	./GL/glew.h	/^typedef GLboolean (GLAPIENTRY * PFNGLISQUERYARBPROC) (GLuint id);$/;"	t	typeref:typename:GLboolean (GLAPIENTRY *)(GLuint id)
PFNGLISQUERYEXTPROC	./GL/glew.h	/^typedef GLboolean (GLAPIENTRY * PFNGLISQUERYEXTPROC) (GLuint id);$/;"	t	typeref:typename:GLboolean (GLAPIENTRY *)(GLuint id)
PFNGLISQUERYPROC	./GL/glew.h	/^typedef GLboolean (GLAPIENTRY * PFNGLISQUERYPROC) (GLuint id);$/;"	t	typeref:typename:GLboolean (GLAPIENTRY *)(GLuint id)
PFNGLISRENDERBUFFEREXTPROC	./GL/glew.h	/^typedef GLboolean (GLAPIENTRY * PFNGLISRENDERBUFFEREXTPROC) (GLuint renderbuffer);$/;"	t	typeref:typename:GLboolean (GLAPIENTRY *)(GLuint renderbuffer)
PFNGLISRENDERBUFFEROESPROC	./GL/glew.h	/^typedef GLboolean (GLAPIENTRY * PFNGLISRENDERBUFFEROESPROC) (GLuint renderbuffer);$/;"	t	typeref:typename:GLboolean (GLAPIENTRY *)(GLuint renderbuffer)
PFNGLISRENDERBUFFERPROC	./GL/glew.h	/^typedef GLboolean (GLAPIENTRY * PFNGLISRENDERBUFFERPROC) (GLuint renderbuffer);$/;"	t	typeref:typename:GLboolean (GLAPIENTRY *)(GLuint renderbuffer)
PFNGLISSAMPLERPROC	./GL/glew.h	/^typedef GLboolean (GLAPIENTRY * PFNGLISSAMPLERPROC) (GLuint sampler);$/;"	t	typeref:typename:GLboolean (GLAPIENTRY *)(GLuint sampler)
PFNGLISSEMAPHOREEXTPROC	./GL/glew.h	/^typedef GLboolean (GLAPIENTRY * PFNGLISSEMAPHOREEXTPROC) (GLuint semaphore);$/;"	t	typeref:typename:GLboolean (GLAPIENTRY *)(GLuint semaphore)
PFNGLISSHADERPROC	./GL/glew.h	/^typedef GLboolean (GLAPIENTRY * PFNGLISSHADERPROC) (GLuint shader);$/;"	t	typeref:typename:GLboolean (GLAPIENTRY *)(GLuint shader)
PFNGLISSTATENVPROC	./GL/glew.h	/^typedef GLboolean (GLAPIENTRY * PFNGLISSTATENVPROC) (GLuint state);$/;"	t	typeref:typename:GLboolean (GLAPIENTRY *)(GLuint state)
PFNGLISSUPPORTEDREGALPROC	./GL/glew.h	/^typedef GLboolean (GLAPIENTRY * PFNGLISSUPPORTEDREGALPROC) (const GLchar* ext);$/;"	t	typeref:typename:GLboolean (GLAPIENTRY *)(const GLchar * ext)
PFNGLISSYNCAPPLEPROC	./GL/glew.h	/^typedef GLboolean (GLAPIENTRY * PFNGLISSYNCAPPLEPROC) (GLsync GLsync);$/;"	t	typeref:typename:GLboolean (GLAPIENTRY *)(GLsync GLsync)
PFNGLISSYNCPROC	./GL/glew.h	/^typedef GLboolean (GLAPIENTRY * PFNGLISSYNCPROC) (GLsync GLsync);$/;"	t	typeref:typename:GLboolean (GLAPIENTRY *)(GLsync GLsync)
PFNGLISTEXTUREEXTPROC	./GL/glew.h	/^typedef GLboolean (GLAPIENTRY * PFNGLISTEXTUREEXTPROC) (GLuint texture);$/;"	t	typeref:typename:GLboolean (GLAPIENTRY *)(GLuint texture)
PFNGLISTEXTUREHANDLERESIDENTARBPROC	./GL/glew.h	/^typedef GLboolean (GLAPIENTRY * PFNGLISTEXTUREHANDLERESIDENTARBPROC) (GLuint64 handle);$/;"	t	typeref:typename:GLboolean (GLAPIENTRY *)(GLuint64 handle)
PFNGLISTEXTUREHANDLERESIDENTNVPROC	./GL/glew.h	/^typedef GLboolean (GLAPIENTRY * PFNGLISTEXTUREHANDLERESIDENTNVPROC) (GLuint64 handle);$/;"	t	typeref:typename:GLboolean (GLAPIENTRY *)(GLuint64 handle)
PFNGLISTRANSFORMFEEDBACKNVPROC	./GL/glew.h	/^typedef GLboolean (GLAPIENTRY * PFNGLISTRANSFORMFEEDBACKNVPROC) (GLuint id);$/;"	t	typeref:typename:GLboolean (GLAPIENTRY *)(GLuint id)
PFNGLISTRANSFORMFEEDBACKPROC	./GL/glew.h	/^typedef GLboolean (GLAPIENTRY * PFNGLISTRANSFORMFEEDBACKPROC) (GLuint id);$/;"	t	typeref:typename:GLboolean (GLAPIENTRY *)(GLuint id)
PFNGLISVARIANTENABLEDEXTPROC	./GL/glew.h	/^typedef GLboolean (GLAPIENTRY * PFNGLISVARIANTENABLEDEXTPROC) (GLuint id, GLenum cap);$/;"	t	typeref:typename:GLboolean (GLAPIENTRY *)(GLuint id,GLenum cap)
PFNGLISVERTEXARRAYAPPLEPROC	./GL/glew.h	/^typedef GLboolean (GLAPIENTRY * PFNGLISVERTEXARRAYAPPLEPROC) (GLuint array);$/;"	t	typeref:typename:GLboolean (GLAPIENTRY *)(GLuint array)
PFNGLISVERTEXARRAYOESPROC	./GL/glew.h	/^typedef GLboolean (GLAPIENTRY * PFNGLISVERTEXARRAYOESPROC) (GLuint array);$/;"	t	typeref:typename:GLboolean (GLAPIENTRY *)(GLuint array)
PFNGLISVERTEXARRAYPROC	./GL/glew.h	/^typedef GLboolean (GLAPIENTRY * PFNGLISVERTEXARRAYPROC) (GLuint array);$/;"	t	typeref:typename:GLboolean (GLAPIENTRY *)(GLuint array)
PFNGLISVERTEXARRAYSGIXPROC	./GL/glew.h	/^typedef GLboolean (GLAPIENTRY * PFNGLISVERTEXARRAYSGIXPROC) (GLuint array);$/;"	t	typeref:typename:GLboolean (GLAPIENTRY *)(GLuint array)
PFNGLISVERTEXATTRIBENABLEDAPPLEPROC	./GL/glew.h	/^typedef GLboolean (GLAPIENTRY * PFNGLISVERTEXATTRIBENABLEDAPPLEPROC) (GLuint index, GLenum pname/;"	t	typeref:typename:GLboolean (GLAPIENTRY *)(GLuint index,GLenum pname)
PFNGLLABELOBJECTEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLLABELOBJECTEXTPROC) (GLenum type, GLuint object, GLsizei length,/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum type,GLuint object,GLsizei length,const GLchar * label)
PFNGLLGPUCOPYIMAGESUBDATANVXPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLLGPUCOPYIMAGESUBDATANVXPROC) (GLuint sourceGpu, GLbitfield desti/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint sourceGpu,GLbitfield destinationGpuMask,GLuint srcName,GLenum srcTarget,GLint srcLevel,GLint srcX,GLint srxY,GLint srcZ,GLuint dstName,GLenum dstTarget,GLint dstLevel,GLint dstX,GLint dstY,GLint dstZ,GLsizei width,GLsizei height,GLsizei depth)
PFNGLLGPUINTERLOCKNVXPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLLGPUINTERLOCKNVXPROC) (void);$/;"	t	typeref:typename:void (GLAPIENTRY *)(void)
PFNGLLGPUNAMEDBUFFERSUBDATANVXPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLLGPUNAMEDBUFFERSUBDATANVXPROC) (GLbitfield gpuMask, GLuint buffe/;"	t	typeref:typename:void (GLAPIENTRY *)(GLbitfield gpuMask,GLuint buffer,GLintptr offset,GLsizeiptr size,const void * data)
PFNGLLIGHTENVIEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLLIGHTENVIEXTPROC) (GLenum pname, GLint param);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum pname,GLint param)
PFNGLLIGHTMODELXPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLLIGHTMODELXPROC) (GLenum pname, GLfixed param);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum pname,GLfixed param)
PFNGLLIGHTMODELXVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLLIGHTMODELXVPROC) (GLenum pname, const GLfixed* params);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum pname,const GLfixed * params)
PFNGLLIGHTXPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLLIGHTXPROC) (GLenum light, GLenum pname, GLfixed param);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum light,GLenum pname,GLfixed param)
PFNGLLIGHTXVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLLIGHTXVPROC) (GLenum light, GLenum pname, const GLfixed* params)/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum light,GLenum pname,const GLfixed * params)
PFNGLLINEWIDTHXPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLLINEWIDTHXPROC) (GLfixed width);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLfixed width)
PFNGLLINKPROGRAMARBPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLLINKPROGRAMARBPROC) (GLhandleARB programObj);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLhandleARB programObj)
PFNGLLINKPROGRAMPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLLINKPROGRAMPROC) (GLuint program);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint program)
PFNGLLISTDRAWCOMMANDSSTATESCLIENTNVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLLISTDRAWCOMMANDSSTATESCLIENTNVPROC) (GLuint list, GLuint segment/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint list,GLuint segment,const void ** indirects,const GLsizei * sizes,const GLuint * states,const GLuint * fbos,GLuint count)
PFNGLLOADIDENTITYDEFORMATIONMAPSGIXPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLLOADIDENTITYDEFORMATIONMAPSGIXPROC) (GLbitfield mask);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLbitfield mask)
PFNGLLOADMATRIXXPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLLOADMATRIXXPROC) (const GLfixed* m);$/;"	t	typeref:typename:void (GLAPIENTRY *)(const GLfixed * m)
PFNGLLOADPROGRAMNVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLLOADPROGRAMNVPROC) (GLenum target, GLuint id, GLsizei len, const/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLuint id,GLsizei len,const GLubyte * program)
PFNGLLOADTRANSPOSEMATRIXDARBPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLLOADTRANSPOSEMATRIXDARBPROC) (GLdouble m[16]);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLdouble m[16])
PFNGLLOADTRANSPOSEMATRIXDPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLLOADTRANSPOSEMATRIXDPROC) (const GLdouble m[16]);$/;"	t	typeref:typename:void (GLAPIENTRY *)(const GLdouble m[16])
PFNGLLOADTRANSPOSEMATRIXFARBPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLLOADTRANSPOSEMATRIXFARBPROC) (GLfloat m[16]);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLfloat m[16])
PFNGLLOADTRANSPOSEMATRIXFPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLLOADTRANSPOSEMATRIXFPROC) (const GLfloat m[16]);$/;"	t	typeref:typename:void (GLAPIENTRY *)(const GLfloat m[16])
PFNGLLOCKARRAYSEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLLOCKARRAYSEXTPROC) (GLint first, GLsizei count);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLint first,GLsizei count)
PFNGLLOGMESSAGECALLBACKREGALPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLLOGMESSAGECALLBACKREGALPROC) (GLLOGPROCREGAL callback);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLLOGPROCREGAL callback)
PFNGLMAKEBUFFERNONRESIDENTNVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLMAKEBUFFERNONRESIDENTNVPROC) (GLenum target);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target)
PFNGLMAKEBUFFERRESIDENTNVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLMAKEBUFFERRESIDENTNVPROC) (GLenum target, GLenum access);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLenum access)
PFNGLMAKEIMAGEHANDLENONRESIDENTARBPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLMAKEIMAGEHANDLENONRESIDENTARBPROC) (GLuint64 handle);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint64 handle)
PFNGLMAKEIMAGEHANDLENONRESIDENTNVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLMAKEIMAGEHANDLENONRESIDENTNVPROC) (GLuint64 handle);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint64 handle)
PFNGLMAKEIMAGEHANDLERESIDENTARBPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLMAKEIMAGEHANDLERESIDENTARBPROC) (GLuint64 handle, GLenum access)/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint64 handle,GLenum access)
PFNGLMAKEIMAGEHANDLERESIDENTNVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLMAKEIMAGEHANDLERESIDENTNVPROC) (GLuint64 handle, GLenum access);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint64 handle,GLenum access)
PFNGLMAKENAMEDBUFFERNONRESIDENTNVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLMAKENAMEDBUFFERNONRESIDENTNVPROC) (GLuint buffer);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint buffer)
PFNGLMAKENAMEDBUFFERRESIDENTNVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLMAKENAMEDBUFFERRESIDENTNVPROC) (GLuint buffer, GLenum access);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint buffer,GLenum access)
PFNGLMAKETEXTUREHANDLENONRESIDENTARBPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLMAKETEXTUREHANDLENONRESIDENTARBPROC) (GLuint64 handle);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint64 handle)
PFNGLMAKETEXTUREHANDLENONRESIDENTNVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLMAKETEXTUREHANDLENONRESIDENTNVPROC) (GLuint64 handle);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint64 handle)
PFNGLMAKETEXTUREHANDLERESIDENTARBPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLMAKETEXTUREHANDLERESIDENTARBPROC) (GLuint64 handle);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint64 handle)
PFNGLMAKETEXTUREHANDLERESIDENTNVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLMAKETEXTUREHANDLERESIDENTNVPROC) (GLuint64 handle);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint64 handle)
PFNGLMAPBUFFERARBPROC	./GL/glew.h	/^typedef void * (GLAPIENTRY * PFNGLMAPBUFFERARBPROC) (GLenum target, GLenum access);$/;"	t	typeref:typename:void * (GLAPIENTRY *)(GLenum target,GLenum access)
PFNGLMAPBUFFEROESPROC	./GL/glew.h	/^typedef void * (GLAPIENTRY * PFNGLMAPBUFFEROESPROC) (GLenum target, GLenum access);$/;"	t	typeref:typename:void * (GLAPIENTRY *)(GLenum target,GLenum access)
PFNGLMAPBUFFERPROC	./GL/glew.h	/^typedef void* (GLAPIENTRY * PFNGLMAPBUFFERPROC) (GLenum target, GLenum access);$/;"	t	typeref:typename:void * (GLAPIENTRY *)(GLenum target,GLenum access)
PFNGLMAPBUFFERRANGEEXTPROC	./GL/glew.h	/^typedef void * (GLAPIENTRY * PFNGLMAPBUFFERRANGEEXTPROC) (GLenum target, GLintptr offset, GLsize/;"	t	typeref:typename:void * (GLAPIENTRY *)(GLenum target,GLintptr offset,GLsizeiptr length,GLbitfield access)
PFNGLMAPBUFFERRANGEPROC	./GL/glew.h	/^typedef void * (GLAPIENTRY * PFNGLMAPBUFFERRANGEPROC) (GLenum target, GLintptr offset, GLsizeipt/;"	t	typeref:typename:void * (GLAPIENTRY *)(GLenum target,GLintptr offset,GLsizeiptr length,GLbitfield access)
PFNGLMAPCONTROLPOINTSNVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLMAPCONTROLPOINTSNVPROC) (GLenum target, GLuint index, GLenum typ/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLuint index,GLenum type,GLsizei ustride,GLsizei vstride,GLint uorder,GLint vorder,GLboolean packed,const void * points)
PFNGLMAPNAMEDBUFFEREXTPROC	./GL/glew.h	/^typedef void * (GLAPIENTRY * PFNGLMAPNAMEDBUFFEREXTPROC) (GLuint buffer, GLenum access);$/;"	t	typeref:typename:void * (GLAPIENTRY *)(GLuint buffer,GLenum access)
PFNGLMAPNAMEDBUFFERPROC	./GL/glew.h	/^typedef void * (GLAPIENTRY * PFNGLMAPNAMEDBUFFERPROC) (GLuint buffer, GLenum access);$/;"	t	typeref:typename:void * (GLAPIENTRY *)(GLuint buffer,GLenum access)
PFNGLMAPNAMEDBUFFERRANGEEXTPROC	./GL/glew.h	/^typedef void * (GLAPIENTRY * PFNGLMAPNAMEDBUFFERRANGEEXTPROC) (GLuint buffer, GLintptr offset, G/;"	t	typeref:typename:void * (GLAPIENTRY *)(GLuint buffer,GLintptr offset,GLsizeiptr length,GLbitfield access)
PFNGLMAPNAMEDBUFFERRANGEPROC	./GL/glew.h	/^typedef void * (GLAPIENTRY * PFNGLMAPNAMEDBUFFERRANGEPROC) (GLuint buffer, GLintptr offset, GLsi/;"	t	typeref:typename:void * (GLAPIENTRY *)(GLuint buffer,GLintptr offset,GLsizeiptr length,GLbitfield access)
PFNGLMAPOBJECTBUFFERATIPROC	./GL/glew.h	/^typedef void * (GLAPIENTRY * PFNGLMAPOBJECTBUFFERATIPROC) (GLuint buffer);$/;"	t	typeref:typename:void * (GLAPIENTRY *)(GLuint buffer)
PFNGLMAPPARAMETERFVNVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLMAPPARAMETERFVNVPROC) (GLenum target, GLenum pname, const GLfloa/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLenum pname,const GLfloat * params)
PFNGLMAPPARAMETERIVNVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLMAPPARAMETERIVNVPROC) (GLenum target, GLenum pname, const GLint*/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLenum pname,const GLint * params)
PFNGLMAPTEXTURE2DINTELPROC	./GL/glew.h	/^typedef void * (GLAPIENTRY * PFNGLMAPTEXTURE2DINTELPROC) (GLuint texture, GLint level, GLbitfiel/;"	t	typeref:typename:void * (GLAPIENTRY *)(GLuint texture,GLint level,GLbitfield access,GLint * stride,GLenum * layout)
PFNGLMAPVERTEXATTRIB1DAPPLEPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLMAPVERTEXATTRIB1DAPPLEPROC) (GLuint index, GLuint size, GLdouble/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,GLuint size,GLdouble u1,GLdouble u2,GLint stride,GLint order,const GLdouble * points)
PFNGLMAPVERTEXATTRIB1FAPPLEPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLMAPVERTEXATTRIB1FAPPLEPROC) (GLuint index, GLuint size, GLfloat /;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,GLuint size,GLfloat u1,GLfloat u2,GLint stride,GLint order,const GLfloat * points)
PFNGLMAPVERTEXATTRIB2DAPPLEPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLMAPVERTEXATTRIB2DAPPLEPROC) (GLuint index, GLuint size, GLdouble/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,GLuint size,GLdouble u1,GLdouble u2,GLint ustride,GLint uorder,GLdouble v1,GLdouble v2,GLint vstride,GLint vorder,const GLdouble * points)
PFNGLMAPVERTEXATTRIB2FAPPLEPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLMAPVERTEXATTRIB2FAPPLEPROC) (GLuint index, GLuint size, GLfloat /;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,GLuint size,GLfloat u1,GLfloat u2,GLint ustride,GLint uorder,GLfloat v1,GLfloat v2,GLint vstride,GLint vorder,const GLfloat * points)
PFNGLMATERIALXPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLMATERIALXPROC) (GLenum face, GLenum pname, GLfixed param);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum face,GLenum pname,GLfixed param)
PFNGLMATERIALXVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLMATERIALXVPROC) (GLenum face, GLenum pname, const GLfixed* param/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum face,GLenum pname,const GLfixed * params)
PFNGLMATRIXFRUSTUMEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLMATRIXFRUSTUMEXTPROC) (GLenum matrixMode, GLdouble l, GLdouble r/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum matrixMode,GLdouble l,GLdouble r,GLdouble b,GLdouble t,GLdouble n,GLdouble f)
PFNGLMATRIXINDEXPOINTERARBPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLMATRIXINDEXPOINTERARBPROC) (GLint size, GLenum type, GLsizei str/;"	t	typeref:typename:void (GLAPIENTRY *)(GLint size,GLenum type,GLsizei stride,void * pointer)
PFNGLMATRIXINDEXPOINTEROESPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLMATRIXINDEXPOINTEROESPROC) (GLint size, GLenum type, GLsizei str/;"	t	typeref:typename:void (GLAPIENTRY *)(GLint size,GLenum type,GLsizei stride,void * pointer)
PFNGLMATRIXINDEXUBVARBPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLMATRIXINDEXUBVARBPROC) (GLint size, GLubyte *indices);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLint size,GLubyte * indices)
PFNGLMATRIXINDEXUIVARBPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLMATRIXINDEXUIVARBPROC) (GLint size, GLuint *indices);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLint size,GLuint * indices)
PFNGLMATRIXINDEXUSVARBPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLMATRIXINDEXUSVARBPROC) (GLint size, GLushort *indices);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLint size,GLushort * indices)
PFNGLMATRIXLOAD3X2FNVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLMATRIXLOAD3X2FNVPROC) (GLenum matrixMode, const GLfloat* m);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum matrixMode,const GLfloat * m)
PFNGLMATRIXLOAD3X3FNVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLMATRIXLOAD3X3FNVPROC) (GLenum matrixMode, const GLfloat* m);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum matrixMode,const GLfloat * m)
PFNGLMATRIXLOADDEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLMATRIXLOADDEXTPROC) (GLenum matrixMode, const GLdouble* m);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum matrixMode,const GLdouble * m)
PFNGLMATRIXLOADFEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLMATRIXLOADFEXTPROC) (GLenum matrixMode, const GLfloat* m);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum matrixMode,const GLfloat * m)
PFNGLMATRIXLOADIDENTITYEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLMATRIXLOADIDENTITYEXTPROC) (GLenum matrixMode);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum matrixMode)
PFNGLMATRIXLOADTRANSPOSE3X3FNVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLMATRIXLOADTRANSPOSE3X3FNVPROC) (GLenum matrixMode, const GLfloat/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum matrixMode,const GLfloat * m)
PFNGLMATRIXLOADTRANSPOSEDEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLMATRIXLOADTRANSPOSEDEXTPROC) (GLenum matrixMode, const GLdouble*/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum matrixMode,const GLdouble * m)
PFNGLMATRIXLOADTRANSPOSEFEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLMATRIXLOADTRANSPOSEFEXTPROC) (GLenum matrixMode, const GLfloat* /;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum matrixMode,const GLfloat * m)
PFNGLMATRIXMULT3X2FNVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLMATRIXMULT3X2FNVPROC) (GLenum matrixMode, const GLfloat* m);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum matrixMode,const GLfloat * m)
PFNGLMATRIXMULT3X3FNVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLMATRIXMULT3X3FNVPROC) (GLenum matrixMode, const GLfloat* m);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum matrixMode,const GLfloat * m)
PFNGLMATRIXMULTDEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLMATRIXMULTDEXTPROC) (GLenum matrixMode, const GLdouble* m);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum matrixMode,const GLdouble * m)
PFNGLMATRIXMULTFEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLMATRIXMULTFEXTPROC) (GLenum matrixMode, const GLfloat* m);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum matrixMode,const GLfloat * m)
PFNGLMATRIXMULTTRANSPOSE3X3FNVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLMATRIXMULTTRANSPOSE3X3FNVPROC) (GLenum matrixMode, const GLfloat/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum matrixMode,const GLfloat * m)
PFNGLMATRIXMULTTRANSPOSEDEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLMATRIXMULTTRANSPOSEDEXTPROC) (GLenum matrixMode, const GLdouble*/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum matrixMode,const GLdouble * m)
PFNGLMATRIXMULTTRANSPOSEFEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLMATRIXMULTTRANSPOSEFEXTPROC) (GLenum matrixMode, const GLfloat* /;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum matrixMode,const GLfloat * m)
PFNGLMATRIXORTHOEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLMATRIXORTHOEXTPROC) (GLenum matrixMode, GLdouble l, GLdouble r, /;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum matrixMode,GLdouble l,GLdouble r,GLdouble b,GLdouble t,GLdouble n,GLdouble f)
PFNGLMATRIXPOPEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLMATRIXPOPEXTPROC) (GLenum matrixMode);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum matrixMode)
PFNGLMATRIXPUSHEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLMATRIXPUSHEXTPROC) (GLenum matrixMode);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum matrixMode)
PFNGLMATRIXROTATEDEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLMATRIXROTATEDEXTPROC) (GLenum matrixMode, GLdouble angle, GLdoub/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum matrixMode,GLdouble angle,GLdouble x,GLdouble y,GLdouble z)
PFNGLMATRIXROTATEFEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLMATRIXROTATEFEXTPROC) (GLenum matrixMode, GLfloat angle, GLfloat/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum matrixMode,GLfloat angle,GLfloat x,GLfloat y,GLfloat z)
PFNGLMATRIXSCALEDEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLMATRIXSCALEDEXTPROC) (GLenum matrixMode, GLdouble x, GLdouble y,/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum matrixMode,GLdouble x,GLdouble y,GLdouble z)
PFNGLMATRIXSCALEFEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLMATRIXSCALEFEXTPROC) (GLenum matrixMode, GLfloat x, GLfloat y, G/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum matrixMode,GLfloat x,GLfloat y,GLfloat z)
PFNGLMATRIXTRANSLATEDEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLMATRIXTRANSLATEDEXTPROC) (GLenum matrixMode, GLdouble x, GLdoubl/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum matrixMode,GLdouble x,GLdouble y,GLdouble z)
PFNGLMATRIXTRANSLATEFEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLMATRIXTRANSLATEFEXTPROC) (GLenum matrixMode, GLfloat x, GLfloat /;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum matrixMode,GLfloat x,GLfloat y,GLfloat z)
PFNGLMAXSHADERCOMPILERTHREADSARBPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLMAXSHADERCOMPILERTHREADSARBPROC) (GLuint count);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint count)
PFNGLMAXSHADERCOMPILERTHREADSKHRPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLMAXSHADERCOMPILERTHREADSKHRPROC) (GLuint count);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint count)
PFNGLMEMORYBARRIERBYREGIONPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLMEMORYBARRIERBYREGIONPROC) (GLbitfield barriers);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLbitfield barriers)
PFNGLMEMORYBARRIEREXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLMEMORYBARRIEREXTPROC) (GLbitfield barriers);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLbitfield barriers)
PFNGLMEMORYBARRIERPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLMEMORYBARRIERPROC) (GLbitfield barriers);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLbitfield barriers)
PFNGLMEMORYOBJECTPARAMETERIVEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLMEMORYOBJECTPARAMETERIVEXTPROC) (GLuint memoryObject, GLenum pna/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint memoryObject,GLenum pname,const GLint * params)
PFNGLMESHBREADTHSGIXPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLMESHBREADTHSGIXPROC) (GLint breadth);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLint breadth)
PFNGLMESHSTRIDESGIXPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLMESHSTRIDESGIXPROC) (GLint stride);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLint stride)
PFNGLMINMAXEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLMINMAXEXTPROC) (GLenum target, GLenum internalformat, GLboolean /;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLenum internalformat,GLboolean sink)
PFNGLMINMAXPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLMINMAXPROC) (GLenum target, GLenum internalformat, GLboolean sin/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLenum internalformat,GLboolean sink)
PFNGLMINSAMPLESHADINGARBPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLMINSAMPLESHADINGARBPROC) (GLclampf value);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLclampf value)
PFNGLMINSAMPLESHADINGOESPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLMINSAMPLESHADINGOESPROC) (GLfloat value);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLfloat value)
PFNGLMINSAMPLESHADINGPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLMINSAMPLESHADINGPROC) (GLclampf value);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLclampf value)
PFNGLMPEGPREDICTORSGIXPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLMPEGPREDICTORSGIXPROC) (GLenum target, GLenum format, GLenum typ/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLenum format,GLenum type,void * pixels)
PFNGLMPEGQUANTTABLEUBVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLMPEGQUANTTABLEUBVPROC) (GLenum target, GLubyte* values);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLubyte * values)
PFNGLMULTICASTBARRIERNVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLMULTICASTBARRIERNVPROC) (void);$/;"	t	typeref:typename:void (GLAPIENTRY *)(void)
PFNGLMULTICASTBLITFRAMEBUFFERNVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLMULTICASTBLITFRAMEBUFFERNVPROC) (GLuint srcGpu, GLuint dstGpu, G/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint srcGpu,GLuint dstGpu,GLint srcX0,GLint srcY0,GLint srcX1,GLint srcY1,GLint dstX0,GLint dstY0,GLint dstX1,GLint dstY1,GLbitfield mask,GLenum filter)
PFNGLMULTICASTBUFFERSUBDATANVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLMULTICASTBUFFERSUBDATANVPROC) (GLbitfield gpuMask, GLuint buffer/;"	t	typeref:typename:void (GLAPIENTRY *)(GLbitfield gpuMask,GLuint buffer,GLintptr offset,GLsizeiptr size,const void * data)
PFNGLMULTICASTCOPYBUFFERSUBDATANVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLMULTICASTCOPYBUFFERSUBDATANVPROC) (GLuint readGpu, GLbitfield wr/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint readGpu,GLbitfield writeGpuMask,GLuint readBuffer,GLuint writeBuffer,GLintptr readOffset,GLintptr writeOffset,GLsizeiptr size)
PFNGLMULTICASTCOPYIMAGESUBDATANVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLMULTICASTCOPYIMAGESUBDATANVPROC) (GLuint srcGpu, GLbitfield dstG/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint srcGpu,GLbitfield dstGpuMask,GLuint srcName,GLenum srcTarget,GLint srcLevel,GLint srcX,GLint srcY,GLint srcZ,GLuint dstName,GLenum dstTarget,GLint dstLevel,GLint dstX,GLint dstY,GLint dstZ,GLsizei srcWidth,GLsizei srcHeight,GLsizei srcDepth)
PFNGLMULTICASTFRAMEBUFFERSAMPLELOCATIONSFVNVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLMULTICASTFRAMEBUFFERSAMPLELOCATIONSFVNVPROC) (GLuint gpu, GLuint/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint gpu,GLuint framebuffer,GLuint start,GLsizei count,const GLfloat * v)
PFNGLMULTICASTGETQUERYOBJECTI64VNVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLMULTICASTGETQUERYOBJECTI64VNVPROC) (GLuint gpu, GLuint id, GLenu/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint gpu,GLuint id,GLenum pname,GLint64 * params)
PFNGLMULTICASTGETQUERYOBJECTIVNVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLMULTICASTGETQUERYOBJECTIVNVPROC) (GLuint gpu, GLuint id, GLenum /;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint gpu,GLuint id,GLenum pname,GLint * params)
PFNGLMULTICASTGETQUERYOBJECTUI64VNVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLMULTICASTGETQUERYOBJECTUI64VNVPROC) (GLuint gpu, GLuint id, GLen/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint gpu,GLuint id,GLenum pname,GLuint64 * params)
PFNGLMULTICASTGETQUERYOBJECTUIVNVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLMULTICASTGETQUERYOBJECTUIVNVPROC) (GLuint gpu, GLuint id, GLenum/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint gpu,GLuint id,GLenum pname,GLuint * params)
PFNGLMULTICASTSCISSORARRAYVNVXPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLMULTICASTSCISSORARRAYVNVXPROC) (GLuint gpu, GLuint first, GLsize/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint gpu,GLuint first,GLsizei count,const GLint * v)
PFNGLMULTICASTVIEWPORTARRAYVNVXPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLMULTICASTVIEWPORTARRAYVNVXPROC) (GLuint gpu, GLuint first, GLsiz/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint gpu,GLuint first,GLsizei count,const GLfloat * v)
PFNGLMULTICASTVIEWPORTPOSITIONWSCALENVXPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLMULTICASTVIEWPORTPOSITIONWSCALENVXPROC) (GLuint gpu, GLuint inde/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint gpu,GLuint index,GLfloat xcoeff,GLfloat ycoeff)
PFNGLMULTICASTWAITSYNCNVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLMULTICASTWAITSYNCNVPROC) (GLuint signalGpu, GLbitfield waitGpuMa/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint signalGpu,GLbitfield waitGpuMask)
PFNGLMULTIDRAWARRAYSEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLMULTIDRAWARRAYSEXTPROC) (GLenum mode, const GLint* first, const /;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum mode,const GLint * first,const GLsizei * count,GLsizei primcount)
PFNGLMULTIDRAWARRAYSINDIRECTAMDPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLMULTIDRAWARRAYSINDIRECTAMDPROC) (GLenum mode, const void *indire/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum mode,const void * indirect,GLsizei primcount,GLsizei stride)
PFNGLMULTIDRAWARRAYSINDIRECTBINDLESSCOUNTNVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLMULTIDRAWARRAYSINDIRECTBINDLESSCOUNTNVPROC) (GLenum mode, const /;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum mode,const void * indirect,GLintptr drawCount,GLsizei maxDrawCount,GLsizei stride,GLint vertexBufferCount)
PFNGLMULTIDRAWARRAYSINDIRECTBINDLESSNVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLMULTIDRAWARRAYSINDIRECTBINDLESSNVPROC) (GLenum mode, const void /;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum mode,const void * indirect,GLsizei drawCount,GLsizei stride,GLint vertexBufferCount)
PFNGLMULTIDRAWARRAYSINDIRECTCOUNTARBPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLMULTIDRAWARRAYSINDIRECTCOUNTARBPROC) (GLenum mode, const void *i/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum mode,const void * indirect,GLintptr drawcount,GLsizei maxdrawcount,GLsizei stride)
PFNGLMULTIDRAWARRAYSINDIRECTCOUNTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLMULTIDRAWARRAYSINDIRECTCOUNTPROC) (GLenum mode, const GLvoid *in/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum mode,const GLvoid * indirect,GLintptr drawcount,GLsizei maxdrawcount,GLsizei stride)
PFNGLMULTIDRAWARRAYSINDIRECTEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLMULTIDRAWARRAYSINDIRECTEXTPROC) (GLenum mode, const void *indire/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum mode,const void * indirect,GLsizei drawcount,GLsizei stride)
PFNGLMULTIDRAWARRAYSINDIRECTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLMULTIDRAWARRAYSINDIRECTPROC) (GLenum mode, const void *indirect,/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum mode,const void * indirect,GLsizei primcount,GLsizei stride)
PFNGLMULTIDRAWARRAYSPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLMULTIDRAWARRAYSPROC) (GLenum mode, const GLint *first, const GLs/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum mode,const GLint * first,const GLsizei * count,GLsizei drawcount)
PFNGLMULTIDRAWELEMENTARRAYAPPLEPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLMULTIDRAWELEMENTARRAYAPPLEPROC) (GLenum mode, const GLint* first/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum mode,const GLint * first,const GLsizei * count,GLsizei primcount)
PFNGLMULTIDRAWELEMENTSBASEVERTEXEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLMULTIDRAWELEMENTSBASEVERTEXEXTPROC) (GLenum mode, const GLsizei*/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum mode,const GLsizei * count,GLenum type,const void * const * indices,GLsizei primcount,const GLint * basevertex)
PFNGLMULTIDRAWELEMENTSBASEVERTEXPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLMULTIDRAWELEMENTSBASEVERTEXPROC) (GLenum mode, const GLsizei* co/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum mode,const GLsizei * count,GLenum type,const void * const * indices,GLsizei drawcount,const GLint * basevertex)
PFNGLMULTIDRAWELEMENTSEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLMULTIDRAWELEMENTSEXTPROC) (GLenum mode, GLsizei* count, GLenum t/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum mode,GLsizei * count,GLenum type,const void * const * indices,GLsizei primcount)
PFNGLMULTIDRAWELEMENTSINDIRECTAMDPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLMULTIDRAWELEMENTSINDIRECTAMDPROC) (GLenum mode, GLenum type, con/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum mode,GLenum type,const void * indirect,GLsizei primcount,GLsizei stride)
PFNGLMULTIDRAWELEMENTSINDIRECTBINDLESSCOUNTNVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLMULTIDRAWELEMENTSINDIRECTBINDLESSCOUNTNVPROC) (GLenum mode, GLen/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum mode,GLenum type,const void * indirect,GLintptr drawCount,GLsizei maxDrawCount,GLsizei stride,GLint vertexBufferCount)
PFNGLMULTIDRAWELEMENTSINDIRECTBINDLESSNVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLMULTIDRAWELEMENTSINDIRECTBINDLESSNVPROC) (GLenum mode, GLenum ty/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum mode,GLenum type,const void * indirect,GLsizei drawCount,GLsizei stride,GLint vertexBufferCount)
PFNGLMULTIDRAWELEMENTSINDIRECTCOUNTARBPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLMULTIDRAWELEMENTSINDIRECTCOUNTARBPROC) (GLenum mode, GLenum type/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum mode,GLenum type,const void * indirect,GLintptr drawcount,GLsizei maxdrawcount,GLsizei stride)
PFNGLMULTIDRAWELEMENTSINDIRECTCOUNTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLMULTIDRAWELEMENTSINDIRECTCOUNTPROC) (GLenum mode, GLenum type, c/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum mode,GLenum type,const GLvoid * indirect,GLintptr drawcount,GLsizei maxdrawcount,GLsizei stride)
PFNGLMULTIDRAWELEMENTSINDIRECTEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLMULTIDRAWELEMENTSINDIRECTEXTPROC) (GLenum mode, GLenum type, con/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum mode,GLenum type,const void * indirect,GLsizei drawcount,GLsizei stride)
PFNGLMULTIDRAWELEMENTSINDIRECTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLMULTIDRAWELEMENTSINDIRECTPROC) (GLenum mode, GLenum type, const /;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum mode,GLenum type,const void * indirect,GLsizei primcount,GLsizei stride)
PFNGLMULTIDRAWELEMENTSPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLMULTIDRAWELEMENTSPROC) (GLenum mode, const GLsizei *count, GLenu/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum mode,const GLsizei * count,GLenum type,const void * const * indices,GLsizei drawcount)
PFNGLMULTIDRAWMESHTASKSINDIRECTCOUNTNVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLMULTIDRAWMESHTASKSINDIRECTCOUNTNVPROC) (GLintptr indirect, GLint/;"	t	typeref:typename:void (GLAPIENTRY *)(GLintptr indirect,GLintptr drawcount,GLsizei maxdrawcount,GLsizei stride)
PFNGLMULTIDRAWMESHTASKSINDIRECTNVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLMULTIDRAWMESHTASKSINDIRECTNVPROC) (GLintptr indirect, GLsizei dr/;"	t	typeref:typename:void (GLAPIENTRY *)(GLintptr indirect,GLsizei drawcount,GLsizei stride)
PFNGLMULTIDRAWRANGEELEMENTARRAYAPPLEPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLMULTIDRAWRANGEELEMENTARRAYAPPLEPROC) (GLenum mode, GLuint start,/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum mode,GLuint start,GLuint end,const GLint * first,const GLsizei * count,GLsizei primcount)
PFNGLMULTIMODEDRAWARRAYSIBMPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLMULTIMODEDRAWARRAYSIBMPROC) (const GLenum* mode, const GLint *fi/;"	t	typeref:typename:void (GLAPIENTRY *)(const GLenum * mode,const GLint * first,const GLsizei * count,GLsizei primcount,GLint modestride)
PFNGLMULTIMODEDRAWELEMENTSIBMPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLMULTIMODEDRAWELEMENTSIBMPROC) (const GLenum* mode, const GLsizei/;"	t	typeref:typename:void (GLAPIENTRY *)(const GLenum * mode,const GLsizei * count,GLenum type,const void * const * indices,GLsizei primcount,GLint modestride)
PFNGLMULTISAMPLESUBRECTPOSSGISPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLMULTISAMPLESUBRECTPOSSGISPROC) (GLint x, GLint y);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLint x,GLint y)
PFNGLMULTITEXBUFFEREXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLMULTITEXBUFFEREXTPROC) (GLenum texunit, GLenum target, GLenum in/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum texunit,GLenum target,GLenum internalformat,GLuint buffer)
PFNGLMULTITEXCOORD1DARBPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLMULTITEXCOORD1DARBPROC) (GLenum target, GLdouble s);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLdouble s)
PFNGLMULTITEXCOORD1DPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLMULTITEXCOORD1DPROC) (GLenum target, GLdouble s);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLdouble s)
PFNGLMULTITEXCOORD1DVARBPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLMULTITEXCOORD1DVARBPROC) (GLenum target, const GLdouble *v);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,const GLdouble * v)
PFNGLMULTITEXCOORD1DVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLMULTITEXCOORD1DVPROC) (GLenum target, const GLdouble *v);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,const GLdouble * v)
PFNGLMULTITEXCOORD1FARBPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLMULTITEXCOORD1FARBPROC) (GLenum target, GLfloat s);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLfloat s)
PFNGLMULTITEXCOORD1FPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLMULTITEXCOORD1FPROC) (GLenum target, GLfloat s);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLfloat s)
PFNGLMULTITEXCOORD1FVARBPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLMULTITEXCOORD1FVARBPROC) (GLenum target, const GLfloat *v);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,const GLfloat * v)
PFNGLMULTITEXCOORD1FVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLMULTITEXCOORD1FVPROC) (GLenum target, const GLfloat *v);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,const GLfloat * v)
PFNGLMULTITEXCOORD1HNVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLMULTITEXCOORD1HNVPROC) (GLenum target, GLhalf s);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLhalf s)
PFNGLMULTITEXCOORD1HVNVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLMULTITEXCOORD1HVNVPROC) (GLenum target, const GLhalf* v);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,const GLhalf * v)
PFNGLMULTITEXCOORD1IARBPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLMULTITEXCOORD1IARBPROC) (GLenum target, GLint s);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLint s)
PFNGLMULTITEXCOORD1IPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLMULTITEXCOORD1IPROC) (GLenum target, GLint s);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLint s)
PFNGLMULTITEXCOORD1IVARBPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLMULTITEXCOORD1IVARBPROC) (GLenum target, const GLint *v);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,const GLint * v)
PFNGLMULTITEXCOORD1IVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLMULTITEXCOORD1IVPROC) (GLenum target, const GLint *v);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,const GLint * v)
PFNGLMULTITEXCOORD1SARBPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLMULTITEXCOORD1SARBPROC) (GLenum target, GLshort s);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLshort s)
PFNGLMULTITEXCOORD1SPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLMULTITEXCOORD1SPROC) (GLenum target, GLshort s);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLshort s)
PFNGLMULTITEXCOORD1SVARBPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLMULTITEXCOORD1SVARBPROC) (GLenum target, const GLshort *v);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,const GLshort * v)
PFNGLMULTITEXCOORD1SVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLMULTITEXCOORD1SVPROC) (GLenum target, const GLshort *v);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,const GLshort * v)
PFNGLMULTITEXCOORD2DARBPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLMULTITEXCOORD2DARBPROC) (GLenum target, GLdouble s, GLdouble t);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLdouble s,GLdouble t)
PFNGLMULTITEXCOORD2DPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLMULTITEXCOORD2DPROC) (GLenum target, GLdouble s, GLdouble t);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLdouble s,GLdouble t)
PFNGLMULTITEXCOORD2DVARBPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLMULTITEXCOORD2DVARBPROC) (GLenum target, const GLdouble *v);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,const GLdouble * v)
PFNGLMULTITEXCOORD2DVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLMULTITEXCOORD2DVPROC) (GLenum target, const GLdouble *v);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,const GLdouble * v)
PFNGLMULTITEXCOORD2FARBPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLMULTITEXCOORD2FARBPROC) (GLenum target, GLfloat s, GLfloat t);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLfloat s,GLfloat t)
PFNGLMULTITEXCOORD2FPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLMULTITEXCOORD2FPROC) (GLenum target, GLfloat s, GLfloat t);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLfloat s,GLfloat t)
PFNGLMULTITEXCOORD2FVARBPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLMULTITEXCOORD2FVARBPROC) (GLenum target, const GLfloat *v);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,const GLfloat * v)
PFNGLMULTITEXCOORD2FVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLMULTITEXCOORD2FVPROC) (GLenum target, const GLfloat *v);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,const GLfloat * v)
PFNGLMULTITEXCOORD2HNVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLMULTITEXCOORD2HNVPROC) (GLenum target, GLhalf s, GLhalf t);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLhalf s,GLhalf t)
PFNGLMULTITEXCOORD2HVNVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLMULTITEXCOORD2HVNVPROC) (GLenum target, const GLhalf* v);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,const GLhalf * v)
PFNGLMULTITEXCOORD2IARBPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLMULTITEXCOORD2IARBPROC) (GLenum target, GLint s, GLint t);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLint s,GLint t)
PFNGLMULTITEXCOORD2IPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLMULTITEXCOORD2IPROC) (GLenum target, GLint s, GLint t);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLint s,GLint t)
PFNGLMULTITEXCOORD2IVARBPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLMULTITEXCOORD2IVARBPROC) (GLenum target, const GLint *v);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,const GLint * v)
PFNGLMULTITEXCOORD2IVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLMULTITEXCOORD2IVPROC) (GLenum target, const GLint *v);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,const GLint * v)
PFNGLMULTITEXCOORD2SARBPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLMULTITEXCOORD2SARBPROC) (GLenum target, GLshort s, GLshort t);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLshort s,GLshort t)
PFNGLMULTITEXCOORD2SPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLMULTITEXCOORD2SPROC) (GLenum target, GLshort s, GLshort t);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLshort s,GLshort t)
PFNGLMULTITEXCOORD2SVARBPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLMULTITEXCOORD2SVARBPROC) (GLenum target, const GLshort *v);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,const GLshort * v)
PFNGLMULTITEXCOORD2SVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLMULTITEXCOORD2SVPROC) (GLenum target, const GLshort *v);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,const GLshort * v)
PFNGLMULTITEXCOORD3DARBPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLMULTITEXCOORD3DARBPROC) (GLenum target, GLdouble s, GLdouble t, /;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLdouble s,GLdouble t,GLdouble r)
PFNGLMULTITEXCOORD3DPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLMULTITEXCOORD3DPROC) (GLenum target, GLdouble s, GLdouble t, GLd/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLdouble s,GLdouble t,GLdouble r)
PFNGLMULTITEXCOORD3DVARBPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLMULTITEXCOORD3DVARBPROC) (GLenum target, const GLdouble *v);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,const GLdouble * v)
PFNGLMULTITEXCOORD3DVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLMULTITEXCOORD3DVPROC) (GLenum target, const GLdouble *v);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,const GLdouble * v)
PFNGLMULTITEXCOORD3FARBPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLMULTITEXCOORD3FARBPROC) (GLenum target, GLfloat s, GLfloat t, GL/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLfloat s,GLfloat t,GLfloat r)
PFNGLMULTITEXCOORD3FPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLMULTITEXCOORD3FPROC) (GLenum target, GLfloat s, GLfloat t, GLflo/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLfloat s,GLfloat t,GLfloat r)
PFNGLMULTITEXCOORD3FVARBPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLMULTITEXCOORD3FVARBPROC) (GLenum target, const GLfloat *v);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,const GLfloat * v)
PFNGLMULTITEXCOORD3FVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLMULTITEXCOORD3FVPROC) (GLenum target, const GLfloat *v);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,const GLfloat * v)
PFNGLMULTITEXCOORD3HNVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLMULTITEXCOORD3HNVPROC) (GLenum target, GLhalf s, GLhalf t, GLhal/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLhalf s,GLhalf t,GLhalf r)
PFNGLMULTITEXCOORD3HVNVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLMULTITEXCOORD3HVNVPROC) (GLenum target, const GLhalf* v);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,const GLhalf * v)
PFNGLMULTITEXCOORD3IARBPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLMULTITEXCOORD3IARBPROC) (GLenum target, GLint s, GLint t, GLint /;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLint s,GLint t,GLint r)
PFNGLMULTITEXCOORD3IPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLMULTITEXCOORD3IPROC) (GLenum target, GLint s, GLint t, GLint r);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLint s,GLint t,GLint r)
PFNGLMULTITEXCOORD3IVARBPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLMULTITEXCOORD3IVARBPROC) (GLenum target, const GLint *v);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,const GLint * v)
PFNGLMULTITEXCOORD3IVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLMULTITEXCOORD3IVPROC) (GLenum target, const GLint *v);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,const GLint * v)
PFNGLMULTITEXCOORD3SARBPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLMULTITEXCOORD3SARBPROC) (GLenum target, GLshort s, GLshort t, GL/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLshort s,GLshort t,GLshort r)
PFNGLMULTITEXCOORD3SPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLMULTITEXCOORD3SPROC) (GLenum target, GLshort s, GLshort t, GLsho/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLshort s,GLshort t,GLshort r)
PFNGLMULTITEXCOORD3SVARBPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLMULTITEXCOORD3SVARBPROC) (GLenum target, const GLshort *v);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,const GLshort * v)
PFNGLMULTITEXCOORD3SVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLMULTITEXCOORD3SVPROC) (GLenum target, const GLshort *v);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,const GLshort * v)
PFNGLMULTITEXCOORD4DARBPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLMULTITEXCOORD4DARBPROC) (GLenum target, GLdouble s, GLdouble t, /;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLdouble s,GLdouble t,GLdouble r,GLdouble q)
PFNGLMULTITEXCOORD4DPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLMULTITEXCOORD4DPROC) (GLenum target, GLdouble s, GLdouble t, GLd/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLdouble s,GLdouble t,GLdouble r,GLdouble q)
PFNGLMULTITEXCOORD4DVARBPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLMULTITEXCOORD4DVARBPROC) (GLenum target, const GLdouble *v);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,const GLdouble * v)
PFNGLMULTITEXCOORD4DVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLMULTITEXCOORD4DVPROC) (GLenum target, const GLdouble *v);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,const GLdouble * v)
PFNGLMULTITEXCOORD4FARBPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLMULTITEXCOORD4FARBPROC) (GLenum target, GLfloat s, GLfloat t, GL/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLfloat s,GLfloat t,GLfloat r,GLfloat q)
PFNGLMULTITEXCOORD4FPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLMULTITEXCOORD4FPROC) (GLenum target, GLfloat s, GLfloat t, GLflo/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLfloat s,GLfloat t,GLfloat r,GLfloat q)
PFNGLMULTITEXCOORD4FVARBPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLMULTITEXCOORD4FVARBPROC) (GLenum target, const GLfloat *v);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,const GLfloat * v)
PFNGLMULTITEXCOORD4FVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLMULTITEXCOORD4FVPROC) (GLenum target, const GLfloat *v);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,const GLfloat * v)
PFNGLMULTITEXCOORD4HNVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLMULTITEXCOORD4HNVPROC) (GLenum target, GLhalf s, GLhalf t, GLhal/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLhalf s,GLhalf t,GLhalf r,GLhalf q)
PFNGLMULTITEXCOORD4HVNVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLMULTITEXCOORD4HVNVPROC) (GLenum target, const GLhalf* v);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,const GLhalf * v)
PFNGLMULTITEXCOORD4IARBPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLMULTITEXCOORD4IARBPROC) (GLenum target, GLint s, GLint t, GLint /;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLint s,GLint t,GLint r,GLint q)
PFNGLMULTITEXCOORD4IPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLMULTITEXCOORD4IPROC) (GLenum target, GLint s, GLint t, GLint r, /;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLint s,GLint t,GLint r,GLint q)
PFNGLMULTITEXCOORD4IVARBPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLMULTITEXCOORD4IVARBPROC) (GLenum target, const GLint *v);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,const GLint * v)
PFNGLMULTITEXCOORD4IVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLMULTITEXCOORD4IVPROC) (GLenum target, const GLint *v);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,const GLint * v)
PFNGLMULTITEXCOORD4SARBPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLMULTITEXCOORD4SARBPROC) (GLenum target, GLshort s, GLshort t, GL/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLshort s,GLshort t,GLshort r,GLshort q)
PFNGLMULTITEXCOORD4SPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLMULTITEXCOORD4SPROC) (GLenum target, GLshort s, GLshort t, GLsho/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLshort s,GLshort t,GLshort r,GLshort q)
PFNGLMULTITEXCOORD4SVARBPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLMULTITEXCOORD4SVARBPROC) (GLenum target, const GLshort *v);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,const GLshort * v)
PFNGLMULTITEXCOORD4SVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLMULTITEXCOORD4SVPROC) (GLenum target, const GLshort *v);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,const GLshort * v)
PFNGLMULTITEXCOORD4XPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLMULTITEXCOORD4XPROC) (GLenum target, GLfixed s, GLfixed t, GLfix/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLfixed s,GLfixed t,GLfixed r,GLfixed q)
PFNGLMULTITEXCOORDP1UIPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLMULTITEXCOORDP1UIPROC) (GLenum texture, GLenum type, GLuint coor/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum texture,GLenum type,GLuint coords)
PFNGLMULTITEXCOORDP1UIVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLMULTITEXCOORDP1UIVPROC) (GLenum texture, GLenum type, const GLui/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum texture,GLenum type,const GLuint * coords)
PFNGLMULTITEXCOORDP2UIPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLMULTITEXCOORDP2UIPROC) (GLenum texture, GLenum type, GLuint coor/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum texture,GLenum type,GLuint coords)
PFNGLMULTITEXCOORDP2UIVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLMULTITEXCOORDP2UIVPROC) (GLenum texture, GLenum type, const GLui/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum texture,GLenum type,const GLuint * coords)
PFNGLMULTITEXCOORDP3UIPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLMULTITEXCOORDP3UIPROC) (GLenum texture, GLenum type, GLuint coor/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum texture,GLenum type,GLuint coords)
PFNGLMULTITEXCOORDP3UIVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLMULTITEXCOORDP3UIVPROC) (GLenum texture, GLenum type, const GLui/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum texture,GLenum type,const GLuint * coords)
PFNGLMULTITEXCOORDP4UIPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLMULTITEXCOORDP4UIPROC) (GLenum texture, GLenum type, GLuint coor/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum texture,GLenum type,GLuint coords)
PFNGLMULTITEXCOORDP4UIVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLMULTITEXCOORDP4UIVPROC) (GLenum texture, GLenum type, const GLui/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum texture,GLenum type,const GLuint * coords)
PFNGLMULTITEXCOORDPOINTEREXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLMULTITEXCOORDPOINTEREXTPROC) (GLenum texunit, GLint size, GLenum/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum texunit,GLint size,GLenum type,GLsizei stride,const void * pointer)
PFNGLMULTITEXENVFEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLMULTITEXENVFEXTPROC) (GLenum texunit, GLenum target, GLenum pnam/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum texunit,GLenum target,GLenum pname,GLfloat param)
PFNGLMULTITEXENVFVEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLMULTITEXENVFVEXTPROC) (GLenum texunit, GLenum target, GLenum pna/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum texunit,GLenum target,GLenum pname,const GLfloat * params)
PFNGLMULTITEXENVIEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLMULTITEXENVIEXTPROC) (GLenum texunit, GLenum target, GLenum pnam/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum texunit,GLenum target,GLenum pname,GLint param)
PFNGLMULTITEXENVIVEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLMULTITEXENVIVEXTPROC) (GLenum texunit, GLenum target, GLenum pna/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum texunit,GLenum target,GLenum pname,const GLint * params)
PFNGLMULTITEXGENDEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLMULTITEXGENDEXTPROC) (GLenum texunit, GLenum coord, GLenum pname/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum texunit,GLenum coord,GLenum pname,GLdouble param)
PFNGLMULTITEXGENDVEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLMULTITEXGENDVEXTPROC) (GLenum texunit, GLenum coord, GLenum pnam/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum texunit,GLenum coord,GLenum pname,const GLdouble * params)
PFNGLMULTITEXGENFEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLMULTITEXGENFEXTPROC) (GLenum texunit, GLenum coord, GLenum pname/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum texunit,GLenum coord,GLenum pname,GLfloat param)
PFNGLMULTITEXGENFVEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLMULTITEXGENFVEXTPROC) (GLenum texunit, GLenum coord, GLenum pnam/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum texunit,GLenum coord,GLenum pname,const GLfloat * params)
PFNGLMULTITEXGENIEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLMULTITEXGENIEXTPROC) (GLenum texunit, GLenum coord, GLenum pname/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum texunit,GLenum coord,GLenum pname,GLint param)
PFNGLMULTITEXGENIVEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLMULTITEXGENIVEXTPROC) (GLenum texunit, GLenum coord, GLenum pnam/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum texunit,GLenum coord,GLenum pname,const GLint * params)
PFNGLMULTITEXIMAGE1DEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLMULTITEXIMAGE1DEXTPROC) (GLenum texunit, GLenum target, GLint le/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum texunit,GLenum target,GLint level,GLint internalformat,GLsizei width,GLint border,GLenum format,GLenum type,const void * pixels)
PFNGLMULTITEXIMAGE2DEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLMULTITEXIMAGE2DEXTPROC) (GLenum texunit, GLenum target, GLint le/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum texunit,GLenum target,GLint level,GLint internalformat,GLsizei width,GLsizei height,GLint border,GLenum format,GLenum type,const void * pixels)
PFNGLMULTITEXIMAGE3DEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLMULTITEXIMAGE3DEXTPROC) (GLenum texunit, GLenum target, GLint le/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum texunit,GLenum target,GLint level,GLint internalformat,GLsizei width,GLsizei height,GLsizei depth,GLint border,GLenum format,GLenum type,const void * pixels)
PFNGLMULTITEXPARAMETERFEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLMULTITEXPARAMETERFEXTPROC) (GLenum texunit, GLenum target, GLenu/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum texunit,GLenum target,GLenum pname,GLfloat param)
PFNGLMULTITEXPARAMETERFVEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLMULTITEXPARAMETERFVEXTPROC) (GLenum texunit, GLenum target, GLen/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum texunit,GLenum target,GLenum pname,const GLfloat * param)
PFNGLMULTITEXPARAMETERIEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLMULTITEXPARAMETERIEXTPROC) (GLenum texunit, GLenum target, GLenu/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum texunit,GLenum target,GLenum pname,GLint param)
PFNGLMULTITEXPARAMETERIIVEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLMULTITEXPARAMETERIIVEXTPROC) (GLenum texunit, GLenum target, GLe/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum texunit,GLenum target,GLenum pname,const GLint * params)
PFNGLMULTITEXPARAMETERIUIVEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLMULTITEXPARAMETERIUIVEXTPROC) (GLenum texunit, GLenum target, GL/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum texunit,GLenum target,GLenum pname,const GLuint * params)
PFNGLMULTITEXPARAMETERIVEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLMULTITEXPARAMETERIVEXTPROC) (GLenum texunit, GLenum target, GLen/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum texunit,GLenum target,GLenum pname,const GLint * param)
PFNGLMULTITEXRENDERBUFFEREXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLMULTITEXRENDERBUFFEREXTPROC) (GLenum texunit, GLenum target, GLu/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum texunit,GLenum target,GLuint renderbuffer)
PFNGLMULTITEXSUBIMAGE1DEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLMULTITEXSUBIMAGE1DEXTPROC) (GLenum texunit, GLenum target, GLint/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum texunit,GLenum target,GLint level,GLint xoffset,GLsizei width,GLenum format,GLenum type,const void * pixels)
PFNGLMULTITEXSUBIMAGE2DEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLMULTITEXSUBIMAGE2DEXTPROC) (GLenum texunit, GLenum target, GLint/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum texunit,GLenum target,GLint level,GLint xoffset,GLint yoffset,GLsizei width,GLsizei height,GLenum format,GLenum type,const void * pixels)
PFNGLMULTITEXSUBIMAGE3DEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLMULTITEXSUBIMAGE3DEXTPROC) (GLenum texunit, GLenum target, GLint/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum texunit,GLenum target,GLint level,GLint xoffset,GLint yoffset,GLint zoffset,GLsizei width,GLsizei height,GLsizei depth,GLenum format,GLenum type,const void * pixels)
PFNGLMULTMATRIXXPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLMULTMATRIXXPROC) (const GLfixed* m);$/;"	t	typeref:typename:void (GLAPIENTRY *)(const GLfixed * m)
PFNGLMULTTRANSPOSEMATRIXDARBPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLMULTTRANSPOSEMATRIXDARBPROC) (GLdouble m[16]);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLdouble m[16])
PFNGLMULTTRANSPOSEMATRIXDPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLMULTTRANSPOSEMATRIXDPROC) (const GLdouble m[16]);$/;"	t	typeref:typename:void (GLAPIENTRY *)(const GLdouble m[16])
PFNGLMULTTRANSPOSEMATRIXFARBPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLMULTTRANSPOSEMATRIXFARBPROC) (GLfloat m[16]);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLfloat m[16])
PFNGLMULTTRANSPOSEMATRIXFPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLMULTTRANSPOSEMATRIXFPROC) (const GLfloat m[16]);$/;"	t	typeref:typename:void (GLAPIENTRY *)(const GLfloat m[16])
PFNGLNAMEDBUFFERATTACHMEMORYNVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLNAMEDBUFFERATTACHMEMORYNVPROC) (GLuint buffer, GLuint memory, GL/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint buffer,GLuint memory,GLuint64 offset)
PFNGLNAMEDBUFFERDATAEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLNAMEDBUFFERDATAEXTPROC) (GLuint buffer, GLsizeiptr size, const v/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint buffer,GLsizeiptr size,const void * data,GLenum usage)
PFNGLNAMEDBUFFERDATAPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLNAMEDBUFFERDATAPROC) (GLuint buffer, GLsizeiptr size, const void/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint buffer,GLsizeiptr size,const void * data,GLenum usage)
PFNGLNAMEDBUFFERSTORAGEEXTERNALEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLNAMEDBUFFERSTORAGEEXTERNALEXTPROC) (GLuint buffer, GLintptr offs/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint buffer,GLintptr offset,GLsizeiptr size,GLeglClientBufferEXT clientBuffer,GLbitfield flags)
PFNGLNAMEDBUFFERSTORAGEEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLNAMEDBUFFERSTORAGEEXTPROC) (GLuint buffer, GLsizeiptr size, cons/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint buffer,GLsizeiptr size,const void * data,GLbitfield flags)
PFNGLNAMEDBUFFERSTORAGEMEMEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLNAMEDBUFFERSTORAGEMEMEXTPROC) (GLuint buffer, GLsizeiptr size, G/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint buffer,GLsizeiptr size,GLuint memory,GLuint64 offset)
PFNGLNAMEDBUFFERSTORAGEPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLNAMEDBUFFERSTORAGEPROC) (GLuint buffer, GLsizeiptr size, const v/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint buffer,GLsizeiptr size,const void * data,GLbitfield flags)
PFNGLNAMEDBUFFERSUBDATAEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLNAMEDBUFFERSUBDATAEXTPROC) (GLuint buffer, GLintptr offset, GLsi/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint buffer,GLintptr offset,GLsizeiptr size,const void * data)
PFNGLNAMEDBUFFERSUBDATAPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLNAMEDBUFFERSUBDATAPROC) (GLuint buffer, GLintptr offset, GLsizei/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint buffer,GLintptr offset,GLsizeiptr size,const void * data)
PFNGLNAMEDCOPYBUFFERSUBDATAEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLNAMEDCOPYBUFFERSUBDATAEXTPROC) (GLuint readBuffer, GLuint writeB/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint readBuffer,GLuint writeBuffer,GLintptr readOffset,GLintptr writeOffset,GLsizeiptr size)
PFNGLNAMEDFRAMEBUFFERDRAWBUFFERPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLNAMEDFRAMEBUFFERDRAWBUFFERPROC) (GLuint framebuffer, GLenum mode/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint framebuffer,GLenum mode)
PFNGLNAMEDFRAMEBUFFERDRAWBUFFERSPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLNAMEDFRAMEBUFFERDRAWBUFFERSPROC) (GLuint framebuffer, GLsizei n,/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint framebuffer,GLsizei n,const GLenum * bufs)
PFNGLNAMEDFRAMEBUFFERPARAMETERIEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLNAMEDFRAMEBUFFERPARAMETERIEXTPROC) (GLuint framebuffer, GLenum p/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint framebuffer,GLenum pname,GLint param)
PFNGLNAMEDFRAMEBUFFERPARAMETERIPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLNAMEDFRAMEBUFFERPARAMETERIPROC) (GLuint framebuffer, GLenum pnam/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint framebuffer,GLenum pname,GLint param)
PFNGLNAMEDFRAMEBUFFERREADBUFFERPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLNAMEDFRAMEBUFFERREADBUFFERPROC) (GLuint framebuffer, GLenum mode/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint framebuffer,GLenum mode)
PFNGLNAMEDFRAMEBUFFERRENDERBUFFEREXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLNAMEDFRAMEBUFFERRENDERBUFFEREXTPROC) (GLuint framebuffer, GLenum/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint framebuffer,GLenum attachment,GLenum renderbuffertarget,GLuint renderbuffer)
PFNGLNAMEDFRAMEBUFFERRENDERBUFFERPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLNAMEDFRAMEBUFFERRENDERBUFFERPROC) (GLuint framebuffer, GLenum at/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint framebuffer,GLenum attachment,GLenum renderbuffertarget,GLuint renderbuffer)
PFNGLNAMEDFRAMEBUFFERSAMPLELOCATIONSFVARBPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLNAMEDFRAMEBUFFERSAMPLELOCATIONSFVARBPROC) (GLuint framebuffer, G/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint framebuffer,GLuint start,GLsizei count,const GLfloat * v)
PFNGLNAMEDFRAMEBUFFERSAMPLELOCATIONSFVNVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLNAMEDFRAMEBUFFERSAMPLELOCATIONSFVNVPROC) (GLuint framebuffer, GL/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint framebuffer,GLuint start,GLsizei count,const GLfloat * v)
PFNGLNAMEDFRAMEBUFFERSAMPLEPOSITIONSFVAMDPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLNAMEDFRAMEBUFFERSAMPLEPOSITIONSFVAMDPROC) (GLuint framebuffer, G/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint framebuffer,GLuint numsamples,GLuint pixelindex,const GLfloat * values)
PFNGLNAMEDFRAMEBUFFERTEXTURE1DEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLNAMEDFRAMEBUFFERTEXTURE1DEXTPROC) (GLuint framebuffer, GLenum at/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint framebuffer,GLenum attachment,GLenum textarget,GLuint texture,GLint level)
PFNGLNAMEDFRAMEBUFFERTEXTURE2DEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLNAMEDFRAMEBUFFERTEXTURE2DEXTPROC) (GLuint framebuffer, GLenum at/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint framebuffer,GLenum attachment,GLenum textarget,GLuint texture,GLint level)
PFNGLNAMEDFRAMEBUFFERTEXTURE3DEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLNAMEDFRAMEBUFFERTEXTURE3DEXTPROC) (GLuint framebuffer, GLenum at/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint framebuffer,GLenum attachment,GLenum textarget,GLuint texture,GLint level,GLint zoffset)
PFNGLNAMEDFRAMEBUFFERTEXTUREEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLNAMEDFRAMEBUFFERTEXTUREEXTPROC) (GLuint framebuffer, GLenum atta/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint framebuffer,GLenum attachment,GLuint texture,GLint level)
PFNGLNAMEDFRAMEBUFFERTEXTUREFACEEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLNAMEDFRAMEBUFFERTEXTUREFACEEXTPROC) (GLuint framebuffer, GLenum /;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint framebuffer,GLenum attachment,GLuint texture,GLint level,GLenum face)
PFNGLNAMEDFRAMEBUFFERTEXTURELAYEREXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLNAMEDFRAMEBUFFERTEXTURELAYEREXTPROC) (GLuint framebuffer, GLenum/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint framebuffer,GLenum attachment,GLuint texture,GLint level,GLint layer)
PFNGLNAMEDFRAMEBUFFERTEXTURELAYERPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLNAMEDFRAMEBUFFERTEXTURELAYERPROC) (GLuint framebuffer, GLenum at/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint framebuffer,GLenum attachment,GLuint texture,GLint level,GLint layer)
PFNGLNAMEDFRAMEBUFFERTEXTUREMULTIVIEWOVRPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLNAMEDFRAMEBUFFERTEXTUREMULTIVIEWOVRPROC) (GLuint framebuffer, GL/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint framebuffer,GLenum attachment,GLuint texture,GLint level,GLint baseViewIndex,GLsizei numViews)
PFNGLNAMEDFRAMEBUFFERTEXTUREPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLNAMEDFRAMEBUFFERTEXTUREPROC) (GLuint framebuffer, GLenum attachm/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint framebuffer,GLenum attachment,GLuint texture,GLint level)
PFNGLNAMEDPROGRAMLOCALPARAMETER4DEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLNAMEDPROGRAMLOCALPARAMETER4DEXTPROC) (GLuint program, GLenum tar/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint program,GLenum target,GLuint index,GLdouble x,GLdouble y,GLdouble z,GLdouble w)
PFNGLNAMEDPROGRAMLOCALPARAMETER4DVEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLNAMEDPROGRAMLOCALPARAMETER4DVEXTPROC) (GLuint program, GLenum ta/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint program,GLenum target,GLuint index,const GLdouble * params)
PFNGLNAMEDPROGRAMLOCALPARAMETER4FEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLNAMEDPROGRAMLOCALPARAMETER4FEXTPROC) (GLuint program, GLenum tar/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint program,GLenum target,GLuint index,GLfloat x,GLfloat y,GLfloat z,GLfloat w)
PFNGLNAMEDPROGRAMLOCALPARAMETER4FVEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLNAMEDPROGRAMLOCALPARAMETER4FVEXTPROC) (GLuint program, GLenum ta/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint program,GLenum target,GLuint index,const GLfloat * params)
PFNGLNAMEDPROGRAMLOCALPARAMETERI4IEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLNAMEDPROGRAMLOCALPARAMETERI4IEXTPROC) (GLuint program, GLenum ta/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint program,GLenum target,GLuint index,GLint x,GLint y,GLint z,GLint w)
PFNGLNAMEDPROGRAMLOCALPARAMETERI4IVEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLNAMEDPROGRAMLOCALPARAMETERI4IVEXTPROC) (GLuint program, GLenum t/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint program,GLenum target,GLuint index,const GLint * params)
PFNGLNAMEDPROGRAMLOCALPARAMETERI4UIEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLNAMEDPROGRAMLOCALPARAMETERI4UIEXTPROC) (GLuint program, GLenum t/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint program,GLenum target,GLuint index,GLuint x,GLuint y,GLuint z,GLuint w)
PFNGLNAMEDPROGRAMLOCALPARAMETERI4UIVEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLNAMEDPROGRAMLOCALPARAMETERI4UIVEXTPROC) (GLuint program, GLenum /;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint program,GLenum target,GLuint index,const GLuint * params)
PFNGLNAMEDPROGRAMLOCALPARAMETERS4FVEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLNAMEDPROGRAMLOCALPARAMETERS4FVEXTPROC) (GLuint program, GLenum t/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint program,GLenum target,GLuint index,GLsizei count,const GLfloat * params)
PFNGLNAMEDPROGRAMLOCALPARAMETERSI4IVEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLNAMEDPROGRAMLOCALPARAMETERSI4IVEXTPROC) (GLuint program, GLenum /;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint program,GLenum target,GLuint index,GLsizei count,const GLint * params)
PFNGLNAMEDPROGRAMLOCALPARAMETERSI4UIVEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLNAMEDPROGRAMLOCALPARAMETERSI4UIVEXTPROC) (GLuint program, GLenum/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint program,GLenum target,GLuint index,GLsizei count,const GLuint * params)
PFNGLNAMEDPROGRAMSTRINGEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLNAMEDPROGRAMSTRINGEXTPROC) (GLuint program, GLenum target, GLenu/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint program,GLenum target,GLenum format,GLsizei len,const void * string)
PFNGLNAMEDRENDERBUFFERSTORAGEEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLNAMEDRENDERBUFFERSTORAGEEXTPROC) (GLuint renderbuffer, GLenum in/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint renderbuffer,GLenum internalformat,GLsizei width,GLsizei height)
PFNGLNAMEDRENDERBUFFERSTORAGEMULTISAMPLEADVANCEDAMDPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLNAMEDRENDERBUFFERSTORAGEMULTISAMPLEADVANCEDAMDPROC) (GLuint rend/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint renderbuffer,GLsizei samples,GLsizei storageSamples,GLenum internalformat,GLsizei width,GLsizei height)
PFNGLNAMEDRENDERBUFFERSTORAGEMULTISAMPLECOVERAGEEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLNAMEDRENDERBUFFERSTORAGEMULTISAMPLECOVERAGEEXTPROC) (GLuint rend/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint renderbuffer,GLsizei coverageSamples,GLsizei colorSamples,GLenum internalformat,GLsizei width,GLsizei height)
PFNGLNAMEDRENDERBUFFERSTORAGEMULTISAMPLEEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLNAMEDRENDERBUFFERSTORAGEMULTISAMPLEEXTPROC) (GLuint renderbuffer/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint renderbuffer,GLsizei samples,GLenum internalformat,GLsizei width,GLsizei height)
PFNGLNAMEDRENDERBUFFERSTORAGEMULTISAMPLEPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLNAMEDRENDERBUFFERSTORAGEMULTISAMPLEPROC) (GLuint renderbuffer, G/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint renderbuffer,GLsizei samples,GLenum internalformat,GLsizei width,GLsizei height)
PFNGLNAMEDRENDERBUFFERSTORAGEPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLNAMEDRENDERBUFFERSTORAGEPROC) (GLuint renderbuffer, GLenum inter/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint renderbuffer,GLenum internalformat,GLsizei width,GLsizei height)
PFNGLNAMEDSTRINGARBPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLNAMEDSTRINGARBPROC) (GLenum type, GLint namelen, const GLchar* n/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum type,GLint namelen,const GLchar * name,GLint stringlen,const GLchar * string)
PFNGLNEWBUFFERREGIONPROC	./GL/glew.h	/^typedef GLuint (GLAPIENTRY * PFNGLNEWBUFFERREGIONPROC) (GLenum region);$/;"	t	typeref:typename:GLuint (GLAPIENTRY *)(GLenum region)
PFNGLNEWOBJECTBUFFERATIPROC	./GL/glew.h	/^typedef GLuint (GLAPIENTRY * PFNGLNEWOBJECTBUFFERATIPROC) (GLsizei size, const void *pointer, GL/;"	t	typeref:typename:GLuint (GLAPIENTRY *)(GLsizei size,const void * pointer,GLenum usage)
PFNGLNONLINLIGHTFVSGIXPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLNONLINLIGHTFVSGIXPROC) (GLenum light, GLenum pname, GLint terms,/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum light,GLenum pname,GLint terms,GLfloat * params)
PFNGLNONLINMATERIALFVSGIXPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLNONLINMATERIALFVSGIXPROC) (GLenum face, GLenum pname, GLint term/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum face,GLenum pname,GLint terms,const GLfloat * params)
PFNGLNORMAL3FVERTEX3FSUNPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLNORMAL3FVERTEX3FSUNPROC) (GLfloat nx, GLfloat ny, GLfloat nz, GL/;"	t	typeref:typename:void (GLAPIENTRY *)(GLfloat nx,GLfloat ny,GLfloat nz,GLfloat x,GLfloat y,GLfloat z)
PFNGLNORMAL3FVERTEX3FVSUNPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLNORMAL3FVERTEX3FVSUNPROC) (const GLfloat* n, const GLfloat *v);$/;"	t	typeref:typename:void (GLAPIENTRY *)(const GLfloat * n,const GLfloat * v)
PFNGLNORMAL3HNVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLNORMAL3HNVPROC) (GLhalf nx, GLhalf ny, GLhalf nz);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLhalf nx,GLhalf ny,GLhalf nz)
PFNGLNORMAL3HVNVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLNORMAL3HVNVPROC) (const GLhalf* v);$/;"	t	typeref:typename:void (GLAPIENTRY *)(const GLhalf * v)
PFNGLNORMAL3XPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLNORMAL3XPROC) (GLfixed nx, GLfixed ny, GLfixed nz);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLfixed nx,GLfixed ny,GLfixed nz)
PFNGLNORMALFORMATNVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLNORMALFORMATNVPROC) (GLenum type, GLsizei stride);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum type,GLsizei stride)
PFNGLNORMALP3UIPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLNORMALP3UIPROC) (GLenum type, GLuint coords);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum type,GLuint coords)
PFNGLNORMALP3UIVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLNORMALP3UIVPROC) (GLenum type, const GLuint* coords);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum type,const GLuint * coords)
PFNGLNORMALPOINTEREXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLNORMALPOINTEREXTPROC) (GLenum type, GLsizei stride, GLsizei coun/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum type,GLsizei stride,GLsizei count,const void * pointer)
PFNGLNORMALPOINTERLISTIBMPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLNORMALPOINTERLISTIBMPROC) (GLenum type, GLint stride, const void/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum type,GLint stride,const void ** pointer,GLint ptrstride)
PFNGLNORMALPOINTERVINTELPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLNORMALPOINTERVINTELPROC) (GLenum type, const void** pointer);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum type,const void ** pointer)
PFNGLNORMALSTREAM3BATIPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLNORMALSTREAM3BATIPROC) (GLenum stream, GLbyte x, GLbyte y, GLbyt/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum stream,GLbyte x,GLbyte y,GLbyte z)
PFNGLNORMALSTREAM3BVATIPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLNORMALSTREAM3BVATIPROC) (GLenum stream, const GLbyte *coords);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum stream,const GLbyte * coords)
PFNGLNORMALSTREAM3DATIPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLNORMALSTREAM3DATIPROC) (GLenum stream, GLdouble x, GLdouble y, G/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum stream,GLdouble x,GLdouble y,GLdouble z)
PFNGLNORMALSTREAM3DVATIPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLNORMALSTREAM3DVATIPROC) (GLenum stream, const GLdouble *coords);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum stream,const GLdouble * coords)
PFNGLNORMALSTREAM3FATIPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLNORMALSTREAM3FATIPROC) (GLenum stream, GLfloat x, GLfloat y, GLf/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum stream,GLfloat x,GLfloat y,GLfloat z)
PFNGLNORMALSTREAM3FVATIPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLNORMALSTREAM3FVATIPROC) (GLenum stream, const GLfloat *coords);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum stream,const GLfloat * coords)
PFNGLNORMALSTREAM3IATIPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLNORMALSTREAM3IATIPROC) (GLenum stream, GLint x, GLint y, GLint z/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum stream,GLint x,GLint y,GLint z)
PFNGLNORMALSTREAM3IVATIPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLNORMALSTREAM3IVATIPROC) (GLenum stream, const GLint *coords);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum stream,const GLint * coords)
PFNGLNORMALSTREAM3SATIPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLNORMALSTREAM3SATIPROC) (GLenum stream, GLshort x, GLshort y, GLs/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum stream,GLshort x,GLshort y,GLshort z)
PFNGLNORMALSTREAM3SVATIPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLNORMALSTREAM3SVATIPROC) (GLenum stream, const GLshort *coords);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum stream,const GLshort * coords)
PFNGLOBJECTLABELPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLOBJECTLABELPROC) (GLenum identifier, GLuint name, GLsizei length/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum identifier,GLuint name,GLsizei length,const GLchar * label)
PFNGLOBJECTPTRLABELPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLOBJECTPTRLABELPROC) (void* ptr, GLsizei length, const GLchar* la/;"	t	typeref:typename:void (GLAPIENTRY *)(void * ptr,GLsizei length,const GLchar * label)
PFNGLOBJECTPURGEABLEAPPLEPROC	./GL/glew.h	/^typedef GLenum (GLAPIENTRY * PFNGLOBJECTPURGEABLEAPPLEPROC) (GLenum objectType, GLuint name, GLe/;"	t	typeref:typename:GLenum (GLAPIENTRY *)(GLenum objectType,GLuint name,GLenum option)
PFNGLOBJECTUNPURGEABLEAPPLEPROC	./GL/glew.h	/^typedef GLenum (GLAPIENTRY * PFNGLOBJECTUNPURGEABLEAPPLEPROC) (GLenum objectType, GLuint name, G/;"	t	typeref:typename:GLenum (GLAPIENTRY *)(GLenum objectType,GLuint name,GLenum option)
PFNGLORTHOFOESPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLORTHOFOESPROC) (GLfloat l, GLfloat r, GLfloat b, GLfloat t, GLfl/;"	t	typeref:typename:void (GLAPIENTRY *)(GLfloat l,GLfloat r,GLfloat b,GLfloat t,GLfloat n,GLfloat f)
PFNGLORTHOFPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLORTHOFPROC) (GLfloat left, GLfloat right, GLfloat bottom, GLfloa/;"	t	typeref:typename:void (GLAPIENTRY *)(GLfloat left,GLfloat right,GLfloat bottom,GLfloat top,GLfloat zNear,GLfloat zFar)
PFNGLORTHOXPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLORTHOXPROC) (GLfixed left, GLfixed right, GLfixed bottom, GLfixe/;"	t	typeref:typename:void (GLAPIENTRY *)(GLfixed left,GLfixed right,GLfixed bottom,GLfixed top,GLfixed zNear,GLfixed zFar)
PFNGLPASSTEXCOORDATIPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLPASSTEXCOORDATIPROC) (GLuint dst, GLuint coord, GLenum swizzle);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint dst,GLuint coord,GLenum swizzle)
PFNGLPATCHPARAMETERFVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLPATCHPARAMETERFVPROC) (GLenum pname, const GLfloat* values);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum pname,const GLfloat * values)
PFNGLPATCHPARAMETERIEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLPATCHPARAMETERIEXTPROC) (GLenum pname, GLint value);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum pname,GLint value)
PFNGLPATCHPARAMETERIPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLPATCHPARAMETERIPROC) (GLenum pname, GLint value);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum pname,GLint value)
PFNGLPATHCOLORGENNVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLPATHCOLORGENNVPROC) (GLenum color, GLenum genMode, GLenum colorF/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum color,GLenum genMode,GLenum colorFormat,const GLfloat * coeffs)
PFNGLPATHCOMMANDSNVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLPATHCOMMANDSNVPROC) (GLuint path, GLsizei numCommands, const GLu/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint path,GLsizei numCommands,const GLubyte * commands,GLsizei numCoords,GLenum coordType,const void * coords)
PFNGLPATHCOORDSNVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLPATHCOORDSNVPROC) (GLuint path, GLsizei numCoords, GLenum coordT/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint path,GLsizei numCoords,GLenum coordType,const void * coords)
PFNGLPATHCOVERDEPTHFUNCNVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLPATHCOVERDEPTHFUNCNVPROC) (GLenum zfunc);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum zfunc)
PFNGLPATHDASHARRAYNVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLPATHDASHARRAYNVPROC) (GLuint path, GLsizei dashCount, const GLfl/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint path,GLsizei dashCount,const GLfloat * dashArray)
PFNGLPATHFOGGENNVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLPATHFOGGENNVPROC) (GLenum genMode);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum genMode)
PFNGLPATHGLYPHINDEXARRAYNVPROC	./GL/glew.h	/^typedef GLenum (GLAPIENTRY * PFNGLPATHGLYPHINDEXARRAYNVPROC) (GLuint firstPathName, GLenum fontT/;"	t	typeref:typename:GLenum (GLAPIENTRY *)(GLuint firstPathName,GLenum fontTarget,const void * fontName,GLbitfield fontStyle,GLuint firstGlyphIndex,GLsizei numGlyphs,GLuint pathParameterTemplate,GLfloat emScale)
PFNGLPATHGLYPHINDEXRANGENVPROC	./GL/glew.h	/^typedef GLenum (GLAPIENTRY * PFNGLPATHGLYPHINDEXRANGENVPROC) (GLenum fontTarget, const void *fon/;"	t	typeref:typename:GLenum (GLAPIENTRY *)(GLenum fontTarget,const void * fontName,GLbitfield fontStyle,GLuint pathParameterTemplate,GLfloat emScale,GLuint baseAndCount[2])
PFNGLPATHGLYPHRANGENVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLPATHGLYPHRANGENVPROC) (GLuint firstPathName, GLenum fontTarget, /;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint firstPathName,GLenum fontTarget,const void * fontName,GLbitfield fontStyle,GLuint firstGlyph,GLsizei numGlyphs,GLenum handleMissingGlyphs,GLuint pathParameterTemplate,GLfloat emScale)
PFNGLPATHGLYPHSNVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLPATHGLYPHSNVPROC) (GLuint firstPathName, GLenum fontTarget, cons/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint firstPathName,GLenum fontTarget,const void * fontName,GLbitfield fontStyle,GLsizei numGlyphs,GLenum type,const void * charcodes,GLenum handleMissingGlyphs,GLuint pathParameterTemplate,GLfloat emScale)
PFNGLPATHMEMORYGLYPHINDEXARRAYNVPROC	./GL/glew.h	/^typedef GLenum (GLAPIENTRY * PFNGLPATHMEMORYGLYPHINDEXARRAYNVPROC) (GLuint firstPathName, GLenum/;"	t	typeref:typename:GLenum (GLAPIENTRY *)(GLuint firstPathName,GLenum fontTarget,GLsizeiptr fontSize,const void * fontData,GLsizei faceIndex,GLuint firstGlyphIndex,GLsizei numGlyphs,GLuint pathParameterTemplate,GLfloat emScale)
PFNGLPATHPARAMETERFNVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLPATHPARAMETERFNVPROC) (GLuint path, GLenum pname, GLfloat value)/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint path,GLenum pname,GLfloat value)
PFNGLPATHPARAMETERFVNVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLPATHPARAMETERFVNVPROC) (GLuint path, GLenum pname, const GLfloat/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint path,GLenum pname,const GLfloat * value)
PFNGLPATHPARAMETERINVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLPATHPARAMETERINVPROC) (GLuint path, GLenum pname, GLint value);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint path,GLenum pname,GLint value)
PFNGLPATHPARAMETERIVNVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLPATHPARAMETERIVNVPROC) (GLuint path, GLenum pname, const GLint* /;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint path,GLenum pname,const GLint * value)
PFNGLPATHSTENCILDEPTHOFFSETNVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLPATHSTENCILDEPTHOFFSETNVPROC) (GLfloat factor, GLfloat units);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLfloat factor,GLfloat units)
PFNGLPATHSTENCILFUNCNVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLPATHSTENCILFUNCNVPROC) (GLenum func, GLint ref, GLuint mask);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum func,GLint ref,GLuint mask)
PFNGLPATHSTRINGNVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLPATHSTRINGNVPROC) (GLuint path, GLenum format, GLsizei length, c/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint path,GLenum format,GLsizei length,const void * pathString)
PFNGLPATHSUBCOMMANDSNVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLPATHSUBCOMMANDSNVPROC) (GLuint path, GLsizei commandStart, GLsiz/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint path,GLsizei commandStart,GLsizei commandsToDelete,GLsizei numCommands,const GLubyte * commands,GLsizei numCoords,GLenum coordType,const void * coords)
PFNGLPATHSUBCOORDSNVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLPATHSUBCOORDSNVPROC) (GLuint path, GLsizei coordStart, GLsizei n/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint path,GLsizei coordStart,GLsizei numCoords,GLenum coordType,const void * coords)
PFNGLPATHTEXGENNVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLPATHTEXGENNVPROC) (GLenum texCoordSet, GLenum genMode, GLint com/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum texCoordSet,GLenum genMode,GLint components,const GLfloat * coeffs)
PFNGLPAUSETRANSFORMFEEDBACKNVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLPAUSETRANSFORMFEEDBACKNVPROC) (void);$/;"	t	typeref:typename:void (GLAPIENTRY *)(void)
PFNGLPAUSETRANSFORMFEEDBACKPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLPAUSETRANSFORMFEEDBACKPROC) (void);$/;"	t	typeref:typename:void (GLAPIENTRY *)(void)
PFNGLPIXELDATARANGENVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLPIXELDATARANGENVPROC) (GLenum target, GLsizei length, void *poin/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLsizei length,void * pointer)
PFNGLPIXELTEXGENSGIXPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLPIXELTEXGENSGIXPROC) (GLenum mode);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum mode)
PFNGLPIXELTRANSFORMPARAMETERFEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLPIXELTRANSFORMPARAMETERFEXTPROC) (GLenum target, GLenum pname, c/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLenum pname,const GLfloat param)
PFNGLPIXELTRANSFORMPARAMETERFSGIPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLPIXELTRANSFORMPARAMETERFSGIPROC) (GLenum target, GLenum pname, G/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLenum pname,GLfloat param)
PFNGLPIXELTRANSFORMPARAMETERFVEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLPIXELTRANSFORMPARAMETERFVEXTPROC) (GLenum target, GLenum pname, /;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLenum pname,const GLfloat * params)
PFNGLPIXELTRANSFORMPARAMETERFVSGIPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLPIXELTRANSFORMPARAMETERFVSGIPROC) (GLenum target, GLenum pname, /;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLenum pname,const GLfloat * params)
PFNGLPIXELTRANSFORMPARAMETERIEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLPIXELTRANSFORMPARAMETERIEXTPROC) (GLenum target, GLenum pname, c/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLenum pname,const GLint param)
PFNGLPIXELTRANSFORMPARAMETERISGIPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLPIXELTRANSFORMPARAMETERISGIPROC) (GLenum target, GLenum pname, G/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLenum pname,GLint param)
PFNGLPIXELTRANSFORMPARAMETERIVEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLPIXELTRANSFORMPARAMETERIVEXTPROC) (GLenum target, GLenum pname, /;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLenum pname,const GLint * params)
PFNGLPIXELTRANSFORMPARAMETERIVSGIPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLPIXELTRANSFORMPARAMETERIVSGIPROC) (GLenum target, GLenum pname, /;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLenum pname,const GLint * params)
PFNGLPIXELTRANSFORMSGIPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLPIXELTRANSFORMSGIPROC) (GLenum target);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target)
PFNGLPNTRIANGLESFATIPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLPNTRIANGLESFATIPROC) (GLenum pname, GLfloat param);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum pname,GLfloat param)
PFNGLPNTRIANGLESIATIPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLPNTRIANGLESIATIPROC) (GLenum pname, GLint param);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum pname,GLint param)
PFNGLPOINTALONGPATHNVPROC	./GL/glew.h	/^typedef GLboolean (GLAPIENTRY * PFNGLPOINTALONGPATHNVPROC) (GLuint path, GLsizei startSegment, G/;"	t	typeref:typename:GLboolean (GLAPIENTRY *)(GLuint path,GLsizei startSegment,GLsizei numSegments,GLfloat distance,GLfloat * x,GLfloat * y,GLfloat * tangentX,GLfloat * tangentY)
PFNGLPOINTPARAMETERFARBPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLPOINTPARAMETERFARBPROC) (GLenum pname, GLfloat param);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum pname,GLfloat param)
PFNGLPOINTPARAMETERFEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLPOINTPARAMETERFEXTPROC) (GLenum pname, GLfloat param);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum pname,GLfloat param)
PFNGLPOINTPARAMETERFPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLPOINTPARAMETERFPROC) (GLenum pname, GLfloat param);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum pname,GLfloat param)
PFNGLPOINTPARAMETERFVARBPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLPOINTPARAMETERFVARBPROC) (GLenum pname, const GLfloat* params);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum pname,const GLfloat * params)
PFNGLPOINTPARAMETERFVEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLPOINTPARAMETERFVEXTPROC) (GLenum pname, const GLfloat* params);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum pname,const GLfloat * params)
PFNGLPOINTPARAMETERFVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLPOINTPARAMETERFVPROC) (GLenum pname, const GLfloat *params);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum pname,const GLfloat * params)
PFNGLPOINTPARAMETERINVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLPOINTPARAMETERINVPROC) (GLenum pname, GLint param);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum pname,GLint param)
PFNGLPOINTPARAMETERIPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLPOINTPARAMETERIPROC) (GLenum pname, GLint param);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum pname,GLint param)
PFNGLPOINTPARAMETERIVNVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLPOINTPARAMETERIVNVPROC) (GLenum pname, const GLint* params);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum pname,const GLint * params)
PFNGLPOINTPARAMETERIVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLPOINTPARAMETERIVPROC) (GLenum pname, const GLint *params);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum pname,const GLint * params)
PFNGLPOINTPARAMETERXPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLPOINTPARAMETERXPROC) (GLenum pname, GLfixed param);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum pname,GLfixed param)
PFNGLPOINTPARAMETERXVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLPOINTPARAMETERXVPROC) (GLenum pname, const GLfixed* params);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum pname,const GLfixed * params)
PFNGLPOINTSIZEPOINTEROESPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLPOINTSIZEPOINTEROESPROC) (GLenum type, GLsizei stride, const voi/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum type,GLsizei stride,const void * pointer)
PFNGLPOINTSIZEXPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLPOINTSIZEXPROC) (GLfixed size);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLfixed size)
PFNGLPOLLASYNCSGIXPROC	./GL/glew.h	/^typedef GLint (GLAPIENTRY * PFNGLPOLLASYNCSGIXPROC) (GLuint* markerp);$/;"	t	typeref:typename:GLint (GLAPIENTRY *)(GLuint * markerp)
PFNGLPOLYGONMODENVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLPOLYGONMODENVPROC) (GLenum face, GLenum mode);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum face,GLenum mode)
PFNGLPOLYGONOFFSETCLAMPEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLPOLYGONOFFSETCLAMPEXTPROC) (GLfloat factor, GLfloat units, GLflo/;"	t	typeref:typename:void (GLAPIENTRY *)(GLfloat factor,GLfloat units,GLfloat clamp)
PFNGLPOLYGONOFFSETCLAMPPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLPOLYGONOFFSETCLAMPPROC) (GLfloat factor, GLfloat units, GLfloat /;"	t	typeref:typename:void (GLAPIENTRY *)(GLfloat factor,GLfloat units,GLfloat clamp)
PFNGLPOLYGONOFFSETEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLPOLYGONOFFSETEXTPROC) (GLfloat factor, GLfloat bias);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLfloat factor,GLfloat bias)
PFNGLPOLYGONOFFSETXPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLPOLYGONOFFSETXPROC) (GLfixed factor, GLfixed units);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLfixed factor,GLfixed units)
PFNGLPOPDEBUGGROUPPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLPOPDEBUGGROUPPROC) (void);$/;"	t	typeref:typename:void (GLAPIENTRY *)(void)
PFNGLPOPGROUPMARKEREXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLPOPGROUPMARKEREXTPROC) (void);$/;"	t	typeref:typename:void (GLAPIENTRY *)(void)
PFNGLPRESENTFRAMEDUALFILLNVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLPRESENTFRAMEDUALFILLNVPROC) (GLuint video_slot, GLuint64EXT minP/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint video_slot,GLuint64EXT minPresentTime,GLuint beginPresentTimeId,GLuint presentDurationId,GLenum type,GLenum target0,GLuint fill0,GLenum target1,GLuint fill1,GLenum target2,GLuint fill2,GLenum target3,GLuint fill3)
PFNGLPRESENTFRAMEKEYEDNVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLPRESENTFRAMEKEYEDNVPROC) (GLuint video_slot, GLuint64EXT minPres/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint video_slot,GLuint64EXT minPresentTime,GLuint beginPresentTimeId,GLuint presentDurationId,GLenum type,GLenum target0,GLuint fill0,GLuint key0,GLenum target1,GLuint fill1,GLuint key1)
PFNGLPRIMITIVEBOUNDINGBOXARBPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLPRIMITIVEBOUNDINGBOXARBPROC) (GLfloat minX, GLfloat minY, GLfloa/;"	t	typeref:typename:void (GLAPIENTRY *)(GLfloat minX,GLfloat minY,GLfloat minZ,GLfloat minW,GLfloat maxX,GLfloat maxY,GLfloat maxZ,GLfloat maxW)
PFNGLPRIMITIVEBOUNDINGBOXEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLPRIMITIVEBOUNDINGBOXEXTPROC) (GLfloat minX, GLfloat minY, GLfloa/;"	t	typeref:typename:void (GLAPIENTRY *)(GLfloat minX,GLfloat minY,GLfloat minZ,GLfloat minW,GLfloat maxX,GLfloat maxY,GLfloat maxZ,GLfloat maxW)
PFNGLPRIMITIVERESTARTINDEXNVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLPRIMITIVERESTARTINDEXNVPROC) (GLuint index);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index)
PFNGLPRIMITIVERESTARTINDEXPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLPRIMITIVERESTARTINDEXPROC) (GLuint buffer);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint buffer)
PFNGLPRIMITIVERESTARTNVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLPRIMITIVERESTARTNVPROC) (void);$/;"	t	typeref:typename:void (GLAPIENTRY *)(void)
PFNGLPRIORITIZETEXTURESEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLPRIORITIZETEXTURESEXTPROC) (GLsizei n, const GLuint* textures, c/;"	t	typeref:typename:void (GLAPIENTRY *)(GLsizei n,const GLuint * textures,const GLclampf * priorities)
PFNGLPRIORITIZEVERTEXARRAYSSGIXPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLPRIORITIZEVERTEXARRAYSSGIXPROC) (GLsizei n, const GLuint* arrays/;"	t	typeref:typename:void (GLAPIENTRY *)(GLsizei n,const GLuint * arrays,const GLclampf * priorities)
PFNGLPROGRAMBINARYOESPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLPROGRAMBINARYOESPROC) (GLuint program, GLenum binaryFormat, cons/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint program,GLenum binaryFormat,const void * binary,GLint length)
PFNGLPROGRAMBINARYPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLPROGRAMBINARYPROC) (GLuint program, GLenum binaryFormat, const v/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint program,GLenum binaryFormat,const void * binary,GLsizei length)
PFNGLPROGRAMBUFFERPARAMETERSFVNVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLPROGRAMBUFFERPARAMETERSFVNVPROC) (GLenum target, GLuint buffer, /;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLuint buffer,GLuint index,GLsizei count,const GLfloat * params)
PFNGLPROGRAMBUFFERPARAMETERSIIVNVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLPROGRAMBUFFERPARAMETERSIIVNVPROC) (GLenum target, GLuint buffer,/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLuint buffer,GLuint index,GLsizei count,const GLint * params)
PFNGLPROGRAMBUFFERPARAMETERSIUIVNVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLPROGRAMBUFFERPARAMETERSIUIVNVPROC) (GLenum target, GLuint buffer/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLuint buffer,GLuint index,GLsizei count,const GLuint * params)
PFNGLPROGRAMENVPARAMETER4DARBPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLPROGRAMENVPARAMETER4DARBPROC) (GLenum target, GLuint index, GLdo/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLuint index,GLdouble x,GLdouble y,GLdouble z,GLdouble w)
PFNGLPROGRAMENVPARAMETER4DVARBPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLPROGRAMENVPARAMETER4DVARBPROC) (GLenum target, GLuint index, con/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLuint index,const GLdouble * params)
PFNGLPROGRAMENVPARAMETER4FARBPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLPROGRAMENVPARAMETER4FARBPROC) (GLenum target, GLuint index, GLfl/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLuint index,GLfloat x,GLfloat y,GLfloat z,GLfloat w)
PFNGLPROGRAMENVPARAMETER4FVARBPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLPROGRAMENVPARAMETER4FVARBPROC) (GLenum target, GLuint index, con/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLuint index,const GLfloat * params)
PFNGLPROGRAMENVPARAMETERI4INVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLPROGRAMENVPARAMETERI4INVPROC) (GLenum target, GLuint index, GLin/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLuint index,GLint x,GLint y,GLint z,GLint w)
PFNGLPROGRAMENVPARAMETERI4IVNVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLPROGRAMENVPARAMETERI4IVNVPROC) (GLenum target, GLuint index, con/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLuint index,const GLint * params)
PFNGLPROGRAMENVPARAMETERI4UINVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLPROGRAMENVPARAMETERI4UINVPROC) (GLenum target, GLuint index, GLu/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLuint index,GLuint x,GLuint y,GLuint z,GLuint w)
PFNGLPROGRAMENVPARAMETERI4UIVNVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLPROGRAMENVPARAMETERI4UIVNVPROC) (GLenum target, GLuint index, co/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLuint index,const GLuint * params)
PFNGLPROGRAMENVPARAMETERS4FVEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLPROGRAMENVPARAMETERS4FVEXTPROC) (GLenum target, GLuint index, GL/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLuint index,GLsizei count,const GLfloat * params)
PFNGLPROGRAMENVPARAMETERSI4IVNVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLPROGRAMENVPARAMETERSI4IVNVPROC) (GLenum target, GLuint index, GL/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLuint index,GLsizei count,const GLint * params)
PFNGLPROGRAMENVPARAMETERSI4UIVNVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLPROGRAMENVPARAMETERSI4UIVNVPROC) (GLenum target, GLuint index, G/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLuint index,GLsizei count,const GLuint * params)
PFNGLPROGRAMLOCALPARAMETER4DARBPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLPROGRAMLOCALPARAMETER4DARBPROC) (GLenum target, GLuint index, GL/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLuint index,GLdouble x,GLdouble y,GLdouble z,GLdouble w)
PFNGLPROGRAMLOCALPARAMETER4DVARBPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLPROGRAMLOCALPARAMETER4DVARBPROC) (GLenum target, GLuint index, c/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLuint index,const GLdouble * params)
PFNGLPROGRAMLOCALPARAMETER4FARBPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLPROGRAMLOCALPARAMETER4FARBPROC) (GLenum target, GLuint index, GL/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLuint index,GLfloat x,GLfloat y,GLfloat z,GLfloat w)
PFNGLPROGRAMLOCALPARAMETER4FVARBPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLPROGRAMLOCALPARAMETER4FVARBPROC) (GLenum target, GLuint index, c/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLuint index,const GLfloat * params)
PFNGLPROGRAMLOCALPARAMETERI4INVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLPROGRAMLOCALPARAMETERI4INVPROC) (GLenum target, GLuint index, GL/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLuint index,GLint x,GLint y,GLint z,GLint w)
PFNGLPROGRAMLOCALPARAMETERI4IVNVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLPROGRAMLOCALPARAMETERI4IVNVPROC) (GLenum target, GLuint index, c/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLuint index,const GLint * params)
PFNGLPROGRAMLOCALPARAMETERI4UINVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLPROGRAMLOCALPARAMETERI4UINVPROC) (GLenum target, GLuint index, G/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLuint index,GLuint x,GLuint y,GLuint z,GLuint w)
PFNGLPROGRAMLOCALPARAMETERI4UIVNVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLPROGRAMLOCALPARAMETERI4UIVNVPROC) (GLenum target, GLuint index, /;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLuint index,const GLuint * params)
PFNGLPROGRAMLOCALPARAMETERS4FVEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLPROGRAMLOCALPARAMETERS4FVEXTPROC) (GLenum target, GLuint index, /;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLuint index,GLsizei count,const GLfloat * params)
PFNGLPROGRAMLOCALPARAMETERSI4IVNVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLPROGRAMLOCALPARAMETERSI4IVNVPROC) (GLenum target, GLuint index, /;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLuint index,GLsizei count,const GLint * params)
PFNGLPROGRAMLOCALPARAMETERSI4UIVNVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLPROGRAMLOCALPARAMETERSI4UIVNVPROC) (GLenum target, GLuint index,/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLuint index,GLsizei count,const GLuint * params)
PFNGLPROGRAMNAMEDPARAMETER4DNVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLPROGRAMNAMEDPARAMETER4DNVPROC) (GLuint id, GLsizei len, const GL/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint id,GLsizei len,const GLubyte * name,GLdouble x,GLdouble y,GLdouble z,GLdouble w)
PFNGLPROGRAMNAMEDPARAMETER4DVNVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLPROGRAMNAMEDPARAMETER4DVNVPROC) (GLuint id, GLsizei len, const G/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint id,GLsizei len,const GLubyte * name,const GLdouble v[])
PFNGLPROGRAMNAMEDPARAMETER4FNVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLPROGRAMNAMEDPARAMETER4FNVPROC) (GLuint id, GLsizei len, const GL/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint id,GLsizei len,const GLubyte * name,GLfloat x,GLfloat y,GLfloat z,GLfloat w)
PFNGLPROGRAMNAMEDPARAMETER4FVNVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLPROGRAMNAMEDPARAMETER4FVNVPROC) (GLuint id, GLsizei len, const G/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint id,GLsizei len,const GLubyte * name,const GLfloat v[])
PFNGLPROGRAMPARAMETER4DNVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLPROGRAMPARAMETER4DNVPROC) (GLenum target, GLuint index, GLdouble/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLuint index,GLdouble x,GLdouble y,GLdouble z,GLdouble w)
PFNGLPROGRAMPARAMETER4DVNVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLPROGRAMPARAMETER4DVNVPROC) (GLenum target, GLuint index, const G/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLuint index,const GLdouble * params)
PFNGLPROGRAMPARAMETER4FNVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLPROGRAMPARAMETER4FNVPROC) (GLenum target, GLuint index, GLfloat /;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLuint index,GLfloat x,GLfloat y,GLfloat z,GLfloat w)
PFNGLPROGRAMPARAMETER4FVNVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLPROGRAMPARAMETER4FVNVPROC) (GLenum target, GLuint index, const G/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLuint index,const GLfloat * params)
PFNGLPROGRAMPARAMETERIARBPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLPROGRAMPARAMETERIARBPROC) (GLuint program, GLenum pname, GLint v/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint program,GLenum pname,GLint value)
PFNGLPROGRAMPARAMETERIEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLPROGRAMPARAMETERIEXTPROC) (GLuint program, GLenum pname, GLint v/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint program,GLenum pname,GLint value)
PFNGLPROGRAMPARAMETERIPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLPROGRAMPARAMETERIPROC) (GLuint program, GLenum pname, GLint valu/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint program,GLenum pname,GLint value)
PFNGLPROGRAMPARAMETERS4DVNVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLPROGRAMPARAMETERS4DVNVPROC) (GLenum target, GLuint index, GLsize/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLuint index,GLsizei num,const GLdouble * params)
PFNGLPROGRAMPARAMETERS4FVNVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLPROGRAMPARAMETERS4FVNVPROC) (GLenum target, GLuint index, GLsize/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLuint index,GLsizei num,const GLfloat * params)
PFNGLPROGRAMPATHFRAGMENTINPUTGENNVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLPROGRAMPATHFRAGMENTINPUTGENNVPROC) (GLuint program, GLint locati/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint program,GLint location,GLenum genMode,GLint components,const GLfloat * coeffs)
PFNGLPROGRAMSTRINGARBPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLPROGRAMSTRINGARBPROC) (GLenum target, GLenum format, GLsizei len/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLenum format,GLsizei len,const void * string)
PFNGLPROGRAMUNIFORM1DPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLPROGRAMUNIFORM1DPROC) (GLuint program, GLint location, GLdouble /;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint program,GLint location,GLdouble x)
PFNGLPROGRAMUNIFORM1DVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLPROGRAMUNIFORM1DVPROC) (GLuint program, GLint location, GLsizei /;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint program,GLint location,GLsizei count,const GLdouble * value)
PFNGLPROGRAMUNIFORM1FEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLPROGRAMUNIFORM1FEXTPROC) (GLuint program, GLint location, GLfloa/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint program,GLint location,GLfloat v0)
PFNGLPROGRAMUNIFORM1FPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLPROGRAMUNIFORM1FPROC) (GLuint program, GLint location, GLfloat x/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint program,GLint location,GLfloat x)
PFNGLPROGRAMUNIFORM1FVEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLPROGRAMUNIFORM1FVEXTPROC) (GLuint program, GLint location, GLsiz/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint program,GLint location,GLsizei count,const GLfloat * value)
PFNGLPROGRAMUNIFORM1FVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLPROGRAMUNIFORM1FVPROC) (GLuint program, GLint location, GLsizei /;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint program,GLint location,GLsizei count,const GLfloat * value)
PFNGLPROGRAMUNIFORM1I64ARBPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLPROGRAMUNIFORM1I64ARBPROC) (GLuint program, GLint location, GLin/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint program,GLint location,GLint64 x)
PFNGLPROGRAMUNIFORM1I64NVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLPROGRAMUNIFORM1I64NVPROC) (GLuint program, GLint location, GLint/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint program,GLint location,GLint64EXT x)
PFNGLPROGRAMUNIFORM1I64VARBPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLPROGRAMUNIFORM1I64VARBPROC) (GLuint program, GLint location, GLs/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint program,GLint location,GLsizei count,const GLint64 * value)
PFNGLPROGRAMUNIFORM1I64VNVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLPROGRAMUNIFORM1I64VNVPROC) (GLuint program, GLint location, GLsi/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint program,GLint location,GLsizei count,const GLint64EXT * value)
PFNGLPROGRAMUNIFORM1IEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLPROGRAMUNIFORM1IEXTPROC) (GLuint program, GLint location, GLint /;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint program,GLint location,GLint v0)
PFNGLPROGRAMUNIFORM1IPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLPROGRAMUNIFORM1IPROC) (GLuint program, GLint location, GLint x);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint program,GLint location,GLint x)
PFNGLPROGRAMUNIFORM1IVEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLPROGRAMUNIFORM1IVEXTPROC) (GLuint program, GLint location, GLsiz/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint program,GLint location,GLsizei count,const GLint * value)
PFNGLPROGRAMUNIFORM1IVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLPROGRAMUNIFORM1IVPROC) (GLuint program, GLint location, GLsizei /;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint program,GLint location,GLsizei count,const GLint * value)
PFNGLPROGRAMUNIFORM1UI64ARBPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLPROGRAMUNIFORM1UI64ARBPROC) (GLuint program, GLint location, GLu/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint program,GLint location,GLuint64 x)
PFNGLPROGRAMUNIFORM1UI64NVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLPROGRAMUNIFORM1UI64NVPROC) (GLuint program, GLint location, GLui/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint program,GLint location,GLuint64EXT x)
PFNGLPROGRAMUNIFORM1UI64VARBPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLPROGRAMUNIFORM1UI64VARBPROC) (GLuint program, GLint location, GL/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint program,GLint location,GLsizei count,const GLuint64 * value)
PFNGLPROGRAMUNIFORM1UI64VNVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLPROGRAMUNIFORM1UI64VNVPROC) (GLuint program, GLint location, GLs/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint program,GLint location,GLsizei count,const GLuint64EXT * value)
PFNGLPROGRAMUNIFORM1UIEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLPROGRAMUNIFORM1UIEXTPROC) (GLuint program, GLint location, GLuin/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint program,GLint location,GLuint v0)
PFNGLPROGRAMUNIFORM1UIPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLPROGRAMUNIFORM1UIPROC) (GLuint program, GLint location, GLuint x/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint program,GLint location,GLuint x)
PFNGLPROGRAMUNIFORM1UIVEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLPROGRAMUNIFORM1UIVEXTPROC) (GLuint program, GLint location, GLsi/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint program,GLint location,GLsizei count,const GLuint * value)
PFNGLPROGRAMUNIFORM1UIVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLPROGRAMUNIFORM1UIVPROC) (GLuint program, GLint location, GLsizei/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint program,GLint location,GLsizei count,const GLuint * value)
PFNGLPROGRAMUNIFORM2DPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLPROGRAMUNIFORM2DPROC) (GLuint program, GLint location, GLdouble /;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint program,GLint location,GLdouble x,GLdouble y)
PFNGLPROGRAMUNIFORM2DVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLPROGRAMUNIFORM2DVPROC) (GLuint program, GLint location, GLsizei /;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint program,GLint location,GLsizei count,const GLdouble * value)
PFNGLPROGRAMUNIFORM2FEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLPROGRAMUNIFORM2FEXTPROC) (GLuint program, GLint location, GLfloa/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint program,GLint location,GLfloat v0,GLfloat v1)
PFNGLPROGRAMUNIFORM2FPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLPROGRAMUNIFORM2FPROC) (GLuint program, GLint location, GLfloat x/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint program,GLint location,GLfloat x,GLfloat y)
PFNGLPROGRAMUNIFORM2FVEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLPROGRAMUNIFORM2FVEXTPROC) (GLuint program, GLint location, GLsiz/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint program,GLint location,GLsizei count,const GLfloat * value)
PFNGLPROGRAMUNIFORM2FVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLPROGRAMUNIFORM2FVPROC) (GLuint program, GLint location, GLsizei /;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint program,GLint location,GLsizei count,const GLfloat * value)
PFNGLPROGRAMUNIFORM2I64ARBPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLPROGRAMUNIFORM2I64ARBPROC) (GLuint program, GLint location, GLin/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint program,GLint location,GLint64 x,GLint64 y)
PFNGLPROGRAMUNIFORM2I64NVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLPROGRAMUNIFORM2I64NVPROC) (GLuint program, GLint location, GLint/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint program,GLint location,GLint64EXT x,GLint64EXT y)
PFNGLPROGRAMUNIFORM2I64VARBPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLPROGRAMUNIFORM2I64VARBPROC) (GLuint program, GLint location, GLs/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint program,GLint location,GLsizei count,const GLint64 * value)
PFNGLPROGRAMUNIFORM2I64VNVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLPROGRAMUNIFORM2I64VNVPROC) (GLuint program, GLint location, GLsi/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint program,GLint location,GLsizei count,const GLint64EXT * value)
PFNGLPROGRAMUNIFORM2IEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLPROGRAMUNIFORM2IEXTPROC) (GLuint program, GLint location, GLint /;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint program,GLint location,GLint v0,GLint v1)
PFNGLPROGRAMUNIFORM2IPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLPROGRAMUNIFORM2IPROC) (GLuint program, GLint location, GLint x, /;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint program,GLint location,GLint x,GLint y)
PFNGLPROGRAMUNIFORM2IVEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLPROGRAMUNIFORM2IVEXTPROC) (GLuint program, GLint location, GLsiz/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint program,GLint location,GLsizei count,const GLint * value)
PFNGLPROGRAMUNIFORM2IVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLPROGRAMUNIFORM2IVPROC) (GLuint program, GLint location, GLsizei /;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint program,GLint location,GLsizei count,const GLint * value)
PFNGLPROGRAMUNIFORM2UI64ARBPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLPROGRAMUNIFORM2UI64ARBPROC) (GLuint program, GLint location, GLu/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint program,GLint location,GLuint64 x,GLuint64 y)
PFNGLPROGRAMUNIFORM2UI64NVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLPROGRAMUNIFORM2UI64NVPROC) (GLuint program, GLint location, GLui/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint program,GLint location,GLuint64EXT x,GLuint64EXT y)
PFNGLPROGRAMUNIFORM2UI64VARBPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLPROGRAMUNIFORM2UI64VARBPROC) (GLuint program, GLint location, GL/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint program,GLint location,GLsizei count,const GLuint64 * value)
PFNGLPROGRAMUNIFORM2UI64VNVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLPROGRAMUNIFORM2UI64VNVPROC) (GLuint program, GLint location, GLs/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint program,GLint location,GLsizei count,const GLuint64EXT * value)
PFNGLPROGRAMUNIFORM2UIEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLPROGRAMUNIFORM2UIEXTPROC) (GLuint program, GLint location, GLuin/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint program,GLint location,GLuint v0,GLuint v1)
PFNGLPROGRAMUNIFORM2UIPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLPROGRAMUNIFORM2UIPROC) (GLuint program, GLint location, GLuint x/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint program,GLint location,GLuint x,GLuint y)
PFNGLPROGRAMUNIFORM2UIVEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLPROGRAMUNIFORM2UIVEXTPROC) (GLuint program, GLint location, GLsi/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint program,GLint location,GLsizei count,const GLuint * value)
PFNGLPROGRAMUNIFORM2UIVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLPROGRAMUNIFORM2UIVPROC) (GLuint program, GLint location, GLsizei/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint program,GLint location,GLsizei count,const GLuint * value)
PFNGLPROGRAMUNIFORM3DPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLPROGRAMUNIFORM3DPROC) (GLuint program, GLint location, GLdouble /;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint program,GLint location,GLdouble x,GLdouble y,GLdouble z)
PFNGLPROGRAMUNIFORM3DVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLPROGRAMUNIFORM3DVPROC) (GLuint program, GLint location, GLsizei /;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint program,GLint location,GLsizei count,const GLdouble * value)
PFNGLPROGRAMUNIFORM3FEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLPROGRAMUNIFORM3FEXTPROC) (GLuint program, GLint location, GLfloa/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint program,GLint location,GLfloat v0,GLfloat v1,GLfloat v2)
PFNGLPROGRAMUNIFORM3FPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLPROGRAMUNIFORM3FPROC) (GLuint program, GLint location, GLfloat x/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint program,GLint location,GLfloat x,GLfloat y,GLfloat z)
PFNGLPROGRAMUNIFORM3FVEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLPROGRAMUNIFORM3FVEXTPROC) (GLuint program, GLint location, GLsiz/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint program,GLint location,GLsizei count,const GLfloat * value)
PFNGLPROGRAMUNIFORM3FVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLPROGRAMUNIFORM3FVPROC) (GLuint program, GLint location, GLsizei /;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint program,GLint location,GLsizei count,const GLfloat * value)
PFNGLPROGRAMUNIFORM3I64ARBPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLPROGRAMUNIFORM3I64ARBPROC) (GLuint program, GLint location, GLin/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint program,GLint location,GLint64 x,GLint64 y,GLint64 z)
PFNGLPROGRAMUNIFORM3I64NVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLPROGRAMUNIFORM3I64NVPROC) (GLuint program, GLint location, GLint/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint program,GLint location,GLint64EXT x,GLint64EXT y,GLint64EXT z)
PFNGLPROGRAMUNIFORM3I64VARBPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLPROGRAMUNIFORM3I64VARBPROC) (GLuint program, GLint location, GLs/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint program,GLint location,GLsizei count,const GLint64 * value)
PFNGLPROGRAMUNIFORM3I64VNVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLPROGRAMUNIFORM3I64VNVPROC) (GLuint program, GLint location, GLsi/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint program,GLint location,GLsizei count,const GLint64EXT * value)
PFNGLPROGRAMUNIFORM3IEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLPROGRAMUNIFORM3IEXTPROC) (GLuint program, GLint location, GLint /;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint program,GLint location,GLint v0,GLint v1,GLint v2)
PFNGLPROGRAMUNIFORM3IPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLPROGRAMUNIFORM3IPROC) (GLuint program, GLint location, GLint x, /;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint program,GLint location,GLint x,GLint y,GLint z)
PFNGLPROGRAMUNIFORM3IVEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLPROGRAMUNIFORM3IVEXTPROC) (GLuint program, GLint location, GLsiz/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint program,GLint location,GLsizei count,const GLint * value)
PFNGLPROGRAMUNIFORM3IVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLPROGRAMUNIFORM3IVPROC) (GLuint program, GLint location, GLsizei /;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint program,GLint location,GLsizei count,const GLint * value)
PFNGLPROGRAMUNIFORM3UI64ARBPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLPROGRAMUNIFORM3UI64ARBPROC) (GLuint program, GLint location, GLu/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint program,GLint location,GLuint64 x,GLuint64 y,GLuint64 z)
PFNGLPROGRAMUNIFORM3UI64NVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLPROGRAMUNIFORM3UI64NVPROC) (GLuint program, GLint location, GLui/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint program,GLint location,GLuint64EXT x,GLuint64EXT y,GLuint64EXT z)
PFNGLPROGRAMUNIFORM3UI64VARBPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLPROGRAMUNIFORM3UI64VARBPROC) (GLuint program, GLint location, GL/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint program,GLint location,GLsizei count,const GLuint64 * value)
PFNGLPROGRAMUNIFORM3UI64VNVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLPROGRAMUNIFORM3UI64VNVPROC) (GLuint program, GLint location, GLs/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint program,GLint location,GLsizei count,const GLuint64EXT * value)
PFNGLPROGRAMUNIFORM3UIEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLPROGRAMUNIFORM3UIEXTPROC) (GLuint program, GLint location, GLuin/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint program,GLint location,GLuint v0,GLuint v1,GLuint v2)
PFNGLPROGRAMUNIFORM3UIPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLPROGRAMUNIFORM3UIPROC) (GLuint program, GLint location, GLuint x/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint program,GLint location,GLuint x,GLuint y,GLuint z)
PFNGLPROGRAMUNIFORM3UIVEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLPROGRAMUNIFORM3UIVEXTPROC) (GLuint program, GLint location, GLsi/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint program,GLint location,GLsizei count,const GLuint * value)
PFNGLPROGRAMUNIFORM3UIVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLPROGRAMUNIFORM3UIVPROC) (GLuint program, GLint location, GLsizei/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint program,GLint location,GLsizei count,const GLuint * value)
PFNGLPROGRAMUNIFORM4DPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLPROGRAMUNIFORM4DPROC) (GLuint program, GLint location, GLdouble /;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint program,GLint location,GLdouble x,GLdouble y,GLdouble z,GLdouble w)
PFNGLPROGRAMUNIFORM4DVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLPROGRAMUNIFORM4DVPROC) (GLuint program, GLint location, GLsizei /;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint program,GLint location,GLsizei count,const GLdouble * value)
PFNGLPROGRAMUNIFORM4FEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLPROGRAMUNIFORM4FEXTPROC) (GLuint program, GLint location, GLfloa/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint program,GLint location,GLfloat v0,GLfloat v1,GLfloat v2,GLfloat v3)
PFNGLPROGRAMUNIFORM4FPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLPROGRAMUNIFORM4FPROC) (GLuint program, GLint location, GLfloat x/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint program,GLint location,GLfloat x,GLfloat y,GLfloat z,GLfloat w)
PFNGLPROGRAMUNIFORM4FVEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLPROGRAMUNIFORM4FVEXTPROC) (GLuint program, GLint location, GLsiz/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint program,GLint location,GLsizei count,const GLfloat * value)
PFNGLPROGRAMUNIFORM4FVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLPROGRAMUNIFORM4FVPROC) (GLuint program, GLint location, GLsizei /;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint program,GLint location,GLsizei count,const GLfloat * value)
PFNGLPROGRAMUNIFORM4I64ARBPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLPROGRAMUNIFORM4I64ARBPROC) (GLuint program, GLint location, GLin/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint program,GLint location,GLint64 x,GLint64 y,GLint64 z,GLint64 w)
PFNGLPROGRAMUNIFORM4I64NVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLPROGRAMUNIFORM4I64NVPROC) (GLuint program, GLint location, GLint/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint program,GLint location,GLint64EXT x,GLint64EXT y,GLint64EXT z,GLint64EXT w)
PFNGLPROGRAMUNIFORM4I64VARBPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLPROGRAMUNIFORM4I64VARBPROC) (GLuint program, GLint location, GLs/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint program,GLint location,GLsizei count,const GLint64 * value)
PFNGLPROGRAMUNIFORM4I64VNVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLPROGRAMUNIFORM4I64VNVPROC) (GLuint program, GLint location, GLsi/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint program,GLint location,GLsizei count,const GLint64EXT * value)
PFNGLPROGRAMUNIFORM4IEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLPROGRAMUNIFORM4IEXTPROC) (GLuint program, GLint location, GLint /;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint program,GLint location,GLint v0,GLint v1,GLint v2,GLint v3)
PFNGLPROGRAMUNIFORM4IPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLPROGRAMUNIFORM4IPROC) (GLuint program, GLint location, GLint x, /;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint program,GLint location,GLint x,GLint y,GLint z,GLint w)
PFNGLPROGRAMUNIFORM4IVEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLPROGRAMUNIFORM4IVEXTPROC) (GLuint program, GLint location, GLsiz/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint program,GLint location,GLsizei count,const GLint * value)
PFNGLPROGRAMUNIFORM4IVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLPROGRAMUNIFORM4IVPROC) (GLuint program, GLint location, GLsizei /;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint program,GLint location,GLsizei count,const GLint * value)
PFNGLPROGRAMUNIFORM4UI64ARBPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLPROGRAMUNIFORM4UI64ARBPROC) (GLuint program, GLint location, GLu/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint program,GLint location,GLuint64 x,GLuint64 y,GLuint64 z,GLuint64 w)
PFNGLPROGRAMUNIFORM4UI64NVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLPROGRAMUNIFORM4UI64NVPROC) (GLuint program, GLint location, GLui/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint program,GLint location,GLuint64EXT x,GLuint64EXT y,GLuint64EXT z,GLuint64EXT w)
PFNGLPROGRAMUNIFORM4UI64VARBPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLPROGRAMUNIFORM4UI64VARBPROC) (GLuint program, GLint location, GL/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint program,GLint location,GLsizei count,const GLuint64 * value)
PFNGLPROGRAMUNIFORM4UI64VNVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLPROGRAMUNIFORM4UI64VNVPROC) (GLuint program, GLint location, GLs/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint program,GLint location,GLsizei count,const GLuint64EXT * value)
PFNGLPROGRAMUNIFORM4UIEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLPROGRAMUNIFORM4UIEXTPROC) (GLuint program, GLint location, GLuin/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint program,GLint location,GLuint v0,GLuint v1,GLuint v2,GLuint v3)
PFNGLPROGRAMUNIFORM4UIPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLPROGRAMUNIFORM4UIPROC) (GLuint program, GLint location, GLuint x/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint program,GLint location,GLuint x,GLuint y,GLuint z,GLuint w)
PFNGLPROGRAMUNIFORM4UIVEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLPROGRAMUNIFORM4UIVEXTPROC) (GLuint program, GLint location, GLsi/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint program,GLint location,GLsizei count,const GLuint * value)
PFNGLPROGRAMUNIFORM4UIVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLPROGRAMUNIFORM4UIVPROC) (GLuint program, GLint location, GLsizei/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint program,GLint location,GLsizei count,const GLuint * value)
PFNGLPROGRAMUNIFORMHANDLEUI64ARBPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLPROGRAMUNIFORMHANDLEUI64ARBPROC) (GLuint program, GLint location/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint program,GLint location,GLuint64 value)
PFNGLPROGRAMUNIFORMHANDLEUI64IMGPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLPROGRAMUNIFORMHANDLEUI64IMGPROC) (GLuint program, GLint location/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint program,GLint location,GLuint64 value)
PFNGLPROGRAMUNIFORMHANDLEUI64NVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLPROGRAMUNIFORMHANDLEUI64NVPROC) (GLuint program, GLint location,/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint program,GLint location,GLuint64 value)
PFNGLPROGRAMUNIFORMHANDLEUI64VARBPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLPROGRAMUNIFORMHANDLEUI64VARBPROC) (GLuint program, GLint locatio/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint program,GLint location,GLsizei count,const GLuint64 * values)
PFNGLPROGRAMUNIFORMHANDLEUI64VIMGPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLPROGRAMUNIFORMHANDLEUI64VIMGPROC) (GLuint program, GLint locatio/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint program,GLint location,GLsizei count,const GLuint64 * values)
PFNGLPROGRAMUNIFORMHANDLEUI64VNVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLPROGRAMUNIFORMHANDLEUI64VNVPROC) (GLuint program, GLint location/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint program,GLint location,GLsizei count,const GLuint64 * values)
PFNGLPROGRAMUNIFORMMATRIX2DVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLPROGRAMUNIFORMMATRIX2DVPROC) (GLuint program, GLint location, GL/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLdouble * value)
PFNGLPROGRAMUNIFORMMATRIX2FVEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLPROGRAMUNIFORMMATRIX2FVEXTPROC) (GLuint program, GLint location,/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLfloat * value)
PFNGLPROGRAMUNIFORMMATRIX2FVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLPROGRAMUNIFORMMATRIX2FVPROC) (GLuint program, GLint location, GL/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLfloat * value)
PFNGLPROGRAMUNIFORMMATRIX2X3DVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLPROGRAMUNIFORMMATRIX2X3DVPROC) (GLuint program, GLint location, /;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLdouble * value)
PFNGLPROGRAMUNIFORMMATRIX2X3FVEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLPROGRAMUNIFORMMATRIX2X3FVEXTPROC) (GLuint program, GLint locatio/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLfloat * value)
PFNGLPROGRAMUNIFORMMATRIX2X3FVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLPROGRAMUNIFORMMATRIX2X3FVPROC) (GLuint program, GLint location, /;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLfloat * value)
PFNGLPROGRAMUNIFORMMATRIX2X4DVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLPROGRAMUNIFORMMATRIX2X4DVPROC) (GLuint program, GLint location, /;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLdouble * value)
PFNGLPROGRAMUNIFORMMATRIX2X4FVEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLPROGRAMUNIFORMMATRIX2X4FVEXTPROC) (GLuint program, GLint locatio/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLfloat * value)
PFNGLPROGRAMUNIFORMMATRIX2X4FVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLPROGRAMUNIFORMMATRIX2X4FVPROC) (GLuint program, GLint location, /;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLfloat * value)
PFNGLPROGRAMUNIFORMMATRIX3DVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLPROGRAMUNIFORMMATRIX3DVPROC) (GLuint program, GLint location, GL/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLdouble * value)
PFNGLPROGRAMUNIFORMMATRIX3FVEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLPROGRAMUNIFORMMATRIX3FVEXTPROC) (GLuint program, GLint location,/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLfloat * value)
PFNGLPROGRAMUNIFORMMATRIX3FVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLPROGRAMUNIFORMMATRIX3FVPROC) (GLuint program, GLint location, GL/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLfloat * value)
PFNGLPROGRAMUNIFORMMATRIX3X2DVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLPROGRAMUNIFORMMATRIX3X2DVPROC) (GLuint program, GLint location, /;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLdouble * value)
PFNGLPROGRAMUNIFORMMATRIX3X2FVEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLPROGRAMUNIFORMMATRIX3X2FVEXTPROC) (GLuint program, GLint locatio/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLfloat * value)
PFNGLPROGRAMUNIFORMMATRIX3X2FVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLPROGRAMUNIFORMMATRIX3X2FVPROC) (GLuint program, GLint location, /;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLfloat * value)
PFNGLPROGRAMUNIFORMMATRIX3X4DVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLPROGRAMUNIFORMMATRIX3X4DVPROC) (GLuint program, GLint location, /;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLdouble * value)
PFNGLPROGRAMUNIFORMMATRIX3X4FVEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLPROGRAMUNIFORMMATRIX3X4FVEXTPROC) (GLuint program, GLint locatio/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLfloat * value)
PFNGLPROGRAMUNIFORMMATRIX3X4FVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLPROGRAMUNIFORMMATRIX3X4FVPROC) (GLuint program, GLint location, /;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLfloat * value)
PFNGLPROGRAMUNIFORMMATRIX4DVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLPROGRAMUNIFORMMATRIX4DVPROC) (GLuint program, GLint location, GL/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLdouble * value)
PFNGLPROGRAMUNIFORMMATRIX4FVEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLPROGRAMUNIFORMMATRIX4FVEXTPROC) (GLuint program, GLint location,/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLfloat * value)
PFNGLPROGRAMUNIFORMMATRIX4FVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLPROGRAMUNIFORMMATRIX4FVPROC) (GLuint program, GLint location, GL/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLfloat * value)
PFNGLPROGRAMUNIFORMMATRIX4X2DVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLPROGRAMUNIFORMMATRIX4X2DVPROC) (GLuint program, GLint location, /;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLdouble * value)
PFNGLPROGRAMUNIFORMMATRIX4X2FVEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLPROGRAMUNIFORMMATRIX4X2FVEXTPROC) (GLuint program, GLint locatio/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLfloat * value)
PFNGLPROGRAMUNIFORMMATRIX4X2FVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLPROGRAMUNIFORMMATRIX4X2FVPROC) (GLuint program, GLint location, /;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLfloat * value)
PFNGLPROGRAMUNIFORMMATRIX4X3DVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLPROGRAMUNIFORMMATRIX4X3DVPROC) (GLuint program, GLint location, /;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLdouble * value)
PFNGLPROGRAMUNIFORMMATRIX4X3FVEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLPROGRAMUNIFORMMATRIX4X3FVEXTPROC) (GLuint program, GLint locatio/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLfloat * value)
PFNGLPROGRAMUNIFORMMATRIX4X3FVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLPROGRAMUNIFORMMATRIX4X3FVPROC) (GLuint program, GLint location, /;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLfloat * value)
PFNGLPROGRAMUNIFORMUI64NVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLPROGRAMUNIFORMUI64NVPROC) (GLuint program, GLint location, GLuin/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint program,GLint location,GLuint64EXT value)
PFNGLPROGRAMUNIFORMUI64VNVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLPROGRAMUNIFORMUI64VNVPROC) (GLuint program, GLint location, GLsi/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint program,GLint location,GLsizei count,const GLuint64EXT * value)
PFNGLPROGRAMVERTEXLIMITNVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLPROGRAMVERTEXLIMITNVPROC) (GLenum target, GLint limit);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLint limit)
PFNGLPROVOKINGVERTEXEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLPROVOKINGVERTEXEXTPROC) (GLenum mode);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum mode)
PFNGLPROVOKINGVERTEXPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLPROVOKINGVERTEXPROC) (GLenum mode);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum mode)
PFNGLPUSHCLIENTATTRIBDEFAULTEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLPUSHCLIENTATTRIBDEFAULTEXTPROC) (GLbitfield mask);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLbitfield mask)
PFNGLPUSHDEBUGGROUPPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLPUSHDEBUGGROUPPROC) (GLenum source, GLuint id, GLsizei length, c/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum source,GLuint id,GLsizei length,const GLchar * message)
PFNGLPUSHGROUPMARKEREXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLPUSHGROUPMARKEREXTPROC) (GLsizei length, const GLchar* marker);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLsizei length,const GLchar * marker)
PFNGLQUERYCOUNTERANGLEPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLQUERYCOUNTERANGLEPROC) (GLuint id, GLenum target);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint id,GLenum target)
PFNGLQUERYCOUNTEREXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLQUERYCOUNTEREXTPROC) (GLuint id, GLenum target);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint id,GLenum target)
PFNGLQUERYCOUNTERPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLQUERYCOUNTERPROC) (GLuint id, GLenum target);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint id,GLenum target)
PFNGLQUERYOBJECTPARAMETERUIAMDPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLQUERYOBJECTPARAMETERUIAMDPROC) (GLenum target, GLuint id, GLenum/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLuint id,GLenum pname,GLuint param)
PFNGLRASTERSAMPLESEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLRASTERSAMPLESEXTPROC) (GLuint samples, GLboolean fixedsampleloca/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint samples,GLboolean fixedsamplelocations)
PFNGLREADBUFFERINDEXEDEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLREADBUFFERINDEXEDEXTPROC) (GLenum src, GLint index);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum src,GLint index)
PFNGLREADBUFFERNVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLREADBUFFERNVPROC) (GLenum mode);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum mode)
PFNGLREADBUFFERREGIONPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLREADBUFFERREGIONPROC) (GLuint region, GLint x, GLint y, GLsizei /;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint region,GLint x,GLint y,GLsizei width,GLsizei height)
PFNGLREADNPIXELSARBPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLREADNPIXELSARBPROC) (GLint x, GLint y, GLsizei width, GLsizei he/;"	t	typeref:typename:void (GLAPIENTRY *)(GLint x,GLint y,GLsizei width,GLsizei height,GLenum format,GLenum type,GLsizei bufSize,void * data)
PFNGLREADNPIXELSEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLREADNPIXELSEXTPROC) (GLint x, GLint y, GLsizei width, GLsizei he/;"	t	typeref:typename:void (GLAPIENTRY *)(GLint x,GLint y,GLsizei width,GLsizei height,GLenum format,GLenum type,GLsizei bufSize,void * data)
PFNGLREADNPIXELSPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLREADNPIXELSPROC) (GLint x, GLint y, GLsizei width, GLsizei heigh/;"	t	typeref:typename:void (GLAPIENTRY *)(GLint x,GLint y,GLsizei width,GLsizei height,GLenum format,GLenum type,GLsizei bufSize,void * data)
PFNGLREADVIDEOPIXELSSUNPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLREADVIDEOPIXELSSUNPROC) (GLint x, GLint y, GLsizei width, GLsize/;"	t	typeref:typename:void (GLAPIENTRY *)(GLint x,GLint y,GLsizei width,GLsizei height,GLenum format,GLenum type,void * pixels)
PFNGLREFERENCEPLANESGIXPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLREFERENCEPLANESGIXPROC) (const GLdouble* equation);$/;"	t	typeref:typename:void (GLAPIENTRY *)(const GLdouble * equation)
PFNGLRELEASEKEYEDMUTEXWIN32EXTPROC	./GL/glew.h	/^typedef GLboolean (GLAPIENTRY * PFNGLRELEASEKEYEDMUTEXWIN32EXTPROC) (GLuint memory, GLuint64 key/;"	t	typeref:typename:GLboolean (GLAPIENTRY *)(GLuint memory,GLuint64 key)
PFNGLRELEASESHADERCOMPILERPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLRELEASESHADERCOMPILERPROC) (void);$/;"	t	typeref:typename:void (GLAPIENTRY *)(void)
PFNGLRENDERBUFFERSTORAGEEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLRENDERBUFFERSTORAGEEXTPROC) (GLenum target, GLenum internalforma/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLenum internalformat,GLsizei width,GLsizei height)
PFNGLRENDERBUFFERSTORAGEMULTISAMPLEADVANCEDAMDPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLRENDERBUFFERSTORAGEMULTISAMPLEADVANCEDAMDPROC) (GLenum target, G/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLsizei samples,GLsizei storageSamples,GLenum internalformat,GLsizei width,GLsizei height)
PFNGLRENDERBUFFERSTORAGEMULTISAMPLEANGLEPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLRENDERBUFFERSTORAGEMULTISAMPLEANGLEPROC) (GLenum target, GLsizei/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLsizei samples,GLenum internalformat,GLsizei width,GLsizei height)
PFNGLRENDERBUFFERSTORAGEMULTISAMPLEAPPLEPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLRENDERBUFFERSTORAGEMULTISAMPLEAPPLEPROC) (GLenum target, GLsizei/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLsizei samples,GLenum internalformat,GLsizei width,GLsizei height)
PFNGLRENDERBUFFERSTORAGEMULTISAMPLECOVERAGENVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLRENDERBUFFERSTORAGEMULTISAMPLECOVERAGENVPROC) (GLenum target, GL/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLsizei coverageSamples,GLsizei colorSamples,GLenum internalformat,GLsizei width,GLsizei height)
PFNGLRENDERBUFFERSTORAGEMULTISAMPLEEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLRENDERBUFFERSTORAGEMULTISAMPLEEXTPROC) (GLenum target, GLsizei s/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLsizei samples,GLenum internalformat,GLsizei width,GLsizei height)
PFNGLRENDERBUFFERSTORAGEMULTISAMPLEIMGPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLRENDERBUFFERSTORAGEMULTISAMPLEIMGPROC) (GLenum target, GLsizei s/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLsizei samples,GLenum internalformat,GLsizei width,GLsizei height)
PFNGLRENDERBUFFERSTORAGEMULTISAMPLENVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLRENDERBUFFERSTORAGEMULTISAMPLENVPROC) (GLenum target, GLsizei sa/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLsizei samples,GLenum internalformat,GLsizei width,GLsizei height)
PFNGLRENDERBUFFERSTORAGEMULTISAMPLEPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLRENDERBUFFERSTORAGEMULTISAMPLEPROC) (GLenum target, GLsizei samp/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLsizei samples,GLenum internalformat,GLsizei width,GLsizei height)
PFNGLRENDERBUFFERSTORAGEOESPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLRENDERBUFFERSTORAGEOESPROC) (GLenum target, GLenum internalforma/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLenum internalformat,GLsizei width,GLsizei height)
PFNGLRENDERBUFFERSTORAGEPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLRENDERBUFFERSTORAGEPROC) (GLenum target, GLenum internalformat, /;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLenum internalformat,GLsizei width,GLsizei height)
PFNGLRENDERGPUMASKNVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLRENDERGPUMASKNVPROC) (GLbitfield mask);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLbitfield mask)
PFNGLREPLACEMENTCODEPOINTERSUNPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLREPLACEMENTCODEPOINTERSUNPROC) (GLenum type, GLsizei stride, con/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum type,GLsizei stride,const void * pointer)
PFNGLREPLACEMENTCODEUBSUNPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLREPLACEMENTCODEUBSUNPROC) (GLubyte code);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLubyte code)
PFNGLREPLACEMENTCODEUBVSUNPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLREPLACEMENTCODEUBVSUNPROC) (const GLubyte* code);$/;"	t	typeref:typename:void (GLAPIENTRY *)(const GLubyte * code)
PFNGLREPLACEMENTCODEUICOLOR3FVERTEX3FSUNPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLREPLACEMENTCODEUICOLOR3FVERTEX3FSUNPROC) (GLuint rc, GLfloat r, /;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint rc,GLfloat r,GLfloat g,GLfloat b,GLfloat x,GLfloat y,GLfloat z)
PFNGLREPLACEMENTCODEUICOLOR3FVERTEX3FVSUNPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLREPLACEMENTCODEUICOLOR3FVERTEX3FVSUNPROC) (const GLuint* rc, con/;"	t	typeref:typename:void (GLAPIENTRY *)(const GLuint * rc,const GLfloat * c,const GLfloat * v)
PFNGLREPLACEMENTCODEUICOLOR4FNORMAL3FVERTEX3FSUNPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLREPLACEMENTCODEUICOLOR4FNORMAL3FVERTEX3FSUNPROC) (GLuint rc, GLf/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint rc,GLfloat r,GLfloat g,GLfloat b,GLfloat a,GLfloat nx,GLfloat ny,GLfloat nz,GLfloat x,GLfloat y,GLfloat z)
PFNGLREPLACEMENTCODEUICOLOR4FNORMAL3FVERTEX3FVSUNPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLREPLACEMENTCODEUICOLOR4FNORMAL3FVERTEX3FVSUNPROC) (const GLuint*/;"	t	typeref:typename:void (GLAPIENTRY *)(const GLuint * rc,const GLfloat * c,const GLfloat * n,const GLfloat * v)
PFNGLREPLACEMENTCODEUICOLOR4UBVERTEX3FSUNPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLREPLACEMENTCODEUICOLOR4UBVERTEX3FSUNPROC) (GLuint rc, GLubyte r,/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint rc,GLubyte r,GLubyte g,GLubyte b,GLubyte a,GLfloat x,GLfloat y,GLfloat z)
PFNGLREPLACEMENTCODEUICOLOR4UBVERTEX3FVSUNPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLREPLACEMENTCODEUICOLOR4UBVERTEX3FVSUNPROC) (const GLuint* rc, co/;"	t	typeref:typename:void (GLAPIENTRY *)(const GLuint * rc,const GLubyte * c,const GLfloat * v)
PFNGLREPLACEMENTCODEUINORMAL3FVERTEX3FSUNPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLREPLACEMENTCODEUINORMAL3FVERTEX3FSUNPROC) (GLuint rc, GLfloat nx/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint rc,GLfloat nx,GLfloat ny,GLfloat nz,GLfloat x,GLfloat y,GLfloat z)
PFNGLREPLACEMENTCODEUINORMAL3FVERTEX3FVSUNPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLREPLACEMENTCODEUINORMAL3FVERTEX3FVSUNPROC) (const GLuint* rc, co/;"	t	typeref:typename:void (GLAPIENTRY *)(const GLuint * rc,const GLfloat * n,const GLfloat * v)
PFNGLREPLACEMENTCODEUISUNPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLREPLACEMENTCODEUISUNPROC) (GLuint code);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint code)
PFNGLREPLACEMENTCODEUITEXCOORD2FCOLOR4FNORMAL3FVERTEX3FSUNPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLREPLACEMENTCODEUITEXCOORD2FCOLOR4FNORMAL3FVERTEX3FSUNPROC) (GLui/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint rc,GLfloat s,GLfloat t,GLfloat r,GLfloat g,GLfloat b,GLfloat a,GLfloat nx,GLfloat ny,GLfloat nz,GLfloat x,GLfloat y,GLfloat z)
PFNGLREPLACEMENTCODEUITEXCOORD2FCOLOR4FNORMAL3FVERTEX3FVSUNPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLREPLACEMENTCODEUITEXCOORD2FCOLOR4FNORMAL3FVERTEX3FVSUNPROC) (con/;"	t	typeref:typename:void (GLAPIENTRY *)(const GLuint * rc,const GLfloat * tc,const GLfloat * c,const GLfloat * n,const GLfloat * v)
PFNGLREPLACEMENTCODEUITEXCOORD2FNORMAL3FVERTEX3FSUNPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLREPLACEMENTCODEUITEXCOORD2FNORMAL3FVERTEX3FSUNPROC) (GLuint rc, /;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint rc,GLfloat s,GLfloat t,GLfloat nx,GLfloat ny,GLfloat nz,GLfloat x,GLfloat y,GLfloat z)
PFNGLREPLACEMENTCODEUITEXCOORD2FNORMAL3FVERTEX3FVSUNPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLREPLACEMENTCODEUITEXCOORD2FNORMAL3FVERTEX3FVSUNPROC) (const GLui/;"	t	typeref:typename:void (GLAPIENTRY *)(const GLuint * rc,const GLfloat * tc,const GLfloat * n,const GLfloat * v)
PFNGLREPLACEMENTCODEUITEXCOORD2FVERTEX3FSUNPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLREPLACEMENTCODEUITEXCOORD2FVERTEX3FSUNPROC) (GLuint rc, GLfloat /;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint rc,GLfloat s,GLfloat t,GLfloat x,GLfloat y,GLfloat z)
PFNGLREPLACEMENTCODEUITEXCOORD2FVERTEX3FVSUNPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLREPLACEMENTCODEUITEXCOORD2FVERTEX3FVSUNPROC) (const GLuint* rc, /;"	t	typeref:typename:void (GLAPIENTRY *)(const GLuint * rc,const GLfloat * tc,const GLfloat * v)
PFNGLREPLACEMENTCODEUIVERTEX3FSUNPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLREPLACEMENTCODEUIVERTEX3FSUNPROC) (GLuint rc, GLfloat x, GLfloat/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint rc,GLfloat x,GLfloat y,GLfloat z)
PFNGLREPLACEMENTCODEUIVERTEX3FVSUNPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLREPLACEMENTCODEUIVERTEX3FVSUNPROC) (const GLuint* rc, const GLfl/;"	t	typeref:typename:void (GLAPIENTRY *)(const GLuint * rc,const GLfloat * v)
PFNGLREPLACEMENTCODEUIVSUNPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLREPLACEMENTCODEUIVSUNPROC) (const GLuint* code);$/;"	t	typeref:typename:void (GLAPIENTRY *)(const GLuint * code)
PFNGLREPLACEMENTCODEUSSUNPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLREPLACEMENTCODEUSSUNPROC) (GLushort code);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLushort code)
PFNGLREPLACEMENTCODEUSVSUNPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLREPLACEMENTCODEUSVSUNPROC) (const GLushort* code);$/;"	t	typeref:typename:void (GLAPIENTRY *)(const GLushort * code)
PFNGLREQUESTRESIDENTPROGRAMSNVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLREQUESTRESIDENTPROGRAMSNVPROC) (GLsizei n, GLuint* ids);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLsizei n,GLuint * ids)
PFNGLRESETHISTOGRAMEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLRESETHISTOGRAMEXTPROC) (GLenum target);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target)
PFNGLRESETHISTOGRAMPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLRESETHISTOGRAMPROC) (GLenum target);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target)
PFNGLRESETMEMORYOBJECTPARAMETERNVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLRESETMEMORYOBJECTPARAMETERNVPROC) (GLuint memory, GLenum pname);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint memory,GLenum pname)
PFNGLRESETMINMAXEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLRESETMINMAXEXTPROC) (GLenum target);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target)
PFNGLRESETMINMAXPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLRESETMINMAXPROC) (GLenum target);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target)
PFNGLRESIZEBUFFERSMESAPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLRESIZEBUFFERSMESAPROC) (void);$/;"	t	typeref:typename:void (GLAPIENTRY *)(void)
PFNGLRESOLVEDEPTHVALUESNVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLRESOLVEDEPTHVALUESNVPROC) (void);$/;"	t	typeref:typename:void (GLAPIENTRY *)(void)
PFNGLRESOLVEMULTISAMPLEFRAMEBUFFERAPPLEPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLRESOLVEMULTISAMPLEFRAMEBUFFERAPPLEPROC) (void);$/;"	t	typeref:typename:void (GLAPIENTRY *)(void)
PFNGLRESUMETRANSFORMFEEDBACKNVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLRESUMETRANSFORMFEEDBACKNVPROC) (void);$/;"	t	typeref:typename:void (GLAPIENTRY *)(void)
PFNGLRESUMETRANSFORMFEEDBACKPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLRESUMETRANSFORMFEEDBACKPROC) (void);$/;"	t	typeref:typename:void (GLAPIENTRY *)(void)
PFNGLROTATEXPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLROTATEXPROC) (GLfixed angle, GLfixed x, GLfixed y, GLfixed z);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLfixed angle,GLfixed x,GLfixed y,GLfixed z)
PFNGLSAMPLECOVERAGEARBPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLSAMPLECOVERAGEARBPROC) (GLclampf value, GLboolean invert);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLclampf value,GLboolean invert)
PFNGLSAMPLECOVERAGEPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLSAMPLECOVERAGEPROC) (GLclampf value, GLboolean invert);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLclampf value,GLboolean invert)
PFNGLSAMPLECOVERAGEXPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLSAMPLECOVERAGEXPROC) (GLclampx value, GLboolean invert);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLclampx value,GLboolean invert)
PFNGLSAMPLEMAPATIPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLSAMPLEMAPATIPROC) (GLuint dst, GLuint interp, GLenum swizzle);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint dst,GLuint interp,GLenum swizzle)
PFNGLSAMPLEMASKEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLSAMPLEMASKEXTPROC) (GLclampf value, GLboolean invert);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLclampf value,GLboolean invert)
PFNGLSAMPLEMASKINDEXEDNVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLSAMPLEMASKINDEXEDNVPROC) (GLuint index, GLbitfield mask);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,GLbitfield mask)
PFNGLSAMPLEMASKIPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLSAMPLEMASKIPROC) (GLuint index, GLbitfield mask);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,GLbitfield mask)
PFNGLSAMPLEMASKSGISPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLSAMPLEMASKSGISPROC) (GLclampf value, GLboolean invert);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLclampf value,GLboolean invert)
PFNGLSAMPLEPATTERNEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLSAMPLEPATTERNEXTPROC) (GLenum pattern);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum pattern)
PFNGLSAMPLEPATTERNSGISPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLSAMPLEPATTERNSGISPROC) (GLenum pattern);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum pattern)
PFNGLSAMPLERPARAMETERFPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLSAMPLERPARAMETERFPROC) (GLuint sampler, GLenum pname, GLfloat pa/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint sampler,GLenum pname,GLfloat param)
PFNGLSAMPLERPARAMETERFVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLSAMPLERPARAMETERFVPROC) (GLuint sampler, GLenum pname, const GLf/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint sampler,GLenum pname,const GLfloat * params)
PFNGLSAMPLERPARAMETERIIVEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLSAMPLERPARAMETERIIVEXTPROC) (GLuint sampler, GLenum pname, const/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint sampler,GLenum pname,const GLint * params)
PFNGLSAMPLERPARAMETERIIVOESPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLSAMPLERPARAMETERIIVOESPROC) (GLuint sampler, GLenum pname, const/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint sampler,GLenum pname,const GLint * params)
PFNGLSAMPLERPARAMETERIIVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLSAMPLERPARAMETERIIVPROC) (GLuint sampler, GLenum pname, const GL/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint sampler,GLenum pname,const GLint * params)
PFNGLSAMPLERPARAMETERIPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLSAMPLERPARAMETERIPROC) (GLuint sampler, GLenum pname, GLint para/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint sampler,GLenum pname,GLint param)
PFNGLSAMPLERPARAMETERIUIVEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLSAMPLERPARAMETERIUIVEXTPROC) (GLuint sampler, GLenum pname, cons/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint sampler,GLenum pname,const GLuint * params)
PFNGLSAMPLERPARAMETERIUIVOESPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLSAMPLERPARAMETERIUIVOESPROC) (GLuint sampler, GLenum pname, cons/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint sampler,GLenum pname,const GLuint * params)
PFNGLSAMPLERPARAMETERIUIVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLSAMPLERPARAMETERIUIVPROC) (GLuint sampler, GLenum pname, const G/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint sampler,GLenum pname,const GLuint * params)
PFNGLSAMPLERPARAMETERIVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLSAMPLERPARAMETERIVPROC) (GLuint sampler, GLenum pname, const GLi/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint sampler,GLenum pname,const GLint * params)
PFNGLSCALEXPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLSCALEXPROC) (GLfixed x, GLfixed y, GLfixed z);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLfixed x,GLfixed y,GLfixed z)
PFNGLSCISSORARRAYVNVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLSCISSORARRAYVNVPROC) (GLuint first, GLsizei count, const GLint */;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint first,GLsizei count,const GLint * v)
PFNGLSCISSORARRAYVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLSCISSORARRAYVPROC) (GLuint first, GLsizei count, const GLint * v/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint first,GLsizei count,const GLint * v)
PFNGLSCISSOREXCLUSIVEARRAYVNVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLSCISSOREXCLUSIVEARRAYVNVPROC) (GLuint first, GLsizei count, cons/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint first,GLsizei count,const GLint * v)
PFNGLSCISSOREXCLUSIVENVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLSCISSOREXCLUSIVENVPROC) (GLint x, GLint y, GLsizei width, GLsize/;"	t	typeref:typename:void (GLAPIENTRY *)(GLint x,GLint y,GLsizei width,GLsizei height)
PFNGLSCISSORINDEXEDNVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLSCISSORINDEXEDNVPROC) (GLuint index, GLint left, GLint bottom, G/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,GLint left,GLint bottom,GLsizei width,GLsizei height)
PFNGLSCISSORINDEXEDPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLSCISSORINDEXEDPROC) (GLuint index, GLint left, GLint bottom, GLs/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,GLint left,GLint bottom,GLsizei width,GLsizei height)
PFNGLSCISSORINDEXEDVNVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLSCISSORINDEXEDVNVPROC) (GLuint index, const GLint * v);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,const GLint * v)
PFNGLSCISSORINDEXEDVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLSCISSORINDEXEDVPROC) (GLuint index, const GLint * v);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,const GLint * v)
PFNGLSECONDARYCOLOR3BEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLSECONDARYCOLOR3BEXTPROC) (GLbyte red, GLbyte green, GLbyte blue)/;"	t	typeref:typename:void (GLAPIENTRY *)(GLbyte red,GLbyte green,GLbyte blue)
PFNGLSECONDARYCOLOR3BPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLSECONDARYCOLOR3BPROC) (GLbyte red, GLbyte green, GLbyte blue);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLbyte red,GLbyte green,GLbyte blue)
PFNGLSECONDARYCOLOR3BVEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLSECONDARYCOLOR3BVEXTPROC) (const GLbyte *v);$/;"	t	typeref:typename:void (GLAPIENTRY *)(const GLbyte * v)
PFNGLSECONDARYCOLOR3BVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLSECONDARYCOLOR3BVPROC) (const GLbyte *v);$/;"	t	typeref:typename:void (GLAPIENTRY *)(const GLbyte * v)
PFNGLSECONDARYCOLOR3DEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLSECONDARYCOLOR3DEXTPROC) (GLdouble red, GLdouble green, GLdouble/;"	t	typeref:typename:void (GLAPIENTRY *)(GLdouble red,GLdouble green,GLdouble blue)
PFNGLSECONDARYCOLOR3DPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLSECONDARYCOLOR3DPROC) (GLdouble red, GLdouble green, GLdouble bl/;"	t	typeref:typename:void (GLAPIENTRY *)(GLdouble red,GLdouble green,GLdouble blue)
PFNGLSECONDARYCOLOR3DVEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLSECONDARYCOLOR3DVEXTPROC) (const GLdouble *v);$/;"	t	typeref:typename:void (GLAPIENTRY *)(const GLdouble * v)
PFNGLSECONDARYCOLOR3DVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLSECONDARYCOLOR3DVPROC) (const GLdouble *v);$/;"	t	typeref:typename:void (GLAPIENTRY *)(const GLdouble * v)
PFNGLSECONDARYCOLOR3FEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLSECONDARYCOLOR3FEXTPROC) (GLfloat red, GLfloat green, GLfloat bl/;"	t	typeref:typename:void (GLAPIENTRY *)(GLfloat red,GLfloat green,GLfloat blue)
PFNGLSECONDARYCOLOR3FPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLSECONDARYCOLOR3FPROC) (GLfloat red, GLfloat green, GLfloat blue)/;"	t	typeref:typename:void (GLAPIENTRY *)(GLfloat red,GLfloat green,GLfloat blue)
PFNGLSECONDARYCOLOR3FVEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLSECONDARYCOLOR3FVEXTPROC) (const GLfloat *v);$/;"	t	typeref:typename:void (GLAPIENTRY *)(const GLfloat * v)
PFNGLSECONDARYCOLOR3FVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLSECONDARYCOLOR3FVPROC) (const GLfloat *v);$/;"	t	typeref:typename:void (GLAPIENTRY *)(const GLfloat * v)
PFNGLSECONDARYCOLOR3HNVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLSECONDARYCOLOR3HNVPROC) (GLhalf red, GLhalf green, GLhalf blue);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLhalf red,GLhalf green,GLhalf blue)
PFNGLSECONDARYCOLOR3HVNVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLSECONDARYCOLOR3HVNVPROC) (const GLhalf* v);$/;"	t	typeref:typename:void (GLAPIENTRY *)(const GLhalf * v)
PFNGLSECONDARYCOLOR3IEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLSECONDARYCOLOR3IEXTPROC) (GLint red, GLint green, GLint blue);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLint red,GLint green,GLint blue)
PFNGLSECONDARYCOLOR3IPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLSECONDARYCOLOR3IPROC) (GLint red, GLint green, GLint blue);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLint red,GLint green,GLint blue)
PFNGLSECONDARYCOLOR3IVEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLSECONDARYCOLOR3IVEXTPROC) (const GLint *v);$/;"	t	typeref:typename:void (GLAPIENTRY *)(const GLint * v)
PFNGLSECONDARYCOLOR3IVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLSECONDARYCOLOR3IVPROC) (const GLint *v);$/;"	t	typeref:typename:void (GLAPIENTRY *)(const GLint * v)
PFNGLSECONDARYCOLOR3SEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLSECONDARYCOLOR3SEXTPROC) (GLshort red, GLshort green, GLshort bl/;"	t	typeref:typename:void (GLAPIENTRY *)(GLshort red,GLshort green,GLshort blue)
PFNGLSECONDARYCOLOR3SPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLSECONDARYCOLOR3SPROC) (GLshort red, GLshort green, GLshort blue)/;"	t	typeref:typename:void (GLAPIENTRY *)(GLshort red,GLshort green,GLshort blue)
PFNGLSECONDARYCOLOR3SVEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLSECONDARYCOLOR3SVEXTPROC) (const GLshort *v);$/;"	t	typeref:typename:void (GLAPIENTRY *)(const GLshort * v)
PFNGLSECONDARYCOLOR3SVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLSECONDARYCOLOR3SVPROC) (const GLshort *v);$/;"	t	typeref:typename:void (GLAPIENTRY *)(const GLshort * v)
PFNGLSECONDARYCOLOR3UBEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLSECONDARYCOLOR3UBEXTPROC) (GLubyte red, GLubyte green, GLubyte b/;"	t	typeref:typename:void (GLAPIENTRY *)(GLubyte red,GLubyte green,GLubyte blue)
PFNGLSECONDARYCOLOR3UBPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLSECONDARYCOLOR3UBPROC) (GLubyte red, GLubyte green, GLubyte blue/;"	t	typeref:typename:void (GLAPIENTRY *)(GLubyte red,GLubyte green,GLubyte blue)
PFNGLSECONDARYCOLOR3UBVEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLSECONDARYCOLOR3UBVEXTPROC) (const GLubyte *v);$/;"	t	typeref:typename:void (GLAPIENTRY *)(const GLubyte * v)
PFNGLSECONDARYCOLOR3UBVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLSECONDARYCOLOR3UBVPROC) (const GLubyte *v);$/;"	t	typeref:typename:void (GLAPIENTRY *)(const GLubyte * v)
PFNGLSECONDARYCOLOR3UIEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLSECONDARYCOLOR3UIEXTPROC) (GLuint red, GLuint green, GLuint blue/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint red,GLuint green,GLuint blue)
PFNGLSECONDARYCOLOR3UIPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLSECONDARYCOLOR3UIPROC) (GLuint red, GLuint green, GLuint blue);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint red,GLuint green,GLuint blue)
PFNGLSECONDARYCOLOR3UIVEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLSECONDARYCOLOR3UIVEXTPROC) (const GLuint *v);$/;"	t	typeref:typename:void (GLAPIENTRY *)(const GLuint * v)
PFNGLSECONDARYCOLOR3UIVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLSECONDARYCOLOR3UIVPROC) (const GLuint *v);$/;"	t	typeref:typename:void (GLAPIENTRY *)(const GLuint * v)
PFNGLSECONDARYCOLOR3USEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLSECONDARYCOLOR3USEXTPROC) (GLushort red, GLushort green, GLushor/;"	t	typeref:typename:void (GLAPIENTRY *)(GLushort red,GLushort green,GLushort blue)
PFNGLSECONDARYCOLOR3USPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLSECONDARYCOLOR3USPROC) (GLushort red, GLushort green, GLushort b/;"	t	typeref:typename:void (GLAPIENTRY *)(GLushort red,GLushort green,GLushort blue)
PFNGLSECONDARYCOLOR3USVEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLSECONDARYCOLOR3USVEXTPROC) (const GLushort *v);$/;"	t	typeref:typename:void (GLAPIENTRY *)(const GLushort * v)
PFNGLSECONDARYCOLOR3USVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLSECONDARYCOLOR3USVPROC) (const GLushort *v);$/;"	t	typeref:typename:void (GLAPIENTRY *)(const GLushort * v)
PFNGLSECONDARYCOLORFORMATNVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLSECONDARYCOLORFORMATNVPROC) (GLint size, GLenum type, GLsizei st/;"	t	typeref:typename:void (GLAPIENTRY *)(GLint size,GLenum type,GLsizei stride)
PFNGLSECONDARYCOLORP3UIPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLSECONDARYCOLORP3UIPROC) (GLenum type, GLuint color);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum type,GLuint color)
PFNGLSECONDARYCOLORP3UIVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLSECONDARYCOLORP3UIVPROC) (GLenum type, const GLuint* color);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum type,const GLuint * color)
PFNGLSECONDARYCOLORPOINTEREXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLSECONDARYCOLORPOINTEREXTPROC) (GLint size, GLenum type, GLsizei /;"	t	typeref:typename:void (GLAPIENTRY *)(GLint size,GLenum type,GLsizei stride,const void * pointer)
PFNGLSECONDARYCOLORPOINTERLISTIBMPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLSECONDARYCOLORPOINTERLISTIBMPROC) (GLint size, GLenum type, GLin/;"	t	typeref:typename:void (GLAPIENTRY *)(GLint size,GLenum type,GLint stride,const void ** pointer,GLint ptrstride)
PFNGLSECONDARYCOLORPOINTERPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLSECONDARYCOLORPOINTERPROC) (GLint size, GLenum type, GLsizei str/;"	t	typeref:typename:void (GLAPIENTRY *)(GLint size,GLenum type,GLsizei stride,const void * pointer)
PFNGLSELECTPERFMONITORCOUNTERSAMDPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLSELECTPERFMONITORCOUNTERSAMDPROC) (GLuint monitor, GLboolean ena/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint monitor,GLboolean enable,GLuint group,GLint numCounters,GLuint * counterList)
PFNGLSELECTTEXTURECOORDSETSGISPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLSELECTTEXTURECOORDSETSGISPROC) (GLenum target);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target)
PFNGLSELECTTEXTURESGISPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLSELECTTEXTURESGISPROC) (GLenum target);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target)
PFNGLSELECTTEXTURETRANSFORMSGISPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLSELECTTEXTURETRANSFORMSGISPROC) (GLenum target);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target)
PFNGLSEMAPHOREPARAMETERUI64VEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLSEMAPHOREPARAMETERUI64VEXTPROC) (GLuint semaphore, GLenum pname,/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint semaphore,GLenum pname,const GLuint64 * params)
PFNGLSEPARABLEFILTER2DEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLSEPARABLEFILTER2DEXTPROC) (GLenum target, GLenum internalformat,/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLenum internalformat,GLsizei width,GLsizei height,GLenum format,GLenum type,const void * row,const void * column)
PFNGLSEPARABLEFILTER2DPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLSEPARABLEFILTER2DPROC) (GLenum target, GLenum internalformat, GL/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLenum internalformat,GLsizei width,GLsizei height,GLenum format,GLenum type,const void * row,const void * column)
PFNGLSETFENCEAPPLEPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLSETFENCEAPPLEPROC) (GLuint fence);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint fence)
PFNGLSETFENCENVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLSETFENCENVPROC) (GLuint fence, GLenum condition);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint fence,GLenum condition)
PFNGLSETFRAGMENTSHADERCONSTANTATIPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLSETFRAGMENTSHADERCONSTANTATIPROC) (GLuint dst, const GLfloat* va/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint dst,const GLfloat * value)
PFNGLSETINVARIANTEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLSETINVARIANTEXTPROC) (GLuint id, GLenum type, void *addr);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint id,GLenum type,void * addr)
PFNGLSETLOCALCONSTANTEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLSETLOCALCONSTANTEXTPROC) (GLuint id, GLenum type, void *addr);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint id,GLenum type,void * addr)
PFNGLSETMULTISAMPLEFVAMDPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLSETMULTISAMPLEFVAMDPROC) (GLenum pname, GLuint index, const GLfl/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum pname,GLuint index,const GLfloat * val)
PFNGLSHADERBINARYPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLSHADERBINARYPROC) (GLsizei count, const GLuint* shaders, GLenum /;"	t	typeref:typename:void (GLAPIENTRY *)(GLsizei count,const GLuint * shaders,GLenum binaryformat,const void * binary,GLsizei length)
PFNGLSHADEROP1EXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLSHADEROP1EXTPROC) (GLenum op, GLuint res, GLuint arg1);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum op,GLuint res,GLuint arg1)
PFNGLSHADEROP2EXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLSHADEROP2EXTPROC) (GLenum op, GLuint res, GLuint arg1, GLuint ar/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum op,GLuint res,GLuint arg1,GLuint arg2)
PFNGLSHADEROP3EXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLSHADEROP3EXTPROC) (GLenum op, GLuint res, GLuint arg1, GLuint ar/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum op,GLuint res,GLuint arg1,GLuint arg2,GLuint arg3)
PFNGLSHADERSOURCEARBPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLSHADERSOURCEARBPROC) (GLhandleARB shaderObj, GLsizei count, cons/;"	t	typeref:typename:void (GLAPIENTRY *)(GLhandleARB shaderObj,GLsizei count,const GLcharARB ** string,const GLint * length)
PFNGLSHADERSOURCEPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLSHADERSOURCEPROC) (GLuint shader, GLsizei count, const GLchar *c/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint shader,GLsizei count,const GLchar * const * string,const GLint * length)
PFNGLSHADERSTORAGEBLOCKBINDINGPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLSHADERSTORAGEBLOCKBINDINGPROC) (GLuint program, GLuint storageBl/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint program,GLuint storageBlockIndex,GLuint storageBlockBinding)
PFNGLSHADINGRATEIMAGEBARRIERNVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLSHADINGRATEIMAGEBARRIERNVPROC) (GLenum order);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum order)
PFNGLSHADINGRATEIMAGEPALETTENVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLSHADINGRATEIMAGEPALETTENVPROC) (GLuint viewport, GLuint first, G/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint viewport,GLuint first,GLsizei count,const GLenum * rates)
PFNGLSHADINGRATESAMPLEORDERCUSTOMNVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLSHADINGRATESAMPLEORDERCUSTOMNVPROC) (GLenum rate, GLuint samples/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum rate,GLuint samples,const GLint * locations)
PFNGLSHARPENTEXFUNCSGISPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLSHARPENTEXFUNCSGISPROC) (GLenum target, GLsizei n, const GLfloat/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLsizei n,const GLfloat * points)
PFNGLSIGNALSEMAPHOREEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLSIGNALSEMAPHOREEXTPROC) (GLuint semaphore, GLuint numBufferBarri/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint semaphore,GLuint numBufferBarriers,const GLuint * buffers,GLuint numTextureBarriers,const GLuint * textures,const GLenum * dstLayouts)
PFNGLSIGNALSEMAPHOREUI64NVXPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLSIGNALSEMAPHOREUI64NVXPROC) (GLuint signalGpu, GLsizei fenceObje/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint signalGpu,GLsizei fenceObjectCount,const GLuint * semaphoreArray,const GLuint64 * fenceValueArray)
PFNGLSIGNALVKFENCENVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLSIGNALVKFENCENVPROC) (GLuint64 vkFence);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint64 vkFence)
PFNGLSIGNALVKSEMAPHORENVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLSIGNALVKSEMAPHORENVPROC) (GLuint64 vkSemaphore);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint64 vkSemaphore)
PFNGLSPECIALIZESHADERARBPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLSPECIALIZESHADERARBPROC) (GLuint shader, const GLchar* pEntryPoi/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint shader,const GLchar * pEntryPoint,GLuint numSpecializationConstants,const GLuint * pConstantIndex,const GLuint * pConstantValue)
PFNGLSPECIALIZESHADERPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLSPECIALIZESHADERPROC) (GLuint shader, const GLchar *pEntryPoint,/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint shader,const GLchar * pEntryPoint,GLuint numSpecializationConstants,const GLuint * pConstantIndex,const GLuint * pConstantValue)
PFNGLSPRITEPARAMETERFSGIXPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLSPRITEPARAMETERFSGIXPROC) (GLenum pname, GLfloat param);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum pname,GLfloat param)
PFNGLSPRITEPARAMETERFVSGIXPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLSPRITEPARAMETERFVSGIXPROC) (GLenum pname, GLfloat* params);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum pname,GLfloat * params)
PFNGLSPRITEPARAMETERISGIXPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLSPRITEPARAMETERISGIXPROC) (GLenum pname, GLint param);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum pname,GLint param)
PFNGLSPRITEPARAMETERIVSGIXPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLSPRITEPARAMETERIVSGIXPROC) (GLenum pname, GLint* params);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum pname,GLint * params)
PFNGLSTARTTILINGQCOMPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLSTARTTILINGQCOMPROC) (GLuint x, GLuint y, GLuint width, GLuint h/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint x,GLuint y,GLuint width,GLuint height,GLbitfield preserveMask)
PFNGLSTATECAPTURENVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLSTATECAPTURENVPROC) (GLuint state, GLenum mode);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint state,GLenum mode)
PFNGLSTENCILFILLPATHINSTANCEDNVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLSTENCILFILLPATHINSTANCEDNVPROC) (GLsizei numPaths, GLenum pathNa/;"	t	typeref:typename:void (GLAPIENTRY *)(GLsizei numPaths,GLenum pathNameType,const void * paths,GLuint pathBase,GLenum fillMode,GLuint mask,GLenum transformType,const GLfloat * transformValues)
PFNGLSTENCILFILLPATHNVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLSTENCILFILLPATHNVPROC) (GLuint path, GLenum fillMode, GLuint mas/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint path,GLenum fillMode,GLuint mask)
PFNGLSTENCILFUNCSEPARATEATIPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLSTENCILFUNCSEPARATEATIPROC) (GLenum frontfunc, GLenum backfunc, /;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum frontfunc,GLenum backfunc,GLint ref,GLuint mask)
PFNGLSTENCILFUNCSEPARATEPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLSTENCILFUNCSEPARATEPROC) (GLenum face, GLenum func, GLint ref, G/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum face,GLenum func,GLint ref,GLuint mask)
PFNGLSTENCILMASKSEPARATEPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLSTENCILMASKSEPARATEPROC) (GLenum face, GLuint mask);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum face,GLuint mask)
PFNGLSTENCILOPSEPARATEATIPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLSTENCILOPSEPARATEATIPROC) (GLenum face, GLenum sfail, GLenum dpf/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum face,GLenum sfail,GLenum dpfail,GLenum dppass)
PFNGLSTENCILOPSEPARATEPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLSTENCILOPSEPARATEPROC) (GLenum face, GLenum sfail, GLenum dpfail/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum face,GLenum sfail,GLenum dpfail,GLenum dppass)
PFNGLSTENCILOPVALUEAMDPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLSTENCILOPVALUEAMDPROC) (GLenum face, GLuint value);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum face,GLuint value)
PFNGLSTENCILSTROKEPATHINSTANCEDNVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLSTENCILSTROKEPATHINSTANCEDNVPROC) (GLsizei numPaths, GLenum path/;"	t	typeref:typename:void (GLAPIENTRY *)(GLsizei numPaths,GLenum pathNameType,const void * paths,GLuint pathBase,GLint reference,GLuint mask,GLenum transformType,const GLfloat * transformValues)
PFNGLSTENCILSTROKEPATHNVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLSTENCILSTROKEPATHNVPROC) (GLuint path, GLint reference, GLuint m/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint path,GLint reference,GLuint mask)
PFNGLSTENCILTHENCOVERFILLPATHINSTANCEDNVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLSTENCILTHENCOVERFILLPATHINSTANCEDNVPROC) (GLsizei numPaths, GLen/;"	t	typeref:typename:void (GLAPIENTRY *)(GLsizei numPaths,GLenum pathNameType,const void * paths,GLuint pathBase,GLenum fillMode,GLuint mask,GLenum coverMode,GLenum transformType,const GLfloat * transformValues)
PFNGLSTENCILTHENCOVERFILLPATHNVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLSTENCILTHENCOVERFILLPATHNVPROC) (GLuint path, GLenum fillMode, G/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint path,GLenum fillMode,GLuint mask,GLenum coverMode)
PFNGLSTENCILTHENCOVERSTROKEPATHINSTANCEDNVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLSTENCILTHENCOVERSTROKEPATHINSTANCEDNVPROC) (GLsizei numPaths, GL/;"	t	typeref:typename:void (GLAPIENTRY *)(GLsizei numPaths,GLenum pathNameType,const void * paths,GLuint pathBase,GLint reference,GLuint mask,GLenum coverMode,GLenum transformType,const GLfloat * transformValues)
PFNGLSTENCILTHENCOVERSTROKEPATHNVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLSTENCILTHENCOVERSTROKEPATHNVPROC) (GLuint path, GLint reference,/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint path,GLint reference,GLuint mask,GLenum coverMode)
PFNGLSTEREOPARAMETERFNVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLSTEREOPARAMETERFNVPROC) (GLenum pname, GLfloat param);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum pname,GLfloat param)
PFNGLSTEREOPARAMETERINVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLSTEREOPARAMETERINVPROC) (GLenum pname, GLint param);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum pname,GLint param)
PFNGLSTRINGMARKERGREMEDYPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLSTRINGMARKERGREMEDYPROC) (GLsizei len, const void *string);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLsizei len,const void * string)
PFNGLSUBPIXELPRECISIONBIASNVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLSUBPIXELPRECISIONBIASNVPROC) (GLuint xbits, GLuint ybits);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint xbits,GLuint ybits)
PFNGLSWAPMPEGPREDICTORSSGIXPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLSWAPMPEGPREDICTORSSGIXPROC) (GLenum target0, GLenum target1);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target0,GLenum target1)
PFNGLSWIZZLEEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLSWIZZLEEXTPROC) (GLuint res, GLuint in, GLenum outX, GLenum outY/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint res,GLuint in,GLenum outX,GLenum outY,GLenum outZ,GLenum outW)
PFNGLSYNCTEXTUREINTELPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLSYNCTEXTUREINTELPROC) (GLuint texture);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint texture)
PFNGLTAGSAMPLEBUFFERSGIXPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLTAGSAMPLEBUFFERSGIXPROC) (void);$/;"	t	typeref:typename:void (GLAPIENTRY *)(void)
PFNGLTANGENTPOINTEREXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLTANGENTPOINTEREXTPROC) (GLenum type, GLsizei stride, void *point/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum type,GLsizei stride,void * pointer)
PFNGLTBUFFERMASK3DFXPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLTBUFFERMASK3DFXPROC) (GLuint mask);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint mask)
PFNGLTESSELLATIONFACTORAMDPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLTESSELLATIONFACTORAMDPROC) (GLfloat factor);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLfloat factor)
PFNGLTESSELLATIONMODEAMDPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLTESSELLATIONMODEAMDPROC) (GLenum mode);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum mode)
PFNGLTESTFENCEAPPLEPROC	./GL/glew.h	/^typedef GLboolean (GLAPIENTRY * PFNGLTESTFENCEAPPLEPROC) (GLuint fence);$/;"	t	typeref:typename:GLboolean (GLAPIENTRY *)(GLuint fence)
PFNGLTESTFENCENVPROC	./GL/glew.h	/^typedef GLboolean (GLAPIENTRY * PFNGLTESTFENCENVPROC) (GLuint fence);$/;"	t	typeref:typename:GLboolean (GLAPIENTRY *)(GLuint fence)
PFNGLTESTOBJECTAPPLEPROC	./GL/glew.h	/^typedef GLboolean (GLAPIENTRY * PFNGLTESTOBJECTAPPLEPROC) (GLenum object, GLuint name);$/;"	t	typeref:typename:GLboolean (GLAPIENTRY *)(GLenum object,GLuint name)
PFNGLTEXATTACHMEMORYNVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLTEXATTACHMEMORYNVPROC) (GLenum target, GLuint memory, GLuint64 o/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLuint memory,GLuint64 offset)
PFNGLTEXBUFFERARBPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLTEXBUFFERARBPROC) (GLenum target, GLenum internalformat, GLuint /;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLenum internalformat,GLuint buffer)
PFNGLTEXBUFFEREXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLTEXBUFFEREXTPROC) (GLenum target, GLenum internalformat, GLuint /;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLenum internalformat,GLuint buffer)
PFNGLTEXBUFFEROESPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLTEXBUFFEROESPROC) (GLenum target, GLenum internalformat, GLuint /;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLenum internalformat,GLuint buffer)
PFNGLTEXBUFFERPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLTEXBUFFERPROC) (GLenum target, GLenum internalFormat, GLuint buf/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLenum internalFormat,GLuint buffer)
PFNGLTEXBUFFERRANGEOESPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLTEXBUFFERRANGEOESPROC) (GLenum target, GLenum internalformat, GL/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLenum internalformat,GLuint buffer,GLintptr offset,GLsizeiptr size)
PFNGLTEXBUFFERRANGEPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLTEXBUFFERRANGEPROC) (GLenum target, GLenum internalformat, GLuin/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLenum internalformat,GLuint buffer,GLintptr offset,GLsizeiptr size)
PFNGLTEXBUMPPARAMETERFVATIPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLTEXBUMPPARAMETERFVATIPROC) (GLenum pname, GLfloat *param);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum pname,GLfloat * param)
PFNGLTEXBUMPPARAMETERIVATIPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLTEXBUMPPARAMETERIVATIPROC) (GLenum pname, GLint *param);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum pname,GLint * param)
PFNGLTEXCOORD1HNVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLTEXCOORD1HNVPROC) (GLhalf s);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLhalf s)
PFNGLTEXCOORD1HVNVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLTEXCOORD1HVNVPROC) (const GLhalf* v);$/;"	t	typeref:typename:void (GLAPIENTRY *)(const GLhalf * v)
PFNGLTEXCOORD2FCOLOR3FVERTEX3FSUNPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLTEXCOORD2FCOLOR3FVERTEX3FSUNPROC) (GLfloat s, GLfloat t, GLfloat/;"	t	typeref:typename:void (GLAPIENTRY *)(GLfloat s,GLfloat t,GLfloat r,GLfloat g,GLfloat b,GLfloat x,GLfloat y,GLfloat z)
PFNGLTEXCOORD2FCOLOR3FVERTEX3FVSUNPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLTEXCOORD2FCOLOR3FVERTEX3FVSUNPROC) (const GLfloat* tc, const GLf/;"	t	typeref:typename:void (GLAPIENTRY *)(const GLfloat * tc,const GLfloat * c,const GLfloat * v)
PFNGLTEXCOORD2FCOLOR4FNORMAL3FVERTEX3FSUNPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLTEXCOORD2FCOLOR4FNORMAL3FVERTEX3FSUNPROC) (GLfloat s, GLfloat t,/;"	t	typeref:typename:void (GLAPIENTRY *)(GLfloat s,GLfloat t,GLfloat r,GLfloat g,GLfloat b,GLfloat a,GLfloat nx,GLfloat ny,GLfloat nz,GLfloat x,GLfloat y,GLfloat z)
PFNGLTEXCOORD2FCOLOR4FNORMAL3FVERTEX3FVSUNPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLTEXCOORD2FCOLOR4FNORMAL3FVERTEX3FVSUNPROC) (const GLfloat* tc, c/;"	t	typeref:typename:void (GLAPIENTRY *)(const GLfloat * tc,const GLfloat * c,const GLfloat * n,const GLfloat * v)
PFNGLTEXCOORD2FCOLOR4UBVERTEX3FSUNPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLTEXCOORD2FCOLOR4UBVERTEX3FSUNPROC) (GLfloat s, GLfloat t, GLubyt/;"	t	typeref:typename:void (GLAPIENTRY *)(GLfloat s,GLfloat t,GLubyte r,GLubyte g,GLubyte b,GLubyte a,GLfloat x,GLfloat y,GLfloat z)
PFNGLTEXCOORD2FCOLOR4UBVERTEX3FVSUNPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLTEXCOORD2FCOLOR4UBVERTEX3FVSUNPROC) (const GLfloat* tc, const GL/;"	t	typeref:typename:void (GLAPIENTRY *)(const GLfloat * tc,const GLubyte * c,const GLfloat * v)
PFNGLTEXCOORD2FNORMAL3FVERTEX3FSUNPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLTEXCOORD2FNORMAL3FVERTEX3FSUNPROC) (GLfloat s, GLfloat t, GLfloa/;"	t	typeref:typename:void (GLAPIENTRY *)(GLfloat s,GLfloat t,GLfloat nx,GLfloat ny,GLfloat nz,GLfloat x,GLfloat y,GLfloat z)
PFNGLTEXCOORD2FNORMAL3FVERTEX3FVSUNPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLTEXCOORD2FNORMAL3FVERTEX3FVSUNPROC) (const GLfloat* tc, const GL/;"	t	typeref:typename:void (GLAPIENTRY *)(const GLfloat * tc,const GLfloat * n,const GLfloat * v)
PFNGLTEXCOORD2FVERTEX3FSUNPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLTEXCOORD2FVERTEX3FSUNPROC) (GLfloat s, GLfloat t, GLfloat x, GLf/;"	t	typeref:typename:void (GLAPIENTRY *)(GLfloat s,GLfloat t,GLfloat x,GLfloat y,GLfloat z)
PFNGLTEXCOORD2FVERTEX3FVSUNPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLTEXCOORD2FVERTEX3FVSUNPROC) (const GLfloat* tc, const GLfloat *v/;"	t	typeref:typename:void (GLAPIENTRY *)(const GLfloat * tc,const GLfloat * v)
PFNGLTEXCOORD2HNVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLTEXCOORD2HNVPROC) (GLhalf s, GLhalf t);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLhalf s,GLhalf t)
PFNGLTEXCOORD2HVNVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLTEXCOORD2HVNVPROC) (const GLhalf* v);$/;"	t	typeref:typename:void (GLAPIENTRY *)(const GLhalf * v)
PFNGLTEXCOORD3HNVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLTEXCOORD3HNVPROC) (GLhalf s, GLhalf t, GLhalf r);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLhalf s,GLhalf t,GLhalf r)
PFNGLTEXCOORD3HVNVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLTEXCOORD3HVNVPROC) (const GLhalf* v);$/;"	t	typeref:typename:void (GLAPIENTRY *)(const GLhalf * v)
PFNGLTEXCOORD4FCOLOR4FNORMAL3FVERTEX4FSUNPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLTEXCOORD4FCOLOR4FNORMAL3FVERTEX4FSUNPROC) (GLfloat s, GLfloat t,/;"	t	typeref:typename:void (GLAPIENTRY *)(GLfloat s,GLfloat t,GLfloat p,GLfloat q,GLfloat r,GLfloat g,GLfloat b,GLfloat a,GLfloat nx,GLfloat ny,GLfloat nz,GLfloat x,GLfloat y,GLfloat z,GLfloat w)
PFNGLTEXCOORD4FCOLOR4FNORMAL3FVERTEX4FVSUNPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLTEXCOORD4FCOLOR4FNORMAL3FVERTEX4FVSUNPROC) (const GLfloat* tc, c/;"	t	typeref:typename:void (GLAPIENTRY *)(const GLfloat * tc,const GLfloat * c,const GLfloat * n,const GLfloat * v)
PFNGLTEXCOORD4FVERTEX4FSUNPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLTEXCOORD4FVERTEX4FSUNPROC) (GLfloat s, GLfloat t, GLfloat p, GLf/;"	t	typeref:typename:void (GLAPIENTRY *)(GLfloat s,GLfloat t,GLfloat p,GLfloat q,GLfloat x,GLfloat y,GLfloat z,GLfloat w)
PFNGLTEXCOORD4FVERTEX4FVSUNPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLTEXCOORD4FVERTEX4FVSUNPROC) (const GLfloat* tc, const GLfloat *v/;"	t	typeref:typename:void (GLAPIENTRY *)(const GLfloat * tc,const GLfloat * v)
PFNGLTEXCOORD4HNVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLTEXCOORD4HNVPROC) (GLhalf s, GLhalf t, GLhalf r, GLhalf q);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLhalf s,GLhalf t,GLhalf r,GLhalf q)
PFNGLTEXCOORD4HVNVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLTEXCOORD4HVNVPROC) (const GLhalf* v);$/;"	t	typeref:typename:void (GLAPIENTRY *)(const GLhalf * v)
PFNGLTEXCOORDFORMATNVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLTEXCOORDFORMATNVPROC) (GLint size, GLenum type, GLsizei stride);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLint size,GLenum type,GLsizei stride)
PFNGLTEXCOORDP1UIPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLTEXCOORDP1UIPROC) (GLenum type, GLuint coords);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum type,GLuint coords)
PFNGLTEXCOORDP1UIVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLTEXCOORDP1UIVPROC) (GLenum type, const GLuint* coords);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum type,const GLuint * coords)
PFNGLTEXCOORDP2UIPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLTEXCOORDP2UIPROC) (GLenum type, GLuint coords);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum type,GLuint coords)
PFNGLTEXCOORDP2UIVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLTEXCOORDP2UIVPROC) (GLenum type, const GLuint* coords);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum type,const GLuint * coords)
PFNGLTEXCOORDP3UIPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLTEXCOORDP3UIPROC) (GLenum type, GLuint coords);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum type,GLuint coords)
PFNGLTEXCOORDP3UIVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLTEXCOORDP3UIVPROC) (GLenum type, const GLuint* coords);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum type,const GLuint * coords)
PFNGLTEXCOORDP4UIPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLTEXCOORDP4UIPROC) (GLenum type, GLuint coords);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum type,GLuint coords)
PFNGLTEXCOORDP4UIVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLTEXCOORDP4UIVPROC) (GLenum type, const GLuint* coords);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum type,const GLuint * coords)
PFNGLTEXCOORDPOINTEREXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLTEXCOORDPOINTEREXTPROC) (GLint size, GLenum type, GLsizei stride/;"	t	typeref:typename:void (GLAPIENTRY *)(GLint size,GLenum type,GLsizei stride,GLsizei count,const void * pointer)
PFNGLTEXCOORDPOINTERLISTIBMPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLTEXCOORDPOINTERLISTIBMPROC) (GLint size, GLenum type, GLint stri/;"	t	typeref:typename:void (GLAPIENTRY *)(GLint size,GLenum type,GLint stride,const void ** pointer,GLint ptrstride)
PFNGLTEXCOORDPOINTERVINTELPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLTEXCOORDPOINTERVINTELPROC) (GLint size, GLenum type, const void*/;"	t	typeref:typename:void (GLAPIENTRY *)(GLint size,GLenum type,const void ** pointer)
PFNGLTEXENVXPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLTEXENVXPROC) (GLenum target, GLenum pname, GLfixed param);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLenum pname,GLfixed param)
PFNGLTEXENVXVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLTEXENVXVPROC) (GLenum target, GLenum pname, const GLfixed* param/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLenum pname,const GLfixed * params)
PFNGLTEXFILTERFUNCSGISPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLTEXFILTERFUNCSGISPROC) (GLenum target, GLenum filter, GLsizei n,/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLenum filter,GLsizei n,const GLfloat * weights)
PFNGLTEXGENFOESPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLTEXGENFOESPROC) (GLenum coord, GLenum pname, GLfloat param);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum coord,GLenum pname,GLfloat param)
PFNGLTEXGENFVOESPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLTEXGENFVOESPROC) (GLenum coord, GLenum pname, const GLfloat* par/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum coord,GLenum pname,const GLfloat * params)
PFNGLTEXGENIOESPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLTEXGENIOESPROC) (GLenum coord, GLenum pname, GLint param);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum coord,GLenum pname,GLint param)
PFNGLTEXGENIVOESPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLTEXGENIVOESPROC) (GLenum coord, GLenum pname, const GLint* param/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum coord,GLenum pname,const GLint * params)
PFNGLTEXGENXOESPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLTEXGENXOESPROC) (GLenum coord, GLenum pname, GLfixed param);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum coord,GLenum pname,GLfixed param)
PFNGLTEXGENXVOESPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLTEXGENXVOESPROC) (GLenum coord, GLenum pname, const GLfixed* par/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum coord,GLenum pname,const GLfixed * params)
PFNGLTEXIMAGE2DMULTISAMPLECOVERAGENVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLTEXIMAGE2DMULTISAMPLECOVERAGENVPROC) (GLenum target, GLsizei cov/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLsizei coverageSamples,GLsizei colorSamples,GLint internalFormat,GLsizei width,GLsizei height,GLboolean fixedSampleLocations)
PFNGLTEXIMAGE2DMULTISAMPLEPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLTEXIMAGE2DMULTISAMPLEPROC) (GLenum target, GLsizei samples, GLen/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLsizei samples,GLenum internalformat,GLsizei width,GLsizei height,GLboolean fixedsamplelocations)
PFNGLTEXIMAGE3DEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLTEXIMAGE3DEXTPROC) (GLenum target, GLint level, GLenum internalf/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLint level,GLenum internalformat,GLsizei width,GLsizei height,GLsizei depth,GLint border,GLenum format,GLenum type,const void * pixels)
PFNGLTEXIMAGE3DMULTISAMPLECOVERAGENVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLTEXIMAGE3DMULTISAMPLECOVERAGENVPROC) (GLenum target, GLsizei cov/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLsizei coverageSamples,GLsizei colorSamples,GLint internalFormat,GLsizei width,GLsizei height,GLsizei depth,GLboolean fixedSampleLocations)
PFNGLTEXIMAGE3DMULTISAMPLEPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLTEXIMAGE3DMULTISAMPLEPROC) (GLenum target, GLsizei samples, GLen/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLsizei samples,GLenum internalformat,GLsizei width,GLsizei height,GLsizei depth,GLboolean fixedsamplelocations)
PFNGLTEXIMAGE3DNVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLTEXIMAGE3DNVPROC) (GLenum target, GLint level, GLenum internalFo/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLint level,GLenum internalFormat,GLsizei width,GLsizei height,GLsizei depth,GLint border,GLenum format,GLenum type,const void * pixels)
PFNGLTEXIMAGE3DOESPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLTEXIMAGE3DOESPROC) (GLenum target, GLint level, GLenum internalF/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLint level,GLenum internalFormat,GLsizei width,GLsizei height,GLsizei depth,GLint border,GLenum format,GLenum type,const void * pixels)
PFNGLTEXIMAGE3DPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLTEXIMAGE3DPROC) (GLenum target, GLint level, GLint internalForma/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLint level,GLint internalFormat,GLsizei width,GLsizei height,GLsizei depth,GLint border,GLenum format,GLenum type,const void * pixels)
PFNGLTEXIMAGE4DSGISPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLTEXIMAGE4DSGISPROC) (GLenum target, GLint level, GLenum internal/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLint level,GLenum internalformat,GLsizei width,GLsizei height,GLsizei depth,GLsizei extent,GLint border,GLenum format,GLenum type,const void * pixels)
PFNGLTEXPAGECOMMITMENTARBPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLTEXPAGECOMMITMENTARBPROC) (GLenum target, GLint level, GLint xof/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLint level,GLint xoffset,GLint yoffset,GLint zoffset,GLsizei width,GLsizei height,GLsizei depth,GLboolean commit)
PFNGLTEXPAGECOMMITMENTEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLTEXPAGECOMMITMENTEXTPROC) (GLenum target, GLint level, GLint xof/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLint level,GLint xoffset,GLint yoffset,GLint zoffset,GLsizei width,GLsizei height,GLsizei depth,GLboolean commit)
PFNGLTEXPARAMETERIIVEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLTEXPARAMETERIIVEXTPROC) (GLenum target, GLenum pname, const GLin/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLenum pname,const GLint * params)
PFNGLTEXPARAMETERIIVOESPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLTEXPARAMETERIIVOESPROC) (GLenum target, GLenum pname, const GLin/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLenum pname,const GLint * params)
PFNGLTEXPARAMETERIIVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLTEXPARAMETERIIVPROC) (GLenum target, GLenum pname, const GLint* /;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLenum pname,const GLint * params)
PFNGLTEXPARAMETERIUIVEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLTEXPARAMETERIUIVEXTPROC) (GLenum target, GLenum pname, const GLu/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLenum pname,const GLuint * params)
PFNGLTEXPARAMETERIUIVOESPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLTEXPARAMETERIUIVOESPROC) (GLenum target, GLenum pname, const GLu/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLenum pname,const GLuint * params)
PFNGLTEXPARAMETERIUIVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLTEXPARAMETERIUIVPROC) (GLenum target, GLenum pname, const GLuint/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLenum pname,const GLuint * params)
PFNGLTEXPARAMETERXPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLTEXPARAMETERXPROC) (GLenum target, GLenum pname, GLfixed param);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLenum pname,GLfixed param)
PFNGLTEXPARAMETERXVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLTEXPARAMETERXVPROC) (GLenum target, GLenum pname, const GLfixed*/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLenum pname,const GLfixed * params)
PFNGLTEXRENDERBUFFERNVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLTEXRENDERBUFFERNVPROC) (GLenum target, GLuint renderbuffer);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLuint renderbuffer)
PFNGLTEXSCISSORFUNCINTELPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLTEXSCISSORFUNCINTELPROC) (GLenum target, GLenum lfunc, GLenum hf/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLenum lfunc,GLenum hfunc)
PFNGLTEXSCISSORINTELPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLTEXSCISSORINTELPROC) (GLenum target, GLclampf tlow, GLclampf thi/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLclampf tlow,GLclampf thigh)
PFNGLTEXSTORAGE1DEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLTEXSTORAGE1DEXTPROC) (GLenum target, GLsizei levels, GLenum inte/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLsizei levels,GLenum internalformat,GLsizei width)
PFNGLTEXSTORAGE1DPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLTEXSTORAGE1DPROC) (GLenum target, GLsizei levels, GLenum interna/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLsizei levels,GLenum internalformat,GLsizei width)
PFNGLTEXSTORAGE2DEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLTEXSTORAGE2DEXTPROC) (GLenum target, GLsizei levels, GLenum inte/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLsizei levels,GLenum internalformat,GLsizei width,GLsizei height)
PFNGLTEXSTORAGE2DMULTISAMPLEPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLTEXSTORAGE2DMULTISAMPLEPROC) (GLenum target, GLsizei samples, GL/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLsizei samples,GLenum internalformat,GLsizei width,GLsizei height,GLboolean fixedsamplelocations)
PFNGLTEXSTORAGE2DPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLTEXSTORAGE2DPROC) (GLenum target, GLsizei levels, GLenum interna/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLsizei levels,GLenum internalformat,GLsizei width,GLsizei height)
PFNGLTEXSTORAGE3DEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLTEXSTORAGE3DEXTPROC) (GLenum target, GLsizei levels, GLenum inte/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLsizei levels,GLenum internalformat,GLsizei width,GLsizei height,GLsizei depth)
PFNGLTEXSTORAGE3DMULTISAMPLEOESPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLTEXSTORAGE3DMULTISAMPLEOESPROC) (GLenum target, GLsizei samples,/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLsizei samples,GLenum internalformat,GLsizei width,GLsizei height,GLsizei depth,GLboolean fixedsamplelocations)
PFNGLTEXSTORAGE3DMULTISAMPLEPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLTEXSTORAGE3DMULTISAMPLEPROC) (GLenum target, GLsizei samples, GL/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLsizei samples,GLenum internalformat,GLsizei width,GLsizei height,GLsizei depth,GLboolean fixedsamplelocations)
PFNGLTEXSTORAGE3DPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLTEXSTORAGE3DPROC) (GLenum target, GLsizei levels, GLenum interna/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLsizei levels,GLenum internalformat,GLsizei width,GLsizei height,GLsizei depth)
PFNGLTEXSTORAGEMEM1DEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLTEXSTORAGEMEM1DEXTPROC) (GLenum target, GLsizei levels, GLenum i/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLsizei levels,GLenum internalFormat,GLsizei width,GLuint memory,GLuint64 offset)
PFNGLTEXSTORAGEMEM2DEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLTEXSTORAGEMEM2DEXTPROC) (GLenum target, GLsizei levels, GLenum i/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLsizei levels,GLenum internalFormat,GLsizei width,GLsizei height,GLuint memory,GLuint64 offset)
PFNGLTEXSTORAGEMEM2DMULTISAMPLEEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLTEXSTORAGEMEM2DMULTISAMPLEEXTPROC) (GLenum target, GLsizei sampl/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLsizei samples,GLenum internalFormat,GLsizei width,GLsizei height,GLboolean fixedSampleLocations,GLuint memory,GLuint64 offset)
PFNGLTEXSTORAGEMEM3DEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLTEXSTORAGEMEM3DEXTPROC) (GLenum target, GLsizei levels, GLenum i/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLsizei levels,GLenum internalFormat,GLsizei width,GLsizei height,GLsizei depth,GLuint memory,GLuint64 offset)
PFNGLTEXSTORAGEMEM3DMULTISAMPLEEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLTEXSTORAGEMEM3DMULTISAMPLEEXTPROC) (GLenum target, GLsizei sampl/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLsizei samples,GLenum internalFormat,GLsizei width,GLsizei height,GLsizei depth,GLboolean fixedSampleLocations,GLuint memory,GLuint64 offset)
PFNGLTEXSTORAGESPARSEAMDPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLTEXSTORAGESPARSEAMDPROC) (GLenum target, GLenum internalFormat, /;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLenum internalFormat,GLsizei width,GLsizei height,GLsizei depth,GLsizei layers,GLbitfield flags)
PFNGLTEXSUBIMAGE1DEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLTEXSUBIMAGE1DEXTPROC) (GLenum target, GLint level, GLint xoffset/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLint level,GLint xoffset,GLsizei width,GLenum format,GLenum type,const void * pixels)
PFNGLTEXSUBIMAGE2DEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLTEXSUBIMAGE2DEXTPROC) (GLenum target, GLint level, GLint xoffset/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLint level,GLint xoffset,GLint yoffset,GLsizei width,GLsizei height,GLenum format,GLenum type,const void * pixels)
PFNGLTEXSUBIMAGE3DEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLTEXSUBIMAGE3DEXTPROC) (GLenum target, GLint level, GLint xoffset/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLint level,GLint xoffset,GLint yoffset,GLint zoffset,GLsizei width,GLsizei height,GLsizei depth,GLenum format,GLenum type,const void * pixels)
PFNGLTEXSUBIMAGE3DNVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLTEXSUBIMAGE3DNVPROC) (GLenum target, GLint level, GLint xoffset,/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLint level,GLint xoffset,GLint yoffset,GLint zoffset,GLsizei width,GLsizei height,GLsizei depth,GLenum format,GLenum type,const void * pixels)
PFNGLTEXSUBIMAGE3DOESPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLTEXSUBIMAGE3DOESPROC) (GLenum target, GLint level, GLint xoffset/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLint level,GLint xoffset,GLint yoffset,GLint zoffset,GLsizei width,GLsizei height,GLsizei depth,GLenum format,GLenum type,const void * pixels)
PFNGLTEXSUBIMAGE3DPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLTEXSUBIMAGE3DPROC) (GLenum target, GLint level, GLint xoffset, G/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLint level,GLint xoffset,GLint yoffset,GLint zoffset,GLsizei width,GLsizei height,GLsizei depth,GLenum format,GLenum type,const void * pixels)
PFNGLTEXSUBIMAGE4DSGISPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLTEXSUBIMAGE4DSGISPROC) (GLenum target, GLint level, GLint xoffse/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLint level,GLint xoffset,GLint yoffset,GLint zoffset,GLint woffset,GLsizei width,GLsizei height,GLsizei depth,GLsizei extent,GLenum format,GLenum type,const void * pixels)
PFNGLTEXTUREATTACHMEMORYNVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLTEXTUREATTACHMEMORYNVPROC) (GLuint texture, GLuint memory, GLuin/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint texture,GLuint memory,GLuint64 offset)
PFNGLTEXTUREBARRIERNVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLTEXTUREBARRIERNVPROC) (void);$/;"	t	typeref:typename:void (GLAPIENTRY *)(void)
PFNGLTEXTUREBARRIERPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLTEXTUREBARRIERPROC) (void);$/;"	t	typeref:typename:void (GLAPIENTRY *)(void)
PFNGLTEXTUREBUFFEREXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLTEXTUREBUFFEREXTPROC) (GLuint texture, GLenum target, GLenum int/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint texture,GLenum target,GLenum internalformat,GLuint buffer)
PFNGLTEXTUREBUFFERPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLTEXTUREBUFFERPROC) (GLuint texture, GLenum internalformat, GLuin/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint texture,GLenum internalformat,GLuint buffer)
PFNGLTEXTUREBUFFERRANGEEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLTEXTUREBUFFERRANGEEXTPROC) (GLuint texture, GLenum target, GLenu/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint texture,GLenum target,GLenum internalformat,GLuint buffer,GLintptr offset,GLsizeiptr size)
PFNGLTEXTUREBUFFERRANGEPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLTEXTUREBUFFERRANGEPROC) (GLuint texture, GLenum internalformat, /;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint texture,GLenum internalformat,GLuint buffer,GLintptr offset,GLsizeiptr size)
PFNGLTEXTUREFOGSGIXPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLTEXTUREFOGSGIXPROC) (GLenum pname);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum pname)
PFNGLTEXTUREFOVEATIONPARAMETERSQCOMPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLTEXTUREFOVEATIONPARAMETERSQCOMPROC) (GLuint texture, GLuint laye/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint texture,GLuint layer,GLuint focalPoint,GLfloat focalX,GLfloat focalY,GLfloat gainX,GLfloat gainY,GLfloat foveaArea)
PFNGLTEXTUREIMAGE1DEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLTEXTUREIMAGE1DEXTPROC) (GLuint texture, GLenum target, GLint lev/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint texture,GLenum target,GLint level,GLint internalformat,GLsizei width,GLint border,GLenum format,GLenum type,const void * pixels)
PFNGLTEXTUREIMAGE2DEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLTEXTUREIMAGE2DEXTPROC) (GLuint texture, GLenum target, GLint lev/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint texture,GLenum target,GLint level,GLint internalformat,GLsizei width,GLsizei height,GLint border,GLenum format,GLenum type,const void * pixels)
PFNGLTEXTUREIMAGE2DMULTISAMPLECOVERAGENVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLTEXTUREIMAGE2DMULTISAMPLECOVERAGENVPROC) (GLuint texture, GLenum/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint texture,GLenum target,GLsizei coverageSamples,GLsizei colorSamples,GLint internalFormat,GLsizei width,GLsizei height,GLboolean fixedSampleLocations)
PFNGLTEXTUREIMAGE2DMULTISAMPLENVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLTEXTUREIMAGE2DMULTISAMPLENVPROC) (GLuint texture, GLenum target,/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint texture,GLenum target,GLsizei samples,GLint internalFormat,GLsizei width,GLsizei height,GLboolean fixedSampleLocations)
PFNGLTEXTUREIMAGE3DEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLTEXTUREIMAGE3DEXTPROC) (GLuint texture, GLenum target, GLint lev/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint texture,GLenum target,GLint level,GLint internalformat,GLsizei width,GLsizei height,GLsizei depth,GLint border,GLenum format,GLenum type,const void * pixels)
PFNGLTEXTUREIMAGE3DMULTISAMPLECOVERAGENVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLTEXTUREIMAGE3DMULTISAMPLECOVERAGENVPROC) (GLuint texture, GLenum/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint texture,GLenum target,GLsizei coverageSamples,GLsizei colorSamples,GLint internalFormat,GLsizei width,GLsizei height,GLsizei depth,GLboolean fixedSampleLocations)
PFNGLTEXTUREIMAGE3DMULTISAMPLENVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLTEXTUREIMAGE3DMULTISAMPLENVPROC) (GLuint texture, GLenum target,/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint texture,GLenum target,GLsizei samples,GLint internalFormat,GLsizei width,GLsizei height,GLsizei depth,GLboolean fixedSampleLocations)
PFNGLTEXTURELIGHTEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLTEXTURELIGHTEXTPROC) (GLenum pname);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum pname)
PFNGLTEXTUREMATERIALEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLTEXTUREMATERIALEXTPROC) (GLenum face, GLenum mode);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum face,GLenum mode)
PFNGLTEXTURENORMALEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLTEXTURENORMALEXTPROC) (GLenum mode);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum mode)
PFNGLTEXTUREPAGECOMMITMENTEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLTEXTUREPAGECOMMITMENTEXTPROC) (GLuint texture, GLint level, GLin/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint texture,GLint level,GLint xoffset,GLint yoffset,GLint zoffset,GLsizei width,GLsizei height,GLsizei depth,GLboolean commit)
PFNGLTEXTUREPARAMETERFEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLTEXTUREPARAMETERFEXTPROC) (GLuint texture, GLenum target, GLenum/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint texture,GLenum target,GLenum pname,GLfloat param)
PFNGLTEXTUREPARAMETERFPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLTEXTUREPARAMETERFPROC) (GLuint texture, GLenum pname, GLfloat pa/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint texture,GLenum pname,GLfloat param)
PFNGLTEXTUREPARAMETERFVEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLTEXTUREPARAMETERFVEXTPROC) (GLuint texture, GLenum target, GLenu/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint texture,GLenum target,GLenum pname,const GLfloat * param)
PFNGLTEXTUREPARAMETERFVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLTEXTUREPARAMETERFVPROC) (GLuint texture, GLenum pname, const GLf/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint texture,GLenum pname,const GLfloat * param)
PFNGLTEXTUREPARAMETERIEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLTEXTUREPARAMETERIEXTPROC) (GLuint texture, GLenum target, GLenum/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint texture,GLenum target,GLenum pname,GLint param)
PFNGLTEXTUREPARAMETERIIVEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLTEXTUREPARAMETERIIVEXTPROC) (GLuint texture, GLenum target, GLen/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint texture,GLenum target,GLenum pname,const GLint * params)
PFNGLTEXTUREPARAMETERIIVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLTEXTUREPARAMETERIIVPROC) (GLuint texture, GLenum pname, const GL/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint texture,GLenum pname,const GLint * params)
PFNGLTEXTUREPARAMETERIPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLTEXTUREPARAMETERIPROC) (GLuint texture, GLenum pname, GLint para/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint texture,GLenum pname,GLint param)
PFNGLTEXTUREPARAMETERIUIVEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLTEXTUREPARAMETERIUIVEXTPROC) (GLuint texture, GLenum target, GLe/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint texture,GLenum target,GLenum pname,const GLuint * params)
PFNGLTEXTUREPARAMETERIUIVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLTEXTUREPARAMETERIUIVPROC) (GLuint texture, GLenum pname, const G/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint texture,GLenum pname,const GLuint * params)
PFNGLTEXTUREPARAMETERIVEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLTEXTUREPARAMETERIVEXTPROC) (GLuint texture, GLenum target, GLenu/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint texture,GLenum target,GLenum pname,const GLint * param)
PFNGLTEXTUREPARAMETERIVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLTEXTUREPARAMETERIVPROC) (GLuint texture, GLenum pname, const GLi/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint texture,GLenum pname,const GLint * param)
PFNGLTEXTURERANGEAPPLEPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLTEXTURERANGEAPPLEPROC) (GLenum target, GLsizei length, void *poi/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLsizei length,void * pointer)
PFNGLTEXTURERENDERBUFFEREXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLTEXTURERENDERBUFFEREXTPROC) (GLuint texture, GLenum target, GLui/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint texture,GLenum target,GLuint renderbuffer)
PFNGLTEXTURESTORAGE1DEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLTEXTURESTORAGE1DEXTPROC) (GLuint texture, GLenum target, GLsizei/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint texture,GLenum target,GLsizei levels,GLenum internalformat,GLsizei width)
PFNGLTEXTURESTORAGE1DPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLTEXTURESTORAGE1DPROC) (GLuint texture, GLsizei levels, GLenum in/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint texture,GLsizei levels,GLenum internalformat,GLsizei width)
PFNGLTEXTURESTORAGE2DEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLTEXTURESTORAGE2DEXTPROC) (GLuint texture, GLenum target, GLsizei/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint texture,GLenum target,GLsizei levels,GLenum internalformat,GLsizei width,GLsizei height)
PFNGLTEXTURESTORAGE2DMULTISAMPLEEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLTEXTURESTORAGE2DMULTISAMPLEEXTPROC) (GLuint texture, GLenum targ/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint texture,GLenum target,GLsizei samples,GLenum internalformat,GLsizei width,GLsizei height,GLboolean fixedsamplelocations)
PFNGLTEXTURESTORAGE2DMULTISAMPLEPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLTEXTURESTORAGE2DMULTISAMPLEPROC) (GLuint texture, GLsizei sample/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint texture,GLsizei samples,GLenum internalformat,GLsizei width,GLsizei height,GLboolean fixedsamplelocations)
PFNGLTEXTURESTORAGE2DPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLTEXTURESTORAGE2DPROC) (GLuint texture, GLsizei levels, GLenum in/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint texture,GLsizei levels,GLenum internalformat,GLsizei width,GLsizei height)
PFNGLTEXTURESTORAGE3DEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLTEXTURESTORAGE3DEXTPROC) (GLuint texture, GLenum target, GLsizei/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint texture,GLenum target,GLsizei levels,GLenum internalformat,GLsizei width,GLsizei height,GLsizei depth)
PFNGLTEXTURESTORAGE3DMULTISAMPLEEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLTEXTURESTORAGE3DMULTISAMPLEEXTPROC) (GLuint texture, GLenum targ/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint texture,GLenum target,GLsizei samples,GLenum internalformat,GLsizei width,GLsizei height,GLsizei depth,GLboolean fixedsamplelocations)
PFNGLTEXTURESTORAGE3DMULTISAMPLEPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLTEXTURESTORAGE3DMULTISAMPLEPROC) (GLuint texture, GLsizei sample/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint texture,GLsizei samples,GLenum internalformat,GLsizei width,GLsizei height,GLsizei depth,GLboolean fixedsamplelocations)
PFNGLTEXTURESTORAGE3DPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLTEXTURESTORAGE3DPROC) (GLuint texture, GLsizei levels, GLenum in/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint texture,GLsizei levels,GLenum internalformat,GLsizei width,GLsizei height,GLsizei depth)
PFNGLTEXTURESTORAGEMEM1DEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLTEXTURESTORAGEMEM1DEXTPROC) (GLuint texture, GLsizei levels, GLe/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint texture,GLsizei levels,GLenum internalFormat,GLsizei width,GLuint memory,GLuint64 offset)
PFNGLTEXTURESTORAGEMEM2DEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLTEXTURESTORAGEMEM2DEXTPROC) (GLuint texture, GLsizei levels, GLe/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint texture,GLsizei levels,GLenum internalFormat,GLsizei width,GLsizei height,GLuint memory,GLuint64 offset)
PFNGLTEXTURESTORAGEMEM2DMULTISAMPLEEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLTEXTURESTORAGEMEM2DMULTISAMPLEEXTPROC) (GLuint texture, GLsizei /;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint texture,GLsizei samples,GLenum internalFormat,GLsizei width,GLsizei height,GLboolean fixedSampleLocations,GLuint memory,GLuint64 offset)
PFNGLTEXTURESTORAGEMEM3DEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLTEXTURESTORAGEMEM3DEXTPROC) (GLuint texture, GLsizei levels, GLe/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint texture,GLsizei levels,GLenum internalFormat,GLsizei width,GLsizei height,GLsizei depth,GLuint memory,GLuint64 offset)
PFNGLTEXTURESTORAGEMEM3DMULTISAMPLEEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLTEXTURESTORAGEMEM3DMULTISAMPLEEXTPROC) (GLuint texture, GLsizei /;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint texture,GLsizei samples,GLenum internalFormat,GLsizei width,GLsizei height,GLsizei depth,GLboolean fixedSampleLocations,GLuint memory,GLuint64 offset)
PFNGLTEXTURESTORAGESPARSEAMDPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLTEXTURESTORAGESPARSEAMDPROC) (GLuint texture, GLenum target, GLe/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint texture,GLenum target,GLenum internalFormat,GLsizei width,GLsizei height,GLsizei depth,GLsizei layers,GLbitfield flags)
PFNGLTEXTURESUBIMAGE1DEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLTEXTURESUBIMAGE1DEXTPROC) (GLuint texture, GLenum target, GLint /;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint texture,GLenum target,GLint level,GLint xoffset,GLsizei width,GLenum format,GLenum type,const void * pixels)
PFNGLTEXTURESUBIMAGE1DPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLTEXTURESUBIMAGE1DPROC) (GLuint texture, GLint level, GLint xoffs/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint texture,GLint level,GLint xoffset,GLsizei width,GLenum format,GLenum type,const void * pixels)
PFNGLTEXTURESUBIMAGE2DEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLTEXTURESUBIMAGE2DEXTPROC) (GLuint texture, GLenum target, GLint /;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint texture,GLenum target,GLint level,GLint xoffset,GLint yoffset,GLsizei width,GLsizei height,GLenum format,GLenum type,const void * pixels)
PFNGLTEXTURESUBIMAGE2DPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLTEXTURESUBIMAGE2DPROC) (GLuint texture, GLint level, GLint xoffs/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint texture,GLint level,GLint xoffset,GLint yoffset,GLsizei width,GLsizei height,GLenum format,GLenum type,const void * pixels)
PFNGLTEXTURESUBIMAGE3DEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLTEXTURESUBIMAGE3DEXTPROC) (GLuint texture, GLenum target, GLint /;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint texture,GLenum target,GLint level,GLint xoffset,GLint yoffset,GLint zoffset,GLsizei width,GLsizei height,GLsizei depth,GLenum format,GLenum type,const void * pixels)
PFNGLTEXTURESUBIMAGE3DPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLTEXTURESUBIMAGE3DPROC) (GLuint texture, GLint level, GLint xoffs/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint texture,GLint level,GLint xoffset,GLint yoffset,GLint zoffset,GLsizei width,GLsizei height,GLsizei depth,GLenum format,GLenum type,const void * pixels)
PFNGLTEXTUREVIEWEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLTEXTUREVIEWEXTPROC) (GLuint texture, GLenum target, GLuint origt/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint texture,GLenum target,GLuint origtexture,GLenum internalformat,GLuint minlevel,GLuint numlevels,GLuint minlayer,GLuint numlayers)
PFNGLTEXTUREVIEWOESPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLTEXTUREVIEWOESPROC) (GLuint texture, GLenum target, GLuint origt/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint texture,GLenum target,GLuint origtexture,GLenum internalformat,GLuint minlevel,GLuint numlevels,GLuint minlayer,GLuint numlayers)
PFNGLTEXTUREVIEWPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLTEXTUREVIEWPROC) (GLuint texture, GLenum target, GLuint origtext/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint texture,GLenum target,GLuint origtexture,GLenum internalformat,GLuint minlevel,GLuint numlevels,GLuint minlayer,GLuint numlayers)
PFNGLTRACKMATRIXNVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLTRACKMATRIXNVPROC) (GLenum target, GLuint address, GLenum matrix/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum target,GLuint address,GLenum matrix,GLenum transform)
PFNGLTRANSFORMFEEDBACKATTRIBSNVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLTRANSFORMFEEDBACKATTRIBSNVPROC) (GLuint count, const GLint *attr/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint count,const GLint * attribs,GLenum bufferMode)
PFNGLTRANSFORMFEEDBACKBUFFERBASEPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLTRANSFORMFEEDBACKBUFFERBASEPROC) (GLuint xfb, GLuint index, GLui/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint xfb,GLuint index,GLuint buffer)
PFNGLTRANSFORMFEEDBACKBUFFERRANGEPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLTRANSFORMFEEDBACKBUFFERRANGEPROC) (GLuint xfb, GLuint index, GLu/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint xfb,GLuint index,GLuint buffer,GLintptr offset,GLsizeiptr size)
PFNGLTRANSFORMFEEDBACKVARYINGSEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLTRANSFORMFEEDBACKVARYINGSEXTPROC) (GLuint program, GLsizei count/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint program,GLsizei count,const GLchar * const * varyings,GLenum bufferMode)
PFNGLTRANSFORMFEEDBACKVARYINGSNVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLTRANSFORMFEEDBACKVARYINGSNVPROC) (GLuint program, GLsizei count,/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint program,GLsizei count,const GLint * locations,GLenum bufferMode)
PFNGLTRANSFORMFEEDBACKVARYINGSPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLTRANSFORMFEEDBACKVARYINGSPROC) (GLuint program, GLsizei count, c/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint program,GLsizei count,const GLchar * const * varyings,GLenum bufferMode)
PFNGLTRANSFORMPATHNVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLTRANSFORMPATHNVPROC) (GLuint resultPath, GLuint srcPath, GLenum /;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint resultPath,GLuint srcPath,GLenum transformType,const GLfloat * transformValues)
PFNGLTRANSLATEXPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLTRANSLATEXPROC) (GLfixed x, GLfixed y, GLfixed z);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLfixed x,GLfixed y,GLfixed z)
PFNGLUNIFORM1DPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLUNIFORM1DPROC) (GLint location, GLdouble x);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLint location,GLdouble x)
PFNGLUNIFORM1DVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLUNIFORM1DVPROC) (GLint location, GLsizei count, const GLdouble* /;"	t	typeref:typename:void (GLAPIENTRY *)(GLint location,GLsizei count,const GLdouble * value)
PFNGLUNIFORM1FARBPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLUNIFORM1FARBPROC) (GLint location, GLfloat v0);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLint location,GLfloat v0)
PFNGLUNIFORM1FPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLUNIFORM1FPROC) (GLint location, GLfloat v0);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLint location,GLfloat v0)
PFNGLUNIFORM1FVARBPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLUNIFORM1FVARBPROC) (GLint location, GLsizei count, const GLfloat/;"	t	typeref:typename:void (GLAPIENTRY *)(GLint location,GLsizei count,const GLfloat * value)
PFNGLUNIFORM1FVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLUNIFORM1FVPROC) (GLint location, GLsizei count, const GLfloat* v/;"	t	typeref:typename:void (GLAPIENTRY *)(GLint location,GLsizei count,const GLfloat * value)
PFNGLUNIFORM1I64ARBPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLUNIFORM1I64ARBPROC) (GLint location, GLint64 x);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLint location,GLint64 x)
PFNGLUNIFORM1I64NVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLUNIFORM1I64NVPROC) (GLint location, GLint64EXT x);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLint location,GLint64EXT x)
PFNGLUNIFORM1I64VARBPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLUNIFORM1I64VARBPROC) (GLint location, GLsizei count, const GLint/;"	t	typeref:typename:void (GLAPIENTRY *)(GLint location,GLsizei count,const GLint64 * value)
PFNGLUNIFORM1I64VNVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLUNIFORM1I64VNVPROC) (GLint location, GLsizei count, const GLint6/;"	t	typeref:typename:void (GLAPIENTRY *)(GLint location,GLsizei count,const GLint64EXT * value)
PFNGLUNIFORM1IARBPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLUNIFORM1IARBPROC) (GLint location, GLint v0);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLint location,GLint v0)
PFNGLUNIFORM1IPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLUNIFORM1IPROC) (GLint location, GLint v0);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLint location,GLint v0)
PFNGLUNIFORM1IVARBPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLUNIFORM1IVARBPROC) (GLint location, GLsizei count, const GLint* /;"	t	typeref:typename:void (GLAPIENTRY *)(GLint location,GLsizei count,const GLint * value)
PFNGLUNIFORM1IVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLUNIFORM1IVPROC) (GLint location, GLsizei count, const GLint* val/;"	t	typeref:typename:void (GLAPIENTRY *)(GLint location,GLsizei count,const GLint * value)
PFNGLUNIFORM1UI64ARBPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLUNIFORM1UI64ARBPROC) (GLint location, GLuint64 x);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLint location,GLuint64 x)
PFNGLUNIFORM1UI64NVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLUNIFORM1UI64NVPROC) (GLint location, GLuint64EXT x);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLint location,GLuint64EXT x)
PFNGLUNIFORM1UI64VARBPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLUNIFORM1UI64VARBPROC) (GLint location, GLsizei count, const GLui/;"	t	typeref:typename:void (GLAPIENTRY *)(GLint location,GLsizei count,const GLuint64 * value)
PFNGLUNIFORM1UI64VNVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLUNIFORM1UI64VNVPROC) (GLint location, GLsizei count, const GLuin/;"	t	typeref:typename:void (GLAPIENTRY *)(GLint location,GLsizei count,const GLuint64EXT * value)
PFNGLUNIFORM1UIEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLUNIFORM1UIEXTPROC) (GLint location, GLuint v0);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLint location,GLuint v0)
PFNGLUNIFORM1UIPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLUNIFORM1UIPROC) (GLint location, GLuint v0);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLint location,GLuint v0)
PFNGLUNIFORM1UIVEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLUNIFORM1UIVEXTPROC) (GLint location, GLsizei count, const GLuint/;"	t	typeref:typename:void (GLAPIENTRY *)(GLint location,GLsizei count,const GLuint * value)
PFNGLUNIFORM1UIVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLUNIFORM1UIVPROC) (GLint location, GLsizei count, const GLuint* v/;"	t	typeref:typename:void (GLAPIENTRY *)(GLint location,GLsizei count,const GLuint * value)
PFNGLUNIFORM2DPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLUNIFORM2DPROC) (GLint location, GLdouble x, GLdouble y);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLint location,GLdouble x,GLdouble y)
PFNGLUNIFORM2DVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLUNIFORM2DVPROC) (GLint location, GLsizei count, const GLdouble* /;"	t	typeref:typename:void (GLAPIENTRY *)(GLint location,GLsizei count,const GLdouble * value)
PFNGLUNIFORM2FARBPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLUNIFORM2FARBPROC) (GLint location, GLfloat v0, GLfloat v1);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLint location,GLfloat v0,GLfloat v1)
PFNGLUNIFORM2FPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLUNIFORM2FPROC) (GLint location, GLfloat v0, GLfloat v1);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLint location,GLfloat v0,GLfloat v1)
PFNGLUNIFORM2FVARBPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLUNIFORM2FVARBPROC) (GLint location, GLsizei count, const GLfloat/;"	t	typeref:typename:void (GLAPIENTRY *)(GLint location,GLsizei count,const GLfloat * value)
PFNGLUNIFORM2FVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLUNIFORM2FVPROC) (GLint location, GLsizei count, const GLfloat* v/;"	t	typeref:typename:void (GLAPIENTRY *)(GLint location,GLsizei count,const GLfloat * value)
PFNGLUNIFORM2I64ARBPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLUNIFORM2I64ARBPROC) (GLint location, GLint64 x, GLint64 y);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLint location,GLint64 x,GLint64 y)
PFNGLUNIFORM2I64NVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLUNIFORM2I64NVPROC) (GLint location, GLint64EXT x, GLint64EXT y);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLint location,GLint64EXT x,GLint64EXT y)
PFNGLUNIFORM2I64VARBPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLUNIFORM2I64VARBPROC) (GLint location, GLsizei count, const GLint/;"	t	typeref:typename:void (GLAPIENTRY *)(GLint location,GLsizei count,const GLint64 * value)
PFNGLUNIFORM2I64VNVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLUNIFORM2I64VNVPROC) (GLint location, GLsizei count, const GLint6/;"	t	typeref:typename:void (GLAPIENTRY *)(GLint location,GLsizei count,const GLint64EXT * value)
PFNGLUNIFORM2IARBPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLUNIFORM2IARBPROC) (GLint location, GLint v0, GLint v1);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLint location,GLint v0,GLint v1)
PFNGLUNIFORM2IPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLUNIFORM2IPROC) (GLint location, GLint v0, GLint v1);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLint location,GLint v0,GLint v1)
PFNGLUNIFORM2IVARBPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLUNIFORM2IVARBPROC) (GLint location, GLsizei count, const GLint* /;"	t	typeref:typename:void (GLAPIENTRY *)(GLint location,GLsizei count,const GLint * value)
PFNGLUNIFORM2IVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLUNIFORM2IVPROC) (GLint location, GLsizei count, const GLint* val/;"	t	typeref:typename:void (GLAPIENTRY *)(GLint location,GLsizei count,const GLint * value)
PFNGLUNIFORM2UI64ARBPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLUNIFORM2UI64ARBPROC) (GLint location, GLuint64 x, GLuint64 y);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLint location,GLuint64 x,GLuint64 y)
PFNGLUNIFORM2UI64NVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLUNIFORM2UI64NVPROC) (GLint location, GLuint64EXT x, GLuint64EXT /;"	t	typeref:typename:void (GLAPIENTRY *)(GLint location,GLuint64EXT x,GLuint64EXT y)
PFNGLUNIFORM2UI64VARBPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLUNIFORM2UI64VARBPROC) (GLint location, GLsizei count, const GLui/;"	t	typeref:typename:void (GLAPIENTRY *)(GLint location,GLsizei count,const GLuint64 * value)
PFNGLUNIFORM2UI64VNVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLUNIFORM2UI64VNVPROC) (GLint location, GLsizei count, const GLuin/;"	t	typeref:typename:void (GLAPIENTRY *)(GLint location,GLsizei count,const GLuint64EXT * value)
PFNGLUNIFORM2UIEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLUNIFORM2UIEXTPROC) (GLint location, GLuint v0, GLuint v1);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLint location,GLuint v0,GLuint v1)
PFNGLUNIFORM2UIPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLUNIFORM2UIPROC) (GLint location, GLuint v0, GLuint v1);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLint location,GLuint v0,GLuint v1)
PFNGLUNIFORM2UIVEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLUNIFORM2UIVEXTPROC) (GLint location, GLsizei count, const GLuint/;"	t	typeref:typename:void (GLAPIENTRY *)(GLint location,GLsizei count,const GLuint * value)
PFNGLUNIFORM2UIVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLUNIFORM2UIVPROC) (GLint location, GLsizei count, const GLuint* v/;"	t	typeref:typename:void (GLAPIENTRY *)(GLint location,GLsizei count,const GLuint * value)
PFNGLUNIFORM3DPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLUNIFORM3DPROC) (GLint location, GLdouble x, GLdouble y, GLdouble/;"	t	typeref:typename:void (GLAPIENTRY *)(GLint location,GLdouble x,GLdouble y,GLdouble z)
PFNGLUNIFORM3DVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLUNIFORM3DVPROC) (GLint location, GLsizei count, const GLdouble* /;"	t	typeref:typename:void (GLAPIENTRY *)(GLint location,GLsizei count,const GLdouble * value)
PFNGLUNIFORM3FARBPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLUNIFORM3FARBPROC) (GLint location, GLfloat v0, GLfloat v1, GLflo/;"	t	typeref:typename:void (GLAPIENTRY *)(GLint location,GLfloat v0,GLfloat v1,GLfloat v2)
PFNGLUNIFORM3FPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLUNIFORM3FPROC) (GLint location, GLfloat v0, GLfloat v1, GLfloat /;"	t	typeref:typename:void (GLAPIENTRY *)(GLint location,GLfloat v0,GLfloat v1,GLfloat v2)
PFNGLUNIFORM3FVARBPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLUNIFORM3FVARBPROC) (GLint location, GLsizei count, const GLfloat/;"	t	typeref:typename:void (GLAPIENTRY *)(GLint location,GLsizei count,const GLfloat * value)
PFNGLUNIFORM3FVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLUNIFORM3FVPROC) (GLint location, GLsizei count, const GLfloat* v/;"	t	typeref:typename:void (GLAPIENTRY *)(GLint location,GLsizei count,const GLfloat * value)
PFNGLUNIFORM3I64ARBPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLUNIFORM3I64ARBPROC) (GLint location, GLint64 x, GLint64 y, GLint/;"	t	typeref:typename:void (GLAPIENTRY *)(GLint location,GLint64 x,GLint64 y,GLint64 z)
PFNGLUNIFORM3I64NVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLUNIFORM3I64NVPROC) (GLint location, GLint64EXT x, GLint64EXT y, /;"	t	typeref:typename:void (GLAPIENTRY *)(GLint location,GLint64EXT x,GLint64EXT y,GLint64EXT z)
PFNGLUNIFORM3I64VARBPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLUNIFORM3I64VARBPROC) (GLint location, GLsizei count, const GLint/;"	t	typeref:typename:void (GLAPIENTRY *)(GLint location,GLsizei count,const GLint64 * value)
PFNGLUNIFORM3I64VNVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLUNIFORM3I64VNVPROC) (GLint location, GLsizei count, const GLint6/;"	t	typeref:typename:void (GLAPIENTRY *)(GLint location,GLsizei count,const GLint64EXT * value)
PFNGLUNIFORM3IARBPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLUNIFORM3IARBPROC) (GLint location, GLint v0, GLint v1, GLint v2)/;"	t	typeref:typename:void (GLAPIENTRY *)(GLint location,GLint v0,GLint v1,GLint v2)
PFNGLUNIFORM3IPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLUNIFORM3IPROC) (GLint location, GLint v0, GLint v1, GLint v2);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLint location,GLint v0,GLint v1,GLint v2)
PFNGLUNIFORM3IVARBPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLUNIFORM3IVARBPROC) (GLint location, GLsizei count, const GLint* /;"	t	typeref:typename:void (GLAPIENTRY *)(GLint location,GLsizei count,const GLint * value)
PFNGLUNIFORM3IVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLUNIFORM3IVPROC) (GLint location, GLsizei count, const GLint* val/;"	t	typeref:typename:void (GLAPIENTRY *)(GLint location,GLsizei count,const GLint * value)
PFNGLUNIFORM3UI64ARBPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLUNIFORM3UI64ARBPROC) (GLint location, GLuint64 x, GLuint64 y, GL/;"	t	typeref:typename:void (GLAPIENTRY *)(GLint location,GLuint64 x,GLuint64 y,GLuint64 z)
PFNGLUNIFORM3UI64NVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLUNIFORM3UI64NVPROC) (GLint location, GLuint64EXT x, GLuint64EXT /;"	t	typeref:typename:void (GLAPIENTRY *)(GLint location,GLuint64EXT x,GLuint64EXT y,GLuint64EXT z)
PFNGLUNIFORM3UI64VARBPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLUNIFORM3UI64VARBPROC) (GLint location, GLsizei count, const GLui/;"	t	typeref:typename:void (GLAPIENTRY *)(GLint location,GLsizei count,const GLuint64 * value)
PFNGLUNIFORM3UI64VNVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLUNIFORM3UI64VNVPROC) (GLint location, GLsizei count, const GLuin/;"	t	typeref:typename:void (GLAPIENTRY *)(GLint location,GLsizei count,const GLuint64EXT * value)
PFNGLUNIFORM3UIEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLUNIFORM3UIEXTPROC) (GLint location, GLuint v0, GLuint v1, GLuint/;"	t	typeref:typename:void (GLAPIENTRY *)(GLint location,GLuint v0,GLuint v1,GLuint v2)
PFNGLUNIFORM3UIPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLUNIFORM3UIPROC) (GLint location, GLuint v0, GLuint v1, GLuint v2/;"	t	typeref:typename:void (GLAPIENTRY *)(GLint location,GLuint v0,GLuint v1,GLuint v2)
PFNGLUNIFORM3UIVEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLUNIFORM3UIVEXTPROC) (GLint location, GLsizei count, const GLuint/;"	t	typeref:typename:void (GLAPIENTRY *)(GLint location,GLsizei count,const GLuint * value)
PFNGLUNIFORM3UIVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLUNIFORM3UIVPROC) (GLint location, GLsizei count, const GLuint* v/;"	t	typeref:typename:void (GLAPIENTRY *)(GLint location,GLsizei count,const GLuint * value)
PFNGLUNIFORM4DPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLUNIFORM4DPROC) (GLint location, GLdouble x, GLdouble y, GLdouble/;"	t	typeref:typename:void (GLAPIENTRY *)(GLint location,GLdouble x,GLdouble y,GLdouble z,GLdouble w)
PFNGLUNIFORM4DVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLUNIFORM4DVPROC) (GLint location, GLsizei count, const GLdouble* /;"	t	typeref:typename:void (GLAPIENTRY *)(GLint location,GLsizei count,const GLdouble * value)
PFNGLUNIFORM4FARBPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLUNIFORM4FARBPROC) (GLint location, GLfloat v0, GLfloat v1, GLflo/;"	t	typeref:typename:void (GLAPIENTRY *)(GLint location,GLfloat v0,GLfloat v1,GLfloat v2,GLfloat v3)
PFNGLUNIFORM4FPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLUNIFORM4FPROC) (GLint location, GLfloat v0, GLfloat v1, GLfloat /;"	t	typeref:typename:void (GLAPIENTRY *)(GLint location,GLfloat v0,GLfloat v1,GLfloat v2,GLfloat v3)
PFNGLUNIFORM4FVARBPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLUNIFORM4FVARBPROC) (GLint location, GLsizei count, const GLfloat/;"	t	typeref:typename:void (GLAPIENTRY *)(GLint location,GLsizei count,const GLfloat * value)
PFNGLUNIFORM4FVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLUNIFORM4FVPROC) (GLint location, GLsizei count, const GLfloat* v/;"	t	typeref:typename:void (GLAPIENTRY *)(GLint location,GLsizei count,const GLfloat * value)
PFNGLUNIFORM4I64ARBPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLUNIFORM4I64ARBPROC) (GLint location, GLint64 x, GLint64 y, GLint/;"	t	typeref:typename:void (GLAPIENTRY *)(GLint location,GLint64 x,GLint64 y,GLint64 z,GLint64 w)
PFNGLUNIFORM4I64NVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLUNIFORM4I64NVPROC) (GLint location, GLint64EXT x, GLint64EXT y, /;"	t	typeref:typename:void (GLAPIENTRY *)(GLint location,GLint64EXT x,GLint64EXT y,GLint64EXT z,GLint64EXT w)
PFNGLUNIFORM4I64VARBPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLUNIFORM4I64VARBPROC) (GLint location, GLsizei count, const GLint/;"	t	typeref:typename:void (GLAPIENTRY *)(GLint location,GLsizei count,const GLint64 * value)
PFNGLUNIFORM4I64VNVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLUNIFORM4I64VNVPROC) (GLint location, GLsizei count, const GLint6/;"	t	typeref:typename:void (GLAPIENTRY *)(GLint location,GLsizei count,const GLint64EXT * value)
PFNGLUNIFORM4IARBPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLUNIFORM4IARBPROC) (GLint location, GLint v0, GLint v1, GLint v2,/;"	t	typeref:typename:void (GLAPIENTRY *)(GLint location,GLint v0,GLint v1,GLint v2,GLint v3)
PFNGLUNIFORM4IPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLUNIFORM4IPROC) (GLint location, GLint v0, GLint v1, GLint v2, GL/;"	t	typeref:typename:void (GLAPIENTRY *)(GLint location,GLint v0,GLint v1,GLint v2,GLint v3)
PFNGLUNIFORM4IVARBPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLUNIFORM4IVARBPROC) (GLint location, GLsizei count, const GLint* /;"	t	typeref:typename:void (GLAPIENTRY *)(GLint location,GLsizei count,const GLint * value)
PFNGLUNIFORM4IVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLUNIFORM4IVPROC) (GLint location, GLsizei count, const GLint* val/;"	t	typeref:typename:void (GLAPIENTRY *)(GLint location,GLsizei count,const GLint * value)
PFNGLUNIFORM4UI64ARBPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLUNIFORM4UI64ARBPROC) (GLint location, GLuint64 x, GLuint64 y, GL/;"	t	typeref:typename:void (GLAPIENTRY *)(GLint location,GLuint64 x,GLuint64 y,GLuint64 z,GLuint64 w)
PFNGLUNIFORM4UI64NVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLUNIFORM4UI64NVPROC) (GLint location, GLuint64EXT x, GLuint64EXT /;"	t	typeref:typename:void (GLAPIENTRY *)(GLint location,GLuint64EXT x,GLuint64EXT y,GLuint64EXT z,GLuint64EXT w)
PFNGLUNIFORM4UI64VARBPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLUNIFORM4UI64VARBPROC) (GLint location, GLsizei count, const GLui/;"	t	typeref:typename:void (GLAPIENTRY *)(GLint location,GLsizei count,const GLuint64 * value)
PFNGLUNIFORM4UI64VNVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLUNIFORM4UI64VNVPROC) (GLint location, GLsizei count, const GLuin/;"	t	typeref:typename:void (GLAPIENTRY *)(GLint location,GLsizei count,const GLuint64EXT * value)
PFNGLUNIFORM4UIEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLUNIFORM4UIEXTPROC) (GLint location, GLuint v0, GLuint v1, GLuint/;"	t	typeref:typename:void (GLAPIENTRY *)(GLint location,GLuint v0,GLuint v1,GLuint v2,GLuint v3)
PFNGLUNIFORM4UIPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLUNIFORM4UIPROC) (GLint location, GLuint v0, GLuint v1, GLuint v2/;"	t	typeref:typename:void (GLAPIENTRY *)(GLint location,GLuint v0,GLuint v1,GLuint v2,GLuint v3)
PFNGLUNIFORM4UIVEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLUNIFORM4UIVEXTPROC) (GLint location, GLsizei count, const GLuint/;"	t	typeref:typename:void (GLAPIENTRY *)(GLint location,GLsizei count,const GLuint * value)
PFNGLUNIFORM4UIVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLUNIFORM4UIVPROC) (GLint location, GLsizei count, const GLuint* v/;"	t	typeref:typename:void (GLAPIENTRY *)(GLint location,GLsizei count,const GLuint * value)
PFNGLUNIFORMBLOCKBINDINGPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLUNIFORMBLOCKBINDINGPROC) (GLuint program, GLuint uniformBlockInd/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint program,GLuint uniformBlockIndex,GLuint uniformBlockBinding)
PFNGLUNIFORMBUFFEREXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLUNIFORMBUFFEREXTPROC) (GLuint program, GLint location, GLuint bu/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint program,GLint location,GLuint buffer)
PFNGLUNIFORMHANDLEUI64ARBPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLUNIFORMHANDLEUI64ARBPROC) (GLint location, GLuint64 value);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLint location,GLuint64 value)
PFNGLUNIFORMHANDLEUI64IMGPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLUNIFORMHANDLEUI64IMGPROC) (GLint location, GLuint64 value);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLint location,GLuint64 value)
PFNGLUNIFORMHANDLEUI64NVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLUNIFORMHANDLEUI64NVPROC) (GLint location, GLuint64 value);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLint location,GLuint64 value)
PFNGLUNIFORMHANDLEUI64VARBPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLUNIFORMHANDLEUI64VARBPROC) (GLint location, GLsizei count, const/;"	t	typeref:typename:void (GLAPIENTRY *)(GLint location,GLsizei count,const GLuint64 * value)
PFNGLUNIFORMHANDLEUI64VIMGPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLUNIFORMHANDLEUI64VIMGPROC) (GLint location, GLsizei count, const/;"	t	typeref:typename:void (GLAPIENTRY *)(GLint location,GLsizei count,const GLuint64 * value)
PFNGLUNIFORMHANDLEUI64VNVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLUNIFORMHANDLEUI64VNVPROC) (GLint location, GLsizei count, const /;"	t	typeref:typename:void (GLAPIENTRY *)(GLint location,GLsizei count,const GLuint64 * value)
PFNGLUNIFORMMATRIX2DVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLUNIFORMMATRIX2DVPROC) (GLint location, GLsizei count, GLboolean /;"	t	typeref:typename:void (GLAPIENTRY *)(GLint location,GLsizei count,GLboolean transpose,const GLdouble * value)
PFNGLUNIFORMMATRIX2FVARBPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLUNIFORMMATRIX2FVARBPROC) (GLint location, GLsizei count, GLboole/;"	t	typeref:typename:void (GLAPIENTRY *)(GLint location,GLsizei count,GLboolean transpose,const GLfloat * value)
PFNGLUNIFORMMATRIX2FVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLUNIFORMMATRIX2FVPROC) (GLint location, GLsizei count, GLboolean /;"	t	typeref:typename:void (GLAPIENTRY *)(GLint location,GLsizei count,GLboolean transpose,const GLfloat * value)
PFNGLUNIFORMMATRIX2X3DVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLUNIFORMMATRIX2X3DVPROC) (GLint location, GLsizei count, GLboolea/;"	t	typeref:typename:void (GLAPIENTRY *)(GLint location,GLsizei count,GLboolean transpose,const GLdouble * value)
PFNGLUNIFORMMATRIX2X3FVNVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLUNIFORMMATRIX2X3FVNVPROC) (GLint location, GLsizei count, GLbool/;"	t	typeref:typename:void (GLAPIENTRY *)(GLint location,GLsizei count,GLboolean transpose,const GLfloat * value)
PFNGLUNIFORMMATRIX2X3FVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLUNIFORMMATRIX2X3FVPROC) (GLint location, GLsizei count, GLboolea/;"	t	typeref:typename:void (GLAPIENTRY *)(GLint location,GLsizei count,GLboolean transpose,const GLfloat * value)
PFNGLUNIFORMMATRIX2X4DVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLUNIFORMMATRIX2X4DVPROC) (GLint location, GLsizei count, GLboolea/;"	t	typeref:typename:void (GLAPIENTRY *)(GLint location,GLsizei count,GLboolean transpose,const GLdouble * value)
PFNGLUNIFORMMATRIX2X4FVNVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLUNIFORMMATRIX2X4FVNVPROC) (GLint location, GLsizei count, GLbool/;"	t	typeref:typename:void (GLAPIENTRY *)(GLint location,GLsizei count,GLboolean transpose,const GLfloat * value)
PFNGLUNIFORMMATRIX2X4FVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLUNIFORMMATRIX2X4FVPROC) (GLint location, GLsizei count, GLboolea/;"	t	typeref:typename:void (GLAPIENTRY *)(GLint location,GLsizei count,GLboolean transpose,const GLfloat * value)
PFNGLUNIFORMMATRIX3DVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLUNIFORMMATRIX3DVPROC) (GLint location, GLsizei count, GLboolean /;"	t	typeref:typename:void (GLAPIENTRY *)(GLint location,GLsizei count,GLboolean transpose,const GLdouble * value)
PFNGLUNIFORMMATRIX3FVARBPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLUNIFORMMATRIX3FVARBPROC) (GLint location, GLsizei count, GLboole/;"	t	typeref:typename:void (GLAPIENTRY *)(GLint location,GLsizei count,GLboolean transpose,const GLfloat * value)
PFNGLUNIFORMMATRIX3FVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLUNIFORMMATRIX3FVPROC) (GLint location, GLsizei count, GLboolean /;"	t	typeref:typename:void (GLAPIENTRY *)(GLint location,GLsizei count,GLboolean transpose,const GLfloat * value)
PFNGLUNIFORMMATRIX3X2DVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLUNIFORMMATRIX3X2DVPROC) (GLint location, GLsizei count, GLboolea/;"	t	typeref:typename:void (GLAPIENTRY *)(GLint location,GLsizei count,GLboolean transpose,const GLdouble * value)
PFNGLUNIFORMMATRIX3X2FVNVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLUNIFORMMATRIX3X2FVNVPROC) (GLint location, GLsizei count, GLbool/;"	t	typeref:typename:void (GLAPIENTRY *)(GLint location,GLsizei count,GLboolean transpose,const GLfloat * value)
PFNGLUNIFORMMATRIX3X2FVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLUNIFORMMATRIX3X2FVPROC) (GLint location, GLsizei count, GLboolea/;"	t	typeref:typename:void (GLAPIENTRY *)(GLint location,GLsizei count,GLboolean transpose,const GLfloat * value)
PFNGLUNIFORMMATRIX3X4DVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLUNIFORMMATRIX3X4DVPROC) (GLint location, GLsizei count, GLboolea/;"	t	typeref:typename:void (GLAPIENTRY *)(GLint location,GLsizei count,GLboolean transpose,const GLdouble * value)
PFNGLUNIFORMMATRIX3X4FVNVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLUNIFORMMATRIX3X4FVNVPROC) (GLint location, GLsizei count, GLbool/;"	t	typeref:typename:void (GLAPIENTRY *)(GLint location,GLsizei count,GLboolean transpose,const GLfloat * value)
PFNGLUNIFORMMATRIX3X4FVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLUNIFORMMATRIX3X4FVPROC) (GLint location, GLsizei count, GLboolea/;"	t	typeref:typename:void (GLAPIENTRY *)(GLint location,GLsizei count,GLboolean transpose,const GLfloat * value)
PFNGLUNIFORMMATRIX4DVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLUNIFORMMATRIX4DVPROC) (GLint location, GLsizei count, GLboolean /;"	t	typeref:typename:void (GLAPIENTRY *)(GLint location,GLsizei count,GLboolean transpose,const GLdouble * value)
PFNGLUNIFORMMATRIX4FVARBPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLUNIFORMMATRIX4FVARBPROC) (GLint location, GLsizei count, GLboole/;"	t	typeref:typename:void (GLAPIENTRY *)(GLint location,GLsizei count,GLboolean transpose,const GLfloat * value)
PFNGLUNIFORMMATRIX4FVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLUNIFORMMATRIX4FVPROC) (GLint location, GLsizei count, GLboolean /;"	t	typeref:typename:void (GLAPIENTRY *)(GLint location,GLsizei count,GLboolean transpose,const GLfloat * value)
PFNGLUNIFORMMATRIX4X2DVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLUNIFORMMATRIX4X2DVPROC) (GLint location, GLsizei count, GLboolea/;"	t	typeref:typename:void (GLAPIENTRY *)(GLint location,GLsizei count,GLboolean transpose,const GLdouble * value)
PFNGLUNIFORMMATRIX4X2FVNVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLUNIFORMMATRIX4X2FVNVPROC) (GLint location, GLsizei count, GLbool/;"	t	typeref:typename:void (GLAPIENTRY *)(GLint location,GLsizei count,GLboolean transpose,const GLfloat * value)
PFNGLUNIFORMMATRIX4X2FVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLUNIFORMMATRIX4X2FVPROC) (GLint location, GLsizei count, GLboolea/;"	t	typeref:typename:void (GLAPIENTRY *)(GLint location,GLsizei count,GLboolean transpose,const GLfloat * value)
PFNGLUNIFORMMATRIX4X3DVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLUNIFORMMATRIX4X3DVPROC) (GLint location, GLsizei count, GLboolea/;"	t	typeref:typename:void (GLAPIENTRY *)(GLint location,GLsizei count,GLboolean transpose,const GLdouble * value)
PFNGLUNIFORMMATRIX4X3FVNVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLUNIFORMMATRIX4X3FVNVPROC) (GLint location, GLsizei count, GLbool/;"	t	typeref:typename:void (GLAPIENTRY *)(GLint location,GLsizei count,GLboolean transpose,const GLfloat * value)
PFNGLUNIFORMMATRIX4X3FVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLUNIFORMMATRIX4X3FVPROC) (GLint location, GLsizei count, GLboolea/;"	t	typeref:typename:void (GLAPIENTRY *)(GLint location,GLsizei count,GLboolean transpose,const GLfloat * value)
PFNGLUNIFORMSUBROUTINESUIVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLUNIFORMSUBROUTINESUIVPROC) (GLenum shadertype, GLsizei count, co/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum shadertype,GLsizei count,const GLuint * indices)
PFNGLUNIFORMUI64NVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLUNIFORMUI64NVPROC) (GLint location, GLuint64EXT value);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLint location,GLuint64EXT value)
PFNGLUNIFORMUI64VNVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLUNIFORMUI64VNVPROC) (GLint location, GLsizei count, const GLuint/;"	t	typeref:typename:void (GLAPIENTRY *)(GLint location,GLsizei count,const GLuint64EXT * value)
PFNGLUNLOCKARRAYSEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLUNLOCKARRAYSEXTPROC) (void);$/;"	t	typeref:typename:void (GLAPIENTRY *)(void)
PFNGLUNMAPBUFFERARBPROC	./GL/glew.h	/^typedef GLboolean (GLAPIENTRY * PFNGLUNMAPBUFFERARBPROC) (GLenum target);$/;"	t	typeref:typename:GLboolean (GLAPIENTRY *)(GLenum target)
PFNGLUNMAPBUFFEROESPROC	./GL/glew.h	/^typedef GLboolean (GLAPIENTRY * PFNGLUNMAPBUFFEROESPROC) (GLenum target);$/;"	t	typeref:typename:GLboolean (GLAPIENTRY *)(GLenum target)
PFNGLUNMAPBUFFERPROC	./GL/glew.h	/^typedef GLboolean (GLAPIENTRY * PFNGLUNMAPBUFFERPROC) (GLenum target);$/;"	t	typeref:typename:GLboolean (GLAPIENTRY *)(GLenum target)
PFNGLUNMAPNAMEDBUFFEREXTPROC	./GL/glew.h	/^typedef GLboolean (GLAPIENTRY * PFNGLUNMAPNAMEDBUFFEREXTPROC) (GLuint buffer);$/;"	t	typeref:typename:GLboolean (GLAPIENTRY *)(GLuint buffer)
PFNGLUNMAPNAMEDBUFFERPROC	./GL/glew.h	/^typedef GLboolean (GLAPIENTRY * PFNGLUNMAPNAMEDBUFFERPROC) (GLuint buffer);$/;"	t	typeref:typename:GLboolean (GLAPIENTRY *)(GLuint buffer)
PFNGLUNMAPOBJECTBUFFERATIPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLUNMAPOBJECTBUFFERATIPROC) (GLuint buffer);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint buffer)
PFNGLUNMAPTEXTURE2DINTELPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLUNMAPTEXTURE2DINTELPROC) (GLuint texture, GLint level);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint texture,GLint level)
PFNGLUPDATEOBJECTBUFFERATIPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLUPDATEOBJECTBUFFERATIPROC) (GLuint buffer, GLuint offset, GLsize/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint buffer,GLuint offset,GLsizei size,const void * pointer,GLenum preserve)
PFNGLUPLOADGPUMASKNVXPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLUPLOADGPUMASKNVXPROC) (GLbitfield mask);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLbitfield mask)
PFNGLUSEPROGRAMOBJECTARBPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLUSEPROGRAMOBJECTARBPROC) (GLhandleARB programObj);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLhandleARB programObj)
PFNGLUSEPROGRAMPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLUSEPROGRAMPROC) (GLuint program);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint program)
PFNGLUSEPROGRAMSTAGESPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLUSEPROGRAMSTAGESPROC) (GLuint pipeline, GLbitfield stages, GLuin/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint pipeline,GLbitfield stages,GLuint program)
PFNGLUSESHADERPROGRAMEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLUSESHADERPROGRAMEXTPROC) (GLenum type, GLuint program);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum type,GLuint program)
PFNGLVALIDATEPROGRAMARBPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLVALIDATEPROGRAMARBPROC) (GLhandleARB programObj);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLhandleARB programObj)
PFNGLVALIDATEPROGRAMPIPELINEPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLVALIDATEPROGRAMPIPELINEPROC) (GLuint pipeline);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint pipeline)
PFNGLVALIDATEPROGRAMPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLVALIDATEPROGRAMPROC) (GLuint program);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint program)
PFNGLVARIANTARRAYOBJECTATIPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLVARIANTARRAYOBJECTATIPROC) (GLuint id, GLenum type, GLsizei stri/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint id,GLenum type,GLsizei stride,GLuint buffer,GLuint offset)
PFNGLVARIANTBVEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLVARIANTBVEXTPROC) (GLuint id, GLbyte *addr);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint id,GLbyte * addr)
PFNGLVARIANTDVEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLVARIANTDVEXTPROC) (GLuint id, GLdouble *addr);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint id,GLdouble * addr)
PFNGLVARIANTFVEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLVARIANTFVEXTPROC) (GLuint id, GLfloat *addr);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint id,GLfloat * addr)
PFNGLVARIANTIVEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLVARIANTIVEXTPROC) (GLuint id, GLint *addr);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint id,GLint * addr)
PFNGLVARIANTPOINTEREXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLVARIANTPOINTEREXTPROC) (GLuint id, GLenum type, GLuint stride, v/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint id,GLenum type,GLuint stride,void * addr)
PFNGLVARIANTSVEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLVARIANTSVEXTPROC) (GLuint id, GLshort *addr);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint id,GLshort * addr)
PFNGLVARIANTUBVEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLVARIANTUBVEXTPROC) (GLuint id, GLubyte *addr);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint id,GLubyte * addr)
PFNGLVARIANTUIVEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLVARIANTUIVEXTPROC) (GLuint id, GLuint *addr);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint id,GLuint * addr)
PFNGLVARIANTUSVEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLVARIANTUSVEXTPROC) (GLuint id, GLushort *addr);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint id,GLushort * addr)
PFNGLVDPAUFININVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLVDPAUFININVPROC) (void);$/;"	t	typeref:typename:void (GLAPIENTRY *)(void)
PFNGLVDPAUGETSURFACEIVNVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLVDPAUGETSURFACEIVNVPROC) (GLvdpauSurfaceNV surface, GLenum pname/;"	t	typeref:typename:void (GLAPIENTRY *)(GLvdpauSurfaceNV surface,GLenum pname,GLsizei bufSize,GLsizei * length,GLint * values)
PFNGLVDPAUINITNVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLVDPAUINITNVPROC) (const void* vdpDevice, const void*getProcAddre/;"	t	typeref:typename:void (GLAPIENTRY *)(const void * vdpDevice,const void * getProcAddress)
PFNGLVDPAUISSURFACENVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLVDPAUISSURFACENVPROC) (GLvdpauSurfaceNV surface);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLvdpauSurfaceNV surface)
PFNGLVDPAUMAPSURFACESNVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLVDPAUMAPSURFACESNVPROC) (GLsizei numSurfaces, const GLvdpauSurfa/;"	t	typeref:typename:void (GLAPIENTRY *)(GLsizei numSurfaces,const GLvdpauSurfaceNV * surfaces)
PFNGLVDPAUREGISTEROUTPUTSURFACENVPROC	./GL/glew.h	/^typedef GLvdpauSurfaceNV (GLAPIENTRY * PFNGLVDPAUREGISTEROUTPUTSURFACENVPROC) (const void* vdpSu/;"	t	typeref:typename:GLvdpauSurfaceNV (GLAPIENTRY *)(const void * vdpSurface,GLenum target,GLsizei numTextureNames,const GLuint * textureNames)
PFNGLVDPAUREGISTERVIDEOSURFACENVPROC	./GL/glew.h	/^typedef GLvdpauSurfaceNV (GLAPIENTRY * PFNGLVDPAUREGISTERVIDEOSURFACENVPROC) (const void* vdpSur/;"	t	typeref:typename:GLvdpauSurfaceNV (GLAPIENTRY *)(const void * vdpSurface,GLenum target,GLsizei numTextureNames,const GLuint * textureNames)
PFNGLVDPAUREGISTERVIDEOSURFACEWITHPICTURESTRUCTURENVPROC	./GL/glew.h	/^typedef GLvdpauSurfaceNV (GLAPIENTRY * PFNGLVDPAUREGISTERVIDEOSURFACEWITHPICTURESTRUCTURENVPROC)/;"	t	typeref:typename:GLvdpauSurfaceNV (GLAPIENTRY *)(const void * vdpSurface,GLenum target,GLsizei numTextureNames,const GLuint * textureNames,GLboolean isFrameStructure)
PFNGLVDPAUSURFACEACCESSNVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLVDPAUSURFACEACCESSNVPROC) (GLvdpauSurfaceNV surface, GLenum acce/;"	t	typeref:typename:void (GLAPIENTRY *)(GLvdpauSurfaceNV surface,GLenum access)
PFNGLVDPAUUNMAPSURFACESNVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLVDPAUUNMAPSURFACESNVPROC) (GLsizei numSurface, const GLvdpauSurf/;"	t	typeref:typename:void (GLAPIENTRY *)(GLsizei numSurface,const GLvdpauSurfaceNV * surfaces)
PFNGLVDPAUUNREGISTERSURFACENVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLVDPAUUNREGISTERSURFACENVPROC) (GLvdpauSurfaceNV surface);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLvdpauSurfaceNV surface)
PFNGLVECTOROPERATIONSGIXPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLVECTOROPERATIONSGIXPROC) (GLenum operation);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum operation)
PFNGLVERTEX2HNVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEX2HNVPROC) (GLhalf x, GLhalf y);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLhalf x,GLhalf y)
PFNGLVERTEX2HVNVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEX2HVNVPROC) (const GLhalf* v);$/;"	t	typeref:typename:void (GLAPIENTRY *)(const GLhalf * v)
PFNGLVERTEX3HNVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEX3HNVPROC) (GLhalf x, GLhalf y, GLhalf z);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLhalf x,GLhalf y,GLhalf z)
PFNGLVERTEX3HVNVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEX3HVNVPROC) (const GLhalf* v);$/;"	t	typeref:typename:void (GLAPIENTRY *)(const GLhalf * v)
PFNGLVERTEX4HNVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEX4HNVPROC) (GLhalf x, GLhalf y, GLhalf z, GLhalf w);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLhalf x,GLhalf y,GLhalf z,GLhalf w)
PFNGLVERTEX4HVNVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEX4HVNVPROC) (const GLhalf* v);$/;"	t	typeref:typename:void (GLAPIENTRY *)(const GLhalf * v)
PFNGLVERTEXARRAYATTRIBBINDINGPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXARRAYATTRIBBINDINGPROC) (GLuint vaobj, GLuint attribindex,/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint vaobj,GLuint attribindex,GLuint bindingindex)
PFNGLVERTEXARRAYATTRIBFORMATPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXARRAYATTRIBFORMATPROC) (GLuint vaobj, GLuint attribindex, /;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint vaobj,GLuint attribindex,GLint size,GLenum type,GLboolean normalized,GLuint relativeoffset)
PFNGLVERTEXARRAYATTRIBIFORMATPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXARRAYATTRIBIFORMATPROC) (GLuint vaobj, GLuint attribindex,/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint vaobj,GLuint attribindex,GLint size,GLenum type,GLuint relativeoffset)
PFNGLVERTEXARRAYATTRIBLFORMATPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXARRAYATTRIBLFORMATPROC) (GLuint vaobj, GLuint attribindex,/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint vaobj,GLuint attribindex,GLint size,GLenum type,GLuint relativeoffset)
PFNGLVERTEXARRAYBINDINGDIVISORPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXARRAYBINDINGDIVISORPROC) (GLuint vaobj, GLuint bindinginde/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint vaobj,GLuint bindingindex,GLuint divisor)
PFNGLVERTEXARRAYBINDVERTEXBUFFEREXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXARRAYBINDVERTEXBUFFEREXTPROC) (GLuint vaobj, GLuint bindin/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint vaobj,GLuint bindingindex,GLuint buffer,GLintptr offset,GLsizei stride)
PFNGLVERTEXARRAYCOLOROFFSETEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXARRAYCOLOROFFSETEXTPROC) (GLuint vaobj, GLuint buffer, GLi/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint vaobj,GLuint buffer,GLint size,GLenum type,GLsizei stride,GLintptr offset)
PFNGLVERTEXARRAYEDGEFLAGOFFSETEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXARRAYEDGEFLAGOFFSETEXTPROC) (GLuint vaobj, GLuint buffer, /;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint vaobj,GLuint buffer,GLsizei stride,GLintptr offset)
PFNGLVERTEXARRAYELEMENTBUFFERPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXARRAYELEMENTBUFFERPROC) (GLuint vaobj, GLuint buffer);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint vaobj,GLuint buffer)
PFNGLVERTEXARRAYFOGCOORDOFFSETEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXARRAYFOGCOORDOFFSETEXTPROC) (GLuint vaobj, GLuint buffer, /;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint vaobj,GLuint buffer,GLenum type,GLsizei stride,GLintptr offset)
PFNGLVERTEXARRAYINDEXOFFSETEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXARRAYINDEXOFFSETEXTPROC) (GLuint vaobj, GLuint buffer, GLe/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint vaobj,GLuint buffer,GLenum type,GLsizei stride,GLintptr offset)
PFNGLVERTEXARRAYMULTITEXCOORDOFFSETEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXARRAYMULTITEXCOORDOFFSETEXTPROC) (GLuint vaobj, GLuint buf/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint vaobj,GLuint buffer,GLenum texunit,GLint size,GLenum type,GLsizei stride,GLintptr offset)
PFNGLVERTEXARRAYNORMALOFFSETEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXARRAYNORMALOFFSETEXTPROC) (GLuint vaobj, GLuint buffer, GL/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint vaobj,GLuint buffer,GLenum type,GLsizei stride,GLintptr offset)
PFNGLVERTEXARRAYPARAMETERIAPPLEPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXARRAYPARAMETERIAPPLEPROC) (GLenum pname, GLint param);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum pname,GLint param)
PFNGLVERTEXARRAYRANGEAPPLEPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXARRAYRANGEAPPLEPROC) (GLsizei length, void *pointer);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLsizei length,void * pointer)
PFNGLVERTEXARRAYRANGENVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXARRAYRANGENVPROC) (GLsizei length, void *pointer);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLsizei length,void * pointer)
PFNGLVERTEXARRAYSECONDARYCOLOROFFSETEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXARRAYSECONDARYCOLOROFFSETEXTPROC) (GLuint vaobj, GLuint bu/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint vaobj,GLuint buffer,GLint size,GLenum type,GLsizei stride,GLintptr offset)
PFNGLVERTEXARRAYTEXCOORDOFFSETEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXARRAYTEXCOORDOFFSETEXTPROC) (GLuint vaobj, GLuint buffer, /;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint vaobj,GLuint buffer,GLint size,GLenum type,GLsizei stride,GLintptr offset)
PFNGLVERTEXARRAYVERTEXATTRIBBINDINGEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXARRAYVERTEXATTRIBBINDINGEXTPROC) (GLuint vaobj, GLuint att/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint vaobj,GLuint attribindex,GLuint bindingindex)
PFNGLVERTEXARRAYVERTEXATTRIBDIVISOREXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXARRAYVERTEXATTRIBDIVISOREXTPROC) (GLuint vaobj, GLuint ind/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint vaobj,GLuint index,GLuint divisor)
PFNGLVERTEXARRAYVERTEXATTRIBFORMATEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXARRAYVERTEXATTRIBFORMATEXTPROC) (GLuint vaobj, GLuint attr/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint vaobj,GLuint attribindex,GLint size,GLenum type,GLboolean normalized,GLuint relativeoffset)
PFNGLVERTEXARRAYVERTEXATTRIBIFORMATEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXARRAYVERTEXATTRIBIFORMATEXTPROC) (GLuint vaobj, GLuint att/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint vaobj,GLuint attribindex,GLint size,GLenum type,GLuint relativeoffset)
PFNGLVERTEXARRAYVERTEXATTRIBIOFFSETEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXARRAYVERTEXATTRIBIOFFSETEXTPROC) (GLuint vaobj, GLuint buf/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint vaobj,GLuint buffer,GLuint index,GLint size,GLenum type,GLsizei stride,GLintptr offset)
PFNGLVERTEXARRAYVERTEXATTRIBLFORMATEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXARRAYVERTEXATTRIBLFORMATEXTPROC) (GLuint vaobj, GLuint att/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint vaobj,GLuint attribindex,GLint size,GLenum type,GLuint relativeoffset)
PFNGLVERTEXARRAYVERTEXATTRIBLOFFSETEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXARRAYVERTEXATTRIBLOFFSETEXTPROC) (GLuint vaobj, GLuint buf/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint vaobj,GLuint buffer,GLuint index,GLint size,GLenum type,GLsizei stride,GLintptr offset)
PFNGLVERTEXARRAYVERTEXATTRIBOFFSETEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXARRAYVERTEXATTRIBOFFSETEXTPROC) (GLuint vaobj, GLuint buff/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint vaobj,GLuint buffer,GLuint index,GLint size,GLenum type,GLboolean normalized,GLsizei stride,GLintptr offset)
PFNGLVERTEXARRAYVERTEXBINDINGDIVISOREXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXARRAYVERTEXBINDINGDIVISOREXTPROC) (GLuint vaobj, GLuint bi/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint vaobj,GLuint bindingindex,GLuint divisor)
PFNGLVERTEXARRAYVERTEXBUFFERPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXARRAYVERTEXBUFFERPROC) (GLuint vaobj, GLuint bindingindex,/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint vaobj,GLuint bindingindex,GLuint buffer,GLintptr offset,GLsizei stride)
PFNGLVERTEXARRAYVERTEXBUFFERSPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXARRAYVERTEXBUFFERSPROC) (GLuint vaobj, GLuint first, GLsiz/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint vaobj,GLuint first,GLsizei count,const GLuint * buffers,const GLintptr * offsets,const GLsizei * strides)
PFNGLVERTEXARRAYVERTEXOFFSETEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXARRAYVERTEXOFFSETEXTPROC) (GLuint vaobj, GLuint buffer, GL/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint vaobj,GLuint buffer,GLint size,GLenum type,GLsizei stride,GLintptr offset)
PFNGLVERTEXATTRIB1DARBPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXATTRIB1DARBPROC) (GLuint index, GLdouble x);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,GLdouble x)
PFNGLVERTEXATTRIB1DNVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXATTRIB1DNVPROC) (GLuint index, GLdouble x);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,GLdouble x)
PFNGLVERTEXATTRIB1DPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXATTRIB1DPROC) (GLuint index, GLdouble x);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,GLdouble x)
PFNGLVERTEXATTRIB1DVARBPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXATTRIB1DVARBPROC) (GLuint index, const GLdouble* v);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,const GLdouble * v)
PFNGLVERTEXATTRIB1DVNVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXATTRIB1DVNVPROC) (GLuint index, const GLdouble* v);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,const GLdouble * v)
PFNGLVERTEXATTRIB1DVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXATTRIB1DVPROC) (GLuint index, const GLdouble* v);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,const GLdouble * v)
PFNGLVERTEXATTRIB1FARBPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXATTRIB1FARBPROC) (GLuint index, GLfloat x);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,GLfloat x)
PFNGLVERTEXATTRIB1FNVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXATTRIB1FNVPROC) (GLuint index, GLfloat x);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,GLfloat x)
PFNGLVERTEXATTRIB1FPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXATTRIB1FPROC) (GLuint index, GLfloat x);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,GLfloat x)
PFNGLVERTEXATTRIB1FVARBPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXATTRIB1FVARBPROC) (GLuint index, const GLfloat* v);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,const GLfloat * v)
PFNGLVERTEXATTRIB1FVNVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXATTRIB1FVNVPROC) (GLuint index, const GLfloat* v);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,const GLfloat * v)
PFNGLVERTEXATTRIB1FVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXATTRIB1FVPROC) (GLuint index, const GLfloat* v);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,const GLfloat * v)
PFNGLVERTEXATTRIB1HNVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXATTRIB1HNVPROC) (GLuint index, GLhalf x);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,GLhalf x)
PFNGLVERTEXATTRIB1HVNVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXATTRIB1HVNVPROC) (GLuint index, const GLhalf* v);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,const GLhalf * v)
PFNGLVERTEXATTRIB1SARBPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXATTRIB1SARBPROC) (GLuint index, GLshort x);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,GLshort x)
PFNGLVERTEXATTRIB1SNVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXATTRIB1SNVPROC) (GLuint index, GLshort x);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,GLshort x)
PFNGLVERTEXATTRIB1SPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXATTRIB1SPROC) (GLuint index, GLshort x);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,GLshort x)
PFNGLVERTEXATTRIB1SVARBPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXATTRIB1SVARBPROC) (GLuint index, const GLshort* v);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,const GLshort * v)
PFNGLVERTEXATTRIB1SVNVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXATTRIB1SVNVPROC) (GLuint index, const GLshort* v);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,const GLshort * v)
PFNGLVERTEXATTRIB1SVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXATTRIB1SVPROC) (GLuint index, const GLshort* v);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,const GLshort * v)
PFNGLVERTEXATTRIB2DARBPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXATTRIB2DARBPROC) (GLuint index, GLdouble x, GLdouble y);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,GLdouble x,GLdouble y)
PFNGLVERTEXATTRIB2DNVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXATTRIB2DNVPROC) (GLuint index, GLdouble x, GLdouble y);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,GLdouble x,GLdouble y)
PFNGLVERTEXATTRIB2DPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXATTRIB2DPROC) (GLuint index, GLdouble x, GLdouble y);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,GLdouble x,GLdouble y)
PFNGLVERTEXATTRIB2DVARBPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXATTRIB2DVARBPROC) (GLuint index, const GLdouble* v);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,const GLdouble * v)
PFNGLVERTEXATTRIB2DVNVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXATTRIB2DVNVPROC) (GLuint index, const GLdouble* v);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,const GLdouble * v)
PFNGLVERTEXATTRIB2DVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXATTRIB2DVPROC) (GLuint index, const GLdouble* v);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,const GLdouble * v)
PFNGLVERTEXATTRIB2FARBPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXATTRIB2FARBPROC) (GLuint index, GLfloat x, GLfloat y);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,GLfloat x,GLfloat y)
PFNGLVERTEXATTRIB2FNVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXATTRIB2FNVPROC) (GLuint index, GLfloat x, GLfloat y);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,GLfloat x,GLfloat y)
PFNGLVERTEXATTRIB2FPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXATTRIB2FPROC) (GLuint index, GLfloat x, GLfloat y);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,GLfloat x,GLfloat y)
PFNGLVERTEXATTRIB2FVARBPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXATTRIB2FVARBPROC) (GLuint index, const GLfloat* v);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,const GLfloat * v)
PFNGLVERTEXATTRIB2FVNVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXATTRIB2FVNVPROC) (GLuint index, const GLfloat* v);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,const GLfloat * v)
PFNGLVERTEXATTRIB2FVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXATTRIB2FVPROC) (GLuint index, const GLfloat* v);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,const GLfloat * v)
PFNGLVERTEXATTRIB2HNVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXATTRIB2HNVPROC) (GLuint index, GLhalf x, GLhalf y);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,GLhalf x,GLhalf y)
PFNGLVERTEXATTRIB2HVNVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXATTRIB2HVNVPROC) (GLuint index, const GLhalf* v);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,const GLhalf * v)
PFNGLVERTEXATTRIB2SARBPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXATTRIB2SARBPROC) (GLuint index, GLshort x, GLshort y);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,GLshort x,GLshort y)
PFNGLVERTEXATTRIB2SNVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXATTRIB2SNVPROC) (GLuint index, GLshort x, GLshort y);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,GLshort x,GLshort y)
PFNGLVERTEXATTRIB2SPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXATTRIB2SPROC) (GLuint index, GLshort x, GLshort y);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,GLshort x,GLshort y)
PFNGLVERTEXATTRIB2SVARBPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXATTRIB2SVARBPROC) (GLuint index, const GLshort* v);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,const GLshort * v)
PFNGLVERTEXATTRIB2SVNVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXATTRIB2SVNVPROC) (GLuint index, const GLshort* v);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,const GLshort * v)
PFNGLVERTEXATTRIB2SVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXATTRIB2SVPROC) (GLuint index, const GLshort* v);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,const GLshort * v)
PFNGLVERTEXATTRIB3DARBPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXATTRIB3DARBPROC) (GLuint index, GLdouble x, GLdouble y, GL/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,GLdouble x,GLdouble y,GLdouble z)
PFNGLVERTEXATTRIB3DNVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXATTRIB3DNVPROC) (GLuint index, GLdouble x, GLdouble y, GLd/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,GLdouble x,GLdouble y,GLdouble z)
PFNGLVERTEXATTRIB3DPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXATTRIB3DPROC) (GLuint index, GLdouble x, GLdouble y, GLdou/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,GLdouble x,GLdouble y,GLdouble z)
PFNGLVERTEXATTRIB3DVARBPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXATTRIB3DVARBPROC) (GLuint index, const GLdouble* v);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,const GLdouble * v)
PFNGLVERTEXATTRIB3DVNVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXATTRIB3DVNVPROC) (GLuint index, const GLdouble* v);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,const GLdouble * v)
PFNGLVERTEXATTRIB3DVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXATTRIB3DVPROC) (GLuint index, const GLdouble* v);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,const GLdouble * v)
PFNGLVERTEXATTRIB3FARBPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXATTRIB3FARBPROC) (GLuint index, GLfloat x, GLfloat y, GLfl/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,GLfloat x,GLfloat y,GLfloat z)
PFNGLVERTEXATTRIB3FNVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXATTRIB3FNVPROC) (GLuint index, GLfloat x, GLfloat y, GLflo/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,GLfloat x,GLfloat y,GLfloat z)
PFNGLVERTEXATTRIB3FPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXATTRIB3FPROC) (GLuint index, GLfloat x, GLfloat y, GLfloat/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,GLfloat x,GLfloat y,GLfloat z)
PFNGLVERTEXATTRIB3FVARBPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXATTRIB3FVARBPROC) (GLuint index, const GLfloat* v);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,const GLfloat * v)
PFNGLVERTEXATTRIB3FVNVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXATTRIB3FVNVPROC) (GLuint index, const GLfloat* v);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,const GLfloat * v)
PFNGLVERTEXATTRIB3FVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXATTRIB3FVPROC) (GLuint index, const GLfloat* v);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,const GLfloat * v)
PFNGLVERTEXATTRIB3HNVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXATTRIB3HNVPROC) (GLuint index, GLhalf x, GLhalf y, GLhalf /;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,GLhalf x,GLhalf y,GLhalf z)
PFNGLVERTEXATTRIB3HVNVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXATTRIB3HVNVPROC) (GLuint index, const GLhalf* v);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,const GLhalf * v)
PFNGLVERTEXATTRIB3SARBPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXATTRIB3SARBPROC) (GLuint index, GLshort x, GLshort y, GLsh/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,GLshort x,GLshort y,GLshort z)
PFNGLVERTEXATTRIB3SNVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXATTRIB3SNVPROC) (GLuint index, GLshort x, GLshort y, GLsho/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,GLshort x,GLshort y,GLshort z)
PFNGLVERTEXATTRIB3SPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXATTRIB3SPROC) (GLuint index, GLshort x, GLshort y, GLshort/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,GLshort x,GLshort y,GLshort z)
PFNGLVERTEXATTRIB3SVARBPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXATTRIB3SVARBPROC) (GLuint index, const GLshort* v);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,const GLshort * v)
PFNGLVERTEXATTRIB3SVNVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXATTRIB3SVNVPROC) (GLuint index, const GLshort* v);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,const GLshort * v)
PFNGLVERTEXATTRIB3SVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXATTRIB3SVPROC) (GLuint index, const GLshort* v);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,const GLshort * v)
PFNGLVERTEXATTRIB4BVARBPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXATTRIB4BVARBPROC) (GLuint index, const GLbyte* v);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,const GLbyte * v)
PFNGLVERTEXATTRIB4BVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXATTRIB4BVPROC) (GLuint index, const GLbyte* v);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,const GLbyte * v)
PFNGLVERTEXATTRIB4DARBPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXATTRIB4DARBPROC) (GLuint index, GLdouble x, GLdouble y, GL/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,GLdouble x,GLdouble y,GLdouble z,GLdouble w)
PFNGLVERTEXATTRIB4DNVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXATTRIB4DNVPROC) (GLuint index, GLdouble x, GLdouble y, GLd/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,GLdouble x,GLdouble y,GLdouble z,GLdouble w)
PFNGLVERTEXATTRIB4DPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXATTRIB4DPROC) (GLuint index, GLdouble x, GLdouble y, GLdou/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,GLdouble x,GLdouble y,GLdouble z,GLdouble w)
PFNGLVERTEXATTRIB4DVARBPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXATTRIB4DVARBPROC) (GLuint index, const GLdouble* v);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,const GLdouble * v)
PFNGLVERTEXATTRIB4DVNVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXATTRIB4DVNVPROC) (GLuint index, const GLdouble* v);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,const GLdouble * v)
PFNGLVERTEXATTRIB4DVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXATTRIB4DVPROC) (GLuint index, const GLdouble* v);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,const GLdouble * v)
PFNGLVERTEXATTRIB4FARBPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXATTRIB4FARBPROC) (GLuint index, GLfloat x, GLfloat y, GLfl/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,GLfloat x,GLfloat y,GLfloat z,GLfloat w)
PFNGLVERTEXATTRIB4FNVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXATTRIB4FNVPROC) (GLuint index, GLfloat x, GLfloat y, GLflo/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,GLfloat x,GLfloat y,GLfloat z,GLfloat w)
PFNGLVERTEXATTRIB4FPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXATTRIB4FPROC) (GLuint index, GLfloat x, GLfloat y, GLfloat/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,GLfloat x,GLfloat y,GLfloat z,GLfloat w)
PFNGLVERTEXATTRIB4FVARBPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXATTRIB4FVARBPROC) (GLuint index, const GLfloat* v);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,const GLfloat * v)
PFNGLVERTEXATTRIB4FVNVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXATTRIB4FVNVPROC) (GLuint index, const GLfloat* v);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,const GLfloat * v)
PFNGLVERTEXATTRIB4FVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXATTRIB4FVPROC) (GLuint index, const GLfloat* v);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,const GLfloat * v)
PFNGLVERTEXATTRIB4HNVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXATTRIB4HNVPROC) (GLuint index, GLhalf x, GLhalf y, GLhalf /;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,GLhalf x,GLhalf y,GLhalf z,GLhalf w)
PFNGLVERTEXATTRIB4HVNVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXATTRIB4HVNVPROC) (GLuint index, const GLhalf* v);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,const GLhalf * v)
PFNGLVERTEXATTRIB4IVARBPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXATTRIB4IVARBPROC) (GLuint index, const GLint* v);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,const GLint * v)
PFNGLVERTEXATTRIB4IVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXATTRIB4IVPROC) (GLuint index, const GLint* v);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,const GLint * v)
PFNGLVERTEXATTRIB4NBVARBPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXATTRIB4NBVARBPROC) (GLuint index, const GLbyte* v);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,const GLbyte * v)
PFNGLVERTEXATTRIB4NBVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXATTRIB4NBVPROC) (GLuint index, const GLbyte* v);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,const GLbyte * v)
PFNGLVERTEXATTRIB4NIVARBPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXATTRIB4NIVARBPROC) (GLuint index, const GLint* v);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,const GLint * v)
PFNGLVERTEXATTRIB4NIVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXATTRIB4NIVPROC) (GLuint index, const GLint* v);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,const GLint * v)
PFNGLVERTEXATTRIB4NSVARBPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXATTRIB4NSVARBPROC) (GLuint index, const GLshort* v);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,const GLshort * v)
PFNGLVERTEXATTRIB4NSVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXATTRIB4NSVPROC) (GLuint index, const GLshort* v);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,const GLshort * v)
PFNGLVERTEXATTRIB4NUBARBPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXATTRIB4NUBARBPROC) (GLuint index, GLubyte x, GLubyte y, GL/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,GLubyte x,GLubyte y,GLubyte z,GLubyte w)
PFNGLVERTEXATTRIB4NUBPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXATTRIB4NUBPROC) (GLuint index, GLubyte x, GLubyte y, GLuby/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,GLubyte x,GLubyte y,GLubyte z,GLubyte w)
PFNGLVERTEXATTRIB4NUBVARBPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXATTRIB4NUBVARBPROC) (GLuint index, const GLubyte* v);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,const GLubyte * v)
PFNGLVERTEXATTRIB4NUBVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXATTRIB4NUBVPROC) (GLuint index, const GLubyte* v);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,const GLubyte * v)
PFNGLVERTEXATTRIB4NUIVARBPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXATTRIB4NUIVARBPROC) (GLuint index, const GLuint* v);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,const GLuint * v)
PFNGLVERTEXATTRIB4NUIVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXATTRIB4NUIVPROC) (GLuint index, const GLuint* v);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,const GLuint * v)
PFNGLVERTEXATTRIB4NUSVARBPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXATTRIB4NUSVARBPROC) (GLuint index, const GLushort* v);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,const GLushort * v)
PFNGLVERTEXATTRIB4NUSVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXATTRIB4NUSVPROC) (GLuint index, const GLushort* v);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,const GLushort * v)
PFNGLVERTEXATTRIB4SARBPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXATTRIB4SARBPROC) (GLuint index, GLshort x, GLshort y, GLsh/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,GLshort x,GLshort y,GLshort z,GLshort w)
PFNGLVERTEXATTRIB4SNVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXATTRIB4SNVPROC) (GLuint index, GLshort x, GLshort y, GLsho/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,GLshort x,GLshort y,GLshort z,GLshort w)
PFNGLVERTEXATTRIB4SPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXATTRIB4SPROC) (GLuint index, GLshort x, GLshort y, GLshort/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,GLshort x,GLshort y,GLshort z,GLshort w)
PFNGLVERTEXATTRIB4SVARBPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXATTRIB4SVARBPROC) (GLuint index, const GLshort* v);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,const GLshort * v)
PFNGLVERTEXATTRIB4SVNVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXATTRIB4SVNVPROC) (GLuint index, const GLshort* v);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,const GLshort * v)
PFNGLVERTEXATTRIB4SVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXATTRIB4SVPROC) (GLuint index, const GLshort* v);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,const GLshort * v)
PFNGLVERTEXATTRIB4UBNVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXATTRIB4UBNVPROC) (GLuint index, GLubyte x, GLubyte y, GLub/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,GLubyte x,GLubyte y,GLubyte z,GLubyte w)
PFNGLVERTEXATTRIB4UBVARBPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXATTRIB4UBVARBPROC) (GLuint index, const GLubyte* v);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,const GLubyte * v)
PFNGLVERTEXATTRIB4UBVNVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXATTRIB4UBVNVPROC) (GLuint index, const GLubyte* v);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,const GLubyte * v)
PFNGLVERTEXATTRIB4UBVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXATTRIB4UBVPROC) (GLuint index, const GLubyte* v);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,const GLubyte * v)
PFNGLVERTEXATTRIB4UIVARBPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXATTRIB4UIVARBPROC) (GLuint index, const GLuint* v);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,const GLuint * v)
PFNGLVERTEXATTRIB4UIVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXATTRIB4UIVPROC) (GLuint index, const GLuint* v);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,const GLuint * v)
PFNGLVERTEXATTRIB4USVARBPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXATTRIB4USVARBPROC) (GLuint index, const GLushort* v);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,const GLushort * v)
PFNGLVERTEXATTRIB4USVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXATTRIB4USVPROC) (GLuint index, const GLushort* v);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,const GLushort * v)
PFNGLVERTEXATTRIBARRAYOBJECTATIPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXATTRIBARRAYOBJECTATIPROC) (GLuint index, GLint size, GLenu/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,GLint size,GLenum type,GLboolean normalized,GLsizei stride,GLuint buffer,GLuint offset)
PFNGLVERTEXATTRIBBINDINGPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXATTRIBBINDINGPROC) (GLuint attribindex, GLuint bindinginde/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint attribindex,GLuint bindingindex)
PFNGLVERTEXATTRIBDIVISORANGLEPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXATTRIBDIVISORANGLEPROC) (GLuint index, GLuint divisor);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,GLuint divisor)
PFNGLVERTEXATTRIBDIVISORARBPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXATTRIBDIVISORARBPROC) (GLuint index, GLuint divisor);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,GLuint divisor)
PFNGLVERTEXATTRIBDIVISOREXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXATTRIBDIVISOREXTPROC) (GLuint index, GLuint divisor);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,GLuint divisor)
PFNGLVERTEXATTRIBDIVISORNVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXATTRIBDIVISORNVPROC) (GLuint index, GLuint divisor);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,GLuint divisor)
PFNGLVERTEXATTRIBDIVISORPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXATTRIBDIVISORPROC) (GLuint index, GLuint divisor);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,GLuint divisor)
PFNGLVERTEXATTRIBFORMATNVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXATTRIBFORMATNVPROC) (GLuint index, GLint size, GLenum type/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,GLint size,GLenum type,GLboolean normalized,GLsizei stride)
PFNGLVERTEXATTRIBFORMATPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXATTRIBFORMATPROC) (GLuint attribindex, GLint size, GLenum /;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint attribindex,GLint size,GLenum type,GLboolean normalized,GLuint relativeoffset)
PFNGLVERTEXATTRIBI1IEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXATTRIBI1IEXTPROC) (GLuint index, GLint x);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,GLint x)
PFNGLVERTEXATTRIBI1IPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXATTRIBI1IPROC) (GLuint index, GLint v0);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,GLint v0)
PFNGLVERTEXATTRIBI1IVEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXATTRIBI1IVEXTPROC) (GLuint index, const GLint *v);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,const GLint * v)
PFNGLVERTEXATTRIBI1IVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXATTRIBI1IVPROC) (GLuint index, const GLint* v0);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,const GLint * v0)
PFNGLVERTEXATTRIBI1UIEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXATTRIBI1UIEXTPROC) (GLuint index, GLuint x);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,GLuint x)
PFNGLVERTEXATTRIBI1UIPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXATTRIBI1UIPROC) (GLuint index, GLuint v0);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,GLuint v0)
PFNGLVERTEXATTRIBI1UIVEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXATTRIBI1UIVEXTPROC) (GLuint index, const GLuint *v);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,const GLuint * v)
PFNGLVERTEXATTRIBI1UIVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXATTRIBI1UIVPROC) (GLuint index, const GLuint* v0);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,const GLuint * v0)
PFNGLVERTEXATTRIBI2IEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXATTRIBI2IEXTPROC) (GLuint index, GLint x, GLint y);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,GLint x,GLint y)
PFNGLVERTEXATTRIBI2IPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXATTRIBI2IPROC) (GLuint index, GLint v0, GLint v1);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,GLint v0,GLint v1)
PFNGLVERTEXATTRIBI2IVEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXATTRIBI2IVEXTPROC) (GLuint index, const GLint *v);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,const GLint * v)
PFNGLVERTEXATTRIBI2IVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXATTRIBI2IVPROC) (GLuint index, const GLint* v0);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,const GLint * v0)
PFNGLVERTEXATTRIBI2UIEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXATTRIBI2UIEXTPROC) (GLuint index, GLuint x, GLuint y);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,GLuint x,GLuint y)
PFNGLVERTEXATTRIBI2UIPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXATTRIBI2UIPROC) (GLuint index, GLuint v0, GLuint v1);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,GLuint v0,GLuint v1)
PFNGLVERTEXATTRIBI2UIVEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXATTRIBI2UIVEXTPROC) (GLuint index, const GLuint *v);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,const GLuint * v)
PFNGLVERTEXATTRIBI2UIVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXATTRIBI2UIVPROC) (GLuint index, const GLuint* v0);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,const GLuint * v0)
PFNGLVERTEXATTRIBI3IEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXATTRIBI3IEXTPROC) (GLuint index, GLint x, GLint y, GLint z/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,GLint x,GLint y,GLint z)
PFNGLVERTEXATTRIBI3IPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXATTRIBI3IPROC) (GLuint index, GLint v0, GLint v1, GLint v2/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,GLint v0,GLint v1,GLint v2)
PFNGLVERTEXATTRIBI3IVEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXATTRIBI3IVEXTPROC) (GLuint index, const GLint *v);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,const GLint * v)
PFNGLVERTEXATTRIBI3IVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXATTRIBI3IVPROC) (GLuint index, const GLint* v0);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,const GLint * v0)
PFNGLVERTEXATTRIBI3UIEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXATTRIBI3UIEXTPROC) (GLuint index, GLuint x, GLuint y, GLui/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,GLuint x,GLuint y,GLuint z)
PFNGLVERTEXATTRIBI3UIPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXATTRIBI3UIPROC) (GLuint index, GLuint v0, GLuint v1, GLuin/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,GLuint v0,GLuint v1,GLuint v2)
PFNGLVERTEXATTRIBI3UIVEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXATTRIBI3UIVEXTPROC) (GLuint index, const GLuint *v);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,const GLuint * v)
PFNGLVERTEXATTRIBI3UIVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXATTRIBI3UIVPROC) (GLuint index, const GLuint* v0);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,const GLuint * v0)
PFNGLVERTEXATTRIBI4BVEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXATTRIBI4BVEXTPROC) (GLuint index, const GLbyte *v);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,const GLbyte * v)
PFNGLVERTEXATTRIBI4BVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXATTRIBI4BVPROC) (GLuint index, const GLbyte* v0);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,const GLbyte * v0)
PFNGLVERTEXATTRIBI4IEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXATTRIBI4IEXTPROC) (GLuint index, GLint x, GLint y, GLint z/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,GLint x,GLint y,GLint z,GLint w)
PFNGLVERTEXATTRIBI4IPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXATTRIBI4IPROC) (GLuint index, GLint v0, GLint v1, GLint v2/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,GLint v0,GLint v1,GLint v2,GLint v3)
PFNGLVERTEXATTRIBI4IVEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXATTRIBI4IVEXTPROC) (GLuint index, const GLint *v);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,const GLint * v)
PFNGLVERTEXATTRIBI4IVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXATTRIBI4IVPROC) (GLuint index, const GLint* v0);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,const GLint * v0)
PFNGLVERTEXATTRIBI4SVEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXATTRIBI4SVEXTPROC) (GLuint index, const GLshort *v);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,const GLshort * v)
PFNGLVERTEXATTRIBI4SVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXATTRIBI4SVPROC) (GLuint index, const GLshort* v0);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,const GLshort * v0)
PFNGLVERTEXATTRIBI4UBVEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXATTRIBI4UBVEXTPROC) (GLuint index, const GLubyte *v);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,const GLubyte * v)
PFNGLVERTEXATTRIBI4UBVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXATTRIBI4UBVPROC) (GLuint index, const GLubyte* v0);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,const GLubyte * v0)
PFNGLVERTEXATTRIBI4UIEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXATTRIBI4UIEXTPROC) (GLuint index, GLuint x, GLuint y, GLui/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,GLuint x,GLuint y,GLuint z,GLuint w)
PFNGLVERTEXATTRIBI4UIPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXATTRIBI4UIPROC) (GLuint index, GLuint v0, GLuint v1, GLuin/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,GLuint v0,GLuint v1,GLuint v2,GLuint v3)
PFNGLVERTEXATTRIBI4UIVEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXATTRIBI4UIVEXTPROC) (GLuint index, const GLuint *v);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,const GLuint * v)
PFNGLVERTEXATTRIBI4UIVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXATTRIBI4UIVPROC) (GLuint index, const GLuint* v0);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,const GLuint * v0)
PFNGLVERTEXATTRIBI4USVEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXATTRIBI4USVEXTPROC) (GLuint index, const GLushort *v);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,const GLushort * v)
PFNGLVERTEXATTRIBI4USVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXATTRIBI4USVPROC) (GLuint index, const GLushort* v0);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,const GLushort * v0)
PFNGLVERTEXATTRIBIFORMATNVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXATTRIBIFORMATNVPROC) (GLuint index, GLint size, GLenum typ/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,GLint size,GLenum type,GLsizei stride)
PFNGLVERTEXATTRIBIFORMATPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXATTRIBIFORMATPROC) (GLuint attribindex, GLint size, GLenum/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint attribindex,GLint size,GLenum type,GLuint relativeoffset)
PFNGLVERTEXATTRIBIPOINTEREXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXATTRIBIPOINTEREXTPROC) (GLuint index, GLint size, GLenum t/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,GLint size,GLenum type,GLsizei stride,const void * pointer)
PFNGLVERTEXATTRIBIPOINTERPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXATTRIBIPOINTERPROC) (GLuint index, GLint size, GLenum type/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,GLint size,GLenum type,GLsizei stride,const void * pointer)
PFNGLVERTEXATTRIBL1DEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXATTRIBL1DEXTPROC) (GLuint index, GLdouble x);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,GLdouble x)
PFNGLVERTEXATTRIBL1DPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXATTRIBL1DPROC) (GLuint index, GLdouble x);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,GLdouble x)
PFNGLVERTEXATTRIBL1DVEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXATTRIBL1DVEXTPROC) (GLuint index, const GLdouble* v);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,const GLdouble * v)
PFNGLVERTEXATTRIBL1DVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXATTRIBL1DVPROC) (GLuint index, const GLdouble* v);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,const GLdouble * v)
PFNGLVERTEXATTRIBL1I64NVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXATTRIBL1I64NVPROC) (GLuint index, GLint64EXT x);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,GLint64EXT x)
PFNGLVERTEXATTRIBL1I64VNVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXATTRIBL1I64VNVPROC) (GLuint index, const GLint64EXT* v);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,const GLint64EXT * v)
PFNGLVERTEXATTRIBL1UI64ARBPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXATTRIBL1UI64ARBPROC) (GLuint index, GLuint64EXT x);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,GLuint64EXT x)
PFNGLVERTEXATTRIBL1UI64NVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXATTRIBL1UI64NVPROC) (GLuint index, GLuint64EXT x);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,GLuint64EXT x)
PFNGLVERTEXATTRIBL1UI64VARBPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXATTRIBL1UI64VARBPROC) (GLuint index, const GLuint64EXT* v)/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,const GLuint64EXT * v)
PFNGLVERTEXATTRIBL1UI64VNVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXATTRIBL1UI64VNVPROC) (GLuint index, const GLuint64EXT* v);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,const GLuint64EXT * v)
PFNGLVERTEXATTRIBL2DEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXATTRIBL2DEXTPROC) (GLuint index, GLdouble x, GLdouble y);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,GLdouble x,GLdouble y)
PFNGLVERTEXATTRIBL2DPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXATTRIBL2DPROC) (GLuint index, GLdouble x, GLdouble y);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,GLdouble x,GLdouble y)
PFNGLVERTEXATTRIBL2DVEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXATTRIBL2DVEXTPROC) (GLuint index, const GLdouble* v);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,const GLdouble * v)
PFNGLVERTEXATTRIBL2DVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXATTRIBL2DVPROC) (GLuint index, const GLdouble* v);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,const GLdouble * v)
PFNGLVERTEXATTRIBL2I64NVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXATTRIBL2I64NVPROC) (GLuint index, GLint64EXT x, GLint64EXT/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,GLint64EXT x,GLint64EXT y)
PFNGLVERTEXATTRIBL2I64VNVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXATTRIBL2I64VNVPROC) (GLuint index, const GLint64EXT* v);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,const GLint64EXT * v)
PFNGLVERTEXATTRIBL2UI64NVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXATTRIBL2UI64NVPROC) (GLuint index, GLuint64EXT x, GLuint64/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,GLuint64EXT x,GLuint64EXT y)
PFNGLVERTEXATTRIBL2UI64VNVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXATTRIBL2UI64VNVPROC) (GLuint index, const GLuint64EXT* v);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,const GLuint64EXT * v)
PFNGLVERTEXATTRIBL3DEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXATTRIBL3DEXTPROC) (GLuint index, GLdouble x, GLdouble y, G/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,GLdouble x,GLdouble y,GLdouble z)
PFNGLVERTEXATTRIBL3DPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXATTRIBL3DPROC) (GLuint index, GLdouble x, GLdouble y, GLdo/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,GLdouble x,GLdouble y,GLdouble z)
PFNGLVERTEXATTRIBL3DVEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXATTRIBL3DVEXTPROC) (GLuint index, const GLdouble* v);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,const GLdouble * v)
PFNGLVERTEXATTRIBL3DVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXATTRIBL3DVPROC) (GLuint index, const GLdouble* v);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,const GLdouble * v)
PFNGLVERTEXATTRIBL3I64NVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXATTRIBL3I64NVPROC) (GLuint index, GLint64EXT x, GLint64EXT/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,GLint64EXT x,GLint64EXT y,GLint64EXT z)
PFNGLVERTEXATTRIBL3I64VNVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXATTRIBL3I64VNVPROC) (GLuint index, const GLint64EXT* v);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,const GLint64EXT * v)
PFNGLVERTEXATTRIBL3UI64NVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXATTRIBL3UI64NVPROC) (GLuint index, GLuint64EXT x, GLuint64/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,GLuint64EXT x,GLuint64EXT y,GLuint64EXT z)
PFNGLVERTEXATTRIBL3UI64VNVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXATTRIBL3UI64VNVPROC) (GLuint index, const GLuint64EXT* v);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,const GLuint64EXT * v)
PFNGLVERTEXATTRIBL4DEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXATTRIBL4DEXTPROC) (GLuint index, GLdouble x, GLdouble y, G/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,GLdouble x,GLdouble y,GLdouble z,GLdouble w)
PFNGLVERTEXATTRIBL4DPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXATTRIBL4DPROC) (GLuint index, GLdouble x, GLdouble y, GLdo/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,GLdouble x,GLdouble y,GLdouble z,GLdouble w)
PFNGLVERTEXATTRIBL4DVEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXATTRIBL4DVEXTPROC) (GLuint index, const GLdouble* v);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,const GLdouble * v)
PFNGLVERTEXATTRIBL4DVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXATTRIBL4DVPROC) (GLuint index, const GLdouble* v);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,const GLdouble * v)
PFNGLVERTEXATTRIBL4I64NVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXATTRIBL4I64NVPROC) (GLuint index, GLint64EXT x, GLint64EXT/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,GLint64EXT x,GLint64EXT y,GLint64EXT z,GLint64EXT w)
PFNGLVERTEXATTRIBL4I64VNVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXATTRIBL4I64VNVPROC) (GLuint index, const GLint64EXT* v);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,const GLint64EXT * v)
PFNGLVERTEXATTRIBL4UI64NVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXATTRIBL4UI64NVPROC) (GLuint index, GLuint64EXT x, GLuint64/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,GLuint64EXT x,GLuint64EXT y,GLuint64EXT z,GLuint64EXT w)
PFNGLVERTEXATTRIBL4UI64VNVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXATTRIBL4UI64VNVPROC) (GLuint index, const GLuint64EXT* v);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,const GLuint64EXT * v)
PFNGLVERTEXATTRIBLFORMATNVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXATTRIBLFORMATNVPROC) (GLuint index, GLint size, GLenum typ/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,GLint size,GLenum type,GLsizei stride)
PFNGLVERTEXATTRIBLFORMATPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXATTRIBLFORMATPROC) (GLuint attribindex, GLint size, GLenum/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint attribindex,GLint size,GLenum type,GLuint relativeoffset)
PFNGLVERTEXATTRIBLPOINTEREXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXATTRIBLPOINTEREXTPROC) (GLuint index, GLint size, GLenum t/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,GLint size,GLenum type,GLsizei stride,const void * pointer)
PFNGLVERTEXATTRIBLPOINTERPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXATTRIBLPOINTERPROC) (GLuint index, GLint size, GLenum type/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,GLint size,GLenum type,GLsizei stride,const void * pointer)
PFNGLVERTEXATTRIBP1UIPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXATTRIBP1UIPROC) (GLuint index, GLenum type, GLboolean norm/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,GLenum type,GLboolean normalized,GLuint value)
PFNGLVERTEXATTRIBP1UIVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXATTRIBP1UIVPROC) (GLuint index, GLenum type, GLboolean nor/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,GLenum type,GLboolean normalized,const GLuint * value)
PFNGLVERTEXATTRIBP2UIPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXATTRIBP2UIPROC) (GLuint index, GLenum type, GLboolean norm/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,GLenum type,GLboolean normalized,GLuint value)
PFNGLVERTEXATTRIBP2UIVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXATTRIBP2UIVPROC) (GLuint index, GLenum type, GLboolean nor/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,GLenum type,GLboolean normalized,const GLuint * value)
PFNGLVERTEXATTRIBP3UIPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXATTRIBP3UIPROC) (GLuint index, GLenum type, GLboolean norm/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,GLenum type,GLboolean normalized,GLuint value)
PFNGLVERTEXATTRIBP3UIVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXATTRIBP3UIVPROC) (GLuint index, GLenum type, GLboolean nor/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,GLenum type,GLboolean normalized,const GLuint * value)
PFNGLVERTEXATTRIBP4UIPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXATTRIBP4UIPROC) (GLuint index, GLenum type, GLboolean norm/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,GLenum type,GLboolean normalized,GLuint value)
PFNGLVERTEXATTRIBP4UIVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXATTRIBP4UIVPROC) (GLuint index, GLenum type, GLboolean nor/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,GLenum type,GLboolean normalized,const GLuint * value)
PFNGLVERTEXATTRIBPARAMETERIAMDPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXATTRIBPARAMETERIAMDPROC) (GLuint index, GLenum pname, GLin/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,GLenum pname,GLint param)
PFNGLVERTEXATTRIBPOINTERARBPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXATTRIBPOINTERARBPROC) (GLuint index, GLint size, GLenum ty/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,GLint size,GLenum type,GLboolean normalized,GLsizei stride,const void * pointer)
PFNGLVERTEXATTRIBPOINTERNVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXATTRIBPOINTERNVPROC) (GLuint index, GLint size, GLenum typ/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,GLint size,GLenum type,GLsizei stride,const void * pointer)
PFNGLVERTEXATTRIBPOINTERPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXATTRIBPOINTERPROC) (GLuint index, GLint size, GLenum type,/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,GLint size,GLenum type,GLboolean normalized,GLsizei stride,const void * pointer)
PFNGLVERTEXATTRIBS1DVNVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXATTRIBS1DVNVPROC) (GLuint index, GLsizei n, const GLdouble/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,GLsizei n,const GLdouble * v)
PFNGLVERTEXATTRIBS1FVNVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXATTRIBS1FVNVPROC) (GLuint index, GLsizei n, const GLfloat*/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,GLsizei n,const GLfloat * v)
PFNGLVERTEXATTRIBS1HVNVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXATTRIBS1HVNVPROC) (GLuint index, GLsizei n, const GLhalf* /;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,GLsizei n,const GLhalf * v)
PFNGLVERTEXATTRIBS1SVNVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXATTRIBS1SVNVPROC) (GLuint index, GLsizei n, const GLshort*/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,GLsizei n,const GLshort * v)
PFNGLVERTEXATTRIBS2DVNVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXATTRIBS2DVNVPROC) (GLuint index, GLsizei n, const GLdouble/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,GLsizei n,const GLdouble * v)
PFNGLVERTEXATTRIBS2FVNVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXATTRIBS2FVNVPROC) (GLuint index, GLsizei n, const GLfloat*/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,GLsizei n,const GLfloat * v)
PFNGLVERTEXATTRIBS2HVNVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXATTRIBS2HVNVPROC) (GLuint index, GLsizei n, const GLhalf* /;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,GLsizei n,const GLhalf * v)
PFNGLVERTEXATTRIBS2SVNVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXATTRIBS2SVNVPROC) (GLuint index, GLsizei n, const GLshort*/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,GLsizei n,const GLshort * v)
PFNGLVERTEXATTRIBS3DVNVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXATTRIBS3DVNVPROC) (GLuint index, GLsizei n, const GLdouble/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,GLsizei n,const GLdouble * v)
PFNGLVERTEXATTRIBS3FVNVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXATTRIBS3FVNVPROC) (GLuint index, GLsizei n, const GLfloat*/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,GLsizei n,const GLfloat * v)
PFNGLVERTEXATTRIBS3HVNVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXATTRIBS3HVNVPROC) (GLuint index, GLsizei n, const GLhalf* /;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,GLsizei n,const GLhalf * v)
PFNGLVERTEXATTRIBS3SVNVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXATTRIBS3SVNVPROC) (GLuint index, GLsizei n, const GLshort*/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,GLsizei n,const GLshort * v)
PFNGLVERTEXATTRIBS4DVNVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXATTRIBS4DVNVPROC) (GLuint index, GLsizei n, const GLdouble/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,GLsizei n,const GLdouble * v)
PFNGLVERTEXATTRIBS4FVNVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXATTRIBS4FVNVPROC) (GLuint index, GLsizei n, const GLfloat*/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,GLsizei n,const GLfloat * v)
PFNGLVERTEXATTRIBS4HVNVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXATTRIBS4HVNVPROC) (GLuint index, GLsizei n, const GLhalf* /;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,GLsizei n,const GLhalf * v)
PFNGLVERTEXATTRIBS4SVNVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXATTRIBS4SVNVPROC) (GLuint index, GLsizei n, const GLshort*/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,GLsizei n,const GLshort * v)
PFNGLVERTEXATTRIBS4UBVNVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXATTRIBS4UBVNVPROC) (GLuint index, GLsizei n, const GLubyte/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,GLsizei n,const GLubyte * v)
PFNGLVERTEXBINDINGDIVISORPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXBINDINGDIVISORPROC) (GLuint bindingindex, GLuint divisor);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint bindingindex,GLuint divisor)
PFNGLVERTEXBLENDARBPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXBLENDARBPROC) (GLint count);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLint count)
PFNGLVERTEXBLENDENVFATIPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXBLENDENVFATIPROC) (GLenum pname, GLfloat param);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum pname,GLfloat param)
PFNGLVERTEXBLENDENVIATIPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXBLENDENVIATIPROC) (GLenum pname, GLint param);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum pname,GLint param)
PFNGLVERTEXFORMATNVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXFORMATNVPROC) (GLint size, GLenum type, GLsizei stride);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLint size,GLenum type,GLsizei stride)
PFNGLVERTEXP2UIPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXP2UIPROC) (GLenum type, GLuint value);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum type,GLuint value)
PFNGLVERTEXP2UIVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXP2UIVPROC) (GLenum type, const GLuint* value);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum type,const GLuint * value)
PFNGLVERTEXP3UIPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXP3UIPROC) (GLenum type, GLuint value);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum type,GLuint value)
PFNGLVERTEXP3UIVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXP3UIVPROC) (GLenum type, const GLuint* value);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum type,const GLuint * value)
PFNGLVERTEXP4UIPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXP4UIPROC) (GLenum type, GLuint value);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum type,GLuint value)
PFNGLVERTEXP4UIVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXP4UIVPROC) (GLenum type, const GLuint* value);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum type,const GLuint * value)
PFNGLVERTEXPOINTEREXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXPOINTEREXTPROC) (GLint size, GLenum type, GLsizei stride, /;"	t	typeref:typename:void (GLAPIENTRY *)(GLint size,GLenum type,GLsizei stride,GLsizei count,const void * pointer)
PFNGLVERTEXPOINTERLISTIBMPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXPOINTERLISTIBMPROC) (GLint size, GLenum type, GLint stride/;"	t	typeref:typename:void (GLAPIENTRY *)(GLint size,GLenum type,GLint stride,const void ** pointer,GLint ptrstride)
PFNGLVERTEXPOINTERVINTELPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXPOINTERVINTELPROC) (GLint size, GLenum type, const void** /;"	t	typeref:typename:void (GLAPIENTRY *)(GLint size,GLenum type,const void ** pointer)
PFNGLVERTEXSTREAM1DATIPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXSTREAM1DATIPROC) (GLenum stream, GLdouble x);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum stream,GLdouble x)
PFNGLVERTEXSTREAM1DVATIPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXSTREAM1DVATIPROC) (GLenum stream, const GLdouble *coords);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum stream,const GLdouble * coords)
PFNGLVERTEXSTREAM1FATIPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXSTREAM1FATIPROC) (GLenum stream, GLfloat x);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum stream,GLfloat x)
PFNGLVERTEXSTREAM1FVATIPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXSTREAM1FVATIPROC) (GLenum stream, const GLfloat *coords);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum stream,const GLfloat * coords)
PFNGLVERTEXSTREAM1IATIPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXSTREAM1IATIPROC) (GLenum stream, GLint x);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum stream,GLint x)
PFNGLVERTEXSTREAM1IVATIPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXSTREAM1IVATIPROC) (GLenum stream, const GLint *coords);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum stream,const GLint * coords)
PFNGLVERTEXSTREAM1SATIPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXSTREAM1SATIPROC) (GLenum stream, GLshort x);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum stream,GLshort x)
PFNGLVERTEXSTREAM1SVATIPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXSTREAM1SVATIPROC) (GLenum stream, const GLshort *coords);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum stream,const GLshort * coords)
PFNGLVERTEXSTREAM2DATIPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXSTREAM2DATIPROC) (GLenum stream, GLdouble x, GLdouble y);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum stream,GLdouble x,GLdouble y)
PFNGLVERTEXSTREAM2DVATIPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXSTREAM2DVATIPROC) (GLenum stream, const GLdouble *coords);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum stream,const GLdouble * coords)
PFNGLVERTEXSTREAM2FATIPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXSTREAM2FATIPROC) (GLenum stream, GLfloat x, GLfloat y);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum stream,GLfloat x,GLfloat y)
PFNGLVERTEXSTREAM2FVATIPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXSTREAM2FVATIPROC) (GLenum stream, const GLfloat *coords);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum stream,const GLfloat * coords)
PFNGLVERTEXSTREAM2IATIPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXSTREAM2IATIPROC) (GLenum stream, GLint x, GLint y);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum stream,GLint x,GLint y)
PFNGLVERTEXSTREAM2IVATIPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXSTREAM2IVATIPROC) (GLenum stream, const GLint *coords);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum stream,const GLint * coords)
PFNGLVERTEXSTREAM2SATIPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXSTREAM2SATIPROC) (GLenum stream, GLshort x, GLshort y);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum stream,GLshort x,GLshort y)
PFNGLVERTEXSTREAM2SVATIPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXSTREAM2SVATIPROC) (GLenum stream, const GLshort *coords);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum stream,const GLshort * coords)
PFNGLVERTEXSTREAM3DATIPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXSTREAM3DATIPROC) (GLenum stream, GLdouble x, GLdouble y, G/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum stream,GLdouble x,GLdouble y,GLdouble z)
PFNGLVERTEXSTREAM3DVATIPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXSTREAM3DVATIPROC) (GLenum stream, const GLdouble *coords);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum stream,const GLdouble * coords)
PFNGLVERTEXSTREAM3FATIPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXSTREAM3FATIPROC) (GLenum stream, GLfloat x, GLfloat y, GLf/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum stream,GLfloat x,GLfloat y,GLfloat z)
PFNGLVERTEXSTREAM3FVATIPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXSTREAM3FVATIPROC) (GLenum stream, const GLfloat *coords);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum stream,const GLfloat * coords)
PFNGLVERTEXSTREAM3IATIPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXSTREAM3IATIPROC) (GLenum stream, GLint x, GLint y, GLint z/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum stream,GLint x,GLint y,GLint z)
PFNGLVERTEXSTREAM3IVATIPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXSTREAM3IVATIPROC) (GLenum stream, const GLint *coords);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum stream,const GLint * coords)
PFNGLVERTEXSTREAM3SATIPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXSTREAM3SATIPROC) (GLenum stream, GLshort x, GLshort y, GLs/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum stream,GLshort x,GLshort y,GLshort z)
PFNGLVERTEXSTREAM3SVATIPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXSTREAM3SVATIPROC) (GLenum stream, const GLshort *coords);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum stream,const GLshort * coords)
PFNGLVERTEXSTREAM4DATIPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXSTREAM4DATIPROC) (GLenum stream, GLdouble x, GLdouble y, G/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum stream,GLdouble x,GLdouble y,GLdouble z,GLdouble w)
PFNGLVERTEXSTREAM4DVATIPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXSTREAM4DVATIPROC) (GLenum stream, const GLdouble *coords);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum stream,const GLdouble * coords)
PFNGLVERTEXSTREAM4FATIPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXSTREAM4FATIPROC) (GLenum stream, GLfloat x, GLfloat y, GLf/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum stream,GLfloat x,GLfloat y,GLfloat z,GLfloat w)
PFNGLVERTEXSTREAM4FVATIPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXSTREAM4FVATIPROC) (GLenum stream, const GLfloat *coords);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum stream,const GLfloat * coords)
PFNGLVERTEXSTREAM4IATIPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXSTREAM4IATIPROC) (GLenum stream, GLint x, GLint y, GLint z/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum stream,GLint x,GLint y,GLint z,GLint w)
PFNGLVERTEXSTREAM4IVATIPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXSTREAM4IVATIPROC) (GLenum stream, const GLint *coords);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum stream,const GLint * coords)
PFNGLVERTEXSTREAM4SATIPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXSTREAM4SATIPROC) (GLenum stream, GLshort x, GLshort y, GLs/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum stream,GLshort x,GLshort y,GLshort z,GLshort w)
PFNGLVERTEXSTREAM4SVATIPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXSTREAM4SVATIPROC) (GLenum stream, const GLshort *coords);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum stream,const GLshort * coords)
PFNGLVERTEXWEIGHTFEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXWEIGHTFEXTPROC) (GLfloat weight);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLfloat weight)
PFNGLVERTEXWEIGHTFVEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXWEIGHTFVEXTPROC) (GLfloat* weight);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLfloat * weight)
PFNGLVERTEXWEIGHTHNVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXWEIGHTHNVPROC) (GLhalf weight);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLhalf weight)
PFNGLVERTEXWEIGHTHVNVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXWEIGHTHVNVPROC) (const GLhalf* weight);$/;"	t	typeref:typename:void (GLAPIENTRY *)(const GLhalf * weight)
PFNGLVERTEXWEIGHTPOINTEREXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLVERTEXWEIGHTPOINTEREXTPROC) (GLint size, GLenum type, GLsizei st/;"	t	typeref:typename:void (GLAPIENTRY *)(GLint size,GLenum type,GLsizei stride,void * pointer)
PFNGLVIDEOCAPTURENVPROC	./GL/glew.h	/^typedef GLenum (GLAPIENTRY * PFNGLVIDEOCAPTURENVPROC) (GLuint video_capture_slot, GLuint* sequen/;"	t	typeref:typename:GLenum (GLAPIENTRY *)(GLuint video_capture_slot,GLuint * sequence_num,GLuint64EXT * capture_time)
PFNGLVIDEOCAPTURESTREAMPARAMETERDVNVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLVIDEOCAPTURESTREAMPARAMETERDVNVPROC) (GLuint video_capture_slot,/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint video_capture_slot,GLuint stream,GLenum pname,const GLdouble * params)
PFNGLVIDEOCAPTURESTREAMPARAMETERFVNVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLVIDEOCAPTURESTREAMPARAMETERFVNVPROC) (GLuint video_capture_slot,/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint video_capture_slot,GLuint stream,GLenum pname,const GLfloat * params)
PFNGLVIDEOCAPTURESTREAMPARAMETERIVNVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLVIDEOCAPTURESTREAMPARAMETERIVNVPROC) (GLuint video_capture_slot,/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint video_capture_slot,GLuint stream,GLenum pname,const GLint * params)
PFNGLVIEWPORTARRAYVNVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLVIEWPORTARRAYVNVPROC) (GLuint first, GLsizei count, const GLfloa/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint first,GLsizei count,const GLfloat * v)
PFNGLVIEWPORTARRAYVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLVIEWPORTARRAYVPROC) (GLuint first, GLsizei count, const GLfloat /;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint first,GLsizei count,const GLfloat * v)
PFNGLVIEWPORTINDEXEDFNVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLVIEWPORTINDEXEDFNVPROC) (GLuint index, GLfloat x, GLfloat y, GLf/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,GLfloat x,GLfloat y,GLfloat w,GLfloat h)
PFNGLVIEWPORTINDEXEDFPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLVIEWPORTINDEXEDFPROC) (GLuint index, GLfloat x, GLfloat y, GLflo/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,GLfloat x,GLfloat y,GLfloat w,GLfloat h)
PFNGLVIEWPORTINDEXEDFVNVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLVIEWPORTINDEXEDFVNVPROC) (GLuint index, const GLfloat * v);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,const GLfloat * v)
PFNGLVIEWPORTINDEXEDFVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLVIEWPORTINDEXEDFVPROC) (GLuint index, const GLfloat * v);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,const GLfloat * v)
PFNGLVIEWPORTPOSITIONWSCALENVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLVIEWPORTPOSITIONWSCALENVPROC) (GLuint index, GLfloat xcoeff, GLf/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,GLfloat xcoeff,GLfloat ycoeff)
PFNGLVIEWPORTSWIZZLENVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLVIEWPORTSWIZZLENVPROC) (GLuint index, GLenum swizzlex, GLenum sw/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint index,GLenum swizzlex,GLenum swizzley,GLenum swizzlez,GLenum swizzlew)
PFNGLWAITSEMAPHOREEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLWAITSEMAPHOREEXTPROC) (GLuint semaphore, GLuint numBufferBarrier/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint semaphore,GLuint numBufferBarriers,const GLuint * buffers,GLuint numTextureBarriers,const GLuint * textures,const GLenum * srcLayouts)
PFNGLWAITSEMAPHOREUI64NVXPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLWAITSEMAPHOREUI64NVXPROC) (GLuint waitGpu, GLsizei fenceObjectCo/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint waitGpu,GLsizei fenceObjectCount,const GLuint * semaphoreArray,const GLuint64 * fenceValueArray)
PFNGLWAITSYNCAPPLEPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLWAITSYNCAPPLEPROC) (GLsync GLsync, GLbitfield flags, GLuint64 ti/;"	t	typeref:typename:void (GLAPIENTRY *)(GLsync GLsync,GLbitfield flags,GLuint64 timeout)
PFNGLWAITSYNCPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLWAITSYNCPROC) (GLsync GLsync,GLbitfield flags,GLuint64 timeout);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLsync GLsync,GLbitfield flags,GLuint64 timeout)
PFNGLWAITVKSEMAPHORENVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLWAITVKSEMAPHORENVPROC) (GLuint64 vkSemaphore);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint64 vkSemaphore)
PFNGLWEIGHTBVARBPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLWEIGHTBVARBPROC) (GLint size, GLbyte *weights);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLint size,GLbyte * weights)
PFNGLWEIGHTDVARBPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLWEIGHTDVARBPROC) (GLint size, GLdouble *weights);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLint size,GLdouble * weights)
PFNGLWEIGHTFVARBPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLWEIGHTFVARBPROC) (GLint size, GLfloat *weights);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLint size,GLfloat * weights)
PFNGLWEIGHTIVARBPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLWEIGHTIVARBPROC) (GLint size, GLint *weights);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLint size,GLint * weights)
PFNGLWEIGHTPATHSNVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLWEIGHTPATHSNVPROC) (GLuint resultPath, GLsizei numPaths, const G/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint resultPath,GLsizei numPaths,const GLuint paths[],const GLfloat weights[])
PFNGLWEIGHTPOINTERARBPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLWEIGHTPOINTERARBPROC) (GLint size, GLenum type, GLsizei stride, /;"	t	typeref:typename:void (GLAPIENTRY *)(GLint size,GLenum type,GLsizei stride,void * pointer)
PFNGLWEIGHTPOINTEROESPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLWEIGHTPOINTEROESPROC) (GLint size, GLenum type, GLsizei stride, /;"	t	typeref:typename:void (GLAPIENTRY *)(GLint size,GLenum type,GLsizei stride,void * pointer)
PFNGLWEIGHTSVARBPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLWEIGHTSVARBPROC) (GLint size, GLshort *weights);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLint size,GLshort * weights)
PFNGLWEIGHTUBVARBPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLWEIGHTUBVARBPROC) (GLint size, GLubyte *weights);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLint size,GLubyte * weights)
PFNGLWEIGHTUIVARBPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLWEIGHTUIVARBPROC) (GLint size, GLuint *weights);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLint size,GLuint * weights)
PFNGLWEIGHTUSVARBPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLWEIGHTUSVARBPROC) (GLint size, GLushort *weights);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLint size,GLushort * weights)
PFNGLWINDOWPOS2DARBPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLWINDOWPOS2DARBPROC) (GLdouble x, GLdouble y);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLdouble x,GLdouble y)
PFNGLWINDOWPOS2DMESAPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLWINDOWPOS2DMESAPROC) (GLdouble x, GLdouble y);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLdouble x,GLdouble y)
PFNGLWINDOWPOS2DPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLWINDOWPOS2DPROC) (GLdouble x, GLdouble y);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLdouble x,GLdouble y)
PFNGLWINDOWPOS2DVARBPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLWINDOWPOS2DVARBPROC) (const GLdouble* p);$/;"	t	typeref:typename:void (GLAPIENTRY *)(const GLdouble * p)
PFNGLWINDOWPOS2DVMESAPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLWINDOWPOS2DVMESAPROC) (const GLdouble* p);$/;"	t	typeref:typename:void (GLAPIENTRY *)(const GLdouble * p)
PFNGLWINDOWPOS2DVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLWINDOWPOS2DVPROC) (const GLdouble *p);$/;"	t	typeref:typename:void (GLAPIENTRY *)(const GLdouble * p)
PFNGLWINDOWPOS2FARBPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLWINDOWPOS2FARBPROC) (GLfloat x, GLfloat y);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLfloat x,GLfloat y)
PFNGLWINDOWPOS2FMESAPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLWINDOWPOS2FMESAPROC) (GLfloat x, GLfloat y);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLfloat x,GLfloat y)
PFNGLWINDOWPOS2FPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLWINDOWPOS2FPROC) (GLfloat x, GLfloat y);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLfloat x,GLfloat y)
PFNGLWINDOWPOS2FVARBPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLWINDOWPOS2FVARBPROC) (const GLfloat* p);$/;"	t	typeref:typename:void (GLAPIENTRY *)(const GLfloat * p)
PFNGLWINDOWPOS2FVMESAPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLWINDOWPOS2FVMESAPROC) (const GLfloat* p);$/;"	t	typeref:typename:void (GLAPIENTRY *)(const GLfloat * p)
PFNGLWINDOWPOS2FVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLWINDOWPOS2FVPROC) (const GLfloat *p);$/;"	t	typeref:typename:void (GLAPIENTRY *)(const GLfloat * p)
PFNGLWINDOWPOS2IARBPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLWINDOWPOS2IARBPROC) (GLint x, GLint y);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLint x,GLint y)
PFNGLWINDOWPOS2IMESAPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLWINDOWPOS2IMESAPROC) (GLint x, GLint y);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLint x,GLint y)
PFNGLWINDOWPOS2IPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLWINDOWPOS2IPROC) (GLint x, GLint y);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLint x,GLint y)
PFNGLWINDOWPOS2IVARBPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLWINDOWPOS2IVARBPROC) (const GLint* p);$/;"	t	typeref:typename:void (GLAPIENTRY *)(const GLint * p)
PFNGLWINDOWPOS2IVMESAPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLWINDOWPOS2IVMESAPROC) (const GLint* p);$/;"	t	typeref:typename:void (GLAPIENTRY *)(const GLint * p)
PFNGLWINDOWPOS2IVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLWINDOWPOS2IVPROC) (const GLint *p);$/;"	t	typeref:typename:void (GLAPIENTRY *)(const GLint * p)
PFNGLWINDOWPOS2SARBPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLWINDOWPOS2SARBPROC) (GLshort x, GLshort y);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLshort x,GLshort y)
PFNGLWINDOWPOS2SMESAPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLWINDOWPOS2SMESAPROC) (GLshort x, GLshort y);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLshort x,GLshort y)
PFNGLWINDOWPOS2SPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLWINDOWPOS2SPROC) (GLshort x, GLshort y);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLshort x,GLshort y)
PFNGLWINDOWPOS2SVARBPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLWINDOWPOS2SVARBPROC) (const GLshort* p);$/;"	t	typeref:typename:void (GLAPIENTRY *)(const GLshort * p)
PFNGLWINDOWPOS2SVMESAPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLWINDOWPOS2SVMESAPROC) (const GLshort* p);$/;"	t	typeref:typename:void (GLAPIENTRY *)(const GLshort * p)
PFNGLWINDOWPOS2SVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLWINDOWPOS2SVPROC) (const GLshort *p);$/;"	t	typeref:typename:void (GLAPIENTRY *)(const GLshort * p)
PFNGLWINDOWPOS3DARBPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLWINDOWPOS3DARBPROC) (GLdouble x, GLdouble y, GLdouble z);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLdouble x,GLdouble y,GLdouble z)
PFNGLWINDOWPOS3DMESAPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLWINDOWPOS3DMESAPROC) (GLdouble x, GLdouble y, GLdouble z);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLdouble x,GLdouble y,GLdouble z)
PFNGLWINDOWPOS3DPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLWINDOWPOS3DPROC) (GLdouble x, GLdouble y, GLdouble z);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLdouble x,GLdouble y,GLdouble z)
PFNGLWINDOWPOS3DVARBPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLWINDOWPOS3DVARBPROC) (const GLdouble* p);$/;"	t	typeref:typename:void (GLAPIENTRY *)(const GLdouble * p)
PFNGLWINDOWPOS3DVMESAPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLWINDOWPOS3DVMESAPROC) (const GLdouble* p);$/;"	t	typeref:typename:void (GLAPIENTRY *)(const GLdouble * p)
PFNGLWINDOWPOS3DVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLWINDOWPOS3DVPROC) (const GLdouble *p);$/;"	t	typeref:typename:void (GLAPIENTRY *)(const GLdouble * p)
PFNGLWINDOWPOS3FARBPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLWINDOWPOS3FARBPROC) (GLfloat x, GLfloat y, GLfloat z);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLfloat x,GLfloat y,GLfloat z)
PFNGLWINDOWPOS3FMESAPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLWINDOWPOS3FMESAPROC) (GLfloat x, GLfloat y, GLfloat z);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLfloat x,GLfloat y,GLfloat z)
PFNGLWINDOWPOS3FPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLWINDOWPOS3FPROC) (GLfloat x, GLfloat y, GLfloat z);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLfloat x,GLfloat y,GLfloat z)
PFNGLWINDOWPOS3FVARBPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLWINDOWPOS3FVARBPROC) (const GLfloat* p);$/;"	t	typeref:typename:void (GLAPIENTRY *)(const GLfloat * p)
PFNGLWINDOWPOS3FVMESAPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLWINDOWPOS3FVMESAPROC) (const GLfloat* p);$/;"	t	typeref:typename:void (GLAPIENTRY *)(const GLfloat * p)
PFNGLWINDOWPOS3FVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLWINDOWPOS3FVPROC) (const GLfloat *p);$/;"	t	typeref:typename:void (GLAPIENTRY *)(const GLfloat * p)
PFNGLWINDOWPOS3IARBPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLWINDOWPOS3IARBPROC) (GLint x, GLint y, GLint z);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLint x,GLint y,GLint z)
PFNGLWINDOWPOS3IMESAPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLWINDOWPOS3IMESAPROC) (GLint x, GLint y, GLint z);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLint x,GLint y,GLint z)
PFNGLWINDOWPOS3IPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLWINDOWPOS3IPROC) (GLint x, GLint y, GLint z);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLint x,GLint y,GLint z)
PFNGLWINDOWPOS3IVARBPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLWINDOWPOS3IVARBPROC) (const GLint* p);$/;"	t	typeref:typename:void (GLAPIENTRY *)(const GLint * p)
PFNGLWINDOWPOS3IVMESAPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLWINDOWPOS3IVMESAPROC) (const GLint* p);$/;"	t	typeref:typename:void (GLAPIENTRY *)(const GLint * p)
PFNGLWINDOWPOS3IVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLWINDOWPOS3IVPROC) (const GLint *p);$/;"	t	typeref:typename:void (GLAPIENTRY *)(const GLint * p)
PFNGLWINDOWPOS3SARBPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLWINDOWPOS3SARBPROC) (GLshort x, GLshort y, GLshort z);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLshort x,GLshort y,GLshort z)
PFNGLWINDOWPOS3SMESAPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLWINDOWPOS3SMESAPROC) (GLshort x, GLshort y, GLshort z);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLshort x,GLshort y,GLshort z)
PFNGLWINDOWPOS3SPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLWINDOWPOS3SPROC) (GLshort x, GLshort y, GLshort z);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLshort x,GLshort y,GLshort z)
PFNGLWINDOWPOS3SVARBPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLWINDOWPOS3SVARBPROC) (const GLshort* p);$/;"	t	typeref:typename:void (GLAPIENTRY *)(const GLshort * p)
PFNGLWINDOWPOS3SVMESAPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLWINDOWPOS3SVMESAPROC) (const GLshort* p);$/;"	t	typeref:typename:void (GLAPIENTRY *)(const GLshort * p)
PFNGLWINDOWPOS3SVPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLWINDOWPOS3SVPROC) (const GLshort *p);$/;"	t	typeref:typename:void (GLAPIENTRY *)(const GLshort * p)
PFNGLWINDOWPOS4DMESAPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLWINDOWPOS4DMESAPROC) (GLdouble x, GLdouble y, GLdouble z, GLdoub/;"	t	typeref:typename:void (GLAPIENTRY *)(GLdouble x,GLdouble y,GLdouble z,GLdouble)
PFNGLWINDOWPOS4DVMESAPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLWINDOWPOS4DVMESAPROC) (const GLdouble* p);$/;"	t	typeref:typename:void (GLAPIENTRY *)(const GLdouble * p)
PFNGLWINDOWPOS4FMESAPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLWINDOWPOS4FMESAPROC) (GLfloat x, GLfloat y, GLfloat z, GLfloat w/;"	t	typeref:typename:void (GLAPIENTRY *)(GLfloat x,GLfloat y,GLfloat z,GLfloat w)
PFNGLWINDOWPOS4FVMESAPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLWINDOWPOS4FVMESAPROC) (const GLfloat* p);$/;"	t	typeref:typename:void (GLAPIENTRY *)(const GLfloat * p)
PFNGLWINDOWPOS4IMESAPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLWINDOWPOS4IMESAPROC) (GLint x, GLint y, GLint z, GLint w);$/;"	t	typeref:typename:void (GLAPIENTRY *)(GLint x,GLint y,GLint z,GLint w)
PFNGLWINDOWPOS4IVMESAPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLWINDOWPOS4IVMESAPROC) (const GLint* p);$/;"	t	typeref:typename:void (GLAPIENTRY *)(const GLint * p)
PFNGLWINDOWPOS4SMESAPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLWINDOWPOS4SMESAPROC) (GLshort x, GLshort y, GLshort z, GLshort w/;"	t	typeref:typename:void (GLAPIENTRY *)(GLshort x,GLshort y,GLshort z,GLshort w)
PFNGLWINDOWPOS4SVMESAPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLWINDOWPOS4SVMESAPROC) (const GLshort* p);$/;"	t	typeref:typename:void (GLAPIENTRY *)(const GLshort * p)
PFNGLWINDOWRECTANGLESEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLWINDOWRECTANGLESEXTPROC) (GLenum mode, GLsizei count, const GLin/;"	t	typeref:typename:void (GLAPIENTRY *)(GLenum mode,GLsizei count,const GLint box[])
PFNGLWRITEMASKEXTPROC	./GL/glew.h	/^typedef void (GLAPIENTRY * PFNGLWRITEMASKEXTPROC) (GLuint res, GLuint in, GLenum outX, GLenum ou/;"	t	typeref:typename:void (GLAPIENTRY *)(GLuint res,GLuint in,GLenum outX,GLenum outY,GLenum outZ,GLenum outW)
PFNGLXALLOCATEMEMORYNVPROC	./GL/glxew.h	/^typedef void * ( * PFNGLXALLOCATEMEMORYNVPROC) (GLsizei size, GLfloat readFrequency, GLfloat wri/;"	t	typeref:typename:void * (*)(GLsizei size,GLfloat readFrequency,GLfloat writeFrequency,GLfloat priority)
PFNGLXBINDCHANNELTOWINDOWSGIXPROC	./GL/glxew.h	/^typedef int ( * PFNGLXBINDCHANNELTOWINDOWSGIXPROC) (Display* display, int screen, int channel, W/;"	t	typeref:typename:int (*)(Display * display,int screen,int channel,Window window)
PFNGLXBINDHYPERPIPESGIXPROC	./GL/glxew.h	/^typedef int ( * PFNGLXBINDHYPERPIPESGIXPROC) (Display *dpy, int hpId);$/;"	t	typeref:typename:int (*)(Display * dpy,int hpId)
PFNGLXBINDSWAPBARRIERNVPROC	./GL/glxew.h	/^typedef Bool ( * PFNGLXBINDSWAPBARRIERNVPROC) (Display* dpy, GLuint group, GLuint barrier);$/;"	t	typeref:typename:Bool (*)(Display * dpy,GLuint group,GLuint barrier)
PFNGLXBINDSWAPBARRIERSGIXPROC	./GL/glxew.h	/^typedef void ( * PFNGLXBINDSWAPBARRIERSGIXPROC) (Display* dpy, GLXDrawable drawable, int barrier/;"	t	typeref:typename:void (*)(Display * dpy,GLXDrawable drawable,int barrier)
PFNGLXBINDTEXIMAGEATIPROC	./GL/glxew.h	/^typedef void ( * PFNGLXBINDTEXIMAGEATIPROC) (Display *dpy, GLXPbuffer pbuf, int buffer);$/;"	t	typeref:typename:void (*)(Display * dpy,GLXPbuffer pbuf,int buffer)
PFNGLXBINDTEXIMAGEEXTPROC	./GL/glxew.h	/^typedef void ( * PFNGLXBINDTEXIMAGEEXTPROC) (Display* dpy, GLXDrawable drawable, int buffer, con/;"	t	typeref:typename:void (*)(Display * dpy,GLXDrawable drawable,int buffer,const int * attrib_list)
PFNGLXBINDVIDEOCAPTUREDEVICENVPROC	./GL/glxew.h	/^typedef int ( * PFNGLXBINDVIDEOCAPTUREDEVICENVPROC) (Display* dpy, unsigned int video_capture_sl/;"	t	typeref:typename:int (*)(Display * dpy,unsigned int video_capture_slot,GLXVideoCaptureDeviceNV device)
PFNGLXBINDVIDEODEVICENVPROC	./GL/glxew.h	/^typedef int ( * PFNGLXBINDVIDEODEVICENVPROC) (Display* dpy, unsigned int video_slot, unsigned in/;"	t	typeref:typename:int (*)(Display * dpy,unsigned int video_slot,unsigned int video_device,const int * attrib_list)
PFNGLXBINDVIDEOIMAGENVPROC	./GL/glxew.h	/^typedef int ( * PFNGLXBINDVIDEOIMAGENVPROC) (Display* dpy, GLXVideoDeviceNV VideoDevice, GLXPbuf/;"	t	typeref:typename:int (*)(Display * dpy,GLXVideoDeviceNV VideoDevice,GLXPbuffer pbuf,int iVideoBuffer)
PFNGLXBLITCONTEXTFRAMEBUFFERAMDPROC	./GL/glxew.h	/^typedef void ( * PFNGLXBLITCONTEXTFRAMEBUFFERAMDPROC) (GLXContext dstCtx, GLint srcX0, GLint src/;"	t	typeref:typename:void (*)(GLXContext dstCtx,GLint srcX0,GLint srcY0,GLint srcX1,GLint srcY1,GLint dstX0,GLint dstY0,GLint dstX1,GLint dstY1,GLbitfield mask,GLenum filter)
PFNGLXCHANNELRECTSGIXPROC	./GL/glxew.h	/^typedef int ( * PFNGLXCHANNELRECTSGIXPROC) (Display* display, int screen, int channel, int x, in/;"	t	typeref:typename:int (*)(Display * display,int screen,int channel,int x,int y,int w,int h)
PFNGLXCHANNELRECTSYNCSGIXPROC	./GL/glxew.h	/^typedef int ( * PFNGLXCHANNELRECTSYNCSGIXPROC) (Display* display, int screen, int channel, GLenu/;"	t	typeref:typename:int (*)(Display * display,int screen,int channel,GLenum synctype)
PFNGLXCHOOSEFBCONFIGPROC	./GL/glxew.h	/^typedef GLXFBConfig* ( * PFNGLXCHOOSEFBCONFIGPROC) (Display *dpy, int screen, const int *attrib_/;"	t	typeref:typename:GLXFBConfig * (*)(Display * dpy,int screen,const int * attrib_list,int * nelements)
PFNGLXCHOOSEFBCONFIGSGIXPROC	./GL/glxew.h	/^typedef GLXFBConfigSGIX* ( * PFNGLXCHOOSEFBCONFIGSGIXPROC) (Display* dpy, int screen, int* attri/;"	t	typeref:typename:GLXFBConfigSGIX * (*)(Display * dpy,int screen,int * attrib_list,int * nelements)
PFNGLXCOPYBUFFERSUBDATANVPROC	./GL/glxew.h	/^typedef void ( * PFNGLXCOPYBUFFERSUBDATANVPROC) (Display* dpy, GLXContext readCtx, GLXContext wr/;"	t	typeref:typename:void (*)(Display * dpy,GLXContext readCtx,GLXContext writeCtx,GLenum readTarget,GLenum writeTarget,GLintptr readOffset,GLintptr writeOffset,GLsizeiptr size)
PFNGLXCOPYIMAGESUBDATANVPROC	./GL/glxew.h	/^typedef void ( * PFNGLXCOPYIMAGESUBDATANVPROC) (Display *dpy, GLXContext srcCtx, GLuint srcName,/;"	t	typeref:typename:void (*)(Display * dpy,GLXContext srcCtx,GLuint srcName,GLenum srcTarget,GLint srcLevel,GLint srcX,GLint srcY,GLint srcZ,GLXContext dstCtx,GLuint dstName,GLenum dstTarget,GLint dstLevel,GLint dstX,GLint dstY,GLint dstZ,GLsizei width,GLsizei height,GLsizei depth)
PFNGLXCOPYSUBBUFFERMESAPROC	./GL/glxew.h	/^typedef void ( * PFNGLXCOPYSUBBUFFERMESAPROC) (Display* dpy, GLXDrawable drawable, int x, int y,/;"	t	typeref:typename:void (*)(Display * dpy,GLXDrawable drawable,int x,int y,int width,int height)
PFNGLXCREATEASSOCIATEDCONTEXTAMDPROC	./GL/glxew.h	/^typedef GLXContext ( * PFNGLXCREATEASSOCIATEDCONTEXTAMDPROC) (unsigned int id, GLXContext share_/;"	t	typeref:typename:GLXContext (*)(unsigned int id,GLXContext share_list)
PFNGLXCREATEASSOCIATEDCONTEXTATTRIBSAMDPROC	./GL/glxew.h	/^typedef GLXContext ( * PFNGLXCREATEASSOCIATEDCONTEXTATTRIBSAMDPROC) (unsigned int id, GLXContext/;"	t	typeref:typename:GLXContext (*)(unsigned int id,GLXContext share_context,const int * attribList)
PFNGLXCREATECONTEXTATTRIBSARBPROC	./GL/glxew.h	/^typedef GLXContext ( * PFNGLXCREATECONTEXTATTRIBSARBPROC) (Display* dpy, GLXFBConfig config, GLX/;"	t	typeref:typename:GLXContext (*)(Display * dpy,GLXFBConfig config,GLXContext share_context,Bool direct,const int * attrib_list)
PFNGLXCREATECONTEXTWITHCONFIGSGIXPROC	./GL/glxew.h	/^typedef GLXContext ( * PFNGLXCREATECONTEXTWITHCONFIGSGIXPROC) (Display* dpy, GLXFBConfigSGIX con/;"	t	typeref:typename:GLXContext (*)(Display * dpy,GLXFBConfigSGIX config,int render_type,GLXContext share_list,Bool direct)
PFNGLXCREATEGLXPBUFFERSGIXPROC	./GL/glxew.h	/^typedef GLXPbufferSGIX ( * PFNGLXCREATEGLXPBUFFERSGIXPROC) (Display* dpy, GLXFBConfigSGIX config/;"	t	typeref:typename:GLXPbufferSGIX (*)(Display * dpy,GLXFBConfigSGIX config,unsigned int width,unsigned int height,int * attrib_list)
PFNGLXCREATEGLXPIXMAPMESAPROC	./GL/glxew.h	/^typedef GLXPixmap ( * PFNGLXCREATEGLXPIXMAPMESAPROC) (Display* dpy, XVisualInfo* visual, Pixmap /;"	t	typeref:typename:GLXPixmap (*)(Display * dpy,XVisualInfo * visual,Pixmap pixmap,Colormap cmap)
PFNGLXCREATEGLXPIXMAPWITHCONFIGSGIXPROC	./GL/glxew.h	/^typedef GLXPixmap ( * PFNGLXCREATEGLXPIXMAPWITHCONFIGSGIXPROC) (Display* dpy, GLXFBConfigSGIX co/;"	t	typeref:typename:GLXPixmap (*)(Display * dpy,GLXFBConfigSGIX config,Pixmap pixmap)
PFNGLXCREATENEWCONTEXTPROC	./GL/glxew.h	/^typedef GLXContext ( * PFNGLXCREATENEWCONTEXTPROC) (Display *dpy, GLXFBConfig config, int render/;"	t	typeref:typename:GLXContext (*)(Display * dpy,GLXFBConfig config,int render_type,GLXContext share_list,Bool direct)
PFNGLXCREATEPBUFFERPROC	./GL/glxew.h	/^typedef GLXPbuffer ( * PFNGLXCREATEPBUFFERPROC) (Display *dpy, GLXFBConfig config, const int *at/;"	t	typeref:typename:GLXPbuffer (*)(Display * dpy,GLXFBConfig config,const int * attrib_list)
PFNGLXCREATEPIXMAPPROC	./GL/glxew.h	/^typedef GLXPixmap ( * PFNGLXCREATEPIXMAPPROC) (Display *dpy, GLXFBConfig config, Pixmap pixmap, /;"	t	typeref:typename:GLXPixmap (*)(Display * dpy,GLXFBConfig config,Pixmap pixmap,const int * attrib_list)
PFNGLXCREATEWINDOWPROC	./GL/glxew.h	/^typedef GLXWindow ( * PFNGLXCREATEWINDOWPROC) (Display *dpy, GLXFBConfig config, Window win, con/;"	t	typeref:typename:GLXWindow (*)(Display * dpy,GLXFBConfig config,Window win,const int * attrib_list)
PFNGLXCUSHIONSGIPROC	./GL/glxew.h	/^typedef void ( * PFNGLXCUSHIONSGIPROC) (Display* dpy, Window window, float cushion);$/;"	t	typeref:typename:void (*)(Display * dpy,Window window,float cushion)
PFNGLXDELAYBEFORESWAPNVPROC	./GL/glxew.h	/^typedef Bool ( * PFNGLXDELAYBEFORESWAPNVPROC) (Display* dpy, GLXDrawable drawable, GLfloat secon/;"	t	typeref:typename:Bool (*)(Display * dpy,GLXDrawable drawable,GLfloat seconds)
PFNGLXDELETEASSOCIATEDCONTEXTAMDPROC	./GL/glxew.h	/^typedef Bool ( * PFNGLXDELETEASSOCIATEDCONTEXTAMDPROC) (GLXContext ctx);$/;"	t	typeref:typename:Bool (*)(GLXContext ctx)
PFNGLXDESTROYGLXPBUFFERSGIXPROC	./GL/glxew.h	/^typedef void ( * PFNGLXDESTROYGLXPBUFFERSGIXPROC) (Display* dpy, GLXPbufferSGIX pbuf);$/;"	t	typeref:typename:void (*)(Display * dpy,GLXPbufferSGIX pbuf)
PFNGLXDESTROYHYPERPIPECONFIGSGIXPROC	./GL/glxew.h	/^typedef int ( * PFNGLXDESTROYHYPERPIPECONFIGSGIXPROC) (Display *dpy, int hpId);$/;"	t	typeref:typename:int (*)(Display * dpy,int hpId)
PFNGLXDESTROYPBUFFERPROC	./GL/glxew.h	/^typedef void ( * PFNGLXDESTROYPBUFFERPROC) (Display *dpy, GLXPbuffer pbuf);$/;"	t	typeref:typename:void (*)(Display * dpy,GLXPbuffer pbuf)
PFNGLXDESTROYPIXMAPPROC	./GL/glxew.h	/^typedef void ( * PFNGLXDESTROYPIXMAPPROC) (Display *dpy, GLXPixmap pixmap);$/;"	t	typeref:typename:void (*)(Display * dpy,GLXPixmap pixmap)
PFNGLXDESTROYWINDOWPROC	./GL/glxew.h	/^typedef void ( * PFNGLXDESTROYWINDOWPROC) (Display *dpy, GLXWindow win);$/;"	t	typeref:typename:void (*)(Display * dpy,GLXWindow win)
PFNGLXDRAWABLEATTRIBATIPROC	./GL/glxew.h	/^typedef void ( * PFNGLXDRAWABLEATTRIBATIPROC) (Display *dpy, GLXDrawable draw, const int *attrib/;"	t	typeref:typename:void (*)(Display * dpy,GLXDrawable draw,const int * attrib_list)
PFNGLXENUMERATEVIDEOCAPTUREDEVICESNVPROC	./GL/glxew.h	/^typedef GLXVideoCaptureDeviceNV* ( * PFNGLXENUMERATEVIDEOCAPTUREDEVICESNVPROC) (Display* dpy, in/;"	t	typeref:typename:GLXVideoCaptureDeviceNV * (*)(Display * dpy,int screen,int * nelements)
PFNGLXENUMERATEVIDEODEVICESNVPROC	./GL/glxew.h	/^typedef unsigned int* ( * PFNGLXENUMERATEVIDEODEVICESNVPROC) (Display* dpy, int screen, int* nel/;"	t	typeref:typename:unsigned int * (*)(Display * dpy,int screen,int * nelements)
PFNGLXFREECONTEXTEXTPROC	./GL/glxew.h	/^typedef void ( * PFNGLXFREECONTEXTEXTPROC) (Display* dpy, GLXContext context);$/;"	t	typeref:typename:void (*)(Display * dpy,GLXContext context)
PFNGLXFREEMEMORYNVPROC	./GL/glxew.h	/^typedef void ( * PFNGLXFREEMEMORYNVPROC) (void *pointer);$/;"	t	typeref:typename:void (*)(void * pointer)
PFNGLXGETAGPOFFSETMESAPROC	./GL/glxew.h	/^typedef unsigned int ( * PFNGLXGETAGPOFFSETMESAPROC) (const void* pointer);$/;"	t	typeref:typename:unsigned int (*)(const void * pointer)
PFNGLXGETCONTEXTGPUIDAMDPROC	./GL/glxew.h	/^typedef unsigned int ( * PFNGLXGETCONTEXTGPUIDAMDPROC) (GLXContext ctx);$/;"	t	typeref:typename:unsigned int (*)(GLXContext ctx)
PFNGLXGETCONTEXTIDEXTPROC	./GL/glxew.h	/^typedef GLXContextID ( * PFNGLXGETCONTEXTIDEXTPROC) (const GLXContext context);$/;"	t	typeref:typename:GLXContextID (*)(const GLXContext context)
PFNGLXGETCURRENTASSOCIATEDCONTEXTAMDPROC	./GL/glxew.h	/^typedef GLXContext ( * PFNGLXGETCURRENTASSOCIATEDCONTEXTAMDPROC) (void);$/;"	t	typeref:typename:GLXContext (*)(void)
PFNGLXGETCURRENTDISPLAYEXTPROC	./GL/glxew.h	/^typedef Display* ( * PFNGLXGETCURRENTDISPLAYEXTPROC) (void);$/;"	t	typeref:typename:Display * (*)(void)
PFNGLXGETCURRENTDISPLAYPROC	./GL/glxew.h	/^typedef Display* ( * PFNGLXGETCURRENTDISPLAYPROC) (void);$/;"	t	typeref:typename:Display * (*)(void)
PFNGLXGETCURRENTREADDRAWABLEPROC	./GL/glxew.h	/^typedef GLXDrawable ( * PFNGLXGETCURRENTREADDRAWABLEPROC) (void);$/;"	t	typeref:typename:GLXDrawable (*)(void)
PFNGLXGETCURRENTREADDRAWABLESGIPROC	./GL/glxew.h	/^typedef GLXDrawable ( * PFNGLXGETCURRENTREADDRAWABLESGIPROC) (void);$/;"	t	typeref:typename:GLXDrawable (*)(void)
PFNGLXGETFBCONFIGATTRIBPROC	./GL/glxew.h	/^typedef int ( * PFNGLXGETFBCONFIGATTRIBPROC) (Display *dpy, GLXFBConfig config, int attribute, i/;"	t	typeref:typename:int (*)(Display * dpy,GLXFBConfig config,int attribute,int * value)
PFNGLXGETFBCONFIGATTRIBSGIXPROC	./GL/glxew.h	/^typedef int ( * PFNGLXGETFBCONFIGATTRIBSGIXPROC) (Display* dpy, GLXFBConfigSGIX config, int attr/;"	t	typeref:typename:int (*)(Display * dpy,GLXFBConfigSGIX config,int attribute,int * value)
PFNGLXGETFBCONFIGFROMVISUALSGIXPROC	./GL/glxew.h	/^typedef GLXFBConfigSGIX ( * PFNGLXGETFBCONFIGFROMVISUALSGIXPROC) (Display* dpy, XVisualInfo* vis/;"	t	typeref:typename:GLXFBConfigSGIX (*)(Display * dpy,XVisualInfo * vis)
PFNGLXGETFBCONFIGSPROC	./GL/glxew.h	/^typedef GLXFBConfig* ( * PFNGLXGETFBCONFIGSPROC) (Display *dpy, int screen, int *nelements);$/;"	t	typeref:typename:GLXFBConfig * (*)(Display * dpy,int screen,int * nelements)
PFNGLXGETGPUIDSAMDPROC	./GL/glxew.h	/^typedef unsigned int ( * PFNGLXGETGPUIDSAMDPROC) (unsigned int maxCount, unsigned int* ids);$/;"	t	typeref:typename:unsigned int (*)(unsigned int maxCount,unsigned int * ids)
PFNGLXGETGPUINFOAMDPROC	./GL/glxew.h	/^typedef int ( * PFNGLXGETGPUINFOAMDPROC) (unsigned int id, int property, GLenum dataType, unsign/;"	t	typeref:typename:int (*)(unsigned int id,int property,GLenum dataType,unsigned int size,void * data)
PFNGLXGETMSCRATEOMLPROC	./GL/glxew.h	/^typedef Bool ( * PFNGLXGETMSCRATEOMLPROC) (Display* dpy, GLXDrawable drawable, int32_t* numerato/;"	t	typeref:typename:Bool (*)(Display * dpy,GLXDrawable drawable,int32_t * numerator,int32_t * denominator)
PFNGLXGETSELECTEDEVENTPROC	./GL/glxew.h	/^typedef void ( * PFNGLXGETSELECTEDEVENTPROC) (Display *dpy, GLXDrawable draw, unsigned long *eve/;"	t	typeref:typename:void (*)(Display * dpy,GLXDrawable draw,unsigned long * event_mask)
PFNGLXGETSELECTEDEVENTSGIXPROC	./GL/glxew.h	/^typedef void ( * PFNGLXGETSELECTEDEVENTSGIXPROC) (Display* dpy, GLXDrawable drawable, unsigned l/;"	t	typeref:typename:void (*)(Display * dpy,GLXDrawable drawable,unsigned long * mask)
PFNGLXGETSWAPINTERVALMESAPROC	./GL/glxew.h	/^typedef int ( * PFNGLXGETSWAPINTERVALMESAPROC) (void);$/;"	t	typeref:typename:int (*)(void)
PFNGLXGETSYNCVALUESOMLPROC	./GL/glxew.h	/^typedef Bool ( * PFNGLXGETSYNCVALUESOMLPROC) (Display* dpy, GLXDrawable drawable, int64_t* ust, /;"	t	typeref:typename:Bool (*)(Display * dpy,GLXDrawable drawable,int64_t * ust,int64_t * msc,int64_t * sbc)
PFNGLXGETTRANSPARENTINDEXSUNPROC	./GL/glxew.h	/^typedef Status ( * PFNGLXGETTRANSPARENTINDEXSUNPROC) (Display* dpy, Window overlay, Window under/;"	t	typeref:typename:Status (*)(Display * dpy,Window overlay,Window underlay,unsigned long * pTransparentIndex)
PFNGLXGETVIDEODEVICENVPROC	./GL/glxew.h	/^typedef int ( * PFNGLXGETVIDEODEVICENVPROC) (Display* dpy, int screen, int numVideoDevices, GLXV/;"	t	typeref:typename:int (*)(Display * dpy,int screen,int numVideoDevices,GLXVideoDeviceNV * pVideoDevice)
PFNGLXGETVIDEOINFONVPROC	./GL/glxew.h	/^typedef int ( * PFNGLXGETVIDEOINFONVPROC) (Display* dpy, int screen, GLXVideoDeviceNV VideoDevic/;"	t	typeref:typename:int (*)(Display * dpy,int screen,GLXVideoDeviceNV VideoDevice,unsigned long * pulCounterOutputPbuffer,unsigned long * pulCounterOutputVideo)
PFNGLXGETVIDEORESIZESUNPROC	./GL/glxew.h	/^typedef int ( * PFNGLXGETVIDEORESIZESUNPROC) (Display* display, GLXDrawable window, float* facto/;"	t	typeref:typename:int (*)(Display * display,GLXDrawable window,float * factor)
PFNGLXGETVIDEOSYNCSGIPROC	./GL/glxew.h	/^typedef int ( * PFNGLXGETVIDEOSYNCSGIPROC) (unsigned int* count);$/;"	t	typeref:typename:int (*)(unsigned int * count)
PFNGLXGETVISUALFROMFBCONFIGPROC	./GL/glxew.h	/^typedef XVisualInfo* ( * PFNGLXGETVISUALFROMFBCONFIGPROC) (Display *dpy, GLXFBConfig config);$/;"	t	typeref:typename:XVisualInfo * (*)(Display * dpy,GLXFBConfig config)
PFNGLXGETVISUALFROMFBCONFIGSGIXPROC	./GL/glxew.h	/^typedef XVisualInfo* ( * PFNGLXGETVISUALFROMFBCONFIGSGIXPROC) (Display* dpy, GLXFBConfigSGIX con/;"	t	typeref:typename:XVisualInfo * (*)(Display * dpy,GLXFBConfigSGIX config)
PFNGLXHYPERPIPEATTRIBSGIXPROC	./GL/glxew.h	/^typedef int ( * PFNGLXHYPERPIPEATTRIBSGIXPROC) (Display *dpy, int timeSlice, int attrib, int siz/;"	t	typeref:typename:int (*)(Display * dpy,int timeSlice,int attrib,int size,void * attribList)
PFNGLXHYPERPIPECONFIGSGIXPROC	./GL/glxew.h	/^typedef int ( * PFNGLXHYPERPIPECONFIGSGIXPROC) (Display *dpy, int networkId, int npipes, GLXHype/;"	t	typeref:typename:int (*)(Display * dpy,int networkId,int npipes,GLXHyperpipeConfigSGIX * cfg,int * hpId)
PFNGLXIMPORTCONTEXTEXTPROC	./GL/glxew.h	/^typedef GLXContext ( * PFNGLXIMPORTCONTEXTEXTPROC) (Display* dpy, GLXContextID contextID);$/;"	t	typeref:typename:GLXContext (*)(Display * dpy,GLXContextID contextID)
PFNGLXJOINSWAPGROUPNVPROC	./GL/glxew.h	/^typedef Bool ( * PFNGLXJOINSWAPGROUPNVPROC) (Display* dpy, GLXDrawable drawable, GLuint group);$/;"	t	typeref:typename:Bool (*)(Display * dpy,GLXDrawable drawable,GLuint group)
PFNGLXJOINSWAPGROUPSGIXPROC	./GL/glxew.h	/^typedef void ( * PFNGLXJOINSWAPGROUPSGIXPROC) (Display* dpy, GLXDrawable drawable, GLXDrawable m/;"	t	typeref:typename:void (*)(Display * dpy,GLXDrawable drawable,GLXDrawable member)
PFNGLXLOCKVIDEOCAPTUREDEVICENVPROC	./GL/glxew.h	/^typedef void ( * PFNGLXLOCKVIDEOCAPTUREDEVICENVPROC) (Display* dpy, GLXVideoCaptureDeviceNV devi/;"	t	typeref:typename:void (*)(Display * dpy,GLXVideoCaptureDeviceNV device)
PFNGLXMAKEASSOCIATEDCONTEXTCURRENTAMDPROC	./GL/glxew.h	/^typedef Bool ( * PFNGLXMAKEASSOCIATEDCONTEXTCURRENTAMDPROC) (GLXContext ctx);$/;"	t	typeref:typename:Bool (*)(GLXContext ctx)
PFNGLXMAKECONTEXTCURRENTPROC	./GL/glxew.h	/^typedef Bool ( * PFNGLXMAKECONTEXTCURRENTPROC) (Display *display, GLXDrawable draw, GLXDrawable /;"	t	typeref:typename:Bool (*)(Display * display,GLXDrawable draw,GLXDrawable read,GLXContext ctx)
PFNGLXMAKECURRENTREADSGIPROC	./GL/glxew.h	/^typedef Bool ( * PFNGLXMAKECURRENTREADSGIPROC) (Display* dpy, GLXDrawable draw, GLXDrawable read/;"	t	typeref:typename:Bool (*)(Display * dpy,GLXDrawable draw,GLXDrawable read,GLXContext ctx)
PFNGLXNAMEDCOPYBUFFERSUBDATANVPROC	./GL/glxew.h	/^typedef void ( * PFNGLXNAMEDCOPYBUFFERSUBDATANVPROC) (Display* dpy, GLXContext readCtx, GLXConte/;"	t	typeref:typename:void (*)(Display * dpy,GLXContext readCtx,GLXContext writeCtx,GLuint readBuffer,GLuint writeBuffer,GLintptr readOffset,GLintptr writeOffset,GLsizeiptr size)
PFNGLXQUERYCHANNELDELTASSGIXPROC	./GL/glxew.h	/^typedef int ( * PFNGLXQUERYCHANNELDELTASSGIXPROC) (Display* display, int screen, int channel, in/;"	t	typeref:typename:int (*)(Display * display,int screen,int channel,int * x,int * y,int * w,int * h)
PFNGLXQUERYCHANNELRECTSGIXPROC	./GL/glxew.h	/^typedef int ( * PFNGLXQUERYCHANNELRECTSGIXPROC) (Display* display, int screen, int channel, int*/;"	t	typeref:typename:int (*)(Display * display,int screen,int channel,int * dx,int * dy,int * dw,int * dh)
PFNGLXQUERYCONTEXTINFOEXTPROC	./GL/glxew.h	/^typedef int ( * PFNGLXQUERYCONTEXTINFOEXTPROC) (Display* dpy, GLXContext context, int attribute,/;"	t	typeref:typename:int (*)(Display * dpy,GLXContext context,int attribute,int * value)
PFNGLXQUERYCONTEXTPROC	./GL/glxew.h	/^typedef int ( * PFNGLXQUERYCONTEXTPROC) (Display *dpy, GLXContext ctx, int attribute, int *value/;"	t	typeref:typename:int (*)(Display * dpy,GLXContext ctx,int attribute,int * value)
PFNGLXQUERYCURRENTRENDERERINTEGERMESAPROC	./GL/glxew.h	/^typedef Bool ( * PFNGLXQUERYCURRENTRENDERERINTEGERMESAPROC) (int attribute, unsigned int* value)/;"	t	typeref:typename:Bool (*)(int attribute,unsigned int * value)
PFNGLXQUERYCURRENTRENDERERSTRINGMESAPROC	./GL/glxew.h	/^typedef const char* ( * PFNGLXQUERYCURRENTRENDERERSTRINGMESAPROC) (int attribute);$/;"	t	typeref:typename:const char * (*)(int attribute)
PFNGLXQUERYDRAWABLEPROC	./GL/glxew.h	/^typedef void ( * PFNGLXQUERYDRAWABLEPROC) (Display *dpy, GLXDrawable draw, int attribute, unsign/;"	t	typeref:typename:void (*)(Display * dpy,GLXDrawable draw,int attribute,unsigned int * value)
PFNGLXQUERYFRAMECOUNTNVPROC	./GL/glxew.h	/^typedef Bool ( * PFNGLXQUERYFRAMECOUNTNVPROC) (Display* dpy, int screen, GLuint* count);$/;"	t	typeref:typename:Bool (*)(Display * dpy,int screen,GLuint * count)
PFNGLXQUERYGLXPBUFFERSGIXPROC	./GL/glxew.h	/^typedef void ( * PFNGLXQUERYGLXPBUFFERSGIXPROC) (Display* dpy, GLXPbufferSGIX pbuf, int attribut/;"	t	typeref:typename:void (*)(Display * dpy,GLXPbufferSGIX pbuf,int attribute,unsigned int * value)
PFNGLXQUERYHYPERPIPEATTRIBSGIXPROC	./GL/glxew.h	/^typedef int ( * PFNGLXQUERYHYPERPIPEATTRIBSGIXPROC) (Display *dpy, int timeSlice, int attrib, in/;"	t	typeref:typename:int (*)(Display * dpy,int timeSlice,int attrib,int size,void * returnAttribList)
PFNGLXQUERYHYPERPIPEBESTATTRIBSGIXPROC	./GL/glxew.h	/^typedef int ( * PFNGLXQUERYHYPERPIPEBESTATTRIBSGIXPROC) (Display *dpy, int timeSlice, int attrib/;"	t	typeref:typename:int (*)(Display * dpy,int timeSlice,int attrib,int size,void * attribList,void * returnAttribList)
PFNGLXQUERYHYPERPIPECONFIGSGIXPROC	./GL/glxew.h	/^typedef GLXHyperpipeConfigSGIX * ( * PFNGLXQUERYHYPERPIPECONFIGSGIXPROC) (Display *dpy, int hpId/;"	t	typeref:typename:GLXHyperpipeConfigSGIX * (*)(Display * dpy,int hpId,int * npipes)
PFNGLXQUERYHYPERPIPENETWORKSGIXPROC	./GL/glxew.h	/^typedef GLXHyperpipeNetworkSGIX * ( * PFNGLXQUERYHYPERPIPENETWORKSGIXPROC) (Display *dpy, int *n/;"	t	typeref:typename:GLXHyperpipeNetworkSGIX * (*)(Display * dpy,int * npipes)
PFNGLXQUERYMAXSWAPBARRIERSSGIXPROC	./GL/glxew.h	/^typedef Bool ( * PFNGLXQUERYMAXSWAPBARRIERSSGIXPROC) (Display* dpy, int screen, int* max);$/;"	t	typeref:typename:Bool (*)(Display * dpy,int screen,int * max)
PFNGLXQUERYMAXSWAPGROUPSNVPROC	./GL/glxew.h	/^typedef Bool ( * PFNGLXQUERYMAXSWAPGROUPSNVPROC) (Display* dpy, int screen, GLuint* maxGroups, G/;"	t	typeref:typename:Bool (*)(Display * dpy,int screen,GLuint * maxGroups,GLuint * maxBarriers)
PFNGLXQUERYRENDERERINTEGERMESAPROC	./GL/glxew.h	/^typedef Bool ( * PFNGLXQUERYRENDERERINTEGERMESAPROC) (Display* dpy, int screen, int renderer, in/;"	t	typeref:typename:Bool (*)(Display * dpy,int screen,int renderer,int attribute,unsigned int * value)
PFNGLXQUERYRENDERERSTRINGMESAPROC	./GL/glxew.h	/^typedef const char* ( * PFNGLXQUERYRENDERERSTRINGMESAPROC) (Display* dpy, int screen, int render/;"	t	typeref:typename:const char * (*)(Display * dpy,int screen,int renderer,int attribute)
PFNGLXQUERYSWAPGROUPNVPROC	./GL/glxew.h	/^typedef Bool ( * PFNGLXQUERYSWAPGROUPNVPROC) (Display* dpy, GLXDrawable drawable, GLuint* group,/;"	t	typeref:typename:Bool (*)(Display * dpy,GLXDrawable drawable,GLuint * group,GLuint * barrier)
PFNGLXQUERYVIDEOCAPTUREDEVICENVPROC	./GL/glxew.h	/^typedef int ( * PFNGLXQUERYVIDEOCAPTUREDEVICENVPROC) (Display* dpy, GLXVideoCaptureDeviceNV devi/;"	t	typeref:typename:int (*)(Display * dpy,GLXVideoCaptureDeviceNV device,int attribute,int * value)
PFNGLXRELEASEBUFFERSMESAPROC	./GL/glxew.h	/^typedef Bool ( * PFNGLXRELEASEBUFFERSMESAPROC) (Display* dpy, GLXDrawable drawable);$/;"	t	typeref:typename:Bool (*)(Display * dpy,GLXDrawable drawable)
PFNGLXRELEASETEXIMAGEATIPROC	./GL/glxew.h	/^typedef void ( * PFNGLXRELEASETEXIMAGEATIPROC) (Display *dpy, GLXPbuffer pbuf, int buffer);$/;"	t	typeref:typename:void (*)(Display * dpy,GLXPbuffer pbuf,int buffer)
PFNGLXRELEASETEXIMAGEEXTPROC	./GL/glxew.h	/^typedef void ( * PFNGLXRELEASETEXIMAGEEXTPROC) (Display* dpy, GLXDrawable drawable, int buffer);$/;"	t	typeref:typename:void (*)(Display * dpy,GLXDrawable drawable,int buffer)
PFNGLXRELEASEVIDEOCAPTUREDEVICENVPROC	./GL/glxew.h	/^typedef void ( * PFNGLXRELEASEVIDEOCAPTUREDEVICENVPROC) (Display* dpy, GLXVideoCaptureDeviceNV d/;"	t	typeref:typename:void (*)(Display * dpy,GLXVideoCaptureDeviceNV device)
PFNGLXRELEASEVIDEODEVICENVPROC	./GL/glxew.h	/^typedef int ( * PFNGLXRELEASEVIDEODEVICENVPROC) (Display* dpy, int screen, GLXVideoDeviceNV Vide/;"	t	typeref:typename:int (*)(Display * dpy,int screen,GLXVideoDeviceNV VideoDevice)
PFNGLXRELEASEVIDEOIMAGENVPROC	./GL/glxew.h	/^typedef int ( * PFNGLXRELEASEVIDEOIMAGENVPROC) (Display* dpy, GLXPbuffer pbuf);$/;"	t	typeref:typename:int (*)(Display * dpy,GLXPbuffer pbuf)
PFNGLXRESETFRAMECOUNTNVPROC	./GL/glxew.h	/^typedef Bool ( * PFNGLXRESETFRAMECOUNTNVPROC) (Display* dpy, int screen);$/;"	t	typeref:typename:Bool (*)(Display * dpy,int screen)
PFNGLXSELECTEVENTPROC	./GL/glxew.h	/^typedef void ( * PFNGLXSELECTEVENTPROC) (Display *dpy, GLXDrawable draw, unsigned long event_mas/;"	t	typeref:typename:void (*)(Display * dpy,GLXDrawable draw,unsigned long event_mask)
PFNGLXSELECTEVENTSGIXPROC	./GL/glxew.h	/^typedef void ( * PFNGLXSELECTEVENTSGIXPROC) (Display* dpy, GLXDrawable drawable, unsigned long m/;"	t	typeref:typename:void (*)(Display * dpy,GLXDrawable drawable,unsigned long mask)
PFNGLXSENDPBUFFERTOVIDEONVPROC	./GL/glxew.h	/^typedef int ( * PFNGLXSENDPBUFFERTOVIDEONVPROC) (Display* dpy, GLXPbuffer pbuf, int iBufferType,/;"	t	typeref:typename:int (*)(Display * dpy,GLXPbuffer pbuf,int iBufferType,unsigned long * pulCounterPbuffer,GLboolean bBlock)
PFNGLXSET3DFXMODEMESAPROC	./GL/glxew.h	/^typedef GLboolean ( * PFNGLXSET3DFXMODEMESAPROC) (GLint mode);$/;"	t	typeref:typename:GLboolean (*)(GLint mode)
PFNGLXSWAPBUFFERSMSCOMLPROC	./GL/glxew.h	/^typedef int64_t ( * PFNGLXSWAPBUFFERSMSCOMLPROC) (Display* dpy, GLXDrawable drawable, int64_t ta/;"	t	typeref:typename:int64_t (*)(Display * dpy,GLXDrawable drawable,int64_t target_msc,int64_t divisor,int64_t remainder)
PFNGLXSWAPINTERVALEXTPROC	./GL/glxew.h	/^typedef void ( * PFNGLXSWAPINTERVALEXTPROC) (Display* dpy, GLXDrawable drawable, int interval);$/;"	t	typeref:typename:void (*)(Display * dpy,GLXDrawable drawable,int interval)
PFNGLXSWAPINTERVALMESAPROC	./GL/glxew.h	/^typedef int ( * PFNGLXSWAPINTERVALMESAPROC) (unsigned int interval);$/;"	t	typeref:typename:int (*)(unsigned int interval)
PFNGLXSWAPINTERVALSGIPROC	./GL/glxew.h	/^typedef int ( * PFNGLXSWAPINTERVALSGIPROC) (int interval);$/;"	t	typeref:typename:int (*)(int interval)
PFNGLXVIDEORESIZESUNPROC	./GL/glxew.h	/^typedef int ( * PFNGLXVIDEORESIZESUNPROC) (Display* display, GLXDrawable window, float factor);$/;"	t	typeref:typename:int (*)(Display * display,GLXDrawable window,float factor)
PFNGLXWAITFORMSCOMLPROC	./GL/glxew.h	/^typedef Bool ( * PFNGLXWAITFORMSCOMLPROC) (Display* dpy, GLXDrawable drawable, int64_t target_ms/;"	t	typeref:typename:Bool (*)(Display * dpy,GLXDrawable drawable,int64_t target_msc,int64_t divisor,int64_t remainder,int64_t * ust,int64_t * msc,int64_t * sbc)
PFNGLXWAITFORSBCOMLPROC	./GL/glxew.h	/^typedef Bool ( * PFNGLXWAITFORSBCOMLPROC) (Display* dpy, GLXDrawable drawable, int64_t target_sb/;"	t	typeref:typename:Bool (*)(Display * dpy,GLXDrawable drawable,int64_t target_sbc,int64_t * ust,int64_t * msc,int64_t * sbc)
PFNGLXWAITVIDEOSYNCSGIPROC	./GL/glxew.h	/^typedef int ( * PFNGLXWAITVIDEOSYNCSGIPROC) (int divisor, int remainder, unsigned int* count);$/;"	t	typeref:typename:int (*)(int divisor,int remainder,unsigned int * count)
PFNWGLALLOCATEMEMORYNVPROC	./GL/wglew.h	/^typedef void* (WINAPI * PFNWGLALLOCATEMEMORYNVPROC) (GLsizei size, GLfloat readfreq, GLfloat wri/;"	t	typeref:typename:void * (WINAPI *)(GLsizei size,GLfloat readfreq,GLfloat writefreq,GLfloat priority)
PFNWGLASSOCIATEIMAGEBUFFEREVENTSI3DPROC	./GL/wglew.h	/^typedef BOOL (WINAPI * PFNWGLASSOCIATEIMAGEBUFFEREVENTSI3DPROC) (HDC hDC, const HANDLE* pEvent, /;"	t	typeref:typename:BOOL (WINAPI *)(HDC hDC,const HANDLE * pEvent,const LPVOID * pAddress,const DWORD * pSize,UINT count)
PFNWGLBEGINFRAMETRACKINGI3DPROC	./GL/wglew.h	/^typedef BOOL (WINAPI * PFNWGLBEGINFRAMETRACKINGI3DPROC) (void);$/;"	t	typeref:typename:BOOL (WINAPI *)(void)
PFNWGLBINDDISPLAYCOLORTABLEEXTPROC	./GL/wglew.h	/^typedef GLboolean (WINAPI * PFNWGLBINDDISPLAYCOLORTABLEEXTPROC) (GLushort id);$/;"	t	typeref:typename:GLboolean (WINAPI *)(GLushort id)
PFNWGLBINDSWAPBARRIERNVPROC	./GL/wglew.h	/^typedef BOOL (WINAPI * PFNWGLBINDSWAPBARRIERNVPROC) (GLuint group, GLuint barrier);$/;"	t	typeref:typename:BOOL (WINAPI *)(GLuint group,GLuint barrier)
PFNWGLBINDTEXIMAGEARBPROC	./GL/wglew.h	/^typedef BOOL (WINAPI * PFNWGLBINDTEXIMAGEARBPROC) (HPBUFFERARB hPbuffer, int iBuffer);$/;"	t	typeref:typename:BOOL (WINAPI *)(HPBUFFERARB hPbuffer,int iBuffer)
PFNWGLBINDVIDEOCAPTUREDEVICENVPROC	./GL/wglew.h	/^typedef BOOL (WINAPI * PFNWGLBINDVIDEOCAPTUREDEVICENVPROC) (UINT uVideoSlot, HVIDEOINPUTDEVICENV/;"	t	typeref:typename:BOOL (WINAPI *)(UINT uVideoSlot,HVIDEOINPUTDEVICENV hDevice)
PFNWGLBINDVIDEODEVICENVPROC	./GL/wglew.h	/^typedef BOOL (WINAPI * PFNWGLBINDVIDEODEVICENVPROC) (HDC hDc, unsigned int uVideoSlot, HVIDEOOUT/;"	t	typeref:typename:BOOL (WINAPI *)(HDC hDc,unsigned int uVideoSlot,HVIDEOOUTPUTDEVICENV hVideoDevice,const int * piAttribList)
PFNWGLBINDVIDEOIMAGENVPROC	./GL/wglew.h	/^typedef BOOL (WINAPI * PFNWGLBINDVIDEOIMAGENVPROC) (HPVIDEODEV hVideoDevice, HPBUFFERARB hPbuffe/;"	t	typeref:typename:BOOL (WINAPI *)(HPVIDEODEV hVideoDevice,HPBUFFERARB hPbuffer,int iVideoBuffer)
PFNWGLBLITCONTEXTFRAMEBUFFERAMDPROC	./GL/wglew.h	/^typedef VOID (WINAPI * PFNWGLBLITCONTEXTFRAMEBUFFERAMDPROC) (HGLRC dstCtx, GLint srcX0, GLint sr/;"	t	typeref:typename:VOID (WINAPI *)(HGLRC dstCtx,GLint srcX0,GLint srcY0,GLint srcX1,GLint srcY1,GLint dstX0,GLint dstY0,GLint dstX1,GLint dstY1,GLbitfield mask,GLenum filter)
PFNWGLCHOOSEPIXELFORMATARBPROC	./GL/wglew.h	/^typedef BOOL (WINAPI * PFNWGLCHOOSEPIXELFORMATARBPROC) (HDC hdc, const int* piAttribIList, const/;"	t	typeref:typename:BOOL (WINAPI *)(HDC hdc,const int * piAttribIList,const FLOAT * pfAttribFList,UINT nMaxFormats,int * piFormats,UINT * nNumFormats)
PFNWGLCHOOSEPIXELFORMATEXTPROC	./GL/wglew.h	/^typedef BOOL (WINAPI * PFNWGLCHOOSEPIXELFORMATEXTPROC) (HDC hdc, const int* piAttribIList, const/;"	t	typeref:typename:BOOL (WINAPI *)(HDC hdc,const int * piAttribIList,const FLOAT * pfAttribFList,UINT nMaxFormats,int * piFormats,UINT * nNumFormats)
PFNWGLCOPYIMAGESUBDATANVPROC	./GL/wglew.h	/^typedef BOOL (WINAPI * PFNWGLCOPYIMAGESUBDATANVPROC) (HGLRC hSrcRC, GLuint srcName, GLenum srcTa/;"	t	typeref:typename:BOOL (WINAPI *)(HGLRC hSrcRC,GLuint srcName,GLenum srcTarget,GLint srcLevel,GLint srcX,GLint srcY,GLint srcZ,HGLRC hDstRC,GLuint dstName,GLenum dstTarget,GLint dstLevel,GLint dstX,GLint dstY,GLint dstZ,GLsizei width,GLsizei height,GLsizei depth)
PFNWGLCREATEAFFINITYDCNVPROC	./GL/wglew.h	/^typedef HDC (WINAPI * PFNWGLCREATEAFFINITYDCNVPROC) (const HGPUNV *phGpuList);$/;"	t	typeref:typename:HDC (WINAPI *)(const HGPUNV * phGpuList)
PFNWGLCREATEASSOCIATEDCONTEXTAMDPROC	./GL/wglew.h	/^typedef HGLRC (WINAPI * PFNWGLCREATEASSOCIATEDCONTEXTAMDPROC) (UINT id);$/;"	t	typeref:typename:HGLRC (WINAPI *)(UINT id)
PFNWGLCREATEASSOCIATEDCONTEXTATTRIBSAMDPROC	./GL/wglew.h	/^typedef HGLRC (WINAPI * PFNWGLCREATEASSOCIATEDCONTEXTATTRIBSAMDPROC) (UINT id, HGLRC hShareConte/;"	t	typeref:typename:HGLRC (WINAPI *)(UINT id,HGLRC hShareContext,const int * attribList)
PFNWGLCREATEBUFFERREGIONARBPROC	./GL/wglew.h	/^typedef HANDLE (WINAPI * PFNWGLCREATEBUFFERREGIONARBPROC) (HDC hDC, int iLayerPlane, UINT uType)/;"	t	typeref:typename:HANDLE (WINAPI *)(HDC hDC,int iLayerPlane,UINT uType)
PFNWGLCREATECONTEXTATTRIBSARBPROC	./GL/wglew.h	/^typedef HGLRC (WINAPI * PFNWGLCREATECONTEXTATTRIBSARBPROC) (HDC hDC, HGLRC hShareContext, const /;"	t	typeref:typename:HGLRC (WINAPI *)(HDC hDC,HGLRC hShareContext,const int * attribList)
PFNWGLCREATEDISPLAYCOLORTABLEEXTPROC	./GL/wglew.h	/^typedef GLboolean (WINAPI * PFNWGLCREATEDISPLAYCOLORTABLEEXTPROC) (GLushort id);$/;"	t	typeref:typename:GLboolean (WINAPI *)(GLushort id)
PFNWGLCREATEIMAGEBUFFERI3DPROC	./GL/wglew.h	/^typedef LPVOID (WINAPI * PFNWGLCREATEIMAGEBUFFERI3DPROC) (HDC hDC, DWORD dwSize, UINT uFlags);$/;"	t	typeref:typename:LPVOID (WINAPI *)(HDC hDC,DWORD dwSize,UINT uFlags)
PFNWGLCREATEPBUFFERARBPROC	./GL/wglew.h	/^typedef HPBUFFERARB (WINAPI * PFNWGLCREATEPBUFFERARBPROC) (HDC hDC, int iPixelFormat, int iWidth/;"	t	typeref:typename:HPBUFFERARB (WINAPI *)(HDC hDC,int iPixelFormat,int iWidth,int iHeight,const int * piAttribList)
PFNWGLCREATEPBUFFEREXTPROC	./GL/wglew.h	/^typedef HPBUFFEREXT (WINAPI * PFNWGLCREATEPBUFFEREXTPROC) (HDC hDC, int iPixelFormat, int iWidth/;"	t	typeref:typename:HPBUFFEREXT (WINAPI *)(HDC hDC,int iPixelFormat,int iWidth,int iHeight,const int * piAttribList)
PFNWGLDELAYBEFORESWAPNVPROC	./GL/wglew.h	/^typedef BOOL (WINAPI * PFNWGLDELAYBEFORESWAPNVPROC) (HDC hDC, GLfloat seconds);$/;"	t	typeref:typename:BOOL (WINAPI *)(HDC hDC,GLfloat seconds)
PFNWGLDELETEASSOCIATEDCONTEXTAMDPROC	./GL/wglew.h	/^typedef BOOL (WINAPI * PFNWGLDELETEASSOCIATEDCONTEXTAMDPROC) (HGLRC hglrc);$/;"	t	typeref:typename:BOOL (WINAPI *)(HGLRC hglrc)
PFNWGLDELETEBUFFERREGIONARBPROC	./GL/wglew.h	/^typedef VOID (WINAPI * PFNWGLDELETEBUFFERREGIONARBPROC) (HANDLE hRegion);$/;"	t	typeref:typename:VOID (WINAPI *)(HANDLE hRegion)
PFNWGLDELETEDCNVPROC	./GL/wglew.h	/^typedef BOOL (WINAPI * PFNWGLDELETEDCNVPROC) (HDC hdc);$/;"	t	typeref:typename:BOOL (WINAPI *)(HDC hdc)
PFNWGLDESTROYDISPLAYCOLORTABLEEXTPROC	./GL/wglew.h	/^typedef VOID (WINAPI * PFNWGLDESTROYDISPLAYCOLORTABLEEXTPROC) (GLushort id);$/;"	t	typeref:typename:VOID (WINAPI *)(GLushort id)
PFNWGLDESTROYIMAGEBUFFERI3DPROC	./GL/wglew.h	/^typedef BOOL (WINAPI * PFNWGLDESTROYIMAGEBUFFERI3DPROC) (HDC hDC, LPVOID pAddress);$/;"	t	typeref:typename:BOOL (WINAPI *)(HDC hDC,LPVOID pAddress)
PFNWGLDESTROYPBUFFERARBPROC	./GL/wglew.h	/^typedef BOOL (WINAPI * PFNWGLDESTROYPBUFFERARBPROC) (HPBUFFERARB hPbuffer);$/;"	t	typeref:typename:BOOL (WINAPI *)(HPBUFFERARB hPbuffer)
PFNWGLDESTROYPBUFFEREXTPROC	./GL/wglew.h	/^typedef BOOL (WINAPI * PFNWGLDESTROYPBUFFEREXTPROC) (HPBUFFEREXT hPbuffer);$/;"	t	typeref:typename:BOOL (WINAPI *)(HPBUFFEREXT hPbuffer)
PFNWGLDISABLEFRAMELOCKI3DPROC	./GL/wglew.h	/^typedef BOOL (WINAPI * PFNWGLDISABLEFRAMELOCKI3DPROC) (void);$/;"	t	typeref:typename:BOOL (WINAPI *)(void)
PFNWGLDISABLEGENLOCKI3DPROC	./GL/wglew.h	/^typedef BOOL (WINAPI * PFNWGLDISABLEGENLOCKI3DPROC) (HDC hDC);$/;"	t	typeref:typename:BOOL (WINAPI *)(HDC hDC)
PFNWGLDXCLOSEDEVICENVPROC	./GL/wglew.h	/^typedef BOOL (WINAPI * PFNWGLDXCLOSEDEVICENVPROC) (HANDLE hDevice);$/;"	t	typeref:typename:BOOL (WINAPI *)(HANDLE hDevice)
PFNWGLDXLOCKOBJECTSNVPROC	./GL/wglew.h	/^typedef BOOL (WINAPI * PFNWGLDXLOCKOBJECTSNVPROC) (HANDLE hDevice, GLint count, HANDLE* hObjects/;"	t	typeref:typename:BOOL (WINAPI *)(HANDLE hDevice,GLint count,HANDLE * hObjects)
PFNWGLDXOBJECTACCESSNVPROC	./GL/wglew.h	/^typedef BOOL (WINAPI * PFNWGLDXOBJECTACCESSNVPROC) (HANDLE hObject, GLenum access);$/;"	t	typeref:typename:BOOL (WINAPI *)(HANDLE hObject,GLenum access)
PFNWGLDXOPENDEVICENVPROC	./GL/wglew.h	/^typedef HANDLE (WINAPI * PFNWGLDXOPENDEVICENVPROC) (void* dxDevice);$/;"	t	typeref:typename:HANDLE (WINAPI *)(void * dxDevice)
PFNWGLDXREGISTEROBJECTNVPROC	./GL/wglew.h	/^typedef HANDLE (WINAPI * PFNWGLDXREGISTEROBJECTNVPROC) (HANDLE hDevice, void* dxObject, GLuint n/;"	t	typeref:typename:HANDLE (WINAPI *)(HANDLE hDevice,void * dxObject,GLuint name,GLenum type,GLenum access)
PFNWGLDXSETRESOURCESHAREHANDLENVPROC	./GL/wglew.h	/^typedef BOOL (WINAPI * PFNWGLDXSETRESOURCESHAREHANDLENVPROC) (void* dxObject, HANDLE shareHandle/;"	t	typeref:typename:BOOL (WINAPI *)(void * dxObject,HANDLE shareHandle)
PFNWGLDXUNLOCKOBJECTSNVPROC	./GL/wglew.h	/^typedef BOOL (WINAPI * PFNWGLDXUNLOCKOBJECTSNVPROC) (HANDLE hDevice, GLint count, HANDLE* hObjec/;"	t	typeref:typename:BOOL (WINAPI *)(HANDLE hDevice,GLint count,HANDLE * hObjects)
PFNWGLDXUNREGISTEROBJECTNVPROC	./GL/wglew.h	/^typedef BOOL (WINAPI * PFNWGLDXUNREGISTEROBJECTNVPROC) (HANDLE hDevice, HANDLE hObject);$/;"	t	typeref:typename:BOOL (WINAPI *)(HANDLE hDevice,HANDLE hObject)
PFNWGLENABLEFRAMELOCKI3DPROC	./GL/wglew.h	/^typedef BOOL (WINAPI * PFNWGLENABLEFRAMELOCKI3DPROC) (void);$/;"	t	typeref:typename:BOOL (WINAPI *)(void)
PFNWGLENABLEGENLOCKI3DPROC	./GL/wglew.h	/^typedef BOOL (WINAPI * PFNWGLENABLEGENLOCKI3DPROC) (HDC hDC);$/;"	t	typeref:typename:BOOL (WINAPI *)(HDC hDC)
PFNWGLENDFRAMETRACKINGI3DPROC	./GL/wglew.h	/^typedef BOOL (WINAPI * PFNWGLENDFRAMETRACKINGI3DPROC) (void);$/;"	t	typeref:typename:BOOL (WINAPI *)(void)
PFNWGLENUMERATEVIDEOCAPTUREDEVICESNVPROC	./GL/wglew.h	/^typedef UINT (WINAPI * PFNWGLENUMERATEVIDEOCAPTUREDEVICESNVPROC) (HDC hDc, HVIDEOINPUTDEVICENV* /;"	t	typeref:typename:UINT (WINAPI *)(HDC hDc,HVIDEOINPUTDEVICENV * phDeviceList)
PFNWGLENUMERATEVIDEODEVICESNVPROC	./GL/wglew.h	/^typedef int (WINAPI * PFNWGLENUMERATEVIDEODEVICESNVPROC) (HDC hDc, HVIDEOOUTPUTDEVICENV* phDevic/;"	t	typeref:typename:int (WINAPI *)(HDC hDc,HVIDEOOUTPUTDEVICENV * phDeviceList)
PFNWGLENUMGPUDEVICESNVPROC	./GL/wglew.h	/^typedef BOOL (WINAPI * PFNWGLENUMGPUDEVICESNVPROC) (HGPUNV hGpu, UINT iDeviceIndex, PGPU_DEVICE /;"	t	typeref:typename:BOOL (WINAPI *)(HGPUNV hGpu,UINT iDeviceIndex,PGPU_DEVICE lpGpuDevice)
PFNWGLENUMGPUSFROMAFFINITYDCNVPROC	./GL/wglew.h	/^typedef BOOL (WINAPI * PFNWGLENUMGPUSFROMAFFINITYDCNVPROC) (HDC hAffinityDC, UINT iGpuIndex, HGP/;"	t	typeref:typename:BOOL (WINAPI *)(HDC hAffinityDC,UINT iGpuIndex,HGPUNV * hGpu)
PFNWGLENUMGPUSNVPROC	./GL/wglew.h	/^typedef BOOL (WINAPI * PFNWGLENUMGPUSNVPROC) (UINT iGpuIndex, HGPUNV *phGpu);$/;"	t	typeref:typename:BOOL (WINAPI *)(UINT iGpuIndex,HGPUNV * phGpu)
PFNWGLFREEMEMORYNVPROC	./GL/wglew.h	/^typedef void (WINAPI * PFNWGLFREEMEMORYNVPROC) (void* pointer);$/;"	t	typeref:typename:void (WINAPI *)(void * pointer)
PFNWGLGENLOCKSAMPLERATEI3DPROC	./GL/wglew.h	/^typedef BOOL (WINAPI * PFNWGLGENLOCKSAMPLERATEI3DPROC) (HDC hDC, UINT uRate);$/;"	t	typeref:typename:BOOL (WINAPI *)(HDC hDC,UINT uRate)
PFNWGLGENLOCKSOURCEDELAYI3DPROC	./GL/wglew.h	/^typedef BOOL (WINAPI * PFNWGLGENLOCKSOURCEDELAYI3DPROC) (HDC hDC, UINT uDelay);$/;"	t	typeref:typename:BOOL (WINAPI *)(HDC hDC,UINT uDelay)
PFNWGLGENLOCKSOURCEEDGEI3DPROC	./GL/wglew.h	/^typedef BOOL (WINAPI * PFNWGLGENLOCKSOURCEEDGEI3DPROC) (HDC hDC, UINT uEdge);$/;"	t	typeref:typename:BOOL (WINAPI *)(HDC hDC,UINT uEdge)
PFNWGLGENLOCKSOURCEI3DPROC	./GL/wglew.h	/^typedef BOOL (WINAPI * PFNWGLGENLOCKSOURCEI3DPROC) (HDC hDC, UINT uSource);$/;"	t	typeref:typename:BOOL (WINAPI *)(HDC hDC,UINT uSource)
PFNWGLGETCONTEXTGPUIDAMDPROC	./GL/wglew.h	/^typedef UINT (WINAPI * PFNWGLGETCONTEXTGPUIDAMDPROC) (HGLRC hglrc);$/;"	t	typeref:typename:UINT (WINAPI *)(HGLRC hglrc)
PFNWGLGETCURRENTASSOCIATEDCONTEXTAMDPROC	./GL/wglew.h	/^typedef HGLRC (WINAPI * PFNWGLGETCURRENTASSOCIATEDCONTEXTAMDPROC) (void);$/;"	t	typeref:typename:HGLRC (WINAPI *)(void)
PFNWGLGETCURRENTREADDCARBPROC	./GL/wglew.h	/^typedef HDC (WINAPI * PFNWGLGETCURRENTREADDCARBPROC) (void);$/;"	t	typeref:typename:HDC (WINAPI *)(void)
PFNWGLGETCURRENTREADDCEXTPROC	./GL/wglew.h	/^typedef HDC (WINAPI * PFNWGLGETCURRENTREADDCEXTPROC) (void);$/;"	t	typeref:typename:HDC (WINAPI *)(void)
PFNWGLGETDIGITALVIDEOPARAMETERSI3DPROC	./GL/wglew.h	/^typedef BOOL (WINAPI * PFNWGLGETDIGITALVIDEOPARAMETERSI3DPROC) (HDC hDC, int iAttribute, int* pi/;"	t	typeref:typename:BOOL (WINAPI *)(HDC hDC,int iAttribute,int * piValue)
PFNWGLGETEXTENSIONSSTRINGARBPROC	./GL/wglew.h	/^typedef const char* (WINAPI * PFNWGLGETEXTENSIONSSTRINGARBPROC) (HDC hdc);$/;"	t	typeref:typename:const char * (WINAPI *)(HDC hdc)
PFNWGLGETEXTENSIONSSTRINGEXTPROC	./GL/wglew.h	/^typedef const char* (WINAPI * PFNWGLGETEXTENSIONSSTRINGEXTPROC) (void);$/;"	t	typeref:typename:const char * (WINAPI *)(void)
PFNWGLGETFRAMEUSAGEI3DPROC	./GL/wglew.h	/^typedef BOOL (WINAPI * PFNWGLGETFRAMEUSAGEI3DPROC) (float* pUsage);$/;"	t	typeref:typename:BOOL (WINAPI *)(float * pUsage)
PFNWGLGETGAMMATABLEI3DPROC	./GL/wglew.h	/^typedef BOOL (WINAPI * PFNWGLGETGAMMATABLEI3DPROC) (HDC hDC, int iEntries, USHORT* puRed, USHORT/;"	t	typeref:typename:BOOL (WINAPI *)(HDC hDC,int iEntries,USHORT * puRed,USHORT * puGreen,USHORT * puBlue)
PFNWGLGETGAMMATABLEPARAMETERSI3DPROC	./GL/wglew.h	/^typedef BOOL (WINAPI * PFNWGLGETGAMMATABLEPARAMETERSI3DPROC) (HDC hDC, int iAttribute, int* piVa/;"	t	typeref:typename:BOOL (WINAPI *)(HDC hDC,int iAttribute,int * piValue)
PFNWGLGETGENLOCKSAMPLERATEI3DPROC	./GL/wglew.h	/^typedef BOOL (WINAPI * PFNWGLGETGENLOCKSAMPLERATEI3DPROC) (HDC hDC, UINT* uRate);$/;"	t	typeref:typename:BOOL (WINAPI *)(HDC hDC,UINT * uRate)
PFNWGLGETGENLOCKSOURCEDELAYI3DPROC	./GL/wglew.h	/^typedef BOOL (WINAPI * PFNWGLGETGENLOCKSOURCEDELAYI3DPROC) (HDC hDC, UINT* uDelay);$/;"	t	typeref:typename:BOOL (WINAPI *)(HDC hDC,UINT * uDelay)
PFNWGLGETGENLOCKSOURCEEDGEI3DPROC	./GL/wglew.h	/^typedef BOOL (WINAPI * PFNWGLGETGENLOCKSOURCEEDGEI3DPROC) (HDC hDC, UINT* uEdge);$/;"	t	typeref:typename:BOOL (WINAPI *)(HDC hDC,UINT * uEdge)
PFNWGLGETGENLOCKSOURCEI3DPROC	./GL/wglew.h	/^typedef BOOL (WINAPI * PFNWGLGETGENLOCKSOURCEI3DPROC) (HDC hDC, UINT* uSource);$/;"	t	typeref:typename:BOOL (WINAPI *)(HDC hDC,UINT * uSource)
PFNWGLGETGPUIDSAMDPROC	./GL/wglew.h	/^typedef UINT (WINAPI * PFNWGLGETGPUIDSAMDPROC) (UINT maxCount, UINT* ids);$/;"	t	typeref:typename:UINT (WINAPI *)(UINT maxCount,UINT * ids)
PFNWGLGETGPUINFOAMDPROC	./GL/wglew.h	/^typedef INT (WINAPI * PFNWGLGETGPUINFOAMDPROC) (UINT id, INT property, GLenum dataType, UINT siz/;"	t	typeref:typename:INT (WINAPI *)(UINT id,INT property,GLenum dataType,UINT size,void * data)
PFNWGLGETMSCRATEOMLPROC	./GL/wglew.h	/^typedef BOOL (WINAPI * PFNWGLGETMSCRATEOMLPROC) (HDC hdc, INT32* numerator, INT32* denominator);$/;"	t	typeref:typename:BOOL (WINAPI *)(HDC hdc,INT32 * numerator,INT32 * denominator)
PFNWGLGETPBUFFERDCARBPROC	./GL/wglew.h	/^typedef HDC (WINAPI * PFNWGLGETPBUFFERDCARBPROC) (HPBUFFERARB hPbuffer);$/;"	t	typeref:typename:HDC (WINAPI *)(HPBUFFERARB hPbuffer)
PFNWGLGETPBUFFERDCEXTPROC	./GL/wglew.h	/^typedef HDC (WINAPI * PFNWGLGETPBUFFERDCEXTPROC) (HPBUFFEREXT hPbuffer);$/;"	t	typeref:typename:HDC (WINAPI *)(HPBUFFEREXT hPbuffer)
PFNWGLGETPIXELFORMATATTRIBFVARBPROC	./GL/wglew.h	/^typedef BOOL (WINAPI * PFNWGLGETPIXELFORMATATTRIBFVARBPROC) (HDC hdc, int iPixelFormat, int iLay/;"	t	typeref:typename:BOOL (WINAPI *)(HDC hdc,int iPixelFormat,int iLayerPlane,UINT nAttributes,const int * piAttributes,FLOAT * pfValues)
PFNWGLGETPIXELFORMATATTRIBFVEXTPROC	./GL/wglew.h	/^typedef BOOL (WINAPI * PFNWGLGETPIXELFORMATATTRIBFVEXTPROC) (HDC hdc, int iPixelFormat, int iLay/;"	t	typeref:typename:BOOL (WINAPI *)(HDC hdc,int iPixelFormat,int iLayerPlane,UINT nAttributes,int * piAttributes,FLOAT * pfValues)
PFNWGLGETPIXELFORMATATTRIBIVARBPROC	./GL/wglew.h	/^typedef BOOL (WINAPI * PFNWGLGETPIXELFORMATATTRIBIVARBPROC) (HDC hdc, int iPixelFormat, int iLay/;"	t	typeref:typename:BOOL (WINAPI *)(HDC hdc,int iPixelFormat,int iLayerPlane,UINT nAttributes,const int * piAttributes,int * piValues)
PFNWGLGETPIXELFORMATATTRIBIVEXTPROC	./GL/wglew.h	/^typedef BOOL (WINAPI * PFNWGLGETPIXELFORMATATTRIBIVEXTPROC) (HDC hdc, int iPixelFormat, int iLay/;"	t	typeref:typename:BOOL (WINAPI *)(HDC hdc,int iPixelFormat,int iLayerPlane,UINT nAttributes,int * piAttributes,int * piValues)
PFNWGLGETSWAPINTERVALEXTPROC	./GL/wglew.h	/^typedef int (WINAPI * PFNWGLGETSWAPINTERVALEXTPROC) (void);$/;"	t	typeref:typename:int (WINAPI *)(void)
PFNWGLGETSYNCVALUESOMLPROC	./GL/wglew.h	/^typedef BOOL (WINAPI * PFNWGLGETSYNCVALUESOMLPROC) (HDC hdc, INT64* ust, INT64* msc, INT64* sbc)/;"	t	typeref:typename:BOOL (WINAPI *)(HDC hdc,INT64 * ust,INT64 * msc,INT64 * sbc)
PFNWGLGETVIDEODEVICENVPROC	./GL/wglew.h	/^typedef BOOL (WINAPI * PFNWGLGETVIDEODEVICENVPROC) (HDC hDC, int numDevices, HPVIDEODEV* hVideoD/;"	t	typeref:typename:BOOL (WINAPI *)(HDC hDC,int numDevices,HPVIDEODEV * hVideoDevice)
PFNWGLGETVIDEOINFONVPROC	./GL/wglew.h	/^typedef BOOL (WINAPI * PFNWGLGETVIDEOINFONVPROC) (HPVIDEODEV hpVideoDevice, unsigned long* pulCo/;"	t	typeref:typename:BOOL (WINAPI *)(HPVIDEODEV hpVideoDevice,unsigned long * pulCounterOutputPbuffer,unsigned long * pulCounterOutputVideo)
PFNWGLISENABLEDFRAMELOCKI3DPROC	./GL/wglew.h	/^typedef BOOL (WINAPI * PFNWGLISENABLEDFRAMELOCKI3DPROC) (BOOL* pFlag);$/;"	t	typeref:typename:BOOL (WINAPI *)(BOOL * pFlag)
PFNWGLISENABLEDGENLOCKI3DPROC	./GL/wglew.h	/^typedef BOOL (WINAPI * PFNWGLISENABLEDGENLOCKI3DPROC) (HDC hDC, BOOL* pFlag);$/;"	t	typeref:typename:BOOL (WINAPI *)(HDC hDC,BOOL * pFlag)
PFNWGLJOINSWAPGROUPNVPROC	./GL/wglew.h	/^typedef BOOL (WINAPI * PFNWGLJOINSWAPGROUPNVPROC) (HDC hDC, GLuint group);$/;"	t	typeref:typename:BOOL (WINAPI *)(HDC hDC,GLuint group)
PFNWGLLOADDISPLAYCOLORTABLEEXTPROC	./GL/wglew.h	/^typedef GLboolean (WINAPI * PFNWGLLOADDISPLAYCOLORTABLEEXTPROC) (const GLushort* table, GLuint l/;"	t	typeref:typename:GLboolean (WINAPI *)(const GLushort * table,GLuint length)
PFNWGLLOCKVIDEOCAPTUREDEVICENVPROC	./GL/wglew.h	/^typedef BOOL (WINAPI * PFNWGLLOCKVIDEOCAPTUREDEVICENVPROC) (HDC hDc, HVIDEOINPUTDEVICENV hDevice/;"	t	typeref:typename:BOOL (WINAPI *)(HDC hDc,HVIDEOINPUTDEVICENV hDevice)
PFNWGLMAKEASSOCIATEDCONTEXTCURRENTAMDPROC	./GL/wglew.h	/^typedef BOOL (WINAPI * PFNWGLMAKEASSOCIATEDCONTEXTCURRENTAMDPROC) (HGLRC hglrc);$/;"	t	typeref:typename:BOOL (WINAPI *)(HGLRC hglrc)
PFNWGLMAKECONTEXTCURRENTARBPROC	./GL/wglew.h	/^typedef BOOL (WINAPI * PFNWGLMAKECONTEXTCURRENTARBPROC) (HDC hDrawDC, HDC hReadDC, HGLRC hglrc);$/;"	t	typeref:typename:BOOL (WINAPI *)(HDC hDrawDC,HDC hReadDC,HGLRC hglrc)
PFNWGLMAKECONTEXTCURRENTEXTPROC	./GL/wglew.h	/^typedef BOOL (WINAPI * PFNWGLMAKECONTEXTCURRENTEXTPROC) (HDC hDrawDC, HDC hReadDC, HGLRC hglrc);$/;"	t	typeref:typename:BOOL (WINAPI *)(HDC hDrawDC,HDC hReadDC,HGLRC hglrc)
PFNWGLQUERYCURRENTCONTEXTNVPROC	./GL/wglew.h	/^typedef BOOL (WINAPI * PFNWGLQUERYCURRENTCONTEXTNVPROC) (int iAttribute, int* piValue);$/;"	t	typeref:typename:BOOL (WINAPI *)(int iAttribute,int * piValue)
PFNWGLQUERYFRAMECOUNTNVPROC	./GL/wglew.h	/^typedef BOOL (WINAPI * PFNWGLQUERYFRAMECOUNTNVPROC) (HDC hDC, GLuint* count);$/;"	t	typeref:typename:BOOL (WINAPI *)(HDC hDC,GLuint * count)
PFNWGLQUERYFRAMELOCKMASTERI3DPROC	./GL/wglew.h	/^typedef BOOL (WINAPI * PFNWGLQUERYFRAMELOCKMASTERI3DPROC) (BOOL* pFlag);$/;"	t	typeref:typename:BOOL (WINAPI *)(BOOL * pFlag)
PFNWGLQUERYFRAMETRACKINGI3DPROC	./GL/wglew.h	/^typedef BOOL (WINAPI * PFNWGLQUERYFRAMETRACKINGI3DPROC) (DWORD* pFrameCount, DWORD* pMissedFrame/;"	t	typeref:typename:BOOL (WINAPI *)(DWORD * pFrameCount,DWORD * pMissedFrames,float * pLastMissedUsage)
PFNWGLQUERYGENLOCKMAXSOURCEDELAYI3DPROC	./GL/wglew.h	/^typedef BOOL (WINAPI * PFNWGLQUERYGENLOCKMAXSOURCEDELAYI3DPROC) (HDC hDC, UINT* uMaxLineDelay, U/;"	t	typeref:typename:BOOL (WINAPI *)(HDC hDC,UINT * uMaxLineDelay,UINT * uMaxPixelDelay)
PFNWGLQUERYMAXSWAPGROUPSNVPROC	./GL/wglew.h	/^typedef BOOL (WINAPI * PFNWGLQUERYMAXSWAPGROUPSNVPROC) (HDC hDC, GLuint* maxGroups, GLuint* maxB/;"	t	typeref:typename:BOOL (WINAPI *)(HDC hDC,GLuint * maxGroups,GLuint * maxBarriers)
PFNWGLQUERYPBUFFERARBPROC	./GL/wglew.h	/^typedef BOOL (WINAPI * PFNWGLQUERYPBUFFERARBPROC) (HPBUFFERARB hPbuffer, int iAttribute, int* pi/;"	t	typeref:typename:BOOL (WINAPI *)(HPBUFFERARB hPbuffer,int iAttribute,int * piValue)
PFNWGLQUERYPBUFFEREXTPROC	./GL/wglew.h	/^typedef BOOL (WINAPI * PFNWGLQUERYPBUFFEREXTPROC) (HPBUFFEREXT hPbuffer, int iAttribute, int* pi/;"	t	typeref:typename:BOOL (WINAPI *)(HPBUFFEREXT hPbuffer,int iAttribute,int * piValue)
PFNWGLQUERYSWAPGROUPNVPROC	./GL/wglew.h	/^typedef BOOL (WINAPI * PFNWGLQUERYSWAPGROUPNVPROC) (HDC hDC, GLuint* group, GLuint* barrier);$/;"	t	typeref:typename:BOOL (WINAPI *)(HDC hDC,GLuint * group,GLuint * barrier)
PFNWGLQUERYVIDEOCAPTUREDEVICENVPROC	./GL/wglew.h	/^typedef BOOL (WINAPI * PFNWGLQUERYVIDEOCAPTUREDEVICENVPROC) (HDC hDc, HVIDEOINPUTDEVICENV hDevic/;"	t	typeref:typename:BOOL (WINAPI *)(HDC hDc,HVIDEOINPUTDEVICENV hDevice,int iAttribute,int * piValue)
PFNWGLRELEASEIMAGEBUFFEREVENTSI3DPROC	./GL/wglew.h	/^typedef BOOL (WINAPI * PFNWGLRELEASEIMAGEBUFFEREVENTSI3DPROC) (HDC hDC, const LPVOID* pAddress, /;"	t	typeref:typename:BOOL (WINAPI *)(HDC hDC,const LPVOID * pAddress,UINT count)
PFNWGLRELEASEPBUFFERDCARBPROC	./GL/wglew.h	/^typedef int (WINAPI * PFNWGLRELEASEPBUFFERDCARBPROC) (HPBUFFERARB hPbuffer, HDC hDC);$/;"	t	typeref:typename:int (WINAPI *)(HPBUFFERARB hPbuffer,HDC hDC)
PFNWGLRELEASEPBUFFERDCEXTPROC	./GL/wglew.h	/^typedef int (WINAPI * PFNWGLRELEASEPBUFFERDCEXTPROC) (HPBUFFEREXT hPbuffer, HDC hDC);$/;"	t	typeref:typename:int (WINAPI *)(HPBUFFEREXT hPbuffer,HDC hDC)
PFNWGLRELEASETEXIMAGEARBPROC	./GL/wglew.h	/^typedef BOOL (WINAPI * PFNWGLRELEASETEXIMAGEARBPROC) (HPBUFFERARB hPbuffer, int iBuffer);$/;"	t	typeref:typename:BOOL (WINAPI *)(HPBUFFERARB hPbuffer,int iBuffer)
PFNWGLRELEASEVIDEOCAPTUREDEVICENVPROC	./GL/wglew.h	/^typedef BOOL (WINAPI * PFNWGLRELEASEVIDEOCAPTUREDEVICENVPROC) (HDC hDc, HVIDEOINPUTDEVICENV hDev/;"	t	typeref:typename:BOOL (WINAPI *)(HDC hDc,HVIDEOINPUTDEVICENV hDevice)
PFNWGLRELEASEVIDEODEVICENVPROC	./GL/wglew.h	/^typedef BOOL (WINAPI * PFNWGLRELEASEVIDEODEVICENVPROC) (HPVIDEODEV hVideoDevice);$/;"	t	typeref:typename:BOOL (WINAPI *)(HPVIDEODEV hVideoDevice)
PFNWGLRELEASEVIDEOIMAGENVPROC	./GL/wglew.h	/^typedef BOOL (WINAPI * PFNWGLRELEASEVIDEOIMAGENVPROC) (HPBUFFERARB hPbuffer, int iVideoBuffer);$/;"	t	typeref:typename:BOOL (WINAPI *)(HPBUFFERARB hPbuffer,int iVideoBuffer)
PFNWGLRESETFRAMECOUNTNVPROC	./GL/wglew.h	/^typedef BOOL (WINAPI * PFNWGLRESETFRAMECOUNTNVPROC) (HDC hDC);$/;"	t	typeref:typename:BOOL (WINAPI *)(HDC hDC)
PFNWGLRESTOREBUFFERREGIONARBPROC	./GL/wglew.h	/^typedef BOOL (WINAPI * PFNWGLRESTOREBUFFERREGIONARBPROC) (HANDLE hRegion, int x, int y, int widt/;"	t	typeref:typename:BOOL (WINAPI *)(HANDLE hRegion,int x,int y,int width,int height,int xSrc,int ySrc)
PFNWGLSAVEBUFFERREGIONARBPROC	./GL/wglew.h	/^typedef BOOL (WINAPI * PFNWGLSAVEBUFFERREGIONARBPROC) (HANDLE hRegion, int x, int y, int width, /;"	t	typeref:typename:BOOL (WINAPI *)(HANDLE hRegion,int x,int y,int width,int height)
PFNWGLSENDPBUFFERTOVIDEONVPROC	./GL/wglew.h	/^typedef BOOL (WINAPI * PFNWGLSENDPBUFFERTOVIDEONVPROC) (HPBUFFERARB hPbuffer, int iBufferType, u/;"	t	typeref:typename:BOOL (WINAPI *)(HPBUFFERARB hPbuffer,int iBufferType,unsigned long * pulCounterPbuffer,BOOL bBlock)
PFNWGLSETDIGITALVIDEOPARAMETERSI3DPROC	./GL/wglew.h	/^typedef BOOL (WINAPI * PFNWGLSETDIGITALVIDEOPARAMETERSI3DPROC) (HDC hDC, int iAttribute, const i/;"	t	typeref:typename:BOOL (WINAPI *)(HDC hDC,int iAttribute,const int * piValue)
PFNWGLSETGAMMATABLEI3DPROC	./GL/wglew.h	/^typedef BOOL (WINAPI * PFNWGLSETGAMMATABLEI3DPROC) (HDC hDC, int iEntries, const USHORT* puRed, /;"	t	typeref:typename:BOOL (WINAPI *)(HDC hDC,int iEntries,const USHORT * puRed,const USHORT * puGreen,const USHORT * puBlue)
PFNWGLSETGAMMATABLEPARAMETERSI3DPROC	./GL/wglew.h	/^typedef BOOL (WINAPI * PFNWGLSETGAMMATABLEPARAMETERSI3DPROC) (HDC hDC, int iAttribute, const int/;"	t	typeref:typename:BOOL (WINAPI *)(HDC hDC,int iAttribute,const int * piValue)
PFNWGLSETPBUFFERATTRIBARBPROC	./GL/wglew.h	/^typedef BOOL (WINAPI * PFNWGLSETPBUFFERATTRIBARBPROC) (HPBUFFERARB hPbuffer, const int* piAttrib/;"	t	typeref:typename:BOOL (WINAPI *)(HPBUFFERARB hPbuffer,const int * piAttribList)
PFNWGLSETSTEREOEMITTERSTATE3DLPROC	./GL/wglew.h	/^typedef BOOL (WINAPI * PFNWGLSETSTEREOEMITTERSTATE3DLPROC) (HDC hDC, UINT uState);$/;"	t	typeref:typename:BOOL (WINAPI *)(HDC hDC,UINT uState)
PFNWGLSWAPBUFFERSMSCOMLPROC	./GL/wglew.h	/^typedef INT64 (WINAPI * PFNWGLSWAPBUFFERSMSCOMLPROC) (HDC hdc, INT64 target_msc, INT64 divisor, /;"	t	typeref:typename:INT64 (WINAPI *)(HDC hdc,INT64 target_msc,INT64 divisor,INT64 remainder)
PFNWGLSWAPINTERVALEXTPROC	./GL/wglew.h	/^typedef BOOL (WINAPI * PFNWGLSWAPINTERVALEXTPROC) (int interval);$/;"	t	typeref:typename:BOOL (WINAPI *)(int interval)
PFNWGLSWAPLAYERBUFFERSMSCOMLPROC	./GL/wglew.h	/^typedef INT64 (WINAPI * PFNWGLSWAPLAYERBUFFERSMSCOMLPROC) (HDC hdc, INT fuPlanes, INT64 target_m/;"	t	typeref:typename:INT64 (WINAPI *)(HDC hdc,INT fuPlanes,INT64 target_msc,INT64 divisor,INT64 remainder)
PFNWGLWAITFORMSCOMLPROC	./GL/wglew.h	/^typedef BOOL (WINAPI * PFNWGLWAITFORMSCOMLPROC) (HDC hdc, INT64 target_msc, INT64 divisor, INT64/;"	t	typeref:typename:BOOL (WINAPI *)(HDC hdc,INT64 target_msc,INT64 divisor,INT64 remainder,INT64 * ust,INT64 * msc,INT64 * sbc)
PFNWGLWAITFORSBCOMLPROC	./GL/wglew.h	/^typedef BOOL (WINAPI * PFNWGLWAITFORSBCOMLPROC) (HDC hdc, INT64 target_sbc, INT64* ust, INT64* m/;"	t	typeref:typename:BOOL (WINAPI *)(HDC hdc,INT64 target_sbc,INT64 * ust,INT64 * msc,INT64 * sbc)
PGPU_DEVICE	./GL/wglew.h	/^} GPU_DEVICE, *PGPU_DEVICE;$/;"	t	typeref:struct:_GPU_DEVICE *
PLATFORM_ID	./glm/build/CMakeFiles/3.31.0-rc1/CompilerIdC/CMakeCCompilerId.c	/^#  define PLATFORM_ID /;"	d	file:
PLATFORM_ID	./glm/build/CMakeFiles/3.31.0-rc1/CompilerIdC/CMakeCCompilerId.c	/^#  define PLATFORM_ID$/;"	d	file:
PLATFORM_ID	./glm/build/CMakeFiles/3.31.0-rc1/CompilerIdC/CMakeCCompilerId.c	/^# define PLATFORM_ID /;"	d	file:
PLATFORM_ID	./glm/build/CMakeFiles/3.31.0-rc1/CompilerIdC/CMakeCCompilerId.c	/^# define PLATFORM_ID$/;"	d	file:
PLATFORM_ID	./glm/build/CMakeFiles/3.31.0-rc1/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^#  define PLATFORM_ID /;"	d	file:
PLATFORM_ID	./glm/build/CMakeFiles/3.31.0-rc1/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^#  define PLATFORM_ID$/;"	d	file:
PLATFORM_ID	./glm/build/CMakeFiles/3.31.0-rc1/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^# define PLATFORM_ID /;"	d	file:
PLATFORM_ID	./glm/build/CMakeFiles/3.31.0-rc1/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^# define PLATFORM_ID$/;"	d	file:
SIMULATE_ID	./glm/build/CMakeFiles/3.31.0-rc1/CompilerIdC/CMakeCCompilerId.c	/^#  define SIMULATE_ID /;"	d	file:
SIMULATE_ID	./glm/build/CMakeFiles/3.31.0-rc1/CompilerIdC/CMakeCCompilerId.c	/^# define SIMULATE_ID /;"	d	file:
SIMULATE_ID	./glm/build/CMakeFiles/3.31.0-rc1/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^#  define SIMULATE_ID /;"	d	file:
SIMULATE_ID	./glm/build/CMakeFiles/3.31.0-rc1/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^# define SIMULATE_ID /;"	d	file:
SIMULATE_VERSION_MAJOR	./glm/build/CMakeFiles/3.31.0-rc1/CompilerIdC/CMakeCCompilerId.c	/^#  define SIMULATE_VERSION_MAJOR /;"	d	file:
SIMULATE_VERSION_MAJOR	./glm/build/CMakeFiles/3.31.0-rc1/CompilerIdC/CMakeCCompilerId.c	/^# define SIMULATE_VERSION_MAJOR /;"	d	file:
SIMULATE_VERSION_MAJOR	./glm/build/CMakeFiles/3.31.0-rc1/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^#  define SIMULATE_VERSION_MAJOR /;"	d	file:
SIMULATE_VERSION_MAJOR	./glm/build/CMakeFiles/3.31.0-rc1/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^# define SIMULATE_VERSION_MAJOR /;"	d	file:
SIMULATE_VERSION_MINOR	./glm/build/CMakeFiles/3.31.0-rc1/CompilerIdC/CMakeCCompilerId.c	/^#  define SIMULATE_VERSION_MINOR /;"	d	file:
SIMULATE_VERSION_MINOR	./glm/build/CMakeFiles/3.31.0-rc1/CompilerIdC/CMakeCCompilerId.c	/^# define SIMULATE_VERSION_MINOR /;"	d	file:
SIMULATE_VERSION_MINOR	./glm/build/CMakeFiles/3.31.0-rc1/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^#  define SIMULATE_VERSION_MINOR /;"	d	file:
SIMULATE_VERSION_MINOR	./glm/build/CMakeFiles/3.31.0-rc1/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^# define SIMULATE_VERSION_MINOR /;"	d	file:
SIMULATE_VERSION_PATCH	./glm/build/CMakeFiles/3.31.0-rc1/CompilerIdC/CMakeCCompilerId.c	/^#   define SIMULATE_VERSION_PATCH /;"	d	file:
SIMULATE_VERSION_PATCH	./glm/build/CMakeFiles/3.31.0-rc1/CompilerIdC/CMakeCCompilerId.c	/^#  define SIMULATE_VERSION_PATCH /;"	d	file:
SIMULATE_VERSION_PATCH	./glm/build/CMakeFiles/3.31.0-rc1/CompilerIdC/CMakeCCompilerId.c	/^# define SIMULATE_VERSION_PATCH /;"	d	file:
SIMULATE_VERSION_PATCH	./glm/build/CMakeFiles/3.31.0-rc1/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^#   define SIMULATE_VERSION_PATCH /;"	d	file:
SIMULATE_VERSION_PATCH	./glm/build/CMakeFiles/3.31.0-rc1/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^#  define SIMULATE_VERSION_PATCH /;"	d	file:
SIMULATE_VERSION_PATCH	./glm/build/CMakeFiles/3.31.0-rc1/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^# define SIMULATE_VERSION_PATCH /;"	d	file:
STRINGIFY	./glm/build/CMakeFiles/3.31.0-rc1/CompilerIdC/CMakeCCompilerId.c	/^#define STRINGIFY(X) STRINGIFY_/;"	d	file:
STRINGIFY	./glm/build/CMakeFiles/3.31.0-rc1/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^#define STRINGIFY(X) STRINGIFY_/;"	d	file:
STRINGIFY_HELPER	./glm/build/CMakeFiles/3.31.0-rc1/CompilerIdC/CMakeCCompilerId.c	/^#define STRINGIFY_HELPER(/;"	d	file:
STRINGIFY_HELPER	./glm/build/CMakeFiles/3.31.0-rc1/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^#define STRINGIFY_HELPER(/;"	d	file:
Stub	./glm/detail/_swizzle.hpp	/^		struct Stub {};$/;"	s	struct:glm::detail::_swizzle_base2
WGLEW_3DFX_multisample	./GL/wglew.h	/^#define WGLEW_3DFX_multisample WGLEW_GET_VAR(__WGLEW_3DFX_multisample)/;"	d
WGLEW_3DL_stereo_control	./GL/wglew.h	/^#define WGLEW_3DL_stereo_control WGLEW_GET_VAR(__WGLEW_3DL_stereo_control)/;"	d
WGLEW_AMD_gpu_association	./GL/wglew.h	/^#define WGLEW_AMD_gpu_association WGLEW_GET_VAR(__WGLEW_AMD_gpu_association)/;"	d
WGLEW_ARB_buffer_region	./GL/wglew.h	/^#define WGLEW_ARB_buffer_region WGLEW_GET_VAR(__WGLEW_ARB_buffer_region)/;"	d
WGLEW_ARB_context_flush_control	./GL/wglew.h	/^#define WGLEW_ARB_context_flush_control WGLEW_GET_VAR(__WGLEW_ARB_context_flush_control)/;"	d
WGLEW_ARB_create_context	./GL/wglew.h	/^#define WGLEW_ARB_create_context WGLEW_GET_VAR(__WGLEW_ARB_create_context)/;"	d
WGLEW_ARB_create_context_no_error	./GL/wglew.h	/^#define WGLEW_ARB_create_context_no_error WGLEW_GET_VAR(__WGLEW_ARB_create_context_no_error)/;"	d
WGLEW_ARB_create_context_profile	./GL/wglew.h	/^#define WGLEW_ARB_create_context_profile WGLEW_GET_VAR(__WGLEW_ARB_create_context_profile)/;"	d
WGLEW_ARB_create_context_robustness	./GL/wglew.h	/^#define WGLEW_ARB_create_context_robustness WGLEW_GET_VAR(__WGLEW_ARB_create_context_robustness)/;"	d
WGLEW_ARB_extensions_string	./GL/wglew.h	/^#define WGLEW_ARB_extensions_string WGLEW_GET_VAR(__WGLEW_ARB_extensions_string)/;"	d
WGLEW_ARB_framebuffer_sRGB	./GL/wglew.h	/^#define WGLEW_ARB_framebuffer_sRGB WGLEW_GET_VAR(__WGLEW_ARB_framebuffer_sRGB)/;"	d
WGLEW_ARB_make_current_read	./GL/wglew.h	/^#define WGLEW_ARB_make_current_read WGLEW_GET_VAR(__WGLEW_ARB_make_current_read)/;"	d
WGLEW_ARB_multisample	./GL/wglew.h	/^#define WGLEW_ARB_multisample WGLEW_GET_VAR(__WGLEW_ARB_multisample)/;"	d
WGLEW_ARB_pbuffer	./GL/wglew.h	/^#define WGLEW_ARB_pbuffer WGLEW_GET_VAR(__WGLEW_ARB_pbuffer)/;"	d
WGLEW_ARB_pixel_format	./GL/wglew.h	/^#define WGLEW_ARB_pixel_format WGLEW_GET_VAR(__WGLEW_ARB_pixel_format)/;"	d
WGLEW_ARB_pixel_format_float	./GL/wglew.h	/^#define WGLEW_ARB_pixel_format_float WGLEW_GET_VAR(__WGLEW_ARB_pixel_format_float)/;"	d
WGLEW_ARB_render_texture	./GL/wglew.h	/^#define WGLEW_ARB_render_texture WGLEW_GET_VAR(__WGLEW_ARB_render_texture)/;"	d
WGLEW_ARB_robustness_application_isolation	./GL/wglew.h	/^#define WGLEW_ARB_robustness_application_isolation WGLEW_GET_VAR(__WGLEW_ARB_robustness_applicat/;"	d
WGLEW_ARB_robustness_share_group_isolation	./GL/wglew.h	/^#define WGLEW_ARB_robustness_share_group_isolation WGLEW_GET_VAR(__WGLEW_ARB_robustness_share_gr/;"	d
WGLEW_ATI_pixel_format_float	./GL/wglew.h	/^#define WGLEW_ATI_pixel_format_float WGLEW_GET_VAR(__WGLEW_ATI_pixel_format_float)/;"	d
WGLEW_ATI_render_texture_rectangle	./GL/wglew.h	/^#define WGLEW_ATI_render_texture_rectangle WGLEW_GET_VAR(__WGLEW_ATI_render_texture_rectangle)/;"	d
WGLEW_EXT_colorspace	./GL/wglew.h	/^#define WGLEW_EXT_colorspace WGLEW_GET_VAR(__WGLEW_EXT_colorspace)/;"	d
WGLEW_EXT_create_context_es2_profile	./GL/wglew.h	/^#define WGLEW_EXT_create_context_es2_profile WGLEW_GET_VAR(__WGLEW_EXT_create_context_es2_profil/;"	d
WGLEW_EXT_create_context_es_profile	./GL/wglew.h	/^#define WGLEW_EXT_create_context_es_profile WGLEW_GET_VAR(__WGLEW_EXT_create_context_es_profile)/;"	d
WGLEW_EXT_depth_float	./GL/wglew.h	/^#define WGLEW_EXT_depth_float WGLEW_GET_VAR(__WGLEW_EXT_depth_float)/;"	d
WGLEW_EXT_display_color_table	./GL/wglew.h	/^#define WGLEW_EXT_display_color_table WGLEW_GET_VAR(__WGLEW_EXT_display_color_table)/;"	d
WGLEW_EXT_extensions_string	./GL/wglew.h	/^#define WGLEW_EXT_extensions_string WGLEW_GET_VAR(__WGLEW_EXT_extensions_string)/;"	d
WGLEW_EXT_framebuffer_sRGB	./GL/wglew.h	/^#define WGLEW_EXT_framebuffer_sRGB WGLEW_GET_VAR(__WGLEW_EXT_framebuffer_sRGB)/;"	d
WGLEW_EXT_make_current_read	./GL/wglew.h	/^#define WGLEW_EXT_make_current_read WGLEW_GET_VAR(__WGLEW_EXT_make_current_read)/;"	d
WGLEW_EXT_multisample	./GL/wglew.h	/^#define WGLEW_EXT_multisample WGLEW_GET_VAR(__WGLEW_EXT_multisample)/;"	d
WGLEW_EXT_pbuffer	./GL/wglew.h	/^#define WGLEW_EXT_pbuffer WGLEW_GET_VAR(__WGLEW_EXT_pbuffer)/;"	d
WGLEW_EXT_pixel_format	./GL/wglew.h	/^#define WGLEW_EXT_pixel_format WGLEW_GET_VAR(__WGLEW_EXT_pixel_format)/;"	d
WGLEW_EXT_pixel_format_packed_float	./GL/wglew.h	/^#define WGLEW_EXT_pixel_format_packed_float WGLEW_GET_VAR(__WGLEW_EXT_pixel_format_packed_float)/;"	d
WGLEW_EXT_swap_control	./GL/wglew.h	/^#define WGLEW_EXT_swap_control WGLEW_GET_VAR(__WGLEW_EXT_swap_control)/;"	d
WGLEW_EXT_swap_control_tear	./GL/wglew.h	/^#define WGLEW_EXT_swap_control_tear WGLEW_GET_VAR(__WGLEW_EXT_swap_control_tear)/;"	d
WGLEW_FUN_EXPORT	./GL/wglew.h	/^#define WGLEW_FUN_EXPORT /;"	d
WGLEW_GET_FUN	./GL/wglew.h	/^#define WGLEW_GET_FUN(/;"	d
WGLEW_GET_VAR	./GL/wglew.h	/^#define WGLEW_GET_VAR(/;"	d
WGLEW_I3D_digital_video_control	./GL/wglew.h	/^#define WGLEW_I3D_digital_video_control WGLEW_GET_VAR(__WGLEW_I3D_digital_video_control)/;"	d
WGLEW_I3D_gamma	./GL/wglew.h	/^#define WGLEW_I3D_gamma WGLEW_GET_VAR(__WGLEW_I3D_gamma)/;"	d
WGLEW_I3D_genlock	./GL/wglew.h	/^#define WGLEW_I3D_genlock WGLEW_GET_VAR(__WGLEW_I3D_genlock)/;"	d
WGLEW_I3D_image_buffer	./GL/wglew.h	/^#define WGLEW_I3D_image_buffer WGLEW_GET_VAR(__WGLEW_I3D_image_buffer)/;"	d
WGLEW_I3D_swap_frame_lock	./GL/wglew.h	/^#define WGLEW_I3D_swap_frame_lock WGLEW_GET_VAR(__WGLEW_I3D_swap_frame_lock)/;"	d
WGLEW_I3D_swap_frame_usage	./GL/wglew.h	/^#define WGLEW_I3D_swap_frame_usage WGLEW_GET_VAR(__WGLEW_I3D_swap_frame_usage)/;"	d
WGLEW_NV_DX_interop	./GL/wglew.h	/^#define WGLEW_NV_DX_interop WGLEW_GET_VAR(__WGLEW_NV_DX_interop)/;"	d
WGLEW_NV_DX_interop2	./GL/wglew.h	/^#define WGLEW_NV_DX_interop2 WGLEW_GET_VAR(__WGLEW_NV_DX_interop2)/;"	d
WGLEW_NV_copy_image	./GL/wglew.h	/^#define WGLEW_NV_copy_image WGLEW_GET_VAR(__WGLEW_NV_copy_image)/;"	d
WGLEW_NV_delay_before_swap	./GL/wglew.h	/^#define WGLEW_NV_delay_before_swap WGLEW_GET_VAR(__WGLEW_NV_delay_before_swap)/;"	d
WGLEW_NV_float_buffer	./GL/wglew.h	/^#define WGLEW_NV_float_buffer WGLEW_GET_VAR(__WGLEW_NV_float_buffer)/;"	d
WGLEW_NV_gpu_affinity	./GL/wglew.h	/^#define WGLEW_NV_gpu_affinity WGLEW_GET_VAR(__WGLEW_NV_gpu_affinity)/;"	d
WGLEW_NV_multigpu_context	./GL/wglew.h	/^#define WGLEW_NV_multigpu_context WGLEW_GET_VAR(__WGLEW_NV_multigpu_context)/;"	d
WGLEW_NV_multisample_coverage	./GL/wglew.h	/^#define WGLEW_NV_multisample_coverage WGLEW_GET_VAR(__WGLEW_NV_multisample_coverage)/;"	d
WGLEW_NV_present_video	./GL/wglew.h	/^#define WGLEW_NV_present_video WGLEW_GET_VAR(__WGLEW_NV_present_video)/;"	d
WGLEW_NV_render_depth_texture	./GL/wglew.h	/^#define WGLEW_NV_render_depth_texture WGLEW_GET_VAR(__WGLEW_NV_render_depth_texture)/;"	d
WGLEW_NV_render_texture_rectangle	./GL/wglew.h	/^#define WGLEW_NV_render_texture_rectangle WGLEW_GET_VAR(__WGLEW_NV_render_texture_rectangle)/;"	d
WGLEW_NV_swap_group	./GL/wglew.h	/^#define WGLEW_NV_swap_group WGLEW_GET_VAR(__WGLEW_NV_swap_group)/;"	d
WGLEW_NV_vertex_array_range	./GL/wglew.h	/^#define WGLEW_NV_vertex_array_range WGLEW_GET_VAR(__WGLEW_NV_vertex_array_range)/;"	d
WGLEW_NV_video_capture	./GL/wglew.h	/^#define WGLEW_NV_video_capture WGLEW_GET_VAR(__WGLEW_NV_video_capture)/;"	d
WGLEW_NV_video_output	./GL/wglew.h	/^#define WGLEW_NV_video_output WGLEW_GET_VAR(__WGLEW_NV_video_output)/;"	d
WGLEW_OML_sync_control	./GL/wglew.h	/^#define WGLEW_OML_sync_control WGLEW_GET_VAR(__WGLEW_OML_sync_control)/;"	d
WGLEW_VAR_EXPORT	./GL/wglew.h	/^#define WGLEW_VAR_EXPORT /;"	d
WGL_3DFX_multisample	./GL/wglew.h	/^#define WGL_3DFX_multisample /;"	d
WGL_3DL_stereo_control	./GL/wglew.h	/^#define WGL_3DL_stereo_control /;"	d
WGL_ACCELERATION_ARB	./GL/wglew.h	/^#define WGL_ACCELERATION_ARB /;"	d
WGL_ACCELERATION_EXT	./GL/wglew.h	/^#define WGL_ACCELERATION_EXT /;"	d
WGL_ACCESS_READ_ONLY_NV	./GL/wglew.h	/^#define WGL_ACCESS_READ_ONLY_NV /;"	d
WGL_ACCESS_READ_WRITE_NV	./GL/wglew.h	/^#define WGL_ACCESS_READ_WRITE_NV /;"	d
WGL_ACCESS_WRITE_DISCARD_NV	./GL/wglew.h	/^#define WGL_ACCESS_WRITE_DISCARD_NV /;"	d
WGL_ACCUM_ALPHA_BITS_ARB	./GL/wglew.h	/^#define WGL_ACCUM_ALPHA_BITS_ARB /;"	d
WGL_ACCUM_ALPHA_BITS_EXT	./GL/wglew.h	/^#define WGL_ACCUM_ALPHA_BITS_EXT /;"	d
WGL_ACCUM_BITS_ARB	./GL/wglew.h	/^#define WGL_ACCUM_BITS_ARB /;"	d
WGL_ACCUM_BITS_EXT	./GL/wglew.h	/^#define WGL_ACCUM_BITS_EXT /;"	d
WGL_ACCUM_BLUE_BITS_ARB	./GL/wglew.h	/^#define WGL_ACCUM_BLUE_BITS_ARB /;"	d
WGL_ACCUM_BLUE_BITS_EXT	./GL/wglew.h	/^#define WGL_ACCUM_BLUE_BITS_EXT /;"	d
WGL_ACCUM_GREEN_BITS_ARB	./GL/wglew.h	/^#define WGL_ACCUM_GREEN_BITS_ARB /;"	d
WGL_ACCUM_GREEN_BITS_EXT	./GL/wglew.h	/^#define WGL_ACCUM_GREEN_BITS_EXT /;"	d
WGL_ACCUM_RED_BITS_ARB	./GL/wglew.h	/^#define WGL_ACCUM_RED_BITS_ARB /;"	d
WGL_ACCUM_RED_BITS_EXT	./GL/wglew.h	/^#define WGL_ACCUM_RED_BITS_EXT /;"	d
WGL_ALPHA_BITS_ARB	./GL/wglew.h	/^#define WGL_ALPHA_BITS_ARB /;"	d
WGL_ALPHA_BITS_EXT	./GL/wglew.h	/^#define WGL_ALPHA_BITS_EXT /;"	d
WGL_ALPHA_SHIFT_ARB	./GL/wglew.h	/^#define WGL_ALPHA_SHIFT_ARB /;"	d
WGL_ALPHA_SHIFT_EXT	./GL/wglew.h	/^#define WGL_ALPHA_SHIFT_EXT /;"	d
WGL_AMD_gpu_association	./GL/wglew.h	/^#define WGL_AMD_gpu_association /;"	d
WGL_ARB_buffer_region	./GL/wglew.h	/^#define WGL_ARB_buffer_region /;"	d
WGL_ARB_context_flush_control	./GL/wglew.h	/^#define WGL_ARB_context_flush_control /;"	d
WGL_ARB_create_context	./GL/wglew.h	/^#define WGL_ARB_create_context /;"	d
WGL_ARB_create_context_no_error	./GL/wglew.h	/^#define WGL_ARB_create_context_no_error /;"	d
WGL_ARB_create_context_profile	./GL/wglew.h	/^#define WGL_ARB_create_context_profile /;"	d
WGL_ARB_create_context_robustness	./GL/wglew.h	/^#define WGL_ARB_create_context_robustness /;"	d
WGL_ARB_extensions_string	./GL/wglew.h	/^#define WGL_ARB_extensions_string /;"	d
WGL_ARB_framebuffer_sRGB	./GL/wglew.h	/^#define WGL_ARB_framebuffer_sRGB /;"	d
WGL_ARB_make_current_read	./GL/wglew.h	/^#define WGL_ARB_make_current_read /;"	d
WGL_ARB_multisample	./GL/wglew.h	/^#define WGL_ARB_multisample /;"	d
WGL_ARB_pbuffer	./GL/wglew.h	/^#define WGL_ARB_pbuffer /;"	d
WGL_ARB_pixel_format	./GL/wglew.h	/^#define WGL_ARB_pixel_format /;"	d
WGL_ARB_pixel_format_float	./GL/wglew.h	/^#define WGL_ARB_pixel_format_float /;"	d
WGL_ARB_render_texture	./GL/wglew.h	/^#define WGL_ARB_render_texture /;"	d
WGL_ARB_robustness_application_isolation	./GL/wglew.h	/^#define WGL_ARB_robustness_application_isolation /;"	d
WGL_ARB_robustness_share_group_isolation	./GL/wglew.h	/^#define WGL_ARB_robustness_share_group_isolation /;"	d
WGL_ATI_pixel_format_float	./GL/wglew.h	/^#define WGL_ATI_pixel_format_float /;"	d
WGL_ATI_render_texture_rectangle	./GL/wglew.h	/^#define WGL_ATI_render_texture_rectangle /;"	d
WGL_AUX0_ARB	./GL/wglew.h	/^#define WGL_AUX0_ARB /;"	d
WGL_AUX1_ARB	./GL/wglew.h	/^#define WGL_AUX1_ARB /;"	d
WGL_AUX2_ARB	./GL/wglew.h	/^#define WGL_AUX2_ARB /;"	d
WGL_AUX3_ARB	./GL/wglew.h	/^#define WGL_AUX3_ARB /;"	d
WGL_AUX4_ARB	./GL/wglew.h	/^#define WGL_AUX4_ARB /;"	d
WGL_AUX5_ARB	./GL/wglew.h	/^#define WGL_AUX5_ARB /;"	d
WGL_AUX6_ARB	./GL/wglew.h	/^#define WGL_AUX6_ARB /;"	d
WGL_AUX7_ARB	./GL/wglew.h	/^#define WGL_AUX7_ARB /;"	d
WGL_AUX8_ARB	./GL/wglew.h	/^#define WGL_AUX8_ARB /;"	d
WGL_AUX9_ARB	./GL/wglew.h	/^#define WGL_AUX9_ARB /;"	d
WGL_AUX_BUFFERS_ARB	./GL/wglew.h	/^#define WGL_AUX_BUFFERS_ARB /;"	d
WGL_AUX_BUFFERS_EXT	./GL/wglew.h	/^#define WGL_AUX_BUFFERS_EXT /;"	d
WGL_BACK_COLOR_BUFFER_BIT_ARB	./GL/wglew.h	/^#define WGL_BACK_COLOR_BUFFER_BIT_ARB /;"	d
WGL_BACK_LEFT_ARB	./GL/wglew.h	/^#define WGL_BACK_LEFT_ARB /;"	d
WGL_BACK_RIGHT_ARB	./GL/wglew.h	/^#define WGL_BACK_RIGHT_ARB /;"	d
WGL_BIND_TO_TEXTURE_DEPTH_NV	./GL/wglew.h	/^#define WGL_BIND_TO_TEXTURE_DEPTH_NV /;"	d
WGL_BIND_TO_TEXTURE_RECTANGLE_DEPTH_NV	./GL/wglew.h	/^#define WGL_BIND_TO_TEXTURE_RECTANGLE_DEPTH_NV /;"	d
WGL_BIND_TO_TEXTURE_RECTANGLE_FLOAT_RGBA_NV	./GL/wglew.h	/^#define WGL_BIND_TO_TEXTURE_RECTANGLE_FLOAT_RGBA_NV /;"	d
WGL_BIND_TO_TEXTURE_RECTANGLE_FLOAT_RGB_NV	./GL/wglew.h	/^#define WGL_BIND_TO_TEXTURE_RECTANGLE_FLOAT_RGB_NV /;"	d
WGL_BIND_TO_TEXTURE_RECTANGLE_FLOAT_RG_NV	./GL/wglew.h	/^#define WGL_BIND_TO_TEXTURE_RECTANGLE_FLOAT_RG_NV /;"	d
WGL_BIND_TO_TEXTURE_RECTANGLE_FLOAT_R_NV	./GL/wglew.h	/^#define WGL_BIND_TO_TEXTURE_RECTANGLE_FLOAT_R_NV /;"	d
WGL_BIND_TO_TEXTURE_RECTANGLE_RGBA_NV	./GL/wglew.h	/^#define WGL_BIND_TO_TEXTURE_RECTANGLE_RGBA_NV /;"	d
WGL_BIND_TO_TEXTURE_RECTANGLE_RGB_NV	./GL/wglew.h	/^#define WGL_BIND_TO_TEXTURE_RECTANGLE_RGB_NV /;"	d
WGL_BIND_TO_TEXTURE_RGBA_ARB	./GL/wglew.h	/^#define WGL_BIND_TO_TEXTURE_RGBA_ARB /;"	d
WGL_BIND_TO_TEXTURE_RGB_ARB	./GL/wglew.h	/^#define WGL_BIND_TO_TEXTURE_RGB_ARB /;"	d
WGL_BIND_TO_VIDEO_RGBA_NV	./GL/wglew.h	/^#define WGL_BIND_TO_VIDEO_RGBA_NV /;"	d
WGL_BIND_TO_VIDEO_RGB_AND_DEPTH_NV	./GL/wglew.h	/^#define WGL_BIND_TO_VIDEO_RGB_AND_DEPTH_NV /;"	d
WGL_BIND_TO_VIDEO_RGB_NV	./GL/wglew.h	/^#define WGL_BIND_TO_VIDEO_RGB_NV /;"	d
WGL_BLUE_BITS_ARB	./GL/wglew.h	/^#define WGL_BLUE_BITS_ARB /;"	d
WGL_BLUE_BITS_EXT	./GL/wglew.h	/^#define WGL_BLUE_BITS_EXT /;"	d
WGL_BLUE_SHIFT_ARB	./GL/wglew.h	/^#define WGL_BLUE_SHIFT_ARB /;"	d
WGL_BLUE_SHIFT_EXT	./GL/wglew.h	/^#define WGL_BLUE_SHIFT_EXT /;"	d
WGL_COLORSPACE_EXT	./GL/wglew.h	/^#define WGL_COLORSPACE_EXT /;"	d
WGL_COLORSPACE_LINEAR_EXT	./GL/wglew.h	/^#define WGL_COLORSPACE_LINEAR_EXT /;"	d
WGL_COLORSPACE_SRGB_EXT	./GL/wglew.h	/^#define WGL_COLORSPACE_SRGB_EXT /;"	d
WGL_COLOR_BITS_ARB	./GL/wglew.h	/^#define WGL_COLOR_BITS_ARB /;"	d
WGL_COLOR_BITS_EXT	./GL/wglew.h	/^#define WGL_COLOR_BITS_EXT /;"	d
WGL_COLOR_SAMPLES_NV	./GL/wglew.h	/^#define WGL_COLOR_SAMPLES_NV /;"	d
WGL_CONTEXT_COMPATIBILITY_PROFILE_BIT_ARB	./GL/wglew.h	/^#define WGL_CONTEXT_COMPATIBILITY_PROFILE_BIT_ARB /;"	d
WGL_CONTEXT_CORE_PROFILE_BIT_ARB	./GL/wglew.h	/^#define WGL_CONTEXT_CORE_PROFILE_BIT_ARB /;"	d
WGL_CONTEXT_DEBUG_BIT_ARB	./GL/wglew.h	/^#define WGL_CONTEXT_DEBUG_BIT_ARB /;"	d
WGL_CONTEXT_ES2_PROFILE_BIT_EXT	./GL/wglew.h	/^#define WGL_CONTEXT_ES2_PROFILE_BIT_EXT /;"	d
WGL_CONTEXT_ES_PROFILE_BIT_EXT	./GL/wglew.h	/^#define WGL_CONTEXT_ES_PROFILE_BIT_EXT /;"	d
WGL_CONTEXT_FLAGS_ARB	./GL/wglew.h	/^#define WGL_CONTEXT_FLAGS_ARB /;"	d
WGL_CONTEXT_FORWARD_COMPATIBLE_BIT_ARB	./GL/wglew.h	/^#define WGL_CONTEXT_FORWARD_COMPATIBLE_BIT_ARB /;"	d
WGL_CONTEXT_LAYER_PLANE_ARB	./GL/wglew.h	/^#define WGL_CONTEXT_LAYER_PLANE_ARB /;"	d
WGL_CONTEXT_MAJOR_VERSION_ARB	./GL/wglew.h	/^#define WGL_CONTEXT_MAJOR_VERSION_ARB /;"	d
WGL_CONTEXT_MINOR_VERSION_ARB	./GL/wglew.h	/^#define WGL_CONTEXT_MINOR_VERSION_ARB /;"	d
WGL_CONTEXT_MULTIGPU_ATTRIB_AFR_NV	./GL/wglew.h	/^#define WGL_CONTEXT_MULTIGPU_ATTRIB_AFR_NV /;"	d
WGL_CONTEXT_MULTIGPU_ATTRIB_MULTICAST_NV	./GL/wglew.h	/^#define WGL_CONTEXT_MULTIGPU_ATTRIB_MULTICAST_NV /;"	d
WGL_CONTEXT_MULTIGPU_ATTRIB_MULTI_DISPLAY_MULTICAST_NV	./GL/wglew.h	/^#define WGL_CONTEXT_MULTIGPU_ATTRIB_MULTI_DISPLAY_MULTICAST_NV /;"	d
WGL_CONTEXT_MULTIGPU_ATTRIB_NV	./GL/wglew.h	/^#define WGL_CONTEXT_MULTIGPU_ATTRIB_NV /;"	d
WGL_CONTEXT_MULTIGPU_ATTRIB_SINGLE_NV	./GL/wglew.h	/^#define WGL_CONTEXT_MULTIGPU_ATTRIB_SINGLE_NV /;"	d
WGL_CONTEXT_OPENGL_NO_ERROR_ARB	./GL/wglew.h	/^#define WGL_CONTEXT_OPENGL_NO_ERROR_ARB /;"	d
WGL_CONTEXT_PROFILE_MASK_ARB	./GL/wglew.h	/^#define WGL_CONTEXT_PROFILE_MASK_ARB /;"	d
WGL_CONTEXT_RELEASE_BEHAVIOR_ARB	./GL/wglew.h	/^#define WGL_CONTEXT_RELEASE_BEHAVIOR_ARB /;"	d
WGL_CONTEXT_RELEASE_BEHAVIOR_FLUSH_ARB	./GL/wglew.h	/^#define WGL_CONTEXT_RELEASE_BEHAVIOR_FLUSH_ARB /;"	d
WGL_CONTEXT_RELEASE_BEHAVIOR_NONE_ARB	./GL/wglew.h	/^#define WGL_CONTEXT_RELEASE_BEHAVIOR_NONE_ARB /;"	d
WGL_CONTEXT_RESET_ISOLATION_BIT_ARB	./GL/wglew.h	/^#define WGL_CONTEXT_RESET_ISOLATION_BIT_ARB /;"	d
WGL_CONTEXT_RESET_NOTIFICATION_STRATEGY_ARB	./GL/wglew.h	/^#define WGL_CONTEXT_RESET_NOTIFICATION_STRATEGY_ARB /;"	d
WGL_CONTEXT_ROBUST_ACCESS_BIT_ARB	./GL/wglew.h	/^#define WGL_CONTEXT_ROBUST_ACCESS_BIT_ARB /;"	d
WGL_COVERAGE_SAMPLES_NV	./GL/wglew.h	/^#define WGL_COVERAGE_SAMPLES_NV /;"	d
WGL_CUBE_MAP_FACE_ARB	./GL/wglew.h	/^#define WGL_CUBE_MAP_FACE_ARB /;"	d
WGL_DEPTH_BITS_ARB	./GL/wglew.h	/^#define WGL_DEPTH_BITS_ARB /;"	d
WGL_DEPTH_BITS_EXT	./GL/wglew.h	/^#define WGL_DEPTH_BITS_EXT /;"	d
WGL_DEPTH_BUFFER_BIT_ARB	./GL/wglew.h	/^#define WGL_DEPTH_BUFFER_BIT_ARB /;"	d
WGL_DEPTH_COMPONENT_NV	./GL/wglew.h	/^#define WGL_DEPTH_COMPONENT_NV /;"	d
WGL_DEPTH_FLOAT_EXT	./GL/wglew.h	/^#define WGL_DEPTH_FLOAT_EXT /;"	d
WGL_DEPTH_TEXTURE_FORMAT_NV	./GL/wglew.h	/^#define WGL_DEPTH_TEXTURE_FORMAT_NV /;"	d
WGL_DIGITAL_VIDEO_CURSOR_ALPHA_FRAMEBUFFER_I3D	./GL/wglew.h	/^#define WGL_DIGITAL_VIDEO_CURSOR_ALPHA_FRAMEBUFFER_I3D /;"	d
WGL_DIGITAL_VIDEO_CURSOR_ALPHA_VALUE_I3D	./GL/wglew.h	/^#define WGL_DIGITAL_VIDEO_CURSOR_ALPHA_VALUE_I3D /;"	d
WGL_DIGITAL_VIDEO_CURSOR_INCLUDED_I3D	./GL/wglew.h	/^#define WGL_DIGITAL_VIDEO_CURSOR_INCLUDED_I3D /;"	d
WGL_DIGITAL_VIDEO_GAMMA_CORRECTED_I3D	./GL/wglew.h	/^#define WGL_DIGITAL_VIDEO_GAMMA_CORRECTED_I3D /;"	d
WGL_DOUBLE_BUFFER_ARB	./GL/wglew.h	/^#define WGL_DOUBLE_BUFFER_ARB /;"	d
WGL_DOUBLE_BUFFER_EXT	./GL/wglew.h	/^#define WGL_DOUBLE_BUFFER_EXT /;"	d
WGL_DRAW_TO_BITMAP_ARB	./GL/wglew.h	/^#define WGL_DRAW_TO_BITMAP_ARB /;"	d
WGL_DRAW_TO_BITMAP_EXT	./GL/wglew.h	/^#define WGL_DRAW_TO_BITMAP_EXT /;"	d
WGL_DRAW_TO_PBUFFER_ARB	./GL/wglew.h	/^#define WGL_DRAW_TO_PBUFFER_ARB /;"	d
WGL_DRAW_TO_PBUFFER_EXT	./GL/wglew.h	/^#define WGL_DRAW_TO_PBUFFER_EXT /;"	d
WGL_DRAW_TO_WINDOW_ARB	./GL/wglew.h	/^#define WGL_DRAW_TO_WINDOW_ARB /;"	d
WGL_DRAW_TO_WINDOW_EXT	./GL/wglew.h	/^#define WGL_DRAW_TO_WINDOW_EXT /;"	d
WGL_ERROR_INCOMPATIBLE_AFFINITY_MASKS_NV	./GL/wglew.h	/^#define WGL_ERROR_INCOMPATIBLE_AFFINITY_MASKS_NV /;"	d
WGL_ERROR_MISSING_AFFINITY_MASK_NV	./GL/wglew.h	/^#define WGL_ERROR_MISSING_AFFINITY_MASK_NV /;"	d
WGL_EXT_colorspace	./GL/wglew.h	/^#define WGL_EXT_colorspace /;"	d
WGL_EXT_create_context_es2_profile	./GL/wglew.h	/^#define WGL_EXT_create_context_es2_profile /;"	d
WGL_EXT_create_context_es_profile	./GL/wglew.h	/^#define WGL_EXT_create_context_es_profile /;"	d
WGL_EXT_depth_float	./GL/wglew.h	/^#define WGL_EXT_depth_float /;"	d
WGL_EXT_display_color_table	./GL/wglew.h	/^#define WGL_EXT_display_color_table /;"	d
WGL_EXT_extensions_string	./GL/wglew.h	/^#define WGL_EXT_extensions_string /;"	d
WGL_EXT_framebuffer_sRGB	./GL/wglew.h	/^#define WGL_EXT_framebuffer_sRGB /;"	d
WGL_EXT_make_current_read	./GL/wglew.h	/^#define WGL_EXT_make_current_read /;"	d
WGL_EXT_multisample	./GL/wglew.h	/^#define WGL_EXT_multisample /;"	d
WGL_EXT_pbuffer	./GL/wglew.h	/^#define WGL_EXT_pbuffer /;"	d
WGL_EXT_pixel_format	./GL/wglew.h	/^#define WGL_EXT_pixel_format /;"	d
WGL_EXT_pixel_format_packed_float	./GL/wglew.h	/^#define WGL_EXT_pixel_format_packed_float /;"	d
WGL_EXT_swap_control	./GL/wglew.h	/^#define WGL_EXT_swap_control /;"	d
WGL_EXT_swap_control_tear	./GL/wglew.h	/^#define WGL_EXT_swap_control_tear /;"	d
WGL_FLOAT_COMPONENTS_NV	./GL/wglew.h	/^#define WGL_FLOAT_COMPONENTS_NV /;"	d
WGL_FRAMEBUFFER_SRGB_CAPABLE_ARB	./GL/wglew.h	/^#define WGL_FRAMEBUFFER_SRGB_CAPABLE_ARB /;"	d
WGL_FRAMEBUFFER_SRGB_CAPABLE_EXT	./GL/wglew.h	/^#define WGL_FRAMEBUFFER_SRGB_CAPABLE_EXT /;"	d
WGL_FRONT_COLOR_BUFFER_BIT_ARB	./GL/wglew.h	/^#define WGL_FRONT_COLOR_BUFFER_BIT_ARB /;"	d
WGL_FRONT_LEFT_ARB	./GL/wglew.h	/^#define WGL_FRONT_LEFT_ARB /;"	d
WGL_FRONT_RIGHT_ARB	./GL/wglew.h	/^#define WGL_FRONT_RIGHT_ARB /;"	d
WGL_FULL_ACCELERATION_ARB	./GL/wglew.h	/^#define WGL_FULL_ACCELERATION_ARB /;"	d
WGL_FULL_ACCELERATION_EXT	./GL/wglew.h	/^#define WGL_FULL_ACCELERATION_EXT /;"	d
WGL_GAMMA_EXCLUDE_DESKTOP_I3D	./GL/wglew.h	/^#define WGL_GAMMA_EXCLUDE_DESKTOP_I3D /;"	d
WGL_GAMMA_TABLE_SIZE_I3D	./GL/wglew.h	/^#define WGL_GAMMA_TABLE_SIZE_I3D /;"	d
WGL_GENERIC_ACCELERATION_ARB	./GL/wglew.h	/^#define WGL_GENERIC_ACCELERATION_ARB /;"	d
WGL_GENERIC_ACCELERATION_EXT	./GL/wglew.h	/^#define WGL_GENERIC_ACCELERATION_EXT /;"	d
WGL_GENLOCK_SOURCE_DIGITAL_FIELD_I3D	./GL/wglew.h	/^#define WGL_GENLOCK_SOURCE_DIGITAL_FIELD_I3D /;"	d
WGL_GENLOCK_SOURCE_DIGITAL_SYNC_I3D	./GL/wglew.h	/^#define WGL_GENLOCK_SOURCE_DIGITAL_SYNC_I3D /;"	d
WGL_GENLOCK_SOURCE_EDGE_BOTH_I3D	./GL/wglew.h	/^#define WGL_GENLOCK_SOURCE_EDGE_BOTH_I3D /;"	d
WGL_GENLOCK_SOURCE_EDGE_FALLING_I3D	./GL/wglew.h	/^#define WGL_GENLOCK_SOURCE_EDGE_FALLING_I3D /;"	d
WGL_GENLOCK_SOURCE_EDGE_RISING_I3D	./GL/wglew.h	/^#define WGL_GENLOCK_SOURCE_EDGE_RISING_I3D /;"	d
WGL_GENLOCK_SOURCE_EXTERNAL_FIELD_I3D	./GL/wglew.h	/^#define WGL_GENLOCK_SOURCE_EXTERNAL_FIELD_I3D /;"	d
WGL_GENLOCK_SOURCE_EXTERNAL_SYNC_I3D	./GL/wglew.h	/^#define WGL_GENLOCK_SOURCE_EXTERNAL_SYNC_I3D /;"	d
WGL_GENLOCK_SOURCE_EXTERNAL_TTL_I3D	./GL/wglew.h	/^#define WGL_GENLOCK_SOURCE_EXTERNAL_TTL_I3D /;"	d
WGL_GENLOCK_SOURCE_MULTIVIEW_I3D	./GL/wglew.h	/^#define WGL_GENLOCK_SOURCE_MULTIVIEW_I3D /;"	d
WGL_GPU_CLOCK_AMD	./GL/wglew.h	/^#define WGL_GPU_CLOCK_AMD /;"	d
WGL_GPU_FASTEST_TARGET_GPUS_AMD	./GL/wglew.h	/^#define WGL_GPU_FASTEST_TARGET_GPUS_AMD /;"	d
WGL_GPU_NUM_PIPES_AMD	./GL/wglew.h	/^#define WGL_GPU_NUM_PIPES_AMD /;"	d
WGL_GPU_NUM_RB_AMD	./GL/wglew.h	/^#define WGL_GPU_NUM_RB_AMD /;"	d
WGL_GPU_NUM_SIMD_AMD	./GL/wglew.h	/^#define WGL_GPU_NUM_SIMD_AMD /;"	d
WGL_GPU_NUM_SPI_AMD	./GL/wglew.h	/^#define WGL_GPU_NUM_SPI_AMD /;"	d
WGL_GPU_OPENGL_VERSION_STRING_AMD	./GL/wglew.h	/^#define WGL_GPU_OPENGL_VERSION_STRING_AMD /;"	d
WGL_GPU_RAM_AMD	./GL/wglew.h	/^#define WGL_GPU_RAM_AMD /;"	d
WGL_GPU_RENDERER_STRING_AMD	./GL/wglew.h	/^#define WGL_GPU_RENDERER_STRING_AMD /;"	d
WGL_GPU_VENDOR_AMD	./GL/wglew.h	/^#define WGL_GPU_VENDOR_AMD /;"	d
WGL_GREEN_BITS_ARB	./GL/wglew.h	/^#define WGL_GREEN_BITS_ARB /;"	d
WGL_GREEN_BITS_EXT	./GL/wglew.h	/^#define WGL_GREEN_BITS_EXT /;"	d
WGL_GREEN_SHIFT_ARB	./GL/wglew.h	/^#define WGL_GREEN_SHIFT_ARB /;"	d
WGL_GREEN_SHIFT_EXT	./GL/wglew.h	/^#define WGL_GREEN_SHIFT_EXT /;"	d
WGL_I3D_digital_video_control	./GL/wglew.h	/^#define WGL_I3D_digital_video_control /;"	d
WGL_I3D_gamma	./GL/wglew.h	/^#define WGL_I3D_gamma /;"	d
WGL_I3D_genlock	./GL/wglew.h	/^#define WGL_I3D_genlock /;"	d
WGL_I3D_image_buffer	./GL/wglew.h	/^#define WGL_I3D_image_buffer /;"	d
WGL_I3D_swap_frame_lock	./GL/wglew.h	/^#define WGL_I3D_swap_frame_lock /;"	d
WGL_I3D_swap_frame_usage	./GL/wglew.h	/^#define WGL_I3D_swap_frame_usage /;"	d
WGL_IMAGE_BUFFER_LOCK_I3D	./GL/wglew.h	/^#define WGL_IMAGE_BUFFER_LOCK_I3D /;"	d
WGL_IMAGE_BUFFER_MIN_ACCESS_I3D	./GL/wglew.h	/^#define WGL_IMAGE_BUFFER_MIN_ACCESS_I3D /;"	d
WGL_LOSE_CONTEXT_ON_RESET_ARB	./GL/wglew.h	/^#define WGL_LOSE_CONTEXT_ON_RESET_ARB /;"	d
WGL_MAX_PBUFFER_HEIGHT_ARB	./GL/wglew.h	/^#define WGL_MAX_PBUFFER_HEIGHT_ARB /;"	d
WGL_MAX_PBUFFER_HEIGHT_EXT	./GL/wglew.h	/^#define WGL_MAX_PBUFFER_HEIGHT_EXT /;"	d
WGL_MAX_PBUFFER_PIXELS_ARB	./GL/wglew.h	/^#define WGL_MAX_PBUFFER_PIXELS_ARB /;"	d
WGL_MAX_PBUFFER_PIXELS_EXT	./GL/wglew.h	/^#define WGL_MAX_PBUFFER_PIXELS_EXT /;"	d
WGL_MAX_PBUFFER_WIDTH_ARB	./GL/wglew.h	/^#define WGL_MAX_PBUFFER_WIDTH_ARB /;"	d
WGL_MAX_PBUFFER_WIDTH_EXT	./GL/wglew.h	/^#define WGL_MAX_PBUFFER_WIDTH_EXT /;"	d
WGL_MIPMAP_LEVEL_ARB	./GL/wglew.h	/^#define WGL_MIPMAP_LEVEL_ARB /;"	d
WGL_MIPMAP_TEXTURE_ARB	./GL/wglew.h	/^#define WGL_MIPMAP_TEXTURE_ARB /;"	d
WGL_NEED_PALETTE_ARB	./GL/wglew.h	/^#define WGL_NEED_PALETTE_ARB /;"	d
WGL_NEED_PALETTE_EXT	./GL/wglew.h	/^#define WGL_NEED_PALETTE_EXT /;"	d
WGL_NEED_SYSTEM_PALETTE_ARB	./GL/wglew.h	/^#define WGL_NEED_SYSTEM_PALETTE_ARB /;"	d
WGL_NEED_SYSTEM_PALETTE_EXT	./GL/wglew.h	/^#define WGL_NEED_SYSTEM_PALETTE_EXT /;"	d
WGL_NO_ACCELERATION_ARB	./GL/wglew.h	/^#define WGL_NO_ACCELERATION_ARB /;"	d
WGL_NO_ACCELERATION_EXT	./GL/wglew.h	/^#define WGL_NO_ACCELERATION_EXT /;"	d
WGL_NO_RESET_NOTIFICATION_ARB	./GL/wglew.h	/^#define WGL_NO_RESET_NOTIFICATION_ARB /;"	d
WGL_NO_TEXTURE_ARB	./GL/wglew.h	/^#define WGL_NO_TEXTURE_ARB /;"	d
WGL_NUMBER_OVERLAYS_ARB	./GL/wglew.h	/^#define WGL_NUMBER_OVERLAYS_ARB /;"	d
WGL_NUMBER_OVERLAYS_EXT	./GL/wglew.h	/^#define WGL_NUMBER_OVERLAYS_EXT /;"	d
WGL_NUMBER_PIXEL_FORMATS_ARB	./GL/wglew.h	/^#define WGL_NUMBER_PIXEL_FORMATS_ARB /;"	d
WGL_NUMBER_PIXEL_FORMATS_EXT	./GL/wglew.h	/^#define WGL_NUMBER_PIXEL_FORMATS_EXT /;"	d
WGL_NUMBER_UNDERLAYS_ARB	./GL/wglew.h	/^#define WGL_NUMBER_UNDERLAYS_ARB /;"	d
WGL_NUMBER_UNDERLAYS_EXT	./GL/wglew.h	/^#define WGL_NUMBER_UNDERLAYS_EXT /;"	d
WGL_NUM_VIDEO_CAPTURE_SLOTS_NV	./GL/wglew.h	/^#define WGL_NUM_VIDEO_CAPTURE_SLOTS_NV /;"	d
WGL_NUM_VIDEO_SLOTS_NV	./GL/wglew.h	/^#define WGL_NUM_VIDEO_SLOTS_NV /;"	d
WGL_NV_DX_interop	./GL/wglew.h	/^#define WGL_NV_DX_interop /;"	d
WGL_NV_DX_interop2	./GL/wglew.h	/^#define WGL_NV_DX_interop2 /;"	d
WGL_NV_copy_image	./GL/wglew.h	/^#define WGL_NV_copy_image /;"	d
WGL_NV_delay_before_swap	./GL/wglew.h	/^#define WGL_NV_delay_before_swap /;"	d
WGL_NV_float_buffer	./GL/wglew.h	/^#define WGL_NV_float_buffer /;"	d
WGL_NV_gpu_affinity	./GL/wglew.h	/^#define WGL_NV_gpu_affinity /;"	d
WGL_NV_multigpu_context	./GL/wglew.h	/^#define WGL_NV_multigpu_context /;"	d
WGL_NV_multisample_coverage	./GL/wglew.h	/^#define WGL_NV_multisample_coverage /;"	d
WGL_NV_present_video	./GL/wglew.h	/^#define WGL_NV_present_video /;"	d
WGL_NV_render_depth_texture	./GL/wglew.h	/^#define WGL_NV_render_depth_texture /;"	d
WGL_NV_render_texture_rectangle	./GL/wglew.h	/^#define WGL_NV_render_texture_rectangle /;"	d
WGL_NV_swap_group	./GL/wglew.h	/^#define WGL_NV_swap_group /;"	d
WGL_NV_vertex_array_range	./GL/wglew.h	/^#define WGL_NV_vertex_array_range /;"	d
WGL_NV_video_capture	./GL/wglew.h	/^#define WGL_NV_video_capture /;"	d
WGL_NV_video_output	./GL/wglew.h	/^#define WGL_NV_video_output /;"	d
WGL_OML_sync_control	./GL/wglew.h	/^#define WGL_OML_sync_control /;"	d
WGL_OPTIMAL_PBUFFER_HEIGHT_EXT	./GL/wglew.h	/^#define WGL_OPTIMAL_PBUFFER_HEIGHT_EXT /;"	d
WGL_OPTIMAL_PBUFFER_WIDTH_EXT	./GL/wglew.h	/^#define WGL_OPTIMAL_PBUFFER_WIDTH_EXT /;"	d
WGL_PBUFFER_HEIGHT_ARB	./GL/wglew.h	/^#define WGL_PBUFFER_HEIGHT_ARB /;"	d
WGL_PBUFFER_HEIGHT_EXT	./GL/wglew.h	/^#define WGL_PBUFFER_HEIGHT_EXT /;"	d
WGL_PBUFFER_LARGEST_ARB	./GL/wglew.h	/^#define WGL_PBUFFER_LARGEST_ARB /;"	d
WGL_PBUFFER_LARGEST_EXT	./GL/wglew.h	/^#define WGL_PBUFFER_LARGEST_EXT /;"	d
WGL_PBUFFER_LOST_ARB	./GL/wglew.h	/^#define WGL_PBUFFER_LOST_ARB /;"	d
WGL_PBUFFER_WIDTH_ARB	./GL/wglew.h	/^#define WGL_PBUFFER_WIDTH_ARB /;"	d
WGL_PBUFFER_WIDTH_EXT	./GL/wglew.h	/^#define WGL_PBUFFER_WIDTH_EXT /;"	d
WGL_PIXEL_TYPE_ARB	./GL/wglew.h	/^#define WGL_PIXEL_TYPE_ARB /;"	d
WGL_PIXEL_TYPE_EXT	./GL/wglew.h	/^#define WGL_PIXEL_TYPE_EXT /;"	d
WGL_RED_BITS_ARB	./GL/wglew.h	/^#define WGL_RED_BITS_ARB /;"	d
WGL_RED_BITS_EXT	./GL/wglew.h	/^#define WGL_RED_BITS_EXT /;"	d
WGL_RED_SHIFT_ARB	./GL/wglew.h	/^#define WGL_RED_SHIFT_ARB /;"	d
WGL_RED_SHIFT_EXT	./GL/wglew.h	/^#define WGL_RED_SHIFT_EXT /;"	d
WGL_SAMPLES_3DFX	./GL/wglew.h	/^#define WGL_SAMPLES_3DFX /;"	d
WGL_SAMPLES_ARB	./GL/wglew.h	/^#define WGL_SAMPLES_ARB /;"	d
WGL_SAMPLES_EXT	./GL/wglew.h	/^#define WGL_SAMPLES_EXT /;"	d
WGL_SAMPLE_BUFFERS_3DFX	./GL/wglew.h	/^#define WGL_SAMPLE_BUFFERS_3DFX /;"	d
WGL_SAMPLE_BUFFERS_ARB	./GL/wglew.h	/^#define WGL_SAMPLE_BUFFERS_ARB /;"	d
WGL_SAMPLE_BUFFERS_EXT	./GL/wglew.h	/^#define WGL_SAMPLE_BUFFERS_EXT /;"	d
WGL_SHARE_ACCUM_ARB	./GL/wglew.h	/^#define WGL_SHARE_ACCUM_ARB /;"	d
WGL_SHARE_ACCUM_EXT	./GL/wglew.h	/^#define WGL_SHARE_ACCUM_EXT /;"	d
WGL_SHARE_DEPTH_ARB	./GL/wglew.h	/^#define WGL_SHARE_DEPTH_ARB /;"	d
WGL_SHARE_DEPTH_EXT	./GL/wglew.h	/^#define WGL_SHARE_DEPTH_EXT /;"	d
WGL_SHARE_STENCIL_ARB	./GL/wglew.h	/^#define WGL_SHARE_STENCIL_ARB /;"	d
WGL_SHARE_STENCIL_EXT	./GL/wglew.h	/^#define WGL_SHARE_STENCIL_EXT /;"	d
WGL_STENCIL_BITS_ARB	./GL/wglew.h	/^#define WGL_STENCIL_BITS_ARB /;"	d
WGL_STENCIL_BITS_EXT	./GL/wglew.h	/^#define WGL_STENCIL_BITS_EXT /;"	d
WGL_STENCIL_BUFFER_BIT_ARB	./GL/wglew.h	/^#define WGL_STENCIL_BUFFER_BIT_ARB /;"	d
WGL_STEREO_ARB	./GL/wglew.h	/^#define WGL_STEREO_ARB /;"	d
WGL_STEREO_EMITTER_DISABLE_3DL	./GL/wglew.h	/^#define WGL_STEREO_EMITTER_DISABLE_3DL /;"	d
WGL_STEREO_EMITTER_ENABLE_3DL	./GL/wglew.h	/^#define WGL_STEREO_EMITTER_ENABLE_3DL /;"	d
WGL_STEREO_EXT	./GL/wglew.h	/^#define WGL_STEREO_EXT /;"	d
WGL_STEREO_POLARITY_INVERT_3DL	./GL/wglew.h	/^#define WGL_STEREO_POLARITY_INVERT_3DL /;"	d
WGL_STEREO_POLARITY_NORMAL_3DL	./GL/wglew.h	/^#define WGL_STEREO_POLARITY_NORMAL_3DL /;"	d
WGL_SUPPORT_GDI_ARB	./GL/wglew.h	/^#define WGL_SUPPORT_GDI_ARB /;"	d
WGL_SUPPORT_GDI_EXT	./GL/wglew.h	/^#define WGL_SUPPORT_GDI_EXT /;"	d
WGL_SUPPORT_OPENGL_ARB	./GL/wglew.h	/^#define WGL_SUPPORT_OPENGL_ARB /;"	d
WGL_SUPPORT_OPENGL_EXT	./GL/wglew.h	/^#define WGL_SUPPORT_OPENGL_EXT /;"	d
WGL_SWAP_COPY_ARB	./GL/wglew.h	/^#define WGL_SWAP_COPY_ARB /;"	d
WGL_SWAP_COPY_EXT	./GL/wglew.h	/^#define WGL_SWAP_COPY_EXT /;"	d
WGL_SWAP_EXCHANGE_ARB	./GL/wglew.h	/^#define WGL_SWAP_EXCHANGE_ARB /;"	d
WGL_SWAP_EXCHANGE_EXT	./GL/wglew.h	/^#define WGL_SWAP_EXCHANGE_EXT /;"	d
WGL_SWAP_LAYER_BUFFERS_ARB	./GL/wglew.h	/^#define WGL_SWAP_LAYER_BUFFERS_ARB /;"	d
WGL_SWAP_LAYER_BUFFERS_EXT	./GL/wglew.h	/^#define WGL_SWAP_LAYER_BUFFERS_EXT /;"	d
WGL_SWAP_METHOD_ARB	./GL/wglew.h	/^#define WGL_SWAP_METHOD_ARB /;"	d
WGL_SWAP_METHOD_EXT	./GL/wglew.h	/^#define WGL_SWAP_METHOD_EXT /;"	d
WGL_SWAP_UNDEFINED_ARB	./GL/wglew.h	/^#define WGL_SWAP_UNDEFINED_ARB /;"	d
WGL_SWAP_UNDEFINED_EXT	./GL/wglew.h	/^#define WGL_SWAP_UNDEFINED_EXT /;"	d
WGL_TEXTURE_1D_ARB	./GL/wglew.h	/^#define WGL_TEXTURE_1D_ARB /;"	d
WGL_TEXTURE_2D_ARB	./GL/wglew.h	/^#define WGL_TEXTURE_2D_ARB /;"	d
WGL_TEXTURE_CUBE_MAP_ARB	./GL/wglew.h	/^#define WGL_TEXTURE_CUBE_MAP_ARB /;"	d
WGL_TEXTURE_CUBE_MAP_NEGATIVE_X_ARB	./GL/wglew.h	/^#define WGL_TEXTURE_CUBE_MAP_NEGATIVE_X_ARB /;"	d
WGL_TEXTURE_CUBE_MAP_NEGATIVE_Y_ARB	./GL/wglew.h	/^#define WGL_TEXTURE_CUBE_MAP_NEGATIVE_Y_ARB /;"	d
WGL_TEXTURE_CUBE_MAP_NEGATIVE_Z_ARB	./GL/wglew.h	/^#define WGL_TEXTURE_CUBE_MAP_NEGATIVE_Z_ARB /;"	d
WGL_TEXTURE_CUBE_MAP_POSITIVE_X_ARB	./GL/wglew.h	/^#define WGL_TEXTURE_CUBE_MAP_POSITIVE_X_ARB /;"	d
WGL_TEXTURE_CUBE_MAP_POSITIVE_Y_ARB	./GL/wglew.h	/^#define WGL_TEXTURE_CUBE_MAP_POSITIVE_Y_ARB /;"	d
WGL_TEXTURE_CUBE_MAP_POSITIVE_Z_ARB	./GL/wglew.h	/^#define WGL_TEXTURE_CUBE_MAP_POSITIVE_Z_ARB /;"	d
WGL_TEXTURE_DEPTH_COMPONENT_NV	./GL/wglew.h	/^#define WGL_TEXTURE_DEPTH_COMPONENT_NV /;"	d
WGL_TEXTURE_FLOAT_RGBA_NV	./GL/wglew.h	/^#define WGL_TEXTURE_FLOAT_RGBA_NV /;"	d
WGL_TEXTURE_FLOAT_RGB_NV	./GL/wglew.h	/^#define WGL_TEXTURE_FLOAT_RGB_NV /;"	d
WGL_TEXTURE_FLOAT_RG_NV	./GL/wglew.h	/^#define WGL_TEXTURE_FLOAT_RG_NV /;"	d
WGL_TEXTURE_FLOAT_R_NV	./GL/wglew.h	/^#define WGL_TEXTURE_FLOAT_R_NV /;"	d
WGL_TEXTURE_FORMAT_ARB	./GL/wglew.h	/^#define WGL_TEXTURE_FORMAT_ARB /;"	d
WGL_TEXTURE_RECTANGLE_ATI	./GL/wglew.h	/^#define WGL_TEXTURE_RECTANGLE_ATI /;"	d
WGL_TEXTURE_RECTANGLE_NV	./GL/wglew.h	/^#define WGL_TEXTURE_RECTANGLE_NV /;"	d
WGL_TEXTURE_RGBA_ARB	./GL/wglew.h	/^#define WGL_TEXTURE_RGBA_ARB /;"	d
WGL_TEXTURE_RGB_ARB	./GL/wglew.h	/^#define WGL_TEXTURE_RGB_ARB /;"	d
WGL_TEXTURE_TARGET_ARB	./GL/wglew.h	/^#define WGL_TEXTURE_TARGET_ARB /;"	d
WGL_TRANSPARENT_ALPHA_VALUE_ARB	./GL/wglew.h	/^#define WGL_TRANSPARENT_ALPHA_VALUE_ARB /;"	d
WGL_TRANSPARENT_ARB	./GL/wglew.h	/^#define WGL_TRANSPARENT_ARB /;"	d
WGL_TRANSPARENT_BLUE_VALUE_ARB	./GL/wglew.h	/^#define WGL_TRANSPARENT_BLUE_VALUE_ARB /;"	d
WGL_TRANSPARENT_EXT	./GL/wglew.h	/^#define WGL_TRANSPARENT_EXT /;"	d
WGL_TRANSPARENT_GREEN_VALUE_ARB	./GL/wglew.h	/^#define WGL_TRANSPARENT_GREEN_VALUE_ARB /;"	d
WGL_TRANSPARENT_INDEX_VALUE_ARB	./GL/wglew.h	/^#define WGL_TRANSPARENT_INDEX_VALUE_ARB /;"	d
WGL_TRANSPARENT_RED_VALUE_ARB	./GL/wglew.h	/^#define WGL_TRANSPARENT_RED_VALUE_ARB /;"	d
WGL_TRANSPARENT_VALUE_EXT	./GL/wglew.h	/^#define WGL_TRANSPARENT_VALUE_EXT /;"	d
WGL_TYPE_COLORINDEX_ARB	./GL/wglew.h	/^#define WGL_TYPE_COLORINDEX_ARB /;"	d
WGL_TYPE_COLORINDEX_EXT	./GL/wglew.h	/^#define WGL_TYPE_COLORINDEX_EXT /;"	d
WGL_TYPE_RGBA_ARB	./GL/wglew.h	/^#define WGL_TYPE_RGBA_ARB /;"	d
WGL_TYPE_RGBA_EXT	./GL/wglew.h	/^#define WGL_TYPE_RGBA_EXT /;"	d
WGL_TYPE_RGBA_FLOAT_ARB	./GL/wglew.h	/^#define WGL_TYPE_RGBA_FLOAT_ARB /;"	d
WGL_TYPE_RGBA_FLOAT_ATI	./GL/wglew.h	/^#define WGL_TYPE_RGBA_FLOAT_ATI /;"	d
WGL_TYPE_RGBA_UNSIGNED_FLOAT_EXT	./GL/wglew.h	/^#define WGL_TYPE_RGBA_UNSIGNED_FLOAT_EXT /;"	d
WGL_UNIQUE_ID_NV	./GL/wglew.h	/^#define WGL_UNIQUE_ID_NV /;"	d
WGL_VIDEO_OUT_ALPHA_NV	./GL/wglew.h	/^#define WGL_VIDEO_OUT_ALPHA_NV /;"	d
WGL_VIDEO_OUT_COLOR_AND_ALPHA_NV	./GL/wglew.h	/^#define WGL_VIDEO_OUT_COLOR_AND_ALPHA_NV /;"	d
WGL_VIDEO_OUT_COLOR_AND_DEPTH_NV	./GL/wglew.h	/^#define WGL_VIDEO_OUT_COLOR_AND_DEPTH_NV /;"	d
WGL_VIDEO_OUT_COLOR_NV	./GL/wglew.h	/^#define WGL_VIDEO_OUT_COLOR_NV /;"	d
WGL_VIDEO_OUT_DEPTH_NV	./GL/wglew.h	/^#define WGL_VIDEO_OUT_DEPTH_NV /;"	d
WGL_VIDEO_OUT_FIELD_1	./GL/wglew.h	/^#define WGL_VIDEO_OUT_FIELD_1 /;"	d
WGL_VIDEO_OUT_FIELD_2	./GL/wglew.h	/^#define WGL_VIDEO_OUT_FIELD_2 /;"	d
WGL_VIDEO_OUT_FRAME	./GL/wglew.h	/^#define WGL_VIDEO_OUT_FRAME /;"	d
WGL_VIDEO_OUT_STACKED_FIELDS_1_2	./GL/wglew.h	/^#define WGL_VIDEO_OUT_STACKED_FIELDS_1_2 /;"	d
WGL_VIDEO_OUT_STACKED_FIELDS_2_1	./GL/wglew.h	/^#define WGL_VIDEO_OUT_STACKED_FIELDS_2_1 /;"	d
WIN32_LEAN_AND_MEAN	./GL/wglew.h	/^#    define WIN32_LEAN_AND_MEAN /;"	d
WINGDIAPI	./GL/glew.h	/^#define WINGDIAPI /;"	d
WrongVirus	CMakeLists.txt	/^project(WrongVirus LANGUAGES CXX)$/;"	p
XOrigin	./GL/glxew.h	/^  int XOrigin; $/;"	m	struct:__anonb1a929810308	typeref:typename:int
YCoCg2rgb	./glm/gtx/color_space_YCoCg.inl	/^	GLM_FUNC_QUALIFIER vec<3, T, Q> YCoCg2rgb$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<3,T,Q>
YCoCgR2rgb	./glm/gtx/color_space_YCoCg.inl	/^		static GLM_FUNC_QUALIFIER vec<3, T, Q> YCoCgR2rgb$/;"	f	class:glm::compute_YCoCgR	typeref:typename:GLM_FUNC_QUALIFIER vec<3,T,Q>	file:
YCoCgR2rgb	./glm/gtx/color_space_YCoCg.inl	/^	GLM_FUNC_QUALIFIER vec<3, T, Q> YCoCgR2rgb$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<3,T,Q>
YOrigin	./GL/glxew.h	/^  int YOrigin; $/;"	m	struct:__anonb1a929810308	typeref:typename:int
_GL_H	./GL/glew.h	/^#define _GL_H$/;"	d
_GPU_DEVICE	./GL/wglew.h	/^typedef struct _GPU_DEVICE {$/;"	s
_PTRDIFF_T_	./GL/glew.h	/^#  define _PTRDIFF_T_$/;"	d
_PTRDIFF_T_DEFINED	./GL/glew.h	/^#  define _PTRDIFF_T_DEFINED$/;"	d
_W64	./GL/glew.h	/^#    define _W64 /;"	d
_W64	./GL/glew.h	/^#    define _W64$/;"	d
_WCHAR_T_DEFINED	./GL/glew.h	/^#  define _WCHAR_T_DEFINED$/;"	d
__EGLEW_ANDROID_GLES_layers	./GL/eglew.h	/^EGLEW_VAR_EXPORT GLboolean __EGLEW_ANDROID_GLES_layers;$/;"	v	typeref:typename:EGLEW_VAR_EXPORT GLboolean
__EGLEW_ANDROID_blob_cache	./GL/eglew.h	/^EGLEW_VAR_EXPORT GLboolean __EGLEW_ANDROID_blob_cache;$/;"	v	typeref:typename:EGLEW_VAR_EXPORT GLboolean
__EGLEW_ANDROID_create_native_client_buffer	./GL/eglew.h	/^EGLEW_VAR_EXPORT GLboolean __EGLEW_ANDROID_create_native_client_buffer;$/;"	v	typeref:typename:EGLEW_VAR_EXPORT GLboolean
__EGLEW_ANDROID_framebuffer_target	./GL/eglew.h	/^EGLEW_VAR_EXPORT GLboolean __EGLEW_ANDROID_framebuffer_target;$/;"	v	typeref:typename:EGLEW_VAR_EXPORT GLboolean
__EGLEW_ANDROID_front_buffer_auto_refresh	./GL/eglew.h	/^EGLEW_VAR_EXPORT GLboolean __EGLEW_ANDROID_front_buffer_auto_refresh;$/;"	v	typeref:typename:EGLEW_VAR_EXPORT GLboolean
__EGLEW_ANDROID_get_frame_timestamps	./GL/eglew.h	/^EGLEW_VAR_EXPORT GLboolean __EGLEW_ANDROID_get_frame_timestamps;$/;"	v	typeref:typename:EGLEW_VAR_EXPORT GLboolean
__EGLEW_ANDROID_get_native_client_buffer	./GL/eglew.h	/^EGLEW_VAR_EXPORT GLboolean __EGLEW_ANDROID_get_native_client_buffer;$/;"	v	typeref:typename:EGLEW_VAR_EXPORT GLboolean
__EGLEW_ANDROID_image_native_buffer	./GL/eglew.h	/^EGLEW_VAR_EXPORT GLboolean __EGLEW_ANDROID_image_native_buffer;$/;"	v	typeref:typename:EGLEW_VAR_EXPORT GLboolean
__EGLEW_ANDROID_native_fence_sync	./GL/eglew.h	/^EGLEW_VAR_EXPORT GLboolean __EGLEW_ANDROID_native_fence_sync;$/;"	v	typeref:typename:EGLEW_VAR_EXPORT GLboolean
__EGLEW_ANDROID_presentation_time	./GL/eglew.h	/^EGLEW_VAR_EXPORT GLboolean __EGLEW_ANDROID_presentation_time;$/;"	v	typeref:typename:EGLEW_VAR_EXPORT GLboolean
__EGLEW_ANDROID_recordable	./GL/eglew.h	/^EGLEW_VAR_EXPORT GLboolean __EGLEW_ANDROID_recordable;$/;"	v	typeref:typename:EGLEW_VAR_EXPORT GLboolean
__EGLEW_ANGLE_d3d_share_handle_client_buffer	./GL/eglew.h	/^EGLEW_VAR_EXPORT GLboolean __EGLEW_ANGLE_d3d_share_handle_client_buffer;$/;"	v	typeref:typename:EGLEW_VAR_EXPORT GLboolean
__EGLEW_ANGLE_device_d3d	./GL/eglew.h	/^EGLEW_VAR_EXPORT GLboolean __EGLEW_ANGLE_device_d3d;$/;"	v	typeref:typename:EGLEW_VAR_EXPORT GLboolean
__EGLEW_ANGLE_query_surface_pointer	./GL/eglew.h	/^EGLEW_VAR_EXPORT GLboolean __EGLEW_ANGLE_query_surface_pointer;$/;"	v	typeref:typename:EGLEW_VAR_EXPORT GLboolean
__EGLEW_ANGLE_surface_d3d_texture_2d_share_handle	./GL/eglew.h	/^EGLEW_VAR_EXPORT GLboolean __EGLEW_ANGLE_surface_d3d_texture_2d_share_handle;$/;"	v	typeref:typename:EGLEW_VAR_EXPORT GLboolean
__EGLEW_ANGLE_window_fixed_size	./GL/eglew.h	/^EGLEW_VAR_EXPORT GLboolean __EGLEW_ANGLE_window_fixed_size;$/;"	v	typeref:typename:EGLEW_VAR_EXPORT GLboolean
__EGLEW_ARM_image_format	./GL/eglew.h	/^EGLEW_VAR_EXPORT GLboolean __EGLEW_ARM_image_format;$/;"	v	typeref:typename:EGLEW_VAR_EXPORT GLboolean
__EGLEW_ARM_implicit_external_sync	./GL/eglew.h	/^EGLEW_VAR_EXPORT GLboolean __EGLEW_ARM_implicit_external_sync;$/;"	v	typeref:typename:EGLEW_VAR_EXPORT GLboolean
__EGLEW_ARM_pixmap_multisample_discard	./GL/eglew.h	/^EGLEW_VAR_EXPORT GLboolean __EGLEW_ARM_pixmap_multisample_discard;$/;"	v	typeref:typename:EGLEW_VAR_EXPORT GLboolean
__EGLEW_EXT_bind_to_front	./GL/eglew.h	/^EGLEW_VAR_EXPORT GLboolean __EGLEW_EXT_bind_to_front;$/;"	v	typeref:typename:EGLEW_VAR_EXPORT GLboolean
__EGLEW_EXT_buffer_age	./GL/eglew.h	/^EGLEW_VAR_EXPORT GLboolean __EGLEW_EXT_buffer_age;$/;"	v	typeref:typename:EGLEW_VAR_EXPORT GLboolean
__EGLEW_EXT_client_extensions	./GL/eglew.h	/^EGLEW_VAR_EXPORT GLboolean __EGLEW_EXT_client_extensions;$/;"	v	typeref:typename:EGLEW_VAR_EXPORT GLboolean
__EGLEW_EXT_client_sync	./GL/eglew.h	/^EGLEW_VAR_EXPORT GLboolean __EGLEW_EXT_client_sync;$/;"	v	typeref:typename:EGLEW_VAR_EXPORT GLboolean
__EGLEW_EXT_compositor	./GL/eglew.h	/^EGLEW_VAR_EXPORT GLboolean __EGLEW_EXT_compositor;$/;"	v	typeref:typename:EGLEW_VAR_EXPORT GLboolean
__EGLEW_EXT_create_context_robustness	./GL/eglew.h	/^EGLEW_VAR_EXPORT GLboolean __EGLEW_EXT_create_context_robustness;$/;"	v	typeref:typename:EGLEW_VAR_EXPORT GLboolean
__EGLEW_EXT_device_base	./GL/eglew.h	/^EGLEW_VAR_EXPORT GLboolean __EGLEW_EXT_device_base;$/;"	v	typeref:typename:EGLEW_VAR_EXPORT GLboolean
__EGLEW_EXT_device_drm	./GL/eglew.h	/^EGLEW_VAR_EXPORT GLboolean __EGLEW_EXT_device_drm;$/;"	v	typeref:typename:EGLEW_VAR_EXPORT GLboolean
__EGLEW_EXT_device_enumeration	./GL/eglew.h	/^EGLEW_VAR_EXPORT GLboolean __EGLEW_EXT_device_enumeration;$/;"	v	typeref:typename:EGLEW_VAR_EXPORT GLboolean
__EGLEW_EXT_device_openwf	./GL/eglew.h	/^EGLEW_VAR_EXPORT GLboolean __EGLEW_EXT_device_openwf;$/;"	v	typeref:typename:EGLEW_VAR_EXPORT GLboolean
__EGLEW_EXT_device_query	./GL/eglew.h	/^EGLEW_VAR_EXPORT GLboolean __EGLEW_EXT_device_query;$/;"	v	typeref:typename:EGLEW_VAR_EXPORT GLboolean
__EGLEW_EXT_gl_colorspace_bt2020_linear	./GL/eglew.h	/^EGLEW_VAR_EXPORT GLboolean __EGLEW_EXT_gl_colorspace_bt2020_linear;$/;"	v	typeref:typename:EGLEW_VAR_EXPORT GLboolean
__EGLEW_EXT_gl_colorspace_bt2020_pq	./GL/eglew.h	/^EGLEW_VAR_EXPORT GLboolean __EGLEW_EXT_gl_colorspace_bt2020_pq;$/;"	v	typeref:typename:EGLEW_VAR_EXPORT GLboolean
__EGLEW_EXT_gl_colorspace_display_p3	./GL/eglew.h	/^EGLEW_VAR_EXPORT GLboolean __EGLEW_EXT_gl_colorspace_display_p3;$/;"	v	typeref:typename:EGLEW_VAR_EXPORT GLboolean
__EGLEW_EXT_gl_colorspace_display_p3_linear	./GL/eglew.h	/^EGLEW_VAR_EXPORT GLboolean __EGLEW_EXT_gl_colorspace_display_p3_linear;$/;"	v	typeref:typename:EGLEW_VAR_EXPORT GLboolean
__EGLEW_EXT_gl_colorspace_display_p3_passthrough	./GL/eglew.h	/^EGLEW_VAR_EXPORT GLboolean __EGLEW_EXT_gl_colorspace_display_p3_passthrough;$/;"	v	typeref:typename:EGLEW_VAR_EXPORT GLboolean
__EGLEW_EXT_gl_colorspace_scrgb	./GL/eglew.h	/^EGLEW_VAR_EXPORT GLboolean __EGLEW_EXT_gl_colorspace_scrgb;$/;"	v	typeref:typename:EGLEW_VAR_EXPORT GLboolean
__EGLEW_EXT_gl_colorspace_scrgb_linear	./GL/eglew.h	/^EGLEW_VAR_EXPORT GLboolean __EGLEW_EXT_gl_colorspace_scrgb_linear;$/;"	v	typeref:typename:EGLEW_VAR_EXPORT GLboolean
__EGLEW_EXT_image_dma_buf_import	./GL/eglew.h	/^EGLEW_VAR_EXPORT GLboolean __EGLEW_EXT_image_dma_buf_import;$/;"	v	typeref:typename:EGLEW_VAR_EXPORT GLboolean
__EGLEW_EXT_image_dma_buf_import_modifiers	./GL/eglew.h	/^EGLEW_VAR_EXPORT GLboolean __EGLEW_EXT_image_dma_buf_import_modifiers;$/;"	v	typeref:typename:EGLEW_VAR_EXPORT GLboolean
__EGLEW_EXT_image_gl_colorspace	./GL/eglew.h	/^EGLEW_VAR_EXPORT GLboolean __EGLEW_EXT_image_gl_colorspace;$/;"	v	typeref:typename:EGLEW_VAR_EXPORT GLboolean
__EGLEW_EXT_image_implicit_sync_control	./GL/eglew.h	/^EGLEW_VAR_EXPORT GLboolean __EGLEW_EXT_image_implicit_sync_control;$/;"	v	typeref:typename:EGLEW_VAR_EXPORT GLboolean
__EGLEW_EXT_multiview_window	./GL/eglew.h	/^EGLEW_VAR_EXPORT GLboolean __EGLEW_EXT_multiview_window;$/;"	v	typeref:typename:EGLEW_VAR_EXPORT GLboolean
__EGLEW_EXT_output_base	./GL/eglew.h	/^EGLEW_VAR_EXPORT GLboolean __EGLEW_EXT_output_base;$/;"	v	typeref:typename:EGLEW_VAR_EXPORT GLboolean
__EGLEW_EXT_output_drm	./GL/eglew.h	/^EGLEW_VAR_EXPORT GLboolean __EGLEW_EXT_output_drm;$/;"	v	typeref:typename:EGLEW_VAR_EXPORT GLboolean
__EGLEW_EXT_output_openwf	./GL/eglew.h	/^EGLEW_VAR_EXPORT GLboolean __EGLEW_EXT_output_openwf;$/;"	v	typeref:typename:EGLEW_VAR_EXPORT GLboolean
__EGLEW_EXT_pixel_format_float	./GL/eglew.h	/^EGLEW_VAR_EXPORT GLboolean __EGLEW_EXT_pixel_format_float;$/;"	v	typeref:typename:EGLEW_VAR_EXPORT GLboolean
__EGLEW_EXT_platform_base	./GL/eglew.h	/^EGLEW_VAR_EXPORT GLboolean __EGLEW_EXT_platform_base;$/;"	v	typeref:typename:EGLEW_VAR_EXPORT GLboolean
__EGLEW_EXT_platform_device	./GL/eglew.h	/^EGLEW_VAR_EXPORT GLboolean __EGLEW_EXT_platform_device;$/;"	v	typeref:typename:EGLEW_VAR_EXPORT GLboolean
__EGLEW_EXT_platform_wayland	./GL/eglew.h	/^EGLEW_VAR_EXPORT GLboolean __EGLEW_EXT_platform_wayland;$/;"	v	typeref:typename:EGLEW_VAR_EXPORT GLboolean
__EGLEW_EXT_platform_x11	./GL/eglew.h	/^EGLEW_VAR_EXPORT GLboolean __EGLEW_EXT_platform_x11;$/;"	v	typeref:typename:EGLEW_VAR_EXPORT GLboolean
__EGLEW_EXT_protected_content	./GL/eglew.h	/^EGLEW_VAR_EXPORT GLboolean __EGLEW_EXT_protected_content;$/;"	v	typeref:typename:EGLEW_VAR_EXPORT GLboolean
__EGLEW_EXT_protected_surface	./GL/eglew.h	/^EGLEW_VAR_EXPORT GLboolean __EGLEW_EXT_protected_surface;$/;"	v	typeref:typename:EGLEW_VAR_EXPORT GLboolean
__EGLEW_EXT_stream_consumer_egloutput	./GL/eglew.h	/^EGLEW_VAR_EXPORT GLboolean __EGLEW_EXT_stream_consumer_egloutput;$/;"	v	typeref:typename:EGLEW_VAR_EXPORT GLboolean
__EGLEW_EXT_surface_CTA861_3_metadata	./GL/eglew.h	/^EGLEW_VAR_EXPORT GLboolean __EGLEW_EXT_surface_CTA861_3_metadata;$/;"	v	typeref:typename:EGLEW_VAR_EXPORT GLboolean
__EGLEW_EXT_surface_SMPTE2086_metadata	./GL/eglew.h	/^EGLEW_VAR_EXPORT GLboolean __EGLEW_EXT_surface_SMPTE2086_metadata;$/;"	v	typeref:typename:EGLEW_VAR_EXPORT GLboolean
__EGLEW_EXT_swap_buffers_with_damage	./GL/eglew.h	/^EGLEW_VAR_EXPORT GLboolean __EGLEW_EXT_swap_buffers_with_damage;$/;"	v	typeref:typename:EGLEW_VAR_EXPORT GLboolean
__EGLEW_EXT_sync_reuse	./GL/eglew.h	/^EGLEW_VAR_EXPORT GLboolean __EGLEW_EXT_sync_reuse;$/;"	v	typeref:typename:EGLEW_VAR_EXPORT GLboolean
__EGLEW_EXT_yuv_surface	./GL/eglew.h	/^EGLEW_VAR_EXPORT GLboolean __EGLEW_EXT_yuv_surface;$/;"	v	typeref:typename:EGLEW_VAR_EXPORT GLboolean
__EGLEW_HI_clientpixmap	./GL/eglew.h	/^EGLEW_VAR_EXPORT GLboolean __EGLEW_HI_clientpixmap;$/;"	v	typeref:typename:EGLEW_VAR_EXPORT GLboolean
__EGLEW_HI_colorformats	./GL/eglew.h	/^EGLEW_VAR_EXPORT GLboolean __EGLEW_HI_colorformats;$/;"	v	typeref:typename:EGLEW_VAR_EXPORT GLboolean
__EGLEW_H__	./GL/eglew.h	/^#define __EGLEW_H__$/;"	d
__EGLEW_IMG_context_priority	./GL/eglew.h	/^EGLEW_VAR_EXPORT GLboolean __EGLEW_IMG_context_priority;$/;"	v	typeref:typename:EGLEW_VAR_EXPORT GLboolean
__EGLEW_IMG_image_plane_attribs	./GL/eglew.h	/^EGLEW_VAR_EXPORT GLboolean __EGLEW_IMG_image_plane_attribs;$/;"	v	typeref:typename:EGLEW_VAR_EXPORT GLboolean
__EGLEW_KHR_cl_event	./GL/eglew.h	/^EGLEW_VAR_EXPORT GLboolean __EGLEW_KHR_cl_event;$/;"	v	typeref:typename:EGLEW_VAR_EXPORT GLboolean
__EGLEW_KHR_cl_event2	./GL/eglew.h	/^EGLEW_VAR_EXPORT GLboolean __EGLEW_KHR_cl_event2;$/;"	v	typeref:typename:EGLEW_VAR_EXPORT GLboolean
__EGLEW_KHR_client_get_all_proc_addresses	./GL/eglew.h	/^EGLEW_VAR_EXPORT GLboolean __EGLEW_KHR_client_get_all_proc_addresses;$/;"	v	typeref:typename:EGLEW_VAR_EXPORT GLboolean
__EGLEW_KHR_config_attribs	./GL/eglew.h	/^EGLEW_VAR_EXPORT GLboolean __EGLEW_KHR_config_attribs;$/;"	v	typeref:typename:EGLEW_VAR_EXPORT GLboolean
__EGLEW_KHR_context_flush_control	./GL/eglew.h	/^EGLEW_VAR_EXPORT GLboolean __EGLEW_KHR_context_flush_control;$/;"	v	typeref:typename:EGLEW_VAR_EXPORT GLboolean
__EGLEW_KHR_create_context	./GL/eglew.h	/^EGLEW_VAR_EXPORT GLboolean __EGLEW_KHR_create_context;$/;"	v	typeref:typename:EGLEW_VAR_EXPORT GLboolean
__EGLEW_KHR_create_context_no_error	./GL/eglew.h	/^EGLEW_VAR_EXPORT GLboolean __EGLEW_KHR_create_context_no_error;$/;"	v	typeref:typename:EGLEW_VAR_EXPORT GLboolean
__EGLEW_KHR_debug	./GL/eglew.h	/^EGLEW_VAR_EXPORT GLboolean __EGLEW_KHR_debug;$/;"	v	typeref:typename:EGLEW_VAR_EXPORT GLboolean
__EGLEW_KHR_display_reference	./GL/eglew.h	/^EGLEW_VAR_EXPORT GLboolean __EGLEW_KHR_display_reference;$/;"	v	typeref:typename:EGLEW_VAR_EXPORT GLboolean
__EGLEW_KHR_fence_sync	./GL/eglew.h	/^EGLEW_VAR_EXPORT GLboolean __EGLEW_KHR_fence_sync;$/;"	v	typeref:typename:EGLEW_VAR_EXPORT GLboolean
__EGLEW_KHR_get_all_proc_addresses	./GL/eglew.h	/^EGLEW_VAR_EXPORT GLboolean __EGLEW_KHR_get_all_proc_addresses;$/;"	v	typeref:typename:EGLEW_VAR_EXPORT GLboolean
__EGLEW_KHR_gl_colorspace	./GL/eglew.h	/^EGLEW_VAR_EXPORT GLboolean __EGLEW_KHR_gl_colorspace;$/;"	v	typeref:typename:EGLEW_VAR_EXPORT GLboolean
__EGLEW_KHR_gl_renderbuffer_image	./GL/eglew.h	/^EGLEW_VAR_EXPORT GLboolean __EGLEW_KHR_gl_renderbuffer_image;$/;"	v	typeref:typename:EGLEW_VAR_EXPORT GLboolean
__EGLEW_KHR_gl_texture_2D_image	./GL/eglew.h	/^EGLEW_VAR_EXPORT GLboolean __EGLEW_KHR_gl_texture_2D_image;$/;"	v	typeref:typename:EGLEW_VAR_EXPORT GLboolean
__EGLEW_KHR_gl_texture_3D_image	./GL/eglew.h	/^EGLEW_VAR_EXPORT GLboolean __EGLEW_KHR_gl_texture_3D_image;$/;"	v	typeref:typename:EGLEW_VAR_EXPORT GLboolean
__EGLEW_KHR_gl_texture_cubemap_image	./GL/eglew.h	/^EGLEW_VAR_EXPORT GLboolean __EGLEW_KHR_gl_texture_cubemap_image;$/;"	v	typeref:typename:EGLEW_VAR_EXPORT GLboolean
__EGLEW_KHR_image	./GL/eglew.h	/^EGLEW_VAR_EXPORT GLboolean __EGLEW_KHR_image;$/;"	v	typeref:typename:EGLEW_VAR_EXPORT GLboolean
__EGLEW_KHR_image_base	./GL/eglew.h	/^EGLEW_VAR_EXPORT GLboolean __EGLEW_KHR_image_base;$/;"	v	typeref:typename:EGLEW_VAR_EXPORT GLboolean
__EGLEW_KHR_image_pixmap	./GL/eglew.h	/^EGLEW_VAR_EXPORT GLboolean __EGLEW_KHR_image_pixmap;$/;"	v	typeref:typename:EGLEW_VAR_EXPORT GLboolean
__EGLEW_KHR_lock_surface	./GL/eglew.h	/^EGLEW_VAR_EXPORT GLboolean __EGLEW_KHR_lock_surface;$/;"	v	typeref:typename:EGLEW_VAR_EXPORT GLboolean
__EGLEW_KHR_lock_surface2	./GL/eglew.h	/^EGLEW_VAR_EXPORT GLboolean __EGLEW_KHR_lock_surface2;$/;"	v	typeref:typename:EGLEW_VAR_EXPORT GLboolean
__EGLEW_KHR_lock_surface3	./GL/eglew.h	/^EGLEW_VAR_EXPORT GLboolean __EGLEW_KHR_lock_surface3;$/;"	v	typeref:typename:EGLEW_VAR_EXPORT GLboolean
__EGLEW_KHR_mutable_render_buffer	./GL/eglew.h	/^EGLEW_VAR_EXPORT GLboolean __EGLEW_KHR_mutable_render_buffer;$/;"	v	typeref:typename:EGLEW_VAR_EXPORT GLboolean
__EGLEW_KHR_no_config_context	./GL/eglew.h	/^EGLEW_VAR_EXPORT GLboolean __EGLEW_KHR_no_config_context;$/;"	v	typeref:typename:EGLEW_VAR_EXPORT GLboolean
__EGLEW_KHR_partial_update	./GL/eglew.h	/^EGLEW_VAR_EXPORT GLboolean __EGLEW_KHR_partial_update;$/;"	v	typeref:typename:EGLEW_VAR_EXPORT GLboolean
__EGLEW_KHR_platform_android	./GL/eglew.h	/^EGLEW_VAR_EXPORT GLboolean __EGLEW_KHR_platform_android;$/;"	v	typeref:typename:EGLEW_VAR_EXPORT GLboolean
__EGLEW_KHR_platform_gbm	./GL/eglew.h	/^EGLEW_VAR_EXPORT GLboolean __EGLEW_KHR_platform_gbm;$/;"	v	typeref:typename:EGLEW_VAR_EXPORT GLboolean
__EGLEW_KHR_platform_wayland	./GL/eglew.h	/^EGLEW_VAR_EXPORT GLboolean __EGLEW_KHR_platform_wayland;$/;"	v	typeref:typename:EGLEW_VAR_EXPORT GLboolean
__EGLEW_KHR_platform_x11	./GL/eglew.h	/^EGLEW_VAR_EXPORT GLboolean __EGLEW_KHR_platform_x11;$/;"	v	typeref:typename:EGLEW_VAR_EXPORT GLboolean
__EGLEW_KHR_reusable_sync	./GL/eglew.h	/^EGLEW_VAR_EXPORT GLboolean __EGLEW_KHR_reusable_sync;$/;"	v	typeref:typename:EGLEW_VAR_EXPORT GLboolean
__EGLEW_KHR_stream	./GL/eglew.h	/^EGLEW_VAR_EXPORT GLboolean __EGLEW_KHR_stream;$/;"	v	typeref:typename:EGLEW_VAR_EXPORT GLboolean
__EGLEW_KHR_stream_attrib	./GL/eglew.h	/^EGLEW_VAR_EXPORT GLboolean __EGLEW_KHR_stream_attrib;$/;"	v	typeref:typename:EGLEW_VAR_EXPORT GLboolean
__EGLEW_KHR_stream_consumer_gltexture	./GL/eglew.h	/^EGLEW_VAR_EXPORT GLboolean __EGLEW_KHR_stream_consumer_gltexture;$/;"	v	typeref:typename:EGLEW_VAR_EXPORT GLboolean
__EGLEW_KHR_stream_cross_process_fd	./GL/eglew.h	/^EGLEW_VAR_EXPORT GLboolean __EGLEW_KHR_stream_cross_process_fd;$/;"	v	typeref:typename:EGLEW_VAR_EXPORT GLboolean
__EGLEW_KHR_stream_fifo	./GL/eglew.h	/^EGLEW_VAR_EXPORT GLboolean __EGLEW_KHR_stream_fifo;$/;"	v	typeref:typename:EGLEW_VAR_EXPORT GLboolean
__EGLEW_KHR_stream_producer_aldatalocator	./GL/eglew.h	/^EGLEW_VAR_EXPORT GLboolean __EGLEW_KHR_stream_producer_aldatalocator;$/;"	v	typeref:typename:EGLEW_VAR_EXPORT GLboolean
__EGLEW_KHR_stream_producer_eglsurface	./GL/eglew.h	/^EGLEW_VAR_EXPORT GLboolean __EGLEW_KHR_stream_producer_eglsurface;$/;"	v	typeref:typename:EGLEW_VAR_EXPORT GLboolean
__EGLEW_KHR_surfaceless_context	./GL/eglew.h	/^EGLEW_VAR_EXPORT GLboolean __EGLEW_KHR_surfaceless_context;$/;"	v	typeref:typename:EGLEW_VAR_EXPORT GLboolean
__EGLEW_KHR_swap_buffers_with_damage	./GL/eglew.h	/^EGLEW_VAR_EXPORT GLboolean __EGLEW_KHR_swap_buffers_with_damage;$/;"	v	typeref:typename:EGLEW_VAR_EXPORT GLboolean
__EGLEW_KHR_vg_parent_image	./GL/eglew.h	/^EGLEW_VAR_EXPORT GLboolean __EGLEW_KHR_vg_parent_image;$/;"	v	typeref:typename:EGLEW_VAR_EXPORT GLboolean
__EGLEW_KHR_wait_sync	./GL/eglew.h	/^EGLEW_VAR_EXPORT GLboolean __EGLEW_KHR_wait_sync;$/;"	v	typeref:typename:EGLEW_VAR_EXPORT GLboolean
__EGLEW_MESA_drm_image	./GL/eglew.h	/^EGLEW_VAR_EXPORT GLboolean __EGLEW_MESA_drm_image;$/;"	v	typeref:typename:EGLEW_VAR_EXPORT GLboolean
__EGLEW_MESA_image_dma_buf_export	./GL/eglew.h	/^EGLEW_VAR_EXPORT GLboolean __EGLEW_MESA_image_dma_buf_export;$/;"	v	typeref:typename:EGLEW_VAR_EXPORT GLboolean
__EGLEW_MESA_platform_gbm	./GL/eglew.h	/^EGLEW_VAR_EXPORT GLboolean __EGLEW_MESA_platform_gbm;$/;"	v	typeref:typename:EGLEW_VAR_EXPORT GLboolean
__EGLEW_MESA_platform_surfaceless	./GL/eglew.h	/^EGLEW_VAR_EXPORT GLboolean __EGLEW_MESA_platform_surfaceless;$/;"	v	typeref:typename:EGLEW_VAR_EXPORT GLboolean
__EGLEW_MESA_query_driver	./GL/eglew.h	/^EGLEW_VAR_EXPORT GLboolean __EGLEW_MESA_query_driver;$/;"	v	typeref:typename:EGLEW_VAR_EXPORT GLboolean
__EGLEW_NOK_swap_region	./GL/eglew.h	/^EGLEW_VAR_EXPORT GLboolean __EGLEW_NOK_swap_region;$/;"	v	typeref:typename:EGLEW_VAR_EXPORT GLboolean
__EGLEW_NOK_swap_region2	./GL/eglew.h	/^EGLEW_VAR_EXPORT GLboolean __EGLEW_NOK_swap_region2;$/;"	v	typeref:typename:EGLEW_VAR_EXPORT GLboolean
__EGLEW_NOK_texture_from_pixmap	./GL/eglew.h	/^EGLEW_VAR_EXPORT GLboolean __EGLEW_NOK_texture_from_pixmap;$/;"	v	typeref:typename:EGLEW_VAR_EXPORT GLboolean
__EGLEW_NV_3dvision_surface	./GL/eglew.h	/^EGLEW_VAR_EXPORT GLboolean __EGLEW_NV_3dvision_surface;$/;"	v	typeref:typename:EGLEW_VAR_EXPORT GLboolean
__EGLEW_NV_context_priority_realtime	./GL/eglew.h	/^EGLEW_VAR_EXPORT GLboolean __EGLEW_NV_context_priority_realtime;$/;"	v	typeref:typename:EGLEW_VAR_EXPORT GLboolean
__EGLEW_NV_coverage_sample	./GL/eglew.h	/^EGLEW_VAR_EXPORT GLboolean __EGLEW_NV_coverage_sample;$/;"	v	typeref:typename:EGLEW_VAR_EXPORT GLboolean
__EGLEW_NV_coverage_sample_resolve	./GL/eglew.h	/^EGLEW_VAR_EXPORT GLboolean __EGLEW_NV_coverage_sample_resolve;$/;"	v	typeref:typename:EGLEW_VAR_EXPORT GLboolean
__EGLEW_NV_cuda_event	./GL/eglew.h	/^EGLEW_VAR_EXPORT GLboolean __EGLEW_NV_cuda_event;$/;"	v	typeref:typename:EGLEW_VAR_EXPORT GLboolean
__EGLEW_NV_depth_nonlinear	./GL/eglew.h	/^EGLEW_VAR_EXPORT GLboolean __EGLEW_NV_depth_nonlinear;$/;"	v	typeref:typename:EGLEW_VAR_EXPORT GLboolean
__EGLEW_NV_device_cuda	./GL/eglew.h	/^EGLEW_VAR_EXPORT GLboolean __EGLEW_NV_device_cuda;$/;"	v	typeref:typename:EGLEW_VAR_EXPORT GLboolean
__EGLEW_NV_native_query	./GL/eglew.h	/^EGLEW_VAR_EXPORT GLboolean __EGLEW_NV_native_query;$/;"	v	typeref:typename:EGLEW_VAR_EXPORT GLboolean
__EGLEW_NV_post_convert_rounding	./GL/eglew.h	/^EGLEW_VAR_EXPORT GLboolean __EGLEW_NV_post_convert_rounding;$/;"	v	typeref:typename:EGLEW_VAR_EXPORT GLboolean
__EGLEW_NV_post_sub_buffer	./GL/eglew.h	/^EGLEW_VAR_EXPORT GLboolean __EGLEW_NV_post_sub_buffer;$/;"	v	typeref:typename:EGLEW_VAR_EXPORT GLboolean
__EGLEW_NV_quadruple_buffer	./GL/eglew.h	/^EGLEW_VAR_EXPORT GLboolean __EGLEW_NV_quadruple_buffer;$/;"	v	typeref:typename:EGLEW_VAR_EXPORT GLboolean
__EGLEW_NV_robustness_video_memory_purge	./GL/eglew.h	/^EGLEW_VAR_EXPORT GLboolean __EGLEW_NV_robustness_video_memory_purge;$/;"	v	typeref:typename:EGLEW_VAR_EXPORT GLboolean
__EGLEW_NV_stream_consumer_gltexture_yuv	./GL/eglew.h	/^EGLEW_VAR_EXPORT GLboolean __EGLEW_NV_stream_consumer_gltexture_yuv;$/;"	v	typeref:typename:EGLEW_VAR_EXPORT GLboolean
__EGLEW_NV_stream_cross_display	./GL/eglew.h	/^EGLEW_VAR_EXPORT GLboolean __EGLEW_NV_stream_cross_display;$/;"	v	typeref:typename:EGLEW_VAR_EXPORT GLboolean
__EGLEW_NV_stream_cross_object	./GL/eglew.h	/^EGLEW_VAR_EXPORT GLboolean __EGLEW_NV_stream_cross_object;$/;"	v	typeref:typename:EGLEW_VAR_EXPORT GLboolean
__EGLEW_NV_stream_cross_partition	./GL/eglew.h	/^EGLEW_VAR_EXPORT GLboolean __EGLEW_NV_stream_cross_partition;$/;"	v	typeref:typename:EGLEW_VAR_EXPORT GLboolean
__EGLEW_NV_stream_cross_process	./GL/eglew.h	/^EGLEW_VAR_EXPORT GLboolean __EGLEW_NV_stream_cross_process;$/;"	v	typeref:typename:EGLEW_VAR_EXPORT GLboolean
__EGLEW_NV_stream_cross_system	./GL/eglew.h	/^EGLEW_VAR_EXPORT GLboolean __EGLEW_NV_stream_cross_system;$/;"	v	typeref:typename:EGLEW_VAR_EXPORT GLboolean
__EGLEW_NV_stream_dma	./GL/eglew.h	/^EGLEW_VAR_EXPORT GLboolean __EGLEW_NV_stream_dma;$/;"	v	typeref:typename:EGLEW_VAR_EXPORT GLboolean
__EGLEW_NV_stream_fifo_next	./GL/eglew.h	/^EGLEW_VAR_EXPORT GLboolean __EGLEW_NV_stream_fifo_next;$/;"	v	typeref:typename:EGLEW_VAR_EXPORT GLboolean
__EGLEW_NV_stream_fifo_synchronous	./GL/eglew.h	/^EGLEW_VAR_EXPORT GLboolean __EGLEW_NV_stream_fifo_synchronous;$/;"	v	typeref:typename:EGLEW_VAR_EXPORT GLboolean
__EGLEW_NV_stream_flush	./GL/eglew.h	/^EGLEW_VAR_EXPORT GLboolean __EGLEW_NV_stream_flush;$/;"	v	typeref:typename:EGLEW_VAR_EXPORT GLboolean
__EGLEW_NV_stream_frame_limits	./GL/eglew.h	/^EGLEW_VAR_EXPORT GLboolean __EGLEW_NV_stream_frame_limits;$/;"	v	typeref:typename:EGLEW_VAR_EXPORT GLboolean
__EGLEW_NV_stream_metadata	./GL/eglew.h	/^EGLEW_VAR_EXPORT GLboolean __EGLEW_NV_stream_metadata;$/;"	v	typeref:typename:EGLEW_VAR_EXPORT GLboolean
__EGLEW_NV_stream_origin	./GL/eglew.h	/^EGLEW_VAR_EXPORT GLboolean __EGLEW_NV_stream_origin;$/;"	v	typeref:typename:EGLEW_VAR_EXPORT GLboolean
__EGLEW_NV_stream_remote	./GL/eglew.h	/^EGLEW_VAR_EXPORT GLboolean __EGLEW_NV_stream_remote;$/;"	v	typeref:typename:EGLEW_VAR_EXPORT GLboolean
__EGLEW_NV_stream_reset	./GL/eglew.h	/^EGLEW_VAR_EXPORT GLboolean __EGLEW_NV_stream_reset;$/;"	v	typeref:typename:EGLEW_VAR_EXPORT GLboolean
__EGLEW_NV_stream_socket	./GL/eglew.h	/^EGLEW_VAR_EXPORT GLboolean __EGLEW_NV_stream_socket;$/;"	v	typeref:typename:EGLEW_VAR_EXPORT GLboolean
__EGLEW_NV_stream_socket_inet	./GL/eglew.h	/^EGLEW_VAR_EXPORT GLboolean __EGLEW_NV_stream_socket_inet;$/;"	v	typeref:typename:EGLEW_VAR_EXPORT GLboolean
__EGLEW_NV_stream_socket_unix	./GL/eglew.h	/^EGLEW_VAR_EXPORT GLboolean __EGLEW_NV_stream_socket_unix;$/;"	v	typeref:typename:EGLEW_VAR_EXPORT GLboolean
__EGLEW_NV_stream_sync	./GL/eglew.h	/^EGLEW_VAR_EXPORT GLboolean __EGLEW_NV_stream_sync;$/;"	v	typeref:typename:EGLEW_VAR_EXPORT GLboolean
__EGLEW_NV_sync	./GL/eglew.h	/^EGLEW_VAR_EXPORT GLboolean __EGLEW_NV_sync;$/;"	v	typeref:typename:EGLEW_VAR_EXPORT GLboolean
__EGLEW_NV_system_time	./GL/eglew.h	/^EGLEW_VAR_EXPORT GLboolean __EGLEW_NV_system_time;$/;"	v	typeref:typename:EGLEW_VAR_EXPORT GLboolean
__EGLEW_NV_triple_buffer	./GL/eglew.h	/^EGLEW_VAR_EXPORT GLboolean __EGLEW_NV_triple_buffer;$/;"	v	typeref:typename:EGLEW_VAR_EXPORT GLboolean
__EGLEW_TIZEN_image_native_buffer	./GL/eglew.h	/^EGLEW_VAR_EXPORT GLboolean __EGLEW_TIZEN_image_native_buffer;$/;"	v	typeref:typename:EGLEW_VAR_EXPORT GLboolean
__EGLEW_TIZEN_image_native_surface	./GL/eglew.h	/^EGLEW_VAR_EXPORT GLboolean __EGLEW_TIZEN_image_native_surface;$/;"	v	typeref:typename:EGLEW_VAR_EXPORT GLboolean
__EGLEW_VERSION_1_0	./GL/eglew.h	/^EGLEW_VAR_EXPORT GLboolean __EGLEW_VERSION_1_0;$/;"	v	typeref:typename:EGLEW_VAR_EXPORT GLboolean
__EGLEW_VERSION_1_1	./GL/eglew.h	/^EGLEW_VAR_EXPORT GLboolean __EGLEW_VERSION_1_1;$/;"	v	typeref:typename:EGLEW_VAR_EXPORT GLboolean
__EGLEW_VERSION_1_2	./GL/eglew.h	/^EGLEW_VAR_EXPORT GLboolean __EGLEW_VERSION_1_2;$/;"	v	typeref:typename:EGLEW_VAR_EXPORT GLboolean
__EGLEW_VERSION_1_3	./GL/eglew.h	/^EGLEW_VAR_EXPORT GLboolean __EGLEW_VERSION_1_3;$/;"	v	typeref:typename:EGLEW_VAR_EXPORT GLboolean
__EGLEW_VERSION_1_4	./GL/eglew.h	/^EGLEW_VAR_EXPORT GLboolean __EGLEW_VERSION_1_4;$/;"	v	typeref:typename:EGLEW_VAR_EXPORT GLboolean
__EGLEW_VERSION_1_5	./GL/eglew.h	/^EGLEW_VAR_EXPORT GLboolean __EGLEW_VERSION_1_5;$/;"	v	typeref:typename:EGLEW_VAR_EXPORT GLboolean
__EGLEW_WL_bind_wayland_display	./GL/eglew.h	/^EGLEW_VAR_EXPORT GLboolean __EGLEW_WL_bind_wayland_display;$/;"	v	typeref:typename:EGLEW_VAR_EXPORT GLboolean
__EGLEW_WL_create_wayland_buffer_from_image	./GL/eglew.h	/^EGLEW_VAR_EXPORT GLboolean __EGLEW_WL_create_wayland_buffer_from_image;$/;"	v	typeref:typename:EGLEW_VAR_EXPORT GLboolean
__GLEW_3DFX_multisample	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_3DFX_multisample;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_3DFX_tbuffer	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_3DFX_tbuffer;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_3DFX_texture_compression_FXT1	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_3DFX_texture_compression_FXT1;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_AMD_blend_minmax_factor	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_AMD_blend_minmax_factor;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_AMD_compressed_3DC_texture	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_AMD_compressed_3DC_texture;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_AMD_compressed_ATC_texture	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_AMD_compressed_ATC_texture;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_AMD_conservative_depth	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_AMD_conservative_depth;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_AMD_debug_output	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_AMD_debug_output;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_AMD_depth_clamp_separate	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_AMD_depth_clamp_separate;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_AMD_draw_buffers_blend	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_AMD_draw_buffers_blend;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_AMD_framebuffer_multisample_advanced	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_AMD_framebuffer_multisample_advanced;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_AMD_framebuffer_sample_positions	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_AMD_framebuffer_sample_positions;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_AMD_gcn_shader	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_AMD_gcn_shader;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_AMD_gpu_shader_half_float	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_AMD_gpu_shader_half_float;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_AMD_gpu_shader_half_float_fetch	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_AMD_gpu_shader_half_float_fetch;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_AMD_gpu_shader_int16	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_AMD_gpu_shader_int16;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_AMD_gpu_shader_int64	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_AMD_gpu_shader_int64;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_AMD_interleaved_elements	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_AMD_interleaved_elements;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_AMD_multi_draw_indirect	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_AMD_multi_draw_indirect;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_AMD_name_gen_delete	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_AMD_name_gen_delete;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_AMD_occlusion_query_event	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_AMD_occlusion_query_event;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_AMD_performance_monitor	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_AMD_performance_monitor;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_AMD_pinned_memory	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_AMD_pinned_memory;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_AMD_program_binary_Z400	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_AMD_program_binary_Z400;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_AMD_query_buffer_object	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_AMD_query_buffer_object;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_AMD_sample_positions	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_AMD_sample_positions;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_AMD_seamless_cubemap_per_texture	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_AMD_seamless_cubemap_per_texture;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_AMD_shader_atomic_counter_ops	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_AMD_shader_atomic_counter_ops;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_AMD_shader_ballot	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_AMD_shader_ballot;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_AMD_shader_explicit_vertex_parameter	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_AMD_shader_explicit_vertex_parameter;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_AMD_shader_image_load_store_lod	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_AMD_shader_image_load_store_lod;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_AMD_shader_stencil_export	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_AMD_shader_stencil_export;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_AMD_shader_stencil_value_export	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_AMD_shader_stencil_value_export;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_AMD_shader_trinary_minmax	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_AMD_shader_trinary_minmax;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_AMD_sparse_texture	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_AMD_sparse_texture;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_AMD_stencil_operation_extended	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_AMD_stencil_operation_extended;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_AMD_texture_gather_bias_lod	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_AMD_texture_gather_bias_lod;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_AMD_texture_texture4	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_AMD_texture_texture4;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_AMD_transform_feedback3_lines_triangles	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_AMD_transform_feedback3_lines_triangles;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_AMD_transform_feedback4	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_AMD_transform_feedback4;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_AMD_vertex_shader_layer	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_AMD_vertex_shader_layer;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_AMD_vertex_shader_tessellator	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_AMD_vertex_shader_tessellator;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_AMD_vertex_shader_viewport_index	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_AMD_vertex_shader_viewport_index;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_ANDROID_extension_pack_es31a	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_ANDROID_extension_pack_es31a;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_ANGLE_depth_texture	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_ANGLE_depth_texture;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_ANGLE_framebuffer_blit	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_ANGLE_framebuffer_blit;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_ANGLE_framebuffer_multisample	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_ANGLE_framebuffer_multisample;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_ANGLE_instanced_arrays	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_ANGLE_instanced_arrays;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_ANGLE_pack_reverse_row_order	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_ANGLE_pack_reverse_row_order;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_ANGLE_program_binary	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_ANGLE_program_binary;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_ANGLE_texture_compression_dxt1	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_ANGLE_texture_compression_dxt1;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_ANGLE_texture_compression_dxt3	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_ANGLE_texture_compression_dxt3;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_ANGLE_texture_compression_dxt5	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_ANGLE_texture_compression_dxt5;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_ANGLE_texture_usage	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_ANGLE_texture_usage;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_ANGLE_timer_query	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_ANGLE_timer_query;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_ANGLE_translated_shader_source	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_ANGLE_translated_shader_source;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_APPLE_aux_depth_stencil	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_APPLE_aux_depth_stencil;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_APPLE_client_storage	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_APPLE_client_storage;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_APPLE_clip_distance	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_APPLE_clip_distance;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_APPLE_color_buffer_packed_float	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_APPLE_color_buffer_packed_float;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_APPLE_copy_texture_levels	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_APPLE_copy_texture_levels;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_APPLE_element_array	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_APPLE_element_array;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_APPLE_fence	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_APPLE_fence;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_APPLE_float_pixels	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_APPLE_float_pixels;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_APPLE_flush_buffer_range	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_APPLE_flush_buffer_range;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_APPLE_framebuffer_multisample	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_APPLE_framebuffer_multisample;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_APPLE_object_purgeable	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_APPLE_object_purgeable;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_APPLE_pixel_buffer	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_APPLE_pixel_buffer;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_APPLE_rgb_422	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_APPLE_rgb_422;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_APPLE_row_bytes	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_APPLE_row_bytes;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_APPLE_specular_vector	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_APPLE_specular_vector;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_APPLE_sync	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_APPLE_sync;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_APPLE_texture_2D_limited_npot	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_APPLE_texture_2D_limited_npot;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_APPLE_texture_format_BGRA8888	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_APPLE_texture_format_BGRA8888;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_APPLE_texture_max_level	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_APPLE_texture_max_level;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_APPLE_texture_packed_float	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_APPLE_texture_packed_float;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_APPLE_texture_range	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_APPLE_texture_range;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_APPLE_transform_hint	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_APPLE_transform_hint;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_APPLE_vertex_array_object	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_APPLE_vertex_array_object;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_APPLE_vertex_array_range	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_APPLE_vertex_array_range;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_APPLE_vertex_program_evaluators	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_APPLE_vertex_program_evaluators;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_APPLE_ycbcr_422	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_APPLE_ycbcr_422;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_ARB_ES2_compatibility	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_ARB_ES2_compatibility;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_ARB_ES3_1_compatibility	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_ARB_ES3_1_compatibility;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_ARB_ES3_2_compatibility	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_ARB_ES3_2_compatibility;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_ARB_ES3_compatibility	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_ARB_ES3_compatibility;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_ARB_arrays_of_arrays	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_ARB_arrays_of_arrays;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_ARB_base_instance	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_ARB_base_instance;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_ARB_bindless_texture	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_ARB_bindless_texture;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_ARB_blend_func_extended	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_ARB_blend_func_extended;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_ARB_buffer_storage	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_ARB_buffer_storage;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_ARB_cl_event	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_ARB_cl_event;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_ARB_clear_buffer_object	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_ARB_clear_buffer_object;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_ARB_clear_texture	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_ARB_clear_texture;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_ARB_clip_control	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_ARB_clip_control;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_ARB_color_buffer_float	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_ARB_color_buffer_float;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_ARB_compatibility	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_ARB_compatibility;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_ARB_compressed_texture_pixel_storage	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_ARB_compressed_texture_pixel_storage;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_ARB_compute_shader	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_ARB_compute_shader;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_ARB_compute_variable_group_size	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_ARB_compute_variable_group_size;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_ARB_conditional_render_inverted	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_ARB_conditional_render_inverted;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_ARB_conservative_depth	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_ARB_conservative_depth;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_ARB_copy_buffer	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_ARB_copy_buffer;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_ARB_copy_image	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_ARB_copy_image;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_ARB_cull_distance	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_ARB_cull_distance;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_ARB_debug_output	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_ARB_debug_output;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_ARB_depth_buffer_float	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_ARB_depth_buffer_float;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_ARB_depth_clamp	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_ARB_depth_clamp;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_ARB_depth_texture	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_ARB_depth_texture;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_ARB_derivative_control	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_ARB_derivative_control;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_ARB_direct_state_access	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_ARB_direct_state_access;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_ARB_draw_buffers	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_ARB_draw_buffers;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_ARB_draw_buffers_blend	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_ARB_draw_buffers_blend;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_ARB_draw_elements_base_vertex	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_ARB_draw_elements_base_vertex;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_ARB_draw_indirect	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_ARB_draw_indirect;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_ARB_draw_instanced	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_ARB_draw_instanced;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_ARB_enhanced_layouts	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_ARB_enhanced_layouts;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_ARB_explicit_attrib_location	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_ARB_explicit_attrib_location;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_ARB_explicit_uniform_location	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_ARB_explicit_uniform_location;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_ARB_fragment_coord_conventions	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_ARB_fragment_coord_conventions;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_ARB_fragment_layer_viewport	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_ARB_fragment_layer_viewport;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_ARB_fragment_program	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_ARB_fragment_program;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_ARB_fragment_program_shadow	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_ARB_fragment_program_shadow;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_ARB_fragment_shader	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_ARB_fragment_shader;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_ARB_fragment_shader_interlock	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_ARB_fragment_shader_interlock;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_ARB_framebuffer_no_attachments	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_ARB_framebuffer_no_attachments;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_ARB_framebuffer_object	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_ARB_framebuffer_object;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_ARB_framebuffer_sRGB	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_ARB_framebuffer_sRGB;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_ARB_geometry_shader4	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_ARB_geometry_shader4;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_ARB_get_program_binary	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_ARB_get_program_binary;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_ARB_get_texture_sub_image	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_ARB_get_texture_sub_image;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_ARB_gl_spirv	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_ARB_gl_spirv;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_ARB_gpu_shader5	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_ARB_gpu_shader5;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_ARB_gpu_shader_fp64	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_ARB_gpu_shader_fp64;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_ARB_gpu_shader_int64	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_ARB_gpu_shader_int64;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_ARB_half_float_pixel	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_ARB_half_float_pixel;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_ARB_half_float_vertex	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_ARB_half_float_vertex;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_ARB_imaging	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_ARB_imaging;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_ARB_indirect_parameters	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_ARB_indirect_parameters;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_ARB_instanced_arrays	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_ARB_instanced_arrays;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_ARB_internalformat_query	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_ARB_internalformat_query;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_ARB_internalformat_query2	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_ARB_internalformat_query2;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_ARB_invalidate_subdata	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_ARB_invalidate_subdata;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_ARB_map_buffer_alignment	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_ARB_map_buffer_alignment;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_ARB_map_buffer_range	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_ARB_map_buffer_range;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_ARB_matrix_palette	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_ARB_matrix_palette;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_ARB_multi_bind	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_ARB_multi_bind;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_ARB_multi_draw_indirect	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_ARB_multi_draw_indirect;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_ARB_multisample	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_ARB_multisample;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_ARB_multitexture	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_ARB_multitexture;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_ARB_occlusion_query	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_ARB_occlusion_query;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_ARB_occlusion_query2	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_ARB_occlusion_query2;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_ARB_parallel_shader_compile	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_ARB_parallel_shader_compile;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_ARB_pipeline_statistics_query	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_ARB_pipeline_statistics_query;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_ARB_pixel_buffer_object	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_ARB_pixel_buffer_object;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_ARB_point_parameters	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_ARB_point_parameters;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_ARB_point_sprite	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_ARB_point_sprite;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_ARB_polygon_offset_clamp	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_ARB_polygon_offset_clamp;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_ARB_post_depth_coverage	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_ARB_post_depth_coverage;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_ARB_program_interface_query	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_ARB_program_interface_query;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_ARB_provoking_vertex	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_ARB_provoking_vertex;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_ARB_query_buffer_object	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_ARB_query_buffer_object;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_ARB_robust_buffer_access_behavior	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_ARB_robust_buffer_access_behavior;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_ARB_robustness	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_ARB_robustness;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_ARB_robustness_application_isolation	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_ARB_robustness_application_isolation;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_ARB_robustness_share_group_isolation	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_ARB_robustness_share_group_isolation;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_ARB_sample_locations	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_ARB_sample_locations;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_ARB_sample_shading	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_ARB_sample_shading;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_ARB_sampler_objects	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_ARB_sampler_objects;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_ARB_seamless_cube_map	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_ARB_seamless_cube_map;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_ARB_seamless_cubemap_per_texture	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_ARB_seamless_cubemap_per_texture;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_ARB_separate_shader_objects	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_ARB_separate_shader_objects;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_ARB_shader_atomic_counter_ops	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_ARB_shader_atomic_counter_ops;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_ARB_shader_atomic_counters	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_ARB_shader_atomic_counters;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_ARB_shader_ballot	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_ARB_shader_ballot;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_ARB_shader_bit_encoding	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_ARB_shader_bit_encoding;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_ARB_shader_clock	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_ARB_shader_clock;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_ARB_shader_draw_parameters	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_ARB_shader_draw_parameters;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_ARB_shader_group_vote	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_ARB_shader_group_vote;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_ARB_shader_image_load_store	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_ARB_shader_image_load_store;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_ARB_shader_image_size	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_ARB_shader_image_size;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_ARB_shader_objects	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_ARB_shader_objects;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_ARB_shader_precision	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_ARB_shader_precision;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_ARB_shader_stencil_export	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_ARB_shader_stencil_export;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_ARB_shader_storage_buffer_object	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_ARB_shader_storage_buffer_object;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_ARB_shader_subroutine	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_ARB_shader_subroutine;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_ARB_shader_texture_image_samples	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_ARB_shader_texture_image_samples;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_ARB_shader_texture_lod	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_ARB_shader_texture_lod;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_ARB_shader_viewport_layer_array	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_ARB_shader_viewport_layer_array;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_ARB_shading_language_100	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_ARB_shading_language_100;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_ARB_shading_language_420pack	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_ARB_shading_language_420pack;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_ARB_shading_language_include	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_ARB_shading_language_include;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_ARB_shading_language_packing	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_ARB_shading_language_packing;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_ARB_shadow	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_ARB_shadow;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_ARB_shadow_ambient	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_ARB_shadow_ambient;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_ARB_sparse_buffer	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_ARB_sparse_buffer;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_ARB_sparse_texture	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_ARB_sparse_texture;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_ARB_sparse_texture2	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_ARB_sparse_texture2;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_ARB_sparse_texture_clamp	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_ARB_sparse_texture_clamp;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_ARB_spirv_extensions	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_ARB_spirv_extensions;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_ARB_stencil_texturing	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_ARB_stencil_texturing;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_ARB_sync	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_ARB_sync;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_ARB_tessellation_shader	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_ARB_tessellation_shader;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_ARB_texture_barrier	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_ARB_texture_barrier;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_ARB_texture_border_clamp	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_ARB_texture_border_clamp;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_ARB_texture_buffer_object	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_ARB_texture_buffer_object;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_ARB_texture_buffer_object_rgb32	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_ARB_texture_buffer_object_rgb32;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_ARB_texture_buffer_range	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_ARB_texture_buffer_range;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_ARB_texture_compression	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_ARB_texture_compression;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_ARB_texture_compression_bptc	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_ARB_texture_compression_bptc;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_ARB_texture_compression_rgtc	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_ARB_texture_compression_rgtc;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_ARB_texture_cube_map	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_ARB_texture_cube_map;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_ARB_texture_cube_map_array	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_ARB_texture_cube_map_array;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_ARB_texture_env_add	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_ARB_texture_env_add;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_ARB_texture_env_combine	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_ARB_texture_env_combine;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_ARB_texture_env_crossbar	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_ARB_texture_env_crossbar;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_ARB_texture_env_dot3	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_ARB_texture_env_dot3;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_ARB_texture_filter_anisotropic	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_ARB_texture_filter_anisotropic;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_ARB_texture_filter_minmax	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_ARB_texture_filter_minmax;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_ARB_texture_float	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_ARB_texture_float;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_ARB_texture_gather	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_ARB_texture_gather;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_ARB_texture_mirror_clamp_to_edge	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_ARB_texture_mirror_clamp_to_edge;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_ARB_texture_mirrored_repeat	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_ARB_texture_mirrored_repeat;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_ARB_texture_multisample	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_ARB_texture_multisample;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_ARB_texture_non_power_of_two	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_ARB_texture_non_power_of_two;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_ARB_texture_query_levels	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_ARB_texture_query_levels;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_ARB_texture_query_lod	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_ARB_texture_query_lod;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_ARB_texture_rectangle	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_ARB_texture_rectangle;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_ARB_texture_rg	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_ARB_texture_rg;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_ARB_texture_rgb10_a2ui	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_ARB_texture_rgb10_a2ui;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_ARB_texture_stencil8	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_ARB_texture_stencil8;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_ARB_texture_storage	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_ARB_texture_storage;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_ARB_texture_storage_multisample	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_ARB_texture_storage_multisample;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_ARB_texture_swizzle	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_ARB_texture_swizzle;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_ARB_texture_view	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_ARB_texture_view;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_ARB_timer_query	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_ARB_timer_query;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_ARB_transform_feedback2	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_ARB_transform_feedback2;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_ARB_transform_feedback3	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_ARB_transform_feedback3;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_ARB_transform_feedback_instanced	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_ARB_transform_feedback_instanced;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_ARB_transform_feedback_overflow_query	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_ARB_transform_feedback_overflow_query;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_ARB_transpose_matrix	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_ARB_transpose_matrix;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_ARB_uniform_buffer_object	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_ARB_uniform_buffer_object;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_ARB_vertex_array_bgra	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_ARB_vertex_array_bgra;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_ARB_vertex_array_object	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_ARB_vertex_array_object;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_ARB_vertex_attrib_64bit	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_ARB_vertex_attrib_64bit;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_ARB_vertex_attrib_binding	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_ARB_vertex_attrib_binding;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_ARB_vertex_blend	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_ARB_vertex_blend;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_ARB_vertex_buffer_object	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_ARB_vertex_buffer_object;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_ARB_vertex_program	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_ARB_vertex_program;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_ARB_vertex_shader	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_ARB_vertex_shader;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_ARB_vertex_type_10f_11f_11f_rev	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_ARB_vertex_type_10f_11f_11f_rev;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_ARB_vertex_type_2_10_10_10_rev	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_ARB_vertex_type_2_10_10_10_rev;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_ARB_viewport_array	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_ARB_viewport_array;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_ARB_window_pos	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_ARB_window_pos;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_ARM_mali_program_binary	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_ARM_mali_program_binary;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_ARM_mali_shader_binary	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_ARM_mali_shader_binary;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_ARM_rgba8	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_ARM_rgba8;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_ARM_shader_framebuffer_fetch	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_ARM_shader_framebuffer_fetch;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_ARM_shader_framebuffer_fetch_depth_stencil	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_ARM_shader_framebuffer_fetch_depth_stencil;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_ARM_texture_unnormalized_coordinates	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_ARM_texture_unnormalized_coordinates;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_ATIX_point_sprites	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_ATIX_point_sprites;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_ATIX_texture_env_combine3	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_ATIX_texture_env_combine3;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_ATIX_texture_env_route	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_ATIX_texture_env_route;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_ATIX_vertex_shader_output_point_size	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_ATIX_vertex_shader_output_point_size;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_ATI_draw_buffers	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_ATI_draw_buffers;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_ATI_element_array	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_ATI_element_array;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_ATI_envmap_bumpmap	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_ATI_envmap_bumpmap;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_ATI_fragment_shader	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_ATI_fragment_shader;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_ATI_map_object_buffer	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_ATI_map_object_buffer;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_ATI_meminfo	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_ATI_meminfo;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_ATI_pn_triangles	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_ATI_pn_triangles;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_ATI_separate_stencil	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_ATI_separate_stencil;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_ATI_shader_texture_lod	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_ATI_shader_texture_lod;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_ATI_text_fragment_shader	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_ATI_text_fragment_shader;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_ATI_texture_compression_3dc	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_ATI_texture_compression_3dc;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_ATI_texture_env_combine3	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_ATI_texture_env_combine3;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_ATI_texture_float	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_ATI_texture_float;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_ATI_texture_mirror_once	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_ATI_texture_mirror_once;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_ATI_vertex_array_object	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_ATI_vertex_array_object;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_ATI_vertex_attrib_array_object	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_ATI_vertex_attrib_array_object;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_ATI_vertex_streams	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_ATI_vertex_streams;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_DMP_program_binary	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_DMP_program_binary;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_DMP_shader_binary	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_DMP_shader_binary;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_EXT_422_pixels	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_EXT_422_pixels;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_EXT_Cg_shader	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_EXT_Cg_shader;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_EXT_EGL_image_array	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_EXT_EGL_image_array;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_EXT_EGL_image_external_wrap_modes	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_EXT_EGL_image_external_wrap_modes;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_EXT_EGL_image_storage	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_EXT_EGL_image_storage;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_EXT_EGL_sync	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_EXT_EGL_sync;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_EXT_YUV_target	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_EXT_YUV_target;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_EXT_abgr	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_EXT_abgr;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_EXT_base_instance	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_EXT_base_instance;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_EXT_bgra	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_EXT_bgra;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_EXT_bindable_uniform	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_EXT_bindable_uniform;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_EXT_blend_color	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_EXT_blend_color;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_EXT_blend_equation_separate	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_EXT_blend_equation_separate;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_EXT_blend_func_extended	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_EXT_blend_func_extended;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_EXT_blend_func_separate	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_EXT_blend_func_separate;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_EXT_blend_logic_op	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_EXT_blend_logic_op;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_EXT_blend_minmax	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_EXT_blend_minmax;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_EXT_blend_subtract	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_EXT_blend_subtract;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_EXT_buffer_storage	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_EXT_buffer_storage;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_EXT_clear_texture	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_EXT_clear_texture;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_EXT_clip_control	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_EXT_clip_control;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_EXT_clip_cull_distance	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_EXT_clip_cull_distance;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_EXT_clip_volume_hint	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_EXT_clip_volume_hint;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_EXT_cmyka	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_EXT_cmyka;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_EXT_color_buffer_float	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_EXT_color_buffer_float;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_EXT_color_buffer_half_float	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_EXT_color_buffer_half_float;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_EXT_color_subtable	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_EXT_color_subtable;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_EXT_compiled_vertex_array	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_EXT_compiled_vertex_array;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_EXT_compressed_ETC1_RGB8_sub_texture	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_EXT_compressed_ETC1_RGB8_sub_texture;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_EXT_conservative_depth	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_EXT_conservative_depth;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_EXT_convolution	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_EXT_convolution;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_EXT_coordinate_frame	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_EXT_coordinate_frame;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_EXT_copy_image	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_EXT_copy_image;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_EXT_copy_texture	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_EXT_copy_texture;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_EXT_cull_vertex	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_EXT_cull_vertex;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_EXT_debug_label	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_EXT_debug_label;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_EXT_debug_marker	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_EXT_debug_marker;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_EXT_depth_bounds_test	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_EXT_depth_bounds_test;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_EXT_depth_clamp	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_EXT_depth_clamp;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_EXT_direct_state_access	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_EXT_direct_state_access;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_EXT_discard_framebuffer	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_EXT_discard_framebuffer;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_EXT_disjoint_timer_query	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_EXT_disjoint_timer_query;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_EXT_draw_buffers	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_EXT_draw_buffers;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_EXT_draw_buffers2	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_EXT_draw_buffers2;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_EXT_draw_buffers_indexed	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_EXT_draw_buffers_indexed;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_EXT_draw_elements_base_vertex	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_EXT_draw_elements_base_vertex;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_EXT_draw_instanced	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_EXT_draw_instanced;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_EXT_draw_range_elements	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_EXT_draw_range_elements;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_EXT_draw_transform_feedback	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_EXT_draw_transform_feedback;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_EXT_external_buffer	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_EXT_external_buffer;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_EXT_float_blend	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_EXT_float_blend;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_EXT_fog_coord	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_EXT_fog_coord;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_EXT_frag_depth	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_EXT_frag_depth;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_EXT_fragment_lighting	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_EXT_fragment_lighting;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_EXT_framebuffer_blit	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_EXT_framebuffer_blit;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_EXT_framebuffer_multisample	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_EXT_framebuffer_multisample;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_EXT_framebuffer_multisample_blit_scaled	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_EXT_framebuffer_multisample_blit_scaled;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_EXT_framebuffer_object	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_EXT_framebuffer_object;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_EXT_framebuffer_sRGB	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_EXT_framebuffer_sRGB;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_EXT_geometry_point_size	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_EXT_geometry_point_size;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_EXT_geometry_shader	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_EXT_geometry_shader;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_EXT_geometry_shader4	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_EXT_geometry_shader4;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_EXT_gpu_program_parameters	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_EXT_gpu_program_parameters;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_EXT_gpu_shader4	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_EXT_gpu_shader4;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_EXT_gpu_shader5	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_EXT_gpu_shader5;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_EXT_histogram	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_EXT_histogram;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_EXT_index_array_formats	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_EXT_index_array_formats;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_EXT_index_func	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_EXT_index_func;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_EXT_index_material	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_EXT_index_material;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_EXT_index_texture	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_EXT_index_texture;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_EXT_instanced_arrays	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_EXT_instanced_arrays;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_EXT_light_texture	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_EXT_light_texture;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_EXT_map_buffer_range	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_EXT_map_buffer_range;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_EXT_memory_object	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_EXT_memory_object;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_EXT_memory_object_fd	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_EXT_memory_object_fd;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_EXT_memory_object_win32	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_EXT_memory_object_win32;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_EXT_misc_attribute	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_EXT_misc_attribute;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_EXT_multi_draw_arrays	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_EXT_multi_draw_arrays;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_EXT_multi_draw_indirect	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_EXT_multi_draw_indirect;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_EXT_multiple_textures	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_EXT_multiple_textures;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_EXT_multisample	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_EXT_multisample;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_EXT_multisample_compatibility	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_EXT_multisample_compatibility;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_EXT_multisampled_render_to_texture	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_EXT_multisampled_render_to_texture;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_EXT_multisampled_render_to_texture2	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_EXT_multisampled_render_to_texture2;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_EXT_multiview_draw_buffers	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_EXT_multiview_draw_buffers;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_EXT_multiview_tessellation_geometry_shader	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_EXT_multiview_tessellation_geometry_shader;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_EXT_multiview_texture_multisample	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_EXT_multiview_texture_multisample;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_EXT_multiview_timer_query	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_EXT_multiview_timer_query;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_EXT_occlusion_query_boolean	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_EXT_occlusion_query_boolean;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_EXT_packed_depth_stencil	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_EXT_packed_depth_stencil;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_EXT_packed_float	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_EXT_packed_float;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_EXT_packed_pixels	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_EXT_packed_pixels;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_EXT_paletted_texture	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_EXT_paletted_texture;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_EXT_pixel_buffer_object	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_EXT_pixel_buffer_object;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_EXT_pixel_transform	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_EXT_pixel_transform;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_EXT_pixel_transform_color_table	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_EXT_pixel_transform_color_table;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_EXT_point_parameters	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_EXT_point_parameters;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_EXT_polygon_offset	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_EXT_polygon_offset;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_EXT_polygon_offset_clamp	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_EXT_polygon_offset_clamp;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_EXT_post_depth_coverage	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_EXT_post_depth_coverage;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_EXT_primitive_bounding_box	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_EXT_primitive_bounding_box;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_EXT_protected_textures	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_EXT_protected_textures;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_EXT_provoking_vertex	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_EXT_provoking_vertex;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_EXT_pvrtc_sRGB	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_EXT_pvrtc_sRGB;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_EXT_raster_multisample	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_EXT_raster_multisample;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_EXT_read_format_bgra	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_EXT_read_format_bgra;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_EXT_render_snorm	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_EXT_render_snorm;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_EXT_rescale_normal	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_EXT_rescale_normal;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_EXT_robustness	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_EXT_robustness;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_EXT_sRGB	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_EXT_sRGB;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_EXT_sRGB_write_control	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_EXT_sRGB_write_control;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_EXT_scene_marker	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_EXT_scene_marker;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_EXT_secondary_color	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_EXT_secondary_color;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_EXT_semaphore	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_EXT_semaphore;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_EXT_semaphore_fd	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_EXT_semaphore_fd;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_EXT_semaphore_win32	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_EXT_semaphore_win32;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_EXT_separate_shader_objects	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_EXT_separate_shader_objects;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_EXT_separate_specular_color	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_EXT_separate_specular_color;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_EXT_shader_framebuffer_fetch	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_EXT_shader_framebuffer_fetch;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_EXT_shader_framebuffer_fetch_non_coherent	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_EXT_shader_framebuffer_fetch_non_coherent;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_EXT_shader_group_vote	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_EXT_shader_group_vote;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_EXT_shader_image_load_formatted	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_EXT_shader_image_load_formatted;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_EXT_shader_image_load_store	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_EXT_shader_image_load_store;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_EXT_shader_implicit_conversions	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_EXT_shader_implicit_conversions;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_EXT_shader_integer_mix	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_EXT_shader_integer_mix;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_EXT_shader_io_blocks	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_EXT_shader_io_blocks;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_EXT_shader_non_constant_global_initializers	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_EXT_shader_non_constant_global_initializers;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_EXT_shader_pixel_local_storage	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_EXT_shader_pixel_local_storage;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_EXT_shader_pixel_local_storage2	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_EXT_shader_pixel_local_storage2;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_EXT_shader_texture_lod	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_EXT_shader_texture_lod;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_EXT_shadow_funcs	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_EXT_shadow_funcs;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_EXT_shadow_samplers	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_EXT_shadow_samplers;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_EXT_shared_texture_palette	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_EXT_shared_texture_palette;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_EXT_sparse_texture	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_EXT_sparse_texture;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_EXT_sparse_texture2	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_EXT_sparse_texture2;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_EXT_static_vertex_array	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_EXT_static_vertex_array;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_EXT_stencil_clear_tag	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_EXT_stencil_clear_tag;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_EXT_stencil_two_side	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_EXT_stencil_two_side;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_EXT_stencil_wrap	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_EXT_stencil_wrap;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_EXT_subtexture	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_EXT_subtexture;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_EXT_tessellation_point_size	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_EXT_tessellation_point_size;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_EXT_tessellation_shader	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_EXT_tessellation_shader;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_EXT_texture	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_EXT_texture;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_EXT_texture3D	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_EXT_texture3D;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_EXT_texture_array	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_EXT_texture_array;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_EXT_texture_border_clamp	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_EXT_texture_border_clamp;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_EXT_texture_buffer	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_EXT_texture_buffer;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_EXT_texture_buffer_object	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_EXT_texture_buffer_object;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_EXT_texture_compression_astc_decode_mode	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_EXT_texture_compression_astc_decode_mode;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_EXT_texture_compression_astc_decode_mode_rgb9e5	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_EXT_texture_compression_astc_decode_mode_rgb9e5;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_EXT_texture_compression_bptc	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_EXT_texture_compression_bptc;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_EXT_texture_compression_dxt1	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_EXT_texture_compression_dxt1;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_EXT_texture_compression_latc	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_EXT_texture_compression_latc;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_EXT_texture_compression_rgtc	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_EXT_texture_compression_rgtc;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_EXT_texture_compression_s3tc	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_EXT_texture_compression_s3tc;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_EXT_texture_compression_s3tc_srgb	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_EXT_texture_compression_s3tc_srgb;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_EXT_texture_cube_map	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_EXT_texture_cube_map;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_EXT_texture_cube_map_array	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_EXT_texture_cube_map_array;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_EXT_texture_edge_clamp	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_EXT_texture_edge_clamp;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_EXT_texture_env	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_EXT_texture_env;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_EXT_texture_env_add	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_EXT_texture_env_add;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_EXT_texture_env_combine	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_EXT_texture_env_combine;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_EXT_texture_env_dot3	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_EXT_texture_env_dot3;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_EXT_texture_filter_anisotropic	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_EXT_texture_filter_anisotropic;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_EXT_texture_filter_minmax	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_EXT_texture_filter_minmax;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_EXT_texture_format_BGRA8888	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_EXT_texture_format_BGRA8888;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_EXT_texture_format_sRGB_override	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_EXT_texture_format_sRGB_override;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_EXT_texture_integer	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_EXT_texture_integer;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_EXT_texture_lod_bias	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_EXT_texture_lod_bias;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_EXT_texture_mirror_clamp	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_EXT_texture_mirror_clamp;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_EXT_texture_mirror_clamp_to_edge	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_EXT_texture_mirror_clamp_to_edge;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_EXT_texture_norm16	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_EXT_texture_norm16;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_EXT_texture_object	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_EXT_texture_object;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_EXT_texture_perturb_normal	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_EXT_texture_perturb_normal;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_EXT_texture_query_lod	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_EXT_texture_query_lod;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_EXT_texture_rectangle	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_EXT_texture_rectangle;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_EXT_texture_rg	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_EXT_texture_rg;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_EXT_texture_sRGB	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_EXT_texture_sRGB;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_EXT_texture_sRGB_R8	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_EXT_texture_sRGB_R8;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_EXT_texture_sRGB_RG8	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_EXT_texture_sRGB_RG8;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_EXT_texture_sRGB_decode	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_EXT_texture_sRGB_decode;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_EXT_texture_shadow_lod	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_EXT_texture_shadow_lod;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_EXT_texture_shared_exponent	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_EXT_texture_shared_exponent;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_EXT_texture_snorm	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_EXT_texture_snorm;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_EXT_texture_storage	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_EXT_texture_storage;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_EXT_texture_swizzle	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_EXT_texture_swizzle;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_EXT_texture_type_2_10_10_10_REV	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_EXT_texture_type_2_10_10_10_REV;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_EXT_texture_view	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_EXT_texture_view;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_EXT_timer_query	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_EXT_timer_query;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_EXT_transform_feedback	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_EXT_transform_feedback;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_EXT_unpack_subimage	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_EXT_unpack_subimage;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_EXT_vertex_array	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_EXT_vertex_array;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_EXT_vertex_array_bgra	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_EXT_vertex_array_bgra;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_EXT_vertex_array_setXXX	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_EXT_vertex_array_setXXX;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_EXT_vertex_attrib_64bit	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_EXT_vertex_attrib_64bit;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_EXT_vertex_shader	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_EXT_vertex_shader;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_EXT_vertex_weighting	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_EXT_vertex_weighting;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_EXT_win32_keyed_mutex	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_EXT_win32_keyed_mutex;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_EXT_window_rectangles	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_EXT_window_rectangles;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_EXT_x11_sync_object	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_EXT_x11_sync_object;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_FJ_shader_binary_GCCSO	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_FJ_shader_binary_GCCSO;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_GREMEDY_frame_terminator	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_GREMEDY_frame_terminator;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_GREMEDY_string_marker	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_GREMEDY_string_marker;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_HP_convolution_border_modes	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_HP_convolution_border_modes;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_HP_image_transform	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_HP_image_transform;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_HP_occlusion_test	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_HP_occlusion_test;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_HP_texture_lighting	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_HP_texture_lighting;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_H__	./GL/glew.h	/^#define __GLEW_H__$/;"	d
__GLEW_IBM_cull_vertex	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_IBM_cull_vertex;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_IBM_multimode_draw_arrays	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_IBM_multimode_draw_arrays;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_IBM_rasterpos_clip	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_IBM_rasterpos_clip;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_IBM_static_data	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_IBM_static_data;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_IBM_texture_mirrored_repeat	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_IBM_texture_mirrored_repeat;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_IBM_vertex_array_lists	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_IBM_vertex_array_lists;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_IMG_bindless_texture	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_IMG_bindless_texture;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_IMG_framebuffer_downsample	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_IMG_framebuffer_downsample;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_IMG_multisampled_render_to_texture	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_IMG_multisampled_render_to_texture;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_IMG_program_binary	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_IMG_program_binary;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_IMG_read_format	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_IMG_read_format;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_IMG_shader_binary	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_IMG_shader_binary;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_IMG_texture_compression_pvrtc	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_IMG_texture_compression_pvrtc;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_IMG_texture_compression_pvrtc2	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_IMG_texture_compression_pvrtc2;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_IMG_texture_env_enhanced_fixed_function	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_IMG_texture_env_enhanced_fixed_function;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_IMG_texture_filter_cubic	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_IMG_texture_filter_cubic;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_INGR_color_clamp	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_INGR_color_clamp;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_INGR_interlace_read	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_INGR_interlace_read;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_INTEL_blackhole_render	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_INTEL_blackhole_render;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_INTEL_conservative_rasterization	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_INTEL_conservative_rasterization;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_INTEL_fragment_shader_ordering	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_INTEL_fragment_shader_ordering;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_INTEL_framebuffer_CMAA	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_INTEL_framebuffer_CMAA;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_INTEL_map_texture	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_INTEL_map_texture;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_INTEL_parallel_arrays	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_INTEL_parallel_arrays;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_INTEL_performance_query	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_INTEL_performance_query;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_INTEL_shader_integer_functions2	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_INTEL_shader_integer_functions2;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_INTEL_texture_scissor	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_INTEL_texture_scissor;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_KHR_blend_equation_advanced	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_KHR_blend_equation_advanced;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_KHR_blend_equation_advanced_coherent	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_KHR_blend_equation_advanced_coherent;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_KHR_context_flush_control	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_KHR_context_flush_control;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_KHR_debug	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_KHR_debug;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_KHR_no_error	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_KHR_no_error;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_KHR_parallel_shader_compile	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_KHR_parallel_shader_compile;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_KHR_robust_buffer_access_behavior	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_KHR_robust_buffer_access_behavior;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_KHR_robustness	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_KHR_robustness;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_KHR_shader_subgroup	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_KHR_shader_subgroup;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_KHR_texture_compression_astc_hdr	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_KHR_texture_compression_astc_hdr;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_KHR_texture_compression_astc_ldr	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_KHR_texture_compression_astc_ldr;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_KHR_texture_compression_astc_sliced_3d	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_KHR_texture_compression_astc_sliced_3d;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_KTX_buffer_region	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_KTX_buffer_region;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_MESAX_texture_stack	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_MESAX_texture_stack;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_MESA_framebuffer_flip_y	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_MESA_framebuffer_flip_y;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_MESA_pack_invert	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_MESA_pack_invert;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_MESA_program_binary_formats	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_MESA_program_binary_formats;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_MESA_resize_buffers	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_MESA_resize_buffers;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_MESA_shader_integer_functions	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_MESA_shader_integer_functions;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_MESA_tile_raster_order	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_MESA_tile_raster_order;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_MESA_window_pos	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_MESA_window_pos;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_MESA_ycbcr_texture	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_MESA_ycbcr_texture;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_NVX_blend_equation_advanced_multi_draw_buffers	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_NVX_blend_equation_advanced_multi_draw_buffers;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_NVX_conditional_render	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_NVX_conditional_render;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_NVX_gpu_memory_info	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_NVX_gpu_memory_info;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_NVX_gpu_multicast2	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_NVX_gpu_multicast2;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_NVX_linked_gpu_multicast	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_NVX_linked_gpu_multicast;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_NVX_progress_fence	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_NVX_progress_fence;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_NV_3dvision_settings	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_NV_3dvision_settings;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_NV_EGL_stream_consumer_external	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_NV_EGL_stream_consumer_external;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_NV_alpha_to_coverage_dither_control	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_NV_alpha_to_coverage_dither_control;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_NV_bgr	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_NV_bgr;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_NV_bindless_multi_draw_indirect	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_NV_bindless_multi_draw_indirect;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_NV_bindless_multi_draw_indirect_count	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_NV_bindless_multi_draw_indirect_count;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_NV_bindless_texture	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_NV_bindless_texture;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_NV_blend_equation_advanced	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_NV_blend_equation_advanced;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_NV_blend_equation_advanced_coherent	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_NV_blend_equation_advanced_coherent;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_NV_blend_minmax_factor	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_NV_blend_minmax_factor;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_NV_blend_square	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_NV_blend_square;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_NV_clip_space_w_scaling	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_NV_clip_space_w_scaling;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_NV_command_list	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_NV_command_list;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_NV_compute_program5	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_NV_compute_program5;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_NV_compute_shader_derivatives	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_NV_compute_shader_derivatives;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_NV_conditional_render	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_NV_conditional_render;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_NV_conservative_raster	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_NV_conservative_raster;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_NV_conservative_raster_dilate	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_NV_conservative_raster_dilate;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_NV_conservative_raster_pre_snap	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_NV_conservative_raster_pre_snap;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_NV_conservative_raster_pre_snap_triangles	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_NV_conservative_raster_pre_snap_triangles;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_NV_conservative_raster_underestimation	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_NV_conservative_raster_underestimation;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_NV_copy_buffer	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_NV_copy_buffer;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_NV_copy_depth_to_color	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_NV_copy_depth_to_color;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_NV_copy_image	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_NV_copy_image;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_NV_deep_texture3D	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_NV_deep_texture3D;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_NV_depth_buffer_float	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_NV_depth_buffer_float;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_NV_depth_clamp	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_NV_depth_clamp;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_NV_depth_nonlinear	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_NV_depth_nonlinear;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_NV_depth_range_unclamped	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_NV_depth_range_unclamped;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_NV_draw_buffers	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_NV_draw_buffers;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_NV_draw_instanced	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_NV_draw_instanced;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_NV_draw_texture	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_NV_draw_texture;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_NV_draw_vulkan_image	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_NV_draw_vulkan_image;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_NV_evaluators	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_NV_evaluators;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_NV_explicit_attrib_location	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_NV_explicit_attrib_location;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_NV_explicit_multisample	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_NV_explicit_multisample;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_NV_fbo_color_attachments	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_NV_fbo_color_attachments;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_NV_fence	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_NV_fence;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_NV_fill_rectangle	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_NV_fill_rectangle;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_NV_float_buffer	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_NV_float_buffer;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_NV_fog_distance	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_NV_fog_distance;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_NV_fragment_coverage_to_color	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_NV_fragment_coverage_to_color;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_NV_fragment_program	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_NV_fragment_program;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_NV_fragment_program2	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_NV_fragment_program2;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_NV_fragment_program4	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_NV_fragment_program4;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_NV_fragment_program_option	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_NV_fragment_program_option;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_NV_fragment_shader_barycentric	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_NV_fragment_shader_barycentric;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_NV_fragment_shader_interlock	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_NV_fragment_shader_interlock;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_NV_framebuffer_blit	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_NV_framebuffer_blit;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_NV_framebuffer_mixed_samples	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_NV_framebuffer_mixed_samples;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_NV_framebuffer_multisample	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_NV_framebuffer_multisample;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_NV_framebuffer_multisample_coverage	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_NV_framebuffer_multisample_coverage;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_NV_generate_mipmap_sRGB	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_NV_generate_mipmap_sRGB;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_NV_geometry_program4	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_NV_geometry_program4;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_NV_geometry_shader4	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_NV_geometry_shader4;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_NV_geometry_shader_passthrough	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_NV_geometry_shader_passthrough;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_NV_gpu_multicast	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_NV_gpu_multicast;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_NV_gpu_program4	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_NV_gpu_program4;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_NV_gpu_program5	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_NV_gpu_program5;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_NV_gpu_program5_mem_extended	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_NV_gpu_program5_mem_extended;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_NV_gpu_program_fp64	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_NV_gpu_program_fp64;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_NV_gpu_shader5	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_NV_gpu_shader5;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_NV_half_float	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_NV_half_float;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_NV_image_formats	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_NV_image_formats;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_NV_instanced_arrays	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_NV_instanced_arrays;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_NV_internalformat_sample_query	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_NV_internalformat_sample_query;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_NV_light_max_exponent	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_NV_light_max_exponent;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_NV_memory_attachment	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_NV_memory_attachment;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_NV_mesh_shader	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_NV_mesh_shader;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_NV_multisample_coverage	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_NV_multisample_coverage;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_NV_multisample_filter_hint	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_NV_multisample_filter_hint;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_NV_non_square_matrices	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_NV_non_square_matrices;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_NV_occlusion_query	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_NV_occlusion_query;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_NV_pack_subimage	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_NV_pack_subimage;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_NV_packed_depth_stencil	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_NV_packed_depth_stencil;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_NV_packed_float	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_NV_packed_float;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_NV_packed_float_linear	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_NV_packed_float_linear;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_NV_parameter_buffer_object	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_NV_parameter_buffer_object;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_NV_parameter_buffer_object2	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_NV_parameter_buffer_object2;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_NV_path_rendering	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_NV_path_rendering;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_NV_path_rendering_shared_edge	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_NV_path_rendering_shared_edge;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_NV_pixel_buffer_object	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_NV_pixel_buffer_object;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_NV_pixel_data_range	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_NV_pixel_data_range;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_NV_platform_binary	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_NV_platform_binary;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_NV_point_sprite	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_NV_point_sprite;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_NV_polygon_mode	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_NV_polygon_mode;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_NV_present_video	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_NV_present_video;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_NV_primitive_restart	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_NV_primitive_restart;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_NV_query_resource_tag	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_NV_query_resource_tag;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_NV_read_buffer	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_NV_read_buffer;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_NV_read_buffer_front	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_NV_read_buffer_front;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_NV_read_depth	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_NV_read_depth;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_NV_read_depth_stencil	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_NV_read_depth_stencil;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_NV_read_stencil	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_NV_read_stencil;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_NV_register_combiners	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_NV_register_combiners;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_NV_register_combiners2	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_NV_register_combiners2;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_NV_representative_fragment_test	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_NV_representative_fragment_test;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_NV_robustness_video_memory_purge	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_NV_robustness_video_memory_purge;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_NV_sRGB_formats	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_NV_sRGB_formats;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_NV_sample_locations	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_NV_sample_locations;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_NV_sample_mask_override_coverage	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_NV_sample_mask_override_coverage;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_NV_scissor_exclusive	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_NV_scissor_exclusive;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_NV_shader_atomic_counters	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_NV_shader_atomic_counters;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_NV_shader_atomic_float	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_NV_shader_atomic_float;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_NV_shader_atomic_float64	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_NV_shader_atomic_float64;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_NV_shader_atomic_fp16_vector	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_NV_shader_atomic_fp16_vector;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_NV_shader_atomic_int64	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_NV_shader_atomic_int64;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_NV_shader_buffer_load	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_NV_shader_buffer_load;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_NV_shader_noperspective_interpolation	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_NV_shader_noperspective_interpolation;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_NV_shader_storage_buffer_object	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_NV_shader_storage_buffer_object;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_NV_shader_subgroup_partitioned	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_NV_shader_subgroup_partitioned;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_NV_shader_texture_footprint	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_NV_shader_texture_footprint;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_NV_shader_thread_group	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_NV_shader_thread_group;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_NV_shader_thread_shuffle	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_NV_shader_thread_shuffle;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_NV_shading_rate_image	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_NV_shading_rate_image;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_NV_shadow_samplers_array	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_NV_shadow_samplers_array;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_NV_shadow_samplers_cube	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_NV_shadow_samplers_cube;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_NV_stereo_view_rendering	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_NV_stereo_view_rendering;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_NV_tessellation_program5	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_NV_tessellation_program5;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_NV_texgen_emboss	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_NV_texgen_emboss;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_NV_texgen_reflection	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_NV_texgen_reflection;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_NV_texture_array	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_NV_texture_array;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_NV_texture_barrier	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_NV_texture_barrier;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_NV_texture_border_clamp	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_NV_texture_border_clamp;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_NV_texture_compression_latc	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_NV_texture_compression_latc;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_NV_texture_compression_s3tc	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_NV_texture_compression_s3tc;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_NV_texture_compression_s3tc_update	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_NV_texture_compression_s3tc_update;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_NV_texture_compression_vtc	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_NV_texture_compression_vtc;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_NV_texture_env_combine4	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_NV_texture_env_combine4;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_NV_texture_expand_normal	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_NV_texture_expand_normal;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_NV_texture_multisample	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_NV_texture_multisample;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_NV_texture_npot_2D_mipmap	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_NV_texture_npot_2D_mipmap;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_NV_texture_rectangle	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_NV_texture_rectangle;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_NV_texture_rectangle_compressed	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_NV_texture_rectangle_compressed;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_NV_texture_shader	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_NV_texture_shader;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_NV_texture_shader2	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_NV_texture_shader2;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_NV_texture_shader3	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_NV_texture_shader3;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_NV_transform_feedback	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_NV_transform_feedback;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_NV_transform_feedback2	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_NV_transform_feedback2;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_NV_uniform_buffer_unified_memory	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_NV_uniform_buffer_unified_memory;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_NV_vdpau_interop	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_NV_vdpau_interop;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_NV_vdpau_interop2	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_NV_vdpau_interop2;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_NV_vertex_array_range	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_NV_vertex_array_range;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_NV_vertex_array_range2	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_NV_vertex_array_range2;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_NV_vertex_attrib_integer_64bit	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_NV_vertex_attrib_integer_64bit;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_NV_vertex_buffer_unified_memory	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_NV_vertex_buffer_unified_memory;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_NV_vertex_program	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_NV_vertex_program;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_NV_vertex_program1_1	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_NV_vertex_program1_1;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_NV_vertex_program2	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_NV_vertex_program2;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_NV_vertex_program2_option	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_NV_vertex_program2_option;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_NV_vertex_program3	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_NV_vertex_program3;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_NV_vertex_program4	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_NV_vertex_program4;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_NV_video_capture	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_NV_video_capture;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_NV_viewport_array	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_NV_viewport_array;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_NV_viewport_array2	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_NV_viewport_array2;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_NV_viewport_swizzle	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_NV_viewport_swizzle;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_OES_EGL_image	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_OES_EGL_image;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_OES_EGL_image_external	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_OES_EGL_image_external;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_OES_EGL_image_external_essl3	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_OES_EGL_image_external_essl3;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_OES_blend_equation_separate	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_OES_blend_equation_separate;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_OES_blend_func_separate	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_OES_blend_func_separate;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_OES_blend_subtract	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_OES_blend_subtract;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_OES_byte_coordinates	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_OES_byte_coordinates;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_OES_compressed_ETC1_RGB8_texture	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_OES_compressed_ETC1_RGB8_texture;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_OES_compressed_paletted_texture	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_OES_compressed_paletted_texture;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_OES_copy_image	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_OES_copy_image;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_OES_depth24	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_OES_depth24;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_OES_depth32	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_OES_depth32;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_OES_depth_texture	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_OES_depth_texture;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_OES_depth_texture_cube_map	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_OES_depth_texture_cube_map;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_OES_draw_buffers_indexed	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_OES_draw_buffers_indexed;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_OES_draw_texture	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_OES_draw_texture;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_OES_element_index_uint	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_OES_element_index_uint;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_OES_extended_matrix_palette	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_OES_extended_matrix_palette;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_OES_fbo_render_mipmap	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_OES_fbo_render_mipmap;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_OES_fragment_precision_high	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_OES_fragment_precision_high;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_OES_framebuffer_object	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_OES_framebuffer_object;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_OES_geometry_point_size	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_OES_geometry_point_size;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_OES_geometry_shader	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_OES_geometry_shader;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_OES_get_program_binary	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_OES_get_program_binary;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_OES_gpu_shader5	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_OES_gpu_shader5;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_OES_mapbuffer	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_OES_mapbuffer;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_OES_matrix_get	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_OES_matrix_get;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_OES_matrix_palette	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_OES_matrix_palette;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_OES_packed_depth_stencil	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_OES_packed_depth_stencil;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_OES_point_size_array	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_OES_point_size_array;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_OES_point_sprite	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_OES_point_sprite;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_OES_read_format	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_OES_read_format;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_OES_required_internalformat	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_OES_required_internalformat;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_OES_rgb8_rgba8	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_OES_rgb8_rgba8;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_OES_sample_shading	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_OES_sample_shading;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_OES_sample_variables	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_OES_sample_variables;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_OES_shader_image_atomic	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_OES_shader_image_atomic;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_OES_shader_io_blocks	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_OES_shader_io_blocks;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_OES_shader_multisample_interpolation	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_OES_shader_multisample_interpolation;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_OES_single_precision	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_OES_single_precision;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_OES_standard_derivatives	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_OES_standard_derivatives;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_OES_stencil1	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_OES_stencil1;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_OES_stencil4	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_OES_stencil4;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_OES_stencil8	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_OES_stencil8;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_OES_surfaceless_context	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_OES_surfaceless_context;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_OES_tessellation_point_size	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_OES_tessellation_point_size;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_OES_tessellation_shader	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_OES_tessellation_shader;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_OES_texture_3D	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_OES_texture_3D;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_OES_texture_border_clamp	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_OES_texture_border_clamp;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_OES_texture_buffer	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_OES_texture_buffer;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_OES_texture_compression_astc	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_OES_texture_compression_astc;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_OES_texture_cube_map	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_OES_texture_cube_map;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_OES_texture_cube_map_array	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_OES_texture_cube_map_array;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_OES_texture_env_crossbar	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_OES_texture_env_crossbar;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_OES_texture_mirrored_repeat	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_OES_texture_mirrored_repeat;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_OES_texture_npot	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_OES_texture_npot;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_OES_texture_stencil8	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_OES_texture_stencil8;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_OES_texture_storage_multisample_2d_array	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_OES_texture_storage_multisample_2d_array;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_OES_texture_view	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_OES_texture_view;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_OES_vertex_array_object	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_OES_vertex_array_object;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_OES_vertex_half_float	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_OES_vertex_half_float;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_OES_vertex_type_10_10_10_2	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_OES_vertex_type_10_10_10_2;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_OML_interlace	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_OML_interlace;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_OML_resample	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_OML_resample;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_OML_subsample	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_OML_subsample;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_OVR_multiview	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_OVR_multiview;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_OVR_multiview2	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_OVR_multiview2;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_OVR_multiview_multisampled_render_to_texture	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_OVR_multiview_multisampled_render_to_texture;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_PGI_misc_hints	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_PGI_misc_hints;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_PGI_vertex_hints	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_PGI_vertex_hints;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_QCOM_YUV_texture_gather	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_QCOM_YUV_texture_gather;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_QCOM_alpha_test	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_QCOM_alpha_test;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_QCOM_binning_control	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_QCOM_binning_control;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_QCOM_driver_control	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_QCOM_driver_control;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_QCOM_extended_get	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_QCOM_extended_get;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_QCOM_extended_get2	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_QCOM_extended_get2;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_QCOM_framebuffer_foveated	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_QCOM_framebuffer_foveated;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_QCOM_perfmon_global_mode	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_QCOM_perfmon_global_mode;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_QCOM_shader_framebuffer_fetch_noncoherent	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_QCOM_shader_framebuffer_fetch_noncoherent;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_QCOM_shader_framebuffer_fetch_rate	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_QCOM_shader_framebuffer_fetch_rate;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_QCOM_texture_foveated	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_QCOM_texture_foveated;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_QCOM_texture_foveated_subsampled_layout	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_QCOM_texture_foveated_subsampled_layout;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_QCOM_tiled_rendering	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_QCOM_tiled_rendering;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_QCOM_writeonly_rendering	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_QCOM_writeonly_rendering;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_REGAL_ES1_0_compatibility	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_REGAL_ES1_0_compatibility;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_REGAL_ES1_1_compatibility	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_REGAL_ES1_1_compatibility;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_REGAL_enable	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_REGAL_enable;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_REGAL_error_string	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_REGAL_error_string;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_REGAL_extension_query	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_REGAL_extension_query;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_REGAL_log	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_REGAL_log;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_REGAL_proc_address	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_REGAL_proc_address;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_REND_screen_coordinates	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_REND_screen_coordinates;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_S3_s3tc	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_S3_s3tc;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_SGIS_clip_band_hint	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_SGIS_clip_band_hint;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_SGIS_color_range	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_SGIS_color_range;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_SGIS_detail_texture	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_SGIS_detail_texture;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_SGIS_fog_function	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_SGIS_fog_function;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_SGIS_generate_mipmap	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_SGIS_generate_mipmap;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_SGIS_line_texgen	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_SGIS_line_texgen;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_SGIS_multisample	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_SGIS_multisample;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_SGIS_multitexture	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_SGIS_multitexture;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_SGIS_pixel_texture	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_SGIS_pixel_texture;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_SGIS_point_line_texgen	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_SGIS_point_line_texgen;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_SGIS_shared_multisample	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_SGIS_shared_multisample;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_SGIS_sharpen_texture	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_SGIS_sharpen_texture;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_SGIS_texture4D	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_SGIS_texture4D;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_SGIS_texture_border_clamp	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_SGIS_texture_border_clamp;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_SGIS_texture_edge_clamp	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_SGIS_texture_edge_clamp;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_SGIS_texture_filter4	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_SGIS_texture_filter4;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_SGIS_texture_lod	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_SGIS_texture_lod;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_SGIS_texture_select	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_SGIS_texture_select;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_SGIX_async	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_SGIX_async;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_SGIX_async_histogram	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_SGIX_async_histogram;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_SGIX_async_pixel	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_SGIX_async_pixel;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_SGIX_bali_g_instruments	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_SGIX_bali_g_instruments;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_SGIX_bali_r_instruments	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_SGIX_bali_r_instruments;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_SGIX_bali_timer_instruments	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_SGIX_bali_timer_instruments;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_SGIX_blend_alpha_minmax	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_SGIX_blend_alpha_minmax;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_SGIX_blend_cadd	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_SGIX_blend_cadd;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_SGIX_blend_cmultiply	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_SGIX_blend_cmultiply;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_SGIX_calligraphic_fragment	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_SGIX_calligraphic_fragment;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_SGIX_clipmap	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_SGIX_clipmap;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_SGIX_color_matrix_accuracy	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_SGIX_color_matrix_accuracy;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_SGIX_color_table_index_mode	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_SGIX_color_table_index_mode;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_SGIX_complex_polar	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_SGIX_complex_polar;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_SGIX_convolution_accuracy	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_SGIX_convolution_accuracy;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_SGIX_cube_map	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_SGIX_cube_map;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_SGIX_cylinder_texgen	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_SGIX_cylinder_texgen;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_SGIX_datapipe	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_SGIX_datapipe;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_SGIX_decimation	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_SGIX_decimation;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_SGIX_depth_pass_instrument	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_SGIX_depth_pass_instrument;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_SGIX_depth_texture	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_SGIX_depth_texture;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_SGIX_dvc	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_SGIX_dvc;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_SGIX_flush_raster	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_SGIX_flush_raster;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_SGIX_fog_blend	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_SGIX_fog_blend;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_SGIX_fog_factor_to_alpha	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_SGIX_fog_factor_to_alpha;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_SGIX_fog_layers	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_SGIX_fog_layers;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_SGIX_fog_offset	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_SGIX_fog_offset;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_SGIX_fog_patchy	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_SGIX_fog_patchy;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_SGIX_fog_scale	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_SGIX_fog_scale;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_SGIX_fog_texture	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_SGIX_fog_texture;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_SGIX_fragment_lighting_space	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_SGIX_fragment_lighting_space;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_SGIX_fragment_specular_lighting	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_SGIX_fragment_specular_lighting;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_SGIX_fragments_instrument	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_SGIX_fragments_instrument;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_SGIX_framezoom	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_SGIX_framezoom;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_SGIX_icc_texture	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_SGIX_icc_texture;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_SGIX_igloo_interface	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_SGIX_igloo_interface;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_SGIX_image_compression	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_SGIX_image_compression;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_SGIX_impact_pixel_texture	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_SGIX_impact_pixel_texture;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_SGIX_instrument_error	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_SGIX_instrument_error;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_SGIX_interlace	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_SGIX_interlace;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_SGIX_ir_instrument1	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_SGIX_ir_instrument1;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_SGIX_line_quality_hint	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_SGIX_line_quality_hint;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_SGIX_list_priority	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_SGIX_list_priority;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_SGIX_mpeg1	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_SGIX_mpeg1;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_SGIX_mpeg2	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_SGIX_mpeg2;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_SGIX_nonlinear_lighting_pervertex	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_SGIX_nonlinear_lighting_pervertex;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_SGIX_nurbs_eval	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_SGIX_nurbs_eval;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_SGIX_occlusion_instrument	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_SGIX_occlusion_instrument;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_SGIX_packed_6bytes	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_SGIX_packed_6bytes;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_SGIX_pixel_texture	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_SGIX_pixel_texture;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_SGIX_pixel_texture_bits	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_SGIX_pixel_texture_bits;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_SGIX_pixel_texture_lod	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_SGIX_pixel_texture_lod;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_SGIX_pixel_tiles	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_SGIX_pixel_tiles;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_SGIX_polynomial_ffd	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_SGIX_polynomial_ffd;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_SGIX_quad_mesh	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_SGIX_quad_mesh;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_SGIX_reference_plane	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_SGIX_reference_plane;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_SGIX_resample	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_SGIX_resample;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_SGIX_scalebias_hint	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_SGIX_scalebias_hint;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_SGIX_shadow	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_SGIX_shadow;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_SGIX_shadow_ambient	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_SGIX_shadow_ambient;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_SGIX_slim	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_SGIX_slim;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_SGIX_spotlight_cutoff	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_SGIX_spotlight_cutoff;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_SGIX_sprite	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_SGIX_sprite;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_SGIX_subdiv_patch	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_SGIX_subdiv_patch;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_SGIX_subsample	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_SGIX_subsample;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_SGIX_tag_sample_buffer	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_SGIX_tag_sample_buffer;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_SGIX_texture_add_env	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_SGIX_texture_add_env;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_SGIX_texture_coordinate_clamp	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_SGIX_texture_coordinate_clamp;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_SGIX_texture_lod_bias	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_SGIX_texture_lod_bias;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_SGIX_texture_mipmap_anisotropic	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_SGIX_texture_mipmap_anisotropic;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_SGIX_texture_multi_buffer	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_SGIX_texture_multi_buffer;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_SGIX_texture_phase	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_SGIX_texture_phase;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_SGIX_texture_range	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_SGIX_texture_range;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_SGIX_texture_scale_bias	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_SGIX_texture_scale_bias;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_SGIX_texture_supersample	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_SGIX_texture_supersample;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_SGIX_vector_ops	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_SGIX_vector_ops;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_SGIX_vertex_array_object	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_SGIX_vertex_array_object;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_SGIX_vertex_preclip	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_SGIX_vertex_preclip;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_SGIX_vertex_preclip_hint	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_SGIX_vertex_preclip_hint;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_SGIX_ycrcb	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_SGIX_ycrcb;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_SGIX_ycrcb_subsample	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_SGIX_ycrcb_subsample;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_SGIX_ycrcba	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_SGIX_ycrcba;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_SGI_color_matrix	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_SGI_color_matrix;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_SGI_color_table	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_SGI_color_table;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_SGI_complex	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_SGI_complex;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_SGI_complex_type	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_SGI_complex_type;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_SGI_fft	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_SGI_fft;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_SGI_texture_color_table	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_SGI_texture_color_table;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_SUNX_constant_data	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_SUNX_constant_data;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_SUN_convolution_border_modes	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_SUN_convolution_border_modes;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_SUN_global_alpha	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_SUN_global_alpha;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_SUN_mesh_array	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_SUN_mesh_array;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_SUN_read_video_pixels	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_SUN_read_video_pixels;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_SUN_slice_accum	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_SUN_slice_accum;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_SUN_triangle_list	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_SUN_triangle_list;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_SUN_vertex	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_SUN_vertex;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_VERSION_1_1	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_VERSION_1_1;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_VERSION_1_2	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_VERSION_1_2;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_VERSION_1_2_1	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_VERSION_1_2_1;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_VERSION_1_3	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_VERSION_1_3;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_VERSION_1_4	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_VERSION_1_4;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_VERSION_1_5	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_VERSION_1_5;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_VERSION_2_0	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_VERSION_2_0;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_VERSION_2_1	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_VERSION_2_1;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_VERSION_3_0	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_VERSION_3_0;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_VERSION_3_1	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_VERSION_3_1;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_VERSION_3_2	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_VERSION_3_2;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_VERSION_3_3	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_VERSION_3_3;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_VERSION_4_0	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_VERSION_4_0;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_VERSION_4_1	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_VERSION_4_1;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_VERSION_4_2	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_VERSION_4_2;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_VERSION_4_3	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_VERSION_4_3;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_VERSION_4_4	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_VERSION_4_4;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_VERSION_4_5	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_VERSION_4_5;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_VERSION_4_6	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_VERSION_4_6;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_VIV_shader_binary	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_VIV_shader_binary;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_WIN_phong_shading	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_WIN_phong_shading;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_WIN_scene_markerXXX	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_WIN_scene_markerXXX;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_WIN_specular_fog	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_WIN_specular_fog;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEW_WIN_swap_hint	./GL/glew.h	/^GLEW_VAR_EXPORT GLboolean __GLEW_WIN_swap_hint;$/;"	v	typeref:typename:GLEW_VAR_EXPORT GLboolean
__GLEXT_H_	./GL/glew.h	/^#define __GLEXT_H_$/;"	d
__GLXEW_3DFX_multisample	./GL/glxew.h	/^GLXEW_VAR_EXPORT GLboolean __GLXEW_3DFX_multisample;$/;"	v	typeref:typename:GLXEW_VAR_EXPORT GLboolean
__GLXEW_AMD_gpu_association	./GL/glxew.h	/^GLXEW_VAR_EXPORT GLboolean __GLXEW_AMD_gpu_association;$/;"	v	typeref:typename:GLXEW_VAR_EXPORT GLboolean
__GLXEW_ARB_context_flush_control	./GL/glxew.h	/^GLXEW_VAR_EXPORT GLboolean __GLXEW_ARB_context_flush_control;$/;"	v	typeref:typename:GLXEW_VAR_EXPORT GLboolean
__GLXEW_ARB_create_context	./GL/glxew.h	/^GLXEW_VAR_EXPORT GLboolean __GLXEW_ARB_create_context;$/;"	v	typeref:typename:GLXEW_VAR_EXPORT GLboolean
__GLXEW_ARB_create_context_no_error	./GL/glxew.h	/^GLXEW_VAR_EXPORT GLboolean __GLXEW_ARB_create_context_no_error;$/;"	v	typeref:typename:GLXEW_VAR_EXPORT GLboolean
__GLXEW_ARB_create_context_profile	./GL/glxew.h	/^GLXEW_VAR_EXPORT GLboolean __GLXEW_ARB_create_context_profile;$/;"	v	typeref:typename:GLXEW_VAR_EXPORT GLboolean
__GLXEW_ARB_create_context_robustness	./GL/glxew.h	/^GLXEW_VAR_EXPORT GLboolean __GLXEW_ARB_create_context_robustness;$/;"	v	typeref:typename:GLXEW_VAR_EXPORT GLboolean
__GLXEW_ARB_fbconfig_float	./GL/glxew.h	/^GLXEW_VAR_EXPORT GLboolean __GLXEW_ARB_fbconfig_float;$/;"	v	typeref:typename:GLXEW_VAR_EXPORT GLboolean
__GLXEW_ARB_framebuffer_sRGB	./GL/glxew.h	/^GLXEW_VAR_EXPORT GLboolean __GLXEW_ARB_framebuffer_sRGB;$/;"	v	typeref:typename:GLXEW_VAR_EXPORT GLboolean
__GLXEW_ARB_get_proc_address	./GL/glxew.h	/^GLXEW_VAR_EXPORT GLboolean __GLXEW_ARB_get_proc_address;$/;"	v	typeref:typename:GLXEW_VAR_EXPORT GLboolean
__GLXEW_ARB_multisample	./GL/glxew.h	/^GLXEW_VAR_EXPORT GLboolean __GLXEW_ARB_multisample;$/;"	v	typeref:typename:GLXEW_VAR_EXPORT GLboolean
__GLXEW_ARB_robustness_application_isolation	./GL/glxew.h	/^GLXEW_VAR_EXPORT GLboolean __GLXEW_ARB_robustness_application_isolation;$/;"	v	typeref:typename:GLXEW_VAR_EXPORT GLboolean
__GLXEW_ARB_robustness_share_group_isolation	./GL/glxew.h	/^GLXEW_VAR_EXPORT GLboolean __GLXEW_ARB_robustness_share_group_isolation;$/;"	v	typeref:typename:GLXEW_VAR_EXPORT GLboolean
__GLXEW_ARB_vertex_buffer_object	./GL/glxew.h	/^GLXEW_VAR_EXPORT GLboolean __GLXEW_ARB_vertex_buffer_object;$/;"	v	typeref:typename:GLXEW_VAR_EXPORT GLboolean
__GLXEW_ATI_pixel_format_float	./GL/glxew.h	/^GLXEW_VAR_EXPORT GLboolean __GLXEW_ATI_pixel_format_float;$/;"	v	typeref:typename:GLXEW_VAR_EXPORT GLboolean
__GLXEW_ATI_render_texture	./GL/glxew.h	/^GLXEW_VAR_EXPORT GLboolean __GLXEW_ATI_render_texture;$/;"	v	typeref:typename:GLXEW_VAR_EXPORT GLboolean
__GLXEW_EXT_buffer_age	./GL/glxew.h	/^GLXEW_VAR_EXPORT GLboolean __GLXEW_EXT_buffer_age;$/;"	v	typeref:typename:GLXEW_VAR_EXPORT GLboolean
__GLXEW_EXT_context_priority	./GL/glxew.h	/^GLXEW_VAR_EXPORT GLboolean __GLXEW_EXT_context_priority;$/;"	v	typeref:typename:GLXEW_VAR_EXPORT GLboolean
__GLXEW_EXT_create_context_es2_profile	./GL/glxew.h	/^GLXEW_VAR_EXPORT GLboolean __GLXEW_EXT_create_context_es2_profile;$/;"	v	typeref:typename:GLXEW_VAR_EXPORT GLboolean
__GLXEW_EXT_create_context_es_profile	./GL/glxew.h	/^GLXEW_VAR_EXPORT GLboolean __GLXEW_EXT_create_context_es_profile;$/;"	v	typeref:typename:GLXEW_VAR_EXPORT GLboolean
__GLXEW_EXT_fbconfig_packed_float	./GL/glxew.h	/^GLXEW_VAR_EXPORT GLboolean __GLXEW_EXT_fbconfig_packed_float;$/;"	v	typeref:typename:GLXEW_VAR_EXPORT GLboolean
__GLXEW_EXT_framebuffer_sRGB	./GL/glxew.h	/^GLXEW_VAR_EXPORT GLboolean __GLXEW_EXT_framebuffer_sRGB;$/;"	v	typeref:typename:GLXEW_VAR_EXPORT GLboolean
__GLXEW_EXT_import_context	./GL/glxew.h	/^GLXEW_VAR_EXPORT GLboolean __GLXEW_EXT_import_context;$/;"	v	typeref:typename:GLXEW_VAR_EXPORT GLboolean
__GLXEW_EXT_libglvnd	./GL/glxew.h	/^GLXEW_VAR_EXPORT GLboolean __GLXEW_EXT_libglvnd;$/;"	v	typeref:typename:GLXEW_VAR_EXPORT GLboolean
__GLXEW_EXT_no_config_context	./GL/glxew.h	/^GLXEW_VAR_EXPORT GLboolean __GLXEW_EXT_no_config_context;$/;"	v	typeref:typename:GLXEW_VAR_EXPORT GLboolean
__GLXEW_EXT_scene_marker	./GL/glxew.h	/^GLXEW_VAR_EXPORT GLboolean __GLXEW_EXT_scene_marker;$/;"	v	typeref:typename:GLXEW_VAR_EXPORT GLboolean
__GLXEW_EXT_stereo_tree	./GL/glxew.h	/^GLXEW_VAR_EXPORT GLboolean __GLXEW_EXT_stereo_tree;$/;"	v	typeref:typename:GLXEW_VAR_EXPORT GLboolean
__GLXEW_EXT_swap_control	./GL/glxew.h	/^GLXEW_VAR_EXPORT GLboolean __GLXEW_EXT_swap_control;$/;"	v	typeref:typename:GLXEW_VAR_EXPORT GLboolean
__GLXEW_EXT_swap_control_tear	./GL/glxew.h	/^GLXEW_VAR_EXPORT GLboolean __GLXEW_EXT_swap_control_tear;$/;"	v	typeref:typename:GLXEW_VAR_EXPORT GLboolean
__GLXEW_EXT_texture_from_pixmap	./GL/glxew.h	/^GLXEW_VAR_EXPORT GLboolean __GLXEW_EXT_texture_from_pixmap;$/;"	v	typeref:typename:GLXEW_VAR_EXPORT GLboolean
__GLXEW_EXT_visual_info	./GL/glxew.h	/^GLXEW_VAR_EXPORT GLboolean __GLXEW_EXT_visual_info;$/;"	v	typeref:typename:GLXEW_VAR_EXPORT GLboolean
__GLXEW_EXT_visual_rating	./GL/glxew.h	/^GLXEW_VAR_EXPORT GLboolean __GLXEW_EXT_visual_rating;$/;"	v	typeref:typename:GLXEW_VAR_EXPORT GLboolean
__GLXEW_H__	./GL/glxew.h	/^#define __GLXEW_H__$/;"	d
__GLXEW_INTEL_swap_event	./GL/glxew.h	/^GLXEW_VAR_EXPORT GLboolean __GLXEW_INTEL_swap_event;$/;"	v	typeref:typename:GLXEW_VAR_EXPORT GLboolean
__GLXEW_MESA_agp_offset	./GL/glxew.h	/^GLXEW_VAR_EXPORT GLboolean __GLXEW_MESA_agp_offset;$/;"	v	typeref:typename:GLXEW_VAR_EXPORT GLboolean
__GLXEW_MESA_copy_sub_buffer	./GL/glxew.h	/^GLXEW_VAR_EXPORT GLboolean __GLXEW_MESA_copy_sub_buffer;$/;"	v	typeref:typename:GLXEW_VAR_EXPORT GLboolean
__GLXEW_MESA_pixmap_colormap	./GL/glxew.h	/^GLXEW_VAR_EXPORT GLboolean __GLXEW_MESA_pixmap_colormap;$/;"	v	typeref:typename:GLXEW_VAR_EXPORT GLboolean
__GLXEW_MESA_query_renderer	./GL/glxew.h	/^GLXEW_VAR_EXPORT GLboolean __GLXEW_MESA_query_renderer;$/;"	v	typeref:typename:GLXEW_VAR_EXPORT GLboolean
__GLXEW_MESA_release_buffers	./GL/glxew.h	/^GLXEW_VAR_EXPORT GLboolean __GLXEW_MESA_release_buffers;$/;"	v	typeref:typename:GLXEW_VAR_EXPORT GLboolean
__GLXEW_MESA_set_3dfx_mode	./GL/glxew.h	/^GLXEW_VAR_EXPORT GLboolean __GLXEW_MESA_set_3dfx_mode;$/;"	v	typeref:typename:GLXEW_VAR_EXPORT GLboolean
__GLXEW_MESA_swap_control	./GL/glxew.h	/^GLXEW_VAR_EXPORT GLboolean __GLXEW_MESA_swap_control;$/;"	v	typeref:typename:GLXEW_VAR_EXPORT GLboolean
__GLXEW_NV_copy_buffer	./GL/glxew.h	/^GLXEW_VAR_EXPORT GLboolean __GLXEW_NV_copy_buffer;$/;"	v	typeref:typename:GLXEW_VAR_EXPORT GLboolean
__GLXEW_NV_copy_image	./GL/glxew.h	/^GLXEW_VAR_EXPORT GLboolean __GLXEW_NV_copy_image;$/;"	v	typeref:typename:GLXEW_VAR_EXPORT GLboolean
__GLXEW_NV_delay_before_swap	./GL/glxew.h	/^GLXEW_VAR_EXPORT GLboolean __GLXEW_NV_delay_before_swap;$/;"	v	typeref:typename:GLXEW_VAR_EXPORT GLboolean
__GLXEW_NV_float_buffer	./GL/glxew.h	/^GLXEW_VAR_EXPORT GLboolean __GLXEW_NV_float_buffer;$/;"	v	typeref:typename:GLXEW_VAR_EXPORT GLboolean
__GLXEW_NV_multigpu_context	./GL/glxew.h	/^GLXEW_VAR_EXPORT GLboolean __GLXEW_NV_multigpu_context;$/;"	v	typeref:typename:GLXEW_VAR_EXPORT GLboolean
__GLXEW_NV_multisample_coverage	./GL/glxew.h	/^GLXEW_VAR_EXPORT GLboolean __GLXEW_NV_multisample_coverage;$/;"	v	typeref:typename:GLXEW_VAR_EXPORT GLboolean
__GLXEW_NV_present_video	./GL/glxew.h	/^GLXEW_VAR_EXPORT GLboolean __GLXEW_NV_present_video;$/;"	v	typeref:typename:GLXEW_VAR_EXPORT GLboolean
__GLXEW_NV_robustness_video_memory_purge	./GL/glxew.h	/^GLXEW_VAR_EXPORT GLboolean __GLXEW_NV_robustness_video_memory_purge;$/;"	v	typeref:typename:GLXEW_VAR_EXPORT GLboolean
__GLXEW_NV_swap_group	./GL/glxew.h	/^GLXEW_VAR_EXPORT GLboolean __GLXEW_NV_swap_group;$/;"	v	typeref:typename:GLXEW_VAR_EXPORT GLboolean
__GLXEW_NV_vertex_array_range	./GL/glxew.h	/^GLXEW_VAR_EXPORT GLboolean __GLXEW_NV_vertex_array_range;$/;"	v	typeref:typename:GLXEW_VAR_EXPORT GLboolean
__GLXEW_NV_video_capture	./GL/glxew.h	/^GLXEW_VAR_EXPORT GLboolean __GLXEW_NV_video_capture;$/;"	v	typeref:typename:GLXEW_VAR_EXPORT GLboolean
__GLXEW_NV_video_out	./GL/glxew.h	/^GLXEW_VAR_EXPORT GLboolean __GLXEW_NV_video_out;$/;"	v	typeref:typename:GLXEW_VAR_EXPORT GLboolean
__GLXEW_OML_swap_method	./GL/glxew.h	/^GLXEW_VAR_EXPORT GLboolean __GLXEW_OML_swap_method;$/;"	v	typeref:typename:GLXEW_VAR_EXPORT GLboolean
__GLXEW_OML_sync_control	./GL/glxew.h	/^GLXEW_VAR_EXPORT GLboolean __GLXEW_OML_sync_control;$/;"	v	typeref:typename:GLXEW_VAR_EXPORT GLboolean
__GLXEW_SGIS_blended_overlay	./GL/glxew.h	/^GLXEW_VAR_EXPORT GLboolean __GLXEW_SGIS_blended_overlay;$/;"	v	typeref:typename:GLXEW_VAR_EXPORT GLboolean
__GLXEW_SGIS_color_range	./GL/glxew.h	/^GLXEW_VAR_EXPORT GLboolean __GLXEW_SGIS_color_range;$/;"	v	typeref:typename:GLXEW_VAR_EXPORT GLboolean
__GLXEW_SGIS_multisample	./GL/glxew.h	/^GLXEW_VAR_EXPORT GLboolean __GLXEW_SGIS_multisample;$/;"	v	typeref:typename:GLXEW_VAR_EXPORT GLboolean
__GLXEW_SGIS_shared_multisample	./GL/glxew.h	/^GLXEW_VAR_EXPORT GLboolean __GLXEW_SGIS_shared_multisample;$/;"	v	typeref:typename:GLXEW_VAR_EXPORT GLboolean
__GLXEW_SGIX_fbconfig	./GL/glxew.h	/^GLXEW_VAR_EXPORT GLboolean __GLXEW_SGIX_fbconfig;$/;"	v	typeref:typename:GLXEW_VAR_EXPORT GLboolean
__GLXEW_SGIX_hyperpipe	./GL/glxew.h	/^GLXEW_VAR_EXPORT GLboolean __GLXEW_SGIX_hyperpipe;$/;"	v	typeref:typename:GLXEW_VAR_EXPORT GLboolean
__GLXEW_SGIX_pbuffer	./GL/glxew.h	/^GLXEW_VAR_EXPORT GLboolean __GLXEW_SGIX_pbuffer;$/;"	v	typeref:typename:GLXEW_VAR_EXPORT GLboolean
__GLXEW_SGIX_swap_barrier	./GL/glxew.h	/^GLXEW_VAR_EXPORT GLboolean __GLXEW_SGIX_swap_barrier;$/;"	v	typeref:typename:GLXEW_VAR_EXPORT GLboolean
__GLXEW_SGIX_swap_group	./GL/glxew.h	/^GLXEW_VAR_EXPORT GLboolean __GLXEW_SGIX_swap_group;$/;"	v	typeref:typename:GLXEW_VAR_EXPORT GLboolean
__GLXEW_SGIX_video_resize	./GL/glxew.h	/^GLXEW_VAR_EXPORT GLboolean __GLXEW_SGIX_video_resize;$/;"	v	typeref:typename:GLXEW_VAR_EXPORT GLboolean
__GLXEW_SGIX_visual_select_group	./GL/glxew.h	/^GLXEW_VAR_EXPORT GLboolean __GLXEW_SGIX_visual_select_group;$/;"	v	typeref:typename:GLXEW_VAR_EXPORT GLboolean
__GLXEW_SGI_cushion	./GL/glxew.h	/^GLXEW_VAR_EXPORT GLboolean __GLXEW_SGI_cushion;$/;"	v	typeref:typename:GLXEW_VAR_EXPORT GLboolean
__GLXEW_SGI_make_current_read	./GL/glxew.h	/^GLXEW_VAR_EXPORT GLboolean __GLXEW_SGI_make_current_read;$/;"	v	typeref:typename:GLXEW_VAR_EXPORT GLboolean
__GLXEW_SGI_swap_control	./GL/glxew.h	/^GLXEW_VAR_EXPORT GLboolean __GLXEW_SGI_swap_control;$/;"	v	typeref:typename:GLXEW_VAR_EXPORT GLboolean
__GLXEW_SGI_video_sync	./GL/glxew.h	/^GLXEW_VAR_EXPORT GLboolean __GLXEW_SGI_video_sync;$/;"	v	typeref:typename:GLXEW_VAR_EXPORT GLboolean
__GLXEW_SUN_get_transparent_index	./GL/glxew.h	/^GLXEW_VAR_EXPORT GLboolean __GLXEW_SUN_get_transparent_index;$/;"	v	typeref:typename:GLXEW_VAR_EXPORT GLboolean
__GLXEW_SUN_video_resize	./GL/glxew.h	/^GLXEW_VAR_EXPORT GLboolean __GLXEW_SUN_video_resize;$/;"	v	typeref:typename:GLXEW_VAR_EXPORT GLboolean
__GLXEW_VERSION_1_0	./GL/glxew.h	/^GLXEW_VAR_EXPORT GLboolean __GLXEW_VERSION_1_0;$/;"	v	typeref:typename:GLXEW_VAR_EXPORT GLboolean
__GLXEW_VERSION_1_1	./GL/glxew.h	/^GLXEW_VAR_EXPORT GLboolean __GLXEW_VERSION_1_1;$/;"	v	typeref:typename:GLXEW_VAR_EXPORT GLboolean
__GLXEW_VERSION_1_2	./GL/glxew.h	/^GLXEW_VAR_EXPORT GLboolean __GLXEW_VERSION_1_2;$/;"	v	typeref:typename:GLXEW_VAR_EXPORT GLboolean
__GLXEW_VERSION_1_3	./GL/glxew.h	/^GLXEW_VAR_EXPORT GLboolean __GLXEW_VERSION_1_3;$/;"	v	typeref:typename:GLXEW_VAR_EXPORT GLboolean
__GLXEW_VERSION_1_4	./GL/glxew.h	/^GLXEW_VAR_EXPORT GLboolean __GLXEW_VERSION_1_4;$/;"	v	typeref:typename:GLXEW_VAR_EXPORT GLboolean
__GLXEvent	./GL/glxew.h	/^typedef union __GLXEvent {$/;"	u
__GLX_glx_h__	./GL/glxew.h	/^#define __GLX_glx_h__$/;"	d
__GL_H__	./GL/glew.h	/^#define __GL_H__$/;"	d
__REGAL_H__	./GL/glew.h	/^#define __REGAL_H__$/;"	d
__WGLEW_3DFX_multisample	./GL/wglew.h	/^WGLEW_VAR_EXPORT GLboolean __WGLEW_3DFX_multisample;$/;"	v	typeref:typename:WGLEW_VAR_EXPORT GLboolean
__WGLEW_3DL_stereo_control	./GL/wglew.h	/^WGLEW_VAR_EXPORT GLboolean __WGLEW_3DL_stereo_control;$/;"	v	typeref:typename:WGLEW_VAR_EXPORT GLboolean
__WGLEW_AMD_gpu_association	./GL/wglew.h	/^WGLEW_VAR_EXPORT GLboolean __WGLEW_AMD_gpu_association;$/;"	v	typeref:typename:WGLEW_VAR_EXPORT GLboolean
__WGLEW_ARB_buffer_region	./GL/wglew.h	/^WGLEW_VAR_EXPORT GLboolean __WGLEW_ARB_buffer_region;$/;"	v	typeref:typename:WGLEW_VAR_EXPORT GLboolean
__WGLEW_ARB_context_flush_control	./GL/wglew.h	/^WGLEW_VAR_EXPORT GLboolean __WGLEW_ARB_context_flush_control;$/;"	v	typeref:typename:WGLEW_VAR_EXPORT GLboolean
__WGLEW_ARB_create_context	./GL/wglew.h	/^WGLEW_VAR_EXPORT GLboolean __WGLEW_ARB_create_context;$/;"	v	typeref:typename:WGLEW_VAR_EXPORT GLboolean
__WGLEW_ARB_create_context_no_error	./GL/wglew.h	/^WGLEW_VAR_EXPORT GLboolean __WGLEW_ARB_create_context_no_error;$/;"	v	typeref:typename:WGLEW_VAR_EXPORT GLboolean
__WGLEW_ARB_create_context_profile	./GL/wglew.h	/^WGLEW_VAR_EXPORT GLboolean __WGLEW_ARB_create_context_profile;$/;"	v	typeref:typename:WGLEW_VAR_EXPORT GLboolean
__WGLEW_ARB_create_context_robustness	./GL/wglew.h	/^WGLEW_VAR_EXPORT GLboolean __WGLEW_ARB_create_context_robustness;$/;"	v	typeref:typename:WGLEW_VAR_EXPORT GLboolean
__WGLEW_ARB_extensions_string	./GL/wglew.h	/^WGLEW_VAR_EXPORT GLboolean __WGLEW_ARB_extensions_string;$/;"	v	typeref:typename:WGLEW_VAR_EXPORT GLboolean
__WGLEW_ARB_framebuffer_sRGB	./GL/wglew.h	/^WGLEW_VAR_EXPORT GLboolean __WGLEW_ARB_framebuffer_sRGB;$/;"	v	typeref:typename:WGLEW_VAR_EXPORT GLboolean
__WGLEW_ARB_make_current_read	./GL/wglew.h	/^WGLEW_VAR_EXPORT GLboolean __WGLEW_ARB_make_current_read;$/;"	v	typeref:typename:WGLEW_VAR_EXPORT GLboolean
__WGLEW_ARB_multisample	./GL/wglew.h	/^WGLEW_VAR_EXPORT GLboolean __WGLEW_ARB_multisample;$/;"	v	typeref:typename:WGLEW_VAR_EXPORT GLboolean
__WGLEW_ARB_pbuffer	./GL/wglew.h	/^WGLEW_VAR_EXPORT GLboolean __WGLEW_ARB_pbuffer;$/;"	v	typeref:typename:WGLEW_VAR_EXPORT GLboolean
__WGLEW_ARB_pixel_format	./GL/wglew.h	/^WGLEW_VAR_EXPORT GLboolean __WGLEW_ARB_pixel_format;$/;"	v	typeref:typename:WGLEW_VAR_EXPORT GLboolean
__WGLEW_ARB_pixel_format_float	./GL/wglew.h	/^WGLEW_VAR_EXPORT GLboolean __WGLEW_ARB_pixel_format_float;$/;"	v	typeref:typename:WGLEW_VAR_EXPORT GLboolean
__WGLEW_ARB_render_texture	./GL/wglew.h	/^WGLEW_VAR_EXPORT GLboolean __WGLEW_ARB_render_texture;$/;"	v	typeref:typename:WGLEW_VAR_EXPORT GLboolean
__WGLEW_ARB_robustness_application_isolation	./GL/wglew.h	/^WGLEW_VAR_EXPORT GLboolean __WGLEW_ARB_robustness_application_isolation;$/;"	v	typeref:typename:WGLEW_VAR_EXPORT GLboolean
__WGLEW_ARB_robustness_share_group_isolation	./GL/wglew.h	/^WGLEW_VAR_EXPORT GLboolean __WGLEW_ARB_robustness_share_group_isolation;$/;"	v	typeref:typename:WGLEW_VAR_EXPORT GLboolean
__WGLEW_ATI_pixel_format_float	./GL/wglew.h	/^WGLEW_VAR_EXPORT GLboolean __WGLEW_ATI_pixel_format_float;$/;"	v	typeref:typename:WGLEW_VAR_EXPORT GLboolean
__WGLEW_ATI_render_texture_rectangle	./GL/wglew.h	/^WGLEW_VAR_EXPORT GLboolean __WGLEW_ATI_render_texture_rectangle;$/;"	v	typeref:typename:WGLEW_VAR_EXPORT GLboolean
__WGLEW_EXT_colorspace	./GL/wglew.h	/^WGLEW_VAR_EXPORT GLboolean __WGLEW_EXT_colorspace;$/;"	v	typeref:typename:WGLEW_VAR_EXPORT GLboolean
__WGLEW_EXT_create_context_es2_profile	./GL/wglew.h	/^WGLEW_VAR_EXPORT GLboolean __WGLEW_EXT_create_context_es2_profile;$/;"	v	typeref:typename:WGLEW_VAR_EXPORT GLboolean
__WGLEW_EXT_create_context_es_profile	./GL/wglew.h	/^WGLEW_VAR_EXPORT GLboolean __WGLEW_EXT_create_context_es_profile;$/;"	v	typeref:typename:WGLEW_VAR_EXPORT GLboolean
__WGLEW_EXT_depth_float	./GL/wglew.h	/^WGLEW_VAR_EXPORT GLboolean __WGLEW_EXT_depth_float;$/;"	v	typeref:typename:WGLEW_VAR_EXPORT GLboolean
__WGLEW_EXT_display_color_table	./GL/wglew.h	/^WGLEW_VAR_EXPORT GLboolean __WGLEW_EXT_display_color_table;$/;"	v	typeref:typename:WGLEW_VAR_EXPORT GLboolean
__WGLEW_EXT_extensions_string	./GL/wglew.h	/^WGLEW_VAR_EXPORT GLboolean __WGLEW_EXT_extensions_string;$/;"	v	typeref:typename:WGLEW_VAR_EXPORT GLboolean
__WGLEW_EXT_framebuffer_sRGB	./GL/wglew.h	/^WGLEW_VAR_EXPORT GLboolean __WGLEW_EXT_framebuffer_sRGB;$/;"	v	typeref:typename:WGLEW_VAR_EXPORT GLboolean
__WGLEW_EXT_make_current_read	./GL/wglew.h	/^WGLEW_VAR_EXPORT GLboolean __WGLEW_EXT_make_current_read;$/;"	v	typeref:typename:WGLEW_VAR_EXPORT GLboolean
__WGLEW_EXT_multisample	./GL/wglew.h	/^WGLEW_VAR_EXPORT GLboolean __WGLEW_EXT_multisample;$/;"	v	typeref:typename:WGLEW_VAR_EXPORT GLboolean
__WGLEW_EXT_pbuffer	./GL/wglew.h	/^WGLEW_VAR_EXPORT GLboolean __WGLEW_EXT_pbuffer;$/;"	v	typeref:typename:WGLEW_VAR_EXPORT GLboolean
__WGLEW_EXT_pixel_format	./GL/wglew.h	/^WGLEW_VAR_EXPORT GLboolean __WGLEW_EXT_pixel_format;$/;"	v	typeref:typename:WGLEW_VAR_EXPORT GLboolean
__WGLEW_EXT_pixel_format_packed_float	./GL/wglew.h	/^WGLEW_VAR_EXPORT GLboolean __WGLEW_EXT_pixel_format_packed_float;$/;"	v	typeref:typename:WGLEW_VAR_EXPORT GLboolean
__WGLEW_EXT_swap_control	./GL/wglew.h	/^WGLEW_VAR_EXPORT GLboolean __WGLEW_EXT_swap_control;$/;"	v	typeref:typename:WGLEW_VAR_EXPORT GLboolean
__WGLEW_EXT_swap_control_tear	./GL/wglew.h	/^WGLEW_VAR_EXPORT GLboolean __WGLEW_EXT_swap_control_tear;$/;"	v	typeref:typename:WGLEW_VAR_EXPORT GLboolean
__WGLEW_H__	./GL/wglew.h	/^#define __WGLEW_H__$/;"	d
__WGLEW_I3D_digital_video_control	./GL/wglew.h	/^WGLEW_VAR_EXPORT GLboolean __WGLEW_I3D_digital_video_control;$/;"	v	typeref:typename:WGLEW_VAR_EXPORT GLboolean
__WGLEW_I3D_gamma	./GL/wglew.h	/^WGLEW_VAR_EXPORT GLboolean __WGLEW_I3D_gamma;$/;"	v	typeref:typename:WGLEW_VAR_EXPORT GLboolean
__WGLEW_I3D_genlock	./GL/wglew.h	/^WGLEW_VAR_EXPORT GLboolean __WGLEW_I3D_genlock;$/;"	v	typeref:typename:WGLEW_VAR_EXPORT GLboolean
__WGLEW_I3D_image_buffer	./GL/wglew.h	/^WGLEW_VAR_EXPORT GLboolean __WGLEW_I3D_image_buffer;$/;"	v	typeref:typename:WGLEW_VAR_EXPORT GLboolean
__WGLEW_I3D_swap_frame_lock	./GL/wglew.h	/^WGLEW_VAR_EXPORT GLboolean __WGLEW_I3D_swap_frame_lock;$/;"	v	typeref:typename:WGLEW_VAR_EXPORT GLboolean
__WGLEW_I3D_swap_frame_usage	./GL/wglew.h	/^WGLEW_VAR_EXPORT GLboolean __WGLEW_I3D_swap_frame_usage;$/;"	v	typeref:typename:WGLEW_VAR_EXPORT GLboolean
__WGLEW_NV_DX_interop	./GL/wglew.h	/^WGLEW_VAR_EXPORT GLboolean __WGLEW_NV_DX_interop;$/;"	v	typeref:typename:WGLEW_VAR_EXPORT GLboolean
__WGLEW_NV_DX_interop2	./GL/wglew.h	/^WGLEW_VAR_EXPORT GLboolean __WGLEW_NV_DX_interop2;$/;"	v	typeref:typename:WGLEW_VAR_EXPORT GLboolean
__WGLEW_NV_copy_image	./GL/wglew.h	/^WGLEW_VAR_EXPORT GLboolean __WGLEW_NV_copy_image;$/;"	v	typeref:typename:WGLEW_VAR_EXPORT GLboolean
__WGLEW_NV_delay_before_swap	./GL/wglew.h	/^WGLEW_VAR_EXPORT GLboolean __WGLEW_NV_delay_before_swap;$/;"	v	typeref:typename:WGLEW_VAR_EXPORT GLboolean
__WGLEW_NV_float_buffer	./GL/wglew.h	/^WGLEW_VAR_EXPORT GLboolean __WGLEW_NV_float_buffer;$/;"	v	typeref:typename:WGLEW_VAR_EXPORT GLboolean
__WGLEW_NV_gpu_affinity	./GL/wglew.h	/^WGLEW_VAR_EXPORT GLboolean __WGLEW_NV_gpu_affinity;$/;"	v	typeref:typename:WGLEW_VAR_EXPORT GLboolean
__WGLEW_NV_multigpu_context	./GL/wglew.h	/^WGLEW_VAR_EXPORT GLboolean __WGLEW_NV_multigpu_context;$/;"	v	typeref:typename:WGLEW_VAR_EXPORT GLboolean
__WGLEW_NV_multisample_coverage	./GL/wglew.h	/^WGLEW_VAR_EXPORT GLboolean __WGLEW_NV_multisample_coverage;$/;"	v	typeref:typename:WGLEW_VAR_EXPORT GLboolean
__WGLEW_NV_present_video	./GL/wglew.h	/^WGLEW_VAR_EXPORT GLboolean __WGLEW_NV_present_video;$/;"	v	typeref:typename:WGLEW_VAR_EXPORT GLboolean
__WGLEW_NV_render_depth_texture	./GL/wglew.h	/^WGLEW_VAR_EXPORT GLboolean __WGLEW_NV_render_depth_texture;$/;"	v	typeref:typename:WGLEW_VAR_EXPORT GLboolean
__WGLEW_NV_render_texture_rectangle	./GL/wglew.h	/^WGLEW_VAR_EXPORT GLboolean __WGLEW_NV_render_texture_rectangle;$/;"	v	typeref:typename:WGLEW_VAR_EXPORT GLboolean
__WGLEW_NV_swap_group	./GL/wglew.h	/^WGLEW_VAR_EXPORT GLboolean __WGLEW_NV_swap_group;$/;"	v	typeref:typename:WGLEW_VAR_EXPORT GLboolean
__WGLEW_NV_vertex_array_range	./GL/wglew.h	/^WGLEW_VAR_EXPORT GLboolean __WGLEW_NV_vertex_array_range;$/;"	v	typeref:typename:WGLEW_VAR_EXPORT GLboolean
__WGLEW_NV_video_capture	./GL/wglew.h	/^WGLEW_VAR_EXPORT GLboolean __WGLEW_NV_video_capture;$/;"	v	typeref:typename:WGLEW_VAR_EXPORT GLboolean
__WGLEW_NV_video_output	./GL/wglew.h	/^WGLEW_VAR_EXPORT GLboolean __WGLEW_NV_video_output;$/;"	v	typeref:typename:WGLEW_VAR_EXPORT GLboolean
__WGLEW_OML_sync_control	./GL/wglew.h	/^WGLEW_VAR_EXPORT GLboolean __WGLEW_OML_sync_control;$/;"	v	typeref:typename:WGLEW_VAR_EXPORT GLboolean
__X_GL_H	./GL/glew.h	/^#define __X_GL_H$/;"	d
__anon119f3359010a	./glm/detail/type_vec1.hpp	/^			{$/;"	u	struct:glm::vec
__anon119f3359020a	./glm/detail/type_vec1.hpp	/^			union {T x, r, s;};$/;"	u	struct:glm::vec
__anon1fcde5f00102	./glm/detail/func_matrix_simd.inl	/^		auto MulRow = [&](int l) {$/;"	f	function:glm::operator *	file:
__anon37df8f18010a	./glm/detail/func_common.inl	/^		{$/;"	u	function:glm::floatBitsToInt	file:
__anon37df8f18020a	./glm/detail/func_common.inl	/^		{$/;"	u	function:glm::floatBitsToUint	file:
__anon37df8f18030a	./glm/detail/func_common.inl	/^		{$/;"	u	function:glm::intBitsToFloat	file:
__anon37df8f18040a	./glm/detail/func_common.inl	/^		{$/;"	u	function:glm::uintBitsToFloat	file:
__anon440bef85010a	./glm/detail/type_quat.hpp	/^			{$/;"	u	struct:glm::qua
__anon440bef850208	./glm/detail/type_quat.hpp	/^					struct { T w, x, y, z; };$/;"	s	union:glm::qua::__anon440bef85010a
__anon919c3c0c010a	./glm/detail/func_packing.inl	/^		{$/;"	u	function:glm::packUnorm2x16	file:
__anon919c3c0c020a	./glm/detail/func_packing.inl	/^		{$/;"	u	function:glm::unpackUnorm2x16	file:
__anon919c3c0c030a	./glm/detail/func_packing.inl	/^		{$/;"	u	function:glm::packSnorm2x16	file:
__anon919c3c0c040a	./glm/detail/func_packing.inl	/^		{$/;"	u	function:glm::unpackSnorm2x16	file:
__anon919c3c0c050a	./glm/detail/func_packing.inl	/^		{$/;"	u	function:glm::packUnorm4x8	file:
__anon919c3c0c060a	./glm/detail/func_packing.inl	/^		{$/;"	u	function:glm::unpackUnorm4x8	file:
__anon919c3c0c070a	./glm/detail/func_packing.inl	/^		{$/;"	u	function:glm::packSnorm4x8	file:
__anon919c3c0c080a	./glm/detail/func_packing.inl	/^		{$/;"	u	function:glm::unpackSnorm4x8	file:
__anon919c3c0c090a	./glm/detail/func_packing.inl	/^		{$/;"	u	function:glm::packDouble2x32	file:
__anon919c3c0c0a0a	./glm/detail/func_packing.inl	/^		{$/;"	u	function:glm::unpackDouble2x32	file:
__anon919c3c0c0b0a	./glm/detail/func_packing.inl	/^		{$/;"	u	function:glm::packHalf2x16	file:
__anon919c3c0c0c0a	./glm/detail/func_packing.inl	/^		{$/;"	u	function:glm::unpackHalf2x16	file:
__anonb0ce8848010a	./glm/ext/scalar_ulp.inl	/^{$/;"	u	file:
__anonb0ce8848020a	./glm/ext/scalar_ulp.inl	/^{$/;"	u	file:
__anonb0ce88480308	./glm/ext/scalar_ulp.inl	/^	{$/;"	s	union:__anonb0ce8848020a	file:
__anonb1a929810108	./GL/glxew.h	/^typedef struct {$/;"	s
__anonb1a929810208	./GL/glxew.h	/^typedef struct {$/;"	s
__anonb1a929810308	./GL/glxew.h	/^typedef struct {$/;"	s
__anonb1a929810408	./GL/glxew.h	/^typedef struct {$/;"	s
__anonb1a929810508	./GL/glxew.h	/^typedef struct {$/;"	s
__anonb1a929810608	./GL/glxew.h	/^typedef struct { int type; unsigned long serial; Bool send_event; Display *display; GLXDrawable /;"	s
__eglMustCastToProperFunctionPointerType	./GL/eglew.h	/^typedef void (*__eglMustCastToProperFunctionPointerType)(void);$/;"	t	typeref:typename:void (*)(void)
__egl_h_	./GL/eglew.h	/^#define __egl_h_$/;"	d
__eglewBindAPI	./GL/eglew.h	/^EGLEW_FUN_EXPORT PFNEGLBINDAPIPROC __eglewBindAPI;$/;"	v	typeref:typename:EGLEW_FUN_EXPORT PFNEGLBINDAPIPROC
__eglewBindTexImage	./GL/eglew.h	/^EGLEW_FUN_EXPORT PFNEGLBINDTEXIMAGEPROC __eglewBindTexImage;$/;"	v	typeref:typename:EGLEW_FUN_EXPORT PFNEGLBINDTEXIMAGEPROC
__eglewBindWaylandDisplayWL	./GL/eglew.h	/^EGLEW_FUN_EXPORT PFNEGLBINDWAYLANDDISPLAYWLPROC __eglewBindWaylandDisplayWL;$/;"	v	typeref:typename:EGLEW_FUN_EXPORT PFNEGLBINDWAYLANDDISPLAYWLPROC
__eglewChooseConfig	./GL/eglew.h	/^EGLEW_FUN_EXPORT PFNEGLCHOOSECONFIGPROC __eglewChooseConfig;$/;"	v	typeref:typename:EGLEW_FUN_EXPORT PFNEGLCHOOSECONFIGPROC
__eglewClientSignalSyncEXT	./GL/eglew.h	/^EGLEW_FUN_EXPORT PFNEGLCLIENTSIGNALSYNCEXTPROC __eglewClientSignalSyncEXT;$/;"	v	typeref:typename:EGLEW_FUN_EXPORT PFNEGLCLIENTSIGNALSYNCEXTPROC
__eglewClientWaitSync	./GL/eglew.h	/^EGLEW_FUN_EXPORT PFNEGLCLIENTWAITSYNCPROC __eglewClientWaitSync;$/;"	v	typeref:typename:EGLEW_FUN_EXPORT PFNEGLCLIENTWAITSYNCPROC
__eglewClientWaitSyncKHR	./GL/eglew.h	/^EGLEW_FUN_EXPORT PFNEGLCLIENTWAITSYNCKHRPROC __eglewClientWaitSyncKHR;$/;"	v	typeref:typename:EGLEW_FUN_EXPORT PFNEGLCLIENTWAITSYNCKHRPROC
__eglewClientWaitSyncNV	./GL/eglew.h	/^EGLEW_FUN_EXPORT PFNEGLCLIENTWAITSYNCNVPROC __eglewClientWaitSyncNV;$/;"	v	typeref:typename:EGLEW_FUN_EXPORT PFNEGLCLIENTWAITSYNCNVPROC
__eglewCompositorBindTexWindowEXT	./GL/eglew.h	/^EGLEW_FUN_EXPORT PFNEGLCOMPOSITORBINDTEXWINDOWEXTPROC __eglewCompositorBindTexWindowEXT;$/;"	v	typeref:typename:EGLEW_FUN_EXPORT PFNEGLCOMPOSITORBINDTEXWINDOWEXTPROC
__eglewCompositorSetContextAttributesEXT	./GL/eglew.h	/^EGLEW_FUN_EXPORT PFNEGLCOMPOSITORSETCONTEXTATTRIBUTESEXTPROC __eglewCompositorSetContextAttribut/;"	v	typeref:typename:EGLEW_FUN_EXPORT PFNEGLCOMPOSITORSETCONTEXTATTRIBUTESEXTPROC
__eglewCompositorSetContextListEXT	./GL/eglew.h	/^EGLEW_FUN_EXPORT PFNEGLCOMPOSITORSETCONTEXTLISTEXTPROC __eglewCompositorSetContextListEXT;$/;"	v	typeref:typename:EGLEW_FUN_EXPORT PFNEGLCOMPOSITORSETCONTEXTLISTEXTPROC
__eglewCompositorSetSizeEXT	./GL/eglew.h	/^EGLEW_FUN_EXPORT PFNEGLCOMPOSITORSETSIZEEXTPROC __eglewCompositorSetSizeEXT;$/;"	v	typeref:typename:EGLEW_FUN_EXPORT PFNEGLCOMPOSITORSETSIZEEXTPROC
__eglewCompositorSetWindowAttributesEXT	./GL/eglew.h	/^EGLEW_FUN_EXPORT PFNEGLCOMPOSITORSETWINDOWATTRIBUTESEXTPROC __eglewCompositorSetWindowAttributes/;"	v	typeref:typename:EGLEW_FUN_EXPORT PFNEGLCOMPOSITORSETWINDOWATTRIBUTESEXTPROC
__eglewCompositorSetWindowListEXT	./GL/eglew.h	/^EGLEW_FUN_EXPORT PFNEGLCOMPOSITORSETWINDOWLISTEXTPROC __eglewCompositorSetWindowListEXT;$/;"	v	typeref:typename:EGLEW_FUN_EXPORT PFNEGLCOMPOSITORSETWINDOWLISTEXTPROC
__eglewCompositorSwapPolicyEXT	./GL/eglew.h	/^EGLEW_FUN_EXPORT PFNEGLCOMPOSITORSWAPPOLICYEXTPROC __eglewCompositorSwapPolicyEXT;$/;"	v	typeref:typename:EGLEW_FUN_EXPORT PFNEGLCOMPOSITORSWAPPOLICYEXTPROC
__eglewCopyBuffers	./GL/eglew.h	/^EGLEW_FUN_EXPORT PFNEGLCOPYBUFFERSPROC __eglewCopyBuffers;$/;"	v	typeref:typename:EGLEW_FUN_EXPORT PFNEGLCOPYBUFFERSPROC
__eglewCreateContext	./GL/eglew.h	/^EGLEW_FUN_EXPORT PFNEGLCREATECONTEXTPROC __eglewCreateContext;$/;"	v	typeref:typename:EGLEW_FUN_EXPORT PFNEGLCREATECONTEXTPROC
__eglewCreateDRMImageMESA	./GL/eglew.h	/^EGLEW_FUN_EXPORT PFNEGLCREATEDRMIMAGEMESAPROC __eglewCreateDRMImageMESA;$/;"	v	typeref:typename:EGLEW_FUN_EXPORT PFNEGLCREATEDRMIMAGEMESAPROC
__eglewCreateFenceSyncNV	./GL/eglew.h	/^EGLEW_FUN_EXPORT PFNEGLCREATEFENCESYNCNVPROC __eglewCreateFenceSyncNV;$/;"	v	typeref:typename:EGLEW_FUN_EXPORT PFNEGLCREATEFENCESYNCNVPROC
__eglewCreateImage	./GL/eglew.h	/^EGLEW_FUN_EXPORT PFNEGLCREATEIMAGEPROC __eglewCreateImage;$/;"	v	typeref:typename:EGLEW_FUN_EXPORT PFNEGLCREATEIMAGEPROC
__eglewCreateImageKHR	./GL/eglew.h	/^EGLEW_FUN_EXPORT PFNEGLCREATEIMAGEKHRPROC __eglewCreateImageKHR;$/;"	v	typeref:typename:EGLEW_FUN_EXPORT PFNEGLCREATEIMAGEKHRPROC
__eglewCreateNativeClientBufferANDROID	./GL/eglew.h	/^EGLEW_FUN_EXPORT PFNEGLCREATENATIVECLIENTBUFFERANDROIDPROC __eglewCreateNativeClientBufferANDROI/;"	v	typeref:typename:EGLEW_FUN_EXPORT PFNEGLCREATENATIVECLIENTBUFFERANDROIDPROC
__eglewCreatePbufferFromClientBuffer	./GL/eglew.h	/^EGLEW_FUN_EXPORT PFNEGLCREATEPBUFFERFROMCLIENTBUFFERPROC __eglewCreatePbufferFromClientBuffer;$/;"	v	typeref:typename:EGLEW_FUN_EXPORT PFNEGLCREATEPBUFFERFROMCLIENTBUFFERPROC
__eglewCreatePbufferSurface	./GL/eglew.h	/^EGLEW_FUN_EXPORT PFNEGLCREATEPBUFFERSURFACEPROC __eglewCreatePbufferSurface;$/;"	v	typeref:typename:EGLEW_FUN_EXPORT PFNEGLCREATEPBUFFERSURFACEPROC
__eglewCreatePixmapSurface	./GL/eglew.h	/^EGLEW_FUN_EXPORT PFNEGLCREATEPIXMAPSURFACEPROC __eglewCreatePixmapSurface;$/;"	v	typeref:typename:EGLEW_FUN_EXPORT PFNEGLCREATEPIXMAPSURFACEPROC
__eglewCreatePixmapSurfaceHI	./GL/eglew.h	/^EGLEW_FUN_EXPORT PFNEGLCREATEPIXMAPSURFACEHIPROC __eglewCreatePixmapSurfaceHI;$/;"	v	typeref:typename:EGLEW_FUN_EXPORT PFNEGLCREATEPIXMAPSURFACEHIPROC
__eglewCreatePlatformPixmapSurface	./GL/eglew.h	/^EGLEW_FUN_EXPORT PFNEGLCREATEPLATFORMPIXMAPSURFACEPROC __eglewCreatePlatformPixmapSurface;$/;"	v	typeref:typename:EGLEW_FUN_EXPORT PFNEGLCREATEPLATFORMPIXMAPSURFACEPROC
__eglewCreatePlatformPixmapSurfaceEXT	./GL/eglew.h	/^EGLEW_FUN_EXPORT PFNEGLCREATEPLATFORMPIXMAPSURFACEEXTPROC __eglewCreatePlatformPixmapSurfaceEXT;$/;"	v	typeref:typename:EGLEW_FUN_EXPORT PFNEGLCREATEPLATFORMPIXMAPSURFACEEXTPROC
__eglewCreatePlatformWindowSurface	./GL/eglew.h	/^EGLEW_FUN_EXPORT PFNEGLCREATEPLATFORMWINDOWSURFACEPROC __eglewCreatePlatformWindowSurface;$/;"	v	typeref:typename:EGLEW_FUN_EXPORT PFNEGLCREATEPLATFORMWINDOWSURFACEPROC
__eglewCreatePlatformWindowSurfaceEXT	./GL/eglew.h	/^EGLEW_FUN_EXPORT PFNEGLCREATEPLATFORMWINDOWSURFACEEXTPROC __eglewCreatePlatformWindowSurfaceEXT;$/;"	v	typeref:typename:EGLEW_FUN_EXPORT PFNEGLCREATEPLATFORMWINDOWSURFACEEXTPROC
__eglewCreateStreamAttribKHR	./GL/eglew.h	/^EGLEW_FUN_EXPORT PFNEGLCREATESTREAMATTRIBKHRPROC __eglewCreateStreamAttribKHR;$/;"	v	typeref:typename:EGLEW_FUN_EXPORT PFNEGLCREATESTREAMATTRIBKHRPROC
__eglewCreateStreamFromFileDescriptorKHR	./GL/eglew.h	/^EGLEW_FUN_EXPORT PFNEGLCREATESTREAMFROMFILEDESCRIPTORKHRPROC __eglewCreateStreamFromFileDescript/;"	v	typeref:typename:EGLEW_FUN_EXPORT PFNEGLCREATESTREAMFROMFILEDESCRIPTORKHRPROC
__eglewCreateStreamKHR	./GL/eglew.h	/^EGLEW_FUN_EXPORT PFNEGLCREATESTREAMKHRPROC __eglewCreateStreamKHR;$/;"	v	typeref:typename:EGLEW_FUN_EXPORT PFNEGLCREATESTREAMKHRPROC
__eglewCreateStreamProducerSurfaceKHR	./GL/eglew.h	/^EGLEW_FUN_EXPORT PFNEGLCREATESTREAMPRODUCERSURFACEKHRPROC __eglewCreateStreamProducerSurfaceKHR;$/;"	v	typeref:typename:EGLEW_FUN_EXPORT PFNEGLCREATESTREAMPRODUCERSURFACEKHRPROC
__eglewCreateStreamSyncNV	./GL/eglew.h	/^EGLEW_FUN_EXPORT PFNEGLCREATESTREAMSYNCNVPROC __eglewCreateStreamSyncNV;$/;"	v	typeref:typename:EGLEW_FUN_EXPORT PFNEGLCREATESTREAMSYNCNVPROC
__eglewCreateSync	./GL/eglew.h	/^EGLEW_FUN_EXPORT PFNEGLCREATESYNCPROC __eglewCreateSync;$/;"	v	typeref:typename:EGLEW_FUN_EXPORT PFNEGLCREATESYNCPROC
__eglewCreateSync64KHR	./GL/eglew.h	/^EGLEW_FUN_EXPORT PFNEGLCREATESYNC64KHRPROC __eglewCreateSync64KHR;$/;"	v	typeref:typename:EGLEW_FUN_EXPORT PFNEGLCREATESYNC64KHRPROC
__eglewCreateSyncKHR	./GL/eglew.h	/^EGLEW_FUN_EXPORT PFNEGLCREATESYNCKHRPROC __eglewCreateSyncKHR;$/;"	v	typeref:typename:EGLEW_FUN_EXPORT PFNEGLCREATESYNCKHRPROC
__eglewCreateWaylandBufferFromImageWL	./GL/eglew.h	/^EGLEW_FUN_EXPORT PFNEGLCREATEWAYLANDBUFFERFROMIMAGEWLPROC __eglewCreateWaylandBufferFromImageWL;$/;"	v	typeref:typename:EGLEW_FUN_EXPORT PFNEGLCREATEWAYLANDBUFFERFROMIMAGEWLPROC
__eglewCreateWindowSurface	./GL/eglew.h	/^EGLEW_FUN_EXPORT PFNEGLCREATEWINDOWSURFACEPROC __eglewCreateWindowSurface;$/;"	v	typeref:typename:EGLEW_FUN_EXPORT PFNEGLCREATEWINDOWSURFACEPROC
__eglewDebugMessageControlKHR	./GL/eglew.h	/^EGLEW_FUN_EXPORT PFNEGLDEBUGMESSAGECONTROLKHRPROC __eglewDebugMessageControlKHR;$/;"	v	typeref:typename:EGLEW_FUN_EXPORT PFNEGLDEBUGMESSAGECONTROLKHRPROC
__eglewDestroyContext	./GL/eglew.h	/^EGLEW_FUN_EXPORT PFNEGLDESTROYCONTEXTPROC __eglewDestroyContext;$/;"	v	typeref:typename:EGLEW_FUN_EXPORT PFNEGLDESTROYCONTEXTPROC
__eglewDestroyImage	./GL/eglew.h	/^EGLEW_FUN_EXPORT PFNEGLDESTROYIMAGEPROC __eglewDestroyImage;$/;"	v	typeref:typename:EGLEW_FUN_EXPORT PFNEGLDESTROYIMAGEPROC
__eglewDestroyImageKHR	./GL/eglew.h	/^EGLEW_FUN_EXPORT PFNEGLDESTROYIMAGEKHRPROC __eglewDestroyImageKHR;$/;"	v	typeref:typename:EGLEW_FUN_EXPORT PFNEGLDESTROYIMAGEKHRPROC
__eglewDestroyStreamKHR	./GL/eglew.h	/^EGLEW_FUN_EXPORT PFNEGLDESTROYSTREAMKHRPROC __eglewDestroyStreamKHR;$/;"	v	typeref:typename:EGLEW_FUN_EXPORT PFNEGLDESTROYSTREAMKHRPROC
__eglewDestroySurface	./GL/eglew.h	/^EGLEW_FUN_EXPORT PFNEGLDESTROYSURFACEPROC __eglewDestroySurface;$/;"	v	typeref:typename:EGLEW_FUN_EXPORT PFNEGLDESTROYSURFACEPROC
__eglewDestroySync	./GL/eglew.h	/^EGLEW_FUN_EXPORT PFNEGLDESTROYSYNCPROC __eglewDestroySync;$/;"	v	typeref:typename:EGLEW_FUN_EXPORT PFNEGLDESTROYSYNCPROC
__eglewDestroySyncKHR	./GL/eglew.h	/^EGLEW_FUN_EXPORT PFNEGLDESTROYSYNCKHRPROC __eglewDestroySyncKHR;$/;"	v	typeref:typename:EGLEW_FUN_EXPORT PFNEGLDESTROYSYNCKHRPROC
__eglewDestroySyncNV	./GL/eglew.h	/^EGLEW_FUN_EXPORT PFNEGLDESTROYSYNCNVPROC __eglewDestroySyncNV;$/;"	v	typeref:typename:EGLEW_FUN_EXPORT PFNEGLDESTROYSYNCNVPROC
__eglewDupNativeFenceFDANDROID	./GL/eglew.h	/^EGLEW_FUN_EXPORT PFNEGLDUPNATIVEFENCEFDANDROIDPROC __eglewDupNativeFenceFDANDROID;$/;"	v	typeref:typename:EGLEW_FUN_EXPORT PFNEGLDUPNATIVEFENCEFDANDROIDPROC
__eglewExportDMABUFImageMESA	./GL/eglew.h	/^EGLEW_FUN_EXPORT PFNEGLEXPORTDMABUFIMAGEMESAPROC __eglewExportDMABUFImageMESA;$/;"	v	typeref:typename:EGLEW_FUN_EXPORT PFNEGLEXPORTDMABUFIMAGEMESAPROC
__eglewExportDMABUFImageQueryMESA	./GL/eglew.h	/^EGLEW_FUN_EXPORT PFNEGLEXPORTDMABUFIMAGEQUERYMESAPROC __eglewExportDMABUFImageQueryMESA;$/;"	v	typeref:typename:EGLEW_FUN_EXPORT PFNEGLEXPORTDMABUFIMAGEQUERYMESAPROC
__eglewExportDRMImageMESA	./GL/eglew.h	/^EGLEW_FUN_EXPORT PFNEGLEXPORTDRMIMAGEMESAPROC __eglewExportDRMImageMESA;$/;"	v	typeref:typename:EGLEW_FUN_EXPORT PFNEGLEXPORTDRMIMAGEMESAPROC
__eglewFenceNV	./GL/eglew.h	/^EGLEW_FUN_EXPORT PFNEGLFENCENVPROC __eglewFenceNV;$/;"	v	typeref:typename:EGLEW_FUN_EXPORT PFNEGLFENCENVPROC
__eglewGetCompositorTimingANDROID	./GL/eglew.h	/^EGLEW_FUN_EXPORT PFNEGLGETCOMPOSITORTIMINGANDROIDPROC __eglewGetCompositorTimingANDROID;$/;"	v	typeref:typename:EGLEW_FUN_EXPORT PFNEGLGETCOMPOSITORTIMINGANDROIDPROC
__eglewGetCompositorTimingSupportedANDROID	./GL/eglew.h	/^EGLEW_FUN_EXPORT PFNEGLGETCOMPOSITORTIMINGSUPPORTEDANDROIDPROC __eglewGetCompositorTimingSupport/;"	v	typeref:typename:EGLEW_FUN_EXPORT PFNEGLGETCOMPOSITORTIMINGSUPPORTEDANDROIDPROC
__eglewGetConfigAttrib	./GL/eglew.h	/^EGLEW_FUN_EXPORT PFNEGLGETCONFIGATTRIBPROC __eglewGetConfigAttrib;$/;"	v	typeref:typename:EGLEW_FUN_EXPORT PFNEGLGETCONFIGATTRIBPROC
__eglewGetConfigs	./GL/eglew.h	/^EGLEW_FUN_EXPORT PFNEGLGETCONFIGSPROC __eglewGetConfigs;$/;"	v	typeref:typename:EGLEW_FUN_EXPORT PFNEGLGETCONFIGSPROC
__eglewGetCurrentContext	./GL/eglew.h	/^EGLEW_FUN_EXPORT PFNEGLGETCURRENTCONTEXTPROC __eglewGetCurrentContext;$/;"	v	typeref:typename:EGLEW_FUN_EXPORT PFNEGLGETCURRENTCONTEXTPROC
__eglewGetCurrentDisplay	./GL/eglew.h	/^EGLEW_FUN_EXPORT PFNEGLGETCURRENTDISPLAYPROC __eglewGetCurrentDisplay;$/;"	v	typeref:typename:EGLEW_FUN_EXPORT PFNEGLGETCURRENTDISPLAYPROC
__eglewGetCurrentSurface	./GL/eglew.h	/^EGLEW_FUN_EXPORT PFNEGLGETCURRENTSURFACEPROC __eglewGetCurrentSurface;$/;"	v	typeref:typename:EGLEW_FUN_EXPORT PFNEGLGETCURRENTSURFACEPROC
__eglewGetDisplay	./GL/eglew.h	/^EGLEW_FUN_EXPORT PFNEGLGETDISPLAYPROC __eglewGetDisplay;$/;"	v	typeref:typename:EGLEW_FUN_EXPORT PFNEGLGETDISPLAYPROC
__eglewGetDisplayDriverConfig	./GL/eglew.h	/^EGLEW_FUN_EXPORT PFNEGLGETDISPLAYDRIVERCONFIGPROC __eglewGetDisplayDriverConfig;$/;"	v	typeref:typename:EGLEW_FUN_EXPORT PFNEGLGETDISPLAYDRIVERCONFIGPROC
__eglewGetDisplayDriverName	./GL/eglew.h	/^EGLEW_FUN_EXPORT PFNEGLGETDISPLAYDRIVERNAMEPROC __eglewGetDisplayDriverName;$/;"	v	typeref:typename:EGLEW_FUN_EXPORT PFNEGLGETDISPLAYDRIVERNAMEPROC
__eglewGetError	./GL/eglew.h	/^EGLEW_FUN_EXPORT PFNEGLGETERRORPROC __eglewGetError;$/;"	v	typeref:typename:EGLEW_FUN_EXPORT PFNEGLGETERRORPROC
__eglewGetFrameTimestampSupportedANDROID	./GL/eglew.h	/^EGLEW_FUN_EXPORT PFNEGLGETFRAMETIMESTAMPSUPPORTEDANDROIDPROC __eglewGetFrameTimestampSupportedAN/;"	v	typeref:typename:EGLEW_FUN_EXPORT PFNEGLGETFRAMETIMESTAMPSUPPORTEDANDROIDPROC
__eglewGetFrameTimestampsANDROID	./GL/eglew.h	/^EGLEW_FUN_EXPORT PFNEGLGETFRAMETIMESTAMPSANDROIDPROC __eglewGetFrameTimestampsANDROID;$/;"	v	typeref:typename:EGLEW_FUN_EXPORT PFNEGLGETFRAMETIMESTAMPSANDROIDPROC
__eglewGetNativeClientBufferANDROID	./GL/eglew.h	/^EGLEW_FUN_EXPORT PFNEGLGETNATIVECLIENTBUFFERANDROIDPROC __eglewGetNativeClientBufferANDROID;$/;"	v	typeref:typename:EGLEW_FUN_EXPORT PFNEGLGETNATIVECLIENTBUFFERANDROIDPROC
__eglewGetNextFrameIdANDROID	./GL/eglew.h	/^EGLEW_FUN_EXPORT PFNEGLGETNEXTFRAMEIDANDROIDPROC __eglewGetNextFrameIdANDROID;$/;"	v	typeref:typename:EGLEW_FUN_EXPORT PFNEGLGETNEXTFRAMEIDANDROIDPROC
__eglewGetOutputLayersEXT	./GL/eglew.h	/^EGLEW_FUN_EXPORT PFNEGLGETOUTPUTLAYERSEXTPROC __eglewGetOutputLayersEXT;$/;"	v	typeref:typename:EGLEW_FUN_EXPORT PFNEGLGETOUTPUTLAYERSEXTPROC
__eglewGetOutputPortsEXT	./GL/eglew.h	/^EGLEW_FUN_EXPORT PFNEGLGETOUTPUTPORTSEXTPROC __eglewGetOutputPortsEXT;$/;"	v	typeref:typename:EGLEW_FUN_EXPORT PFNEGLGETOUTPUTPORTSEXTPROC
__eglewGetPlatformDisplay	./GL/eglew.h	/^EGLEW_FUN_EXPORT PFNEGLGETPLATFORMDISPLAYPROC __eglewGetPlatformDisplay;$/;"	v	typeref:typename:EGLEW_FUN_EXPORT PFNEGLGETPLATFORMDISPLAYPROC
__eglewGetPlatformDisplayEXT	./GL/eglew.h	/^EGLEW_FUN_EXPORT PFNEGLGETPLATFORMDISPLAYEXTPROC __eglewGetPlatformDisplayEXT;$/;"	v	typeref:typename:EGLEW_FUN_EXPORT PFNEGLGETPLATFORMDISPLAYEXTPROC
__eglewGetStreamFileDescriptorKHR	./GL/eglew.h	/^EGLEW_FUN_EXPORT PFNEGLGETSTREAMFILEDESCRIPTORKHRPROC __eglewGetStreamFileDescriptorKHR;$/;"	v	typeref:typename:EGLEW_FUN_EXPORT PFNEGLGETSTREAMFILEDESCRIPTORKHRPROC
__eglewGetSyncAttrib	./GL/eglew.h	/^EGLEW_FUN_EXPORT PFNEGLGETSYNCATTRIBPROC __eglewGetSyncAttrib;$/;"	v	typeref:typename:EGLEW_FUN_EXPORT PFNEGLGETSYNCATTRIBPROC
__eglewGetSyncAttribKHR	./GL/eglew.h	/^EGLEW_FUN_EXPORT PFNEGLGETSYNCATTRIBKHRPROC __eglewGetSyncAttribKHR;$/;"	v	typeref:typename:EGLEW_FUN_EXPORT PFNEGLGETSYNCATTRIBKHRPROC
__eglewGetSyncAttribNV	./GL/eglew.h	/^EGLEW_FUN_EXPORT PFNEGLGETSYNCATTRIBNVPROC __eglewGetSyncAttribNV;$/;"	v	typeref:typename:EGLEW_FUN_EXPORT PFNEGLGETSYNCATTRIBNVPROC
__eglewGetSystemTimeFrequencyNV	./GL/eglew.h	/^EGLEW_FUN_EXPORT PFNEGLGETSYSTEMTIMEFREQUENCYNVPROC __eglewGetSystemTimeFrequencyNV;$/;"	v	typeref:typename:EGLEW_FUN_EXPORT PFNEGLGETSYSTEMTIMEFREQUENCYNVPROC
__eglewGetSystemTimeNV	./GL/eglew.h	/^EGLEW_FUN_EXPORT PFNEGLGETSYSTEMTIMENVPROC __eglewGetSystemTimeNV;$/;"	v	typeref:typename:EGLEW_FUN_EXPORT PFNEGLGETSYSTEMTIMENVPROC
__eglewInitialize	./GL/eglew.h	/^EGLEW_FUN_EXPORT PFNEGLINITIALIZEPROC __eglewInitialize;$/;"	v	typeref:typename:EGLEW_FUN_EXPORT PFNEGLINITIALIZEPROC
__eglewLabelObjectKHR	./GL/eglew.h	/^EGLEW_FUN_EXPORT PFNEGLLABELOBJECTKHRPROC __eglewLabelObjectKHR;$/;"	v	typeref:typename:EGLEW_FUN_EXPORT PFNEGLLABELOBJECTKHRPROC
__eglewLockSurfaceKHR	./GL/eglew.h	/^EGLEW_FUN_EXPORT PFNEGLLOCKSURFACEKHRPROC __eglewLockSurfaceKHR;$/;"	v	typeref:typename:EGLEW_FUN_EXPORT PFNEGLLOCKSURFACEKHRPROC
__eglewMakeCurrent	./GL/eglew.h	/^EGLEW_FUN_EXPORT PFNEGLMAKECURRENTPROC __eglewMakeCurrent;$/;"	v	typeref:typename:EGLEW_FUN_EXPORT PFNEGLMAKECURRENTPROC
__eglewOutputLayerAttribEXT	./GL/eglew.h	/^EGLEW_FUN_EXPORT PFNEGLOUTPUTLAYERATTRIBEXTPROC __eglewOutputLayerAttribEXT;$/;"	v	typeref:typename:EGLEW_FUN_EXPORT PFNEGLOUTPUTLAYERATTRIBEXTPROC
__eglewOutputPortAttribEXT	./GL/eglew.h	/^EGLEW_FUN_EXPORT PFNEGLOUTPUTPORTATTRIBEXTPROC __eglewOutputPortAttribEXT;$/;"	v	typeref:typename:EGLEW_FUN_EXPORT PFNEGLOUTPUTPORTATTRIBEXTPROC
__eglewPostSubBufferNV	./GL/eglew.h	/^EGLEW_FUN_EXPORT PFNEGLPOSTSUBBUFFERNVPROC __eglewPostSubBufferNV;$/;"	v	typeref:typename:EGLEW_FUN_EXPORT PFNEGLPOSTSUBBUFFERNVPROC
__eglewPresentationTimeANDROID	./GL/eglew.h	/^EGLEW_FUN_EXPORT PFNEGLPRESENTATIONTIMEANDROIDPROC __eglewPresentationTimeANDROID;$/;"	v	typeref:typename:EGLEW_FUN_EXPORT PFNEGLPRESENTATIONTIMEANDROIDPROC
__eglewQueryAPI	./GL/eglew.h	/^EGLEW_FUN_EXPORT PFNEGLQUERYAPIPROC __eglewQueryAPI;$/;"	v	typeref:typename:EGLEW_FUN_EXPORT PFNEGLQUERYAPIPROC
__eglewQueryContext	./GL/eglew.h	/^EGLEW_FUN_EXPORT PFNEGLQUERYCONTEXTPROC __eglewQueryContext;$/;"	v	typeref:typename:EGLEW_FUN_EXPORT PFNEGLQUERYCONTEXTPROC
__eglewQueryDebugKHR	./GL/eglew.h	/^EGLEW_FUN_EXPORT PFNEGLQUERYDEBUGKHRPROC __eglewQueryDebugKHR;$/;"	v	typeref:typename:EGLEW_FUN_EXPORT PFNEGLQUERYDEBUGKHRPROC
__eglewQueryDeviceAttribEXT	./GL/eglew.h	/^EGLEW_FUN_EXPORT PFNEGLQUERYDEVICEATTRIBEXTPROC __eglewQueryDeviceAttribEXT;$/;"	v	typeref:typename:EGLEW_FUN_EXPORT PFNEGLQUERYDEVICEATTRIBEXTPROC
__eglewQueryDeviceStringEXT	./GL/eglew.h	/^EGLEW_FUN_EXPORT PFNEGLQUERYDEVICESTRINGEXTPROC __eglewQueryDeviceStringEXT;$/;"	v	typeref:typename:EGLEW_FUN_EXPORT PFNEGLQUERYDEVICESTRINGEXTPROC
__eglewQueryDevicesEXT	./GL/eglew.h	/^EGLEW_FUN_EXPORT PFNEGLQUERYDEVICESEXTPROC __eglewQueryDevicesEXT;$/;"	v	typeref:typename:EGLEW_FUN_EXPORT PFNEGLQUERYDEVICESEXTPROC
__eglewQueryDisplayAttribEXT	./GL/eglew.h	/^EGLEW_FUN_EXPORT PFNEGLQUERYDISPLAYATTRIBEXTPROC __eglewQueryDisplayAttribEXT;$/;"	v	typeref:typename:EGLEW_FUN_EXPORT PFNEGLQUERYDISPLAYATTRIBEXTPROC
__eglewQueryDisplayAttribKHR	./GL/eglew.h	/^EGLEW_FUN_EXPORT PFNEGLQUERYDISPLAYATTRIBKHRPROC __eglewQueryDisplayAttribKHR;$/;"	v	typeref:typename:EGLEW_FUN_EXPORT PFNEGLQUERYDISPLAYATTRIBKHRPROC
__eglewQueryDisplayAttribNV	./GL/eglew.h	/^EGLEW_FUN_EXPORT PFNEGLQUERYDISPLAYATTRIBNVPROC __eglewQueryDisplayAttribNV;$/;"	v	typeref:typename:EGLEW_FUN_EXPORT PFNEGLQUERYDISPLAYATTRIBNVPROC
__eglewQueryDmaBufFormatsEXT	./GL/eglew.h	/^EGLEW_FUN_EXPORT PFNEGLQUERYDMABUFFORMATSEXTPROC __eglewQueryDmaBufFormatsEXT;$/;"	v	typeref:typename:EGLEW_FUN_EXPORT PFNEGLQUERYDMABUFFORMATSEXTPROC
__eglewQueryDmaBufModifiersEXT	./GL/eglew.h	/^EGLEW_FUN_EXPORT PFNEGLQUERYDMABUFMODIFIERSEXTPROC __eglewQueryDmaBufModifiersEXT;$/;"	v	typeref:typename:EGLEW_FUN_EXPORT PFNEGLQUERYDMABUFMODIFIERSEXTPROC
__eglewQueryNativeDisplayNV	./GL/eglew.h	/^EGLEW_FUN_EXPORT PFNEGLQUERYNATIVEDISPLAYNVPROC __eglewQueryNativeDisplayNV;$/;"	v	typeref:typename:EGLEW_FUN_EXPORT PFNEGLQUERYNATIVEDISPLAYNVPROC
__eglewQueryNativePixmapNV	./GL/eglew.h	/^EGLEW_FUN_EXPORT PFNEGLQUERYNATIVEPIXMAPNVPROC __eglewQueryNativePixmapNV;$/;"	v	typeref:typename:EGLEW_FUN_EXPORT PFNEGLQUERYNATIVEPIXMAPNVPROC
__eglewQueryNativeWindowNV	./GL/eglew.h	/^EGLEW_FUN_EXPORT PFNEGLQUERYNATIVEWINDOWNVPROC __eglewQueryNativeWindowNV;$/;"	v	typeref:typename:EGLEW_FUN_EXPORT PFNEGLQUERYNATIVEWINDOWNVPROC
__eglewQueryOutputLayerAttribEXT	./GL/eglew.h	/^EGLEW_FUN_EXPORT PFNEGLQUERYOUTPUTLAYERATTRIBEXTPROC __eglewQueryOutputLayerAttribEXT;$/;"	v	typeref:typename:EGLEW_FUN_EXPORT PFNEGLQUERYOUTPUTLAYERATTRIBEXTPROC
__eglewQueryOutputLayerStringEXT	./GL/eglew.h	/^EGLEW_FUN_EXPORT PFNEGLQUERYOUTPUTLAYERSTRINGEXTPROC __eglewQueryOutputLayerStringEXT;$/;"	v	typeref:typename:EGLEW_FUN_EXPORT PFNEGLQUERYOUTPUTLAYERSTRINGEXTPROC
__eglewQueryOutputPortAttribEXT	./GL/eglew.h	/^EGLEW_FUN_EXPORT PFNEGLQUERYOUTPUTPORTATTRIBEXTPROC __eglewQueryOutputPortAttribEXT;$/;"	v	typeref:typename:EGLEW_FUN_EXPORT PFNEGLQUERYOUTPUTPORTATTRIBEXTPROC
__eglewQueryOutputPortStringEXT	./GL/eglew.h	/^EGLEW_FUN_EXPORT PFNEGLQUERYOUTPUTPORTSTRINGEXTPROC __eglewQueryOutputPortStringEXT;$/;"	v	typeref:typename:EGLEW_FUN_EXPORT PFNEGLQUERYOUTPUTPORTSTRINGEXTPROC
__eglewQueryStreamAttribKHR	./GL/eglew.h	/^EGLEW_FUN_EXPORT PFNEGLQUERYSTREAMATTRIBKHRPROC __eglewQueryStreamAttribKHR;$/;"	v	typeref:typename:EGLEW_FUN_EXPORT PFNEGLQUERYSTREAMATTRIBKHRPROC
__eglewQueryStreamKHR	./GL/eglew.h	/^EGLEW_FUN_EXPORT PFNEGLQUERYSTREAMKHRPROC __eglewQueryStreamKHR;$/;"	v	typeref:typename:EGLEW_FUN_EXPORT PFNEGLQUERYSTREAMKHRPROC
__eglewQueryStreamMetadataNV	./GL/eglew.h	/^EGLEW_FUN_EXPORT PFNEGLQUERYSTREAMMETADATANVPROC __eglewQueryStreamMetadataNV;$/;"	v	typeref:typename:EGLEW_FUN_EXPORT PFNEGLQUERYSTREAMMETADATANVPROC
__eglewQueryStreamTimeKHR	./GL/eglew.h	/^EGLEW_FUN_EXPORT PFNEGLQUERYSTREAMTIMEKHRPROC __eglewQueryStreamTimeKHR;$/;"	v	typeref:typename:EGLEW_FUN_EXPORT PFNEGLQUERYSTREAMTIMEKHRPROC
__eglewQueryStreamu64KHR	./GL/eglew.h	/^EGLEW_FUN_EXPORT PFNEGLQUERYSTREAMU64KHRPROC __eglewQueryStreamu64KHR;$/;"	v	typeref:typename:EGLEW_FUN_EXPORT PFNEGLQUERYSTREAMU64KHRPROC
__eglewQueryString	./GL/eglew.h	/^EGLEW_FUN_EXPORT PFNEGLQUERYSTRINGPROC __eglewQueryString;$/;"	v	typeref:typename:EGLEW_FUN_EXPORT PFNEGLQUERYSTRINGPROC
__eglewQuerySurface	./GL/eglew.h	/^EGLEW_FUN_EXPORT PFNEGLQUERYSURFACEPROC __eglewQuerySurface;$/;"	v	typeref:typename:EGLEW_FUN_EXPORT PFNEGLQUERYSURFACEPROC
__eglewQuerySurface64KHR	./GL/eglew.h	/^EGLEW_FUN_EXPORT PFNEGLQUERYSURFACE64KHRPROC __eglewQuerySurface64KHR;$/;"	v	typeref:typename:EGLEW_FUN_EXPORT PFNEGLQUERYSURFACE64KHRPROC
__eglewQuerySurfacePointerANGLE	./GL/eglew.h	/^EGLEW_FUN_EXPORT PFNEGLQUERYSURFACEPOINTERANGLEPROC __eglewQuerySurfacePointerANGLE;$/;"	v	typeref:typename:EGLEW_FUN_EXPORT PFNEGLQUERYSURFACEPOINTERANGLEPROC
__eglewQueryWaylandBufferWL	./GL/eglew.h	/^EGLEW_FUN_EXPORT PFNEGLQUERYWAYLANDBUFFERWLPROC __eglewQueryWaylandBufferWL;$/;"	v	typeref:typename:EGLEW_FUN_EXPORT PFNEGLQUERYWAYLANDBUFFERWLPROC
__eglewReleaseTexImage	./GL/eglew.h	/^EGLEW_FUN_EXPORT PFNEGLRELEASETEXIMAGEPROC __eglewReleaseTexImage;$/;"	v	typeref:typename:EGLEW_FUN_EXPORT PFNEGLRELEASETEXIMAGEPROC
__eglewReleaseThread	./GL/eglew.h	/^EGLEW_FUN_EXPORT PFNEGLRELEASETHREADPROC __eglewReleaseThread;$/;"	v	typeref:typename:EGLEW_FUN_EXPORT PFNEGLRELEASETHREADPROC
__eglewResetStreamNV	./GL/eglew.h	/^EGLEW_FUN_EXPORT PFNEGLRESETSTREAMNVPROC __eglewResetStreamNV;$/;"	v	typeref:typename:EGLEW_FUN_EXPORT PFNEGLRESETSTREAMNVPROC
__eglewSetBlobCacheFuncsANDROID	./GL/eglew.h	/^EGLEW_FUN_EXPORT PFNEGLSETBLOBCACHEFUNCSANDROIDPROC __eglewSetBlobCacheFuncsANDROID;$/;"	v	typeref:typename:EGLEW_FUN_EXPORT PFNEGLSETBLOBCACHEFUNCSANDROIDPROC
__eglewSetDamageRegionKHR	./GL/eglew.h	/^EGLEW_FUN_EXPORT PFNEGLSETDAMAGEREGIONKHRPROC __eglewSetDamageRegionKHR;$/;"	v	typeref:typename:EGLEW_FUN_EXPORT PFNEGLSETDAMAGEREGIONKHRPROC
__eglewSetStreamAttribKHR	./GL/eglew.h	/^EGLEW_FUN_EXPORT PFNEGLSETSTREAMATTRIBKHRPROC __eglewSetStreamAttribKHR;$/;"	v	typeref:typename:EGLEW_FUN_EXPORT PFNEGLSETSTREAMATTRIBKHRPROC
__eglewSetStreamMetadataNV	./GL/eglew.h	/^EGLEW_FUN_EXPORT PFNEGLSETSTREAMMETADATANVPROC __eglewSetStreamMetadataNV;$/;"	v	typeref:typename:EGLEW_FUN_EXPORT PFNEGLSETSTREAMMETADATANVPROC
__eglewSignalSyncKHR	./GL/eglew.h	/^EGLEW_FUN_EXPORT PFNEGLSIGNALSYNCKHRPROC __eglewSignalSyncKHR;$/;"	v	typeref:typename:EGLEW_FUN_EXPORT PFNEGLSIGNALSYNCKHRPROC
__eglewSignalSyncNV	./GL/eglew.h	/^EGLEW_FUN_EXPORT PFNEGLSIGNALSYNCNVPROC __eglewSignalSyncNV;$/;"	v	typeref:typename:EGLEW_FUN_EXPORT PFNEGLSIGNALSYNCNVPROC
__eglewStreamAttribKHR	./GL/eglew.h	/^EGLEW_FUN_EXPORT PFNEGLSTREAMATTRIBKHRPROC __eglewStreamAttribKHR;$/;"	v	typeref:typename:EGLEW_FUN_EXPORT PFNEGLSTREAMATTRIBKHRPROC
__eglewStreamConsumerAcquireAttribKHR	./GL/eglew.h	/^EGLEW_FUN_EXPORT PFNEGLSTREAMCONSUMERACQUIREATTRIBKHRPROC __eglewStreamConsumerAcquireAttribKHR;$/;"	v	typeref:typename:EGLEW_FUN_EXPORT PFNEGLSTREAMCONSUMERACQUIREATTRIBKHRPROC
__eglewStreamConsumerAcquireKHR	./GL/eglew.h	/^EGLEW_FUN_EXPORT PFNEGLSTREAMCONSUMERACQUIREKHRPROC __eglewStreamConsumerAcquireKHR;$/;"	v	typeref:typename:EGLEW_FUN_EXPORT PFNEGLSTREAMCONSUMERACQUIREKHRPROC
__eglewStreamConsumerGLTextureExternalAttribsNV	./GL/eglew.h	/^EGLEW_FUN_EXPORT PFNEGLSTREAMCONSUMERGLTEXTUREEXTERNALATTRIBSNVPROC __eglewStreamConsumerGLTextu/;"	v	typeref:typename:EGLEW_FUN_EXPORT PFNEGLSTREAMCONSUMERGLTEXTUREEXTERNALATTRIBSNVPROC
__eglewStreamConsumerGLTextureExternalKHR	./GL/eglew.h	/^EGLEW_FUN_EXPORT PFNEGLSTREAMCONSUMERGLTEXTUREEXTERNALKHRPROC __eglewStreamConsumerGLTextureExte/;"	v	typeref:typename:EGLEW_FUN_EXPORT PFNEGLSTREAMCONSUMERGLTEXTUREEXTERNALKHRPROC
__eglewStreamConsumerOutputEXT	./GL/eglew.h	/^EGLEW_FUN_EXPORT PFNEGLSTREAMCONSUMEROUTPUTEXTPROC __eglewStreamConsumerOutputEXT;$/;"	v	typeref:typename:EGLEW_FUN_EXPORT PFNEGLSTREAMCONSUMEROUTPUTEXTPROC
__eglewStreamConsumerReleaseAttribKHR	./GL/eglew.h	/^EGLEW_FUN_EXPORT PFNEGLSTREAMCONSUMERRELEASEATTRIBKHRPROC __eglewStreamConsumerReleaseAttribKHR;$/;"	v	typeref:typename:EGLEW_FUN_EXPORT PFNEGLSTREAMCONSUMERRELEASEATTRIBKHRPROC
__eglewStreamConsumerReleaseKHR	./GL/eglew.h	/^EGLEW_FUN_EXPORT PFNEGLSTREAMCONSUMERRELEASEKHRPROC __eglewStreamConsumerReleaseKHR;$/;"	v	typeref:typename:EGLEW_FUN_EXPORT PFNEGLSTREAMCONSUMERRELEASEKHRPROC
__eglewStreamFlushNV	./GL/eglew.h	/^EGLEW_FUN_EXPORT PFNEGLSTREAMFLUSHNVPROC __eglewStreamFlushNV;$/;"	v	typeref:typename:EGLEW_FUN_EXPORT PFNEGLSTREAMFLUSHNVPROC
__eglewSurfaceAttrib	./GL/eglew.h	/^EGLEW_FUN_EXPORT PFNEGLSURFACEATTRIBPROC __eglewSurfaceAttrib;$/;"	v	typeref:typename:EGLEW_FUN_EXPORT PFNEGLSURFACEATTRIBPROC
__eglewSwapBuffers	./GL/eglew.h	/^EGLEW_FUN_EXPORT PFNEGLSWAPBUFFERSPROC __eglewSwapBuffers;$/;"	v	typeref:typename:EGLEW_FUN_EXPORT PFNEGLSWAPBUFFERSPROC
__eglewSwapBuffersRegion2NOK	./GL/eglew.h	/^EGLEW_FUN_EXPORT PFNEGLSWAPBUFFERSREGION2NOKPROC __eglewSwapBuffersRegion2NOK;$/;"	v	typeref:typename:EGLEW_FUN_EXPORT PFNEGLSWAPBUFFERSREGION2NOKPROC
__eglewSwapBuffersRegionNOK	./GL/eglew.h	/^EGLEW_FUN_EXPORT PFNEGLSWAPBUFFERSREGIONNOKPROC __eglewSwapBuffersRegionNOK;$/;"	v	typeref:typename:EGLEW_FUN_EXPORT PFNEGLSWAPBUFFERSREGIONNOKPROC
__eglewSwapBuffersWithDamageEXT	./GL/eglew.h	/^EGLEW_FUN_EXPORT PFNEGLSWAPBUFFERSWITHDAMAGEEXTPROC __eglewSwapBuffersWithDamageEXT;$/;"	v	typeref:typename:EGLEW_FUN_EXPORT PFNEGLSWAPBUFFERSWITHDAMAGEEXTPROC
__eglewSwapBuffersWithDamageKHR	./GL/eglew.h	/^EGLEW_FUN_EXPORT PFNEGLSWAPBUFFERSWITHDAMAGEKHRPROC __eglewSwapBuffersWithDamageKHR;$/;"	v	typeref:typename:EGLEW_FUN_EXPORT PFNEGLSWAPBUFFERSWITHDAMAGEKHRPROC
__eglewSwapInterval	./GL/eglew.h	/^EGLEW_FUN_EXPORT PFNEGLSWAPINTERVALPROC __eglewSwapInterval;$/;"	v	typeref:typename:EGLEW_FUN_EXPORT PFNEGLSWAPINTERVALPROC
__eglewTerminate	./GL/eglew.h	/^EGLEW_FUN_EXPORT PFNEGLTERMINATEPROC __eglewTerminate;$/;"	v	typeref:typename:EGLEW_FUN_EXPORT PFNEGLTERMINATEPROC
__eglewUnbindWaylandDisplayWL	./GL/eglew.h	/^EGLEW_FUN_EXPORT PFNEGLUNBINDWAYLANDDISPLAYWLPROC __eglewUnbindWaylandDisplayWL;$/;"	v	typeref:typename:EGLEW_FUN_EXPORT PFNEGLUNBINDWAYLANDDISPLAYWLPROC
__eglewUnlockSurfaceKHR	./GL/eglew.h	/^EGLEW_FUN_EXPORT PFNEGLUNLOCKSURFACEKHRPROC __eglewUnlockSurfaceKHR;$/;"	v	typeref:typename:EGLEW_FUN_EXPORT PFNEGLUNLOCKSURFACEKHRPROC
__eglewUnsignalSyncEXT	./GL/eglew.h	/^EGLEW_FUN_EXPORT PFNEGLUNSIGNALSYNCEXTPROC __eglewUnsignalSyncEXT;$/;"	v	typeref:typename:EGLEW_FUN_EXPORT PFNEGLUNSIGNALSYNCEXTPROC
__eglewWaitClient	./GL/eglew.h	/^EGLEW_FUN_EXPORT PFNEGLWAITCLIENTPROC __eglewWaitClient;$/;"	v	typeref:typename:EGLEW_FUN_EXPORT PFNEGLWAITCLIENTPROC
__eglewWaitGL	./GL/eglew.h	/^EGLEW_FUN_EXPORT PFNEGLWAITGLPROC __eglewWaitGL;$/;"	v	typeref:typename:EGLEW_FUN_EXPORT PFNEGLWAITGLPROC
__eglewWaitNative	./GL/eglew.h	/^EGLEW_FUN_EXPORT PFNEGLWAITNATIVEPROC __eglewWaitNative;$/;"	v	typeref:typename:EGLEW_FUN_EXPORT PFNEGLWAITNATIVEPROC
__eglewWaitSync	./GL/eglew.h	/^EGLEW_FUN_EXPORT PFNEGLWAITSYNCPROC __eglewWaitSync;$/;"	v	typeref:typename:EGLEW_FUN_EXPORT PFNEGLWAITSYNCPROC
__eglewWaitSyncKHR	./GL/eglew.h	/^EGLEW_FUN_EXPORT PFNEGLWAITSYNCKHRPROC __eglewWaitSyncKHR;$/;"	v	typeref:typename:EGLEW_FUN_EXPORT PFNEGLWAITSYNCKHRPROC
__eglew_h__	./GL/eglew.h	/^#define __eglew_h__$/;"	d
__eglext_h_	./GL/eglew.h	/^#define __eglext_h_$/;"	d
__gl2_h_	./GL/glew.h	/^#define __gl2_h_$/;"	d
__gl_ATI_h_	./GL/glew.h	/^#define __gl_ATI_h_$/;"	d
__gl_glext_h_	./GL/glew.h	/^#define __gl_glext_h_$/;"	d
__gl_h_	./GL/glew.h	/^#define __gl_h_$/;"	d
__glewAcquireKeyedMutexWin32EXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLACQUIREKEYEDMUTEXWIN32EXTPROC __glewAcquireKeyedMutexWin32EXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLACQUIREKEYEDMUTEXWIN32EXTPROC
__glewActiveProgramEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLACTIVEPROGRAMEXTPROC __glewActiveProgramEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLACTIVEPROGRAMEXTPROC
__glewActiveShaderProgram	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLACTIVESHADERPROGRAMPROC __glewActiveShaderProgram;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLACTIVESHADERPROGRAMPROC
__glewActiveStencilFaceEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLACTIVESTENCILFACEEXTPROC __glewActiveStencilFaceEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLACTIVESTENCILFACEEXTPROC
__glewActiveTexture	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLACTIVETEXTUREPROC __glewActiveTexture;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLACTIVETEXTUREPROC
__glewActiveTextureARB	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLACTIVETEXTUREARBPROC __glewActiveTextureARB;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLACTIVETEXTUREARBPROC
__glewActiveVaryingNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLACTIVEVARYINGNVPROC __glewActiveVaryingNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLACTIVEVARYINGNVPROC
__glewAddSwapHintRectWIN	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLADDSWAPHINTRECTWINPROC __glewAddSwapHintRectWIN;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLADDSWAPHINTRECTWINPROC
__glewAddressSpace	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLADDRESSSPACEPROC __glewAddressSpace;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLADDRESSSPACEPROC
__glewAllocMPEGPredictorsSGIX	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLALLOCMPEGPREDICTORSSGIXPROC __glewAllocMPEGPredictorsSGIX;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLALLOCMPEGPREDICTORSSGIXPROC
__glewAlphaFragmentOp1ATI	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLALPHAFRAGMENTOP1ATIPROC __glewAlphaFragmentOp1ATI;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLALPHAFRAGMENTOP1ATIPROC
__glewAlphaFragmentOp2ATI	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLALPHAFRAGMENTOP2ATIPROC __glewAlphaFragmentOp2ATI;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLALPHAFRAGMENTOP2ATIPROC
__glewAlphaFragmentOp3ATI	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLALPHAFRAGMENTOP3ATIPROC __glewAlphaFragmentOp3ATI;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLALPHAFRAGMENTOP3ATIPROC
__glewAlphaFuncQCOM	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLALPHAFUNCQCOMPROC __glewAlphaFuncQCOM;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLALPHAFUNCQCOMPROC
__glewAlphaFuncx	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLALPHAFUNCXPROC __glewAlphaFuncx;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLALPHAFUNCXPROC
__glewAlphaToCoverageDitherControlNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLALPHATOCOVERAGEDITHERCONTROLNVPROC __glewAlphaToCoverageDitherControlNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLALPHATOCOVERAGEDITHERCONTROLNVPROC
__glewApplyTextureEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLAPPLYTEXTUREEXTPROC __glewApplyTextureEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLAPPLYTEXTUREEXTPROC
__glewAreProgramsResidentNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLAREPROGRAMSRESIDENTNVPROC __glewAreProgramsResidentNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLAREPROGRAMSRESIDENTNVPROC
__glewAreTexturesResidentEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLARETEXTURESRESIDENTEXTPROC __glewAreTexturesResidentEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLARETEXTURESRESIDENTEXTPROC
__glewAreVertexArraysResidentSGIX	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLAREVERTEXARRAYSRESIDENTSGIXPROC __glewAreVertexArraysResidentSGIX;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLAREVERTEXARRAYSRESIDENTSGIXPROC
__glewArrayElementEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLARRAYELEMENTEXTPROC __glewArrayElementEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLARRAYELEMENTEXTPROC
__glewArrayObjectATI	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLARRAYOBJECTATIPROC __glewArrayObjectATI;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLARRAYOBJECTATIPROC
__glewAsyncCopyBufferSubDataNVX	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLASYNCCOPYBUFFERSUBDATANVXPROC __glewAsyncCopyBufferSubDataNVX;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLASYNCCOPYBUFFERSUBDATANVXPROC
__glewAsyncCopyImageSubDataNVX	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLASYNCCOPYIMAGESUBDATANVXPROC __glewAsyncCopyImageSubDataNVX;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLASYNCCOPYIMAGESUBDATANVXPROC
__glewAsyncMarkerSGIX	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLASYNCMARKERSGIXPROC __glewAsyncMarkerSGIX;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLASYNCMARKERSGIXPROC
__glewAttachObjectARB	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLATTACHOBJECTARBPROC __glewAttachObjectARB;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLATTACHOBJECTARBPROC
__glewAttachShader	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLATTACHSHADERPROC __glewAttachShader;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLATTACHSHADERPROC
__glewBeginConditionalRender	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLBEGINCONDITIONALRENDERPROC __glewBeginConditionalRender;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLBEGINCONDITIONALRENDERPROC
__glewBeginConditionalRenderNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLBEGINCONDITIONALRENDERNVPROC __glewBeginConditionalRenderNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLBEGINCONDITIONALRENDERNVPROC
__glewBeginConditionalRenderNVX	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLBEGINCONDITIONALRENDERNVXPROC __glewBeginConditionalRenderNVX;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLBEGINCONDITIONALRENDERNVXPROC
__glewBeginFragmentShaderATI	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLBEGINFRAGMENTSHADERATIPROC __glewBeginFragmentShaderATI;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLBEGINFRAGMENTSHADERATIPROC
__glewBeginOcclusionQueryNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLBEGINOCCLUSIONQUERYNVPROC __glewBeginOcclusionQueryNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLBEGINOCCLUSIONQUERYNVPROC
__glewBeginPerfMonitorAMD	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLBEGINPERFMONITORAMDPROC __glewBeginPerfMonitorAMD;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLBEGINPERFMONITORAMDPROC
__glewBeginPerfQueryINTEL	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLBEGINPERFQUERYINTELPROC __glewBeginPerfQueryINTEL;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLBEGINPERFQUERYINTELPROC
__glewBeginQuery	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLBEGINQUERYPROC __glewBeginQuery;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLBEGINQUERYPROC
__glewBeginQueryANGLE	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLBEGINQUERYANGLEPROC __glewBeginQueryANGLE;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLBEGINQUERYANGLEPROC
__glewBeginQueryARB	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLBEGINQUERYARBPROC __glewBeginQueryARB;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLBEGINQUERYARBPROC
__glewBeginQueryEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLBEGINQUERYEXTPROC __glewBeginQueryEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLBEGINQUERYEXTPROC
__glewBeginQueryIndexed	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLBEGINQUERYINDEXEDPROC __glewBeginQueryIndexed;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLBEGINQUERYINDEXEDPROC
__glewBeginSceneEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLBEGINSCENEEXTPROC __glewBeginSceneEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLBEGINSCENEEXTPROC
__glewBeginTransformFeedback	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLBEGINTRANSFORMFEEDBACKPROC __glewBeginTransformFeedback;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLBEGINTRANSFORMFEEDBACKPROC
__glewBeginTransformFeedbackEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLBEGINTRANSFORMFEEDBACKEXTPROC __glewBeginTransformFeedbackEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLBEGINTRANSFORMFEEDBACKEXTPROC
__glewBeginTransformFeedbackNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLBEGINTRANSFORMFEEDBACKNVPROC __glewBeginTransformFeedbackNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLBEGINTRANSFORMFEEDBACKNVPROC
__glewBeginVertexShaderEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLBEGINVERTEXSHADEREXTPROC __glewBeginVertexShaderEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLBEGINVERTEXSHADEREXTPROC
__glewBeginVideoCaptureNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLBEGINVIDEOCAPTURENVPROC __glewBeginVideoCaptureNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLBEGINVIDEOCAPTURENVPROC
__glewBindArraySetEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLBINDARRAYSETEXTPROC __glewBindArraySetEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLBINDARRAYSETEXTPROC
__glewBindAttribLocation	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLBINDATTRIBLOCATIONPROC __glewBindAttribLocation;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLBINDATTRIBLOCATIONPROC
__glewBindAttribLocationARB	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLBINDATTRIBLOCATIONARBPROC __glewBindAttribLocationARB;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLBINDATTRIBLOCATIONARBPROC
__glewBindBuffer	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLBINDBUFFERPROC __glewBindBuffer;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLBINDBUFFERPROC
__glewBindBufferARB	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLBINDBUFFERARBPROC __glewBindBufferARB;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLBINDBUFFERARBPROC
__glewBindBufferBase	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLBINDBUFFERBASEPROC __glewBindBufferBase;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLBINDBUFFERBASEPROC
__glewBindBufferBaseEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLBINDBUFFERBASEEXTPROC __glewBindBufferBaseEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLBINDBUFFERBASEEXTPROC
__glewBindBufferBaseNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLBINDBUFFERBASENVPROC __glewBindBufferBaseNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLBINDBUFFERBASENVPROC
__glewBindBufferOffsetEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLBINDBUFFEROFFSETEXTPROC __glewBindBufferOffsetEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLBINDBUFFEROFFSETEXTPROC
__glewBindBufferOffsetNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLBINDBUFFEROFFSETNVPROC __glewBindBufferOffsetNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLBINDBUFFEROFFSETNVPROC
__glewBindBufferRange	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLBINDBUFFERRANGEPROC __glewBindBufferRange;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLBINDBUFFERRANGEPROC
__glewBindBufferRangeEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLBINDBUFFERRANGEEXTPROC __glewBindBufferRangeEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLBINDBUFFERRANGEEXTPROC
__glewBindBufferRangeNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLBINDBUFFERRANGENVPROC __glewBindBufferRangeNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLBINDBUFFERRANGENVPROC
__glewBindBuffersBase	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLBINDBUFFERSBASEPROC __glewBindBuffersBase;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLBINDBUFFERSBASEPROC
__glewBindBuffersRange	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLBINDBUFFERSRANGEPROC __glewBindBuffersRange;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLBINDBUFFERSRANGEPROC
__glewBindFragDataLocation	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLBINDFRAGDATALOCATIONPROC __glewBindFragDataLocation;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLBINDFRAGDATALOCATIONPROC
__glewBindFragDataLocationEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLBINDFRAGDATALOCATIONEXTPROC __glewBindFragDataLocationEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLBINDFRAGDATALOCATIONEXTPROC
__glewBindFragDataLocationIndexed	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLBINDFRAGDATALOCATIONINDEXEDPROC __glewBindFragDataLocationIndexed;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLBINDFRAGDATALOCATIONINDEXEDPROC
__glewBindFragDataLocationIndexedEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLBINDFRAGDATALOCATIONINDEXEDEXTPROC __glewBindFragDataLocationIndexedEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLBINDFRAGDATALOCATIONINDEXEDEXTPROC
__glewBindFragmentShaderATI	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLBINDFRAGMENTSHADERATIPROC __glewBindFragmentShaderATI;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLBINDFRAGMENTSHADERATIPROC
__glewBindFramebuffer	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLBINDFRAMEBUFFERPROC __glewBindFramebuffer;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLBINDFRAMEBUFFERPROC
__glewBindFramebufferEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLBINDFRAMEBUFFEREXTPROC __glewBindFramebufferEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLBINDFRAMEBUFFEREXTPROC
__glewBindFramebufferOES	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLBINDFRAMEBUFFEROESPROC __glewBindFramebufferOES;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLBINDFRAMEBUFFEROESPROC
__glewBindImageTexture	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLBINDIMAGETEXTUREPROC __glewBindImageTexture;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLBINDIMAGETEXTUREPROC
__glewBindImageTextureEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLBINDIMAGETEXTUREEXTPROC __glewBindImageTextureEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLBINDIMAGETEXTUREEXTPROC
__glewBindImageTextures	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLBINDIMAGETEXTURESPROC __glewBindImageTextures;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLBINDIMAGETEXTURESPROC
__glewBindLightParameterEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLBINDLIGHTPARAMETEREXTPROC __glewBindLightParameterEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLBINDLIGHTPARAMETEREXTPROC
__glewBindMaterialParameterEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLBINDMATERIALPARAMETEREXTPROC __glewBindMaterialParameterEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLBINDMATERIALPARAMETEREXTPROC
__glewBindMultiTextureEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLBINDMULTITEXTUREEXTPROC __glewBindMultiTextureEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLBINDMULTITEXTUREEXTPROC
__glewBindParameterEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLBINDPARAMETEREXTPROC __glewBindParameterEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLBINDPARAMETEREXTPROC
__glewBindProgramARB	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLBINDPROGRAMARBPROC __glewBindProgramARB;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLBINDPROGRAMARBPROC
__glewBindProgramNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLBINDPROGRAMNVPROC __glewBindProgramNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLBINDPROGRAMNVPROC
__glewBindProgramPipeline	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLBINDPROGRAMPIPELINEPROC __glewBindProgramPipeline;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLBINDPROGRAMPIPELINEPROC
__glewBindRenderbuffer	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLBINDRENDERBUFFERPROC __glewBindRenderbuffer;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLBINDRENDERBUFFERPROC
__glewBindRenderbufferEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLBINDRENDERBUFFEREXTPROC __glewBindRenderbufferEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLBINDRENDERBUFFEREXTPROC
__glewBindRenderbufferOES	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLBINDRENDERBUFFEROESPROC __glewBindRenderbufferOES;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLBINDRENDERBUFFEROESPROC
__glewBindSampler	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLBINDSAMPLERPROC __glewBindSampler;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLBINDSAMPLERPROC
__glewBindSamplers	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLBINDSAMPLERSPROC __glewBindSamplers;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLBINDSAMPLERSPROC
__glewBindShadingRateImageNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLBINDSHADINGRATEIMAGENVPROC __glewBindShadingRateImageNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLBINDSHADINGRATEIMAGENVPROC
__glewBindTexGenParameterEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLBINDTEXGENPARAMETEREXTPROC __glewBindTexGenParameterEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLBINDTEXGENPARAMETEREXTPROC
__glewBindTextureEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLBINDTEXTUREEXTPROC __glewBindTextureEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLBINDTEXTUREEXTPROC
__glewBindTextureUnit	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLBINDTEXTUREUNITPROC __glewBindTextureUnit;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLBINDTEXTUREUNITPROC
__glewBindTextureUnitParameterEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLBINDTEXTUREUNITPARAMETEREXTPROC __glewBindTextureUnitParameterEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLBINDTEXTUREUNITPARAMETEREXTPROC
__glewBindTextures	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLBINDTEXTURESPROC __glewBindTextures;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLBINDTEXTURESPROC
__glewBindTransformFeedback	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLBINDTRANSFORMFEEDBACKPROC __glewBindTransformFeedback;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLBINDTRANSFORMFEEDBACKPROC
__glewBindTransformFeedbackNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLBINDTRANSFORMFEEDBACKNVPROC __glewBindTransformFeedbackNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLBINDTRANSFORMFEEDBACKNVPROC
__glewBindVertexArray	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLBINDVERTEXARRAYPROC __glewBindVertexArray;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLBINDVERTEXARRAYPROC
__glewBindVertexArrayAPPLE	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLBINDVERTEXARRAYAPPLEPROC __glewBindVertexArrayAPPLE;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLBINDVERTEXARRAYAPPLEPROC
__glewBindVertexArrayOES	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLBINDVERTEXARRAYOESPROC __glewBindVertexArrayOES;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLBINDVERTEXARRAYOESPROC
__glewBindVertexArraySGIX	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLBINDVERTEXARRAYSGIXPROC __glewBindVertexArraySGIX;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLBINDVERTEXARRAYSGIXPROC
__glewBindVertexBuffer	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLBINDVERTEXBUFFERPROC __glewBindVertexBuffer;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLBINDVERTEXBUFFERPROC
__glewBindVertexBuffers	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLBINDVERTEXBUFFERSPROC __glewBindVertexBuffers;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLBINDVERTEXBUFFERSPROC
__glewBindVertexShaderEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLBINDVERTEXSHADEREXTPROC __glewBindVertexShaderEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLBINDVERTEXSHADEREXTPROC
__glewBindVideoCaptureStreamBufferNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLBINDVIDEOCAPTURESTREAMBUFFERNVPROC __glewBindVideoCaptureStreamBufferNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLBINDVIDEOCAPTURESTREAMBUFFERNVPROC
__glewBindVideoCaptureStreamTextureNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLBINDVIDEOCAPTURESTREAMTEXTURENVPROC __glewBindVideoCaptureStreamTextureNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLBINDVIDEOCAPTURESTREAMTEXTURENVPROC
__glewBinormalPointerEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLBINORMALPOINTEREXTPROC __glewBinormalPointerEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLBINORMALPOINTEREXTPROC
__glewBlendBarrierKHR	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLBLENDBARRIERKHRPROC __glewBlendBarrierKHR;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLBLENDBARRIERKHRPROC
__glewBlendBarrierNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLBLENDBARRIERNVPROC __glewBlendBarrierNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLBLENDBARRIERNVPROC
__glewBlendColor	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLBLENDCOLORPROC __glewBlendColor;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLBLENDCOLORPROC
__glewBlendColorEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLBLENDCOLOREXTPROC __glewBlendColorEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLBLENDCOLOREXTPROC
__glewBlendEquation	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLBLENDEQUATIONPROC __glewBlendEquation;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLBLENDEQUATIONPROC
__glewBlendEquationEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLBLENDEQUATIONEXTPROC __glewBlendEquationEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLBLENDEQUATIONEXTPROC
__glewBlendEquationIndexedAMD	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLBLENDEQUATIONINDEXEDAMDPROC __glewBlendEquationIndexedAMD;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLBLENDEQUATIONINDEXEDAMDPROC
__glewBlendEquationOES	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLBLENDEQUATIONOESPROC __glewBlendEquationOES;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLBLENDEQUATIONOESPROC
__glewBlendEquationSeparate	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLBLENDEQUATIONSEPARATEPROC __glewBlendEquationSeparate;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLBLENDEQUATIONSEPARATEPROC
__glewBlendEquationSeparateEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLBLENDEQUATIONSEPARATEEXTPROC __glewBlendEquationSeparateEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLBLENDEQUATIONSEPARATEEXTPROC
__glewBlendEquationSeparateIndexedAMD	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLBLENDEQUATIONSEPARATEINDEXEDAMDPROC __glewBlendEquationSeparateIndexedAMD;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLBLENDEQUATIONSEPARATEINDEXEDAMDPROC
__glewBlendEquationSeparateOES	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLBLENDEQUATIONSEPARATEOESPROC __glewBlendEquationSeparateOES;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLBLENDEQUATIONSEPARATEOESPROC
__glewBlendEquationSeparatei	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLBLENDEQUATIONSEPARATEIPROC __glewBlendEquationSeparatei;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLBLENDEQUATIONSEPARATEIPROC
__glewBlendEquationSeparateiARB	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLBLENDEQUATIONSEPARATEIARBPROC __glewBlendEquationSeparateiARB;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLBLENDEQUATIONSEPARATEIARBPROC
__glewBlendEquationSeparateiEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLBLENDEQUATIONSEPARATEIEXTPROC __glewBlendEquationSeparateiEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLBLENDEQUATIONSEPARATEIEXTPROC
__glewBlendEquationSeparateiOES	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLBLENDEQUATIONSEPARATEIOESPROC __glewBlendEquationSeparateiOES;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLBLENDEQUATIONSEPARATEIOESPROC
__glewBlendEquationi	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLBLENDEQUATIONIPROC __glewBlendEquationi;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLBLENDEQUATIONIPROC
__glewBlendEquationiARB	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLBLENDEQUATIONIARBPROC __glewBlendEquationiARB;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLBLENDEQUATIONIARBPROC
__glewBlendEquationiEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLBLENDEQUATIONIEXTPROC __glewBlendEquationiEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLBLENDEQUATIONIEXTPROC
__glewBlendEquationiOES	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLBLENDEQUATIONIOESPROC __glewBlendEquationiOES;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLBLENDEQUATIONIOESPROC
__glewBlendFuncIndexedAMD	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLBLENDFUNCINDEXEDAMDPROC __glewBlendFuncIndexedAMD;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLBLENDFUNCINDEXEDAMDPROC
__glewBlendFuncSeparate	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLBLENDFUNCSEPARATEPROC __glewBlendFuncSeparate;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLBLENDFUNCSEPARATEPROC
__glewBlendFuncSeparateEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLBLENDFUNCSEPARATEEXTPROC __glewBlendFuncSeparateEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLBLENDFUNCSEPARATEEXTPROC
__glewBlendFuncSeparateIndexedAMD	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLBLENDFUNCSEPARATEINDEXEDAMDPROC __glewBlendFuncSeparateIndexedAMD;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLBLENDFUNCSEPARATEINDEXEDAMDPROC
__glewBlendFuncSeparateOES	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLBLENDFUNCSEPARATEOESPROC __glewBlendFuncSeparateOES;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLBLENDFUNCSEPARATEOESPROC
__glewBlendFuncSeparatei	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLBLENDFUNCSEPARATEIPROC __glewBlendFuncSeparatei;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLBLENDFUNCSEPARATEIPROC
__glewBlendFuncSeparateiARB	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLBLENDFUNCSEPARATEIARBPROC __glewBlendFuncSeparateiARB;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLBLENDFUNCSEPARATEIARBPROC
__glewBlendFuncSeparateiEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLBLENDFUNCSEPARATEIEXTPROC __glewBlendFuncSeparateiEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLBLENDFUNCSEPARATEIEXTPROC
__glewBlendFuncSeparateiOES	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLBLENDFUNCSEPARATEIOESPROC __glewBlendFuncSeparateiOES;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLBLENDFUNCSEPARATEIOESPROC
__glewBlendFunci	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLBLENDFUNCIPROC __glewBlendFunci;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLBLENDFUNCIPROC
__glewBlendFunciARB	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLBLENDFUNCIARBPROC __glewBlendFunciARB;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLBLENDFUNCIARBPROC
__glewBlendFunciEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLBLENDFUNCIEXTPROC __glewBlendFunciEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLBLENDFUNCIEXTPROC
__glewBlendFunciOES	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLBLENDFUNCIOESPROC __glewBlendFunciOES;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLBLENDFUNCIOESPROC
__glewBlendParameteriNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLBLENDPARAMETERINVPROC __glewBlendParameteriNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLBLENDPARAMETERINVPROC
__glewBlitFramebuffer	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLBLITFRAMEBUFFERPROC __glewBlitFramebuffer;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLBLITFRAMEBUFFERPROC
__glewBlitFramebufferANGLE	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLBLITFRAMEBUFFERANGLEPROC __glewBlitFramebufferANGLE;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLBLITFRAMEBUFFERANGLEPROC
__glewBlitFramebufferEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLBLITFRAMEBUFFEREXTPROC __glewBlitFramebufferEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLBLITFRAMEBUFFEREXTPROC
__glewBlitFramebufferNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLBLITFRAMEBUFFERNVPROC __glewBlitFramebufferNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLBLITFRAMEBUFFERNVPROC
__glewBlitNamedFramebuffer	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLBLITNAMEDFRAMEBUFFERPROC __glewBlitNamedFramebuffer;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLBLITNAMEDFRAMEBUFFERPROC
__glewBufferAddressRangeNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLBUFFERADDRESSRANGENVPROC __glewBufferAddressRangeNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLBUFFERADDRESSRANGENVPROC
__glewBufferAttachMemoryNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLBUFFERATTACHMEMORYNVPROC __glewBufferAttachMemoryNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLBUFFERATTACHMEMORYNVPROC
__glewBufferData	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLBUFFERDATAPROC __glewBufferData;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLBUFFERDATAPROC
__glewBufferDataARB	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLBUFFERDATAARBPROC __glewBufferDataARB;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLBUFFERDATAARBPROC
__glewBufferPageCommitmentARB	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLBUFFERPAGECOMMITMENTARBPROC __glewBufferPageCommitmentARB;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLBUFFERPAGECOMMITMENTARBPROC
__glewBufferParameteriAPPLE	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLBUFFERPARAMETERIAPPLEPROC __glewBufferParameteriAPPLE;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLBUFFERPARAMETERIAPPLEPROC
__glewBufferRegionEnabled	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLBUFFERREGIONENABLEDPROC __glewBufferRegionEnabled;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLBUFFERREGIONENABLEDPROC
__glewBufferStorage	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLBUFFERSTORAGEPROC __glewBufferStorage;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLBUFFERSTORAGEPROC
__glewBufferStorageEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLBUFFERSTORAGEEXTPROC __glewBufferStorageEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLBUFFERSTORAGEEXTPROC
__glewBufferStorageExternalEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLBUFFERSTORAGEEXTERNALEXTPROC __glewBufferStorageExternalEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLBUFFERSTORAGEEXTERNALEXTPROC
__glewBufferStorageMemEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLBUFFERSTORAGEMEMEXTPROC __glewBufferStorageMemEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLBUFFERSTORAGEMEMEXTPROC
__glewBufferSubData	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLBUFFERSUBDATAPROC __glewBufferSubData;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLBUFFERSUBDATAPROC
__glewBufferSubDataARB	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLBUFFERSUBDATAARBPROC __glewBufferSubDataARB;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLBUFFERSUBDATAARBPROC
__glewCallCommandListNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLCALLCOMMANDLISTNVPROC __glewCallCommandListNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLCALLCOMMANDLISTNVPROC
__glewCheckFramebufferStatus	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLCHECKFRAMEBUFFERSTATUSPROC __glewCheckFramebufferStatus;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLCHECKFRAMEBUFFERSTATUSPROC
__glewCheckFramebufferStatusEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLCHECKFRAMEBUFFERSTATUSEXTPROC __glewCheckFramebufferStatusEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLCHECKFRAMEBUFFERSTATUSEXTPROC
__glewCheckFramebufferStatusOES	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLCHECKFRAMEBUFFERSTATUSOESPROC __glewCheckFramebufferStatusOES;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLCHECKFRAMEBUFFERSTATUSOESPROC
__glewCheckNamedFramebufferStatus	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLCHECKNAMEDFRAMEBUFFERSTATUSPROC __glewCheckNamedFramebufferStatus;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLCHECKNAMEDFRAMEBUFFERSTATUSPROC
__glewCheckNamedFramebufferStatusEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLCHECKNAMEDFRAMEBUFFERSTATUSEXTPROC __glewCheckNamedFramebufferStatusEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLCHECKNAMEDFRAMEBUFFERSTATUSEXTPROC
__glewClampColor	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLCLAMPCOLORPROC __glewClampColor;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLCLAMPCOLORPROC
__glewClampColorARB	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLCLAMPCOLORARBPROC __glewClampColorARB;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLCLAMPCOLORARBPROC
__glewClearBufferData	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLCLEARBUFFERDATAPROC __glewClearBufferData;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLCLEARBUFFERDATAPROC
__glewClearBufferSubData	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLCLEARBUFFERSUBDATAPROC __glewClearBufferSubData;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLCLEARBUFFERSUBDATAPROC
__glewClearBufferfi	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLCLEARBUFFERFIPROC __glewClearBufferfi;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLCLEARBUFFERFIPROC
__glewClearBufferfv	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLCLEARBUFFERFVPROC __glewClearBufferfv;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLCLEARBUFFERFVPROC
__glewClearBufferiv	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLCLEARBUFFERIVPROC __glewClearBufferiv;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLCLEARBUFFERIVPROC
__glewClearBufferuiv	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLCLEARBUFFERUIVPROC __glewClearBufferuiv;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLCLEARBUFFERUIVPROC
__glewClearColorIiEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLCLEARCOLORIIEXTPROC __glewClearColorIiEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLCLEARCOLORIIEXTPROC
__glewClearColorIuiEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLCLEARCOLORIUIEXTPROC __glewClearColorIuiEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLCLEARCOLORIUIEXTPROC
__glewClearColorx	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLCLEARCOLORXPROC __glewClearColorx;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLCLEARCOLORXPROC
__glewClearDepthdNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLCLEARDEPTHDNVPROC __glewClearDepthdNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLCLEARDEPTHDNVPROC
__glewClearDepthf	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLCLEARDEPTHFPROC __glewClearDepthf;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLCLEARDEPTHFPROC
__glewClearDepthfOES	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLCLEARDEPTHFOESPROC __glewClearDepthfOES;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLCLEARDEPTHFOESPROC
__glewClearDepthx	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLCLEARDEPTHXPROC __glewClearDepthx;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLCLEARDEPTHXPROC
__glewClearNamedBufferData	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLCLEARNAMEDBUFFERDATAPROC __glewClearNamedBufferData;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLCLEARNAMEDBUFFERDATAPROC
__glewClearNamedBufferDataEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLCLEARNAMEDBUFFERDATAEXTPROC __glewClearNamedBufferDataEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLCLEARNAMEDBUFFERDATAEXTPROC
__glewClearNamedBufferSubData	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLCLEARNAMEDBUFFERSUBDATAPROC __glewClearNamedBufferSubData;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLCLEARNAMEDBUFFERSUBDATAPROC
__glewClearNamedBufferSubDataEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLCLEARNAMEDBUFFERSUBDATAEXTPROC __glewClearNamedBufferSubDataEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLCLEARNAMEDBUFFERSUBDATAEXTPROC
__glewClearNamedFramebufferfi	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLCLEARNAMEDFRAMEBUFFERFIPROC __glewClearNamedFramebufferfi;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLCLEARNAMEDFRAMEBUFFERFIPROC
__glewClearNamedFramebufferfv	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLCLEARNAMEDFRAMEBUFFERFVPROC __glewClearNamedFramebufferfv;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLCLEARNAMEDFRAMEBUFFERFVPROC
__glewClearNamedFramebufferiv	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLCLEARNAMEDFRAMEBUFFERIVPROC __glewClearNamedFramebufferiv;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLCLEARNAMEDFRAMEBUFFERIVPROC
__glewClearNamedFramebufferuiv	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLCLEARNAMEDFRAMEBUFFERUIVPROC __glewClearNamedFramebufferuiv;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLCLEARNAMEDFRAMEBUFFERUIVPROC
__glewClearPixelLocalStorageuiEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLCLEARPIXELLOCALSTORAGEUIEXTPROC __glewClearPixelLocalStorageuiEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLCLEARPIXELLOCALSTORAGEUIEXTPROC
__glewClearTexImage	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLCLEARTEXIMAGEPROC __glewClearTexImage;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLCLEARTEXIMAGEPROC
__glewClearTexImageEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLCLEARTEXIMAGEEXTPROC __glewClearTexImageEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLCLEARTEXIMAGEEXTPROC
__glewClearTexSubImage	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLCLEARTEXSUBIMAGEPROC __glewClearTexSubImage;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLCLEARTEXSUBIMAGEPROC
__glewClearTexSubImageEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLCLEARTEXSUBIMAGEEXTPROC __glewClearTexSubImageEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLCLEARTEXSUBIMAGEEXTPROC
__glewClientActiveTexture	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLCLIENTACTIVETEXTUREPROC __glewClientActiveTexture;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLCLIENTACTIVETEXTUREPROC
__glewClientActiveTextureARB	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLCLIENTACTIVETEXTUREARBPROC __glewClientActiveTextureARB;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLCLIENTACTIVETEXTUREARBPROC
__glewClientActiveVertexStreamATI	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLCLIENTACTIVEVERTEXSTREAMATIPROC __glewClientActiveVertexStreamATI;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLCLIENTACTIVEVERTEXSTREAMATIPROC
__glewClientAttribDefaultEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLCLIENTATTRIBDEFAULTEXTPROC __glewClientAttribDefaultEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLCLIENTATTRIBDEFAULTEXTPROC
__glewClientWaitSemaphoreui64NVX	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLCLIENTWAITSEMAPHOREUI64NVXPROC __glewClientWaitSemaphoreui64NVX;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLCLIENTWAITSEMAPHOREUI64NVXPROC
__glewClientWaitSync	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLCLIENTWAITSYNCPROC __glewClientWaitSync;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLCLIENTWAITSYNCPROC
__glewClientWaitSyncAPPLE	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLCLIENTWAITSYNCAPPLEPROC __glewClientWaitSyncAPPLE;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLCLIENTWAITSYNCAPPLEPROC
__glewClipControl	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLCLIPCONTROLPROC __glewClipControl;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLCLIPCONTROLPROC
__glewClipControlEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLCLIPCONTROLEXTPROC __glewClipControlEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLCLIPCONTROLEXTPROC
__glewClipPlanef	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLCLIPPLANEFPROC __glewClipPlanef;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLCLIPPLANEFPROC
__glewClipPlanefOES	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLCLIPPLANEFOESPROC __glewClipPlanefOES;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLCLIPPLANEFOESPROC
__glewClipPlanex	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLCLIPPLANEXPROC __glewClipPlanex;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLCLIPPLANEXPROC
__glewColor3fVertex3fSUN	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLCOLOR3FVERTEX3FSUNPROC __glewColor3fVertex3fSUN;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLCOLOR3FVERTEX3FSUNPROC
__glewColor3fVertex3fvSUN	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLCOLOR3FVERTEX3FVSUNPROC __glewColor3fVertex3fvSUN;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLCOLOR3FVERTEX3FVSUNPROC
__glewColor3hNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLCOLOR3HNVPROC __glewColor3hNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLCOLOR3HNVPROC
__glewColor3hvNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLCOLOR3HVNVPROC __glewColor3hvNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLCOLOR3HVNVPROC
__glewColor4fNormal3fVertex3fSUN	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLCOLOR4FNORMAL3FVERTEX3FSUNPROC __glewColor4fNormal3fVertex3fSUN;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLCOLOR4FNORMAL3FVERTEX3FSUNPROC
__glewColor4fNormal3fVertex3fvSUN	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLCOLOR4FNORMAL3FVERTEX3FVSUNPROC __glewColor4fNormal3fVertex3fvSUN;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLCOLOR4FNORMAL3FVERTEX3FVSUNPROC
__glewColor4hNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLCOLOR4HNVPROC __glewColor4hNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLCOLOR4HNVPROC
__glewColor4hvNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLCOLOR4HVNVPROC __glewColor4hvNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLCOLOR4HVNVPROC
__glewColor4ubVertex2fSUN	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLCOLOR4UBVERTEX2FSUNPROC __glewColor4ubVertex2fSUN;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLCOLOR4UBVERTEX2FSUNPROC
__glewColor4ubVertex2fvSUN	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLCOLOR4UBVERTEX2FVSUNPROC __glewColor4ubVertex2fvSUN;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLCOLOR4UBVERTEX2FVSUNPROC
__glewColor4ubVertex3fSUN	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLCOLOR4UBVERTEX3FSUNPROC __glewColor4ubVertex3fSUN;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLCOLOR4UBVERTEX3FSUNPROC
__glewColor4ubVertex3fvSUN	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLCOLOR4UBVERTEX3FVSUNPROC __glewColor4ubVertex3fvSUN;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLCOLOR4UBVERTEX3FVSUNPROC
__glewColor4x	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLCOLOR4XPROC __glewColor4x;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLCOLOR4XPROC
__glewColorFormatNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLCOLORFORMATNVPROC __glewColorFormatNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLCOLORFORMATNVPROC
__glewColorFragmentOp1ATI	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLCOLORFRAGMENTOP1ATIPROC __glewColorFragmentOp1ATI;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLCOLORFRAGMENTOP1ATIPROC
__glewColorFragmentOp2ATI	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLCOLORFRAGMENTOP2ATIPROC __glewColorFragmentOp2ATI;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLCOLORFRAGMENTOP2ATIPROC
__glewColorFragmentOp3ATI	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLCOLORFRAGMENTOP3ATIPROC __glewColorFragmentOp3ATI;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLCOLORFRAGMENTOP3ATIPROC
__glewColorMaskIndexedEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLCOLORMASKINDEXEDEXTPROC __glewColorMaskIndexedEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLCOLORMASKINDEXEDEXTPROC
__glewColorMaski	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLCOLORMASKIPROC __glewColorMaski;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLCOLORMASKIPROC
__glewColorMaskiEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLCOLORMASKIEXTPROC __glewColorMaskiEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLCOLORMASKIEXTPROC
__glewColorMaskiOES	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLCOLORMASKIOESPROC __glewColorMaskiOES;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLCOLORMASKIOESPROC
__glewColorP3ui	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLCOLORP3UIPROC __glewColorP3ui;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLCOLORP3UIPROC
__glewColorP3uiv	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLCOLORP3UIVPROC __glewColorP3uiv;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLCOLORP3UIVPROC
__glewColorP4ui	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLCOLORP4UIPROC __glewColorP4ui;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLCOLORP4UIPROC
__glewColorP4uiv	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLCOLORP4UIVPROC __glewColorP4uiv;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLCOLORP4UIVPROC
__glewColorPointerEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLCOLORPOINTEREXTPROC __glewColorPointerEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLCOLORPOINTEREXTPROC
__glewColorPointerListIBM	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLCOLORPOINTERLISTIBMPROC __glewColorPointerListIBM;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLCOLORPOINTERLISTIBMPROC
__glewColorPointervINTEL	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLCOLORPOINTERVINTELPROC __glewColorPointervINTEL;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLCOLORPOINTERVINTELPROC
__glewColorSubTable	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLCOLORSUBTABLEPROC __glewColorSubTable;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLCOLORSUBTABLEPROC
__glewColorSubTableEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLCOLORSUBTABLEEXTPROC __glewColorSubTableEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLCOLORSUBTABLEEXTPROC
__glewColorTable	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLCOLORTABLEPROC __glewColorTable;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLCOLORTABLEPROC
__glewColorTableEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLCOLORTABLEEXTPROC __glewColorTableEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLCOLORTABLEEXTPROC
__glewColorTableParameterfv	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLCOLORTABLEPARAMETERFVPROC __glewColorTableParameterfv;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLCOLORTABLEPARAMETERFVPROC
__glewColorTableParameterfvSGI	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLCOLORTABLEPARAMETERFVSGIPROC __glewColorTableParameterfvSGI;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLCOLORTABLEPARAMETERFVSGIPROC
__glewColorTableParameteriv	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLCOLORTABLEPARAMETERIVPROC __glewColorTableParameteriv;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLCOLORTABLEPARAMETERIVPROC
__glewColorTableParameterivSGI	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLCOLORTABLEPARAMETERIVSGIPROC __glewColorTableParameterivSGI;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLCOLORTABLEPARAMETERIVSGIPROC
__glewColorTableSGI	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLCOLORTABLESGIPROC __glewColorTableSGI;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLCOLORTABLESGIPROC
__glewCombinerInputNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLCOMBINERINPUTNVPROC __glewCombinerInputNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLCOMBINERINPUTNVPROC
__glewCombinerOutputNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLCOMBINEROUTPUTNVPROC __glewCombinerOutputNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLCOMBINEROUTPUTNVPROC
__glewCombinerParameterfNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLCOMBINERPARAMETERFNVPROC __glewCombinerParameterfNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLCOMBINERPARAMETERFNVPROC
__glewCombinerParameterfvNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLCOMBINERPARAMETERFVNVPROC __glewCombinerParameterfvNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLCOMBINERPARAMETERFVNVPROC
__glewCombinerParameteriNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLCOMBINERPARAMETERINVPROC __glewCombinerParameteriNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLCOMBINERPARAMETERINVPROC
__glewCombinerParameterivNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLCOMBINERPARAMETERIVNVPROC __glewCombinerParameterivNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLCOMBINERPARAMETERIVNVPROC
__glewCombinerStageParameterfvNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLCOMBINERSTAGEPARAMETERFVNVPROC __glewCombinerStageParameterfvNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLCOMBINERSTAGEPARAMETERFVNVPROC
__glewCommandListSegmentsNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLCOMMANDLISTSEGMENTSNVPROC __glewCommandListSegmentsNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLCOMMANDLISTSEGMENTSNVPROC
__glewCompileCommandListNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLCOMPILECOMMANDLISTNVPROC __glewCompileCommandListNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLCOMPILECOMMANDLISTNVPROC
__glewCompileShader	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLCOMPILESHADERPROC __glewCompileShader;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLCOMPILESHADERPROC
__glewCompileShaderARB	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLCOMPILESHADERARBPROC __glewCompileShaderARB;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLCOMPILESHADERARBPROC
__glewCompileShaderIncludeARB	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLCOMPILESHADERINCLUDEARBPROC __glewCompileShaderIncludeARB;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLCOMPILESHADERINCLUDEARBPROC
__glewCompressedMultiTexImage1DEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLCOMPRESSEDMULTITEXIMAGE1DEXTPROC __glewCompressedMultiTexImage1DEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLCOMPRESSEDMULTITEXIMAGE1DEXTPROC
__glewCompressedMultiTexImage2DEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLCOMPRESSEDMULTITEXIMAGE2DEXTPROC __glewCompressedMultiTexImage2DEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLCOMPRESSEDMULTITEXIMAGE2DEXTPROC
__glewCompressedMultiTexImage3DEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLCOMPRESSEDMULTITEXIMAGE3DEXTPROC __glewCompressedMultiTexImage3DEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLCOMPRESSEDMULTITEXIMAGE3DEXTPROC
__glewCompressedMultiTexSubImage1DEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLCOMPRESSEDMULTITEXSUBIMAGE1DEXTPROC __glewCompressedMultiTexSubImage1DEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLCOMPRESSEDMULTITEXSUBIMAGE1DEXTPROC
__glewCompressedMultiTexSubImage2DEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLCOMPRESSEDMULTITEXSUBIMAGE2DEXTPROC __glewCompressedMultiTexSubImage2DEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLCOMPRESSEDMULTITEXSUBIMAGE2DEXTPROC
__glewCompressedMultiTexSubImage3DEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLCOMPRESSEDMULTITEXSUBIMAGE3DEXTPROC __glewCompressedMultiTexSubImage3DEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLCOMPRESSEDMULTITEXSUBIMAGE3DEXTPROC
__glewCompressedTexImage1D	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLCOMPRESSEDTEXIMAGE1DPROC __glewCompressedTexImage1D;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLCOMPRESSEDTEXIMAGE1DPROC
__glewCompressedTexImage1DARB	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLCOMPRESSEDTEXIMAGE1DARBPROC __glewCompressedTexImage1DARB;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLCOMPRESSEDTEXIMAGE1DARBPROC
__glewCompressedTexImage2D	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLCOMPRESSEDTEXIMAGE2DPROC __glewCompressedTexImage2D;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLCOMPRESSEDTEXIMAGE2DPROC
__glewCompressedTexImage2DARB	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLCOMPRESSEDTEXIMAGE2DARBPROC __glewCompressedTexImage2DARB;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLCOMPRESSEDTEXIMAGE2DARBPROC
__glewCompressedTexImage3D	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLCOMPRESSEDTEXIMAGE3DPROC __glewCompressedTexImage3D;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLCOMPRESSEDTEXIMAGE3DPROC
__glewCompressedTexImage3DARB	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLCOMPRESSEDTEXIMAGE3DARBPROC __glewCompressedTexImage3DARB;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLCOMPRESSEDTEXIMAGE3DARBPROC
__glewCompressedTexImage3DNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLCOMPRESSEDTEXIMAGE3DNVPROC __glewCompressedTexImage3DNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLCOMPRESSEDTEXIMAGE3DNVPROC
__glewCompressedTexImage3DOES	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLCOMPRESSEDTEXIMAGE3DOESPROC __glewCompressedTexImage3DOES;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLCOMPRESSEDTEXIMAGE3DOESPROC
__glewCompressedTexSubImage1D	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLCOMPRESSEDTEXSUBIMAGE1DPROC __glewCompressedTexSubImage1D;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLCOMPRESSEDTEXSUBIMAGE1DPROC
__glewCompressedTexSubImage1DARB	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLCOMPRESSEDTEXSUBIMAGE1DARBPROC __glewCompressedTexSubImage1DARB;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLCOMPRESSEDTEXSUBIMAGE1DARBPROC
__glewCompressedTexSubImage2D	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLCOMPRESSEDTEXSUBIMAGE2DPROC __glewCompressedTexSubImage2D;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLCOMPRESSEDTEXSUBIMAGE2DPROC
__glewCompressedTexSubImage2DARB	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLCOMPRESSEDTEXSUBIMAGE2DARBPROC __glewCompressedTexSubImage2DARB;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLCOMPRESSEDTEXSUBIMAGE2DARBPROC
__glewCompressedTexSubImage3D	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLCOMPRESSEDTEXSUBIMAGE3DPROC __glewCompressedTexSubImage3D;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLCOMPRESSEDTEXSUBIMAGE3DPROC
__glewCompressedTexSubImage3DARB	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLCOMPRESSEDTEXSUBIMAGE3DARBPROC __glewCompressedTexSubImage3DARB;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLCOMPRESSEDTEXSUBIMAGE3DARBPROC
__glewCompressedTexSubImage3DNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLCOMPRESSEDTEXSUBIMAGE3DNVPROC __glewCompressedTexSubImage3DNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLCOMPRESSEDTEXSUBIMAGE3DNVPROC
__glewCompressedTexSubImage3DOES	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLCOMPRESSEDTEXSUBIMAGE3DOESPROC __glewCompressedTexSubImage3DOES;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLCOMPRESSEDTEXSUBIMAGE3DOESPROC
__glewCompressedTextureImage1DEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLCOMPRESSEDTEXTUREIMAGE1DEXTPROC __glewCompressedTextureImage1DEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLCOMPRESSEDTEXTUREIMAGE1DEXTPROC
__glewCompressedTextureImage2DEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLCOMPRESSEDTEXTUREIMAGE2DEXTPROC __glewCompressedTextureImage2DEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLCOMPRESSEDTEXTUREIMAGE2DEXTPROC
__glewCompressedTextureImage3DEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLCOMPRESSEDTEXTUREIMAGE3DEXTPROC __glewCompressedTextureImage3DEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLCOMPRESSEDTEXTUREIMAGE3DEXTPROC
__glewCompressedTextureSubImage1D	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLCOMPRESSEDTEXTURESUBIMAGE1DPROC __glewCompressedTextureSubImage1D;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLCOMPRESSEDTEXTURESUBIMAGE1DPROC
__glewCompressedTextureSubImage1DEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLCOMPRESSEDTEXTURESUBIMAGE1DEXTPROC __glewCompressedTextureSubImage1DEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLCOMPRESSEDTEXTURESUBIMAGE1DEXTPROC
__glewCompressedTextureSubImage2D	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLCOMPRESSEDTEXTURESUBIMAGE2DPROC __glewCompressedTextureSubImage2D;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLCOMPRESSEDTEXTURESUBIMAGE2DPROC
__glewCompressedTextureSubImage2DEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLCOMPRESSEDTEXTURESUBIMAGE2DEXTPROC __glewCompressedTextureSubImage2DEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLCOMPRESSEDTEXTURESUBIMAGE2DEXTPROC
__glewCompressedTextureSubImage3D	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLCOMPRESSEDTEXTURESUBIMAGE3DPROC __glewCompressedTextureSubImage3D;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLCOMPRESSEDTEXTURESUBIMAGE3DPROC
__glewCompressedTextureSubImage3DEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLCOMPRESSEDTEXTURESUBIMAGE3DEXTPROC __glewCompressedTextureSubImage3DEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLCOMPRESSEDTEXTURESUBIMAGE3DEXTPROC
__glewConservativeRasterParameterfNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLCONSERVATIVERASTERPARAMETERFNVPROC __glewConservativeRasterParameterfNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLCONSERVATIVERASTERPARAMETERFNVPROC
__glewConservativeRasterParameteriNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLCONSERVATIVERASTERPARAMETERINVPROC __glewConservativeRasterParameteriNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLCONSERVATIVERASTERPARAMETERINVPROC
__glewConvolutionFilter1D	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLCONVOLUTIONFILTER1DPROC __glewConvolutionFilter1D;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLCONVOLUTIONFILTER1DPROC
__glewConvolutionFilter1DEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLCONVOLUTIONFILTER1DEXTPROC __glewConvolutionFilter1DEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLCONVOLUTIONFILTER1DEXTPROC
__glewConvolutionFilter2D	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLCONVOLUTIONFILTER2DPROC __glewConvolutionFilter2D;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLCONVOLUTIONFILTER2DPROC
__glewConvolutionFilter2DEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLCONVOLUTIONFILTER2DEXTPROC __glewConvolutionFilter2DEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLCONVOLUTIONFILTER2DEXTPROC
__glewConvolutionParameterf	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLCONVOLUTIONPARAMETERFPROC __glewConvolutionParameterf;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLCONVOLUTIONPARAMETERFPROC
__glewConvolutionParameterfEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLCONVOLUTIONPARAMETERFEXTPROC __glewConvolutionParameterfEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLCONVOLUTIONPARAMETERFEXTPROC
__glewConvolutionParameterfv	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLCONVOLUTIONPARAMETERFVPROC __glewConvolutionParameterfv;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLCONVOLUTIONPARAMETERFVPROC
__glewConvolutionParameterfvEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLCONVOLUTIONPARAMETERFVEXTPROC __glewConvolutionParameterfvEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLCONVOLUTIONPARAMETERFVEXTPROC
__glewConvolutionParameteri	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLCONVOLUTIONPARAMETERIPROC __glewConvolutionParameteri;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLCONVOLUTIONPARAMETERIPROC
__glewConvolutionParameteriEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLCONVOLUTIONPARAMETERIEXTPROC __glewConvolutionParameteriEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLCONVOLUTIONPARAMETERIEXTPROC
__glewConvolutionParameteriv	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLCONVOLUTIONPARAMETERIVPROC __glewConvolutionParameteriv;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLCONVOLUTIONPARAMETERIVPROC
__glewConvolutionParameterivEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLCONVOLUTIONPARAMETERIVEXTPROC __glewConvolutionParameterivEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLCONVOLUTIONPARAMETERIVEXTPROC
__glewCopyBufferSubData	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLCOPYBUFFERSUBDATAPROC __glewCopyBufferSubData;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLCOPYBUFFERSUBDATAPROC
__glewCopyBufferSubDataNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLCOPYBUFFERSUBDATANVPROC __glewCopyBufferSubDataNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLCOPYBUFFERSUBDATANVPROC
__glewCopyColorSubTable	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLCOPYCOLORSUBTABLEPROC __glewCopyColorSubTable;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLCOPYCOLORSUBTABLEPROC
__glewCopyColorSubTableEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLCOPYCOLORSUBTABLEEXTPROC __glewCopyColorSubTableEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLCOPYCOLORSUBTABLEEXTPROC
__glewCopyColorTable	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLCOPYCOLORTABLEPROC __glewCopyColorTable;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLCOPYCOLORTABLEPROC
__glewCopyColorTableSGI	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLCOPYCOLORTABLESGIPROC __glewCopyColorTableSGI;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLCOPYCOLORTABLESGIPROC
__glewCopyConvolutionFilter1D	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLCOPYCONVOLUTIONFILTER1DPROC __glewCopyConvolutionFilter1D;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLCOPYCONVOLUTIONFILTER1DPROC
__glewCopyConvolutionFilter1DEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLCOPYCONVOLUTIONFILTER1DEXTPROC __glewCopyConvolutionFilter1DEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLCOPYCONVOLUTIONFILTER1DEXTPROC
__glewCopyConvolutionFilter2D	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLCOPYCONVOLUTIONFILTER2DPROC __glewCopyConvolutionFilter2D;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLCOPYCONVOLUTIONFILTER2DPROC
__glewCopyConvolutionFilter2DEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLCOPYCONVOLUTIONFILTER2DEXTPROC __glewCopyConvolutionFilter2DEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLCOPYCONVOLUTIONFILTER2DEXTPROC
__glewCopyImageSubData	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLCOPYIMAGESUBDATAPROC __glewCopyImageSubData;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLCOPYIMAGESUBDATAPROC
__glewCopyImageSubDataEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLCOPYIMAGESUBDATAEXTPROC __glewCopyImageSubDataEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLCOPYIMAGESUBDATAEXTPROC
__glewCopyImageSubDataNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLCOPYIMAGESUBDATANVPROC __glewCopyImageSubDataNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLCOPYIMAGESUBDATANVPROC
__glewCopyImageSubDataOES	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLCOPYIMAGESUBDATAOESPROC __glewCopyImageSubDataOES;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLCOPYIMAGESUBDATAOESPROC
__glewCopyMultiTexImage1DEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLCOPYMULTITEXIMAGE1DEXTPROC __glewCopyMultiTexImage1DEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLCOPYMULTITEXIMAGE1DEXTPROC
__glewCopyMultiTexImage2DEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLCOPYMULTITEXIMAGE2DEXTPROC __glewCopyMultiTexImage2DEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLCOPYMULTITEXIMAGE2DEXTPROC
__glewCopyMultiTexSubImage1DEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLCOPYMULTITEXSUBIMAGE1DEXTPROC __glewCopyMultiTexSubImage1DEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLCOPYMULTITEXSUBIMAGE1DEXTPROC
__glewCopyMultiTexSubImage2DEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLCOPYMULTITEXSUBIMAGE2DEXTPROC __glewCopyMultiTexSubImage2DEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLCOPYMULTITEXSUBIMAGE2DEXTPROC
__glewCopyMultiTexSubImage3DEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLCOPYMULTITEXSUBIMAGE3DEXTPROC __glewCopyMultiTexSubImage3DEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLCOPYMULTITEXSUBIMAGE3DEXTPROC
__glewCopyNamedBufferSubData	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLCOPYNAMEDBUFFERSUBDATAPROC __glewCopyNamedBufferSubData;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLCOPYNAMEDBUFFERSUBDATAPROC
__glewCopyPathNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLCOPYPATHNVPROC __glewCopyPathNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLCOPYPATHNVPROC
__glewCopyTexImage1DEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLCOPYTEXIMAGE1DEXTPROC __glewCopyTexImage1DEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLCOPYTEXIMAGE1DEXTPROC
__glewCopyTexImage2DEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLCOPYTEXIMAGE2DEXTPROC __glewCopyTexImage2DEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLCOPYTEXIMAGE2DEXTPROC
__glewCopyTexSubImage1DEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLCOPYTEXSUBIMAGE1DEXTPROC __glewCopyTexSubImage1DEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLCOPYTEXSUBIMAGE1DEXTPROC
__glewCopyTexSubImage2DEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLCOPYTEXSUBIMAGE2DEXTPROC __glewCopyTexSubImage2DEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLCOPYTEXSUBIMAGE2DEXTPROC
__glewCopyTexSubImage3D	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLCOPYTEXSUBIMAGE3DPROC __glewCopyTexSubImage3D;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLCOPYTEXSUBIMAGE3DPROC
__glewCopyTexSubImage3DEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLCOPYTEXSUBIMAGE3DEXTPROC __glewCopyTexSubImage3DEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLCOPYTEXSUBIMAGE3DEXTPROC
__glewCopyTexSubImage3DNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLCOPYTEXSUBIMAGE3DNVPROC __glewCopyTexSubImage3DNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLCOPYTEXSUBIMAGE3DNVPROC
__glewCopyTexSubImage3DOES	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLCOPYTEXSUBIMAGE3DOESPROC __glewCopyTexSubImage3DOES;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLCOPYTEXSUBIMAGE3DOESPROC
__glewCopyTextureImage1DEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLCOPYTEXTUREIMAGE1DEXTPROC __glewCopyTextureImage1DEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLCOPYTEXTUREIMAGE1DEXTPROC
__glewCopyTextureImage2DEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLCOPYTEXTUREIMAGE2DEXTPROC __glewCopyTextureImage2DEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLCOPYTEXTUREIMAGE2DEXTPROC
__glewCopyTextureLevelsAPPLE	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLCOPYTEXTURELEVELSAPPLEPROC __glewCopyTextureLevelsAPPLE;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLCOPYTEXTURELEVELSAPPLEPROC
__glewCopyTextureSubImage1D	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLCOPYTEXTURESUBIMAGE1DPROC __glewCopyTextureSubImage1D;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLCOPYTEXTURESUBIMAGE1DPROC
__glewCopyTextureSubImage1DEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLCOPYTEXTURESUBIMAGE1DEXTPROC __glewCopyTextureSubImage1DEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLCOPYTEXTURESUBIMAGE1DEXTPROC
__glewCopyTextureSubImage2D	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLCOPYTEXTURESUBIMAGE2DPROC __glewCopyTextureSubImage2D;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLCOPYTEXTURESUBIMAGE2DPROC
__glewCopyTextureSubImage2DEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLCOPYTEXTURESUBIMAGE2DEXTPROC __glewCopyTextureSubImage2DEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLCOPYTEXTURESUBIMAGE2DEXTPROC
__glewCopyTextureSubImage3D	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLCOPYTEXTURESUBIMAGE3DPROC __glewCopyTextureSubImage3D;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLCOPYTEXTURESUBIMAGE3DPROC
__glewCopyTextureSubImage3DEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLCOPYTEXTURESUBIMAGE3DEXTPROC __glewCopyTextureSubImage3DEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLCOPYTEXTURESUBIMAGE3DEXTPROC
__glewCoverFillPathInstancedNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLCOVERFILLPATHINSTANCEDNVPROC __glewCoverFillPathInstancedNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLCOVERFILLPATHINSTANCEDNVPROC
__glewCoverFillPathNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLCOVERFILLPATHNVPROC __glewCoverFillPathNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLCOVERFILLPATHNVPROC
__glewCoverStrokePathInstancedNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLCOVERSTROKEPATHINSTANCEDNVPROC __glewCoverStrokePathInstancedNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLCOVERSTROKEPATHINSTANCEDNVPROC
__glewCoverStrokePathNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLCOVERSTROKEPATHNVPROC __glewCoverStrokePathNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLCOVERSTROKEPATHNVPROC
__glewCoverageModulationNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLCOVERAGEMODULATIONNVPROC __glewCoverageModulationNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLCOVERAGEMODULATIONNVPROC
__glewCoverageModulationTableNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLCOVERAGEMODULATIONTABLENVPROC __glewCoverageModulationTableNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLCOVERAGEMODULATIONTABLENVPROC
__glewCreateArraySetExt	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLCREATEARRAYSETEXTPROC __glewCreateArraySetExt;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLCREATEARRAYSETEXTPROC
__glewCreateBuffers	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLCREATEBUFFERSPROC __glewCreateBuffers;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLCREATEBUFFERSPROC
__glewCreateCommandListsNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLCREATECOMMANDLISTSNVPROC __glewCreateCommandListsNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLCREATECOMMANDLISTSNVPROC
__glewCreateFramebuffers	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLCREATEFRAMEBUFFERSPROC __glewCreateFramebuffers;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLCREATEFRAMEBUFFERSPROC
__glewCreateMemoryObjectsEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLCREATEMEMORYOBJECTSEXTPROC __glewCreateMemoryObjectsEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLCREATEMEMORYOBJECTSEXTPROC
__glewCreatePerfQueryINTEL	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLCREATEPERFQUERYINTELPROC __glewCreatePerfQueryINTEL;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLCREATEPERFQUERYINTELPROC
__glewCreateProgram	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLCREATEPROGRAMPROC __glewCreateProgram;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLCREATEPROGRAMPROC
__glewCreateProgramObjectARB	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLCREATEPROGRAMOBJECTARBPROC __glewCreateProgramObjectARB;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLCREATEPROGRAMOBJECTARBPROC
__glewCreateProgramPipelines	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLCREATEPROGRAMPIPELINESPROC __glewCreateProgramPipelines;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLCREATEPROGRAMPIPELINESPROC
__glewCreateQueries	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLCREATEQUERIESPROC __glewCreateQueries;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLCREATEQUERIESPROC
__glewCreateRenderbuffers	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLCREATERENDERBUFFERSPROC __glewCreateRenderbuffers;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLCREATERENDERBUFFERSPROC
__glewCreateSamplers	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLCREATESAMPLERSPROC __glewCreateSamplers;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLCREATESAMPLERSPROC
__glewCreateShader	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLCREATESHADERPROC __glewCreateShader;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLCREATESHADERPROC
__glewCreateShaderObjectARB	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLCREATESHADEROBJECTARBPROC __glewCreateShaderObjectARB;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLCREATESHADEROBJECTARBPROC
__glewCreateShaderProgramEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLCREATESHADERPROGRAMEXTPROC __glewCreateShaderProgramEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLCREATESHADERPROGRAMEXTPROC
__glewCreateShaderProgramv	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLCREATESHADERPROGRAMVPROC __glewCreateShaderProgramv;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLCREATESHADERPROGRAMVPROC
__glewCreateStatesNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLCREATESTATESNVPROC __glewCreateStatesNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLCREATESTATESNVPROC
__glewCreateSyncFromCLeventARB	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLCREATESYNCFROMCLEVENTARBPROC __glewCreateSyncFromCLeventARB;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLCREATESYNCFROMCLEVENTARBPROC
__glewCreateTextures	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLCREATETEXTURESPROC __glewCreateTextures;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLCREATETEXTURESPROC
__glewCreateTransformFeedbacks	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLCREATETRANSFORMFEEDBACKSPROC __glewCreateTransformFeedbacks;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLCREATETRANSFORMFEEDBACKSPROC
__glewCreateVertexArrays	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLCREATEVERTEXARRAYSPROC __glewCreateVertexArrays;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLCREATEVERTEXARRAYSPROC
__glewCullParameterdvEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLCULLPARAMETERDVEXTPROC __glewCullParameterdvEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLCULLPARAMETERDVEXTPROC
__glewCullParameterfvEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLCULLPARAMETERFVEXTPROC __glewCullParameterfvEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLCULLPARAMETERFVEXTPROC
__glewCurrentPaletteMatrixARB	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLCURRENTPALETTEMATRIXARBPROC __glewCurrentPaletteMatrixARB;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLCURRENTPALETTEMATRIXARBPROC
__glewCurrentPaletteMatrixOES	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLCURRENTPALETTEMATRIXOESPROC __glewCurrentPaletteMatrixOES;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLCURRENTPALETTEMATRIXOESPROC
__glewDataPipe	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLDATAPIPEPROC __glewDataPipe;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLDATAPIPEPROC
__glewDebugMessageCallback	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLDEBUGMESSAGECALLBACKPROC __glewDebugMessageCallback;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLDEBUGMESSAGECALLBACKPROC
__glewDebugMessageCallbackAMD	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLDEBUGMESSAGECALLBACKAMDPROC __glewDebugMessageCallbackAMD;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLDEBUGMESSAGECALLBACKAMDPROC
__glewDebugMessageCallbackARB	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLDEBUGMESSAGECALLBACKARBPROC __glewDebugMessageCallbackARB;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLDEBUGMESSAGECALLBACKARBPROC
__glewDebugMessageControl	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLDEBUGMESSAGECONTROLPROC __glewDebugMessageControl;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLDEBUGMESSAGECONTROLPROC
__glewDebugMessageControlARB	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLDEBUGMESSAGECONTROLARBPROC __glewDebugMessageControlARB;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLDEBUGMESSAGECONTROLARBPROC
__glewDebugMessageEnableAMD	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLDEBUGMESSAGEENABLEAMDPROC __glewDebugMessageEnableAMD;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLDEBUGMESSAGEENABLEAMDPROC
__glewDebugMessageInsert	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLDEBUGMESSAGEINSERTPROC __glewDebugMessageInsert;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLDEBUGMESSAGEINSERTPROC
__glewDebugMessageInsertAMD	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLDEBUGMESSAGEINSERTAMDPROC __glewDebugMessageInsertAMD;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLDEBUGMESSAGEINSERTAMDPROC
__glewDebugMessageInsertARB	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLDEBUGMESSAGEINSERTARBPROC __glewDebugMessageInsertARB;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLDEBUGMESSAGEINSERTARBPROC
__glewDeformSGIX	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLDEFORMSGIXPROC __glewDeformSGIX;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLDEFORMSGIXPROC
__glewDeleteArraySetsEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLDELETEARRAYSETSEXTPROC __glewDeleteArraySetsEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLDELETEARRAYSETSEXTPROC
__glewDeleteAsyncMarkersSGIX	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLDELETEASYNCMARKERSSGIXPROC __glewDeleteAsyncMarkersSGIX;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLDELETEASYNCMARKERSSGIXPROC
__glewDeleteBufferRegion	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLDELETEBUFFERREGIONPROC __glewDeleteBufferRegion;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLDELETEBUFFERREGIONPROC
__glewDeleteBuffers	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLDELETEBUFFERSPROC __glewDeleteBuffers;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLDELETEBUFFERSPROC
__glewDeleteBuffersARB	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLDELETEBUFFERSARBPROC __glewDeleteBuffersARB;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLDELETEBUFFERSARBPROC
__glewDeleteCommandListsNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLDELETECOMMANDLISTSNVPROC __glewDeleteCommandListsNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLDELETECOMMANDLISTSNVPROC
__glewDeleteFencesAPPLE	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLDELETEFENCESAPPLEPROC __glewDeleteFencesAPPLE;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLDELETEFENCESAPPLEPROC
__glewDeleteFencesNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLDELETEFENCESNVPROC __glewDeleteFencesNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLDELETEFENCESNVPROC
__glewDeleteFragmentShaderATI	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLDELETEFRAGMENTSHADERATIPROC __glewDeleteFragmentShaderATI;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLDELETEFRAGMENTSHADERATIPROC
__glewDeleteFramebuffers	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLDELETEFRAMEBUFFERSPROC __glewDeleteFramebuffers;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLDELETEFRAMEBUFFERSPROC
__glewDeleteFramebuffersEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLDELETEFRAMEBUFFERSEXTPROC __glewDeleteFramebuffersEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLDELETEFRAMEBUFFERSEXTPROC
__glewDeleteFramebuffersOES	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLDELETEFRAMEBUFFERSOESPROC __glewDeleteFramebuffersOES;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLDELETEFRAMEBUFFERSOESPROC
__glewDeleteMPEGPredictorsSGIX	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLDELETEMPEGPREDICTORSSGIXPROC __glewDeleteMPEGPredictorsSGIX;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLDELETEMPEGPREDICTORSSGIXPROC
__glewDeleteMemoryObjectsEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLDELETEMEMORYOBJECTSEXTPROC __glewDeleteMemoryObjectsEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLDELETEMEMORYOBJECTSEXTPROC
__glewDeleteNamedStringARB	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLDELETENAMEDSTRINGARBPROC __glewDeleteNamedStringARB;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLDELETENAMEDSTRINGARBPROC
__glewDeleteNamesAMD	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLDELETENAMESAMDPROC __glewDeleteNamesAMD;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLDELETENAMESAMDPROC
__glewDeleteObjectARB	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLDELETEOBJECTARBPROC __glewDeleteObjectARB;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLDELETEOBJECTARBPROC
__glewDeleteOcclusionQueriesNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLDELETEOCCLUSIONQUERIESNVPROC __glewDeleteOcclusionQueriesNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLDELETEOCCLUSIONQUERIESNVPROC
__glewDeletePathsNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLDELETEPATHSNVPROC __glewDeletePathsNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLDELETEPATHSNVPROC
__glewDeletePerfMonitorsAMD	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLDELETEPERFMONITORSAMDPROC __glewDeletePerfMonitorsAMD;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLDELETEPERFMONITORSAMDPROC
__glewDeletePerfQueryINTEL	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLDELETEPERFQUERYINTELPROC __glewDeletePerfQueryINTEL;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLDELETEPERFQUERYINTELPROC
__glewDeleteProgram	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLDELETEPROGRAMPROC __glewDeleteProgram;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLDELETEPROGRAMPROC
__glewDeleteProgramPipelines	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLDELETEPROGRAMPIPELINESPROC __glewDeleteProgramPipelines;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLDELETEPROGRAMPIPELINESPROC
__glewDeleteProgramsARB	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLDELETEPROGRAMSARBPROC __glewDeleteProgramsARB;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLDELETEPROGRAMSARBPROC
__glewDeleteProgramsNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLDELETEPROGRAMSNVPROC __glewDeleteProgramsNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLDELETEPROGRAMSNVPROC
__glewDeleteQueries	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLDELETEQUERIESPROC __glewDeleteQueries;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLDELETEQUERIESPROC
__glewDeleteQueriesANGLE	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLDELETEQUERIESANGLEPROC __glewDeleteQueriesANGLE;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLDELETEQUERIESANGLEPROC
__glewDeleteQueriesARB	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLDELETEQUERIESARBPROC __glewDeleteQueriesARB;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLDELETEQUERIESARBPROC
__glewDeleteQueriesEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLDELETEQUERIESEXTPROC __glewDeleteQueriesEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLDELETEQUERIESEXTPROC
__glewDeleteRenderbuffers	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLDELETERENDERBUFFERSPROC __glewDeleteRenderbuffers;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLDELETERENDERBUFFERSPROC
__glewDeleteRenderbuffersEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLDELETERENDERBUFFERSEXTPROC __glewDeleteRenderbuffersEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLDELETERENDERBUFFERSEXTPROC
__glewDeleteRenderbuffersOES	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLDELETERENDERBUFFERSOESPROC __glewDeleteRenderbuffersOES;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLDELETERENDERBUFFERSOESPROC
__glewDeleteSamplers	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLDELETESAMPLERSPROC __glewDeleteSamplers;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLDELETESAMPLERSPROC
__glewDeleteSemaphoresEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLDELETESEMAPHORESEXTPROC __glewDeleteSemaphoresEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLDELETESEMAPHORESEXTPROC
__glewDeleteShader	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLDELETESHADERPROC __glewDeleteShader;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLDELETESHADERPROC
__glewDeleteStatesNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLDELETESTATESNVPROC __glewDeleteStatesNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLDELETESTATESNVPROC
__glewDeleteSync	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLDELETESYNCPROC __glewDeleteSync;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLDELETESYNCPROC
__glewDeleteSyncAPPLE	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLDELETESYNCAPPLEPROC __glewDeleteSyncAPPLE;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLDELETESYNCAPPLEPROC
__glewDeleteTexturesEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLDELETETEXTURESEXTPROC __glewDeleteTexturesEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLDELETETEXTURESEXTPROC
__glewDeleteTransformFeedbacks	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLDELETETRANSFORMFEEDBACKSPROC __glewDeleteTransformFeedbacks;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLDELETETRANSFORMFEEDBACKSPROC
__glewDeleteTransformFeedbacksNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLDELETETRANSFORMFEEDBACKSNVPROC __glewDeleteTransformFeedbacksNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLDELETETRANSFORMFEEDBACKSNVPROC
__glewDeleteVertexArrays	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLDELETEVERTEXARRAYSPROC __glewDeleteVertexArrays;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLDELETEVERTEXARRAYSPROC
__glewDeleteVertexArraysAPPLE	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLDELETEVERTEXARRAYSAPPLEPROC __glewDeleteVertexArraysAPPLE;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLDELETEVERTEXARRAYSAPPLEPROC
__glewDeleteVertexArraysOES	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLDELETEVERTEXARRAYSOESPROC __glewDeleteVertexArraysOES;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLDELETEVERTEXARRAYSOESPROC
__glewDeleteVertexArraysSGIX	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLDELETEVERTEXARRAYSSGIXPROC __glewDeleteVertexArraysSGIX;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLDELETEVERTEXARRAYSSGIXPROC
__glewDeleteVertexShaderEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLDELETEVERTEXSHADEREXTPROC __glewDeleteVertexShaderEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLDELETEVERTEXSHADEREXTPROC
__glewDepthBoundsEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLDEPTHBOUNDSEXTPROC __glewDepthBoundsEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLDEPTHBOUNDSEXTPROC
__glewDepthBoundsdNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLDEPTHBOUNDSDNVPROC __glewDepthBoundsdNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLDEPTHBOUNDSDNVPROC
__glewDepthRangeArrayfvNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLDEPTHRANGEARRAYFVNVPROC __glewDepthRangeArrayfvNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLDEPTHRANGEARRAYFVNVPROC
__glewDepthRangeArrayv	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLDEPTHRANGEARRAYVPROC __glewDepthRangeArrayv;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLDEPTHRANGEARRAYVPROC
__glewDepthRangeIndexed	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLDEPTHRANGEINDEXEDPROC __glewDepthRangeIndexed;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLDEPTHRANGEINDEXEDPROC
__glewDepthRangeIndexedfNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLDEPTHRANGEINDEXEDFNVPROC __glewDepthRangeIndexedfNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLDEPTHRANGEINDEXEDFNVPROC
__glewDepthRangedNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLDEPTHRANGEDNVPROC __glewDepthRangedNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLDEPTHRANGEDNVPROC
__glewDepthRangef	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLDEPTHRANGEFPROC __glewDepthRangef;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLDEPTHRANGEFPROC
__glewDepthRangefOES	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLDEPTHRANGEFOESPROC __glewDepthRangefOES;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLDEPTHRANGEFOESPROC
__glewDepthRangex	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLDEPTHRANGEXPROC __glewDepthRangex;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLDEPTHRANGEXPROC
__glewDetachObjectARB	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLDETACHOBJECTARBPROC __glewDetachObjectARB;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLDETACHOBJECTARBPROC
__glewDetachShader	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLDETACHSHADERPROC __glewDetachShader;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLDETACHSHADERPROC
__glewDetailTexFuncSGIS	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLDETAILTEXFUNCSGISPROC __glewDetailTexFuncSGIS;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLDETAILTEXFUNCSGISPROC
__glewDisableClientStateIndexedEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLDISABLECLIENTSTATEINDEXEDEXTPROC __glewDisableClientStateIndexedEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLDISABLECLIENTSTATEINDEXEDEXTPROC
__glewDisableClientStateiEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLDISABLECLIENTSTATEIEXTPROC __glewDisableClientStateiEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLDISABLECLIENTSTATEIEXTPROC
__glewDisableDriverControlQCOM	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLDISABLEDRIVERCONTROLQCOMPROC __glewDisableDriverControlQCOM;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLDISABLEDRIVERCONTROLQCOMPROC
__glewDisableIndexedEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLDISABLEINDEXEDEXTPROC __glewDisableIndexedEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLDISABLEINDEXEDEXTPROC
__glewDisableVariantClientStateEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLDISABLEVARIANTCLIENTSTATEEXTPROC __glewDisableVariantClientStateEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLDISABLEVARIANTCLIENTSTATEEXTPROC
__glewDisableVertexArrayAttrib	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLDISABLEVERTEXARRAYATTRIBPROC __glewDisableVertexArrayAttrib;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLDISABLEVERTEXARRAYATTRIBPROC
__glewDisableVertexArrayAttribEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLDISABLEVERTEXARRAYATTRIBEXTPROC __glewDisableVertexArrayAttribEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLDISABLEVERTEXARRAYATTRIBEXTPROC
__glewDisableVertexArrayEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLDISABLEVERTEXARRAYEXTPROC __glewDisableVertexArrayEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLDISABLEVERTEXARRAYEXTPROC
__glewDisableVertexAttribAPPLE	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLDISABLEVERTEXATTRIBAPPLEPROC __glewDisableVertexAttribAPPLE;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLDISABLEVERTEXATTRIBAPPLEPROC
__glewDisableVertexAttribArray	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLDISABLEVERTEXATTRIBARRAYPROC __glewDisableVertexAttribArray;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLDISABLEVERTEXATTRIBARRAYPROC
__glewDisableVertexAttribArrayARB	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLDISABLEVERTEXATTRIBARRAYARBPROC __glewDisableVertexAttribArrayARB;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLDISABLEVERTEXATTRIBARRAYARBPROC
__glewDisablei	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLDISABLEIPROC __glewDisablei;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLDISABLEIPROC
__glewDisableiEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLDISABLEIEXTPROC __glewDisableiEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLDISABLEIEXTPROC
__glewDisableiNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLDISABLEINVPROC __glewDisableiNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLDISABLEINVPROC
__glewDisableiOES	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLDISABLEIOESPROC __glewDisableiOES;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLDISABLEIOESPROC
__glewDiscardFramebufferEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLDISCARDFRAMEBUFFEREXTPROC __glewDiscardFramebufferEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLDISCARDFRAMEBUFFEREXTPROC
__glewDispatchCompute	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLDISPATCHCOMPUTEPROC __glewDispatchCompute;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLDISPATCHCOMPUTEPROC
__glewDispatchComputeGroupSizeARB	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLDISPATCHCOMPUTEGROUPSIZEARBPROC __glewDispatchComputeGroupSizeARB;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLDISPATCHCOMPUTEGROUPSIZEARBPROC
__glewDispatchComputeIndirect	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLDISPATCHCOMPUTEINDIRECTPROC __glewDispatchComputeIndirect;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLDISPATCHCOMPUTEINDIRECTPROC
__glewDrawArraysEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLDRAWARRAYSEXTPROC __glewDrawArraysEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLDRAWARRAYSEXTPROC
__glewDrawArraysIndirect	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLDRAWARRAYSINDIRECTPROC __glewDrawArraysIndirect;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLDRAWARRAYSINDIRECTPROC
__glewDrawArraysInstanced	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLDRAWARRAYSINSTANCEDPROC __glewDrawArraysInstanced;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLDRAWARRAYSINSTANCEDPROC
__glewDrawArraysInstancedANGLE	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLDRAWARRAYSINSTANCEDANGLEPROC __glewDrawArraysInstancedANGLE;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLDRAWARRAYSINSTANCEDANGLEPROC
__glewDrawArraysInstancedARB	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLDRAWARRAYSINSTANCEDARBPROC __glewDrawArraysInstancedARB;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLDRAWARRAYSINSTANCEDARBPROC
__glewDrawArraysInstancedBaseInstance	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLDRAWARRAYSINSTANCEDBASEINSTANCEPROC __glewDrawArraysInstancedBaseInstance;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLDRAWARRAYSINSTANCEDBASEINSTANCEPROC
__glewDrawArraysInstancedBaseInstanceEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLDRAWARRAYSINSTANCEDBASEINSTANCEEXTPROC __glewDrawArraysInstancedBaseInstanc/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLDRAWARRAYSINSTANCEDBASEINSTANCEEXTPROC
__glewDrawArraysInstancedEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLDRAWARRAYSINSTANCEDEXTPROC __glewDrawArraysInstancedEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLDRAWARRAYSINSTANCEDEXTPROC
__glewDrawArraysInstancedNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLDRAWARRAYSINSTANCEDNVPROC __glewDrawArraysInstancedNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLDRAWARRAYSINSTANCEDNVPROC
__glewDrawBufferRegion	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLDRAWBUFFERREGIONPROC __glewDrawBufferRegion;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLDRAWBUFFERREGIONPROC
__glewDrawBuffers	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLDRAWBUFFERSPROC __glewDrawBuffers;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLDRAWBUFFERSPROC
__glewDrawBuffersARB	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLDRAWBUFFERSARBPROC __glewDrawBuffersARB;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLDRAWBUFFERSARBPROC
__glewDrawBuffersATI	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLDRAWBUFFERSATIPROC __glewDrawBuffersATI;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLDRAWBUFFERSATIPROC
__glewDrawBuffersEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLDRAWBUFFERSEXTPROC __glewDrawBuffersEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLDRAWBUFFERSEXTPROC
__glewDrawBuffersIndexedEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLDRAWBUFFERSINDEXEDEXTPROC __glewDrawBuffersIndexedEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLDRAWBUFFERSINDEXEDEXTPROC
__glewDrawBuffersNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLDRAWBUFFERSNVPROC __glewDrawBuffersNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLDRAWBUFFERSNVPROC
__glewDrawCommandsAddressNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLDRAWCOMMANDSADDRESSNVPROC __glewDrawCommandsAddressNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLDRAWCOMMANDSADDRESSNVPROC
__glewDrawCommandsNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLDRAWCOMMANDSNVPROC __glewDrawCommandsNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLDRAWCOMMANDSNVPROC
__glewDrawCommandsStatesAddressNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLDRAWCOMMANDSSTATESADDRESSNVPROC __glewDrawCommandsStatesAddressNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLDRAWCOMMANDSSTATESADDRESSNVPROC
__glewDrawCommandsStatesNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLDRAWCOMMANDSSTATESNVPROC __glewDrawCommandsStatesNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLDRAWCOMMANDSSTATESNVPROC
__glewDrawElementArrayAPPLE	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLDRAWELEMENTARRAYAPPLEPROC __glewDrawElementArrayAPPLE;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLDRAWELEMENTARRAYAPPLEPROC
__glewDrawElementArrayATI	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLDRAWELEMENTARRAYATIPROC __glewDrawElementArrayATI;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLDRAWELEMENTARRAYATIPROC
__glewDrawElementsBaseVertex	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLDRAWELEMENTSBASEVERTEXPROC __glewDrawElementsBaseVertex;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLDRAWELEMENTSBASEVERTEXPROC
__glewDrawElementsBaseVertexEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLDRAWELEMENTSBASEVERTEXEXTPROC __glewDrawElementsBaseVertexEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLDRAWELEMENTSBASEVERTEXEXTPROC
__glewDrawElementsIndirect	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLDRAWELEMENTSINDIRECTPROC __glewDrawElementsIndirect;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLDRAWELEMENTSINDIRECTPROC
__glewDrawElementsInstanced	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLDRAWELEMENTSINSTANCEDPROC __glewDrawElementsInstanced;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLDRAWELEMENTSINSTANCEDPROC
__glewDrawElementsInstancedANGLE	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLDRAWELEMENTSINSTANCEDANGLEPROC __glewDrawElementsInstancedANGLE;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLDRAWELEMENTSINSTANCEDANGLEPROC
__glewDrawElementsInstancedARB	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLDRAWELEMENTSINSTANCEDARBPROC __glewDrawElementsInstancedARB;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLDRAWELEMENTSINSTANCEDARBPROC
__glewDrawElementsInstancedBaseInstance	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLDRAWELEMENTSINSTANCEDBASEINSTANCEPROC __glewDrawElementsInstancedBaseInstan/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLDRAWELEMENTSINSTANCEDBASEINSTANCEPROC
__glewDrawElementsInstancedBaseInstanceEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLDRAWELEMENTSINSTANCEDBASEINSTANCEEXTPROC __glewDrawElementsInstancedBaseIns/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLDRAWELEMENTSINSTANCEDBASEINSTANCEEXTPROC
__glewDrawElementsInstancedBaseVertex	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLDRAWELEMENTSINSTANCEDBASEVERTEXPROC __glewDrawElementsInstancedBaseVertex;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLDRAWELEMENTSINSTANCEDBASEVERTEXPROC
__glewDrawElementsInstancedBaseVertexBaseInstance	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLDRAWELEMENTSINSTANCEDBASEVERTEXBASEINSTANCEPROC __glewDrawElementsInstanced/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLDRAWELEMENTSINSTANCEDBASEVERTEXBASEINSTANCEPROC
__glewDrawElementsInstancedBaseVertexBaseInstanceEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLDRAWELEMENTSINSTANCEDBASEVERTEXBASEINSTANCEEXTPROC __glewDrawElementsInstan/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLDRAWELEMENTSINSTANCEDBASEVERTEXBASEINSTANCEEXTPROC
__glewDrawElementsInstancedBaseVertexEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLDRAWELEMENTSINSTANCEDBASEVERTEXEXTPROC __glewDrawElementsInstancedBaseVerte/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLDRAWELEMENTSINSTANCEDBASEVERTEXEXTPROC
__glewDrawElementsInstancedEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLDRAWELEMENTSINSTANCEDEXTPROC __glewDrawElementsInstancedEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLDRAWELEMENTSINSTANCEDEXTPROC
__glewDrawElementsInstancedNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLDRAWELEMENTSINSTANCEDNVPROC __glewDrawElementsInstancedNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLDRAWELEMENTSINSTANCEDNVPROC
__glewDrawMeshTasksIndirectNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLDRAWMESHTASKSINDIRECTNVPROC __glewDrawMeshTasksIndirectNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLDRAWMESHTASKSINDIRECTNVPROC
__glewDrawMeshTasksNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLDRAWMESHTASKSNVPROC __glewDrawMeshTasksNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLDRAWMESHTASKSNVPROC
__glewDrawRangeElementArrayAPPLE	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLDRAWRANGEELEMENTARRAYAPPLEPROC __glewDrawRangeElementArrayAPPLE;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLDRAWRANGEELEMENTARRAYAPPLEPROC
__glewDrawRangeElementArrayATI	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLDRAWRANGEELEMENTARRAYATIPROC __glewDrawRangeElementArrayATI;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLDRAWRANGEELEMENTARRAYATIPROC
__glewDrawRangeElements	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLDRAWRANGEELEMENTSPROC __glewDrawRangeElements;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLDRAWRANGEELEMENTSPROC
__glewDrawRangeElementsBaseVertex	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLDRAWRANGEELEMENTSBASEVERTEXPROC __glewDrawRangeElementsBaseVertex;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLDRAWRANGEELEMENTSBASEVERTEXPROC
__glewDrawRangeElementsBaseVertexEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLDRAWRANGEELEMENTSBASEVERTEXEXTPROC __glewDrawRangeElementsBaseVertexEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLDRAWRANGEELEMENTSBASEVERTEXEXTPROC
__glewDrawRangeElementsEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLDRAWRANGEELEMENTSEXTPROC __glewDrawRangeElementsEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLDRAWRANGEELEMENTSEXTPROC
__glewDrawTextureNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLDRAWTEXTURENVPROC __glewDrawTextureNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLDRAWTEXTURENVPROC
__glewDrawTransformFeedback	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLDRAWTRANSFORMFEEDBACKPROC __glewDrawTransformFeedback;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLDRAWTRANSFORMFEEDBACKPROC
__glewDrawTransformFeedbackEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLDRAWTRANSFORMFEEDBACKEXTPROC __glewDrawTransformFeedbackEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLDRAWTRANSFORMFEEDBACKEXTPROC
__glewDrawTransformFeedbackInstanced	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLDRAWTRANSFORMFEEDBACKINSTANCEDPROC __glewDrawTransformFeedbackInstanced;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLDRAWTRANSFORMFEEDBACKINSTANCEDPROC
__glewDrawTransformFeedbackInstancedEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLDRAWTRANSFORMFEEDBACKINSTANCEDEXTPROC __glewDrawTransformFeedbackInstancedE/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLDRAWTRANSFORMFEEDBACKINSTANCEDEXTPROC
__glewDrawTransformFeedbackNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLDRAWTRANSFORMFEEDBACKNVPROC __glewDrawTransformFeedbackNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLDRAWTRANSFORMFEEDBACKNVPROC
__glewDrawTransformFeedbackStream	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLDRAWTRANSFORMFEEDBACKSTREAMPROC __glewDrawTransformFeedbackStream;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLDRAWTRANSFORMFEEDBACKSTREAMPROC
__glewDrawTransformFeedbackStreamInstanced	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLDRAWTRANSFORMFEEDBACKSTREAMINSTANCEDPROC __glewDrawTransformFeedbackStreamI/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLDRAWTRANSFORMFEEDBACKSTREAMINSTANCEDPROC
__glewDrawVkImageNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLDRAWVKIMAGENVPROC __glewDrawVkImageNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLDRAWVKIMAGENVPROC
__glewEGLImageTargetRenderbufferStorageOES	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLEGLIMAGETARGETRENDERBUFFERSTORAGEOESPROC __glewEGLImageTargetRenderbufferSt/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLEGLIMAGETARGETRENDERBUFFERSTORAGEOESPROC
__glewEGLImageTargetTexStorageEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLEGLIMAGETARGETTEXSTORAGEEXTPROC __glewEGLImageTargetTexStorageEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLEGLIMAGETARGETTEXSTORAGEEXTPROC
__glewEGLImageTargetTexture2DOES	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLEGLIMAGETARGETTEXTURE2DOESPROC __glewEGLImageTargetTexture2DOES;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLEGLIMAGETARGETTEXTURE2DOESPROC
__glewEGLImageTargetTextureStorageEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLEGLIMAGETARGETTEXTURESTORAGEEXTPROC __glewEGLImageTargetTextureStorageEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLEGLIMAGETARGETTEXTURESTORAGEEXTPROC
__glewEdgeFlagFormatNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLEDGEFLAGFORMATNVPROC __glewEdgeFlagFormatNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLEDGEFLAGFORMATNVPROC
__glewEdgeFlagPointerEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLEDGEFLAGPOINTEREXTPROC __glewEdgeFlagPointerEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLEDGEFLAGPOINTEREXTPROC
__glewEdgeFlagPointerListIBM	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLEDGEFLAGPOINTERLISTIBMPROC __glewEdgeFlagPointerListIBM;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLEDGEFLAGPOINTERLISTIBMPROC
__glewElementPointerAPPLE	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLELEMENTPOINTERAPPLEPROC __glewElementPointerAPPLE;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLELEMENTPOINTERAPPLEPROC
__glewElementPointerATI	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLELEMENTPOINTERATIPROC __glewElementPointerATI;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLELEMENTPOINTERATIPROC
__glewEnableClientStateIndexedEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLENABLECLIENTSTATEINDEXEDEXTPROC __glewEnableClientStateIndexedEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLENABLECLIENTSTATEINDEXEDEXTPROC
__glewEnableClientStateiEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLENABLECLIENTSTATEIEXTPROC __glewEnableClientStateiEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLENABLECLIENTSTATEIEXTPROC
__glewEnableDriverControlQCOM	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLENABLEDRIVERCONTROLQCOMPROC __glewEnableDriverControlQCOM;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLENABLEDRIVERCONTROLQCOMPROC
__glewEnableIndexedEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLENABLEINDEXEDEXTPROC __glewEnableIndexedEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLENABLEINDEXEDEXTPROC
__glewEnableVariantClientStateEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLENABLEVARIANTCLIENTSTATEEXTPROC __glewEnableVariantClientStateEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLENABLEVARIANTCLIENTSTATEEXTPROC
__glewEnableVertexArrayAttrib	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLENABLEVERTEXARRAYATTRIBPROC __glewEnableVertexArrayAttrib;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLENABLEVERTEXARRAYATTRIBPROC
__glewEnableVertexArrayAttribEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLENABLEVERTEXARRAYATTRIBEXTPROC __glewEnableVertexArrayAttribEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLENABLEVERTEXARRAYATTRIBEXTPROC
__glewEnableVertexArrayEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLENABLEVERTEXARRAYEXTPROC __glewEnableVertexArrayEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLENABLEVERTEXARRAYEXTPROC
__glewEnableVertexAttribAPPLE	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLENABLEVERTEXATTRIBAPPLEPROC __glewEnableVertexAttribAPPLE;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLENABLEVERTEXATTRIBAPPLEPROC
__glewEnableVertexAttribArray	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLENABLEVERTEXATTRIBARRAYPROC __glewEnableVertexAttribArray;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLENABLEVERTEXATTRIBARRAYPROC
__glewEnableVertexAttribArrayARB	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLENABLEVERTEXATTRIBARRAYARBPROC __glewEnableVertexAttribArrayARB;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLENABLEVERTEXATTRIBARRAYARBPROC
__glewEnablei	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLENABLEIPROC __glewEnablei;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLENABLEIPROC
__glewEnableiEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLENABLEIEXTPROC __glewEnableiEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLENABLEIEXTPROC
__glewEnableiNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLENABLEINVPROC __glewEnableiNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLENABLEINVPROC
__glewEnableiOES	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLENABLEIOESPROC __glewEnableiOES;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLENABLEIOESPROC
__glewEndConditionalRender	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLENDCONDITIONALRENDERPROC __glewEndConditionalRender;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLENDCONDITIONALRENDERPROC
__glewEndConditionalRenderNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLENDCONDITIONALRENDERNVPROC __glewEndConditionalRenderNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLENDCONDITIONALRENDERNVPROC
__glewEndConditionalRenderNVX	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLENDCONDITIONALRENDERNVXPROC __glewEndConditionalRenderNVX;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLENDCONDITIONALRENDERNVXPROC
__glewEndFragmentShaderATI	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLENDFRAGMENTSHADERATIPROC __glewEndFragmentShaderATI;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLENDFRAGMENTSHADERATIPROC
__glewEndOcclusionQueryNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLENDOCCLUSIONQUERYNVPROC __glewEndOcclusionQueryNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLENDOCCLUSIONQUERYNVPROC
__glewEndPerfMonitorAMD	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLENDPERFMONITORAMDPROC __glewEndPerfMonitorAMD;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLENDPERFMONITORAMDPROC
__glewEndPerfQueryINTEL	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLENDPERFQUERYINTELPROC __glewEndPerfQueryINTEL;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLENDPERFQUERYINTELPROC
__glewEndQuery	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLENDQUERYPROC __glewEndQuery;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLENDQUERYPROC
__glewEndQueryANGLE	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLENDQUERYANGLEPROC __glewEndQueryANGLE;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLENDQUERYANGLEPROC
__glewEndQueryARB	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLENDQUERYARBPROC __glewEndQueryARB;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLENDQUERYARBPROC
__glewEndQueryEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLENDQUERYEXTPROC __glewEndQueryEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLENDQUERYEXTPROC
__glewEndQueryIndexed	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLENDQUERYINDEXEDPROC __glewEndQueryIndexed;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLENDQUERYINDEXEDPROC
__glewEndSceneEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLENDSCENEEXTPROC __glewEndSceneEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLENDSCENEEXTPROC
__glewEndTilingQCOM	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLENDTILINGQCOMPROC __glewEndTilingQCOM;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLENDTILINGQCOMPROC
__glewEndTransformFeedback	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLENDTRANSFORMFEEDBACKPROC __glewEndTransformFeedback;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLENDTRANSFORMFEEDBACKPROC
__glewEndTransformFeedbackEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLENDTRANSFORMFEEDBACKEXTPROC __glewEndTransformFeedbackEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLENDTRANSFORMFEEDBACKEXTPROC
__glewEndTransformFeedbackNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLENDTRANSFORMFEEDBACKNVPROC __glewEndTransformFeedbackNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLENDTRANSFORMFEEDBACKNVPROC
__glewEndVertexShaderEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLENDVERTEXSHADEREXTPROC __glewEndVertexShaderEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLENDVERTEXSHADEREXTPROC
__glewEndVideoCaptureNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLENDVIDEOCAPTURENVPROC __glewEndVideoCaptureNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLENDVIDEOCAPTURENVPROC
__glewErrorStringREGAL	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLERRORSTRINGREGALPROC __glewErrorStringREGAL;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLERRORSTRINGREGALPROC
__glewEvalMapsNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLEVALMAPSNVPROC __glewEvalMapsNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLEVALMAPSNVPROC
__glewExecuteProgramNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLEXECUTEPROGRAMNVPROC __glewExecuteProgramNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLEXECUTEPROGRAMNVPROC
__glewExtGetBufferPointervQCOM	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLEXTGETBUFFERPOINTERVQCOMPROC __glewExtGetBufferPointervQCOM;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLEXTGETBUFFERPOINTERVQCOMPROC
__glewExtGetBuffersQCOM	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLEXTGETBUFFERSQCOMPROC __glewExtGetBuffersQCOM;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLEXTGETBUFFERSQCOMPROC
__glewExtGetFramebuffersQCOM	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLEXTGETFRAMEBUFFERSQCOMPROC __glewExtGetFramebuffersQCOM;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLEXTGETFRAMEBUFFERSQCOMPROC
__glewExtGetProgramBinarySourceQCOM	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLEXTGETPROGRAMBINARYSOURCEQCOMPROC __glewExtGetProgramBinarySourceQCOM;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLEXTGETPROGRAMBINARYSOURCEQCOMPROC
__glewExtGetProgramsQCOM	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLEXTGETPROGRAMSQCOMPROC __glewExtGetProgramsQCOM;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLEXTGETPROGRAMSQCOMPROC
__glewExtGetRenderbuffersQCOM	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLEXTGETRENDERBUFFERSQCOMPROC __glewExtGetRenderbuffersQCOM;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLEXTGETRENDERBUFFERSQCOMPROC
__glewExtGetShadersQCOM	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLEXTGETSHADERSQCOMPROC __glewExtGetShadersQCOM;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLEXTGETSHADERSQCOMPROC
__glewExtGetTexLevelParameterivQCOM	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLEXTGETTEXLEVELPARAMETERIVQCOMPROC __glewExtGetTexLevelParameterivQCOM;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLEXTGETTEXLEVELPARAMETERIVQCOMPROC
__glewExtGetTexSubImageQCOM	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLEXTGETTEXSUBIMAGEQCOMPROC __glewExtGetTexSubImageQCOM;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLEXTGETTEXSUBIMAGEQCOMPROC
__glewExtGetTexturesQCOM	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLEXTGETTEXTURESQCOMPROC __glewExtGetTexturesQCOM;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLEXTGETTEXTURESQCOMPROC
__glewExtIsProgramBinaryQCOM	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLEXTISPROGRAMBINARYQCOMPROC __glewExtIsProgramBinaryQCOM;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLEXTISPROGRAMBINARYQCOMPROC
__glewExtTexObjectStateOverrideiQCOM	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLEXTTEXOBJECTSTATEOVERRIDEIQCOMPROC __glewExtTexObjectStateOverrideiQCOM;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLEXTTEXOBJECTSTATEOVERRIDEIQCOMPROC
__glewExtractComponentEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLEXTRACTCOMPONENTEXTPROC __glewExtractComponentEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLEXTRACTCOMPONENTEXTPROC
__glewFenceSync	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLFENCESYNCPROC __glewFenceSync;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLFENCESYNCPROC
__glewFenceSyncAPPLE	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLFENCESYNCAPPLEPROC __glewFenceSyncAPPLE;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLFENCESYNCAPPLEPROC
__glewFinalCombinerInputNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLFINALCOMBINERINPUTNVPROC __glewFinalCombinerInputNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLFINALCOMBINERINPUTNVPROC
__glewFinishAsyncSGIX	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLFINISHASYNCSGIXPROC __glewFinishAsyncSGIX;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLFINISHASYNCSGIXPROC
__glewFinishFenceAPPLE	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLFINISHFENCEAPPLEPROC __glewFinishFenceAPPLE;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLFINISHFENCEAPPLEPROC
__glewFinishFenceNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLFINISHFENCENVPROC __glewFinishFenceNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLFINISHFENCENVPROC
__glewFinishObjectAPPLE	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLFINISHOBJECTAPPLEPROC __glewFinishObjectAPPLE;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLFINISHOBJECTAPPLEPROC
__glewFinishTextureSUNX	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLFINISHTEXTURESUNXPROC __glewFinishTextureSUNX;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLFINISHTEXTURESUNXPROC
__glewFlushMappedBufferRange	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLFLUSHMAPPEDBUFFERRANGEPROC __glewFlushMappedBufferRange;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLFLUSHMAPPEDBUFFERRANGEPROC
__glewFlushMappedBufferRangeAPPLE	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLFLUSHMAPPEDBUFFERRANGEAPPLEPROC __glewFlushMappedBufferRangeAPPLE;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLFLUSHMAPPEDBUFFERRANGEAPPLEPROC
__glewFlushMappedBufferRangeEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLFLUSHMAPPEDBUFFERRANGEEXTPROC __glewFlushMappedBufferRangeEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLFLUSHMAPPEDBUFFERRANGEEXTPROC
__glewFlushMappedNamedBufferRange	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLFLUSHMAPPEDNAMEDBUFFERRANGEPROC __glewFlushMappedNamedBufferRange;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLFLUSHMAPPEDNAMEDBUFFERRANGEPROC
__glewFlushMappedNamedBufferRangeEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLFLUSHMAPPEDNAMEDBUFFERRANGEEXTPROC __glewFlushMappedNamedBufferRangeEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLFLUSHMAPPEDNAMEDBUFFERRANGEEXTPROC
__glewFlushPixelDataRangeNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLFLUSHPIXELDATARANGENVPROC __glewFlushPixelDataRangeNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLFLUSHPIXELDATARANGENVPROC
__glewFlushRasterSGIX	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLFLUSHRASTERSGIXPROC __glewFlushRasterSGIX;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLFLUSHRASTERSGIXPROC
__glewFlushVertexArrayRangeAPPLE	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLFLUSHVERTEXARRAYRANGEAPPLEPROC __glewFlushVertexArrayRangeAPPLE;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLFLUSHVERTEXARRAYRANGEAPPLEPROC
__glewFlushVertexArrayRangeNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLFLUSHVERTEXARRAYRANGENVPROC __glewFlushVertexArrayRangeNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLFLUSHVERTEXARRAYRANGENVPROC
__glewFogCoordFormatNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLFOGCOORDFORMATNVPROC __glewFogCoordFormatNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLFOGCOORDFORMATNVPROC
__glewFogCoordPointer	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLFOGCOORDPOINTERPROC __glewFogCoordPointer;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLFOGCOORDPOINTERPROC
__glewFogCoordPointerEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLFOGCOORDPOINTEREXTPROC __glewFogCoordPointerEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLFOGCOORDPOINTEREXTPROC
__glewFogCoordPointerListIBM	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLFOGCOORDPOINTERLISTIBMPROC __glewFogCoordPointerListIBM;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLFOGCOORDPOINTERLISTIBMPROC
__glewFogCoordd	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLFOGCOORDDPROC __glewFogCoordd;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLFOGCOORDDPROC
__glewFogCoorddEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLFOGCOORDDEXTPROC __glewFogCoorddEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLFOGCOORDDEXTPROC
__glewFogCoorddv	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLFOGCOORDDVPROC __glewFogCoorddv;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLFOGCOORDDVPROC
__glewFogCoorddvEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLFOGCOORDDVEXTPROC __glewFogCoorddvEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLFOGCOORDDVEXTPROC
__glewFogCoordf	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLFOGCOORDFPROC __glewFogCoordf;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLFOGCOORDFPROC
__glewFogCoordfEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLFOGCOORDFEXTPROC __glewFogCoordfEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLFOGCOORDFEXTPROC
__glewFogCoordfv	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLFOGCOORDFVPROC __glewFogCoordfv;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLFOGCOORDFVPROC
__glewFogCoordfvEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLFOGCOORDFVEXTPROC __glewFogCoordfvEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLFOGCOORDFVEXTPROC
__glewFogCoordhNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLFOGCOORDHNVPROC __glewFogCoordhNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLFOGCOORDHNVPROC
__glewFogCoordhvNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLFOGCOORDHVNVPROC __glewFogCoordhvNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLFOGCOORDHVNVPROC
__glewFogFuncSGIS	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLFOGFUNCSGISPROC __glewFogFuncSGIS;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLFOGFUNCSGISPROC
__glewFogLayersSGIX	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLFOGLAYERSSGIXPROC __glewFogLayersSGIX;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLFOGLAYERSSGIXPROC
__glewFogx	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLFOGXPROC __glewFogx;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLFOGXPROC
__glewFogxv	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLFOGXVPROC __glewFogxv;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLFOGXVPROC
__glewFragmentColorMaterialEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLFRAGMENTCOLORMATERIALEXTPROC __glewFragmentColorMaterialEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLFRAGMENTCOLORMATERIALEXTPROC
__glewFragmentColorMaterialSGIX	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLFRAGMENTCOLORMATERIALSGIXPROC __glewFragmentColorMaterialSGIX;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLFRAGMENTCOLORMATERIALSGIXPROC
__glewFragmentCoverageColorNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLFRAGMENTCOVERAGECOLORNVPROC __glewFragmentCoverageColorNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLFRAGMENTCOVERAGECOLORNVPROC
__glewFragmentLightModelfEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLFRAGMENTLIGHTMODELFEXTPROC __glewFragmentLightModelfEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLFRAGMENTLIGHTMODELFEXTPROC
__glewFragmentLightModelfSGIX	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLFRAGMENTLIGHTMODELFSGIXPROC __glewFragmentLightModelfSGIX;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLFRAGMENTLIGHTMODELFSGIXPROC
__glewFragmentLightModelfvEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLFRAGMENTLIGHTMODELFVEXTPROC __glewFragmentLightModelfvEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLFRAGMENTLIGHTMODELFVEXTPROC
__glewFragmentLightModelfvSGIX	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLFRAGMENTLIGHTMODELFVSGIXPROC __glewFragmentLightModelfvSGIX;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLFRAGMENTLIGHTMODELFVSGIXPROC
__glewFragmentLightModeliEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLFRAGMENTLIGHTMODELIEXTPROC __glewFragmentLightModeliEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLFRAGMENTLIGHTMODELIEXTPROC
__glewFragmentLightModeliSGIX	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLFRAGMENTLIGHTMODELISGIXPROC __glewFragmentLightModeliSGIX;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLFRAGMENTLIGHTMODELISGIXPROC
__glewFragmentLightModelivEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLFRAGMENTLIGHTMODELIVEXTPROC __glewFragmentLightModelivEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLFRAGMENTLIGHTMODELIVEXTPROC
__glewFragmentLightModelivSGIX	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLFRAGMENTLIGHTMODELIVSGIXPROC __glewFragmentLightModelivSGIX;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLFRAGMENTLIGHTMODELIVSGIXPROC
__glewFragmentLightfEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLFRAGMENTLIGHTFEXTPROC __glewFragmentLightfEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLFRAGMENTLIGHTFEXTPROC
__glewFragmentLightfSGIX	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLFRAGMENTLIGHTFSGIXPROC __glewFragmentLightfSGIX;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLFRAGMENTLIGHTFSGIXPROC
__glewFragmentLightfvEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLFRAGMENTLIGHTFVEXTPROC __glewFragmentLightfvEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLFRAGMENTLIGHTFVEXTPROC
__glewFragmentLightfvSGIX	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLFRAGMENTLIGHTFVSGIXPROC __glewFragmentLightfvSGIX;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLFRAGMENTLIGHTFVSGIXPROC
__glewFragmentLightiEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLFRAGMENTLIGHTIEXTPROC __glewFragmentLightiEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLFRAGMENTLIGHTIEXTPROC
__glewFragmentLightiSGIX	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLFRAGMENTLIGHTISGIXPROC __glewFragmentLightiSGIX;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLFRAGMENTLIGHTISGIXPROC
__glewFragmentLightivEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLFRAGMENTLIGHTIVEXTPROC __glewFragmentLightivEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLFRAGMENTLIGHTIVEXTPROC
__glewFragmentLightivSGIX	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLFRAGMENTLIGHTIVSGIXPROC __glewFragmentLightivSGIX;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLFRAGMENTLIGHTIVSGIXPROC
__glewFragmentMaterialfEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLFRAGMENTMATERIALFEXTPROC __glewFragmentMaterialfEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLFRAGMENTMATERIALFEXTPROC
__glewFragmentMaterialfSGIX	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLFRAGMENTMATERIALFSGIXPROC __glewFragmentMaterialfSGIX;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLFRAGMENTMATERIALFSGIXPROC
__glewFragmentMaterialfvEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLFRAGMENTMATERIALFVEXTPROC __glewFragmentMaterialfvEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLFRAGMENTMATERIALFVEXTPROC
__glewFragmentMaterialfvSGIX	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLFRAGMENTMATERIALFVSGIXPROC __glewFragmentMaterialfvSGIX;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLFRAGMENTMATERIALFVSGIXPROC
__glewFragmentMaterialiEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLFRAGMENTMATERIALIEXTPROC __glewFragmentMaterialiEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLFRAGMENTMATERIALIEXTPROC
__glewFragmentMaterialiSGIX	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLFRAGMENTMATERIALISGIXPROC __glewFragmentMaterialiSGIX;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLFRAGMENTMATERIALISGIXPROC
__glewFragmentMaterialivEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLFRAGMENTMATERIALIVEXTPROC __glewFragmentMaterialivEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLFRAGMENTMATERIALIVEXTPROC
__glewFragmentMaterialivSGIX	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLFRAGMENTMATERIALIVSGIXPROC __glewFragmentMaterialivSGIX;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLFRAGMENTMATERIALIVSGIXPROC
__glewFrameTerminatorGREMEDY	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLFRAMETERMINATORGREMEDYPROC __glewFrameTerminatorGREMEDY;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLFRAMETERMINATORGREMEDYPROC
__glewFrameZoomSGIX	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLFRAMEZOOMSGIXPROC __glewFrameZoomSGIX;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLFRAMEZOOMSGIXPROC
__glewFramebufferDrawBufferEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLFRAMEBUFFERDRAWBUFFEREXTPROC __glewFramebufferDrawBufferEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLFRAMEBUFFERDRAWBUFFEREXTPROC
__glewFramebufferDrawBuffersEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLFRAMEBUFFERDRAWBUFFERSEXTPROC __glewFramebufferDrawBuffersEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLFRAMEBUFFERDRAWBUFFERSEXTPROC
__glewFramebufferFetchBarrierEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLFRAMEBUFFERFETCHBARRIEREXTPROC __glewFramebufferFetchBarrierEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLFRAMEBUFFERFETCHBARRIEREXTPROC
__glewFramebufferFetchBarrierQCOM	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLFRAMEBUFFERFETCHBARRIERQCOMPROC __glewFramebufferFetchBarrierQCOM;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLFRAMEBUFFERFETCHBARRIERQCOMPROC
__glewFramebufferFoveationConfigQCOM	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLFRAMEBUFFERFOVEATIONCONFIGQCOMPROC __glewFramebufferFoveationConfigQCOM;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLFRAMEBUFFERFOVEATIONCONFIGQCOMPROC
__glewFramebufferFoveationParametersQCOM	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLFRAMEBUFFERFOVEATIONPARAMETERSQCOMPROC __glewFramebufferFoveationParameters/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLFRAMEBUFFERFOVEATIONPARAMETERSQCOMPROC
__glewFramebufferParameteri	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLFRAMEBUFFERPARAMETERIPROC __glewFramebufferParameteri;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLFRAMEBUFFERPARAMETERIPROC
__glewFramebufferParameteriMESA	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLFRAMEBUFFERPARAMETERIMESAPROC __glewFramebufferParameteriMESA;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLFRAMEBUFFERPARAMETERIMESAPROC
__glewFramebufferPixelLocalStorageSizeEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLFRAMEBUFFERPIXELLOCALSTORAGESIZEEXTPROC __glewFramebufferPixelLocalStorageS/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLFRAMEBUFFERPIXELLOCALSTORAGESIZEEXTPROC
__glewFramebufferReadBufferEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLFRAMEBUFFERREADBUFFEREXTPROC __glewFramebufferReadBufferEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLFRAMEBUFFERREADBUFFEREXTPROC
__glewFramebufferRenderbuffer	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLFRAMEBUFFERRENDERBUFFERPROC __glewFramebufferRenderbuffer;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLFRAMEBUFFERRENDERBUFFERPROC
__glewFramebufferRenderbufferEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLFRAMEBUFFERRENDERBUFFEREXTPROC __glewFramebufferRenderbufferEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLFRAMEBUFFERRENDERBUFFEREXTPROC
__glewFramebufferRenderbufferOES	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLFRAMEBUFFERRENDERBUFFEROESPROC __glewFramebufferRenderbufferOES;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLFRAMEBUFFERRENDERBUFFEROESPROC
__glewFramebufferSampleLocationsfvARB	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLFRAMEBUFFERSAMPLELOCATIONSFVARBPROC __glewFramebufferSampleLocationsfvARB;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLFRAMEBUFFERSAMPLELOCATIONSFVARBPROC
__glewFramebufferSampleLocationsfvNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLFRAMEBUFFERSAMPLELOCATIONSFVNVPROC __glewFramebufferSampleLocationsfvNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLFRAMEBUFFERSAMPLELOCATIONSFVNVPROC
__glewFramebufferSamplePositionsfvAMD	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLFRAMEBUFFERSAMPLEPOSITIONSFVAMDPROC __glewFramebufferSamplePositionsfvAMD;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLFRAMEBUFFERSAMPLEPOSITIONSFVAMDPROC
__glewFramebufferTexture	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLFRAMEBUFFERTEXTUREPROC __glewFramebufferTexture;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLFRAMEBUFFERTEXTUREPROC
__glewFramebufferTexture1D	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLFRAMEBUFFERTEXTURE1DPROC __glewFramebufferTexture1D;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLFRAMEBUFFERTEXTURE1DPROC
__glewFramebufferTexture1DEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLFRAMEBUFFERTEXTURE1DEXTPROC __glewFramebufferTexture1DEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLFRAMEBUFFERTEXTURE1DEXTPROC
__glewFramebufferTexture2D	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLFRAMEBUFFERTEXTURE2DPROC __glewFramebufferTexture2D;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLFRAMEBUFFERTEXTURE2DPROC
__glewFramebufferTexture2DDownsampleIMG	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLFRAMEBUFFERTEXTURE2DDOWNSAMPLEIMGPROC __glewFramebufferTexture2DDownsampleI/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLFRAMEBUFFERTEXTURE2DDOWNSAMPLEIMGPROC
__glewFramebufferTexture2DEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLFRAMEBUFFERTEXTURE2DEXTPROC __glewFramebufferTexture2DEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLFRAMEBUFFERTEXTURE2DEXTPROC
__glewFramebufferTexture2DMultisampleEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLFRAMEBUFFERTEXTURE2DMULTISAMPLEEXTPROC __glewFramebufferTexture2DMultisampl/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLFRAMEBUFFERTEXTURE2DMULTISAMPLEEXTPROC
__glewFramebufferTexture2DMultisampleIMG	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLFRAMEBUFFERTEXTURE2DMULTISAMPLEIMGPROC __glewFramebufferTexture2DMultisampl/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLFRAMEBUFFERTEXTURE2DMULTISAMPLEIMGPROC
__glewFramebufferTexture2DOES	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLFRAMEBUFFERTEXTURE2DOESPROC __glewFramebufferTexture2DOES;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLFRAMEBUFFERTEXTURE2DOESPROC
__glewFramebufferTexture3D	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLFRAMEBUFFERTEXTURE3DPROC __glewFramebufferTexture3D;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLFRAMEBUFFERTEXTURE3DPROC
__glewFramebufferTexture3DEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLFRAMEBUFFERTEXTURE3DEXTPROC __glewFramebufferTexture3DEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLFRAMEBUFFERTEXTURE3DEXTPROC
__glewFramebufferTexture3DOES	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLFRAMEBUFFERTEXTURE3DOESPROC __glewFramebufferTexture3DOES;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLFRAMEBUFFERTEXTURE3DOESPROC
__glewFramebufferTextureARB	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLFRAMEBUFFERTEXTUREARBPROC __glewFramebufferTextureARB;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLFRAMEBUFFERTEXTUREARBPROC
__glewFramebufferTextureEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLFRAMEBUFFERTEXTUREEXTPROC __glewFramebufferTextureEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLFRAMEBUFFERTEXTUREEXTPROC
__glewFramebufferTextureFaceARB	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLFRAMEBUFFERTEXTUREFACEARBPROC __glewFramebufferTextureFaceARB;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLFRAMEBUFFERTEXTUREFACEARBPROC
__glewFramebufferTextureFaceEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLFRAMEBUFFERTEXTUREFACEEXTPROC __glewFramebufferTextureFaceEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLFRAMEBUFFERTEXTUREFACEEXTPROC
__glewFramebufferTextureLayer	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLFRAMEBUFFERTEXTURELAYERPROC __glewFramebufferTextureLayer;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLFRAMEBUFFERTEXTURELAYERPROC
__glewFramebufferTextureLayerARB	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLFRAMEBUFFERTEXTURELAYERARBPROC __glewFramebufferTextureLayerARB;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLFRAMEBUFFERTEXTURELAYERARBPROC
__glewFramebufferTextureLayerDownsampleIMG	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLFRAMEBUFFERTEXTURELAYERDOWNSAMPLEIMGPROC __glewFramebufferTextureLayerDowns/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLFRAMEBUFFERTEXTURELAYERDOWNSAMPLEIMGPROC
__glewFramebufferTextureLayerEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLFRAMEBUFFERTEXTURELAYEREXTPROC __glewFramebufferTextureLayerEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLFRAMEBUFFERTEXTURELAYEREXTPROC
__glewFramebufferTextureLayerNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLFRAMEBUFFERTEXTURELAYERNVPROC __glewFramebufferTextureLayerNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLFRAMEBUFFERTEXTURELAYERNVPROC
__glewFramebufferTextureMultisampleMultiviewOVR	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLFRAMEBUFFERTEXTUREMULTISAMPLEMULTIVIEWOVRPROC __glewFramebufferTextureMulti/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLFRAMEBUFFERTEXTUREMULTISAMPLEMULTIVIEWOVRPROC
__glewFramebufferTextureMultiviewOVR	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLFRAMEBUFFERTEXTUREMULTIVIEWOVRPROC __glewFramebufferTextureMultiviewOVR;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLFRAMEBUFFERTEXTUREMULTIVIEWOVRPROC
__glewFreeObjectBufferATI	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLFREEOBJECTBUFFERATIPROC __glewFreeObjectBufferATI;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLFREEOBJECTBUFFERATIPROC
__glewFrustumf	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLFRUSTUMFPROC __glewFrustumf;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLFRUSTUMFPROC
__glewFrustumfOES	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLFRUSTUMFOESPROC __glewFrustumfOES;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLFRUSTUMFOESPROC
__glewFrustumx	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLFRUSTUMXPROC __glewFrustumx;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLFRUSTUMXPROC
__glewGenAsyncMarkersSGIX	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGENASYNCMARKERSSGIXPROC __glewGenAsyncMarkersSGIX;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGENASYNCMARKERSSGIXPROC
__glewGenBuffers	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGENBUFFERSPROC __glewGenBuffers;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGENBUFFERSPROC
__glewGenBuffersARB	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGENBUFFERSARBPROC __glewGenBuffersARB;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGENBUFFERSARBPROC
__glewGenFencesAPPLE	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGENFENCESAPPLEPROC __glewGenFencesAPPLE;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGENFENCESAPPLEPROC
__glewGenFencesNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGENFENCESNVPROC __glewGenFencesNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGENFENCESNVPROC
__glewGenFragmentShadersATI	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGENFRAGMENTSHADERSATIPROC __glewGenFragmentShadersATI;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGENFRAGMENTSHADERSATIPROC
__glewGenFramebuffers	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGENFRAMEBUFFERSPROC __glewGenFramebuffers;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGENFRAMEBUFFERSPROC
__glewGenFramebuffersEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGENFRAMEBUFFERSEXTPROC __glewGenFramebuffersEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGENFRAMEBUFFERSEXTPROC
__glewGenFramebuffersOES	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGENFRAMEBUFFERSOESPROC __glewGenFramebuffersOES;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGENFRAMEBUFFERSOESPROC
__glewGenMPEGPredictorsSGIX	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGENMPEGPREDICTORSSGIXPROC __glewGenMPEGPredictorsSGIX;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGENMPEGPREDICTORSSGIXPROC
__glewGenNamesAMD	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGENNAMESAMDPROC __glewGenNamesAMD;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGENNAMESAMDPROC
__glewGenOcclusionQueriesNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGENOCCLUSIONQUERIESNVPROC __glewGenOcclusionQueriesNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGENOCCLUSIONQUERIESNVPROC
__glewGenPathsNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGENPATHSNVPROC __glewGenPathsNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGENPATHSNVPROC
__glewGenPerfMonitorsAMD	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGENPERFMONITORSAMDPROC __glewGenPerfMonitorsAMD;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGENPERFMONITORSAMDPROC
__glewGenProgramPipelines	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGENPROGRAMPIPELINESPROC __glewGenProgramPipelines;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGENPROGRAMPIPELINESPROC
__glewGenProgramsARB	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGENPROGRAMSARBPROC __glewGenProgramsARB;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGENPROGRAMSARBPROC
__glewGenProgramsNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGENPROGRAMSNVPROC __glewGenProgramsNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGENPROGRAMSNVPROC
__glewGenQueries	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGENQUERIESPROC __glewGenQueries;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGENQUERIESPROC
__glewGenQueriesANGLE	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGENQUERIESANGLEPROC __glewGenQueriesANGLE;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGENQUERIESANGLEPROC
__glewGenQueriesARB	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGENQUERIESARBPROC __glewGenQueriesARB;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGENQUERIESARBPROC
__glewGenQueriesEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGENQUERIESEXTPROC __glewGenQueriesEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGENQUERIESEXTPROC
__glewGenRenderbuffers	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGENRENDERBUFFERSPROC __glewGenRenderbuffers;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGENRENDERBUFFERSPROC
__glewGenRenderbuffersEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGENRENDERBUFFERSEXTPROC __glewGenRenderbuffersEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGENRENDERBUFFERSEXTPROC
__glewGenRenderbuffersOES	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGENRENDERBUFFERSOESPROC __glewGenRenderbuffersOES;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGENRENDERBUFFERSOESPROC
__glewGenSamplers	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGENSAMPLERSPROC __glewGenSamplers;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGENSAMPLERSPROC
__glewGenSemaphoresEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGENSEMAPHORESEXTPROC __glewGenSemaphoresEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGENSEMAPHORESEXTPROC
__glewGenSymbolsEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGENSYMBOLSEXTPROC __glewGenSymbolsEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGENSYMBOLSEXTPROC
__glewGenTexturesEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGENTEXTURESEXTPROC __glewGenTexturesEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGENTEXTURESEXTPROC
__glewGenTransformFeedbacks	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGENTRANSFORMFEEDBACKSPROC __glewGenTransformFeedbacks;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGENTRANSFORMFEEDBACKSPROC
__glewGenTransformFeedbacksNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGENTRANSFORMFEEDBACKSNVPROC __glewGenTransformFeedbacksNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGENTRANSFORMFEEDBACKSNVPROC
__glewGenVertexArrays	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGENVERTEXARRAYSPROC __glewGenVertexArrays;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGENVERTEXARRAYSPROC
__glewGenVertexArraysAPPLE	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGENVERTEXARRAYSAPPLEPROC __glewGenVertexArraysAPPLE;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGENVERTEXARRAYSAPPLEPROC
__glewGenVertexArraysOES	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGENVERTEXARRAYSOESPROC __glewGenVertexArraysOES;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGENVERTEXARRAYSOESPROC
__glewGenVertexArraysSGIX	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGENVERTEXARRAYSSGIXPROC __glewGenVertexArraysSGIX;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGENVERTEXARRAYSSGIXPROC
__glewGenVertexShadersEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGENVERTEXSHADERSEXTPROC __glewGenVertexShadersEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGENVERTEXSHADERSEXTPROC
__glewGenerateMipmap	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGENERATEMIPMAPPROC __glewGenerateMipmap;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGENERATEMIPMAPPROC
__glewGenerateMipmapEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGENERATEMIPMAPEXTPROC __glewGenerateMipmapEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGENERATEMIPMAPEXTPROC
__glewGenerateMipmapOES	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGENERATEMIPMAPOESPROC __glewGenerateMipmapOES;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGENERATEMIPMAPOESPROC
__glewGenerateMultiTexMipmapEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGENERATEMULTITEXMIPMAPEXTPROC __glewGenerateMultiTexMipmapEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGENERATEMULTITEXMIPMAPEXTPROC
__glewGenerateTextureMipmap	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGENERATETEXTUREMIPMAPPROC __glewGenerateTextureMipmap;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGENERATETEXTUREMIPMAPPROC
__glewGenerateTextureMipmapEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGENERATETEXTUREMIPMAPEXTPROC __glewGenerateTextureMipmapEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGENERATETEXTUREMIPMAPEXTPROC
__glewGetActiveAtomicCounterBufferiv	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGETACTIVEATOMICCOUNTERBUFFERIVPROC __glewGetActiveAtomicCounterBufferiv;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGETACTIVEATOMICCOUNTERBUFFERIVPROC
__glewGetActiveAttrib	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGETACTIVEATTRIBPROC __glewGetActiveAttrib;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGETACTIVEATTRIBPROC
__glewGetActiveAttribARB	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGETACTIVEATTRIBARBPROC __glewGetActiveAttribARB;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGETACTIVEATTRIBARBPROC
__glewGetActiveSubroutineName	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGETACTIVESUBROUTINENAMEPROC __glewGetActiveSubroutineName;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGETACTIVESUBROUTINENAMEPROC
__glewGetActiveSubroutineUniformName	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGETACTIVESUBROUTINEUNIFORMNAMEPROC __glewGetActiveSubroutineUniformName;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGETACTIVESUBROUTINEUNIFORMNAMEPROC
__glewGetActiveSubroutineUniformiv	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGETACTIVESUBROUTINEUNIFORMIVPROC __glewGetActiveSubroutineUniformiv;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGETACTIVESUBROUTINEUNIFORMIVPROC
__glewGetActiveUniform	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGETACTIVEUNIFORMPROC __glewGetActiveUniform;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGETACTIVEUNIFORMPROC
__glewGetActiveUniformARB	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGETACTIVEUNIFORMARBPROC __glewGetActiveUniformARB;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGETACTIVEUNIFORMARBPROC
__glewGetActiveUniformBlockName	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGETACTIVEUNIFORMBLOCKNAMEPROC __glewGetActiveUniformBlockName;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGETACTIVEUNIFORMBLOCKNAMEPROC
__glewGetActiveUniformBlockiv	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGETACTIVEUNIFORMBLOCKIVPROC __glewGetActiveUniformBlockiv;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGETACTIVEUNIFORMBLOCKIVPROC
__glewGetActiveUniformName	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGETACTIVEUNIFORMNAMEPROC __glewGetActiveUniformName;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGETACTIVEUNIFORMNAMEPROC
__glewGetActiveUniformsiv	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGETACTIVEUNIFORMSIVPROC __glewGetActiveUniformsiv;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGETACTIVEUNIFORMSIVPROC
__glewGetActiveVaryingNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGETACTIVEVARYINGNVPROC __glewGetActiveVaryingNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGETACTIVEVARYINGNVPROC
__glewGetArrayObjectfvATI	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGETARRAYOBJECTFVATIPROC __glewGetArrayObjectfvATI;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGETARRAYOBJECTFVATIPROC
__glewGetArrayObjectivATI	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGETARRAYOBJECTIVATIPROC __glewGetArrayObjectivATI;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGETARRAYOBJECTIVATIPROC
__glewGetAttachedObjectsARB	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGETATTACHEDOBJECTSARBPROC __glewGetAttachedObjectsARB;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGETATTACHEDOBJECTSARBPROC
__glewGetAttachedShaders	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGETATTACHEDSHADERSPROC __glewGetAttachedShaders;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGETATTACHEDSHADERSPROC
__glewGetAttribLocation	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGETATTRIBLOCATIONPROC __glewGetAttribLocation;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGETATTRIBLOCATIONPROC
__glewGetAttribLocationARB	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGETATTRIBLOCATIONARBPROC __glewGetAttribLocationARB;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGETATTRIBLOCATIONARBPROC
__glewGetBooleanIndexedvEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGETBOOLEANINDEXEDVEXTPROC __glewGetBooleanIndexedvEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGETBOOLEANINDEXEDVEXTPROC
__glewGetBooleani_v	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGETBOOLEANI_VPROC __glewGetBooleani_v;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGETBOOLEANI_VPROC
__glewGetBufferParameteri64v	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGETBUFFERPARAMETERI64VPROC __glewGetBufferParameteri64v;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGETBUFFERPARAMETERI64VPROC
__glewGetBufferParameteriv	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGETBUFFERPARAMETERIVPROC __glewGetBufferParameteriv;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGETBUFFERPARAMETERIVPROC
__glewGetBufferParameterivARB	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGETBUFFERPARAMETERIVARBPROC __glewGetBufferParameterivARB;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGETBUFFERPARAMETERIVARBPROC
__glewGetBufferParameterui64vNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGETBUFFERPARAMETERUI64VNVPROC __glewGetBufferParameterui64vNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGETBUFFERPARAMETERUI64VNVPROC
__glewGetBufferPointerv	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGETBUFFERPOINTERVPROC __glewGetBufferPointerv;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGETBUFFERPOINTERVPROC
__glewGetBufferPointervARB	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGETBUFFERPOINTERVARBPROC __glewGetBufferPointervARB;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGETBUFFERPOINTERVARBPROC
__glewGetBufferPointervOES	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGETBUFFERPOINTERVOESPROC __glewGetBufferPointervOES;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGETBUFFERPOINTERVOESPROC
__glewGetBufferSubData	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGETBUFFERSUBDATAPROC __glewGetBufferSubData;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGETBUFFERSUBDATAPROC
__glewGetBufferSubDataARB	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGETBUFFERSUBDATAARBPROC __glewGetBufferSubDataARB;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGETBUFFERSUBDATAARBPROC
__glewGetClipPlanef	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGETCLIPPLANEFPROC __glewGetClipPlanef;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGETCLIPPLANEFPROC
__glewGetClipPlanefOES	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGETCLIPPLANEFOESPROC __glewGetClipPlanefOES;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGETCLIPPLANEFOESPROC
__glewGetClipPlanex	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGETCLIPPLANEXPROC __glewGetClipPlanex;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGETCLIPPLANEXPROC
__glewGetColorTable	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGETCOLORTABLEPROC __glewGetColorTable;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGETCOLORTABLEPROC
__glewGetColorTableEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGETCOLORTABLEEXTPROC __glewGetColorTableEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGETCOLORTABLEEXTPROC
__glewGetColorTableParameterfv	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGETCOLORTABLEPARAMETERFVPROC __glewGetColorTableParameterfv;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGETCOLORTABLEPARAMETERFVPROC
__glewGetColorTableParameterfvEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGETCOLORTABLEPARAMETERFVEXTPROC __glewGetColorTableParameterfvEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGETCOLORTABLEPARAMETERFVEXTPROC
__glewGetColorTableParameterfvSGI	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGETCOLORTABLEPARAMETERFVSGIPROC __glewGetColorTableParameterfvSGI;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGETCOLORTABLEPARAMETERFVSGIPROC
__glewGetColorTableParameteriv	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGETCOLORTABLEPARAMETERIVPROC __glewGetColorTableParameteriv;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGETCOLORTABLEPARAMETERIVPROC
__glewGetColorTableParameterivEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGETCOLORTABLEPARAMETERIVEXTPROC __glewGetColorTableParameterivEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGETCOLORTABLEPARAMETERIVEXTPROC
__glewGetColorTableParameterivSGI	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGETCOLORTABLEPARAMETERIVSGIPROC __glewGetColorTableParameterivSGI;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGETCOLORTABLEPARAMETERIVSGIPROC
__glewGetColorTableSGI	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGETCOLORTABLESGIPROC __glewGetColorTableSGI;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGETCOLORTABLESGIPROC
__glewGetCombinerInputParameterfvNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGETCOMBINERINPUTPARAMETERFVNVPROC __glewGetCombinerInputParameterfvNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGETCOMBINERINPUTPARAMETERFVNVPROC
__glewGetCombinerInputParameterivNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGETCOMBINERINPUTPARAMETERIVNVPROC __glewGetCombinerInputParameterivNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGETCOMBINERINPUTPARAMETERIVNVPROC
__glewGetCombinerOutputParameterfvNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGETCOMBINEROUTPUTPARAMETERFVNVPROC __glewGetCombinerOutputParameterfvNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGETCOMBINEROUTPUTPARAMETERFVNVPROC
__glewGetCombinerOutputParameterivNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGETCOMBINEROUTPUTPARAMETERIVNVPROC __glewGetCombinerOutputParameterivNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGETCOMBINEROUTPUTPARAMETERIVNVPROC
__glewGetCombinerStageParameterfvNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGETCOMBINERSTAGEPARAMETERFVNVPROC __glewGetCombinerStageParameterfvNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGETCOMBINERSTAGEPARAMETERFVNVPROC
__glewGetCommandHeaderNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGETCOMMANDHEADERNVPROC __glewGetCommandHeaderNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGETCOMMANDHEADERNVPROC
__glewGetCompressedMultiTexImageEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGETCOMPRESSEDMULTITEXIMAGEEXTPROC __glewGetCompressedMultiTexImageEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGETCOMPRESSEDMULTITEXIMAGEEXTPROC
__glewGetCompressedTexImage	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGETCOMPRESSEDTEXIMAGEPROC __glewGetCompressedTexImage;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGETCOMPRESSEDTEXIMAGEPROC
__glewGetCompressedTexImageARB	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGETCOMPRESSEDTEXIMAGEARBPROC __glewGetCompressedTexImageARB;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGETCOMPRESSEDTEXIMAGEARBPROC
__glewGetCompressedTextureImage	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGETCOMPRESSEDTEXTUREIMAGEPROC __glewGetCompressedTextureImage;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGETCOMPRESSEDTEXTUREIMAGEPROC
__glewGetCompressedTextureImageEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGETCOMPRESSEDTEXTUREIMAGEEXTPROC __glewGetCompressedTextureImageEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGETCOMPRESSEDTEXTUREIMAGEEXTPROC
__glewGetCompressedTextureSubImage	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGETCOMPRESSEDTEXTURESUBIMAGEPROC __glewGetCompressedTextureSubImage;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGETCOMPRESSEDTEXTURESUBIMAGEPROC
__glewGetConvolutionFilter	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGETCONVOLUTIONFILTERPROC __glewGetConvolutionFilter;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGETCONVOLUTIONFILTERPROC
__glewGetConvolutionFilterEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGETCONVOLUTIONFILTEREXTPROC __glewGetConvolutionFilterEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGETCONVOLUTIONFILTEREXTPROC
__glewGetConvolutionParameterfv	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGETCONVOLUTIONPARAMETERFVPROC __glewGetConvolutionParameterfv;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGETCONVOLUTIONPARAMETERFVPROC
__glewGetConvolutionParameterfvEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGETCONVOLUTIONPARAMETERFVEXTPROC __glewGetConvolutionParameterfvEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGETCONVOLUTIONPARAMETERFVEXTPROC
__glewGetConvolutionParameteriv	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGETCONVOLUTIONPARAMETERIVPROC __glewGetConvolutionParameteriv;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGETCONVOLUTIONPARAMETERIVPROC
__glewGetConvolutionParameterivEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGETCONVOLUTIONPARAMETERIVEXTPROC __glewGetConvolutionParameterivEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGETCONVOLUTIONPARAMETERIVEXTPROC
__glewGetCoverageModulationTableNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGETCOVERAGEMODULATIONTABLENVPROC __glewGetCoverageModulationTableNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGETCOVERAGEMODULATIONTABLENVPROC
__glewGetDebugMessageLog	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGETDEBUGMESSAGELOGPROC __glewGetDebugMessageLog;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGETDEBUGMESSAGELOGPROC
__glewGetDebugMessageLogAMD	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGETDEBUGMESSAGELOGAMDPROC __glewGetDebugMessageLogAMD;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGETDEBUGMESSAGELOGAMDPROC
__glewGetDebugMessageLogARB	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGETDEBUGMESSAGELOGARBPROC __glewGetDebugMessageLogARB;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGETDEBUGMESSAGELOGARBPROC
__glewGetDetailTexFuncSGIS	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGETDETAILTEXFUNCSGISPROC __glewGetDetailTexFuncSGIS;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGETDETAILTEXFUNCSGISPROC
__glewGetDoubleIndexedvEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGETDOUBLEINDEXEDVEXTPROC __glewGetDoubleIndexedvEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGETDOUBLEINDEXEDVEXTPROC
__glewGetDoublei_v	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGETDOUBLEI_VPROC __glewGetDoublei_v;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGETDOUBLEI_VPROC
__glewGetDoublei_vEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGETDOUBLEI_VEXTPROC __glewGetDoublei_vEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGETDOUBLEI_VEXTPROC
__glewGetDriverControlStringQCOM	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGETDRIVERCONTROLSTRINGQCOMPROC __glewGetDriverControlStringQCOM;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGETDRIVERCONTROLSTRINGQCOMPROC
__glewGetDriverControlsQCOM	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGETDRIVERCONTROLSQCOMPROC __glewGetDriverControlsQCOM;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGETDRIVERCONTROLSQCOMPROC
__glewGetExtensionREGAL	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGETEXTENSIONREGALPROC __glewGetExtensionREGAL;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGETEXTENSIONREGALPROC
__glewGetFenceivNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGETFENCEIVNVPROC __glewGetFenceivNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGETFENCEIVNVPROC
__glewGetFinalCombinerInputParameterfvNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGETFINALCOMBINERINPUTPARAMETERFVNVPROC __glewGetFinalCombinerInputParameter/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGETFINALCOMBINERINPUTPARAMETERFVNVPROC
__glewGetFinalCombinerInputParameterivNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGETFINALCOMBINERINPUTPARAMETERIVNVPROC __glewGetFinalCombinerInputParameter/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGETFINALCOMBINERINPUTPARAMETERIVNVPROC
__glewGetFirstPerfQueryIdINTEL	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGETFIRSTPERFQUERYIDINTELPROC __glewGetFirstPerfQueryIdINTEL;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGETFIRSTPERFQUERYIDINTELPROC
__glewGetFixedv	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGETFIXEDVPROC __glewGetFixedv;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGETFIXEDVPROC
__glewGetFloatIndexedvEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGETFLOATINDEXEDVEXTPROC __glewGetFloatIndexedvEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGETFLOATINDEXEDVEXTPROC
__glewGetFloati_v	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGETFLOATI_VPROC __glewGetFloati_v;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGETFLOATI_VPROC
__glewGetFloati_vEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGETFLOATI_VEXTPROC __glewGetFloati_vEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGETFLOATI_VEXTPROC
__glewGetFloati_vNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGETFLOATI_VNVPROC __glewGetFloati_vNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGETFLOATI_VNVPROC
__glewGetFogFuncSGIS	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGETFOGFUNCSGISPROC __glewGetFogFuncSGIS;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGETFOGFUNCSGISPROC
__glewGetFogLayersSGIX	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGETFOGLAYERSSGIXPROC __glewGetFogLayersSGIX;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGETFOGLAYERSSGIXPROC
__glewGetFragDataIndex	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGETFRAGDATAINDEXPROC __glewGetFragDataIndex;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGETFRAGDATAINDEXPROC
__glewGetFragDataIndexEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGETFRAGDATAINDEXEXTPROC __glewGetFragDataIndexEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGETFRAGDATAINDEXEXTPROC
__glewGetFragDataLocation	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGETFRAGDATALOCATIONPROC __glewGetFragDataLocation;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGETFRAGDATALOCATIONPROC
__glewGetFragDataLocationEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGETFRAGDATALOCATIONEXTPROC __glewGetFragDataLocationEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGETFRAGDATALOCATIONEXTPROC
__glewGetFragmentLightfvEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGETFRAGMENTLIGHTFVEXTPROC __glewGetFragmentLightfvEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGETFRAGMENTLIGHTFVEXTPROC
__glewGetFragmentLightfvSGIX	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGETFRAGMENTLIGHTFVSGIXPROC __glewGetFragmentLightfvSGIX;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGETFRAGMENTLIGHTFVSGIXPROC
__glewGetFragmentLightivEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGETFRAGMENTLIGHTIVEXTPROC __glewGetFragmentLightivEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGETFRAGMENTLIGHTIVEXTPROC
__glewGetFragmentLightivSGIX	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGETFRAGMENTLIGHTIVSGIXPROC __glewGetFragmentLightivSGIX;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGETFRAGMENTLIGHTIVSGIXPROC
__glewGetFragmentMaterialfvEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGETFRAGMENTMATERIALFVEXTPROC __glewGetFragmentMaterialfvEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGETFRAGMENTMATERIALFVEXTPROC
__glewGetFragmentMaterialfvSGIX	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGETFRAGMENTMATERIALFVSGIXPROC __glewGetFragmentMaterialfvSGIX;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGETFRAGMENTMATERIALFVSGIXPROC
__glewGetFragmentMaterialivEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGETFRAGMENTMATERIALIVEXTPROC __glewGetFragmentMaterialivEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGETFRAGMENTMATERIALIVEXTPROC
__glewGetFragmentMaterialivSGIX	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGETFRAGMENTMATERIALIVSGIXPROC __glewGetFragmentMaterialivSGIX;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGETFRAGMENTMATERIALIVSGIXPROC
__glewGetFramebufferAttachmentParameteriv	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGETFRAMEBUFFERATTACHMENTPARAMETERIVPROC __glewGetFramebufferAttachmentParam/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGETFRAMEBUFFERATTACHMENTPARAMETERIVPROC
__glewGetFramebufferAttachmentParameterivEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGETFRAMEBUFFERATTACHMENTPARAMETERIVEXTPROC __glewGetFramebufferAttachmentPa/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGETFRAMEBUFFERATTACHMENTPARAMETERIVEXTPROC
__glewGetFramebufferAttachmentParameterivOES	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGETFRAMEBUFFERATTACHMENTPARAMETERIVOESPROC __glewGetFramebufferAttachmentPa/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGETFRAMEBUFFERATTACHMENTPARAMETERIVOESPROC
__glewGetFramebufferParameterfvAMD	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGETFRAMEBUFFERPARAMETERFVAMDPROC __glewGetFramebufferParameterfvAMD;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGETFRAMEBUFFERPARAMETERFVAMDPROC
__glewGetFramebufferParameteriv	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGETFRAMEBUFFERPARAMETERIVPROC __glewGetFramebufferParameteriv;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGETFRAMEBUFFERPARAMETERIVPROC
__glewGetFramebufferParameterivEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGETFRAMEBUFFERPARAMETERIVEXTPROC __glewGetFramebufferParameterivEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGETFRAMEBUFFERPARAMETERIVEXTPROC
__glewGetFramebufferParameterivMESA	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGETFRAMEBUFFERPARAMETERIVMESAPROC __glewGetFramebufferParameterivMESA;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGETFRAMEBUFFERPARAMETERIVMESAPROC
__glewGetFramebufferPixelLocalStorageSizeEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGETFRAMEBUFFERPIXELLOCALSTORAGESIZEEXTPROC __glewGetFramebufferPixelLocalSt/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGETFRAMEBUFFERPIXELLOCALSTORAGESIZEEXTPROC
__glewGetGraphicsResetStatus	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGETGRAPHICSRESETSTATUSPROC __glewGetGraphicsResetStatus;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGETGRAPHICSRESETSTATUSPROC
__glewGetGraphicsResetStatusARB	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGETGRAPHICSRESETSTATUSARBPROC __glewGetGraphicsResetStatusARB;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGETGRAPHICSRESETSTATUSARBPROC
__glewGetHandleARB	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGETHANDLEARBPROC __glewGetHandleARB;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGETHANDLEARBPROC
__glewGetHistogram	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGETHISTOGRAMPROC __glewGetHistogram;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGETHISTOGRAMPROC
__glewGetHistogramEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGETHISTOGRAMEXTPROC __glewGetHistogramEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGETHISTOGRAMEXTPROC
__glewGetHistogramParameterfv	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGETHISTOGRAMPARAMETERFVPROC __glewGetHistogramParameterfv;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGETHISTOGRAMPARAMETERFVPROC
__glewGetHistogramParameterfvEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGETHISTOGRAMPARAMETERFVEXTPROC __glewGetHistogramParameterfvEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGETHISTOGRAMPARAMETERFVEXTPROC
__glewGetHistogramParameteriv	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGETHISTOGRAMPARAMETERIVPROC __glewGetHistogramParameteriv;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGETHISTOGRAMPARAMETERIVPROC
__glewGetHistogramParameterivEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGETHISTOGRAMPARAMETERIVEXTPROC __glewGetHistogramParameterivEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGETHISTOGRAMPARAMETERIVEXTPROC
__glewGetImageHandleARB	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGETIMAGEHANDLEARBPROC __glewGetImageHandleARB;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGETIMAGEHANDLEARBPROC
__glewGetImageHandleNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGETIMAGEHANDLENVPROC __glewGetImageHandleNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGETIMAGEHANDLENVPROC
__glewGetImageTransformParameterfvHP	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGETIMAGETRANSFORMPARAMETERFVHPPROC __glewGetImageTransformParameterfvHP;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGETIMAGETRANSFORMPARAMETERFVHPPROC
__glewGetImageTransformParameterivHP	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGETIMAGETRANSFORMPARAMETERIVHPPROC __glewGetImageTransformParameterivHP;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGETIMAGETRANSFORMPARAMETERIVHPPROC
__glewGetInfoLogARB	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGETINFOLOGARBPROC __glewGetInfoLogARB;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGETINFOLOGARBPROC
__glewGetInteger64i_v	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGETINTEGER64I_VPROC __glewGetInteger64i_v;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGETINTEGER64I_VPROC
__glewGetInteger64v	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGETINTEGER64VPROC __glewGetInteger64v;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGETINTEGER64VPROC
__glewGetInteger64vAPPLE	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGETINTEGER64VAPPLEPROC __glewGetInteger64vAPPLE;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGETINTEGER64VAPPLEPROC
__glewGetInteger64vEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGETINTEGER64VEXTPROC __glewGetInteger64vEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGETINTEGER64VEXTPROC
__glewGetIntegerIndexedvEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGETINTEGERINDEXEDVEXTPROC __glewGetIntegerIndexedvEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGETINTEGERINDEXEDVEXTPROC
__glewGetIntegeri_v	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGETINTEGERI_VPROC __glewGetIntegeri_v;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGETINTEGERI_VPROC
__glewGetIntegeri_vEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGETINTEGERI_VEXTPROC __glewGetIntegeri_vEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGETINTEGERI_VEXTPROC
__glewGetIntegerui64i_vNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGETINTEGERUI64I_VNVPROC __glewGetIntegerui64i_vNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGETINTEGERUI64I_VNVPROC
__glewGetIntegerui64vNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGETINTEGERUI64VNVPROC __glewGetIntegerui64vNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGETINTEGERUI64VNVPROC
__glewGetInternalformatSampleivNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGETINTERNALFORMATSAMPLEIVNVPROC __glewGetInternalformatSampleivNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGETINTERNALFORMATSAMPLEIVNVPROC
__glewGetInternalformati64v	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGETINTERNALFORMATI64VPROC __glewGetInternalformati64v;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGETINTERNALFORMATI64VPROC
__glewGetInternalformativ	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGETINTERNALFORMATIVPROC __glewGetInternalformativ;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGETINTERNALFORMATIVPROC
__glewGetInvariantBooleanvEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGETINVARIANTBOOLEANVEXTPROC __glewGetInvariantBooleanvEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGETINVARIANTBOOLEANVEXTPROC
__glewGetInvariantFloatvEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGETINVARIANTFLOATVEXTPROC __glewGetInvariantFloatvEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGETINVARIANTFLOATVEXTPROC
__glewGetInvariantIntegervEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGETINVARIANTINTEGERVEXTPROC __glewGetInvariantIntegervEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGETINVARIANTINTEGERVEXTPROC
__glewGetLightxv	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGETLIGHTXVPROC __glewGetLightxv;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGETLIGHTXVPROC
__glewGetLocalConstantBooleanvEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGETLOCALCONSTANTBOOLEANVEXTPROC __glewGetLocalConstantBooleanvEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGETLOCALCONSTANTBOOLEANVEXTPROC
__glewGetLocalConstantFloatvEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGETLOCALCONSTANTFLOATVEXTPROC __glewGetLocalConstantFloatvEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGETLOCALCONSTANTFLOATVEXTPROC
__glewGetLocalConstantIntegervEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGETLOCALCONSTANTINTEGERVEXTPROC __glewGetLocalConstantIntegervEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGETLOCALCONSTANTINTEGERVEXTPROC
__glewGetMPEGParameterfvSGIX	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGETMPEGPARAMETERFVSGIXPROC __glewGetMPEGParameterfvSGIX;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGETMPEGPARAMETERFVSGIXPROC
__glewGetMPEGParameterivSGIX	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGETMPEGPARAMETERIVSGIXPROC __glewGetMPEGParameterivSGIX;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGETMPEGPARAMETERIVSGIXPROC
__glewGetMPEGPredictorSGIX	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGETMPEGPREDICTORSGIXPROC __glewGetMPEGPredictorSGIX;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGETMPEGPREDICTORSGIXPROC
__glewGetMPEGQuantTableubv	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGETMPEGQUANTTABLEUBVPROC __glewGetMPEGQuantTableubv;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGETMPEGQUANTTABLEUBVPROC
__glewGetMapAttribParameterfvNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGETMAPATTRIBPARAMETERFVNVPROC __glewGetMapAttribParameterfvNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGETMAPATTRIBPARAMETERFVNVPROC
__glewGetMapAttribParameterivNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGETMAPATTRIBPARAMETERIVNVPROC __glewGetMapAttribParameterivNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGETMAPATTRIBPARAMETERIVNVPROC
__glewGetMapControlPointsNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGETMAPCONTROLPOINTSNVPROC __glewGetMapControlPointsNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGETMAPCONTROLPOINTSNVPROC
__glewGetMapParameterfvNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGETMAPPARAMETERFVNVPROC __glewGetMapParameterfvNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGETMAPPARAMETERFVNVPROC
__glewGetMapParameterivNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGETMAPPARAMETERIVNVPROC __glewGetMapParameterivNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGETMAPPARAMETERIVNVPROC
__glewGetMaterialxv	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGETMATERIALXVPROC __glewGetMaterialxv;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGETMATERIALXVPROC
__glewGetMemoryObjectDetachedResourcesuivNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGETMEMORYOBJECTDETACHEDRESOURCESUIVNVPROC __glewGetMemoryObjectDetachedReso/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGETMEMORYOBJECTDETACHEDRESOURCESUIVNVPROC
__glewGetMemoryObjectParameterivEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGETMEMORYOBJECTPARAMETERIVEXTPROC __glewGetMemoryObjectParameterivEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGETMEMORYOBJECTPARAMETERIVEXTPROC
__glewGetMinmax	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGETMINMAXPROC __glewGetMinmax;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGETMINMAXPROC
__glewGetMinmaxEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGETMINMAXEXTPROC __glewGetMinmaxEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGETMINMAXEXTPROC
__glewGetMinmaxParameterfv	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGETMINMAXPARAMETERFVPROC __glewGetMinmaxParameterfv;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGETMINMAXPARAMETERFVPROC
__glewGetMinmaxParameterfvEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGETMINMAXPARAMETERFVEXTPROC __glewGetMinmaxParameterfvEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGETMINMAXPARAMETERFVEXTPROC
__glewGetMinmaxParameteriv	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGETMINMAXPARAMETERIVPROC __glewGetMinmaxParameteriv;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGETMINMAXPARAMETERIVPROC
__glewGetMinmaxParameterivEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGETMINMAXPARAMETERIVEXTPROC __glewGetMinmaxParameterivEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGETMINMAXPARAMETERIVEXTPROC
__glewGetMultiTexEnvfvEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGETMULTITEXENVFVEXTPROC __glewGetMultiTexEnvfvEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGETMULTITEXENVFVEXTPROC
__glewGetMultiTexEnvivEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGETMULTITEXENVIVEXTPROC __glewGetMultiTexEnvivEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGETMULTITEXENVIVEXTPROC
__glewGetMultiTexGendvEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGETMULTITEXGENDVEXTPROC __glewGetMultiTexGendvEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGETMULTITEXGENDVEXTPROC
__glewGetMultiTexGenfvEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGETMULTITEXGENFVEXTPROC __glewGetMultiTexGenfvEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGETMULTITEXGENFVEXTPROC
__glewGetMultiTexGenivEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGETMULTITEXGENIVEXTPROC __glewGetMultiTexGenivEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGETMULTITEXGENIVEXTPROC
__glewGetMultiTexImageEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGETMULTITEXIMAGEEXTPROC __glewGetMultiTexImageEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGETMULTITEXIMAGEEXTPROC
__glewGetMultiTexLevelParameterfvEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGETMULTITEXLEVELPARAMETERFVEXTPROC __glewGetMultiTexLevelParameterfvEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGETMULTITEXLEVELPARAMETERFVEXTPROC
__glewGetMultiTexLevelParameterivEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGETMULTITEXLEVELPARAMETERIVEXTPROC __glewGetMultiTexLevelParameterivEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGETMULTITEXLEVELPARAMETERIVEXTPROC
__glewGetMultiTexParameterIivEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGETMULTITEXPARAMETERIIVEXTPROC __glewGetMultiTexParameterIivEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGETMULTITEXPARAMETERIIVEXTPROC
__glewGetMultiTexParameterIuivEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGETMULTITEXPARAMETERIUIVEXTPROC __glewGetMultiTexParameterIuivEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGETMULTITEXPARAMETERIUIVEXTPROC
__glewGetMultiTexParameterfvEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGETMULTITEXPARAMETERFVEXTPROC __glewGetMultiTexParameterfvEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGETMULTITEXPARAMETERFVEXTPROC
__glewGetMultiTexParameterivEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGETMULTITEXPARAMETERIVEXTPROC __glewGetMultiTexParameterivEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGETMULTITEXPARAMETERIVEXTPROC
__glewGetMultisamplefv	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGETMULTISAMPLEFVPROC __glewGetMultisamplefv;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGETMULTISAMPLEFVPROC
__glewGetMultisamplefvNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGETMULTISAMPLEFVNVPROC __glewGetMultisamplefvNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGETMULTISAMPLEFVNVPROC
__glewGetNamedBufferParameteri64v	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGETNAMEDBUFFERPARAMETERI64VPROC __glewGetNamedBufferParameteri64v;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGETNAMEDBUFFERPARAMETERI64VPROC
__glewGetNamedBufferParameteriv	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGETNAMEDBUFFERPARAMETERIVPROC __glewGetNamedBufferParameteriv;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGETNAMEDBUFFERPARAMETERIVPROC
__glewGetNamedBufferParameterivEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGETNAMEDBUFFERPARAMETERIVEXTPROC __glewGetNamedBufferParameterivEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGETNAMEDBUFFERPARAMETERIVEXTPROC
__glewGetNamedBufferParameterui64vNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGETNAMEDBUFFERPARAMETERUI64VNVPROC __glewGetNamedBufferParameterui64vNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGETNAMEDBUFFERPARAMETERUI64VNVPROC
__glewGetNamedBufferPointerv	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGETNAMEDBUFFERPOINTERVPROC __glewGetNamedBufferPointerv;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGETNAMEDBUFFERPOINTERVPROC
__glewGetNamedBufferPointervEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGETNAMEDBUFFERPOINTERVEXTPROC __glewGetNamedBufferPointervEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGETNAMEDBUFFERPOINTERVEXTPROC
__glewGetNamedBufferSubData	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGETNAMEDBUFFERSUBDATAPROC __glewGetNamedBufferSubData;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGETNAMEDBUFFERSUBDATAPROC
__glewGetNamedBufferSubDataEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGETNAMEDBUFFERSUBDATAEXTPROC __glewGetNamedBufferSubDataEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGETNAMEDBUFFERSUBDATAEXTPROC
__glewGetNamedFramebufferAttachmentParameteriv	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGETNAMEDFRAMEBUFFERATTACHMENTPARAMETERIVPROC __glewGetNamedFramebufferAttac/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGETNAMEDFRAMEBUFFERATTACHMENTPARAMETERIVPROC
__glewGetNamedFramebufferAttachmentParameterivEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGETNAMEDFRAMEBUFFERATTACHMENTPARAMETERIVEXTPROC __glewGetNamedFramebufferAt/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGETNAMEDFRAMEBUFFERATTACHMENTPARAMETERIVEXTPROC
__glewGetNamedFramebufferParameterfvAMD	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGETNAMEDFRAMEBUFFERPARAMETERFVAMDPROC __glewGetNamedFramebufferParameterfvA/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGETNAMEDFRAMEBUFFERPARAMETERFVAMDPROC
__glewGetNamedFramebufferParameteriv	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGETNAMEDFRAMEBUFFERPARAMETERIVPROC __glewGetNamedFramebufferParameteriv;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGETNAMEDFRAMEBUFFERPARAMETERIVPROC
__glewGetNamedFramebufferParameterivEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGETNAMEDFRAMEBUFFERPARAMETERIVEXTPROC __glewGetNamedFramebufferParameterivE/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGETNAMEDFRAMEBUFFERPARAMETERIVEXTPROC
__glewGetNamedProgramLocalParameterIivEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGETNAMEDPROGRAMLOCALPARAMETERIIVEXTPROC __glewGetNamedProgramLocalParameter/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGETNAMEDPROGRAMLOCALPARAMETERIIVEXTPROC
__glewGetNamedProgramLocalParameterIuivEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGETNAMEDPROGRAMLOCALPARAMETERIUIVEXTPROC __glewGetNamedProgramLocalParamete/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGETNAMEDPROGRAMLOCALPARAMETERIUIVEXTPROC
__glewGetNamedProgramLocalParameterdvEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGETNAMEDPROGRAMLOCALPARAMETERDVEXTPROC __glewGetNamedProgramLocalParameterd/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGETNAMEDPROGRAMLOCALPARAMETERDVEXTPROC
__glewGetNamedProgramLocalParameterfvEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGETNAMEDPROGRAMLOCALPARAMETERFVEXTPROC __glewGetNamedProgramLocalParameterf/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGETNAMEDPROGRAMLOCALPARAMETERFVEXTPROC
__glewGetNamedProgramStringEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGETNAMEDPROGRAMSTRINGEXTPROC __glewGetNamedProgramStringEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGETNAMEDPROGRAMSTRINGEXTPROC
__glewGetNamedProgramivEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGETNAMEDPROGRAMIVEXTPROC __glewGetNamedProgramivEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGETNAMEDPROGRAMIVEXTPROC
__glewGetNamedRenderbufferParameteriv	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGETNAMEDRENDERBUFFERPARAMETERIVPROC __glewGetNamedRenderbufferParameteriv;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGETNAMEDRENDERBUFFERPARAMETERIVPROC
__glewGetNamedRenderbufferParameterivEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGETNAMEDRENDERBUFFERPARAMETERIVEXTPROC __glewGetNamedRenderbufferParameteri/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGETNAMEDRENDERBUFFERPARAMETERIVEXTPROC
__glewGetNamedStringARB	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGETNAMEDSTRINGARBPROC __glewGetNamedStringARB;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGETNAMEDSTRINGARBPROC
__glewGetNamedStringivARB	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGETNAMEDSTRINGIVARBPROC __glewGetNamedStringivARB;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGETNAMEDSTRINGIVARBPROC
__glewGetNextPerfQueryIdINTEL	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGETNEXTPERFQUERYIDINTELPROC __glewGetNextPerfQueryIdINTEL;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGETNEXTPERFQUERYIDINTELPROC
__glewGetNonlinLightfvSGIX	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGETNONLINLIGHTFVSGIXPROC __glewGetNonlinLightfvSGIX;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGETNONLINLIGHTFVSGIXPROC
__glewGetNonlinMaterialfvSGIX	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGETNONLINMATERIALFVSGIXPROC __glewGetNonlinMaterialfvSGIX;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGETNONLINMATERIALFVSGIXPROC
__glewGetObjectBufferfvATI	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGETOBJECTBUFFERFVATIPROC __glewGetObjectBufferfvATI;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGETOBJECTBUFFERFVATIPROC
__glewGetObjectBufferivATI	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGETOBJECTBUFFERIVATIPROC __glewGetObjectBufferivATI;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGETOBJECTBUFFERIVATIPROC
__glewGetObjectLabel	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGETOBJECTLABELPROC __glewGetObjectLabel;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGETOBJECTLABELPROC
__glewGetObjectLabelEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGETOBJECTLABELEXTPROC __glewGetObjectLabelEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGETOBJECTLABELEXTPROC
__glewGetObjectParameterfvARB	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGETOBJECTPARAMETERFVARBPROC __glewGetObjectParameterfvARB;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGETOBJECTPARAMETERFVARBPROC
__glewGetObjectParameterivAPPLE	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGETOBJECTPARAMETERIVAPPLEPROC __glewGetObjectParameterivAPPLE;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGETOBJECTPARAMETERIVAPPLEPROC
__glewGetObjectParameterivARB	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGETOBJECTPARAMETERIVARBPROC __glewGetObjectParameterivARB;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGETOBJECTPARAMETERIVARBPROC
__glewGetObjectPtrLabel	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGETOBJECTPTRLABELPROC __glewGetObjectPtrLabel;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGETOBJECTPTRLABELPROC
__glewGetOcclusionQueryivNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGETOCCLUSIONQUERYIVNVPROC __glewGetOcclusionQueryivNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGETOCCLUSIONQUERYIVNVPROC
__glewGetOcclusionQueryuivNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGETOCCLUSIONQUERYUIVNVPROC __glewGetOcclusionQueryuivNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGETOCCLUSIONQUERYUIVNVPROC
__glewGetPathColorGenfvNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGETPATHCOLORGENFVNVPROC __glewGetPathColorGenfvNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGETPATHCOLORGENFVNVPROC
__glewGetPathColorGenivNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGETPATHCOLORGENIVNVPROC __glewGetPathColorGenivNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGETPATHCOLORGENIVNVPROC
__glewGetPathCommandsNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGETPATHCOMMANDSNVPROC __glewGetPathCommandsNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGETPATHCOMMANDSNVPROC
__glewGetPathCoordsNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGETPATHCOORDSNVPROC __glewGetPathCoordsNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGETPATHCOORDSNVPROC
__glewGetPathDashArrayNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGETPATHDASHARRAYNVPROC __glewGetPathDashArrayNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGETPATHDASHARRAYNVPROC
__glewGetPathLengthNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGETPATHLENGTHNVPROC __glewGetPathLengthNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGETPATHLENGTHNVPROC
__glewGetPathMetricRangeNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGETPATHMETRICRANGENVPROC __glewGetPathMetricRangeNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGETPATHMETRICRANGENVPROC
__glewGetPathMetricsNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGETPATHMETRICSNVPROC __glewGetPathMetricsNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGETPATHMETRICSNVPROC
__glewGetPathParameterfvNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGETPATHPARAMETERFVNVPROC __glewGetPathParameterfvNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGETPATHPARAMETERFVNVPROC
__glewGetPathParameterivNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGETPATHPARAMETERIVNVPROC __glewGetPathParameterivNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGETPATHPARAMETERIVNVPROC
__glewGetPathSpacingNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGETPATHSPACINGNVPROC __glewGetPathSpacingNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGETPATHSPACINGNVPROC
__glewGetPathTexGenfvNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGETPATHTEXGENFVNVPROC __glewGetPathTexGenfvNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGETPATHTEXGENFVNVPROC
__glewGetPathTexGenivNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGETPATHTEXGENIVNVPROC __glewGetPathTexGenivNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGETPATHTEXGENIVNVPROC
__glewGetPerfCounterInfoINTEL	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGETPERFCOUNTERINFOINTELPROC __glewGetPerfCounterInfoINTEL;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGETPERFCOUNTERINFOINTELPROC
__glewGetPerfMonitorCounterDataAMD	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGETPERFMONITORCOUNTERDATAAMDPROC __glewGetPerfMonitorCounterDataAMD;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGETPERFMONITORCOUNTERDATAAMDPROC
__glewGetPerfMonitorCounterInfoAMD	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGETPERFMONITORCOUNTERINFOAMDPROC __glewGetPerfMonitorCounterInfoAMD;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGETPERFMONITORCOUNTERINFOAMDPROC
__glewGetPerfMonitorCounterStringAMD	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGETPERFMONITORCOUNTERSTRINGAMDPROC __glewGetPerfMonitorCounterStringAMD;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGETPERFMONITORCOUNTERSTRINGAMDPROC
__glewGetPerfMonitorCountersAMD	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGETPERFMONITORCOUNTERSAMDPROC __glewGetPerfMonitorCountersAMD;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGETPERFMONITORCOUNTERSAMDPROC
__glewGetPerfMonitorGroupStringAMD	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGETPERFMONITORGROUPSTRINGAMDPROC __glewGetPerfMonitorGroupStringAMD;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGETPERFMONITORGROUPSTRINGAMDPROC
__glewGetPerfMonitorGroupsAMD	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGETPERFMONITORGROUPSAMDPROC __glewGetPerfMonitorGroupsAMD;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGETPERFMONITORGROUPSAMDPROC
__glewGetPerfQueryDataINTEL	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGETPERFQUERYDATAINTELPROC __glewGetPerfQueryDataINTEL;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGETPERFQUERYDATAINTELPROC
__glewGetPerfQueryIdByNameINTEL	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGETPERFQUERYIDBYNAMEINTELPROC __glewGetPerfQueryIdByNameINTEL;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGETPERFQUERYIDBYNAMEINTELPROC
__glewGetPerfQueryInfoINTEL	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGETPERFQUERYINFOINTELPROC __glewGetPerfQueryInfoINTEL;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGETPERFQUERYINFOINTELPROC
__glewGetPixelTransformParameterfvEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGETPIXELTRANSFORMPARAMETERFVEXTPROC __glewGetPixelTransformParameterfvEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGETPIXELTRANSFORMPARAMETERFVEXTPROC
__glewGetPixelTransformParameterfvSGI	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGETPIXELTRANSFORMPARAMETERFVSGIPROC __glewGetPixelTransformParameterfvSGI;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGETPIXELTRANSFORMPARAMETERFVSGIPROC
__glewGetPixelTransformParameterivEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGETPIXELTRANSFORMPARAMETERIVEXTPROC __glewGetPixelTransformParameterivEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGETPIXELTRANSFORMPARAMETERIVEXTPROC
__glewGetPixelTransformParameterivSGI	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGETPIXELTRANSFORMPARAMETERIVSGIPROC __glewGetPixelTransformParameterivSGI;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGETPIXELTRANSFORMPARAMETERIVSGIPROC
__glewGetPointerIndexedvEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGETPOINTERINDEXEDVEXTPROC __glewGetPointerIndexedvEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGETPOINTERINDEXEDVEXTPROC
__glewGetPointeri_vEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGETPOINTERI_VEXTPROC __glewGetPointeri_vEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGETPOINTERI_VEXTPROC
__glewGetProcAddressREGAL	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGETPROCADDRESSREGALPROC __glewGetProcAddressREGAL;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGETPROCADDRESSREGALPROC
__glewGetProgramBinary	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGETPROGRAMBINARYPROC __glewGetProgramBinary;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGETPROGRAMBINARYPROC
__glewGetProgramBinaryOES	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGETPROGRAMBINARYOESPROC __glewGetProgramBinaryOES;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGETPROGRAMBINARYOESPROC
__glewGetProgramEnvParameterdvARB	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGETPROGRAMENVPARAMETERDVARBPROC __glewGetProgramEnvParameterdvARB;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGETPROGRAMENVPARAMETERDVARBPROC
__glewGetProgramEnvParameterfvARB	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGETPROGRAMENVPARAMETERFVARBPROC __glewGetProgramEnvParameterfvARB;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGETPROGRAMENVPARAMETERFVARBPROC
__glewGetProgramInfoLog	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGETPROGRAMINFOLOGPROC __glewGetProgramInfoLog;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGETPROGRAMINFOLOGPROC
__glewGetProgramInterfaceiv	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGETPROGRAMINTERFACEIVPROC __glewGetProgramInterfaceiv;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGETPROGRAMINTERFACEIVPROC
__glewGetProgramLocalParameterdvARB	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGETPROGRAMLOCALPARAMETERDVARBPROC __glewGetProgramLocalParameterdvARB;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGETPROGRAMLOCALPARAMETERDVARBPROC
__glewGetProgramLocalParameterfvARB	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGETPROGRAMLOCALPARAMETERFVARBPROC __glewGetProgramLocalParameterfvARB;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGETPROGRAMLOCALPARAMETERFVARBPROC
__glewGetProgramNamedParameterdvNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGETPROGRAMNAMEDPARAMETERDVNVPROC __glewGetProgramNamedParameterdvNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGETPROGRAMNAMEDPARAMETERDVNVPROC
__glewGetProgramNamedParameterfvNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGETPROGRAMNAMEDPARAMETERFVNVPROC __glewGetProgramNamedParameterfvNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGETPROGRAMNAMEDPARAMETERFVNVPROC
__glewGetProgramParameterdvNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGETPROGRAMPARAMETERDVNVPROC __glewGetProgramParameterdvNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGETPROGRAMPARAMETERDVNVPROC
__glewGetProgramParameterfvNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGETPROGRAMPARAMETERFVNVPROC __glewGetProgramParameterfvNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGETPROGRAMPARAMETERFVNVPROC
__glewGetProgramPipelineInfoLog	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGETPROGRAMPIPELINEINFOLOGPROC __glewGetProgramPipelineInfoLog;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGETPROGRAMPIPELINEINFOLOGPROC
__glewGetProgramPipelineiv	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGETPROGRAMPIPELINEIVPROC __glewGetProgramPipelineiv;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGETPROGRAMPIPELINEIVPROC
__glewGetProgramResourceIndex	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGETPROGRAMRESOURCEINDEXPROC __glewGetProgramResourceIndex;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGETPROGRAMRESOURCEINDEXPROC
__glewGetProgramResourceLocation	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGETPROGRAMRESOURCELOCATIONPROC __glewGetProgramResourceLocation;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGETPROGRAMRESOURCELOCATIONPROC
__glewGetProgramResourceLocationIndex	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGETPROGRAMRESOURCELOCATIONINDEXPROC __glewGetProgramResourceLocationIndex;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGETPROGRAMRESOURCELOCATIONINDEXPROC
__glewGetProgramResourceLocationIndexEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGETPROGRAMRESOURCELOCATIONINDEXEXTPROC __glewGetProgramResourceLocationInde/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGETPROGRAMRESOURCELOCATIONINDEXEXTPROC
__glewGetProgramResourceName	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGETPROGRAMRESOURCENAMEPROC __glewGetProgramResourceName;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGETPROGRAMRESOURCENAMEPROC
__glewGetProgramResourcefvNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGETPROGRAMRESOURCEFVNVPROC __glewGetProgramResourcefvNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGETPROGRAMRESOURCEFVNVPROC
__glewGetProgramResourceiv	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGETPROGRAMRESOURCEIVPROC __glewGetProgramResourceiv;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGETPROGRAMRESOURCEIVPROC
__glewGetProgramStageiv	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGETPROGRAMSTAGEIVPROC __glewGetProgramStageiv;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGETPROGRAMSTAGEIVPROC
__glewGetProgramStringARB	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGETPROGRAMSTRINGARBPROC __glewGetProgramStringARB;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGETPROGRAMSTRINGARBPROC
__glewGetProgramStringNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGETPROGRAMSTRINGNVPROC __glewGetProgramStringNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGETPROGRAMSTRINGNVPROC
__glewGetProgramiv	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGETPROGRAMIVPROC __glewGetProgramiv;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGETPROGRAMIVPROC
__glewGetProgramivARB	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGETPROGRAMIVARBPROC __glewGetProgramivARB;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGETPROGRAMIVARBPROC
__glewGetProgramivNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGETPROGRAMIVNVPROC __glewGetProgramivNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGETPROGRAMIVNVPROC
__glewGetQueryBufferObjecti64v	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGETQUERYBUFFEROBJECTI64VPROC __glewGetQueryBufferObjecti64v;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGETQUERYBUFFEROBJECTI64VPROC
__glewGetQueryBufferObjectiv	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGETQUERYBUFFEROBJECTIVPROC __glewGetQueryBufferObjectiv;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGETQUERYBUFFEROBJECTIVPROC
__glewGetQueryBufferObjectui64v	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGETQUERYBUFFEROBJECTUI64VPROC __glewGetQueryBufferObjectui64v;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGETQUERYBUFFEROBJECTUI64VPROC
__glewGetQueryBufferObjectuiv	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGETQUERYBUFFEROBJECTUIVPROC __glewGetQueryBufferObjectuiv;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGETQUERYBUFFEROBJECTUIVPROC
__glewGetQueryIndexediv	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGETQUERYINDEXEDIVPROC __glewGetQueryIndexediv;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGETQUERYINDEXEDIVPROC
__glewGetQueryObjecti64v	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGETQUERYOBJECTI64VPROC __glewGetQueryObjecti64v;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGETQUERYOBJECTI64VPROC
__glewGetQueryObjecti64vANGLE	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGETQUERYOBJECTI64VANGLEPROC __glewGetQueryObjecti64vANGLE;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGETQUERYOBJECTI64VANGLEPROC
__glewGetQueryObjecti64vEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGETQUERYOBJECTI64VEXTPROC __glewGetQueryObjecti64vEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGETQUERYOBJECTI64VEXTPROC
__glewGetQueryObjectiv	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGETQUERYOBJECTIVPROC __glewGetQueryObjectiv;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGETQUERYOBJECTIVPROC
__glewGetQueryObjectivANGLE	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGETQUERYOBJECTIVANGLEPROC __glewGetQueryObjectivANGLE;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGETQUERYOBJECTIVANGLEPROC
__glewGetQueryObjectivARB	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGETQUERYOBJECTIVARBPROC __glewGetQueryObjectivARB;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGETQUERYOBJECTIVARBPROC
__glewGetQueryObjectivEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGETQUERYOBJECTIVEXTPROC __glewGetQueryObjectivEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGETQUERYOBJECTIVEXTPROC
__glewGetQueryObjectui64v	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGETQUERYOBJECTUI64VPROC __glewGetQueryObjectui64v;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGETQUERYOBJECTUI64VPROC
__glewGetQueryObjectui64vANGLE	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGETQUERYOBJECTUI64VANGLEPROC __glewGetQueryObjectui64vANGLE;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGETQUERYOBJECTUI64VANGLEPROC
__glewGetQueryObjectui64vEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGETQUERYOBJECTUI64VEXTPROC __glewGetQueryObjectui64vEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGETQUERYOBJECTUI64VEXTPROC
__glewGetQueryObjectuiv	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGETQUERYOBJECTUIVPROC __glewGetQueryObjectuiv;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGETQUERYOBJECTUIVPROC
__glewGetQueryObjectuivANGLE	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGETQUERYOBJECTUIVANGLEPROC __glewGetQueryObjectuivANGLE;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGETQUERYOBJECTUIVANGLEPROC
__glewGetQueryObjectuivARB	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGETQUERYOBJECTUIVARBPROC __glewGetQueryObjectuivARB;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGETQUERYOBJECTUIVARBPROC
__glewGetQueryObjectuivEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGETQUERYOBJECTUIVEXTPROC __glewGetQueryObjectuivEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGETQUERYOBJECTUIVEXTPROC
__glewGetQueryiv	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGETQUERYIVPROC __glewGetQueryiv;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGETQUERYIVPROC
__glewGetQueryivANGLE	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGETQUERYIVANGLEPROC __glewGetQueryivANGLE;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGETQUERYIVANGLEPROC
__glewGetQueryivARB	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGETQUERYIVARBPROC __glewGetQueryivARB;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGETQUERYIVARBPROC
__glewGetQueryivEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGETQUERYIVEXTPROC __glewGetQueryivEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGETQUERYIVEXTPROC
__glewGetRenderbufferParameteriv	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGETRENDERBUFFERPARAMETERIVPROC __glewGetRenderbufferParameteriv;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGETRENDERBUFFERPARAMETERIVPROC
__glewGetRenderbufferParameterivEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGETRENDERBUFFERPARAMETERIVEXTPROC __glewGetRenderbufferParameterivEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGETRENDERBUFFERPARAMETERIVEXTPROC
__glewGetRenderbufferParameterivOES	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGETRENDERBUFFERPARAMETERIVOESPROC __glewGetRenderbufferParameterivOES;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGETRENDERBUFFERPARAMETERIVOESPROC
__glewGetSamplerParameterIiv	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGETSAMPLERPARAMETERIIVPROC __glewGetSamplerParameterIiv;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGETSAMPLERPARAMETERIIVPROC
__glewGetSamplerParameterIivEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGETSAMPLERPARAMETERIIVEXTPROC __glewGetSamplerParameterIivEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGETSAMPLERPARAMETERIIVEXTPROC
__glewGetSamplerParameterIivOES	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGETSAMPLERPARAMETERIIVOESPROC __glewGetSamplerParameterIivOES;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGETSAMPLERPARAMETERIIVOESPROC
__glewGetSamplerParameterIuiv	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGETSAMPLERPARAMETERIUIVPROC __glewGetSamplerParameterIuiv;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGETSAMPLERPARAMETERIUIVPROC
__glewGetSamplerParameterIuivEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGETSAMPLERPARAMETERIUIVEXTPROC __glewGetSamplerParameterIuivEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGETSAMPLERPARAMETERIUIVEXTPROC
__glewGetSamplerParameterIuivOES	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGETSAMPLERPARAMETERIUIVOESPROC __glewGetSamplerParameterIuivOES;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGETSAMPLERPARAMETERIUIVOESPROC
__glewGetSamplerParameterfv	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGETSAMPLERPARAMETERFVPROC __glewGetSamplerParameterfv;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGETSAMPLERPARAMETERFVPROC
__glewGetSamplerParameteriv	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGETSAMPLERPARAMETERIVPROC __glewGetSamplerParameteriv;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGETSAMPLERPARAMETERIVPROC
__glewGetSemaphoreParameterui64vEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGETSEMAPHOREPARAMETERUI64VEXTPROC __glewGetSemaphoreParameterui64vEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGETSEMAPHOREPARAMETERUI64VEXTPROC
__glewGetSeparableFilter	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGETSEPARABLEFILTERPROC __glewGetSeparableFilter;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGETSEPARABLEFILTERPROC
__glewGetSeparableFilterEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGETSEPARABLEFILTEREXTPROC __glewGetSeparableFilterEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGETSEPARABLEFILTEREXTPROC
__glewGetShaderInfoLog	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGETSHADERINFOLOGPROC __glewGetShaderInfoLog;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGETSHADERINFOLOGPROC
__glewGetShaderPrecisionFormat	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGETSHADERPRECISIONFORMATPROC __glewGetShaderPrecisionFormat;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGETSHADERPRECISIONFORMATPROC
__glewGetShaderSource	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGETSHADERSOURCEPROC __glewGetShaderSource;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGETSHADERSOURCEPROC
__glewGetShaderSourceARB	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGETSHADERSOURCEARBPROC __glewGetShaderSourceARB;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGETSHADERSOURCEARBPROC
__glewGetShaderiv	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGETSHADERIVPROC __glewGetShaderiv;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGETSHADERIVPROC
__glewGetShadingRateImagePaletteNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGETSHADINGRATEIMAGEPALETTENVPROC __glewGetShadingRateImagePaletteNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGETSHADINGRATEIMAGEPALETTENVPROC
__glewGetShadingRateSampleLocationivNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGETSHADINGRATESAMPLELOCATIONIVNVPROC __glewGetShadingRateSampleLocationivNV/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGETSHADINGRATESAMPLELOCATIONIVNVPROC
__glewGetSharpenTexFuncSGIS	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGETSHARPENTEXFUNCSGISPROC __glewGetSharpenTexFuncSGIS;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGETSHARPENTEXFUNCSGISPROC
__glewGetStageIndexNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGETSTAGEINDEXNVPROC __glewGetStageIndexNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGETSTAGEINDEXNVPROC
__glewGetStringi	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGETSTRINGIPROC __glewGetStringi;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGETSTRINGIPROC
__glewGetSubroutineIndex	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGETSUBROUTINEINDEXPROC __glewGetSubroutineIndex;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGETSUBROUTINEINDEXPROC
__glewGetSubroutineUniformLocation	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGETSUBROUTINEUNIFORMLOCATIONPROC __glewGetSubroutineUniformLocation;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGETSUBROUTINEUNIFORMLOCATIONPROC
__glewGetSynciv	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGETSYNCIVPROC __glewGetSynciv;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGETSYNCIVPROC
__glewGetSyncivAPPLE	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGETSYNCIVAPPLEPROC __glewGetSyncivAPPLE;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGETSYNCIVAPPLEPROC
__glewGetTexBumpParameterfvATI	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGETTEXBUMPPARAMETERFVATIPROC __glewGetTexBumpParameterfvATI;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGETTEXBUMPPARAMETERFVATIPROC
__glewGetTexBumpParameterivATI	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGETTEXBUMPPARAMETERIVATIPROC __glewGetTexBumpParameterivATI;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGETTEXBUMPPARAMETERIVATIPROC
__glewGetTexEnvxv	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGETTEXENVXVPROC __glewGetTexEnvxv;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGETTEXENVXVPROC
__glewGetTexFilterFuncSGIS	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGETTEXFILTERFUNCSGISPROC __glewGetTexFilterFuncSGIS;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGETTEXFILTERFUNCSGISPROC
__glewGetTexGenfvOES	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGETTEXGENFVOESPROC __glewGetTexGenfvOES;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGETTEXGENFVOESPROC
__glewGetTexGenivOES	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGETTEXGENIVOESPROC __glewGetTexGenivOES;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGETTEXGENIVOESPROC
__glewGetTexGenxvOES	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGETTEXGENXVOESPROC __glewGetTexGenxvOES;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGETTEXGENXVOESPROC
__glewGetTexParameterIiv	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGETTEXPARAMETERIIVPROC __glewGetTexParameterIiv;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGETTEXPARAMETERIIVPROC
__glewGetTexParameterIivEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGETTEXPARAMETERIIVEXTPROC __glewGetTexParameterIivEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGETTEXPARAMETERIIVEXTPROC
__glewGetTexParameterIivOES	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGETTEXPARAMETERIIVOESPROC __glewGetTexParameterIivOES;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGETTEXPARAMETERIIVOESPROC
__glewGetTexParameterIuiv	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGETTEXPARAMETERIUIVPROC __glewGetTexParameterIuiv;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGETTEXPARAMETERIUIVPROC
__glewGetTexParameterIuivEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGETTEXPARAMETERIUIVEXTPROC __glewGetTexParameterIuivEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGETTEXPARAMETERIUIVEXTPROC
__glewGetTexParameterIuivOES	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGETTEXPARAMETERIUIVOESPROC __glewGetTexParameterIuivOES;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGETTEXPARAMETERIUIVOESPROC
__glewGetTexParameterPointervAPPLE	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGETTEXPARAMETERPOINTERVAPPLEPROC __glewGetTexParameterPointervAPPLE;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGETTEXPARAMETERPOINTERVAPPLEPROC
__glewGetTexParameterxv	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGETTEXPARAMETERXVPROC __glewGetTexParameterxv;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGETTEXPARAMETERXVPROC
__glewGetTextureHandleARB	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGETTEXTUREHANDLEARBPROC __glewGetTextureHandleARB;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGETTEXTUREHANDLEARBPROC
__glewGetTextureHandleIMG	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGETTEXTUREHANDLEIMGPROC __glewGetTextureHandleIMG;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGETTEXTUREHANDLEIMGPROC
__glewGetTextureHandleNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGETTEXTUREHANDLENVPROC __glewGetTextureHandleNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGETTEXTUREHANDLENVPROC
__glewGetTextureImage	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGETTEXTUREIMAGEPROC __glewGetTextureImage;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGETTEXTUREIMAGEPROC
__glewGetTextureImageEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGETTEXTUREIMAGEEXTPROC __glewGetTextureImageEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGETTEXTUREIMAGEEXTPROC
__glewGetTextureLevelParameterfv	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGETTEXTURELEVELPARAMETERFVPROC __glewGetTextureLevelParameterfv;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGETTEXTURELEVELPARAMETERFVPROC
__glewGetTextureLevelParameterfvEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGETTEXTURELEVELPARAMETERFVEXTPROC __glewGetTextureLevelParameterfvEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGETTEXTURELEVELPARAMETERFVEXTPROC
__glewGetTextureLevelParameteriv	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGETTEXTURELEVELPARAMETERIVPROC __glewGetTextureLevelParameteriv;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGETTEXTURELEVELPARAMETERIVPROC
__glewGetTextureLevelParameterivEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGETTEXTURELEVELPARAMETERIVEXTPROC __glewGetTextureLevelParameterivEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGETTEXTURELEVELPARAMETERIVEXTPROC
__glewGetTextureParameterIiv	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGETTEXTUREPARAMETERIIVPROC __glewGetTextureParameterIiv;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGETTEXTUREPARAMETERIIVPROC
__glewGetTextureParameterIivEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGETTEXTUREPARAMETERIIVEXTPROC __glewGetTextureParameterIivEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGETTEXTUREPARAMETERIIVEXTPROC
__glewGetTextureParameterIuiv	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGETTEXTUREPARAMETERIUIVPROC __glewGetTextureParameterIuiv;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGETTEXTUREPARAMETERIUIVPROC
__glewGetTextureParameterIuivEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGETTEXTUREPARAMETERIUIVEXTPROC __glewGetTextureParameterIuivEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGETTEXTUREPARAMETERIUIVEXTPROC
__glewGetTextureParameterfv	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGETTEXTUREPARAMETERFVPROC __glewGetTextureParameterfv;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGETTEXTUREPARAMETERFVPROC
__glewGetTextureParameterfvEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGETTEXTUREPARAMETERFVEXTPROC __glewGetTextureParameterfvEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGETTEXTUREPARAMETERFVEXTPROC
__glewGetTextureParameteriv	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGETTEXTUREPARAMETERIVPROC __glewGetTextureParameteriv;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGETTEXTUREPARAMETERIVPROC
__glewGetTextureParameterivEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGETTEXTUREPARAMETERIVEXTPROC __glewGetTextureParameterivEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGETTEXTUREPARAMETERIVEXTPROC
__glewGetTextureSamplerHandleARB	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGETTEXTURESAMPLERHANDLEARBPROC __glewGetTextureSamplerHandleARB;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGETTEXTURESAMPLERHANDLEARBPROC
__glewGetTextureSamplerHandleIMG	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGETTEXTURESAMPLERHANDLEIMGPROC __glewGetTextureSamplerHandleIMG;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGETTEXTURESAMPLERHANDLEIMGPROC
__glewGetTextureSamplerHandleNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGETTEXTURESAMPLERHANDLENVPROC __glewGetTextureSamplerHandleNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGETTEXTURESAMPLERHANDLENVPROC
__glewGetTextureSubImage	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGETTEXTURESUBIMAGEPROC __glewGetTextureSubImage;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGETTEXTURESUBIMAGEPROC
__glewGetTrackMatrixivNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGETTRACKMATRIXIVNVPROC __glewGetTrackMatrixivNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGETTRACKMATRIXIVNVPROC
__glewGetTransformFeedbackVarying	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGETTRANSFORMFEEDBACKVARYINGPROC __glewGetTransformFeedbackVarying;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGETTRANSFORMFEEDBACKVARYINGPROC
__glewGetTransformFeedbackVaryingEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGETTRANSFORMFEEDBACKVARYINGEXTPROC __glewGetTransformFeedbackVaryingEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGETTRANSFORMFEEDBACKVARYINGEXTPROC
__glewGetTransformFeedbackVaryingNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGETTRANSFORMFEEDBACKVARYINGNVPROC __glewGetTransformFeedbackVaryingNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGETTRANSFORMFEEDBACKVARYINGNVPROC
__glewGetTransformFeedbacki64_v	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGETTRANSFORMFEEDBACKI64_VPROC __glewGetTransformFeedbacki64_v;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGETTRANSFORMFEEDBACKI64_VPROC
__glewGetTransformFeedbacki_v	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGETTRANSFORMFEEDBACKI_VPROC __glewGetTransformFeedbacki_v;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGETTRANSFORMFEEDBACKI_VPROC
__glewGetTransformFeedbackiv	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGETTRANSFORMFEEDBACKIVPROC __glewGetTransformFeedbackiv;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGETTRANSFORMFEEDBACKIVPROC
__glewGetTranslatedShaderSourceANGLE	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGETTRANSLATEDSHADERSOURCEANGLEPROC __glewGetTranslatedShaderSourceANGLE;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGETTRANSLATEDSHADERSOURCEANGLEPROC
__glewGetUniformBlockIndex	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGETUNIFORMBLOCKINDEXPROC __glewGetUniformBlockIndex;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGETUNIFORMBLOCKINDEXPROC
__glewGetUniformBufferSizeEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGETUNIFORMBUFFERSIZEEXTPROC __glewGetUniformBufferSizeEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGETUNIFORMBUFFERSIZEEXTPROC
__glewGetUniformIndices	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGETUNIFORMINDICESPROC __glewGetUniformIndices;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGETUNIFORMINDICESPROC
__glewGetUniformLocation	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGETUNIFORMLOCATIONPROC __glewGetUniformLocation;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGETUNIFORMLOCATIONPROC
__glewGetUniformLocationARB	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGETUNIFORMLOCATIONARBPROC __glewGetUniformLocationARB;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGETUNIFORMLOCATIONARBPROC
__glewGetUniformOffsetEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGETUNIFORMOFFSETEXTPROC __glewGetUniformOffsetEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGETUNIFORMOFFSETEXTPROC
__glewGetUniformSubroutineuiv	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGETUNIFORMSUBROUTINEUIVPROC __glewGetUniformSubroutineuiv;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGETUNIFORMSUBROUTINEUIVPROC
__glewGetUniformdv	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGETUNIFORMDVPROC __glewGetUniformdv;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGETUNIFORMDVPROC
__glewGetUniformfv	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGETUNIFORMFVPROC __glewGetUniformfv;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGETUNIFORMFVPROC
__glewGetUniformfvARB	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGETUNIFORMFVARBPROC __glewGetUniformfvARB;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGETUNIFORMFVARBPROC
__glewGetUniformi64vARB	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGETUNIFORMI64VARBPROC __glewGetUniformi64vARB;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGETUNIFORMI64VARBPROC
__glewGetUniformi64vNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGETUNIFORMI64VNVPROC __glewGetUniformi64vNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGETUNIFORMI64VNVPROC
__glewGetUniformiv	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGETUNIFORMIVPROC __glewGetUniformiv;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGETUNIFORMIVPROC
__glewGetUniformivARB	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGETUNIFORMIVARBPROC __glewGetUniformivARB;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGETUNIFORMIVARBPROC
__glewGetUniformui64vARB	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGETUNIFORMUI64VARBPROC __glewGetUniformui64vARB;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGETUNIFORMUI64VARBPROC
__glewGetUniformui64vNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGETUNIFORMUI64VNVPROC __glewGetUniformui64vNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGETUNIFORMUI64VNVPROC
__glewGetUniformuiv	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGETUNIFORMUIVPROC __glewGetUniformuiv;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGETUNIFORMUIVPROC
__glewGetUniformuivEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGETUNIFORMUIVEXTPROC __glewGetUniformuivEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGETUNIFORMUIVEXTPROC
__glewGetUnsignedBytei_vEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGETUNSIGNEDBYTEI_VEXTPROC __glewGetUnsignedBytei_vEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGETUNSIGNEDBYTEI_VEXTPROC
__glewGetUnsignedBytevEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGETUNSIGNEDBYTEVEXTPROC __glewGetUnsignedBytevEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGETUNSIGNEDBYTEVEXTPROC
__glewGetVariantArrayObjectfvATI	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGETVARIANTARRAYOBJECTFVATIPROC __glewGetVariantArrayObjectfvATI;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGETVARIANTARRAYOBJECTFVATIPROC
__glewGetVariantArrayObjectivATI	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGETVARIANTARRAYOBJECTIVATIPROC __glewGetVariantArrayObjectivATI;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGETVARIANTARRAYOBJECTIVATIPROC
__glewGetVariantBooleanvEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGETVARIANTBOOLEANVEXTPROC __glewGetVariantBooleanvEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGETVARIANTBOOLEANVEXTPROC
__glewGetVariantFloatvEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGETVARIANTFLOATVEXTPROC __glewGetVariantFloatvEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGETVARIANTFLOATVEXTPROC
__glewGetVariantIntegervEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGETVARIANTINTEGERVEXTPROC __glewGetVariantIntegervEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGETVARIANTINTEGERVEXTPROC
__glewGetVariantPointervEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGETVARIANTPOINTERVEXTPROC __glewGetVariantPointervEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGETVARIANTPOINTERVEXTPROC
__glewGetVaryingLocationNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGETVARYINGLOCATIONNVPROC __glewGetVaryingLocationNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGETVARYINGLOCATIONNVPROC
__glewGetVectorOperationSGIX	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGETVECTOROPERATIONSGIXPROC __glewGetVectorOperationSGIX;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGETVECTOROPERATIONSGIXPROC
__glewGetVertexArrayIndexed64iv	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGETVERTEXARRAYINDEXED64IVPROC __glewGetVertexArrayIndexed64iv;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGETVERTEXARRAYINDEXED64IVPROC
__glewGetVertexArrayIndexediv	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGETVERTEXARRAYINDEXEDIVPROC __glewGetVertexArrayIndexediv;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGETVERTEXARRAYINDEXEDIVPROC
__glewGetVertexArrayIntegeri_vEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGETVERTEXARRAYINTEGERI_VEXTPROC __glewGetVertexArrayIntegeri_vEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGETVERTEXARRAYINTEGERI_VEXTPROC
__glewGetVertexArrayIntegervEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGETVERTEXARRAYINTEGERVEXTPROC __glewGetVertexArrayIntegervEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGETVERTEXARRAYINTEGERVEXTPROC
__glewGetVertexArrayPointeri_vEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGETVERTEXARRAYPOINTERI_VEXTPROC __glewGetVertexArrayPointeri_vEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGETVERTEXARRAYPOINTERI_VEXTPROC
__glewGetVertexArrayPointervEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGETVERTEXARRAYPOINTERVEXTPROC __glewGetVertexArrayPointervEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGETVERTEXARRAYPOINTERVEXTPROC
__glewGetVertexArrayiv	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGETVERTEXARRAYIVPROC __glewGetVertexArrayiv;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGETVERTEXARRAYIVPROC
__glewGetVertexAttribArrayObjectfvATI	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGETVERTEXATTRIBARRAYOBJECTFVATIPROC __glewGetVertexAttribArrayObjectfvATI;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGETVERTEXATTRIBARRAYOBJECTFVATIPROC
__glewGetVertexAttribArrayObjectivATI	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGETVERTEXATTRIBARRAYOBJECTIVATIPROC __glewGetVertexAttribArrayObjectivATI;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGETVERTEXATTRIBARRAYOBJECTIVATIPROC
__glewGetVertexAttribIiv	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGETVERTEXATTRIBIIVPROC __glewGetVertexAttribIiv;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGETVERTEXATTRIBIIVPROC
__glewGetVertexAttribIivEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGETVERTEXATTRIBIIVEXTPROC __glewGetVertexAttribIivEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGETVERTEXATTRIBIIVEXTPROC
__glewGetVertexAttribIuiv	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGETVERTEXATTRIBIUIVPROC __glewGetVertexAttribIuiv;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGETVERTEXATTRIBIUIVPROC
__glewGetVertexAttribIuivEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGETVERTEXATTRIBIUIVEXTPROC __glewGetVertexAttribIuivEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGETVERTEXATTRIBIUIVEXTPROC
__glewGetVertexAttribLdv	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGETVERTEXATTRIBLDVPROC __glewGetVertexAttribLdv;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGETVERTEXATTRIBLDVPROC
__glewGetVertexAttribLdvEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGETVERTEXATTRIBLDVEXTPROC __glewGetVertexAttribLdvEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGETVERTEXATTRIBLDVEXTPROC
__glewGetVertexAttribLi64vNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGETVERTEXATTRIBLI64VNVPROC __glewGetVertexAttribLi64vNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGETVERTEXATTRIBLI64VNVPROC
__glewGetVertexAttribLui64vARB	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGETVERTEXATTRIBLUI64VARBPROC __glewGetVertexAttribLui64vARB;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGETVERTEXATTRIBLUI64VARBPROC
__glewGetVertexAttribLui64vNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGETVERTEXATTRIBLUI64VNVPROC __glewGetVertexAttribLui64vNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGETVERTEXATTRIBLUI64VNVPROC
__glewGetVertexAttribPointerv	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGETVERTEXATTRIBPOINTERVPROC __glewGetVertexAttribPointerv;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGETVERTEXATTRIBPOINTERVPROC
__glewGetVertexAttribPointervARB	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGETVERTEXATTRIBPOINTERVARBPROC __glewGetVertexAttribPointervARB;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGETVERTEXATTRIBPOINTERVARBPROC
__glewGetVertexAttribPointervNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGETVERTEXATTRIBPOINTERVNVPROC __glewGetVertexAttribPointervNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGETVERTEXATTRIBPOINTERVNVPROC
__glewGetVertexAttribdv	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGETVERTEXATTRIBDVPROC __glewGetVertexAttribdv;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGETVERTEXATTRIBDVPROC
__glewGetVertexAttribdvARB	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGETVERTEXATTRIBDVARBPROC __glewGetVertexAttribdvARB;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGETVERTEXATTRIBDVARBPROC
__glewGetVertexAttribdvNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGETVERTEXATTRIBDVNVPROC __glewGetVertexAttribdvNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGETVERTEXATTRIBDVNVPROC
__glewGetVertexAttribfv	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGETVERTEXATTRIBFVPROC __glewGetVertexAttribfv;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGETVERTEXATTRIBFVPROC
__glewGetVertexAttribfvARB	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGETVERTEXATTRIBFVARBPROC __glewGetVertexAttribfvARB;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGETVERTEXATTRIBFVARBPROC
__glewGetVertexAttribfvNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGETVERTEXATTRIBFVNVPROC __glewGetVertexAttribfvNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGETVERTEXATTRIBFVNVPROC
__glewGetVertexAttribiv	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGETVERTEXATTRIBIVPROC __glewGetVertexAttribiv;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGETVERTEXATTRIBIVPROC
__glewGetVertexAttribivARB	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGETVERTEXATTRIBIVARBPROC __glewGetVertexAttribivARB;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGETVERTEXATTRIBIVARBPROC
__glewGetVertexAttribivNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGETVERTEXATTRIBIVNVPROC __glewGetVertexAttribivNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGETVERTEXATTRIBIVNVPROC
__glewGetVideoCaptureStreamdvNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGETVIDEOCAPTURESTREAMDVNVPROC __glewGetVideoCaptureStreamdvNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGETVIDEOCAPTURESTREAMDVNVPROC
__glewGetVideoCaptureStreamfvNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGETVIDEOCAPTURESTREAMFVNVPROC __glewGetVideoCaptureStreamfvNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGETVIDEOCAPTURESTREAMFVNVPROC
__glewGetVideoCaptureStreamivNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGETVIDEOCAPTURESTREAMIVNVPROC __glewGetVideoCaptureStreamivNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGETVIDEOCAPTURESTREAMIVNVPROC
__glewGetVideoCaptureivNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGETVIDEOCAPTUREIVNVPROC __glewGetVideoCaptureivNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGETVIDEOCAPTUREIVNVPROC
__glewGetVideoi64vNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGETVIDEOI64VNVPROC __glewGetVideoi64vNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGETVIDEOI64VNVPROC
__glewGetVideoivNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGETVIDEOIVNVPROC __glewGetVideoivNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGETVIDEOIVNVPROC
__glewGetVideoui64vNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGETVIDEOUI64VNVPROC __glewGetVideoui64vNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGETVIDEOUI64VNVPROC
__glewGetVideouivNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGETVIDEOUIVNVPROC __glewGetVideouivNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGETVIDEOUIVNVPROC
__glewGetVkProcAddrNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGETVKPROCADDRNVPROC __glewGetVkProcAddrNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGETVKPROCADDRNVPROC
__glewGetnColorTableARB	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGETNCOLORTABLEARBPROC __glewGetnColorTableARB;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGETNCOLORTABLEARBPROC
__glewGetnCompressedTexImage	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGETNCOMPRESSEDTEXIMAGEPROC __glewGetnCompressedTexImage;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGETNCOMPRESSEDTEXIMAGEPROC
__glewGetnCompressedTexImageARB	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGETNCOMPRESSEDTEXIMAGEARBPROC __glewGetnCompressedTexImageARB;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGETNCOMPRESSEDTEXIMAGEARBPROC
__glewGetnConvolutionFilterARB	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGETNCONVOLUTIONFILTERARBPROC __glewGetnConvolutionFilterARB;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGETNCONVOLUTIONFILTERARBPROC
__glewGetnHistogramARB	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGETNHISTOGRAMARBPROC __glewGetnHistogramARB;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGETNHISTOGRAMARBPROC
__glewGetnMapdvARB	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGETNMAPDVARBPROC __glewGetnMapdvARB;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGETNMAPDVARBPROC
__glewGetnMapfvARB	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGETNMAPFVARBPROC __glewGetnMapfvARB;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGETNMAPFVARBPROC
__glewGetnMapivARB	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGETNMAPIVARBPROC __glewGetnMapivARB;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGETNMAPIVARBPROC
__glewGetnMinmaxARB	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGETNMINMAXARBPROC __glewGetnMinmaxARB;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGETNMINMAXARBPROC
__glewGetnPixelMapfvARB	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGETNPIXELMAPFVARBPROC __glewGetnPixelMapfvARB;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGETNPIXELMAPFVARBPROC
__glewGetnPixelMapuivARB	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGETNPIXELMAPUIVARBPROC __glewGetnPixelMapuivARB;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGETNPIXELMAPUIVARBPROC
__glewGetnPixelMapusvARB	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGETNPIXELMAPUSVARBPROC __glewGetnPixelMapusvARB;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGETNPIXELMAPUSVARBPROC
__glewGetnPolygonStippleARB	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGETNPOLYGONSTIPPLEARBPROC __glewGetnPolygonStippleARB;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGETNPOLYGONSTIPPLEARBPROC
__glewGetnSeparableFilterARB	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGETNSEPARABLEFILTERARBPROC __glewGetnSeparableFilterARB;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGETNSEPARABLEFILTERARBPROC
__glewGetnTexImage	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGETNTEXIMAGEPROC __glewGetnTexImage;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGETNTEXIMAGEPROC
__glewGetnTexImageARB	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGETNTEXIMAGEARBPROC __glewGetnTexImageARB;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGETNTEXIMAGEARBPROC
__glewGetnUniformdv	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGETNUNIFORMDVPROC __glewGetnUniformdv;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGETNUNIFORMDVPROC
__glewGetnUniformdvARB	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGETNUNIFORMDVARBPROC __glewGetnUniformdvARB;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGETNUNIFORMDVARBPROC
__glewGetnUniformfv	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGETNUNIFORMFVPROC __glewGetnUniformfv;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGETNUNIFORMFVPROC
__glewGetnUniformfvARB	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGETNUNIFORMFVARBPROC __glewGetnUniformfvARB;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGETNUNIFORMFVARBPROC
__glewGetnUniformfvEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGETNUNIFORMFVEXTPROC __glewGetnUniformfvEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGETNUNIFORMFVEXTPROC
__glewGetnUniformi64vARB	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGETNUNIFORMI64VARBPROC __glewGetnUniformi64vARB;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGETNUNIFORMI64VARBPROC
__glewGetnUniformiv	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGETNUNIFORMIVPROC __glewGetnUniformiv;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGETNUNIFORMIVPROC
__glewGetnUniformivARB	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGETNUNIFORMIVARBPROC __glewGetnUniformivARB;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGETNUNIFORMIVARBPROC
__glewGetnUniformivEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGETNUNIFORMIVEXTPROC __glewGetnUniformivEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGETNUNIFORMIVEXTPROC
__glewGetnUniformui64vARB	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGETNUNIFORMUI64VARBPROC __glewGetnUniformui64vARB;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGETNUNIFORMUI64VARBPROC
__glewGetnUniformuiv	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGETNUNIFORMUIVPROC __glewGetnUniformuiv;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGETNUNIFORMUIVPROC
__glewGetnUniformuivARB	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGETNUNIFORMUIVARBPROC __glewGetnUniformuivARB;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGETNUNIFORMUIVARBPROC
__glewGlobalAlphaFactorbSUN	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGLOBALALPHAFACTORBSUNPROC __glewGlobalAlphaFactorbSUN;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGLOBALALPHAFACTORBSUNPROC
__glewGlobalAlphaFactordSUN	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGLOBALALPHAFACTORDSUNPROC __glewGlobalAlphaFactordSUN;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGLOBALALPHAFACTORDSUNPROC
__glewGlobalAlphaFactorfSUN	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGLOBALALPHAFACTORFSUNPROC __glewGlobalAlphaFactorfSUN;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGLOBALALPHAFACTORFSUNPROC
__glewGlobalAlphaFactoriSUN	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGLOBALALPHAFACTORISUNPROC __glewGlobalAlphaFactoriSUN;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGLOBALALPHAFACTORISUNPROC
__glewGlobalAlphaFactorsSUN	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGLOBALALPHAFACTORSSUNPROC __glewGlobalAlphaFactorsSUN;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGLOBALALPHAFACTORSSUNPROC
__glewGlobalAlphaFactorubSUN	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGLOBALALPHAFACTORUBSUNPROC __glewGlobalAlphaFactorubSUN;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGLOBALALPHAFACTORUBSUNPROC
__glewGlobalAlphaFactoruiSUN	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGLOBALALPHAFACTORUISUNPROC __glewGlobalAlphaFactoruiSUN;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGLOBALALPHAFACTORUISUNPROC
__glewGlobalAlphaFactorusSUN	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLGLOBALALPHAFACTORUSSUNPROC __glewGlobalAlphaFactorusSUN;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLGLOBALALPHAFACTORUSSUNPROC
__glewHistogram	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLHISTOGRAMPROC __glewHistogram;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLHISTOGRAMPROC
__glewHistogramEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLHISTOGRAMEXTPROC __glewHistogramEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLHISTOGRAMEXTPROC
__glewIglooInterfaceSGIX	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLIGLOOINTERFACESGIXPROC __glewIglooInterfaceSGIX;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLIGLOOINTERFACESGIXPROC
__glewImageTransformParameterfHP	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLIMAGETRANSFORMPARAMETERFHPPROC __glewImageTransformParameterfHP;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLIMAGETRANSFORMPARAMETERFHPPROC
__glewImageTransformParameterfvHP	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLIMAGETRANSFORMPARAMETERFVHPPROC __glewImageTransformParameterfvHP;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLIMAGETRANSFORMPARAMETERFVHPPROC
__glewImageTransformParameteriHP	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLIMAGETRANSFORMPARAMETERIHPPROC __glewImageTransformParameteriHP;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLIMAGETRANSFORMPARAMETERIHPPROC
__glewImageTransformParameterivHP	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLIMAGETRANSFORMPARAMETERIVHPPROC __glewImageTransformParameterivHP;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLIMAGETRANSFORMPARAMETERIVHPPROC
__glewImportMemoryFdEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLIMPORTMEMORYFDEXTPROC __glewImportMemoryFdEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLIMPORTMEMORYFDEXTPROC
__glewImportMemoryWin32HandleEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLIMPORTMEMORYWIN32HANDLEEXTPROC __glewImportMemoryWin32HandleEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLIMPORTMEMORYWIN32HANDLEEXTPROC
__glewImportMemoryWin32NameEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLIMPORTMEMORYWIN32NAMEEXTPROC __glewImportMemoryWin32NameEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLIMPORTMEMORYWIN32NAMEEXTPROC
__glewImportSemaphoreFdEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLIMPORTSEMAPHOREFDEXTPROC __glewImportSemaphoreFdEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLIMPORTSEMAPHOREFDEXTPROC
__glewImportSemaphoreWin32HandleEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLIMPORTSEMAPHOREWIN32HANDLEEXTPROC __glewImportSemaphoreWin32HandleEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLIMPORTSEMAPHOREWIN32HANDLEEXTPROC
__glewImportSemaphoreWin32NameEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLIMPORTSEMAPHOREWIN32NAMEEXTPROC __glewImportSemaphoreWin32NameEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLIMPORTSEMAPHOREWIN32NAMEEXTPROC
__glewImportSyncEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLIMPORTSYNCEXTPROC __glewImportSyncEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLIMPORTSYNCEXTPROC
__glewIndexFormatNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLINDEXFORMATNVPROC __glewIndexFormatNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLINDEXFORMATNVPROC
__glewIndexFuncEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLINDEXFUNCEXTPROC __glewIndexFuncEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLINDEXFUNCEXTPROC
__glewIndexMaterialEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLINDEXMATERIALEXTPROC __glewIndexMaterialEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLINDEXMATERIALEXTPROC
__glewIndexPointerEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLINDEXPOINTEREXTPROC __glewIndexPointerEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLINDEXPOINTEREXTPROC
__glewIndexPointerListIBM	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLINDEXPOINTERLISTIBMPROC __glewIndexPointerListIBM;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLINDEXPOINTERLISTIBMPROC
__glewInsertComponentEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLINSERTCOMPONENTEXTPROC __glewInsertComponentEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLINSERTCOMPONENTEXTPROC
__glewInsertEventMarkerEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLINSERTEVENTMARKEREXTPROC __glewInsertEventMarkerEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLINSERTEVENTMARKEREXTPROC
__glewInterleavedTextureCoordSetsSGIS	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLINTERLEAVEDTEXTURECOORDSETSSGISPROC __glewInterleavedTextureCoordSetsSGIS;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLINTERLEAVEDTEXTURECOORDSETSSGISPROC
__glewInterpolatePathsNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLINTERPOLATEPATHSNVPROC __glewInterpolatePathsNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLINTERPOLATEPATHSNVPROC
__glewInvalidateBufferData	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLINVALIDATEBUFFERDATAPROC __glewInvalidateBufferData;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLINVALIDATEBUFFERDATAPROC
__glewInvalidateBufferSubData	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLINVALIDATEBUFFERSUBDATAPROC __glewInvalidateBufferSubData;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLINVALIDATEBUFFERSUBDATAPROC
__glewInvalidateFramebuffer	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLINVALIDATEFRAMEBUFFERPROC __glewInvalidateFramebuffer;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLINVALIDATEFRAMEBUFFERPROC
__glewInvalidateNamedFramebufferData	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLINVALIDATENAMEDFRAMEBUFFERDATAPROC __glewInvalidateNamedFramebufferData;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLINVALIDATENAMEDFRAMEBUFFERDATAPROC
__glewInvalidateNamedFramebufferSubData	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLINVALIDATENAMEDFRAMEBUFFERSUBDATAPROC __glewInvalidateNamedFramebufferSubDa/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLINVALIDATENAMEDFRAMEBUFFERSUBDATAPROC
__glewInvalidateSubFramebuffer	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLINVALIDATESUBFRAMEBUFFERPROC __glewInvalidateSubFramebuffer;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLINVALIDATESUBFRAMEBUFFERPROC
__glewInvalidateTexImage	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLINVALIDATETEXIMAGEPROC __glewInvalidateTexImage;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLINVALIDATETEXIMAGEPROC
__glewInvalidateTexSubImage	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLINVALIDATETEXSUBIMAGEPROC __glewInvalidateTexSubImage;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLINVALIDATETEXSUBIMAGEPROC
__glewIsAsyncMarkerSGIX	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLISASYNCMARKERSGIXPROC __glewIsAsyncMarkerSGIX;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLISASYNCMARKERSGIXPROC
__glewIsBuffer	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLISBUFFERPROC __glewIsBuffer;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLISBUFFERPROC
__glewIsBufferARB	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLISBUFFERARBPROC __glewIsBufferARB;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLISBUFFERARBPROC
__glewIsBufferResidentNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLISBUFFERRESIDENTNVPROC __glewIsBufferResidentNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLISBUFFERRESIDENTNVPROC
__glewIsCommandListNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLISCOMMANDLISTNVPROC __glewIsCommandListNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLISCOMMANDLISTNVPROC
__glewIsEnabledIndexedEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLISENABLEDINDEXEDEXTPROC __glewIsEnabledIndexedEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLISENABLEDINDEXEDEXTPROC
__glewIsEnabledi	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLISENABLEDIPROC __glewIsEnabledi;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLISENABLEDIPROC
__glewIsEnablediEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLISENABLEDIEXTPROC __glewIsEnablediEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLISENABLEDIEXTPROC
__glewIsEnablediNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLISENABLEDINVPROC __glewIsEnablediNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLISENABLEDINVPROC
__glewIsEnablediOES	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLISENABLEDIOESPROC __glewIsEnablediOES;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLISENABLEDIOESPROC
__glewIsFenceAPPLE	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLISFENCEAPPLEPROC __glewIsFenceAPPLE;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLISFENCEAPPLEPROC
__glewIsFenceNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLISFENCENVPROC __glewIsFenceNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLISFENCENVPROC
__glewIsFramebuffer	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLISFRAMEBUFFERPROC __glewIsFramebuffer;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLISFRAMEBUFFERPROC
__glewIsFramebufferEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLISFRAMEBUFFEREXTPROC __glewIsFramebufferEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLISFRAMEBUFFEREXTPROC
__glewIsFramebufferOES	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLISFRAMEBUFFEROESPROC __glewIsFramebufferOES;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLISFRAMEBUFFEROESPROC
__glewIsImageHandleResidentARB	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLISIMAGEHANDLERESIDENTARBPROC __glewIsImageHandleResidentARB;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLISIMAGEHANDLERESIDENTARBPROC
__glewIsImageHandleResidentNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLISIMAGEHANDLERESIDENTNVPROC __glewIsImageHandleResidentNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLISIMAGEHANDLERESIDENTNVPROC
__glewIsMPEGPredictorSGIX	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLISMPEGPREDICTORSGIXPROC __glewIsMPEGPredictorSGIX;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLISMPEGPREDICTORSGIXPROC
__glewIsMemoryObjectEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLISMEMORYOBJECTEXTPROC __glewIsMemoryObjectEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLISMEMORYOBJECTEXTPROC
__glewIsNameAMD	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLISNAMEAMDPROC __glewIsNameAMD;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLISNAMEAMDPROC
__glewIsNamedBufferResidentNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLISNAMEDBUFFERRESIDENTNVPROC __glewIsNamedBufferResidentNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLISNAMEDBUFFERRESIDENTNVPROC
__glewIsNamedStringARB	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLISNAMEDSTRINGARBPROC __glewIsNamedStringARB;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLISNAMEDSTRINGARBPROC
__glewIsObjectBufferATI	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLISOBJECTBUFFERATIPROC __glewIsObjectBufferATI;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLISOBJECTBUFFERATIPROC
__glewIsOcclusionQueryNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLISOCCLUSIONQUERYNVPROC __glewIsOcclusionQueryNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLISOCCLUSIONQUERYNVPROC
__glewIsPathNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLISPATHNVPROC __glewIsPathNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLISPATHNVPROC
__glewIsPointInFillPathNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLISPOINTINFILLPATHNVPROC __glewIsPointInFillPathNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLISPOINTINFILLPATHNVPROC
__glewIsPointInStrokePathNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLISPOINTINSTROKEPATHNVPROC __glewIsPointInStrokePathNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLISPOINTINSTROKEPATHNVPROC
__glewIsProgram	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLISPROGRAMPROC __glewIsProgram;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLISPROGRAMPROC
__glewIsProgramARB	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLISPROGRAMARBPROC __glewIsProgramARB;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLISPROGRAMARBPROC
__glewIsProgramNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLISPROGRAMNVPROC __glewIsProgramNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLISPROGRAMNVPROC
__glewIsProgramPipeline	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLISPROGRAMPIPELINEPROC __glewIsProgramPipeline;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLISPROGRAMPIPELINEPROC
__glewIsQuery	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLISQUERYPROC __glewIsQuery;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLISQUERYPROC
__glewIsQueryANGLE	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLISQUERYANGLEPROC __glewIsQueryANGLE;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLISQUERYANGLEPROC
__glewIsQueryARB	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLISQUERYARBPROC __glewIsQueryARB;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLISQUERYARBPROC
__glewIsQueryEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLISQUERYEXTPROC __glewIsQueryEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLISQUERYEXTPROC
__glewIsRenderbuffer	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLISRENDERBUFFERPROC __glewIsRenderbuffer;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLISRENDERBUFFERPROC
__glewIsRenderbufferEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLISRENDERBUFFEREXTPROC __glewIsRenderbufferEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLISRENDERBUFFEREXTPROC
__glewIsRenderbufferOES	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLISRENDERBUFFEROESPROC __glewIsRenderbufferOES;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLISRENDERBUFFEROESPROC
__glewIsSampler	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLISSAMPLERPROC __glewIsSampler;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLISSAMPLERPROC
__glewIsSemaphoreEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLISSEMAPHOREEXTPROC __glewIsSemaphoreEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLISSEMAPHOREEXTPROC
__glewIsShader	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLISSHADERPROC __glewIsShader;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLISSHADERPROC
__glewIsStateNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLISSTATENVPROC __glewIsStateNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLISSTATENVPROC
__glewIsSupportedREGAL	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLISSUPPORTEDREGALPROC __glewIsSupportedREGAL;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLISSUPPORTEDREGALPROC
__glewIsSync	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLISSYNCPROC __glewIsSync;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLISSYNCPROC
__glewIsSyncAPPLE	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLISSYNCAPPLEPROC __glewIsSyncAPPLE;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLISSYNCAPPLEPROC
__glewIsTextureEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLISTEXTUREEXTPROC __glewIsTextureEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLISTEXTUREEXTPROC
__glewIsTextureHandleResidentARB	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLISTEXTUREHANDLERESIDENTARBPROC __glewIsTextureHandleResidentARB;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLISTEXTUREHANDLERESIDENTARBPROC
__glewIsTextureHandleResidentNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLISTEXTUREHANDLERESIDENTNVPROC __glewIsTextureHandleResidentNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLISTEXTUREHANDLERESIDENTNVPROC
__glewIsTransformFeedback	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLISTRANSFORMFEEDBACKPROC __glewIsTransformFeedback;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLISTRANSFORMFEEDBACKPROC
__glewIsTransformFeedbackNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLISTRANSFORMFEEDBACKNVPROC __glewIsTransformFeedbackNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLISTRANSFORMFEEDBACKNVPROC
__glewIsVariantEnabledEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLISVARIANTENABLEDEXTPROC __glewIsVariantEnabledEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLISVARIANTENABLEDEXTPROC
__glewIsVertexArray	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLISVERTEXARRAYPROC __glewIsVertexArray;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLISVERTEXARRAYPROC
__glewIsVertexArrayAPPLE	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLISVERTEXARRAYAPPLEPROC __glewIsVertexArrayAPPLE;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLISVERTEXARRAYAPPLEPROC
__glewIsVertexArrayOES	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLISVERTEXARRAYOESPROC __glewIsVertexArrayOES;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLISVERTEXARRAYOESPROC
__glewIsVertexArraySGIX	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLISVERTEXARRAYSGIXPROC __glewIsVertexArraySGIX;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLISVERTEXARRAYSGIXPROC
__glewIsVertexAttribEnabledAPPLE	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLISVERTEXATTRIBENABLEDAPPLEPROC __glewIsVertexAttribEnabledAPPLE;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLISVERTEXATTRIBENABLEDAPPLEPROC
__glewLGPUCopyImageSubDataNVX	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLLGPUCOPYIMAGESUBDATANVXPROC __glewLGPUCopyImageSubDataNVX;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLLGPUCOPYIMAGESUBDATANVXPROC
__glewLGPUInterlockNVX	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLLGPUINTERLOCKNVXPROC __glewLGPUInterlockNVX;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLLGPUINTERLOCKNVXPROC
__glewLGPUNamedBufferSubDataNVX	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLLGPUNAMEDBUFFERSUBDATANVXPROC __glewLGPUNamedBufferSubDataNVX;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLLGPUNAMEDBUFFERSUBDATANVXPROC
__glewLabelObjectEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLLABELOBJECTEXTPROC __glewLabelObjectEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLLABELOBJECTEXTPROC
__glewLightEnviEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLLIGHTENVIEXTPROC __glewLightEnviEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLLIGHTENVIEXTPROC
__glewLightModelx	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLLIGHTMODELXPROC __glewLightModelx;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLLIGHTMODELXPROC
__glewLightModelxv	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLLIGHTMODELXVPROC __glewLightModelxv;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLLIGHTMODELXVPROC
__glewLightx	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLLIGHTXPROC __glewLightx;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLLIGHTXPROC
__glewLightxv	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLLIGHTXVPROC __glewLightxv;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLLIGHTXVPROC
__glewLineWidthx	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLLINEWIDTHXPROC __glewLineWidthx;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLLINEWIDTHXPROC
__glewLinkProgram	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLLINKPROGRAMPROC __glewLinkProgram;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLLINKPROGRAMPROC
__glewLinkProgramARB	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLLINKPROGRAMARBPROC __glewLinkProgramARB;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLLINKPROGRAMARBPROC
__glewListDrawCommandsStatesClientNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLLISTDRAWCOMMANDSSTATESCLIENTNVPROC __glewListDrawCommandsStatesClientNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLLISTDRAWCOMMANDSSTATESCLIENTNVPROC
__glewLoadIdentityDeformationMapSGIX	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLLOADIDENTITYDEFORMATIONMAPSGIXPROC __glewLoadIdentityDeformationMapSGIX;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLLOADIDENTITYDEFORMATIONMAPSGIXPROC
__glewLoadMatrixx	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLLOADMATRIXXPROC __glewLoadMatrixx;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLLOADMATRIXXPROC
__glewLoadProgramNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLLOADPROGRAMNVPROC __glewLoadProgramNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLLOADPROGRAMNVPROC
__glewLoadTransposeMatrixd	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLLOADTRANSPOSEMATRIXDPROC __glewLoadTransposeMatrixd;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLLOADTRANSPOSEMATRIXDPROC
__glewLoadTransposeMatrixdARB	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLLOADTRANSPOSEMATRIXDARBPROC __glewLoadTransposeMatrixdARB;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLLOADTRANSPOSEMATRIXDARBPROC
__glewLoadTransposeMatrixf	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLLOADTRANSPOSEMATRIXFPROC __glewLoadTransposeMatrixf;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLLOADTRANSPOSEMATRIXFPROC
__glewLoadTransposeMatrixfARB	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLLOADTRANSPOSEMATRIXFARBPROC __glewLoadTransposeMatrixfARB;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLLOADTRANSPOSEMATRIXFARBPROC
__glewLockArraysEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLLOCKARRAYSEXTPROC __glewLockArraysEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLLOCKARRAYSEXTPROC
__glewLogMessageCallbackREGAL	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLLOGMESSAGECALLBACKREGALPROC __glewLogMessageCallbackREGAL;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLLOGMESSAGECALLBACKREGALPROC
__glewMPEGPredictorSGIX	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLMPEGPREDICTORSGIXPROC __glewMPEGPredictorSGIX;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLMPEGPREDICTORSGIXPROC
__glewMPEGQuantTableubv	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLMPEGQUANTTABLEUBVPROC __glewMPEGQuantTableubv;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLMPEGQUANTTABLEUBVPROC
__glewMakeBufferNonResidentNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLMAKEBUFFERNONRESIDENTNVPROC __glewMakeBufferNonResidentNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLMAKEBUFFERNONRESIDENTNVPROC
__glewMakeBufferResidentNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLMAKEBUFFERRESIDENTNVPROC __glewMakeBufferResidentNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLMAKEBUFFERRESIDENTNVPROC
__glewMakeImageHandleNonResidentARB	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLMAKEIMAGEHANDLENONRESIDENTARBPROC __glewMakeImageHandleNonResidentARB;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLMAKEIMAGEHANDLENONRESIDENTARBPROC
__glewMakeImageHandleNonResidentNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLMAKEIMAGEHANDLENONRESIDENTNVPROC __glewMakeImageHandleNonResidentNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLMAKEIMAGEHANDLENONRESIDENTNVPROC
__glewMakeImageHandleResidentARB	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLMAKEIMAGEHANDLERESIDENTARBPROC __glewMakeImageHandleResidentARB;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLMAKEIMAGEHANDLERESIDENTARBPROC
__glewMakeImageHandleResidentNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLMAKEIMAGEHANDLERESIDENTNVPROC __glewMakeImageHandleResidentNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLMAKEIMAGEHANDLERESIDENTNVPROC
__glewMakeNamedBufferNonResidentNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLMAKENAMEDBUFFERNONRESIDENTNVPROC __glewMakeNamedBufferNonResidentNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLMAKENAMEDBUFFERNONRESIDENTNVPROC
__glewMakeNamedBufferResidentNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLMAKENAMEDBUFFERRESIDENTNVPROC __glewMakeNamedBufferResidentNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLMAKENAMEDBUFFERRESIDENTNVPROC
__glewMakeTextureHandleNonResidentARB	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLMAKETEXTUREHANDLENONRESIDENTARBPROC __glewMakeTextureHandleNonResidentARB;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLMAKETEXTUREHANDLENONRESIDENTARBPROC
__glewMakeTextureHandleNonResidentNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLMAKETEXTUREHANDLENONRESIDENTNVPROC __glewMakeTextureHandleNonResidentNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLMAKETEXTUREHANDLENONRESIDENTNVPROC
__glewMakeTextureHandleResidentARB	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLMAKETEXTUREHANDLERESIDENTARBPROC __glewMakeTextureHandleResidentARB;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLMAKETEXTUREHANDLERESIDENTARBPROC
__glewMakeTextureHandleResidentNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLMAKETEXTUREHANDLERESIDENTNVPROC __glewMakeTextureHandleResidentNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLMAKETEXTUREHANDLERESIDENTNVPROC
__glewMapBuffer	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLMAPBUFFERPROC __glewMapBuffer;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLMAPBUFFERPROC
__glewMapBufferARB	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLMAPBUFFERARBPROC __glewMapBufferARB;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLMAPBUFFERARBPROC
__glewMapBufferOES	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLMAPBUFFEROESPROC __glewMapBufferOES;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLMAPBUFFEROESPROC
__glewMapBufferRange	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLMAPBUFFERRANGEPROC __glewMapBufferRange;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLMAPBUFFERRANGEPROC
__glewMapBufferRangeEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLMAPBUFFERRANGEEXTPROC __glewMapBufferRangeEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLMAPBUFFERRANGEEXTPROC
__glewMapControlPointsNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLMAPCONTROLPOINTSNVPROC __glewMapControlPointsNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLMAPCONTROLPOINTSNVPROC
__glewMapNamedBuffer	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLMAPNAMEDBUFFERPROC __glewMapNamedBuffer;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLMAPNAMEDBUFFERPROC
__glewMapNamedBufferEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLMAPNAMEDBUFFEREXTPROC __glewMapNamedBufferEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLMAPNAMEDBUFFEREXTPROC
__glewMapNamedBufferRange	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLMAPNAMEDBUFFERRANGEPROC __glewMapNamedBufferRange;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLMAPNAMEDBUFFERRANGEPROC
__glewMapNamedBufferRangeEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLMAPNAMEDBUFFERRANGEEXTPROC __glewMapNamedBufferRangeEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLMAPNAMEDBUFFERRANGEEXTPROC
__glewMapObjectBufferATI	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLMAPOBJECTBUFFERATIPROC __glewMapObjectBufferATI;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLMAPOBJECTBUFFERATIPROC
__glewMapParameterfvNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLMAPPARAMETERFVNVPROC __glewMapParameterfvNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLMAPPARAMETERFVNVPROC
__glewMapParameterivNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLMAPPARAMETERIVNVPROC __glewMapParameterivNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLMAPPARAMETERIVNVPROC
__glewMapTexture2DINTEL	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLMAPTEXTURE2DINTELPROC __glewMapTexture2DINTEL;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLMAPTEXTURE2DINTELPROC
__glewMapVertexAttrib1dAPPLE	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLMAPVERTEXATTRIB1DAPPLEPROC __glewMapVertexAttrib1dAPPLE;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLMAPVERTEXATTRIB1DAPPLEPROC
__glewMapVertexAttrib1fAPPLE	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLMAPVERTEXATTRIB1FAPPLEPROC __glewMapVertexAttrib1fAPPLE;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLMAPVERTEXATTRIB1FAPPLEPROC
__glewMapVertexAttrib2dAPPLE	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLMAPVERTEXATTRIB2DAPPLEPROC __glewMapVertexAttrib2dAPPLE;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLMAPVERTEXATTRIB2DAPPLEPROC
__glewMapVertexAttrib2fAPPLE	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLMAPVERTEXATTRIB2FAPPLEPROC __glewMapVertexAttrib2fAPPLE;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLMAPVERTEXATTRIB2FAPPLEPROC
__glewMaterialx	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLMATERIALXPROC __glewMaterialx;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLMATERIALXPROC
__glewMaterialxv	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLMATERIALXVPROC __glewMaterialxv;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLMATERIALXVPROC
__glewMatrixFrustumEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLMATRIXFRUSTUMEXTPROC __glewMatrixFrustumEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLMATRIXFRUSTUMEXTPROC
__glewMatrixIndexPointerARB	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLMATRIXINDEXPOINTERARBPROC __glewMatrixIndexPointerARB;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLMATRIXINDEXPOINTERARBPROC
__glewMatrixIndexPointerOES	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLMATRIXINDEXPOINTEROESPROC __glewMatrixIndexPointerOES;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLMATRIXINDEXPOINTEROESPROC
__glewMatrixIndexubvARB	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLMATRIXINDEXUBVARBPROC __glewMatrixIndexubvARB;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLMATRIXINDEXUBVARBPROC
__glewMatrixIndexuivARB	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLMATRIXINDEXUIVARBPROC __glewMatrixIndexuivARB;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLMATRIXINDEXUIVARBPROC
__glewMatrixIndexusvARB	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLMATRIXINDEXUSVARBPROC __glewMatrixIndexusvARB;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLMATRIXINDEXUSVARBPROC
__glewMatrixLoad3x2fNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLMATRIXLOAD3X2FNVPROC __glewMatrixLoad3x2fNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLMATRIXLOAD3X2FNVPROC
__glewMatrixLoad3x3fNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLMATRIXLOAD3X3FNVPROC __glewMatrixLoad3x3fNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLMATRIXLOAD3X3FNVPROC
__glewMatrixLoadIdentityEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLMATRIXLOADIDENTITYEXTPROC __glewMatrixLoadIdentityEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLMATRIXLOADIDENTITYEXTPROC
__glewMatrixLoadTranspose3x3fNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLMATRIXLOADTRANSPOSE3X3FNVPROC __glewMatrixLoadTranspose3x3fNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLMATRIXLOADTRANSPOSE3X3FNVPROC
__glewMatrixLoadTransposedEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLMATRIXLOADTRANSPOSEDEXTPROC __glewMatrixLoadTransposedEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLMATRIXLOADTRANSPOSEDEXTPROC
__glewMatrixLoadTransposefEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLMATRIXLOADTRANSPOSEFEXTPROC __glewMatrixLoadTransposefEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLMATRIXLOADTRANSPOSEFEXTPROC
__glewMatrixLoaddEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLMATRIXLOADDEXTPROC __glewMatrixLoaddEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLMATRIXLOADDEXTPROC
__glewMatrixLoadfEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLMATRIXLOADFEXTPROC __glewMatrixLoadfEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLMATRIXLOADFEXTPROC
__glewMatrixMult3x2fNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLMATRIXMULT3X2FNVPROC __glewMatrixMult3x2fNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLMATRIXMULT3X2FNVPROC
__glewMatrixMult3x3fNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLMATRIXMULT3X3FNVPROC __glewMatrixMult3x3fNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLMATRIXMULT3X3FNVPROC
__glewMatrixMultTranspose3x3fNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLMATRIXMULTTRANSPOSE3X3FNVPROC __glewMatrixMultTranspose3x3fNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLMATRIXMULTTRANSPOSE3X3FNVPROC
__glewMatrixMultTransposedEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLMATRIXMULTTRANSPOSEDEXTPROC __glewMatrixMultTransposedEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLMATRIXMULTTRANSPOSEDEXTPROC
__glewMatrixMultTransposefEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLMATRIXMULTTRANSPOSEFEXTPROC __glewMatrixMultTransposefEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLMATRIXMULTTRANSPOSEFEXTPROC
__glewMatrixMultdEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLMATRIXMULTDEXTPROC __glewMatrixMultdEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLMATRIXMULTDEXTPROC
__glewMatrixMultfEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLMATRIXMULTFEXTPROC __glewMatrixMultfEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLMATRIXMULTFEXTPROC
__glewMatrixOrthoEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLMATRIXORTHOEXTPROC __glewMatrixOrthoEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLMATRIXORTHOEXTPROC
__glewMatrixPopEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLMATRIXPOPEXTPROC __glewMatrixPopEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLMATRIXPOPEXTPROC
__glewMatrixPushEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLMATRIXPUSHEXTPROC __glewMatrixPushEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLMATRIXPUSHEXTPROC
__glewMatrixRotatedEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLMATRIXROTATEDEXTPROC __glewMatrixRotatedEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLMATRIXROTATEDEXTPROC
__glewMatrixRotatefEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLMATRIXROTATEFEXTPROC __glewMatrixRotatefEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLMATRIXROTATEFEXTPROC
__glewMatrixScaledEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLMATRIXSCALEDEXTPROC __glewMatrixScaledEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLMATRIXSCALEDEXTPROC
__glewMatrixScalefEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLMATRIXSCALEFEXTPROC __glewMatrixScalefEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLMATRIXSCALEFEXTPROC
__glewMatrixTranslatedEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLMATRIXTRANSLATEDEXTPROC __glewMatrixTranslatedEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLMATRIXTRANSLATEDEXTPROC
__glewMatrixTranslatefEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLMATRIXTRANSLATEFEXTPROC __glewMatrixTranslatefEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLMATRIXTRANSLATEFEXTPROC
__glewMaxShaderCompilerThreadsARB	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLMAXSHADERCOMPILERTHREADSARBPROC __glewMaxShaderCompilerThreadsARB;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLMAXSHADERCOMPILERTHREADSARBPROC
__glewMaxShaderCompilerThreadsKHR	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLMAXSHADERCOMPILERTHREADSKHRPROC __glewMaxShaderCompilerThreadsKHR;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLMAXSHADERCOMPILERTHREADSKHRPROC
__glewMemoryBarrier	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLMEMORYBARRIERPROC __glewMemoryBarrier;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLMEMORYBARRIERPROC
__glewMemoryBarrierByRegion	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLMEMORYBARRIERBYREGIONPROC __glewMemoryBarrierByRegion;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLMEMORYBARRIERBYREGIONPROC
__glewMemoryBarrierEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLMEMORYBARRIEREXTPROC __glewMemoryBarrierEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLMEMORYBARRIEREXTPROC
__glewMemoryObjectParameterivEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLMEMORYOBJECTPARAMETERIVEXTPROC __glewMemoryObjectParameterivEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLMEMORYOBJECTPARAMETERIVEXTPROC
__glewMeshBreadthSGIX	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLMESHBREADTHSGIXPROC __glewMeshBreadthSGIX;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLMESHBREADTHSGIXPROC
__glewMeshStrideSGIX	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLMESHSTRIDESGIXPROC __glewMeshStrideSGIX;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLMESHSTRIDESGIXPROC
__glewMinSampleShading	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLMINSAMPLESHADINGPROC __glewMinSampleShading;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLMINSAMPLESHADINGPROC
__glewMinSampleShadingARB	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLMINSAMPLESHADINGARBPROC __glewMinSampleShadingARB;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLMINSAMPLESHADINGARBPROC
__glewMinSampleShadingOES	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLMINSAMPLESHADINGOESPROC __glewMinSampleShadingOES;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLMINSAMPLESHADINGOESPROC
__glewMinmax	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLMINMAXPROC __glewMinmax;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLMINMAXPROC
__glewMinmaxEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLMINMAXEXTPROC __glewMinmaxEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLMINMAXEXTPROC
__glewMultMatrixx	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLMULTMATRIXXPROC __glewMultMatrixx;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLMULTMATRIXXPROC
__glewMultTransposeMatrixd	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLMULTTRANSPOSEMATRIXDPROC __glewMultTransposeMatrixd;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLMULTTRANSPOSEMATRIXDPROC
__glewMultTransposeMatrixdARB	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLMULTTRANSPOSEMATRIXDARBPROC __glewMultTransposeMatrixdARB;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLMULTTRANSPOSEMATRIXDARBPROC
__glewMultTransposeMatrixf	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLMULTTRANSPOSEMATRIXFPROC __glewMultTransposeMatrixf;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLMULTTRANSPOSEMATRIXFPROC
__glewMultTransposeMatrixfARB	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLMULTTRANSPOSEMATRIXFARBPROC __glewMultTransposeMatrixfARB;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLMULTTRANSPOSEMATRIXFARBPROC
__glewMultiDrawArrays	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLMULTIDRAWARRAYSPROC __glewMultiDrawArrays;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLMULTIDRAWARRAYSPROC
__glewMultiDrawArraysEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLMULTIDRAWARRAYSEXTPROC __glewMultiDrawArraysEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLMULTIDRAWARRAYSEXTPROC
__glewMultiDrawArraysIndirect	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLMULTIDRAWARRAYSINDIRECTPROC __glewMultiDrawArraysIndirect;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLMULTIDRAWARRAYSINDIRECTPROC
__glewMultiDrawArraysIndirectAMD	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLMULTIDRAWARRAYSINDIRECTAMDPROC __glewMultiDrawArraysIndirectAMD;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLMULTIDRAWARRAYSINDIRECTAMDPROC
__glewMultiDrawArraysIndirectBindlessCountNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLMULTIDRAWARRAYSINDIRECTBINDLESSCOUNTNVPROC __glewMultiDrawArraysIndirectBin/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLMULTIDRAWARRAYSINDIRECTBINDLESSCOUNTNVPROC
__glewMultiDrawArraysIndirectBindlessNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLMULTIDRAWARRAYSINDIRECTBINDLESSNVPROC __glewMultiDrawArraysIndirectBindless/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLMULTIDRAWARRAYSINDIRECTBINDLESSNVPROC
__glewMultiDrawArraysIndirectCount	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLMULTIDRAWARRAYSINDIRECTCOUNTPROC __glewMultiDrawArraysIndirectCount;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLMULTIDRAWARRAYSINDIRECTCOUNTPROC
__glewMultiDrawArraysIndirectCountARB	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLMULTIDRAWARRAYSINDIRECTCOUNTARBPROC __glewMultiDrawArraysIndirectCountARB;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLMULTIDRAWARRAYSINDIRECTCOUNTARBPROC
__glewMultiDrawArraysIndirectEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLMULTIDRAWARRAYSINDIRECTEXTPROC __glewMultiDrawArraysIndirectEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLMULTIDRAWARRAYSINDIRECTEXTPROC
__glewMultiDrawElementArrayAPPLE	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLMULTIDRAWELEMENTARRAYAPPLEPROC __glewMultiDrawElementArrayAPPLE;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLMULTIDRAWELEMENTARRAYAPPLEPROC
__glewMultiDrawElements	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLMULTIDRAWELEMENTSPROC __glewMultiDrawElements;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLMULTIDRAWELEMENTSPROC
__glewMultiDrawElementsBaseVertex	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLMULTIDRAWELEMENTSBASEVERTEXPROC __glewMultiDrawElementsBaseVertex;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLMULTIDRAWELEMENTSBASEVERTEXPROC
__glewMultiDrawElementsBaseVertexEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLMULTIDRAWELEMENTSBASEVERTEXEXTPROC __glewMultiDrawElementsBaseVertexEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLMULTIDRAWELEMENTSBASEVERTEXEXTPROC
__glewMultiDrawElementsEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLMULTIDRAWELEMENTSEXTPROC __glewMultiDrawElementsEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLMULTIDRAWELEMENTSEXTPROC
__glewMultiDrawElementsIndirect	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLMULTIDRAWELEMENTSINDIRECTPROC __glewMultiDrawElementsIndirect;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLMULTIDRAWELEMENTSINDIRECTPROC
__glewMultiDrawElementsIndirectAMD	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLMULTIDRAWELEMENTSINDIRECTAMDPROC __glewMultiDrawElementsIndirectAMD;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLMULTIDRAWELEMENTSINDIRECTAMDPROC
__glewMultiDrawElementsIndirectBindlessCountNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLMULTIDRAWELEMENTSINDIRECTBINDLESSCOUNTNVPROC __glewMultiDrawElementsIndirec/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLMULTIDRAWELEMENTSINDIRECTBINDLESSCOUNTNVPROC
__glewMultiDrawElementsIndirectBindlessNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLMULTIDRAWELEMENTSINDIRECTBINDLESSNVPROC __glewMultiDrawElementsIndirectBind/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLMULTIDRAWELEMENTSINDIRECTBINDLESSNVPROC
__glewMultiDrawElementsIndirectCount	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLMULTIDRAWELEMENTSINDIRECTCOUNTPROC __glewMultiDrawElementsIndirectCount;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLMULTIDRAWELEMENTSINDIRECTCOUNTPROC
__glewMultiDrawElementsIndirectCountARB	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLMULTIDRAWELEMENTSINDIRECTCOUNTARBPROC __glewMultiDrawElementsIndirectCountA/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLMULTIDRAWELEMENTSINDIRECTCOUNTARBPROC
__glewMultiDrawElementsIndirectEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLMULTIDRAWELEMENTSINDIRECTEXTPROC __glewMultiDrawElementsIndirectEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLMULTIDRAWELEMENTSINDIRECTEXTPROC
__glewMultiDrawMeshTasksIndirectCountNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLMULTIDRAWMESHTASKSINDIRECTCOUNTNVPROC __glewMultiDrawMeshTasksIndirectCount/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLMULTIDRAWMESHTASKSINDIRECTCOUNTNVPROC
__glewMultiDrawMeshTasksIndirectNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLMULTIDRAWMESHTASKSINDIRECTNVPROC __glewMultiDrawMeshTasksIndirectNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLMULTIDRAWMESHTASKSINDIRECTNVPROC
__glewMultiDrawRangeElementArrayAPPLE	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLMULTIDRAWRANGEELEMENTARRAYAPPLEPROC __glewMultiDrawRangeElementArrayAPPLE;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLMULTIDRAWRANGEELEMENTARRAYAPPLEPROC
__glewMultiModeDrawArraysIBM	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLMULTIMODEDRAWARRAYSIBMPROC __glewMultiModeDrawArraysIBM;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLMULTIMODEDRAWARRAYSIBMPROC
__glewMultiModeDrawElementsIBM	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLMULTIMODEDRAWELEMENTSIBMPROC __glewMultiModeDrawElementsIBM;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLMULTIMODEDRAWELEMENTSIBMPROC
__glewMultiTexBufferEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLMULTITEXBUFFEREXTPROC __glewMultiTexBufferEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLMULTITEXBUFFEREXTPROC
__glewMultiTexCoord1d	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLMULTITEXCOORD1DPROC __glewMultiTexCoord1d;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLMULTITEXCOORD1DPROC
__glewMultiTexCoord1dARB	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLMULTITEXCOORD1DARBPROC __glewMultiTexCoord1dARB;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLMULTITEXCOORD1DARBPROC
__glewMultiTexCoord1dv	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLMULTITEXCOORD1DVPROC __glewMultiTexCoord1dv;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLMULTITEXCOORD1DVPROC
__glewMultiTexCoord1dvARB	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLMULTITEXCOORD1DVARBPROC __glewMultiTexCoord1dvARB;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLMULTITEXCOORD1DVARBPROC
__glewMultiTexCoord1f	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLMULTITEXCOORD1FPROC __glewMultiTexCoord1f;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLMULTITEXCOORD1FPROC
__glewMultiTexCoord1fARB	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLMULTITEXCOORD1FARBPROC __glewMultiTexCoord1fARB;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLMULTITEXCOORD1FARBPROC
__glewMultiTexCoord1fv	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLMULTITEXCOORD1FVPROC __glewMultiTexCoord1fv;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLMULTITEXCOORD1FVPROC
__glewMultiTexCoord1fvARB	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLMULTITEXCOORD1FVARBPROC __glewMultiTexCoord1fvARB;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLMULTITEXCOORD1FVARBPROC
__glewMultiTexCoord1hNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLMULTITEXCOORD1HNVPROC __glewMultiTexCoord1hNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLMULTITEXCOORD1HNVPROC
__glewMultiTexCoord1hvNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLMULTITEXCOORD1HVNVPROC __glewMultiTexCoord1hvNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLMULTITEXCOORD1HVNVPROC
__glewMultiTexCoord1i	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLMULTITEXCOORD1IPROC __glewMultiTexCoord1i;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLMULTITEXCOORD1IPROC
__glewMultiTexCoord1iARB	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLMULTITEXCOORD1IARBPROC __glewMultiTexCoord1iARB;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLMULTITEXCOORD1IARBPROC
__glewMultiTexCoord1iv	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLMULTITEXCOORD1IVPROC __glewMultiTexCoord1iv;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLMULTITEXCOORD1IVPROC
__glewMultiTexCoord1ivARB	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLMULTITEXCOORD1IVARBPROC __glewMultiTexCoord1ivARB;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLMULTITEXCOORD1IVARBPROC
__glewMultiTexCoord1s	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLMULTITEXCOORD1SPROC __glewMultiTexCoord1s;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLMULTITEXCOORD1SPROC
__glewMultiTexCoord1sARB	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLMULTITEXCOORD1SARBPROC __glewMultiTexCoord1sARB;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLMULTITEXCOORD1SARBPROC
__glewMultiTexCoord1sv	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLMULTITEXCOORD1SVPROC __glewMultiTexCoord1sv;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLMULTITEXCOORD1SVPROC
__glewMultiTexCoord1svARB	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLMULTITEXCOORD1SVARBPROC __glewMultiTexCoord1svARB;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLMULTITEXCOORD1SVARBPROC
__glewMultiTexCoord2d	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLMULTITEXCOORD2DPROC __glewMultiTexCoord2d;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLMULTITEXCOORD2DPROC
__glewMultiTexCoord2dARB	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLMULTITEXCOORD2DARBPROC __glewMultiTexCoord2dARB;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLMULTITEXCOORD2DARBPROC
__glewMultiTexCoord2dv	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLMULTITEXCOORD2DVPROC __glewMultiTexCoord2dv;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLMULTITEXCOORD2DVPROC
__glewMultiTexCoord2dvARB	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLMULTITEXCOORD2DVARBPROC __glewMultiTexCoord2dvARB;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLMULTITEXCOORD2DVARBPROC
__glewMultiTexCoord2f	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLMULTITEXCOORD2FPROC __glewMultiTexCoord2f;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLMULTITEXCOORD2FPROC
__glewMultiTexCoord2fARB	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLMULTITEXCOORD2FARBPROC __glewMultiTexCoord2fARB;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLMULTITEXCOORD2FARBPROC
__glewMultiTexCoord2fv	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLMULTITEXCOORD2FVPROC __glewMultiTexCoord2fv;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLMULTITEXCOORD2FVPROC
__glewMultiTexCoord2fvARB	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLMULTITEXCOORD2FVARBPROC __glewMultiTexCoord2fvARB;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLMULTITEXCOORD2FVARBPROC
__glewMultiTexCoord2hNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLMULTITEXCOORD2HNVPROC __glewMultiTexCoord2hNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLMULTITEXCOORD2HNVPROC
__glewMultiTexCoord2hvNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLMULTITEXCOORD2HVNVPROC __glewMultiTexCoord2hvNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLMULTITEXCOORD2HVNVPROC
__glewMultiTexCoord2i	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLMULTITEXCOORD2IPROC __glewMultiTexCoord2i;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLMULTITEXCOORD2IPROC
__glewMultiTexCoord2iARB	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLMULTITEXCOORD2IARBPROC __glewMultiTexCoord2iARB;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLMULTITEXCOORD2IARBPROC
__glewMultiTexCoord2iv	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLMULTITEXCOORD2IVPROC __glewMultiTexCoord2iv;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLMULTITEXCOORD2IVPROC
__glewMultiTexCoord2ivARB	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLMULTITEXCOORD2IVARBPROC __glewMultiTexCoord2ivARB;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLMULTITEXCOORD2IVARBPROC
__glewMultiTexCoord2s	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLMULTITEXCOORD2SPROC __glewMultiTexCoord2s;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLMULTITEXCOORD2SPROC
__glewMultiTexCoord2sARB	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLMULTITEXCOORD2SARBPROC __glewMultiTexCoord2sARB;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLMULTITEXCOORD2SARBPROC
__glewMultiTexCoord2sv	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLMULTITEXCOORD2SVPROC __glewMultiTexCoord2sv;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLMULTITEXCOORD2SVPROC
__glewMultiTexCoord2svARB	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLMULTITEXCOORD2SVARBPROC __glewMultiTexCoord2svARB;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLMULTITEXCOORD2SVARBPROC
__glewMultiTexCoord3d	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLMULTITEXCOORD3DPROC __glewMultiTexCoord3d;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLMULTITEXCOORD3DPROC
__glewMultiTexCoord3dARB	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLMULTITEXCOORD3DARBPROC __glewMultiTexCoord3dARB;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLMULTITEXCOORD3DARBPROC
__glewMultiTexCoord3dv	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLMULTITEXCOORD3DVPROC __glewMultiTexCoord3dv;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLMULTITEXCOORD3DVPROC
__glewMultiTexCoord3dvARB	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLMULTITEXCOORD3DVARBPROC __glewMultiTexCoord3dvARB;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLMULTITEXCOORD3DVARBPROC
__glewMultiTexCoord3f	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLMULTITEXCOORD3FPROC __glewMultiTexCoord3f;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLMULTITEXCOORD3FPROC
__glewMultiTexCoord3fARB	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLMULTITEXCOORD3FARBPROC __glewMultiTexCoord3fARB;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLMULTITEXCOORD3FARBPROC
__glewMultiTexCoord3fv	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLMULTITEXCOORD3FVPROC __glewMultiTexCoord3fv;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLMULTITEXCOORD3FVPROC
__glewMultiTexCoord3fvARB	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLMULTITEXCOORD3FVARBPROC __glewMultiTexCoord3fvARB;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLMULTITEXCOORD3FVARBPROC
__glewMultiTexCoord3hNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLMULTITEXCOORD3HNVPROC __glewMultiTexCoord3hNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLMULTITEXCOORD3HNVPROC
__glewMultiTexCoord3hvNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLMULTITEXCOORD3HVNVPROC __glewMultiTexCoord3hvNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLMULTITEXCOORD3HVNVPROC
__glewMultiTexCoord3i	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLMULTITEXCOORD3IPROC __glewMultiTexCoord3i;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLMULTITEXCOORD3IPROC
__glewMultiTexCoord3iARB	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLMULTITEXCOORD3IARBPROC __glewMultiTexCoord3iARB;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLMULTITEXCOORD3IARBPROC
__glewMultiTexCoord3iv	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLMULTITEXCOORD3IVPROC __glewMultiTexCoord3iv;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLMULTITEXCOORD3IVPROC
__glewMultiTexCoord3ivARB	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLMULTITEXCOORD3IVARBPROC __glewMultiTexCoord3ivARB;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLMULTITEXCOORD3IVARBPROC
__glewMultiTexCoord3s	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLMULTITEXCOORD3SPROC __glewMultiTexCoord3s;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLMULTITEXCOORD3SPROC
__glewMultiTexCoord3sARB	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLMULTITEXCOORD3SARBPROC __glewMultiTexCoord3sARB;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLMULTITEXCOORD3SARBPROC
__glewMultiTexCoord3sv	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLMULTITEXCOORD3SVPROC __glewMultiTexCoord3sv;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLMULTITEXCOORD3SVPROC
__glewMultiTexCoord3svARB	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLMULTITEXCOORD3SVARBPROC __glewMultiTexCoord3svARB;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLMULTITEXCOORD3SVARBPROC
__glewMultiTexCoord4d	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLMULTITEXCOORD4DPROC __glewMultiTexCoord4d;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLMULTITEXCOORD4DPROC
__glewMultiTexCoord4dARB	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLMULTITEXCOORD4DARBPROC __glewMultiTexCoord4dARB;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLMULTITEXCOORD4DARBPROC
__glewMultiTexCoord4dv	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLMULTITEXCOORD4DVPROC __glewMultiTexCoord4dv;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLMULTITEXCOORD4DVPROC
__glewMultiTexCoord4dvARB	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLMULTITEXCOORD4DVARBPROC __glewMultiTexCoord4dvARB;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLMULTITEXCOORD4DVARBPROC
__glewMultiTexCoord4f	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLMULTITEXCOORD4FPROC __glewMultiTexCoord4f;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLMULTITEXCOORD4FPROC
__glewMultiTexCoord4fARB	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLMULTITEXCOORD4FARBPROC __glewMultiTexCoord4fARB;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLMULTITEXCOORD4FARBPROC
__glewMultiTexCoord4fv	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLMULTITEXCOORD4FVPROC __glewMultiTexCoord4fv;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLMULTITEXCOORD4FVPROC
__glewMultiTexCoord4fvARB	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLMULTITEXCOORD4FVARBPROC __glewMultiTexCoord4fvARB;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLMULTITEXCOORD4FVARBPROC
__glewMultiTexCoord4hNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLMULTITEXCOORD4HNVPROC __glewMultiTexCoord4hNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLMULTITEXCOORD4HNVPROC
__glewMultiTexCoord4hvNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLMULTITEXCOORD4HVNVPROC __glewMultiTexCoord4hvNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLMULTITEXCOORD4HVNVPROC
__glewMultiTexCoord4i	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLMULTITEXCOORD4IPROC __glewMultiTexCoord4i;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLMULTITEXCOORD4IPROC
__glewMultiTexCoord4iARB	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLMULTITEXCOORD4IARBPROC __glewMultiTexCoord4iARB;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLMULTITEXCOORD4IARBPROC
__glewMultiTexCoord4iv	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLMULTITEXCOORD4IVPROC __glewMultiTexCoord4iv;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLMULTITEXCOORD4IVPROC
__glewMultiTexCoord4ivARB	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLMULTITEXCOORD4IVARBPROC __glewMultiTexCoord4ivARB;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLMULTITEXCOORD4IVARBPROC
__glewMultiTexCoord4s	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLMULTITEXCOORD4SPROC __glewMultiTexCoord4s;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLMULTITEXCOORD4SPROC
__glewMultiTexCoord4sARB	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLMULTITEXCOORD4SARBPROC __glewMultiTexCoord4sARB;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLMULTITEXCOORD4SARBPROC
__glewMultiTexCoord4sv	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLMULTITEXCOORD4SVPROC __glewMultiTexCoord4sv;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLMULTITEXCOORD4SVPROC
__glewMultiTexCoord4svARB	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLMULTITEXCOORD4SVARBPROC __glewMultiTexCoord4svARB;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLMULTITEXCOORD4SVARBPROC
__glewMultiTexCoord4x	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLMULTITEXCOORD4XPROC __glewMultiTexCoord4x;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLMULTITEXCOORD4XPROC
__glewMultiTexCoordP1ui	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLMULTITEXCOORDP1UIPROC __glewMultiTexCoordP1ui;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLMULTITEXCOORDP1UIPROC
__glewMultiTexCoordP1uiv	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLMULTITEXCOORDP1UIVPROC __glewMultiTexCoordP1uiv;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLMULTITEXCOORDP1UIVPROC
__glewMultiTexCoordP2ui	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLMULTITEXCOORDP2UIPROC __glewMultiTexCoordP2ui;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLMULTITEXCOORDP2UIPROC
__glewMultiTexCoordP2uiv	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLMULTITEXCOORDP2UIVPROC __glewMultiTexCoordP2uiv;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLMULTITEXCOORDP2UIVPROC
__glewMultiTexCoordP3ui	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLMULTITEXCOORDP3UIPROC __glewMultiTexCoordP3ui;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLMULTITEXCOORDP3UIPROC
__glewMultiTexCoordP3uiv	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLMULTITEXCOORDP3UIVPROC __glewMultiTexCoordP3uiv;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLMULTITEXCOORDP3UIVPROC
__glewMultiTexCoordP4ui	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLMULTITEXCOORDP4UIPROC __glewMultiTexCoordP4ui;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLMULTITEXCOORDP4UIPROC
__glewMultiTexCoordP4uiv	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLMULTITEXCOORDP4UIVPROC __glewMultiTexCoordP4uiv;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLMULTITEXCOORDP4UIVPROC
__glewMultiTexCoordPointerEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLMULTITEXCOORDPOINTEREXTPROC __glewMultiTexCoordPointerEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLMULTITEXCOORDPOINTEREXTPROC
__glewMultiTexEnvfEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLMULTITEXENVFEXTPROC __glewMultiTexEnvfEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLMULTITEXENVFEXTPROC
__glewMultiTexEnvfvEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLMULTITEXENVFVEXTPROC __glewMultiTexEnvfvEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLMULTITEXENVFVEXTPROC
__glewMultiTexEnviEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLMULTITEXENVIEXTPROC __glewMultiTexEnviEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLMULTITEXENVIEXTPROC
__glewMultiTexEnvivEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLMULTITEXENVIVEXTPROC __glewMultiTexEnvivEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLMULTITEXENVIVEXTPROC
__glewMultiTexGendEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLMULTITEXGENDEXTPROC __glewMultiTexGendEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLMULTITEXGENDEXTPROC
__glewMultiTexGendvEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLMULTITEXGENDVEXTPROC __glewMultiTexGendvEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLMULTITEXGENDVEXTPROC
__glewMultiTexGenfEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLMULTITEXGENFEXTPROC __glewMultiTexGenfEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLMULTITEXGENFEXTPROC
__glewMultiTexGenfvEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLMULTITEXGENFVEXTPROC __glewMultiTexGenfvEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLMULTITEXGENFVEXTPROC
__glewMultiTexGeniEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLMULTITEXGENIEXTPROC __glewMultiTexGeniEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLMULTITEXGENIEXTPROC
__glewMultiTexGenivEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLMULTITEXGENIVEXTPROC __glewMultiTexGenivEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLMULTITEXGENIVEXTPROC
__glewMultiTexImage1DEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLMULTITEXIMAGE1DEXTPROC __glewMultiTexImage1DEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLMULTITEXIMAGE1DEXTPROC
__glewMultiTexImage2DEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLMULTITEXIMAGE2DEXTPROC __glewMultiTexImage2DEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLMULTITEXIMAGE2DEXTPROC
__glewMultiTexImage3DEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLMULTITEXIMAGE3DEXTPROC __glewMultiTexImage3DEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLMULTITEXIMAGE3DEXTPROC
__glewMultiTexParameterIivEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLMULTITEXPARAMETERIIVEXTPROC __glewMultiTexParameterIivEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLMULTITEXPARAMETERIIVEXTPROC
__glewMultiTexParameterIuivEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLMULTITEXPARAMETERIUIVEXTPROC __glewMultiTexParameterIuivEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLMULTITEXPARAMETERIUIVEXTPROC
__glewMultiTexParameterfEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLMULTITEXPARAMETERFEXTPROC __glewMultiTexParameterfEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLMULTITEXPARAMETERFEXTPROC
__glewMultiTexParameterfvEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLMULTITEXPARAMETERFVEXTPROC __glewMultiTexParameterfvEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLMULTITEXPARAMETERFVEXTPROC
__glewMultiTexParameteriEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLMULTITEXPARAMETERIEXTPROC __glewMultiTexParameteriEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLMULTITEXPARAMETERIEXTPROC
__glewMultiTexParameterivEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLMULTITEXPARAMETERIVEXTPROC __glewMultiTexParameterivEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLMULTITEXPARAMETERIVEXTPROC
__glewMultiTexRenderbufferEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLMULTITEXRENDERBUFFEREXTPROC __glewMultiTexRenderbufferEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLMULTITEXRENDERBUFFEREXTPROC
__glewMultiTexSubImage1DEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLMULTITEXSUBIMAGE1DEXTPROC __glewMultiTexSubImage1DEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLMULTITEXSUBIMAGE1DEXTPROC
__glewMultiTexSubImage2DEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLMULTITEXSUBIMAGE2DEXTPROC __glewMultiTexSubImage2DEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLMULTITEXSUBIMAGE2DEXTPROC
__glewMultiTexSubImage3DEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLMULTITEXSUBIMAGE3DEXTPROC __glewMultiTexSubImage3DEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLMULTITEXSUBIMAGE3DEXTPROC
__glewMulticastBarrierNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLMULTICASTBARRIERNVPROC __glewMulticastBarrierNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLMULTICASTBARRIERNVPROC
__glewMulticastBlitFramebufferNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLMULTICASTBLITFRAMEBUFFERNVPROC __glewMulticastBlitFramebufferNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLMULTICASTBLITFRAMEBUFFERNVPROC
__glewMulticastBufferSubDataNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLMULTICASTBUFFERSUBDATANVPROC __glewMulticastBufferSubDataNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLMULTICASTBUFFERSUBDATANVPROC
__glewMulticastCopyBufferSubDataNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLMULTICASTCOPYBUFFERSUBDATANVPROC __glewMulticastCopyBufferSubDataNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLMULTICASTCOPYBUFFERSUBDATANVPROC
__glewMulticastCopyImageSubDataNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLMULTICASTCOPYIMAGESUBDATANVPROC __glewMulticastCopyImageSubDataNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLMULTICASTCOPYIMAGESUBDATANVPROC
__glewMulticastFramebufferSampleLocationsfvNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLMULTICASTFRAMEBUFFERSAMPLELOCATIONSFVNVPROC __glewMulticastFramebufferSampl/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLMULTICASTFRAMEBUFFERSAMPLELOCATIONSFVNVPROC
__glewMulticastGetQueryObjecti64vNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLMULTICASTGETQUERYOBJECTI64VNVPROC __glewMulticastGetQueryObjecti64vNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLMULTICASTGETQUERYOBJECTI64VNVPROC
__glewMulticastGetQueryObjectivNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLMULTICASTGETQUERYOBJECTIVNVPROC __glewMulticastGetQueryObjectivNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLMULTICASTGETQUERYOBJECTIVNVPROC
__glewMulticastGetQueryObjectui64vNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLMULTICASTGETQUERYOBJECTUI64VNVPROC __glewMulticastGetQueryObjectui64vNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLMULTICASTGETQUERYOBJECTUI64VNVPROC
__glewMulticastGetQueryObjectuivNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLMULTICASTGETQUERYOBJECTUIVNVPROC __glewMulticastGetQueryObjectuivNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLMULTICASTGETQUERYOBJECTUIVNVPROC
__glewMulticastScissorArrayvNVX	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLMULTICASTSCISSORARRAYVNVXPROC __glewMulticastScissorArrayvNVX;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLMULTICASTSCISSORARRAYVNVXPROC
__glewMulticastViewportArrayvNVX	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLMULTICASTVIEWPORTARRAYVNVXPROC __glewMulticastViewportArrayvNVX;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLMULTICASTVIEWPORTARRAYVNVXPROC
__glewMulticastViewportPositionWScaleNVX	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLMULTICASTVIEWPORTPOSITIONWSCALENVXPROC __glewMulticastViewportPositionWScal/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLMULTICASTVIEWPORTPOSITIONWSCALENVXPROC
__glewMulticastWaitSyncNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLMULTICASTWAITSYNCNVPROC __glewMulticastWaitSyncNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLMULTICASTWAITSYNCNVPROC
__glewMultisampleSubRectPosSGIS	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLMULTISAMPLESUBRECTPOSSGISPROC __glewMultisampleSubRectPosSGIS;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLMULTISAMPLESUBRECTPOSSGISPROC
__glewNamedBufferAttachMemoryNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLNAMEDBUFFERATTACHMEMORYNVPROC __glewNamedBufferAttachMemoryNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLNAMEDBUFFERATTACHMEMORYNVPROC
__glewNamedBufferData	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLNAMEDBUFFERDATAPROC __glewNamedBufferData;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLNAMEDBUFFERDATAPROC
__glewNamedBufferDataEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLNAMEDBUFFERDATAEXTPROC __glewNamedBufferDataEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLNAMEDBUFFERDATAEXTPROC
__glewNamedBufferStorage	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLNAMEDBUFFERSTORAGEPROC __glewNamedBufferStorage;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLNAMEDBUFFERSTORAGEPROC
__glewNamedBufferStorageEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLNAMEDBUFFERSTORAGEEXTPROC __glewNamedBufferStorageEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLNAMEDBUFFERSTORAGEEXTPROC
__glewNamedBufferStorageExternalEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLNAMEDBUFFERSTORAGEEXTERNALEXTPROC __glewNamedBufferStorageExternalEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLNAMEDBUFFERSTORAGEEXTERNALEXTPROC
__glewNamedBufferStorageMemEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLNAMEDBUFFERSTORAGEMEMEXTPROC __glewNamedBufferStorageMemEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLNAMEDBUFFERSTORAGEMEMEXTPROC
__glewNamedBufferSubData	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLNAMEDBUFFERSUBDATAPROC __glewNamedBufferSubData;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLNAMEDBUFFERSUBDATAPROC
__glewNamedBufferSubDataEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLNAMEDBUFFERSUBDATAEXTPROC __glewNamedBufferSubDataEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLNAMEDBUFFERSUBDATAEXTPROC
__glewNamedCopyBufferSubDataEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLNAMEDCOPYBUFFERSUBDATAEXTPROC __glewNamedCopyBufferSubDataEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLNAMEDCOPYBUFFERSUBDATAEXTPROC
__glewNamedFramebufferDrawBuffer	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLNAMEDFRAMEBUFFERDRAWBUFFERPROC __glewNamedFramebufferDrawBuffer;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLNAMEDFRAMEBUFFERDRAWBUFFERPROC
__glewNamedFramebufferDrawBuffers	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLNAMEDFRAMEBUFFERDRAWBUFFERSPROC __glewNamedFramebufferDrawBuffers;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLNAMEDFRAMEBUFFERDRAWBUFFERSPROC
__glewNamedFramebufferParameteri	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLNAMEDFRAMEBUFFERPARAMETERIPROC __glewNamedFramebufferParameteri;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLNAMEDFRAMEBUFFERPARAMETERIPROC
__glewNamedFramebufferParameteriEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLNAMEDFRAMEBUFFERPARAMETERIEXTPROC __glewNamedFramebufferParameteriEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLNAMEDFRAMEBUFFERPARAMETERIEXTPROC
__glewNamedFramebufferReadBuffer	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLNAMEDFRAMEBUFFERREADBUFFERPROC __glewNamedFramebufferReadBuffer;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLNAMEDFRAMEBUFFERREADBUFFERPROC
__glewNamedFramebufferRenderbuffer	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLNAMEDFRAMEBUFFERRENDERBUFFERPROC __glewNamedFramebufferRenderbuffer;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLNAMEDFRAMEBUFFERRENDERBUFFERPROC
__glewNamedFramebufferRenderbufferEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLNAMEDFRAMEBUFFERRENDERBUFFEREXTPROC __glewNamedFramebufferRenderbufferEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLNAMEDFRAMEBUFFERRENDERBUFFEREXTPROC
__glewNamedFramebufferSampleLocationsfvARB	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLNAMEDFRAMEBUFFERSAMPLELOCATIONSFVARBPROC __glewNamedFramebufferSampleLocati/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLNAMEDFRAMEBUFFERSAMPLELOCATIONSFVARBPROC
__glewNamedFramebufferSampleLocationsfvNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLNAMEDFRAMEBUFFERSAMPLELOCATIONSFVNVPROC __glewNamedFramebufferSampleLocatio/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLNAMEDFRAMEBUFFERSAMPLELOCATIONSFVNVPROC
__glewNamedFramebufferSamplePositionsfvAMD	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLNAMEDFRAMEBUFFERSAMPLEPOSITIONSFVAMDPROC __glewNamedFramebufferSamplePositi/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLNAMEDFRAMEBUFFERSAMPLEPOSITIONSFVAMDPROC
__glewNamedFramebufferTexture	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLNAMEDFRAMEBUFFERTEXTUREPROC __glewNamedFramebufferTexture;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLNAMEDFRAMEBUFFERTEXTUREPROC
__glewNamedFramebufferTexture1DEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLNAMEDFRAMEBUFFERTEXTURE1DEXTPROC __glewNamedFramebufferTexture1DEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLNAMEDFRAMEBUFFERTEXTURE1DEXTPROC
__glewNamedFramebufferTexture2DEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLNAMEDFRAMEBUFFERTEXTURE2DEXTPROC __glewNamedFramebufferTexture2DEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLNAMEDFRAMEBUFFERTEXTURE2DEXTPROC
__glewNamedFramebufferTexture3DEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLNAMEDFRAMEBUFFERTEXTURE3DEXTPROC __glewNamedFramebufferTexture3DEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLNAMEDFRAMEBUFFERTEXTURE3DEXTPROC
__glewNamedFramebufferTextureEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLNAMEDFRAMEBUFFERTEXTUREEXTPROC __glewNamedFramebufferTextureEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLNAMEDFRAMEBUFFERTEXTUREEXTPROC
__glewNamedFramebufferTextureFaceEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLNAMEDFRAMEBUFFERTEXTUREFACEEXTPROC __glewNamedFramebufferTextureFaceEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLNAMEDFRAMEBUFFERTEXTUREFACEEXTPROC
__glewNamedFramebufferTextureLayer	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLNAMEDFRAMEBUFFERTEXTURELAYERPROC __glewNamedFramebufferTextureLayer;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLNAMEDFRAMEBUFFERTEXTURELAYERPROC
__glewNamedFramebufferTextureLayerEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLNAMEDFRAMEBUFFERTEXTURELAYEREXTPROC __glewNamedFramebufferTextureLayerEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLNAMEDFRAMEBUFFERTEXTURELAYEREXTPROC
__glewNamedFramebufferTextureMultiviewOVR	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLNAMEDFRAMEBUFFERTEXTUREMULTIVIEWOVRPROC __glewNamedFramebufferTextureMultiv/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLNAMEDFRAMEBUFFERTEXTUREMULTIVIEWOVRPROC
__glewNamedProgramLocalParameter4dEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLNAMEDPROGRAMLOCALPARAMETER4DEXTPROC __glewNamedProgramLocalParameter4dEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLNAMEDPROGRAMLOCALPARAMETER4DEXTPROC
__glewNamedProgramLocalParameter4dvEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLNAMEDPROGRAMLOCALPARAMETER4DVEXTPROC __glewNamedProgramLocalParameter4dvEXT/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLNAMEDPROGRAMLOCALPARAMETER4DVEXTPROC
__glewNamedProgramLocalParameter4fEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLNAMEDPROGRAMLOCALPARAMETER4FEXTPROC __glewNamedProgramLocalParameter4fEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLNAMEDPROGRAMLOCALPARAMETER4FEXTPROC
__glewNamedProgramLocalParameter4fvEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLNAMEDPROGRAMLOCALPARAMETER4FVEXTPROC __glewNamedProgramLocalParameter4fvEXT/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLNAMEDPROGRAMLOCALPARAMETER4FVEXTPROC
__glewNamedProgramLocalParameterI4iEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLNAMEDPROGRAMLOCALPARAMETERI4IEXTPROC __glewNamedProgramLocalParameterI4iEXT/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLNAMEDPROGRAMLOCALPARAMETERI4IEXTPROC
__glewNamedProgramLocalParameterI4ivEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLNAMEDPROGRAMLOCALPARAMETERI4IVEXTPROC __glewNamedProgramLocalParameterI4ivE/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLNAMEDPROGRAMLOCALPARAMETERI4IVEXTPROC
__glewNamedProgramLocalParameterI4uiEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLNAMEDPROGRAMLOCALPARAMETERI4UIEXTPROC __glewNamedProgramLocalParameterI4uiE/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLNAMEDPROGRAMLOCALPARAMETERI4UIEXTPROC
__glewNamedProgramLocalParameterI4uivEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLNAMEDPROGRAMLOCALPARAMETERI4UIVEXTPROC __glewNamedProgramLocalParameterI4ui/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLNAMEDPROGRAMLOCALPARAMETERI4UIVEXTPROC
__glewNamedProgramLocalParameters4fvEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLNAMEDPROGRAMLOCALPARAMETERS4FVEXTPROC __glewNamedProgramLocalParameters4fvE/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLNAMEDPROGRAMLOCALPARAMETERS4FVEXTPROC
__glewNamedProgramLocalParametersI4ivEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLNAMEDPROGRAMLOCALPARAMETERSI4IVEXTPROC __glewNamedProgramLocalParametersI4i/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLNAMEDPROGRAMLOCALPARAMETERSI4IVEXTPROC
__glewNamedProgramLocalParametersI4uivEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLNAMEDPROGRAMLOCALPARAMETERSI4UIVEXTPROC __glewNamedProgramLocalParametersI4/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLNAMEDPROGRAMLOCALPARAMETERSI4UIVEXTPROC
__glewNamedProgramStringEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLNAMEDPROGRAMSTRINGEXTPROC __glewNamedProgramStringEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLNAMEDPROGRAMSTRINGEXTPROC
__glewNamedRenderbufferStorage	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLNAMEDRENDERBUFFERSTORAGEPROC __glewNamedRenderbufferStorage;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLNAMEDRENDERBUFFERSTORAGEPROC
__glewNamedRenderbufferStorageEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLNAMEDRENDERBUFFERSTORAGEEXTPROC __glewNamedRenderbufferStorageEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLNAMEDRENDERBUFFERSTORAGEEXTPROC
__glewNamedRenderbufferStorageMultisample	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLNAMEDRENDERBUFFERSTORAGEMULTISAMPLEPROC __glewNamedRenderbufferStorageMulti/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLNAMEDRENDERBUFFERSTORAGEMULTISAMPLEPROC
__glewNamedRenderbufferStorageMultisampleAdvancedAMD	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLNAMEDRENDERBUFFERSTORAGEMULTISAMPLEADVANCEDAMDPROC __glewNamedRenderbufferS/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLNAMEDRENDERBUFFERSTORAGEMULTISAMPLEADVANCEDAMDPROC
__glewNamedRenderbufferStorageMultisampleCoverageEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLNAMEDRENDERBUFFERSTORAGEMULTISAMPLECOVERAGEEXTPROC __glewNamedRenderbufferS/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLNAMEDRENDERBUFFERSTORAGEMULTISAMPLECOVERAGEEXTPROC
__glewNamedRenderbufferStorageMultisampleEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLNAMEDRENDERBUFFERSTORAGEMULTISAMPLEEXTPROC __glewNamedRenderbufferStorageMu/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLNAMEDRENDERBUFFERSTORAGEMULTISAMPLEEXTPROC
__glewNamedStringARB	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLNAMEDSTRINGARBPROC __glewNamedStringARB;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLNAMEDSTRINGARBPROC
__glewNewBufferRegion	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLNEWBUFFERREGIONPROC __glewNewBufferRegion;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLNEWBUFFERREGIONPROC
__glewNewObjectBufferATI	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLNEWOBJECTBUFFERATIPROC __glewNewObjectBufferATI;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLNEWOBJECTBUFFERATIPROC
__glewNonlinLightfvSGIX	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLNONLINLIGHTFVSGIXPROC __glewNonlinLightfvSGIX;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLNONLINLIGHTFVSGIXPROC
__glewNonlinMaterialfvSGIX	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLNONLINMATERIALFVSGIXPROC __glewNonlinMaterialfvSGIX;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLNONLINMATERIALFVSGIXPROC
__glewNormal3fVertex3fSUN	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLNORMAL3FVERTEX3FSUNPROC __glewNormal3fVertex3fSUN;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLNORMAL3FVERTEX3FSUNPROC
__glewNormal3fVertex3fvSUN	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLNORMAL3FVERTEX3FVSUNPROC __glewNormal3fVertex3fvSUN;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLNORMAL3FVERTEX3FVSUNPROC
__glewNormal3hNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLNORMAL3HNVPROC __glewNormal3hNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLNORMAL3HNVPROC
__glewNormal3hvNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLNORMAL3HVNVPROC __glewNormal3hvNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLNORMAL3HVNVPROC
__glewNormal3x	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLNORMAL3XPROC __glewNormal3x;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLNORMAL3XPROC
__glewNormalFormatNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLNORMALFORMATNVPROC __glewNormalFormatNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLNORMALFORMATNVPROC
__glewNormalP3ui	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLNORMALP3UIPROC __glewNormalP3ui;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLNORMALP3UIPROC
__glewNormalP3uiv	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLNORMALP3UIVPROC __glewNormalP3uiv;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLNORMALP3UIVPROC
__glewNormalPointerEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLNORMALPOINTEREXTPROC __glewNormalPointerEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLNORMALPOINTEREXTPROC
__glewNormalPointerListIBM	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLNORMALPOINTERLISTIBMPROC __glewNormalPointerListIBM;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLNORMALPOINTERLISTIBMPROC
__glewNormalPointervINTEL	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLNORMALPOINTERVINTELPROC __glewNormalPointervINTEL;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLNORMALPOINTERVINTELPROC
__glewNormalStream3bATI	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLNORMALSTREAM3BATIPROC __glewNormalStream3bATI;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLNORMALSTREAM3BATIPROC
__glewNormalStream3bvATI	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLNORMALSTREAM3BVATIPROC __glewNormalStream3bvATI;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLNORMALSTREAM3BVATIPROC
__glewNormalStream3dATI	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLNORMALSTREAM3DATIPROC __glewNormalStream3dATI;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLNORMALSTREAM3DATIPROC
__glewNormalStream3dvATI	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLNORMALSTREAM3DVATIPROC __glewNormalStream3dvATI;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLNORMALSTREAM3DVATIPROC
__glewNormalStream3fATI	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLNORMALSTREAM3FATIPROC __glewNormalStream3fATI;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLNORMALSTREAM3FATIPROC
__glewNormalStream3fvATI	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLNORMALSTREAM3FVATIPROC __glewNormalStream3fvATI;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLNORMALSTREAM3FVATIPROC
__glewNormalStream3iATI	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLNORMALSTREAM3IATIPROC __glewNormalStream3iATI;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLNORMALSTREAM3IATIPROC
__glewNormalStream3ivATI	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLNORMALSTREAM3IVATIPROC __glewNormalStream3ivATI;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLNORMALSTREAM3IVATIPROC
__glewNormalStream3sATI	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLNORMALSTREAM3SATIPROC __glewNormalStream3sATI;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLNORMALSTREAM3SATIPROC
__glewNormalStream3svATI	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLNORMALSTREAM3SVATIPROC __glewNormalStream3svATI;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLNORMALSTREAM3SVATIPROC
__glewObjectLabel	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLOBJECTLABELPROC __glewObjectLabel;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLOBJECTLABELPROC
__glewObjectPtrLabel	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLOBJECTPTRLABELPROC __glewObjectPtrLabel;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLOBJECTPTRLABELPROC
__glewObjectPurgeableAPPLE	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLOBJECTPURGEABLEAPPLEPROC __glewObjectPurgeableAPPLE;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLOBJECTPURGEABLEAPPLEPROC
__glewObjectUnpurgeableAPPLE	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLOBJECTUNPURGEABLEAPPLEPROC __glewObjectUnpurgeableAPPLE;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLOBJECTUNPURGEABLEAPPLEPROC
__glewOrthof	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLORTHOFPROC __glewOrthof;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLORTHOFPROC
__glewOrthofOES	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLORTHOFOESPROC __glewOrthofOES;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLORTHOFOESPROC
__glewOrthox	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLORTHOXPROC __glewOrthox;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLORTHOXPROC
__glewPNTrianglesfATI	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLPNTRIANGLESFATIPROC __glewPNTrianglesfATI;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLPNTRIANGLESFATIPROC
__glewPNTrianglesiATI	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLPNTRIANGLESIATIPROC __glewPNTrianglesiATI;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLPNTRIANGLESIATIPROC
__glewPassTexCoordATI	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLPASSTEXCOORDATIPROC __glewPassTexCoordATI;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLPASSTEXCOORDATIPROC
__glewPatchParameterfv	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLPATCHPARAMETERFVPROC __glewPatchParameterfv;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLPATCHPARAMETERFVPROC
__glewPatchParameteri	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLPATCHPARAMETERIPROC __glewPatchParameteri;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLPATCHPARAMETERIPROC
__glewPatchParameteriEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLPATCHPARAMETERIEXTPROC __glewPatchParameteriEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLPATCHPARAMETERIEXTPROC
__glewPathColorGenNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLPATHCOLORGENNVPROC __glewPathColorGenNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLPATHCOLORGENNVPROC
__glewPathCommandsNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLPATHCOMMANDSNVPROC __glewPathCommandsNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLPATHCOMMANDSNVPROC
__glewPathCoordsNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLPATHCOORDSNVPROC __glewPathCoordsNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLPATHCOORDSNVPROC
__glewPathCoverDepthFuncNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLPATHCOVERDEPTHFUNCNVPROC __glewPathCoverDepthFuncNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLPATHCOVERDEPTHFUNCNVPROC
__glewPathDashArrayNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLPATHDASHARRAYNVPROC __glewPathDashArrayNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLPATHDASHARRAYNVPROC
__glewPathFogGenNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLPATHFOGGENNVPROC __glewPathFogGenNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLPATHFOGGENNVPROC
__glewPathGlyphIndexArrayNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLPATHGLYPHINDEXARRAYNVPROC __glewPathGlyphIndexArrayNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLPATHGLYPHINDEXARRAYNVPROC
__glewPathGlyphIndexRangeNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLPATHGLYPHINDEXRANGENVPROC __glewPathGlyphIndexRangeNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLPATHGLYPHINDEXRANGENVPROC
__glewPathGlyphRangeNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLPATHGLYPHRANGENVPROC __glewPathGlyphRangeNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLPATHGLYPHRANGENVPROC
__glewPathGlyphsNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLPATHGLYPHSNVPROC __glewPathGlyphsNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLPATHGLYPHSNVPROC
__glewPathMemoryGlyphIndexArrayNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLPATHMEMORYGLYPHINDEXARRAYNVPROC __glewPathMemoryGlyphIndexArrayNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLPATHMEMORYGLYPHINDEXARRAYNVPROC
__glewPathParameterfNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLPATHPARAMETERFNVPROC __glewPathParameterfNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLPATHPARAMETERFNVPROC
__glewPathParameterfvNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLPATHPARAMETERFVNVPROC __glewPathParameterfvNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLPATHPARAMETERFVNVPROC
__glewPathParameteriNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLPATHPARAMETERINVPROC __glewPathParameteriNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLPATHPARAMETERINVPROC
__glewPathParameterivNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLPATHPARAMETERIVNVPROC __glewPathParameterivNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLPATHPARAMETERIVNVPROC
__glewPathStencilDepthOffsetNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLPATHSTENCILDEPTHOFFSETNVPROC __glewPathStencilDepthOffsetNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLPATHSTENCILDEPTHOFFSETNVPROC
__glewPathStencilFuncNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLPATHSTENCILFUNCNVPROC __glewPathStencilFuncNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLPATHSTENCILFUNCNVPROC
__glewPathStringNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLPATHSTRINGNVPROC __glewPathStringNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLPATHSTRINGNVPROC
__glewPathSubCommandsNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLPATHSUBCOMMANDSNVPROC __glewPathSubCommandsNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLPATHSUBCOMMANDSNVPROC
__glewPathSubCoordsNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLPATHSUBCOORDSNVPROC __glewPathSubCoordsNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLPATHSUBCOORDSNVPROC
__glewPathTexGenNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLPATHTEXGENNVPROC __glewPathTexGenNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLPATHTEXGENNVPROC
__glewPauseTransformFeedback	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLPAUSETRANSFORMFEEDBACKPROC __glewPauseTransformFeedback;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLPAUSETRANSFORMFEEDBACKPROC
__glewPauseTransformFeedbackNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLPAUSETRANSFORMFEEDBACKNVPROC __glewPauseTransformFeedbackNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLPAUSETRANSFORMFEEDBACKNVPROC
__glewPixelDataRangeNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLPIXELDATARANGENVPROC __glewPixelDataRangeNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLPIXELDATARANGENVPROC
__glewPixelTexGenSGIX	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLPIXELTEXGENSGIXPROC __glewPixelTexGenSGIX;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLPIXELTEXGENSGIXPROC
__glewPixelTransformParameterfEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLPIXELTRANSFORMPARAMETERFEXTPROC __glewPixelTransformParameterfEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLPIXELTRANSFORMPARAMETERFEXTPROC
__glewPixelTransformParameterfSGI	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLPIXELTRANSFORMPARAMETERFSGIPROC __glewPixelTransformParameterfSGI;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLPIXELTRANSFORMPARAMETERFSGIPROC
__glewPixelTransformParameterfvEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLPIXELTRANSFORMPARAMETERFVEXTPROC __glewPixelTransformParameterfvEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLPIXELTRANSFORMPARAMETERFVEXTPROC
__glewPixelTransformParameterfvSGI	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLPIXELTRANSFORMPARAMETERFVSGIPROC __glewPixelTransformParameterfvSGI;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLPIXELTRANSFORMPARAMETERFVSGIPROC
__glewPixelTransformParameteriEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLPIXELTRANSFORMPARAMETERIEXTPROC __glewPixelTransformParameteriEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLPIXELTRANSFORMPARAMETERIEXTPROC
__glewPixelTransformParameteriSGI	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLPIXELTRANSFORMPARAMETERISGIPROC __glewPixelTransformParameteriSGI;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLPIXELTRANSFORMPARAMETERISGIPROC
__glewPixelTransformParameterivEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLPIXELTRANSFORMPARAMETERIVEXTPROC __glewPixelTransformParameterivEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLPIXELTRANSFORMPARAMETERIVEXTPROC
__glewPixelTransformParameterivSGI	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLPIXELTRANSFORMPARAMETERIVSGIPROC __glewPixelTransformParameterivSGI;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLPIXELTRANSFORMPARAMETERIVSGIPROC
__glewPixelTransformSGI	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLPIXELTRANSFORMSGIPROC __glewPixelTransformSGI;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLPIXELTRANSFORMSGIPROC
__glewPointAlongPathNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLPOINTALONGPATHNVPROC __glewPointAlongPathNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLPOINTALONGPATHNVPROC
__glewPointParameterf	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLPOINTPARAMETERFPROC __glewPointParameterf;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLPOINTPARAMETERFPROC
__glewPointParameterfARB	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLPOINTPARAMETERFARBPROC __glewPointParameterfARB;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLPOINTPARAMETERFARBPROC
__glewPointParameterfEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLPOINTPARAMETERFEXTPROC __glewPointParameterfEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLPOINTPARAMETERFEXTPROC
__glewPointParameterfv	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLPOINTPARAMETERFVPROC __glewPointParameterfv;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLPOINTPARAMETERFVPROC
__glewPointParameterfvARB	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLPOINTPARAMETERFVARBPROC __glewPointParameterfvARB;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLPOINTPARAMETERFVARBPROC
__glewPointParameterfvEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLPOINTPARAMETERFVEXTPROC __glewPointParameterfvEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLPOINTPARAMETERFVEXTPROC
__glewPointParameteri	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLPOINTPARAMETERIPROC __glewPointParameteri;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLPOINTPARAMETERIPROC
__glewPointParameteriNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLPOINTPARAMETERINVPROC __glewPointParameteriNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLPOINTPARAMETERINVPROC
__glewPointParameteriv	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLPOINTPARAMETERIVPROC __glewPointParameteriv;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLPOINTPARAMETERIVPROC
__glewPointParameterivNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLPOINTPARAMETERIVNVPROC __glewPointParameterivNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLPOINTPARAMETERIVNVPROC
__glewPointParameterx	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLPOINTPARAMETERXPROC __glewPointParameterx;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLPOINTPARAMETERXPROC
__glewPointParameterxv	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLPOINTPARAMETERXVPROC __glewPointParameterxv;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLPOINTPARAMETERXVPROC
__glewPointSizePointerOES	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLPOINTSIZEPOINTEROESPROC __glewPointSizePointerOES;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLPOINTSIZEPOINTEROESPROC
__glewPointSizex	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLPOINTSIZEXPROC __glewPointSizex;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLPOINTSIZEXPROC
__glewPollAsyncSGIX	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLPOLLASYNCSGIXPROC __glewPollAsyncSGIX;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLPOLLASYNCSGIXPROC
__glewPolygonModeNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLPOLYGONMODENVPROC __glewPolygonModeNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLPOLYGONMODENVPROC
__glewPolygonOffsetClamp	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLPOLYGONOFFSETCLAMPPROC __glewPolygonOffsetClamp;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLPOLYGONOFFSETCLAMPPROC
__glewPolygonOffsetClampEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLPOLYGONOFFSETCLAMPEXTPROC __glewPolygonOffsetClampEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLPOLYGONOFFSETCLAMPEXTPROC
__glewPolygonOffsetEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLPOLYGONOFFSETEXTPROC __glewPolygonOffsetEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLPOLYGONOFFSETEXTPROC
__glewPolygonOffsetx	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLPOLYGONOFFSETXPROC __glewPolygonOffsetx;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLPOLYGONOFFSETXPROC
__glewPopDebugGroup	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLPOPDEBUGGROUPPROC __glewPopDebugGroup;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLPOPDEBUGGROUPPROC
__glewPopGroupMarkerEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLPOPGROUPMARKEREXTPROC __glewPopGroupMarkerEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLPOPGROUPMARKEREXTPROC
__glewPresentFrameDualFillNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLPRESENTFRAMEDUALFILLNVPROC __glewPresentFrameDualFillNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLPRESENTFRAMEDUALFILLNVPROC
__glewPresentFrameKeyedNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLPRESENTFRAMEKEYEDNVPROC __glewPresentFrameKeyedNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLPRESENTFRAMEKEYEDNVPROC
__glewPrimitiveBoundingBoxARB	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLPRIMITIVEBOUNDINGBOXARBPROC __glewPrimitiveBoundingBoxARB;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLPRIMITIVEBOUNDINGBOXARBPROC
__glewPrimitiveBoundingBoxEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLPRIMITIVEBOUNDINGBOXEXTPROC __glewPrimitiveBoundingBoxEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLPRIMITIVEBOUNDINGBOXEXTPROC
__glewPrimitiveRestartIndex	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLPRIMITIVERESTARTINDEXPROC __glewPrimitiveRestartIndex;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLPRIMITIVERESTARTINDEXPROC
__glewPrimitiveRestartIndexNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLPRIMITIVERESTARTINDEXNVPROC __glewPrimitiveRestartIndexNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLPRIMITIVERESTARTINDEXNVPROC
__glewPrimitiveRestartNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLPRIMITIVERESTARTNVPROC __glewPrimitiveRestartNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLPRIMITIVERESTARTNVPROC
__glewPrioritizeTexturesEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLPRIORITIZETEXTURESEXTPROC __glewPrioritizeTexturesEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLPRIORITIZETEXTURESEXTPROC
__glewPrioritizeVertexArraysSGIX	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLPRIORITIZEVERTEXARRAYSSGIXPROC __glewPrioritizeVertexArraysSGIX;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLPRIORITIZEVERTEXARRAYSSGIXPROC
__glewProgramBinary	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLPROGRAMBINARYPROC __glewProgramBinary;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLPROGRAMBINARYPROC
__glewProgramBinaryOES	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLPROGRAMBINARYOESPROC __glewProgramBinaryOES;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLPROGRAMBINARYOESPROC
__glewProgramBufferParametersIivNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLPROGRAMBUFFERPARAMETERSIIVNVPROC __glewProgramBufferParametersIivNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLPROGRAMBUFFERPARAMETERSIIVNVPROC
__glewProgramBufferParametersIuivNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLPROGRAMBUFFERPARAMETERSIUIVNVPROC __glewProgramBufferParametersIuivNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLPROGRAMBUFFERPARAMETERSIUIVNVPROC
__glewProgramBufferParametersfvNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLPROGRAMBUFFERPARAMETERSFVNVPROC __glewProgramBufferParametersfvNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLPROGRAMBUFFERPARAMETERSFVNVPROC
__glewProgramEnvParameter4dARB	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLPROGRAMENVPARAMETER4DARBPROC __glewProgramEnvParameter4dARB;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLPROGRAMENVPARAMETER4DARBPROC
__glewProgramEnvParameter4dvARB	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLPROGRAMENVPARAMETER4DVARBPROC __glewProgramEnvParameter4dvARB;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLPROGRAMENVPARAMETER4DVARBPROC
__glewProgramEnvParameter4fARB	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLPROGRAMENVPARAMETER4FARBPROC __glewProgramEnvParameter4fARB;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLPROGRAMENVPARAMETER4FARBPROC
__glewProgramEnvParameter4fvARB	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLPROGRAMENVPARAMETER4FVARBPROC __glewProgramEnvParameter4fvARB;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLPROGRAMENVPARAMETER4FVARBPROC
__glewProgramEnvParameterI4iNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLPROGRAMENVPARAMETERI4INVPROC __glewProgramEnvParameterI4iNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLPROGRAMENVPARAMETERI4INVPROC
__glewProgramEnvParameterI4ivNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLPROGRAMENVPARAMETERI4IVNVPROC __glewProgramEnvParameterI4ivNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLPROGRAMENVPARAMETERI4IVNVPROC
__glewProgramEnvParameterI4uiNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLPROGRAMENVPARAMETERI4UINVPROC __glewProgramEnvParameterI4uiNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLPROGRAMENVPARAMETERI4UINVPROC
__glewProgramEnvParameterI4uivNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLPROGRAMENVPARAMETERI4UIVNVPROC __glewProgramEnvParameterI4uivNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLPROGRAMENVPARAMETERI4UIVNVPROC
__glewProgramEnvParameters4fvEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLPROGRAMENVPARAMETERS4FVEXTPROC __glewProgramEnvParameters4fvEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLPROGRAMENVPARAMETERS4FVEXTPROC
__glewProgramEnvParametersI4ivNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLPROGRAMENVPARAMETERSI4IVNVPROC __glewProgramEnvParametersI4ivNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLPROGRAMENVPARAMETERSI4IVNVPROC
__glewProgramEnvParametersI4uivNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLPROGRAMENVPARAMETERSI4UIVNVPROC __glewProgramEnvParametersI4uivNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLPROGRAMENVPARAMETERSI4UIVNVPROC
__glewProgramLocalParameter4dARB	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLPROGRAMLOCALPARAMETER4DARBPROC __glewProgramLocalParameter4dARB;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLPROGRAMLOCALPARAMETER4DARBPROC
__glewProgramLocalParameter4dvARB	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLPROGRAMLOCALPARAMETER4DVARBPROC __glewProgramLocalParameter4dvARB;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLPROGRAMLOCALPARAMETER4DVARBPROC
__glewProgramLocalParameter4fARB	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLPROGRAMLOCALPARAMETER4FARBPROC __glewProgramLocalParameter4fARB;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLPROGRAMLOCALPARAMETER4FARBPROC
__glewProgramLocalParameter4fvARB	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLPROGRAMLOCALPARAMETER4FVARBPROC __glewProgramLocalParameter4fvARB;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLPROGRAMLOCALPARAMETER4FVARBPROC
__glewProgramLocalParameterI4iNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLPROGRAMLOCALPARAMETERI4INVPROC __glewProgramLocalParameterI4iNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLPROGRAMLOCALPARAMETERI4INVPROC
__glewProgramLocalParameterI4ivNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLPROGRAMLOCALPARAMETERI4IVNVPROC __glewProgramLocalParameterI4ivNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLPROGRAMLOCALPARAMETERI4IVNVPROC
__glewProgramLocalParameterI4uiNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLPROGRAMLOCALPARAMETERI4UINVPROC __glewProgramLocalParameterI4uiNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLPROGRAMLOCALPARAMETERI4UINVPROC
__glewProgramLocalParameterI4uivNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLPROGRAMLOCALPARAMETERI4UIVNVPROC __glewProgramLocalParameterI4uivNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLPROGRAMLOCALPARAMETERI4UIVNVPROC
__glewProgramLocalParameters4fvEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLPROGRAMLOCALPARAMETERS4FVEXTPROC __glewProgramLocalParameters4fvEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLPROGRAMLOCALPARAMETERS4FVEXTPROC
__glewProgramLocalParametersI4ivNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLPROGRAMLOCALPARAMETERSI4IVNVPROC __glewProgramLocalParametersI4ivNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLPROGRAMLOCALPARAMETERSI4IVNVPROC
__glewProgramLocalParametersI4uivNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLPROGRAMLOCALPARAMETERSI4UIVNVPROC __glewProgramLocalParametersI4uivNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLPROGRAMLOCALPARAMETERSI4UIVNVPROC
__glewProgramNamedParameter4dNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLPROGRAMNAMEDPARAMETER4DNVPROC __glewProgramNamedParameter4dNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLPROGRAMNAMEDPARAMETER4DNVPROC
__glewProgramNamedParameter4dvNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLPROGRAMNAMEDPARAMETER4DVNVPROC __glewProgramNamedParameter4dvNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLPROGRAMNAMEDPARAMETER4DVNVPROC
__glewProgramNamedParameter4fNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLPROGRAMNAMEDPARAMETER4FNVPROC __glewProgramNamedParameter4fNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLPROGRAMNAMEDPARAMETER4FNVPROC
__glewProgramNamedParameter4fvNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLPROGRAMNAMEDPARAMETER4FVNVPROC __glewProgramNamedParameter4fvNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLPROGRAMNAMEDPARAMETER4FVNVPROC
__glewProgramParameter4dNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLPROGRAMPARAMETER4DNVPROC __glewProgramParameter4dNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLPROGRAMPARAMETER4DNVPROC
__glewProgramParameter4dvNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLPROGRAMPARAMETER4DVNVPROC __glewProgramParameter4dvNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLPROGRAMPARAMETER4DVNVPROC
__glewProgramParameter4fNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLPROGRAMPARAMETER4FNVPROC __glewProgramParameter4fNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLPROGRAMPARAMETER4FNVPROC
__glewProgramParameter4fvNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLPROGRAMPARAMETER4FVNVPROC __glewProgramParameter4fvNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLPROGRAMPARAMETER4FVNVPROC
__glewProgramParameteri	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLPROGRAMPARAMETERIPROC __glewProgramParameteri;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLPROGRAMPARAMETERIPROC
__glewProgramParameteriARB	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLPROGRAMPARAMETERIARBPROC __glewProgramParameteriARB;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLPROGRAMPARAMETERIARBPROC
__glewProgramParameteriEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLPROGRAMPARAMETERIEXTPROC __glewProgramParameteriEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLPROGRAMPARAMETERIEXTPROC
__glewProgramParameters4dvNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLPROGRAMPARAMETERS4DVNVPROC __glewProgramParameters4dvNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLPROGRAMPARAMETERS4DVNVPROC
__glewProgramParameters4fvNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLPROGRAMPARAMETERS4FVNVPROC __glewProgramParameters4fvNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLPROGRAMPARAMETERS4FVNVPROC
__glewProgramPathFragmentInputGenNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLPROGRAMPATHFRAGMENTINPUTGENNVPROC __glewProgramPathFragmentInputGenNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLPROGRAMPATHFRAGMENTINPUTGENNVPROC
__glewProgramStringARB	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLPROGRAMSTRINGARBPROC __glewProgramStringARB;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLPROGRAMSTRINGARBPROC
__glewProgramUniform1d	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLPROGRAMUNIFORM1DPROC __glewProgramUniform1d;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLPROGRAMUNIFORM1DPROC
__glewProgramUniform1dv	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLPROGRAMUNIFORM1DVPROC __glewProgramUniform1dv;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLPROGRAMUNIFORM1DVPROC
__glewProgramUniform1f	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLPROGRAMUNIFORM1FPROC __glewProgramUniform1f;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLPROGRAMUNIFORM1FPROC
__glewProgramUniform1fEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLPROGRAMUNIFORM1FEXTPROC __glewProgramUniform1fEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLPROGRAMUNIFORM1FEXTPROC
__glewProgramUniform1fv	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLPROGRAMUNIFORM1FVPROC __glewProgramUniform1fv;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLPROGRAMUNIFORM1FVPROC
__glewProgramUniform1fvEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLPROGRAMUNIFORM1FVEXTPROC __glewProgramUniform1fvEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLPROGRAMUNIFORM1FVEXTPROC
__glewProgramUniform1i	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLPROGRAMUNIFORM1IPROC __glewProgramUniform1i;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLPROGRAMUNIFORM1IPROC
__glewProgramUniform1i64ARB	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLPROGRAMUNIFORM1I64ARBPROC __glewProgramUniform1i64ARB;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLPROGRAMUNIFORM1I64ARBPROC
__glewProgramUniform1i64NV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLPROGRAMUNIFORM1I64NVPROC __glewProgramUniform1i64NV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLPROGRAMUNIFORM1I64NVPROC
__glewProgramUniform1i64vARB	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLPROGRAMUNIFORM1I64VARBPROC __glewProgramUniform1i64vARB;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLPROGRAMUNIFORM1I64VARBPROC
__glewProgramUniform1i64vNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLPROGRAMUNIFORM1I64VNVPROC __glewProgramUniform1i64vNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLPROGRAMUNIFORM1I64VNVPROC
__glewProgramUniform1iEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLPROGRAMUNIFORM1IEXTPROC __glewProgramUniform1iEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLPROGRAMUNIFORM1IEXTPROC
__glewProgramUniform1iv	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLPROGRAMUNIFORM1IVPROC __glewProgramUniform1iv;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLPROGRAMUNIFORM1IVPROC
__glewProgramUniform1ivEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLPROGRAMUNIFORM1IVEXTPROC __glewProgramUniform1ivEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLPROGRAMUNIFORM1IVEXTPROC
__glewProgramUniform1ui	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLPROGRAMUNIFORM1UIPROC __glewProgramUniform1ui;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLPROGRAMUNIFORM1UIPROC
__glewProgramUniform1ui64ARB	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLPROGRAMUNIFORM1UI64ARBPROC __glewProgramUniform1ui64ARB;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLPROGRAMUNIFORM1UI64ARBPROC
__glewProgramUniform1ui64NV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLPROGRAMUNIFORM1UI64NVPROC __glewProgramUniform1ui64NV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLPROGRAMUNIFORM1UI64NVPROC
__glewProgramUniform1ui64vARB	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLPROGRAMUNIFORM1UI64VARBPROC __glewProgramUniform1ui64vARB;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLPROGRAMUNIFORM1UI64VARBPROC
__glewProgramUniform1ui64vNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLPROGRAMUNIFORM1UI64VNVPROC __glewProgramUniform1ui64vNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLPROGRAMUNIFORM1UI64VNVPROC
__glewProgramUniform1uiEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLPROGRAMUNIFORM1UIEXTPROC __glewProgramUniform1uiEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLPROGRAMUNIFORM1UIEXTPROC
__glewProgramUniform1uiv	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLPROGRAMUNIFORM1UIVPROC __glewProgramUniform1uiv;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLPROGRAMUNIFORM1UIVPROC
__glewProgramUniform1uivEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLPROGRAMUNIFORM1UIVEXTPROC __glewProgramUniform1uivEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLPROGRAMUNIFORM1UIVEXTPROC
__glewProgramUniform2d	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLPROGRAMUNIFORM2DPROC __glewProgramUniform2d;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLPROGRAMUNIFORM2DPROC
__glewProgramUniform2dv	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLPROGRAMUNIFORM2DVPROC __glewProgramUniform2dv;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLPROGRAMUNIFORM2DVPROC
__glewProgramUniform2f	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLPROGRAMUNIFORM2FPROC __glewProgramUniform2f;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLPROGRAMUNIFORM2FPROC
__glewProgramUniform2fEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLPROGRAMUNIFORM2FEXTPROC __glewProgramUniform2fEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLPROGRAMUNIFORM2FEXTPROC
__glewProgramUniform2fv	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLPROGRAMUNIFORM2FVPROC __glewProgramUniform2fv;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLPROGRAMUNIFORM2FVPROC
__glewProgramUniform2fvEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLPROGRAMUNIFORM2FVEXTPROC __glewProgramUniform2fvEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLPROGRAMUNIFORM2FVEXTPROC
__glewProgramUniform2i	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLPROGRAMUNIFORM2IPROC __glewProgramUniform2i;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLPROGRAMUNIFORM2IPROC
__glewProgramUniform2i64ARB	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLPROGRAMUNIFORM2I64ARBPROC __glewProgramUniform2i64ARB;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLPROGRAMUNIFORM2I64ARBPROC
__glewProgramUniform2i64NV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLPROGRAMUNIFORM2I64NVPROC __glewProgramUniform2i64NV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLPROGRAMUNIFORM2I64NVPROC
__glewProgramUniform2i64vARB	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLPROGRAMUNIFORM2I64VARBPROC __glewProgramUniform2i64vARB;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLPROGRAMUNIFORM2I64VARBPROC
__glewProgramUniform2i64vNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLPROGRAMUNIFORM2I64VNVPROC __glewProgramUniform2i64vNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLPROGRAMUNIFORM2I64VNVPROC
__glewProgramUniform2iEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLPROGRAMUNIFORM2IEXTPROC __glewProgramUniform2iEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLPROGRAMUNIFORM2IEXTPROC
__glewProgramUniform2iv	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLPROGRAMUNIFORM2IVPROC __glewProgramUniform2iv;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLPROGRAMUNIFORM2IVPROC
__glewProgramUniform2ivEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLPROGRAMUNIFORM2IVEXTPROC __glewProgramUniform2ivEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLPROGRAMUNIFORM2IVEXTPROC
__glewProgramUniform2ui	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLPROGRAMUNIFORM2UIPROC __glewProgramUniform2ui;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLPROGRAMUNIFORM2UIPROC
__glewProgramUniform2ui64ARB	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLPROGRAMUNIFORM2UI64ARBPROC __glewProgramUniform2ui64ARB;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLPROGRAMUNIFORM2UI64ARBPROC
__glewProgramUniform2ui64NV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLPROGRAMUNIFORM2UI64NVPROC __glewProgramUniform2ui64NV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLPROGRAMUNIFORM2UI64NVPROC
__glewProgramUniform2ui64vARB	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLPROGRAMUNIFORM2UI64VARBPROC __glewProgramUniform2ui64vARB;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLPROGRAMUNIFORM2UI64VARBPROC
__glewProgramUniform2ui64vNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLPROGRAMUNIFORM2UI64VNVPROC __glewProgramUniform2ui64vNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLPROGRAMUNIFORM2UI64VNVPROC
__glewProgramUniform2uiEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLPROGRAMUNIFORM2UIEXTPROC __glewProgramUniform2uiEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLPROGRAMUNIFORM2UIEXTPROC
__glewProgramUniform2uiv	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLPROGRAMUNIFORM2UIVPROC __glewProgramUniform2uiv;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLPROGRAMUNIFORM2UIVPROC
__glewProgramUniform2uivEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLPROGRAMUNIFORM2UIVEXTPROC __glewProgramUniform2uivEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLPROGRAMUNIFORM2UIVEXTPROC
__glewProgramUniform3d	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLPROGRAMUNIFORM3DPROC __glewProgramUniform3d;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLPROGRAMUNIFORM3DPROC
__glewProgramUniform3dv	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLPROGRAMUNIFORM3DVPROC __glewProgramUniform3dv;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLPROGRAMUNIFORM3DVPROC
__glewProgramUniform3f	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLPROGRAMUNIFORM3FPROC __glewProgramUniform3f;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLPROGRAMUNIFORM3FPROC
__glewProgramUniform3fEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLPROGRAMUNIFORM3FEXTPROC __glewProgramUniform3fEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLPROGRAMUNIFORM3FEXTPROC
__glewProgramUniform3fv	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLPROGRAMUNIFORM3FVPROC __glewProgramUniform3fv;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLPROGRAMUNIFORM3FVPROC
__glewProgramUniform3fvEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLPROGRAMUNIFORM3FVEXTPROC __glewProgramUniform3fvEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLPROGRAMUNIFORM3FVEXTPROC
__glewProgramUniform3i	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLPROGRAMUNIFORM3IPROC __glewProgramUniform3i;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLPROGRAMUNIFORM3IPROC
__glewProgramUniform3i64ARB	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLPROGRAMUNIFORM3I64ARBPROC __glewProgramUniform3i64ARB;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLPROGRAMUNIFORM3I64ARBPROC
__glewProgramUniform3i64NV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLPROGRAMUNIFORM3I64NVPROC __glewProgramUniform3i64NV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLPROGRAMUNIFORM3I64NVPROC
__glewProgramUniform3i64vARB	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLPROGRAMUNIFORM3I64VARBPROC __glewProgramUniform3i64vARB;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLPROGRAMUNIFORM3I64VARBPROC
__glewProgramUniform3i64vNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLPROGRAMUNIFORM3I64VNVPROC __glewProgramUniform3i64vNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLPROGRAMUNIFORM3I64VNVPROC
__glewProgramUniform3iEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLPROGRAMUNIFORM3IEXTPROC __glewProgramUniform3iEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLPROGRAMUNIFORM3IEXTPROC
__glewProgramUniform3iv	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLPROGRAMUNIFORM3IVPROC __glewProgramUniform3iv;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLPROGRAMUNIFORM3IVPROC
__glewProgramUniform3ivEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLPROGRAMUNIFORM3IVEXTPROC __glewProgramUniform3ivEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLPROGRAMUNIFORM3IVEXTPROC
__glewProgramUniform3ui	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLPROGRAMUNIFORM3UIPROC __glewProgramUniform3ui;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLPROGRAMUNIFORM3UIPROC
__glewProgramUniform3ui64ARB	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLPROGRAMUNIFORM3UI64ARBPROC __glewProgramUniform3ui64ARB;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLPROGRAMUNIFORM3UI64ARBPROC
__glewProgramUniform3ui64NV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLPROGRAMUNIFORM3UI64NVPROC __glewProgramUniform3ui64NV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLPROGRAMUNIFORM3UI64NVPROC
__glewProgramUniform3ui64vARB	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLPROGRAMUNIFORM3UI64VARBPROC __glewProgramUniform3ui64vARB;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLPROGRAMUNIFORM3UI64VARBPROC
__glewProgramUniform3ui64vNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLPROGRAMUNIFORM3UI64VNVPROC __glewProgramUniform3ui64vNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLPROGRAMUNIFORM3UI64VNVPROC
__glewProgramUniform3uiEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLPROGRAMUNIFORM3UIEXTPROC __glewProgramUniform3uiEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLPROGRAMUNIFORM3UIEXTPROC
__glewProgramUniform3uiv	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLPROGRAMUNIFORM3UIVPROC __glewProgramUniform3uiv;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLPROGRAMUNIFORM3UIVPROC
__glewProgramUniform3uivEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLPROGRAMUNIFORM3UIVEXTPROC __glewProgramUniform3uivEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLPROGRAMUNIFORM3UIVEXTPROC
__glewProgramUniform4d	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLPROGRAMUNIFORM4DPROC __glewProgramUniform4d;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLPROGRAMUNIFORM4DPROC
__glewProgramUniform4dv	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLPROGRAMUNIFORM4DVPROC __glewProgramUniform4dv;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLPROGRAMUNIFORM4DVPROC
__glewProgramUniform4f	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLPROGRAMUNIFORM4FPROC __glewProgramUniform4f;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLPROGRAMUNIFORM4FPROC
__glewProgramUniform4fEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLPROGRAMUNIFORM4FEXTPROC __glewProgramUniform4fEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLPROGRAMUNIFORM4FEXTPROC
__glewProgramUniform4fv	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLPROGRAMUNIFORM4FVPROC __glewProgramUniform4fv;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLPROGRAMUNIFORM4FVPROC
__glewProgramUniform4fvEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLPROGRAMUNIFORM4FVEXTPROC __glewProgramUniform4fvEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLPROGRAMUNIFORM4FVEXTPROC
__glewProgramUniform4i	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLPROGRAMUNIFORM4IPROC __glewProgramUniform4i;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLPROGRAMUNIFORM4IPROC
__glewProgramUniform4i64ARB	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLPROGRAMUNIFORM4I64ARBPROC __glewProgramUniform4i64ARB;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLPROGRAMUNIFORM4I64ARBPROC
__glewProgramUniform4i64NV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLPROGRAMUNIFORM4I64NVPROC __glewProgramUniform4i64NV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLPROGRAMUNIFORM4I64NVPROC
__glewProgramUniform4i64vARB	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLPROGRAMUNIFORM4I64VARBPROC __glewProgramUniform4i64vARB;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLPROGRAMUNIFORM4I64VARBPROC
__glewProgramUniform4i64vNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLPROGRAMUNIFORM4I64VNVPROC __glewProgramUniform4i64vNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLPROGRAMUNIFORM4I64VNVPROC
__glewProgramUniform4iEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLPROGRAMUNIFORM4IEXTPROC __glewProgramUniform4iEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLPROGRAMUNIFORM4IEXTPROC
__glewProgramUniform4iv	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLPROGRAMUNIFORM4IVPROC __glewProgramUniform4iv;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLPROGRAMUNIFORM4IVPROC
__glewProgramUniform4ivEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLPROGRAMUNIFORM4IVEXTPROC __glewProgramUniform4ivEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLPROGRAMUNIFORM4IVEXTPROC
__glewProgramUniform4ui	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLPROGRAMUNIFORM4UIPROC __glewProgramUniform4ui;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLPROGRAMUNIFORM4UIPROC
__glewProgramUniform4ui64ARB	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLPROGRAMUNIFORM4UI64ARBPROC __glewProgramUniform4ui64ARB;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLPROGRAMUNIFORM4UI64ARBPROC
__glewProgramUniform4ui64NV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLPROGRAMUNIFORM4UI64NVPROC __glewProgramUniform4ui64NV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLPROGRAMUNIFORM4UI64NVPROC
__glewProgramUniform4ui64vARB	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLPROGRAMUNIFORM4UI64VARBPROC __glewProgramUniform4ui64vARB;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLPROGRAMUNIFORM4UI64VARBPROC
__glewProgramUniform4ui64vNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLPROGRAMUNIFORM4UI64VNVPROC __glewProgramUniform4ui64vNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLPROGRAMUNIFORM4UI64VNVPROC
__glewProgramUniform4uiEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLPROGRAMUNIFORM4UIEXTPROC __glewProgramUniform4uiEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLPROGRAMUNIFORM4UIEXTPROC
__glewProgramUniform4uiv	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLPROGRAMUNIFORM4UIVPROC __glewProgramUniform4uiv;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLPROGRAMUNIFORM4UIVPROC
__glewProgramUniform4uivEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLPROGRAMUNIFORM4UIVEXTPROC __glewProgramUniform4uivEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLPROGRAMUNIFORM4UIVEXTPROC
__glewProgramUniformHandleui64ARB	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLPROGRAMUNIFORMHANDLEUI64ARBPROC __glewProgramUniformHandleui64ARB;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLPROGRAMUNIFORMHANDLEUI64ARBPROC
__glewProgramUniformHandleui64IMG	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLPROGRAMUNIFORMHANDLEUI64IMGPROC __glewProgramUniformHandleui64IMG;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLPROGRAMUNIFORMHANDLEUI64IMGPROC
__glewProgramUniformHandleui64NV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLPROGRAMUNIFORMHANDLEUI64NVPROC __glewProgramUniformHandleui64NV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLPROGRAMUNIFORMHANDLEUI64NVPROC
__glewProgramUniformHandleui64vARB	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLPROGRAMUNIFORMHANDLEUI64VARBPROC __glewProgramUniformHandleui64vARB;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLPROGRAMUNIFORMHANDLEUI64VARBPROC
__glewProgramUniformHandleui64vIMG	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLPROGRAMUNIFORMHANDLEUI64VIMGPROC __glewProgramUniformHandleui64vIMG;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLPROGRAMUNIFORMHANDLEUI64VIMGPROC
__glewProgramUniformHandleui64vNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLPROGRAMUNIFORMHANDLEUI64VNVPROC __glewProgramUniformHandleui64vNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLPROGRAMUNIFORMHANDLEUI64VNVPROC
__glewProgramUniformMatrix2dv	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLPROGRAMUNIFORMMATRIX2DVPROC __glewProgramUniformMatrix2dv;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLPROGRAMUNIFORMMATRIX2DVPROC
__glewProgramUniformMatrix2fv	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLPROGRAMUNIFORMMATRIX2FVPROC __glewProgramUniformMatrix2fv;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLPROGRAMUNIFORMMATRIX2FVPROC
__glewProgramUniformMatrix2fvEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLPROGRAMUNIFORMMATRIX2FVEXTPROC __glewProgramUniformMatrix2fvEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLPROGRAMUNIFORMMATRIX2FVEXTPROC
__glewProgramUniformMatrix2x3dv	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLPROGRAMUNIFORMMATRIX2X3DVPROC __glewProgramUniformMatrix2x3dv;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLPROGRAMUNIFORMMATRIX2X3DVPROC
__glewProgramUniformMatrix2x3fv	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLPROGRAMUNIFORMMATRIX2X3FVPROC __glewProgramUniformMatrix2x3fv;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLPROGRAMUNIFORMMATRIX2X3FVPROC
__glewProgramUniformMatrix2x3fvEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLPROGRAMUNIFORMMATRIX2X3FVEXTPROC __glewProgramUniformMatrix2x3fvEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLPROGRAMUNIFORMMATRIX2X3FVEXTPROC
__glewProgramUniformMatrix2x4dv	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLPROGRAMUNIFORMMATRIX2X4DVPROC __glewProgramUniformMatrix2x4dv;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLPROGRAMUNIFORMMATRIX2X4DVPROC
__glewProgramUniformMatrix2x4fv	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLPROGRAMUNIFORMMATRIX2X4FVPROC __glewProgramUniformMatrix2x4fv;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLPROGRAMUNIFORMMATRIX2X4FVPROC
__glewProgramUniformMatrix2x4fvEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLPROGRAMUNIFORMMATRIX2X4FVEXTPROC __glewProgramUniformMatrix2x4fvEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLPROGRAMUNIFORMMATRIX2X4FVEXTPROC
__glewProgramUniformMatrix3dv	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLPROGRAMUNIFORMMATRIX3DVPROC __glewProgramUniformMatrix3dv;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLPROGRAMUNIFORMMATRIX3DVPROC
__glewProgramUniformMatrix3fv	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLPROGRAMUNIFORMMATRIX3FVPROC __glewProgramUniformMatrix3fv;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLPROGRAMUNIFORMMATRIX3FVPROC
__glewProgramUniformMatrix3fvEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLPROGRAMUNIFORMMATRIX3FVEXTPROC __glewProgramUniformMatrix3fvEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLPROGRAMUNIFORMMATRIX3FVEXTPROC
__glewProgramUniformMatrix3x2dv	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLPROGRAMUNIFORMMATRIX3X2DVPROC __glewProgramUniformMatrix3x2dv;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLPROGRAMUNIFORMMATRIX3X2DVPROC
__glewProgramUniformMatrix3x2fv	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLPROGRAMUNIFORMMATRIX3X2FVPROC __glewProgramUniformMatrix3x2fv;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLPROGRAMUNIFORMMATRIX3X2FVPROC
__glewProgramUniformMatrix3x2fvEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLPROGRAMUNIFORMMATRIX3X2FVEXTPROC __glewProgramUniformMatrix3x2fvEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLPROGRAMUNIFORMMATRIX3X2FVEXTPROC
__glewProgramUniformMatrix3x4dv	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLPROGRAMUNIFORMMATRIX3X4DVPROC __glewProgramUniformMatrix3x4dv;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLPROGRAMUNIFORMMATRIX3X4DVPROC
__glewProgramUniformMatrix3x4fv	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLPROGRAMUNIFORMMATRIX3X4FVPROC __glewProgramUniformMatrix3x4fv;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLPROGRAMUNIFORMMATRIX3X4FVPROC
__glewProgramUniformMatrix3x4fvEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLPROGRAMUNIFORMMATRIX3X4FVEXTPROC __glewProgramUniformMatrix3x4fvEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLPROGRAMUNIFORMMATRIX3X4FVEXTPROC
__glewProgramUniformMatrix4dv	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLPROGRAMUNIFORMMATRIX4DVPROC __glewProgramUniformMatrix4dv;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLPROGRAMUNIFORMMATRIX4DVPROC
__glewProgramUniformMatrix4fv	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLPROGRAMUNIFORMMATRIX4FVPROC __glewProgramUniformMatrix4fv;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLPROGRAMUNIFORMMATRIX4FVPROC
__glewProgramUniformMatrix4fvEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLPROGRAMUNIFORMMATRIX4FVEXTPROC __glewProgramUniformMatrix4fvEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLPROGRAMUNIFORMMATRIX4FVEXTPROC
__glewProgramUniformMatrix4x2dv	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLPROGRAMUNIFORMMATRIX4X2DVPROC __glewProgramUniformMatrix4x2dv;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLPROGRAMUNIFORMMATRIX4X2DVPROC
__glewProgramUniformMatrix4x2fv	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLPROGRAMUNIFORMMATRIX4X2FVPROC __glewProgramUniformMatrix4x2fv;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLPROGRAMUNIFORMMATRIX4X2FVPROC
__glewProgramUniformMatrix4x2fvEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLPROGRAMUNIFORMMATRIX4X2FVEXTPROC __glewProgramUniformMatrix4x2fvEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLPROGRAMUNIFORMMATRIX4X2FVEXTPROC
__glewProgramUniformMatrix4x3dv	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLPROGRAMUNIFORMMATRIX4X3DVPROC __glewProgramUniformMatrix4x3dv;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLPROGRAMUNIFORMMATRIX4X3DVPROC
__glewProgramUniformMatrix4x3fv	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLPROGRAMUNIFORMMATRIX4X3FVPROC __glewProgramUniformMatrix4x3fv;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLPROGRAMUNIFORMMATRIX4X3FVPROC
__glewProgramUniformMatrix4x3fvEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLPROGRAMUNIFORMMATRIX4X3FVEXTPROC __glewProgramUniformMatrix4x3fvEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLPROGRAMUNIFORMMATRIX4X3FVEXTPROC
__glewProgramUniformui64NV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLPROGRAMUNIFORMUI64NVPROC __glewProgramUniformui64NV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLPROGRAMUNIFORMUI64NVPROC
__glewProgramUniformui64vNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLPROGRAMUNIFORMUI64VNVPROC __glewProgramUniformui64vNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLPROGRAMUNIFORMUI64VNVPROC
__glewProgramVertexLimitNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLPROGRAMVERTEXLIMITNVPROC __glewProgramVertexLimitNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLPROGRAMVERTEXLIMITNVPROC
__glewProvokingVertex	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLPROVOKINGVERTEXPROC __glewProvokingVertex;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLPROVOKINGVERTEXPROC
__glewProvokingVertexEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLPROVOKINGVERTEXEXTPROC __glewProvokingVertexEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLPROVOKINGVERTEXEXTPROC
__glewPushClientAttribDefaultEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLPUSHCLIENTATTRIBDEFAULTEXTPROC __glewPushClientAttribDefaultEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLPUSHCLIENTATTRIBDEFAULTEXTPROC
__glewPushDebugGroup	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLPUSHDEBUGGROUPPROC __glewPushDebugGroup;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLPUSHDEBUGGROUPPROC
__glewPushGroupMarkerEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLPUSHGROUPMARKEREXTPROC __glewPushGroupMarkerEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLPUSHGROUPMARKEREXTPROC
__glewQueryCounter	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLQUERYCOUNTERPROC __glewQueryCounter;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLQUERYCOUNTERPROC
__glewQueryCounterANGLE	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLQUERYCOUNTERANGLEPROC __glewQueryCounterANGLE;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLQUERYCOUNTERANGLEPROC
__glewQueryCounterEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLQUERYCOUNTEREXTPROC __glewQueryCounterEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLQUERYCOUNTEREXTPROC
__glewQueryObjectParameteruiAMD	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLQUERYOBJECTPARAMETERUIAMDPROC __glewQueryObjectParameteruiAMD;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLQUERYOBJECTPARAMETERUIAMDPROC
__glewRasterSamplesEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLRASTERSAMPLESEXTPROC __glewRasterSamplesEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLRASTERSAMPLESEXTPROC
__glewReadBufferIndexedEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLREADBUFFERINDEXEDEXTPROC __glewReadBufferIndexedEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLREADBUFFERINDEXEDEXTPROC
__glewReadBufferNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLREADBUFFERNVPROC __glewReadBufferNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLREADBUFFERNVPROC
__glewReadBufferRegion	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLREADBUFFERREGIONPROC __glewReadBufferRegion;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLREADBUFFERREGIONPROC
__glewReadVideoPixelsSUN	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLREADVIDEOPIXELSSUNPROC __glewReadVideoPixelsSUN;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLREADVIDEOPIXELSSUNPROC
__glewReadnPixels	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLREADNPIXELSPROC __glewReadnPixels;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLREADNPIXELSPROC
__glewReadnPixelsARB	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLREADNPIXELSARBPROC __glewReadnPixelsARB;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLREADNPIXELSARBPROC
__glewReadnPixelsEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLREADNPIXELSEXTPROC __glewReadnPixelsEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLREADNPIXELSEXTPROC
__glewReferencePlaneSGIX	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLREFERENCEPLANESGIXPROC __glewReferencePlaneSGIX;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLREFERENCEPLANESGIXPROC
__glewReleaseKeyedMutexWin32EXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLRELEASEKEYEDMUTEXWIN32EXTPROC __glewReleaseKeyedMutexWin32EXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLRELEASEKEYEDMUTEXWIN32EXTPROC
__glewReleaseShaderCompiler	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLRELEASESHADERCOMPILERPROC __glewReleaseShaderCompiler;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLRELEASESHADERCOMPILERPROC
__glewRenderGpuMaskNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLRENDERGPUMASKNVPROC __glewRenderGpuMaskNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLRENDERGPUMASKNVPROC
__glewRenderbufferStorage	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLRENDERBUFFERSTORAGEPROC __glewRenderbufferStorage;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLRENDERBUFFERSTORAGEPROC
__glewRenderbufferStorageEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLRENDERBUFFERSTORAGEEXTPROC __glewRenderbufferStorageEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLRENDERBUFFERSTORAGEEXTPROC
__glewRenderbufferStorageMultisample	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLRENDERBUFFERSTORAGEMULTISAMPLEPROC __glewRenderbufferStorageMultisample;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLRENDERBUFFERSTORAGEMULTISAMPLEPROC
__glewRenderbufferStorageMultisampleANGLE	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLRENDERBUFFERSTORAGEMULTISAMPLEANGLEPROC __glewRenderbufferStorageMultisampl/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLRENDERBUFFERSTORAGEMULTISAMPLEANGLEPROC
__glewRenderbufferStorageMultisampleAPPLE	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLRENDERBUFFERSTORAGEMULTISAMPLEAPPLEPROC __glewRenderbufferStorageMultisampl/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLRENDERBUFFERSTORAGEMULTISAMPLEAPPLEPROC
__glewRenderbufferStorageMultisampleAdvancedAMD	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLRENDERBUFFERSTORAGEMULTISAMPLEADVANCEDAMDPROC __glewRenderbufferStorageMult/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLRENDERBUFFERSTORAGEMULTISAMPLEADVANCEDAMDPROC
__glewRenderbufferStorageMultisampleCoverageNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLRENDERBUFFERSTORAGEMULTISAMPLECOVERAGENVPROC __glewRenderbufferStorageMulti/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLRENDERBUFFERSTORAGEMULTISAMPLECOVERAGENVPROC
__glewRenderbufferStorageMultisampleEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLRENDERBUFFERSTORAGEMULTISAMPLEEXTPROC __glewRenderbufferStorageMultisampleE/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLRENDERBUFFERSTORAGEMULTISAMPLEEXTPROC
__glewRenderbufferStorageMultisampleIMG	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLRENDERBUFFERSTORAGEMULTISAMPLEIMGPROC __glewRenderbufferStorageMultisampleI/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLRENDERBUFFERSTORAGEMULTISAMPLEIMGPROC
__glewRenderbufferStorageMultisampleNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLRENDERBUFFERSTORAGEMULTISAMPLENVPROC __glewRenderbufferStorageMultisampleNV/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLRENDERBUFFERSTORAGEMULTISAMPLENVPROC
__glewRenderbufferStorageOES	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLRENDERBUFFERSTORAGEOESPROC __glewRenderbufferStorageOES;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLRENDERBUFFERSTORAGEOESPROC
__glewReplacementCodePointerSUN	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLREPLACEMENTCODEPOINTERSUNPROC __glewReplacementCodePointerSUN;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLREPLACEMENTCODEPOINTERSUNPROC
__glewReplacementCodeubSUN	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLREPLACEMENTCODEUBSUNPROC __glewReplacementCodeubSUN;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLREPLACEMENTCODEUBSUNPROC
__glewReplacementCodeubvSUN	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLREPLACEMENTCODEUBVSUNPROC __glewReplacementCodeubvSUN;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLREPLACEMENTCODEUBVSUNPROC
__glewReplacementCodeuiColor3fVertex3fSUN	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLREPLACEMENTCODEUICOLOR3FVERTEX3FSUNPROC __glewReplacementCodeuiColor3fVerte/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLREPLACEMENTCODEUICOLOR3FVERTEX3FSUNPROC
__glewReplacementCodeuiColor3fVertex3fvSUN	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLREPLACEMENTCODEUICOLOR3FVERTEX3FVSUNPROC __glewReplacementCodeuiColor3fVert/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLREPLACEMENTCODEUICOLOR3FVERTEX3FVSUNPROC
__glewReplacementCodeuiColor4fNormal3fVertex3fSUN	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLREPLACEMENTCODEUICOLOR4FNORMAL3FVERTEX3FSUNPROC __glewReplacementCodeuiColo/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLREPLACEMENTCODEUICOLOR4FNORMAL3FVERTEX3FSUNPROC
__glewReplacementCodeuiColor4fNormal3fVertex3fvSUN	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLREPLACEMENTCODEUICOLOR4FNORMAL3FVERTEX3FVSUNPROC __glewReplacementCodeuiCol/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLREPLACEMENTCODEUICOLOR4FNORMAL3FVERTEX3FVSUNPROC
__glewReplacementCodeuiColor4ubVertex3fSUN	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLREPLACEMENTCODEUICOLOR4UBVERTEX3FSUNPROC __glewReplacementCodeuiColor4ubVer/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLREPLACEMENTCODEUICOLOR4UBVERTEX3FSUNPROC
__glewReplacementCodeuiColor4ubVertex3fvSUN	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLREPLACEMENTCODEUICOLOR4UBVERTEX3FVSUNPROC __glewReplacementCodeuiColor4ubVe/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLREPLACEMENTCODEUICOLOR4UBVERTEX3FVSUNPROC
__glewReplacementCodeuiNormal3fVertex3fSUN	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLREPLACEMENTCODEUINORMAL3FVERTEX3FSUNPROC __glewReplacementCodeuiNormal3fVer/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLREPLACEMENTCODEUINORMAL3FVERTEX3FSUNPROC
__glewReplacementCodeuiNormal3fVertex3fvSUN	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLREPLACEMENTCODEUINORMAL3FVERTEX3FVSUNPROC __glewReplacementCodeuiNormal3fVe/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLREPLACEMENTCODEUINORMAL3FVERTEX3FVSUNPROC
__glewReplacementCodeuiSUN	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLREPLACEMENTCODEUISUNPROC __glewReplacementCodeuiSUN;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLREPLACEMENTCODEUISUNPROC
__glewReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fSUN	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLREPLACEMENTCODEUITEXCOORD2FCOLOR4FNORMAL3FVERTEX3FSUNPROC __glewReplacement/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLREPLACEMENTCODEUITEXCOORD2FCOLOR4FNORMAL3FVERTEX3FSUNPROC
__glewReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fvSUN	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLREPLACEMENTCODEUITEXCOORD2FCOLOR4FNORMAL3FVERTEX3FVSUNPROC __glewReplacemen/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLREPLACEMENTCODEUITEXCOORD2FCOLOR4FNORMAL3FVERTEX3FVSUNPROC
__glewReplacementCodeuiTexCoord2fNormal3fVertex3fSUN	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLREPLACEMENTCODEUITEXCOORD2FNORMAL3FVERTEX3FSUNPROC __glewReplacementCodeuiT/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLREPLACEMENTCODEUITEXCOORD2FNORMAL3FVERTEX3FSUNPROC
__glewReplacementCodeuiTexCoord2fNormal3fVertex3fvSUN	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLREPLACEMENTCODEUITEXCOORD2FNORMAL3FVERTEX3FVSUNPROC __glewReplacementCodeui/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLREPLACEMENTCODEUITEXCOORD2FNORMAL3FVERTEX3FVSUNPROC
__glewReplacementCodeuiTexCoord2fVertex3fSUN	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLREPLACEMENTCODEUITEXCOORD2FVERTEX3FSUNPROC __glewReplacementCodeuiTexCoord2/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLREPLACEMENTCODEUITEXCOORD2FVERTEX3FSUNPROC
__glewReplacementCodeuiTexCoord2fVertex3fvSUN	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLREPLACEMENTCODEUITEXCOORD2FVERTEX3FVSUNPROC __glewReplacementCodeuiTexCoord/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLREPLACEMENTCODEUITEXCOORD2FVERTEX3FVSUNPROC
__glewReplacementCodeuiVertex3fSUN	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLREPLACEMENTCODEUIVERTEX3FSUNPROC __glewReplacementCodeuiVertex3fSUN;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLREPLACEMENTCODEUIVERTEX3FSUNPROC
__glewReplacementCodeuiVertex3fvSUN	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLREPLACEMENTCODEUIVERTEX3FVSUNPROC __glewReplacementCodeuiVertex3fvSUN;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLREPLACEMENTCODEUIVERTEX3FVSUNPROC
__glewReplacementCodeuivSUN	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLREPLACEMENTCODEUIVSUNPROC __glewReplacementCodeuivSUN;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLREPLACEMENTCODEUIVSUNPROC
__glewReplacementCodeusSUN	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLREPLACEMENTCODEUSSUNPROC __glewReplacementCodeusSUN;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLREPLACEMENTCODEUSSUNPROC
__glewReplacementCodeusvSUN	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLREPLACEMENTCODEUSVSUNPROC __glewReplacementCodeusvSUN;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLREPLACEMENTCODEUSVSUNPROC
__glewRequestResidentProgramsNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLREQUESTRESIDENTPROGRAMSNVPROC __glewRequestResidentProgramsNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLREQUESTRESIDENTPROGRAMSNVPROC
__glewResetHistogram	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLRESETHISTOGRAMPROC __glewResetHistogram;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLRESETHISTOGRAMPROC
__glewResetHistogramEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLRESETHISTOGRAMEXTPROC __glewResetHistogramEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLRESETHISTOGRAMEXTPROC
__glewResetMemoryObjectParameterNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLRESETMEMORYOBJECTPARAMETERNVPROC __glewResetMemoryObjectParameterNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLRESETMEMORYOBJECTPARAMETERNVPROC
__glewResetMinmax	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLRESETMINMAXPROC __glewResetMinmax;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLRESETMINMAXPROC
__glewResetMinmaxEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLRESETMINMAXEXTPROC __glewResetMinmaxEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLRESETMINMAXEXTPROC
__glewResizeBuffersMESA	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLRESIZEBUFFERSMESAPROC __glewResizeBuffersMESA;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLRESIZEBUFFERSMESAPROC
__glewResolveDepthValuesNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLRESOLVEDEPTHVALUESNVPROC __glewResolveDepthValuesNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLRESOLVEDEPTHVALUESNVPROC
__glewResolveMultisampleFramebufferAPPLE	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLRESOLVEMULTISAMPLEFRAMEBUFFERAPPLEPROC __glewResolveMultisampleFramebufferA/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLRESOLVEMULTISAMPLEFRAMEBUFFERAPPLEPROC
__glewResumeTransformFeedback	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLRESUMETRANSFORMFEEDBACKPROC __glewResumeTransformFeedback;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLRESUMETRANSFORMFEEDBACKPROC
__glewResumeTransformFeedbackNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLRESUMETRANSFORMFEEDBACKNVPROC __glewResumeTransformFeedbackNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLRESUMETRANSFORMFEEDBACKNVPROC
__glewRotatex	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLROTATEXPROC __glewRotatex;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLROTATEXPROC
__glewSampleCoverage	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLSAMPLECOVERAGEPROC __glewSampleCoverage;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLSAMPLECOVERAGEPROC
__glewSampleCoverageARB	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLSAMPLECOVERAGEARBPROC __glewSampleCoverageARB;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLSAMPLECOVERAGEARBPROC
__glewSampleCoveragex	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLSAMPLECOVERAGEXPROC __glewSampleCoveragex;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLSAMPLECOVERAGEXPROC
__glewSampleMapATI	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLSAMPLEMAPATIPROC __glewSampleMapATI;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLSAMPLEMAPATIPROC
__glewSampleMaskEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLSAMPLEMASKEXTPROC __glewSampleMaskEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLSAMPLEMASKEXTPROC
__glewSampleMaskIndexedNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLSAMPLEMASKINDEXEDNVPROC __glewSampleMaskIndexedNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLSAMPLEMASKINDEXEDNVPROC
__glewSampleMaskSGIS	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLSAMPLEMASKSGISPROC __glewSampleMaskSGIS;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLSAMPLEMASKSGISPROC
__glewSampleMaski	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLSAMPLEMASKIPROC __glewSampleMaski;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLSAMPLEMASKIPROC
__glewSamplePatternEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLSAMPLEPATTERNEXTPROC __glewSamplePatternEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLSAMPLEPATTERNEXTPROC
__glewSamplePatternSGIS	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLSAMPLEPATTERNSGISPROC __glewSamplePatternSGIS;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLSAMPLEPATTERNSGISPROC
__glewSamplerParameterIiv	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLSAMPLERPARAMETERIIVPROC __glewSamplerParameterIiv;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLSAMPLERPARAMETERIIVPROC
__glewSamplerParameterIivEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLSAMPLERPARAMETERIIVEXTPROC __glewSamplerParameterIivEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLSAMPLERPARAMETERIIVEXTPROC
__glewSamplerParameterIivOES	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLSAMPLERPARAMETERIIVOESPROC __glewSamplerParameterIivOES;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLSAMPLERPARAMETERIIVOESPROC
__glewSamplerParameterIuiv	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLSAMPLERPARAMETERIUIVPROC __glewSamplerParameterIuiv;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLSAMPLERPARAMETERIUIVPROC
__glewSamplerParameterIuivEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLSAMPLERPARAMETERIUIVEXTPROC __glewSamplerParameterIuivEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLSAMPLERPARAMETERIUIVEXTPROC
__glewSamplerParameterIuivOES	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLSAMPLERPARAMETERIUIVOESPROC __glewSamplerParameterIuivOES;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLSAMPLERPARAMETERIUIVOESPROC
__glewSamplerParameterf	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLSAMPLERPARAMETERFPROC __glewSamplerParameterf;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLSAMPLERPARAMETERFPROC
__glewSamplerParameterfv	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLSAMPLERPARAMETERFVPROC __glewSamplerParameterfv;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLSAMPLERPARAMETERFVPROC
__glewSamplerParameteri	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLSAMPLERPARAMETERIPROC __glewSamplerParameteri;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLSAMPLERPARAMETERIPROC
__glewSamplerParameteriv	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLSAMPLERPARAMETERIVPROC __glewSamplerParameteriv;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLSAMPLERPARAMETERIVPROC
__glewScalex	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLSCALEXPROC __glewScalex;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLSCALEXPROC
__glewScissorArrayv	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLSCISSORARRAYVPROC __glewScissorArrayv;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLSCISSORARRAYVPROC
__glewScissorArrayvNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLSCISSORARRAYVNVPROC __glewScissorArrayvNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLSCISSORARRAYVNVPROC
__glewScissorExclusiveArrayvNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLSCISSOREXCLUSIVEARRAYVNVPROC __glewScissorExclusiveArrayvNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLSCISSOREXCLUSIVEARRAYVNVPROC
__glewScissorExclusiveNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLSCISSOREXCLUSIVENVPROC __glewScissorExclusiveNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLSCISSOREXCLUSIVENVPROC
__glewScissorIndexed	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLSCISSORINDEXEDPROC __glewScissorIndexed;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLSCISSORINDEXEDPROC
__glewScissorIndexedNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLSCISSORINDEXEDNVPROC __glewScissorIndexedNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLSCISSORINDEXEDNVPROC
__glewScissorIndexedv	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLSCISSORINDEXEDVPROC __glewScissorIndexedv;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLSCISSORINDEXEDVPROC
__glewScissorIndexedvNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLSCISSORINDEXEDVNVPROC __glewScissorIndexedvNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLSCISSORINDEXEDVNVPROC
__glewSecondaryColor3b	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLSECONDARYCOLOR3BPROC __glewSecondaryColor3b;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLSECONDARYCOLOR3BPROC
__glewSecondaryColor3bEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLSECONDARYCOLOR3BEXTPROC __glewSecondaryColor3bEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLSECONDARYCOLOR3BEXTPROC
__glewSecondaryColor3bv	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLSECONDARYCOLOR3BVPROC __glewSecondaryColor3bv;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLSECONDARYCOLOR3BVPROC
__glewSecondaryColor3bvEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLSECONDARYCOLOR3BVEXTPROC __glewSecondaryColor3bvEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLSECONDARYCOLOR3BVEXTPROC
__glewSecondaryColor3d	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLSECONDARYCOLOR3DPROC __glewSecondaryColor3d;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLSECONDARYCOLOR3DPROC
__glewSecondaryColor3dEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLSECONDARYCOLOR3DEXTPROC __glewSecondaryColor3dEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLSECONDARYCOLOR3DEXTPROC
__glewSecondaryColor3dv	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLSECONDARYCOLOR3DVPROC __glewSecondaryColor3dv;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLSECONDARYCOLOR3DVPROC
__glewSecondaryColor3dvEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLSECONDARYCOLOR3DVEXTPROC __glewSecondaryColor3dvEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLSECONDARYCOLOR3DVEXTPROC
__glewSecondaryColor3f	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLSECONDARYCOLOR3FPROC __glewSecondaryColor3f;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLSECONDARYCOLOR3FPROC
__glewSecondaryColor3fEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLSECONDARYCOLOR3FEXTPROC __glewSecondaryColor3fEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLSECONDARYCOLOR3FEXTPROC
__glewSecondaryColor3fv	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLSECONDARYCOLOR3FVPROC __glewSecondaryColor3fv;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLSECONDARYCOLOR3FVPROC
__glewSecondaryColor3fvEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLSECONDARYCOLOR3FVEXTPROC __glewSecondaryColor3fvEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLSECONDARYCOLOR3FVEXTPROC
__glewSecondaryColor3hNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLSECONDARYCOLOR3HNVPROC __glewSecondaryColor3hNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLSECONDARYCOLOR3HNVPROC
__glewSecondaryColor3hvNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLSECONDARYCOLOR3HVNVPROC __glewSecondaryColor3hvNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLSECONDARYCOLOR3HVNVPROC
__glewSecondaryColor3i	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLSECONDARYCOLOR3IPROC __glewSecondaryColor3i;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLSECONDARYCOLOR3IPROC
__glewSecondaryColor3iEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLSECONDARYCOLOR3IEXTPROC __glewSecondaryColor3iEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLSECONDARYCOLOR3IEXTPROC
__glewSecondaryColor3iv	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLSECONDARYCOLOR3IVPROC __glewSecondaryColor3iv;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLSECONDARYCOLOR3IVPROC
__glewSecondaryColor3ivEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLSECONDARYCOLOR3IVEXTPROC __glewSecondaryColor3ivEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLSECONDARYCOLOR3IVEXTPROC
__glewSecondaryColor3s	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLSECONDARYCOLOR3SPROC __glewSecondaryColor3s;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLSECONDARYCOLOR3SPROC
__glewSecondaryColor3sEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLSECONDARYCOLOR3SEXTPROC __glewSecondaryColor3sEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLSECONDARYCOLOR3SEXTPROC
__glewSecondaryColor3sv	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLSECONDARYCOLOR3SVPROC __glewSecondaryColor3sv;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLSECONDARYCOLOR3SVPROC
__glewSecondaryColor3svEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLSECONDARYCOLOR3SVEXTPROC __glewSecondaryColor3svEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLSECONDARYCOLOR3SVEXTPROC
__glewSecondaryColor3ub	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLSECONDARYCOLOR3UBPROC __glewSecondaryColor3ub;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLSECONDARYCOLOR3UBPROC
__glewSecondaryColor3ubEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLSECONDARYCOLOR3UBEXTPROC __glewSecondaryColor3ubEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLSECONDARYCOLOR3UBEXTPROC
__glewSecondaryColor3ubv	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLSECONDARYCOLOR3UBVPROC __glewSecondaryColor3ubv;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLSECONDARYCOLOR3UBVPROC
__glewSecondaryColor3ubvEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLSECONDARYCOLOR3UBVEXTPROC __glewSecondaryColor3ubvEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLSECONDARYCOLOR3UBVEXTPROC
__glewSecondaryColor3ui	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLSECONDARYCOLOR3UIPROC __glewSecondaryColor3ui;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLSECONDARYCOLOR3UIPROC
__glewSecondaryColor3uiEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLSECONDARYCOLOR3UIEXTPROC __glewSecondaryColor3uiEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLSECONDARYCOLOR3UIEXTPROC
__glewSecondaryColor3uiv	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLSECONDARYCOLOR3UIVPROC __glewSecondaryColor3uiv;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLSECONDARYCOLOR3UIVPROC
__glewSecondaryColor3uivEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLSECONDARYCOLOR3UIVEXTPROC __glewSecondaryColor3uivEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLSECONDARYCOLOR3UIVEXTPROC
__glewSecondaryColor3us	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLSECONDARYCOLOR3USPROC __glewSecondaryColor3us;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLSECONDARYCOLOR3USPROC
__glewSecondaryColor3usEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLSECONDARYCOLOR3USEXTPROC __glewSecondaryColor3usEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLSECONDARYCOLOR3USEXTPROC
__glewSecondaryColor3usv	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLSECONDARYCOLOR3USVPROC __glewSecondaryColor3usv;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLSECONDARYCOLOR3USVPROC
__glewSecondaryColor3usvEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLSECONDARYCOLOR3USVEXTPROC __glewSecondaryColor3usvEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLSECONDARYCOLOR3USVEXTPROC
__glewSecondaryColorFormatNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLSECONDARYCOLORFORMATNVPROC __glewSecondaryColorFormatNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLSECONDARYCOLORFORMATNVPROC
__glewSecondaryColorP3ui	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLSECONDARYCOLORP3UIPROC __glewSecondaryColorP3ui;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLSECONDARYCOLORP3UIPROC
__glewSecondaryColorP3uiv	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLSECONDARYCOLORP3UIVPROC __glewSecondaryColorP3uiv;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLSECONDARYCOLORP3UIVPROC
__glewSecondaryColorPointer	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLSECONDARYCOLORPOINTERPROC __glewSecondaryColorPointer;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLSECONDARYCOLORPOINTERPROC
__glewSecondaryColorPointerEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLSECONDARYCOLORPOINTEREXTPROC __glewSecondaryColorPointerEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLSECONDARYCOLORPOINTEREXTPROC
__glewSecondaryColorPointerListIBM	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLSECONDARYCOLORPOINTERLISTIBMPROC __glewSecondaryColorPointerListIBM;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLSECONDARYCOLORPOINTERLISTIBMPROC
__glewSelectPerfMonitorCountersAMD	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLSELECTPERFMONITORCOUNTERSAMDPROC __glewSelectPerfMonitorCountersAMD;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLSELECTPERFMONITORCOUNTERSAMDPROC
__glewSelectTextureCoordSetSGIS	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLSELECTTEXTURECOORDSETSGISPROC __glewSelectTextureCoordSetSGIS;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLSELECTTEXTURECOORDSETSGISPROC
__glewSelectTextureSGIS	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLSELECTTEXTURESGISPROC __glewSelectTextureSGIS;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLSELECTTEXTURESGISPROC
__glewSelectTextureTransformSGIS	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLSELECTTEXTURETRANSFORMSGISPROC __glewSelectTextureTransformSGIS;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLSELECTTEXTURETRANSFORMSGISPROC
__glewSemaphoreParameterui64vEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLSEMAPHOREPARAMETERUI64VEXTPROC __glewSemaphoreParameterui64vEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLSEMAPHOREPARAMETERUI64VEXTPROC
__glewSeparableFilter2D	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLSEPARABLEFILTER2DPROC __glewSeparableFilter2D;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLSEPARABLEFILTER2DPROC
__glewSeparableFilter2DEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLSEPARABLEFILTER2DEXTPROC __glewSeparableFilter2DEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLSEPARABLEFILTER2DEXTPROC
__glewSetFenceAPPLE	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLSETFENCEAPPLEPROC __glewSetFenceAPPLE;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLSETFENCEAPPLEPROC
__glewSetFenceNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLSETFENCENVPROC __glewSetFenceNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLSETFENCENVPROC
__glewSetFragmentShaderConstantATI	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLSETFRAGMENTSHADERCONSTANTATIPROC __glewSetFragmentShaderConstantATI;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLSETFRAGMENTSHADERCONSTANTATIPROC
__glewSetInvariantEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLSETINVARIANTEXTPROC __glewSetInvariantEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLSETINVARIANTEXTPROC
__glewSetLocalConstantEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLSETLOCALCONSTANTEXTPROC __glewSetLocalConstantEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLSETLOCALCONSTANTEXTPROC
__glewSetMultisamplefvAMD	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLSETMULTISAMPLEFVAMDPROC __glewSetMultisamplefvAMD;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLSETMULTISAMPLEFVAMDPROC
__glewShaderBinary	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLSHADERBINARYPROC __glewShaderBinary;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLSHADERBINARYPROC
__glewShaderOp1EXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLSHADEROP1EXTPROC __glewShaderOp1EXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLSHADEROP1EXTPROC
__glewShaderOp2EXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLSHADEROP2EXTPROC __glewShaderOp2EXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLSHADEROP2EXTPROC
__glewShaderOp3EXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLSHADEROP3EXTPROC __glewShaderOp3EXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLSHADEROP3EXTPROC
__glewShaderSource	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLSHADERSOURCEPROC __glewShaderSource;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLSHADERSOURCEPROC
__glewShaderSourceARB	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLSHADERSOURCEARBPROC __glewShaderSourceARB;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLSHADERSOURCEARBPROC
__glewShaderStorageBlockBinding	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLSHADERSTORAGEBLOCKBINDINGPROC __glewShaderStorageBlockBinding;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLSHADERSTORAGEBLOCKBINDINGPROC
__glewShadingRateImageBarrierNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLSHADINGRATEIMAGEBARRIERNVPROC __glewShadingRateImageBarrierNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLSHADINGRATEIMAGEBARRIERNVPROC
__glewShadingRateImagePaletteNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLSHADINGRATEIMAGEPALETTENVPROC __glewShadingRateImagePaletteNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLSHADINGRATEIMAGEPALETTENVPROC
__glewShadingRateSampleOrderCustomNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLSHADINGRATESAMPLEORDERCUSTOMNVPROC __glewShadingRateSampleOrderCustomNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLSHADINGRATESAMPLEORDERCUSTOMNVPROC
__glewSharpenTexFuncSGIS	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLSHARPENTEXFUNCSGISPROC __glewSharpenTexFuncSGIS;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLSHARPENTEXFUNCSGISPROC
__glewSignalSemaphoreEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLSIGNALSEMAPHOREEXTPROC __glewSignalSemaphoreEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLSIGNALSEMAPHOREEXTPROC
__glewSignalSemaphoreui64NVX	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLSIGNALSEMAPHOREUI64NVXPROC __glewSignalSemaphoreui64NVX;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLSIGNALSEMAPHOREUI64NVXPROC
__glewSignalVkFenceNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLSIGNALVKFENCENVPROC __glewSignalVkFenceNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLSIGNALVKFENCENVPROC
__glewSignalVkSemaphoreNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLSIGNALVKSEMAPHORENVPROC __glewSignalVkSemaphoreNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLSIGNALVKSEMAPHORENVPROC
__glewSpecializeShader	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLSPECIALIZESHADERPROC __glewSpecializeShader;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLSPECIALIZESHADERPROC
__glewSpecializeShaderARB	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLSPECIALIZESHADERARBPROC __glewSpecializeShaderARB;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLSPECIALIZESHADERARBPROC
__glewSpriteParameterfSGIX	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLSPRITEPARAMETERFSGIXPROC __glewSpriteParameterfSGIX;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLSPRITEPARAMETERFSGIXPROC
__glewSpriteParameterfvSGIX	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLSPRITEPARAMETERFVSGIXPROC __glewSpriteParameterfvSGIX;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLSPRITEPARAMETERFVSGIXPROC
__glewSpriteParameteriSGIX	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLSPRITEPARAMETERISGIXPROC __glewSpriteParameteriSGIX;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLSPRITEPARAMETERISGIXPROC
__glewSpriteParameterivSGIX	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLSPRITEPARAMETERIVSGIXPROC __glewSpriteParameterivSGIX;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLSPRITEPARAMETERIVSGIXPROC
__glewStartTilingQCOM	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLSTARTTILINGQCOMPROC __glewStartTilingQCOM;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLSTARTTILINGQCOMPROC
__glewStateCaptureNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLSTATECAPTURENVPROC __glewStateCaptureNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLSTATECAPTURENVPROC
__glewStencilFillPathInstancedNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLSTENCILFILLPATHINSTANCEDNVPROC __glewStencilFillPathInstancedNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLSTENCILFILLPATHINSTANCEDNVPROC
__glewStencilFillPathNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLSTENCILFILLPATHNVPROC __glewStencilFillPathNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLSTENCILFILLPATHNVPROC
__glewStencilFuncSeparate	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLSTENCILFUNCSEPARATEPROC __glewStencilFuncSeparate;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLSTENCILFUNCSEPARATEPROC
__glewStencilFuncSeparateATI	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLSTENCILFUNCSEPARATEATIPROC __glewStencilFuncSeparateATI;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLSTENCILFUNCSEPARATEATIPROC
__glewStencilMaskSeparate	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLSTENCILMASKSEPARATEPROC __glewStencilMaskSeparate;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLSTENCILMASKSEPARATEPROC
__glewStencilOpSeparate	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLSTENCILOPSEPARATEPROC __glewStencilOpSeparate;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLSTENCILOPSEPARATEPROC
__glewStencilOpSeparateATI	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLSTENCILOPSEPARATEATIPROC __glewStencilOpSeparateATI;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLSTENCILOPSEPARATEATIPROC
__glewStencilOpValueAMD	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLSTENCILOPVALUEAMDPROC __glewStencilOpValueAMD;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLSTENCILOPVALUEAMDPROC
__glewStencilStrokePathInstancedNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLSTENCILSTROKEPATHINSTANCEDNVPROC __glewStencilStrokePathInstancedNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLSTENCILSTROKEPATHINSTANCEDNVPROC
__glewStencilStrokePathNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLSTENCILSTROKEPATHNVPROC __glewStencilStrokePathNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLSTENCILSTROKEPATHNVPROC
__glewStencilThenCoverFillPathInstancedNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLSTENCILTHENCOVERFILLPATHINSTANCEDNVPROC __glewStencilThenCoverFillPathInsta/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLSTENCILTHENCOVERFILLPATHINSTANCEDNVPROC
__glewStencilThenCoverFillPathNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLSTENCILTHENCOVERFILLPATHNVPROC __glewStencilThenCoverFillPathNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLSTENCILTHENCOVERFILLPATHNVPROC
__glewStencilThenCoverStrokePathInstancedNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLSTENCILTHENCOVERSTROKEPATHINSTANCEDNVPROC __glewStencilThenCoverStrokePathI/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLSTENCILTHENCOVERSTROKEPATHINSTANCEDNVPROC
__glewStencilThenCoverStrokePathNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLSTENCILTHENCOVERSTROKEPATHNVPROC __glewStencilThenCoverStrokePathNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLSTENCILTHENCOVERSTROKEPATHNVPROC
__glewStereoParameterfNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLSTEREOPARAMETERFNVPROC __glewStereoParameterfNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLSTEREOPARAMETERFNVPROC
__glewStereoParameteriNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLSTEREOPARAMETERINVPROC __glewStereoParameteriNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLSTEREOPARAMETERINVPROC
__glewStringMarkerGREMEDY	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLSTRINGMARKERGREMEDYPROC __glewStringMarkerGREMEDY;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLSTRINGMARKERGREMEDYPROC
__glewSubpixelPrecisionBiasNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLSUBPIXELPRECISIONBIASNVPROC __glewSubpixelPrecisionBiasNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLSUBPIXELPRECISIONBIASNVPROC
__glewSwapMPEGPredictorsSGIX	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLSWAPMPEGPREDICTORSSGIXPROC __glewSwapMPEGPredictorsSGIX;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLSWAPMPEGPREDICTORSSGIXPROC
__glewSwizzleEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLSWIZZLEEXTPROC __glewSwizzleEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLSWIZZLEEXTPROC
__glewSyncTextureINTEL	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLSYNCTEXTUREINTELPROC __glewSyncTextureINTEL;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLSYNCTEXTUREINTELPROC
__glewTagSampleBufferSGIX	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLTAGSAMPLEBUFFERSGIXPROC __glewTagSampleBufferSGIX;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLTAGSAMPLEBUFFERSGIXPROC
__glewTangentPointerEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLTANGENTPOINTEREXTPROC __glewTangentPointerEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLTANGENTPOINTEREXTPROC
__glewTbufferMask3DFX	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLTBUFFERMASK3DFXPROC __glewTbufferMask3DFX;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLTBUFFERMASK3DFXPROC
__glewTessellationFactorAMD	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLTESSELLATIONFACTORAMDPROC __glewTessellationFactorAMD;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLTESSELLATIONFACTORAMDPROC
__glewTessellationModeAMD	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLTESSELLATIONMODEAMDPROC __glewTessellationModeAMD;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLTESSELLATIONMODEAMDPROC
__glewTestFenceAPPLE	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLTESTFENCEAPPLEPROC __glewTestFenceAPPLE;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLTESTFENCEAPPLEPROC
__glewTestFenceNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLTESTFENCENVPROC __glewTestFenceNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLTESTFENCENVPROC
__glewTestObjectAPPLE	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLTESTOBJECTAPPLEPROC __glewTestObjectAPPLE;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLTESTOBJECTAPPLEPROC
__glewTexAttachMemoryNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLTEXATTACHMEMORYNVPROC __glewTexAttachMemoryNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLTEXATTACHMEMORYNVPROC
__glewTexBuffer	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLTEXBUFFERPROC __glewTexBuffer;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLTEXBUFFERPROC
__glewTexBufferARB	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLTEXBUFFERARBPROC __glewTexBufferARB;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLTEXBUFFERARBPROC
__glewTexBufferEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLTEXBUFFEREXTPROC __glewTexBufferEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLTEXBUFFEREXTPROC
__glewTexBufferOES	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLTEXBUFFEROESPROC __glewTexBufferOES;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLTEXBUFFEROESPROC
__glewTexBufferRange	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLTEXBUFFERRANGEPROC __glewTexBufferRange;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLTEXBUFFERRANGEPROC
__glewTexBufferRangeOES	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLTEXBUFFERRANGEOESPROC __glewTexBufferRangeOES;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLTEXBUFFERRANGEOESPROC
__glewTexBumpParameterfvATI	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLTEXBUMPPARAMETERFVATIPROC __glewTexBumpParameterfvATI;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLTEXBUMPPARAMETERFVATIPROC
__glewTexBumpParameterivATI	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLTEXBUMPPARAMETERIVATIPROC __glewTexBumpParameterivATI;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLTEXBUMPPARAMETERIVATIPROC
__glewTexCoord1hNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLTEXCOORD1HNVPROC __glewTexCoord1hNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLTEXCOORD1HNVPROC
__glewTexCoord1hvNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLTEXCOORD1HVNVPROC __glewTexCoord1hvNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLTEXCOORD1HVNVPROC
__glewTexCoord2fColor3fVertex3fSUN	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLTEXCOORD2FCOLOR3FVERTEX3FSUNPROC __glewTexCoord2fColor3fVertex3fSUN;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLTEXCOORD2FCOLOR3FVERTEX3FSUNPROC
__glewTexCoord2fColor3fVertex3fvSUN	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLTEXCOORD2FCOLOR3FVERTEX3FVSUNPROC __glewTexCoord2fColor3fVertex3fvSUN;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLTEXCOORD2FCOLOR3FVERTEX3FVSUNPROC
__glewTexCoord2fColor4fNormal3fVertex3fSUN	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLTEXCOORD2FCOLOR4FNORMAL3FVERTEX3FSUNPROC __glewTexCoord2fColor4fNormal3fVer/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLTEXCOORD2FCOLOR4FNORMAL3FVERTEX3FSUNPROC
__glewTexCoord2fColor4fNormal3fVertex3fvSUN	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLTEXCOORD2FCOLOR4FNORMAL3FVERTEX3FVSUNPROC __glewTexCoord2fColor4fNormal3fVe/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLTEXCOORD2FCOLOR4FNORMAL3FVERTEX3FVSUNPROC
__glewTexCoord2fColor4ubVertex3fSUN	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLTEXCOORD2FCOLOR4UBVERTEX3FSUNPROC __glewTexCoord2fColor4ubVertex3fSUN;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLTEXCOORD2FCOLOR4UBVERTEX3FSUNPROC
__glewTexCoord2fColor4ubVertex3fvSUN	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLTEXCOORD2FCOLOR4UBVERTEX3FVSUNPROC __glewTexCoord2fColor4ubVertex3fvSUN;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLTEXCOORD2FCOLOR4UBVERTEX3FVSUNPROC
__glewTexCoord2fNormal3fVertex3fSUN	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLTEXCOORD2FNORMAL3FVERTEX3FSUNPROC __glewTexCoord2fNormal3fVertex3fSUN;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLTEXCOORD2FNORMAL3FVERTEX3FSUNPROC
__glewTexCoord2fNormal3fVertex3fvSUN	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLTEXCOORD2FNORMAL3FVERTEX3FVSUNPROC __glewTexCoord2fNormal3fVertex3fvSUN;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLTEXCOORD2FNORMAL3FVERTEX3FVSUNPROC
__glewTexCoord2fVertex3fSUN	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLTEXCOORD2FVERTEX3FSUNPROC __glewTexCoord2fVertex3fSUN;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLTEXCOORD2FVERTEX3FSUNPROC
__glewTexCoord2fVertex3fvSUN	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLTEXCOORD2FVERTEX3FVSUNPROC __glewTexCoord2fVertex3fvSUN;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLTEXCOORD2FVERTEX3FVSUNPROC
__glewTexCoord2hNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLTEXCOORD2HNVPROC __glewTexCoord2hNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLTEXCOORD2HNVPROC
__glewTexCoord2hvNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLTEXCOORD2HVNVPROC __glewTexCoord2hvNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLTEXCOORD2HVNVPROC
__glewTexCoord3hNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLTEXCOORD3HNVPROC __glewTexCoord3hNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLTEXCOORD3HNVPROC
__glewTexCoord3hvNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLTEXCOORD3HVNVPROC __glewTexCoord3hvNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLTEXCOORD3HVNVPROC
__glewTexCoord4fColor4fNormal3fVertex4fSUN	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLTEXCOORD4FCOLOR4FNORMAL3FVERTEX4FSUNPROC __glewTexCoord4fColor4fNormal3fVer/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLTEXCOORD4FCOLOR4FNORMAL3FVERTEX4FSUNPROC
__glewTexCoord4fColor4fNormal3fVertex4fvSUN	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLTEXCOORD4FCOLOR4FNORMAL3FVERTEX4FVSUNPROC __glewTexCoord4fColor4fNormal3fVe/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLTEXCOORD4FCOLOR4FNORMAL3FVERTEX4FVSUNPROC
__glewTexCoord4fVertex4fSUN	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLTEXCOORD4FVERTEX4FSUNPROC __glewTexCoord4fVertex4fSUN;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLTEXCOORD4FVERTEX4FSUNPROC
__glewTexCoord4fVertex4fvSUN	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLTEXCOORD4FVERTEX4FVSUNPROC __glewTexCoord4fVertex4fvSUN;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLTEXCOORD4FVERTEX4FVSUNPROC
__glewTexCoord4hNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLTEXCOORD4HNVPROC __glewTexCoord4hNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLTEXCOORD4HNVPROC
__glewTexCoord4hvNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLTEXCOORD4HVNVPROC __glewTexCoord4hvNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLTEXCOORD4HVNVPROC
__glewTexCoordFormatNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLTEXCOORDFORMATNVPROC __glewTexCoordFormatNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLTEXCOORDFORMATNVPROC
__glewTexCoordP1ui	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLTEXCOORDP1UIPROC __glewTexCoordP1ui;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLTEXCOORDP1UIPROC
__glewTexCoordP1uiv	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLTEXCOORDP1UIVPROC __glewTexCoordP1uiv;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLTEXCOORDP1UIVPROC
__glewTexCoordP2ui	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLTEXCOORDP2UIPROC __glewTexCoordP2ui;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLTEXCOORDP2UIPROC
__glewTexCoordP2uiv	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLTEXCOORDP2UIVPROC __glewTexCoordP2uiv;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLTEXCOORDP2UIVPROC
__glewTexCoordP3ui	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLTEXCOORDP3UIPROC __glewTexCoordP3ui;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLTEXCOORDP3UIPROC
__glewTexCoordP3uiv	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLTEXCOORDP3UIVPROC __glewTexCoordP3uiv;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLTEXCOORDP3UIVPROC
__glewTexCoordP4ui	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLTEXCOORDP4UIPROC __glewTexCoordP4ui;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLTEXCOORDP4UIPROC
__glewTexCoordP4uiv	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLTEXCOORDP4UIVPROC __glewTexCoordP4uiv;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLTEXCOORDP4UIVPROC
__glewTexCoordPointerEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLTEXCOORDPOINTEREXTPROC __glewTexCoordPointerEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLTEXCOORDPOINTEREXTPROC
__glewTexCoordPointerListIBM	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLTEXCOORDPOINTERLISTIBMPROC __glewTexCoordPointerListIBM;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLTEXCOORDPOINTERLISTIBMPROC
__glewTexCoordPointervINTEL	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLTEXCOORDPOINTERVINTELPROC __glewTexCoordPointervINTEL;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLTEXCOORDPOINTERVINTELPROC
__glewTexEnvx	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLTEXENVXPROC __glewTexEnvx;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLTEXENVXPROC
__glewTexEnvxv	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLTEXENVXVPROC __glewTexEnvxv;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLTEXENVXVPROC
__glewTexFilterFuncSGIS	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLTEXFILTERFUNCSGISPROC __glewTexFilterFuncSGIS;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLTEXFILTERFUNCSGISPROC
__glewTexGenfOES	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLTEXGENFOESPROC __glewTexGenfOES;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLTEXGENFOESPROC
__glewTexGenfvOES	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLTEXGENFVOESPROC __glewTexGenfvOES;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLTEXGENFVOESPROC
__glewTexGeniOES	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLTEXGENIOESPROC __glewTexGeniOES;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLTEXGENIOESPROC
__glewTexGenivOES	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLTEXGENIVOESPROC __glewTexGenivOES;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLTEXGENIVOESPROC
__glewTexGenxOES	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLTEXGENXOESPROC __glewTexGenxOES;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLTEXGENXOESPROC
__glewTexGenxvOES	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLTEXGENXVOESPROC __glewTexGenxvOES;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLTEXGENXVOESPROC
__glewTexImage2DMultisample	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLTEXIMAGE2DMULTISAMPLEPROC __glewTexImage2DMultisample;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLTEXIMAGE2DMULTISAMPLEPROC
__glewTexImage2DMultisampleCoverageNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLTEXIMAGE2DMULTISAMPLECOVERAGENVPROC __glewTexImage2DMultisampleCoverageNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLTEXIMAGE2DMULTISAMPLECOVERAGENVPROC
__glewTexImage3D	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLTEXIMAGE3DPROC __glewTexImage3D;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLTEXIMAGE3DPROC
__glewTexImage3DEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLTEXIMAGE3DEXTPROC __glewTexImage3DEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLTEXIMAGE3DEXTPROC
__glewTexImage3DMultisample	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLTEXIMAGE3DMULTISAMPLEPROC __glewTexImage3DMultisample;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLTEXIMAGE3DMULTISAMPLEPROC
__glewTexImage3DMultisampleCoverageNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLTEXIMAGE3DMULTISAMPLECOVERAGENVPROC __glewTexImage3DMultisampleCoverageNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLTEXIMAGE3DMULTISAMPLECOVERAGENVPROC
__glewTexImage3DNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLTEXIMAGE3DNVPROC __glewTexImage3DNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLTEXIMAGE3DNVPROC
__glewTexImage3DOES	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLTEXIMAGE3DOESPROC __glewTexImage3DOES;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLTEXIMAGE3DOESPROC
__glewTexImage4DSGIS	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLTEXIMAGE4DSGISPROC __glewTexImage4DSGIS;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLTEXIMAGE4DSGISPROC
__glewTexPageCommitmentARB	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLTEXPAGECOMMITMENTARBPROC __glewTexPageCommitmentARB;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLTEXPAGECOMMITMENTARBPROC
__glewTexPageCommitmentEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLTEXPAGECOMMITMENTEXTPROC __glewTexPageCommitmentEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLTEXPAGECOMMITMENTEXTPROC
__glewTexParameterIiv	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLTEXPARAMETERIIVPROC __glewTexParameterIiv;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLTEXPARAMETERIIVPROC
__glewTexParameterIivEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLTEXPARAMETERIIVEXTPROC __glewTexParameterIivEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLTEXPARAMETERIIVEXTPROC
__glewTexParameterIivOES	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLTEXPARAMETERIIVOESPROC __glewTexParameterIivOES;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLTEXPARAMETERIIVOESPROC
__glewTexParameterIuiv	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLTEXPARAMETERIUIVPROC __glewTexParameterIuiv;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLTEXPARAMETERIUIVPROC
__glewTexParameterIuivEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLTEXPARAMETERIUIVEXTPROC __glewTexParameterIuivEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLTEXPARAMETERIUIVEXTPROC
__glewTexParameterIuivOES	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLTEXPARAMETERIUIVOESPROC __glewTexParameterIuivOES;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLTEXPARAMETERIUIVOESPROC
__glewTexParameterx	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLTEXPARAMETERXPROC __glewTexParameterx;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLTEXPARAMETERXPROC
__glewTexParameterxv	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLTEXPARAMETERXVPROC __glewTexParameterxv;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLTEXPARAMETERXVPROC
__glewTexRenderbufferNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLTEXRENDERBUFFERNVPROC __glewTexRenderbufferNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLTEXRENDERBUFFERNVPROC
__glewTexScissorFuncINTEL	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLTEXSCISSORFUNCINTELPROC __glewTexScissorFuncINTEL;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLTEXSCISSORFUNCINTELPROC
__glewTexScissorINTEL	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLTEXSCISSORINTELPROC __glewTexScissorINTEL;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLTEXSCISSORINTELPROC
__glewTexStorage1D	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLTEXSTORAGE1DPROC __glewTexStorage1D;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLTEXSTORAGE1DPROC
__glewTexStorage1DEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLTEXSTORAGE1DEXTPROC __glewTexStorage1DEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLTEXSTORAGE1DEXTPROC
__glewTexStorage2D	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLTEXSTORAGE2DPROC __glewTexStorage2D;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLTEXSTORAGE2DPROC
__glewTexStorage2DEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLTEXSTORAGE2DEXTPROC __glewTexStorage2DEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLTEXSTORAGE2DEXTPROC
__glewTexStorage2DMultisample	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLTEXSTORAGE2DMULTISAMPLEPROC __glewTexStorage2DMultisample;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLTEXSTORAGE2DMULTISAMPLEPROC
__glewTexStorage3D	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLTEXSTORAGE3DPROC __glewTexStorage3D;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLTEXSTORAGE3DPROC
__glewTexStorage3DEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLTEXSTORAGE3DEXTPROC __glewTexStorage3DEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLTEXSTORAGE3DEXTPROC
__glewTexStorage3DMultisample	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLTEXSTORAGE3DMULTISAMPLEPROC __glewTexStorage3DMultisample;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLTEXSTORAGE3DMULTISAMPLEPROC
__glewTexStorage3DMultisampleOES	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLTEXSTORAGE3DMULTISAMPLEOESPROC __glewTexStorage3DMultisampleOES;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLTEXSTORAGE3DMULTISAMPLEOESPROC
__glewTexStorageMem1DEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLTEXSTORAGEMEM1DEXTPROC __glewTexStorageMem1DEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLTEXSTORAGEMEM1DEXTPROC
__glewTexStorageMem2DEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLTEXSTORAGEMEM2DEXTPROC __glewTexStorageMem2DEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLTEXSTORAGEMEM2DEXTPROC
__glewTexStorageMem2DMultisampleEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLTEXSTORAGEMEM2DMULTISAMPLEEXTPROC __glewTexStorageMem2DMultisampleEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLTEXSTORAGEMEM2DMULTISAMPLEEXTPROC
__glewTexStorageMem3DEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLTEXSTORAGEMEM3DEXTPROC __glewTexStorageMem3DEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLTEXSTORAGEMEM3DEXTPROC
__glewTexStorageMem3DMultisampleEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLTEXSTORAGEMEM3DMULTISAMPLEEXTPROC __glewTexStorageMem3DMultisampleEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLTEXSTORAGEMEM3DMULTISAMPLEEXTPROC
__glewTexStorageSparseAMD	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLTEXSTORAGESPARSEAMDPROC __glewTexStorageSparseAMD;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLTEXSTORAGESPARSEAMDPROC
__glewTexSubImage1DEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLTEXSUBIMAGE1DEXTPROC __glewTexSubImage1DEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLTEXSUBIMAGE1DEXTPROC
__glewTexSubImage2DEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLTEXSUBIMAGE2DEXTPROC __glewTexSubImage2DEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLTEXSUBIMAGE2DEXTPROC
__glewTexSubImage3D	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLTEXSUBIMAGE3DPROC __glewTexSubImage3D;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLTEXSUBIMAGE3DPROC
__glewTexSubImage3DEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLTEXSUBIMAGE3DEXTPROC __glewTexSubImage3DEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLTEXSUBIMAGE3DEXTPROC
__glewTexSubImage3DNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLTEXSUBIMAGE3DNVPROC __glewTexSubImage3DNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLTEXSUBIMAGE3DNVPROC
__glewTexSubImage3DOES	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLTEXSUBIMAGE3DOESPROC __glewTexSubImage3DOES;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLTEXSUBIMAGE3DOESPROC
__glewTexSubImage4DSGIS	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLTEXSUBIMAGE4DSGISPROC __glewTexSubImage4DSGIS;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLTEXSUBIMAGE4DSGISPROC
__glewTextureAttachMemoryNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLTEXTUREATTACHMEMORYNVPROC __glewTextureAttachMemoryNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLTEXTUREATTACHMEMORYNVPROC
__glewTextureBarrier	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLTEXTUREBARRIERPROC __glewTextureBarrier;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLTEXTUREBARRIERPROC
__glewTextureBarrierNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLTEXTUREBARRIERNVPROC __glewTextureBarrierNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLTEXTUREBARRIERNVPROC
__glewTextureBuffer	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLTEXTUREBUFFERPROC __glewTextureBuffer;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLTEXTUREBUFFERPROC
__glewTextureBufferEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLTEXTUREBUFFEREXTPROC __glewTextureBufferEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLTEXTUREBUFFEREXTPROC
__glewTextureBufferRange	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLTEXTUREBUFFERRANGEPROC __glewTextureBufferRange;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLTEXTUREBUFFERRANGEPROC
__glewTextureBufferRangeEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLTEXTUREBUFFERRANGEEXTPROC __glewTextureBufferRangeEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLTEXTUREBUFFERRANGEEXTPROC
__glewTextureFogSGIX	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLTEXTUREFOGSGIXPROC __glewTextureFogSGIX;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLTEXTUREFOGSGIXPROC
__glewTextureFoveationParametersQCOM	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLTEXTUREFOVEATIONPARAMETERSQCOMPROC __glewTextureFoveationParametersQCOM;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLTEXTUREFOVEATIONPARAMETERSQCOMPROC
__glewTextureImage1DEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLTEXTUREIMAGE1DEXTPROC __glewTextureImage1DEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLTEXTUREIMAGE1DEXTPROC
__glewTextureImage2DEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLTEXTUREIMAGE2DEXTPROC __glewTextureImage2DEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLTEXTUREIMAGE2DEXTPROC
__glewTextureImage2DMultisampleCoverageNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLTEXTUREIMAGE2DMULTISAMPLECOVERAGENVPROC __glewTextureImage2DMultisampleCove/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLTEXTUREIMAGE2DMULTISAMPLECOVERAGENVPROC
__glewTextureImage2DMultisampleNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLTEXTUREIMAGE2DMULTISAMPLENVPROC __glewTextureImage2DMultisampleNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLTEXTUREIMAGE2DMULTISAMPLENVPROC
__glewTextureImage3DEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLTEXTUREIMAGE3DEXTPROC __glewTextureImage3DEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLTEXTUREIMAGE3DEXTPROC
__glewTextureImage3DMultisampleCoverageNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLTEXTUREIMAGE3DMULTISAMPLECOVERAGENVPROC __glewTextureImage3DMultisampleCove/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLTEXTUREIMAGE3DMULTISAMPLECOVERAGENVPROC
__glewTextureImage3DMultisampleNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLTEXTUREIMAGE3DMULTISAMPLENVPROC __glewTextureImage3DMultisampleNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLTEXTUREIMAGE3DMULTISAMPLENVPROC
__glewTextureLightEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLTEXTURELIGHTEXTPROC __glewTextureLightEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLTEXTURELIGHTEXTPROC
__glewTextureMaterialEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLTEXTUREMATERIALEXTPROC __glewTextureMaterialEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLTEXTUREMATERIALEXTPROC
__glewTextureNormalEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLTEXTURENORMALEXTPROC __glewTextureNormalEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLTEXTURENORMALEXTPROC
__glewTexturePageCommitmentEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLTEXTUREPAGECOMMITMENTEXTPROC __glewTexturePageCommitmentEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLTEXTUREPAGECOMMITMENTEXTPROC
__glewTextureParameterIiv	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLTEXTUREPARAMETERIIVPROC __glewTextureParameterIiv;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLTEXTUREPARAMETERIIVPROC
__glewTextureParameterIivEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLTEXTUREPARAMETERIIVEXTPROC __glewTextureParameterIivEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLTEXTUREPARAMETERIIVEXTPROC
__glewTextureParameterIuiv	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLTEXTUREPARAMETERIUIVPROC __glewTextureParameterIuiv;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLTEXTUREPARAMETERIUIVPROC
__glewTextureParameterIuivEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLTEXTUREPARAMETERIUIVEXTPROC __glewTextureParameterIuivEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLTEXTUREPARAMETERIUIVEXTPROC
__glewTextureParameterf	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLTEXTUREPARAMETERFPROC __glewTextureParameterf;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLTEXTUREPARAMETERFPROC
__glewTextureParameterfEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLTEXTUREPARAMETERFEXTPROC __glewTextureParameterfEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLTEXTUREPARAMETERFEXTPROC
__glewTextureParameterfv	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLTEXTUREPARAMETERFVPROC __glewTextureParameterfv;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLTEXTUREPARAMETERFVPROC
__glewTextureParameterfvEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLTEXTUREPARAMETERFVEXTPROC __glewTextureParameterfvEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLTEXTUREPARAMETERFVEXTPROC
__glewTextureParameteri	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLTEXTUREPARAMETERIPROC __glewTextureParameteri;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLTEXTUREPARAMETERIPROC
__glewTextureParameteriEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLTEXTUREPARAMETERIEXTPROC __glewTextureParameteriEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLTEXTUREPARAMETERIEXTPROC
__glewTextureParameteriv	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLTEXTUREPARAMETERIVPROC __glewTextureParameteriv;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLTEXTUREPARAMETERIVPROC
__glewTextureParameterivEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLTEXTUREPARAMETERIVEXTPROC __glewTextureParameterivEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLTEXTUREPARAMETERIVEXTPROC
__glewTextureRangeAPPLE	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLTEXTURERANGEAPPLEPROC __glewTextureRangeAPPLE;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLTEXTURERANGEAPPLEPROC
__glewTextureRenderbufferEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLTEXTURERENDERBUFFEREXTPROC __glewTextureRenderbufferEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLTEXTURERENDERBUFFEREXTPROC
__glewTextureStorage1D	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLTEXTURESTORAGE1DPROC __glewTextureStorage1D;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLTEXTURESTORAGE1DPROC
__glewTextureStorage1DEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLTEXTURESTORAGE1DEXTPROC __glewTextureStorage1DEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLTEXTURESTORAGE1DEXTPROC
__glewTextureStorage2D	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLTEXTURESTORAGE2DPROC __glewTextureStorage2D;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLTEXTURESTORAGE2DPROC
__glewTextureStorage2DEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLTEXTURESTORAGE2DEXTPROC __glewTextureStorage2DEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLTEXTURESTORAGE2DEXTPROC
__glewTextureStorage2DMultisample	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLTEXTURESTORAGE2DMULTISAMPLEPROC __glewTextureStorage2DMultisample;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLTEXTURESTORAGE2DMULTISAMPLEPROC
__glewTextureStorage2DMultisampleEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLTEXTURESTORAGE2DMULTISAMPLEEXTPROC __glewTextureStorage2DMultisampleEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLTEXTURESTORAGE2DMULTISAMPLEEXTPROC
__glewTextureStorage3D	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLTEXTURESTORAGE3DPROC __glewTextureStorage3D;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLTEXTURESTORAGE3DPROC
__glewTextureStorage3DEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLTEXTURESTORAGE3DEXTPROC __glewTextureStorage3DEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLTEXTURESTORAGE3DEXTPROC
__glewTextureStorage3DMultisample	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLTEXTURESTORAGE3DMULTISAMPLEPROC __glewTextureStorage3DMultisample;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLTEXTURESTORAGE3DMULTISAMPLEPROC
__glewTextureStorage3DMultisampleEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLTEXTURESTORAGE3DMULTISAMPLEEXTPROC __glewTextureStorage3DMultisampleEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLTEXTURESTORAGE3DMULTISAMPLEEXTPROC
__glewTextureStorageMem1DEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLTEXTURESTORAGEMEM1DEXTPROC __glewTextureStorageMem1DEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLTEXTURESTORAGEMEM1DEXTPROC
__glewTextureStorageMem2DEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLTEXTURESTORAGEMEM2DEXTPROC __glewTextureStorageMem2DEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLTEXTURESTORAGEMEM2DEXTPROC
__glewTextureStorageMem2DMultisampleEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLTEXTURESTORAGEMEM2DMULTISAMPLEEXTPROC __glewTextureStorageMem2DMultisampleE/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLTEXTURESTORAGEMEM2DMULTISAMPLEEXTPROC
__glewTextureStorageMem3DEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLTEXTURESTORAGEMEM3DEXTPROC __glewTextureStorageMem3DEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLTEXTURESTORAGEMEM3DEXTPROC
__glewTextureStorageMem3DMultisampleEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLTEXTURESTORAGEMEM3DMULTISAMPLEEXTPROC __glewTextureStorageMem3DMultisampleE/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLTEXTURESTORAGEMEM3DMULTISAMPLEEXTPROC
__glewTextureStorageSparseAMD	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLTEXTURESTORAGESPARSEAMDPROC __glewTextureStorageSparseAMD;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLTEXTURESTORAGESPARSEAMDPROC
__glewTextureSubImage1D	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLTEXTURESUBIMAGE1DPROC __glewTextureSubImage1D;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLTEXTURESUBIMAGE1DPROC
__glewTextureSubImage1DEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLTEXTURESUBIMAGE1DEXTPROC __glewTextureSubImage1DEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLTEXTURESUBIMAGE1DEXTPROC
__glewTextureSubImage2D	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLTEXTURESUBIMAGE2DPROC __glewTextureSubImage2D;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLTEXTURESUBIMAGE2DPROC
__glewTextureSubImage2DEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLTEXTURESUBIMAGE2DEXTPROC __glewTextureSubImage2DEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLTEXTURESUBIMAGE2DEXTPROC
__glewTextureSubImage3D	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLTEXTURESUBIMAGE3DPROC __glewTextureSubImage3D;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLTEXTURESUBIMAGE3DPROC
__glewTextureSubImage3DEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLTEXTURESUBIMAGE3DEXTPROC __glewTextureSubImage3DEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLTEXTURESUBIMAGE3DEXTPROC
__glewTextureView	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLTEXTUREVIEWPROC __glewTextureView;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLTEXTUREVIEWPROC
__glewTextureViewEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLTEXTUREVIEWEXTPROC __glewTextureViewEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLTEXTUREVIEWEXTPROC
__glewTextureViewOES	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLTEXTUREVIEWOESPROC __glewTextureViewOES;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLTEXTUREVIEWOESPROC
__glewTrackMatrixNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLTRACKMATRIXNVPROC __glewTrackMatrixNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLTRACKMATRIXNVPROC
__glewTransformFeedbackAttribsNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLTRANSFORMFEEDBACKATTRIBSNVPROC __glewTransformFeedbackAttribsNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLTRANSFORMFEEDBACKATTRIBSNVPROC
__glewTransformFeedbackBufferBase	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLTRANSFORMFEEDBACKBUFFERBASEPROC __glewTransformFeedbackBufferBase;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLTRANSFORMFEEDBACKBUFFERBASEPROC
__glewTransformFeedbackBufferRange	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLTRANSFORMFEEDBACKBUFFERRANGEPROC __glewTransformFeedbackBufferRange;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLTRANSFORMFEEDBACKBUFFERRANGEPROC
__glewTransformFeedbackVaryings	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLTRANSFORMFEEDBACKVARYINGSPROC __glewTransformFeedbackVaryings;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLTRANSFORMFEEDBACKVARYINGSPROC
__glewTransformFeedbackVaryingsEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLTRANSFORMFEEDBACKVARYINGSEXTPROC __glewTransformFeedbackVaryingsEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLTRANSFORMFEEDBACKVARYINGSEXTPROC
__glewTransformFeedbackVaryingsNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLTRANSFORMFEEDBACKVARYINGSNVPROC __glewTransformFeedbackVaryingsNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLTRANSFORMFEEDBACKVARYINGSNVPROC
__glewTransformPathNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLTRANSFORMPATHNVPROC __glewTransformPathNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLTRANSFORMPATHNVPROC
__glewTranslatex	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLTRANSLATEXPROC __glewTranslatex;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLTRANSLATEXPROC
__glewUniform1d	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLUNIFORM1DPROC __glewUniform1d;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLUNIFORM1DPROC
__glewUniform1dv	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLUNIFORM1DVPROC __glewUniform1dv;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLUNIFORM1DVPROC
__glewUniform1f	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLUNIFORM1FPROC __glewUniform1f;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLUNIFORM1FPROC
__glewUniform1fARB	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLUNIFORM1FARBPROC __glewUniform1fARB;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLUNIFORM1FARBPROC
__glewUniform1fv	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLUNIFORM1FVPROC __glewUniform1fv;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLUNIFORM1FVPROC
__glewUniform1fvARB	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLUNIFORM1FVARBPROC __glewUniform1fvARB;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLUNIFORM1FVARBPROC
__glewUniform1i	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLUNIFORM1IPROC __glewUniform1i;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLUNIFORM1IPROC
__glewUniform1i64ARB	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLUNIFORM1I64ARBPROC __glewUniform1i64ARB;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLUNIFORM1I64ARBPROC
__glewUniform1i64NV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLUNIFORM1I64NVPROC __glewUniform1i64NV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLUNIFORM1I64NVPROC
__glewUniform1i64vARB	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLUNIFORM1I64VARBPROC __glewUniform1i64vARB;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLUNIFORM1I64VARBPROC
__glewUniform1i64vNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLUNIFORM1I64VNVPROC __glewUniform1i64vNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLUNIFORM1I64VNVPROC
__glewUniform1iARB	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLUNIFORM1IARBPROC __glewUniform1iARB;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLUNIFORM1IARBPROC
__glewUniform1iv	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLUNIFORM1IVPROC __glewUniform1iv;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLUNIFORM1IVPROC
__glewUniform1ivARB	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLUNIFORM1IVARBPROC __glewUniform1ivARB;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLUNIFORM1IVARBPROC
__glewUniform1ui	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLUNIFORM1UIPROC __glewUniform1ui;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLUNIFORM1UIPROC
__glewUniform1ui64ARB	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLUNIFORM1UI64ARBPROC __glewUniform1ui64ARB;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLUNIFORM1UI64ARBPROC
__glewUniform1ui64NV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLUNIFORM1UI64NVPROC __glewUniform1ui64NV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLUNIFORM1UI64NVPROC
__glewUniform1ui64vARB	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLUNIFORM1UI64VARBPROC __glewUniform1ui64vARB;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLUNIFORM1UI64VARBPROC
__glewUniform1ui64vNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLUNIFORM1UI64VNVPROC __glewUniform1ui64vNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLUNIFORM1UI64VNVPROC
__glewUniform1uiEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLUNIFORM1UIEXTPROC __glewUniform1uiEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLUNIFORM1UIEXTPROC
__glewUniform1uiv	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLUNIFORM1UIVPROC __glewUniform1uiv;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLUNIFORM1UIVPROC
__glewUniform1uivEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLUNIFORM1UIVEXTPROC __glewUniform1uivEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLUNIFORM1UIVEXTPROC
__glewUniform2d	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLUNIFORM2DPROC __glewUniform2d;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLUNIFORM2DPROC
__glewUniform2dv	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLUNIFORM2DVPROC __glewUniform2dv;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLUNIFORM2DVPROC
__glewUniform2f	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLUNIFORM2FPROC __glewUniform2f;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLUNIFORM2FPROC
__glewUniform2fARB	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLUNIFORM2FARBPROC __glewUniform2fARB;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLUNIFORM2FARBPROC
__glewUniform2fv	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLUNIFORM2FVPROC __glewUniform2fv;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLUNIFORM2FVPROC
__glewUniform2fvARB	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLUNIFORM2FVARBPROC __glewUniform2fvARB;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLUNIFORM2FVARBPROC
__glewUniform2i	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLUNIFORM2IPROC __glewUniform2i;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLUNIFORM2IPROC
__glewUniform2i64ARB	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLUNIFORM2I64ARBPROC __glewUniform2i64ARB;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLUNIFORM2I64ARBPROC
__glewUniform2i64NV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLUNIFORM2I64NVPROC __glewUniform2i64NV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLUNIFORM2I64NVPROC
__glewUniform2i64vARB	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLUNIFORM2I64VARBPROC __glewUniform2i64vARB;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLUNIFORM2I64VARBPROC
__glewUniform2i64vNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLUNIFORM2I64VNVPROC __glewUniform2i64vNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLUNIFORM2I64VNVPROC
__glewUniform2iARB	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLUNIFORM2IARBPROC __glewUniform2iARB;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLUNIFORM2IARBPROC
__glewUniform2iv	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLUNIFORM2IVPROC __glewUniform2iv;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLUNIFORM2IVPROC
__glewUniform2ivARB	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLUNIFORM2IVARBPROC __glewUniform2ivARB;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLUNIFORM2IVARBPROC
__glewUniform2ui	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLUNIFORM2UIPROC __glewUniform2ui;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLUNIFORM2UIPROC
__glewUniform2ui64ARB	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLUNIFORM2UI64ARBPROC __glewUniform2ui64ARB;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLUNIFORM2UI64ARBPROC
__glewUniform2ui64NV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLUNIFORM2UI64NVPROC __glewUniform2ui64NV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLUNIFORM2UI64NVPROC
__glewUniform2ui64vARB	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLUNIFORM2UI64VARBPROC __glewUniform2ui64vARB;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLUNIFORM2UI64VARBPROC
__glewUniform2ui64vNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLUNIFORM2UI64VNVPROC __glewUniform2ui64vNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLUNIFORM2UI64VNVPROC
__glewUniform2uiEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLUNIFORM2UIEXTPROC __glewUniform2uiEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLUNIFORM2UIEXTPROC
__glewUniform2uiv	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLUNIFORM2UIVPROC __glewUniform2uiv;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLUNIFORM2UIVPROC
__glewUniform2uivEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLUNIFORM2UIVEXTPROC __glewUniform2uivEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLUNIFORM2UIVEXTPROC
__glewUniform3d	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLUNIFORM3DPROC __glewUniform3d;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLUNIFORM3DPROC
__glewUniform3dv	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLUNIFORM3DVPROC __glewUniform3dv;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLUNIFORM3DVPROC
__glewUniform3f	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLUNIFORM3FPROC __glewUniform3f;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLUNIFORM3FPROC
__glewUniform3fARB	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLUNIFORM3FARBPROC __glewUniform3fARB;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLUNIFORM3FARBPROC
__glewUniform3fv	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLUNIFORM3FVPROC __glewUniform3fv;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLUNIFORM3FVPROC
__glewUniform3fvARB	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLUNIFORM3FVARBPROC __glewUniform3fvARB;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLUNIFORM3FVARBPROC
__glewUniform3i	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLUNIFORM3IPROC __glewUniform3i;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLUNIFORM3IPROC
__glewUniform3i64ARB	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLUNIFORM3I64ARBPROC __glewUniform3i64ARB;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLUNIFORM3I64ARBPROC
__glewUniform3i64NV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLUNIFORM3I64NVPROC __glewUniform3i64NV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLUNIFORM3I64NVPROC
__glewUniform3i64vARB	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLUNIFORM3I64VARBPROC __glewUniform3i64vARB;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLUNIFORM3I64VARBPROC
__glewUniform3i64vNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLUNIFORM3I64VNVPROC __glewUniform3i64vNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLUNIFORM3I64VNVPROC
__glewUniform3iARB	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLUNIFORM3IARBPROC __glewUniform3iARB;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLUNIFORM3IARBPROC
__glewUniform3iv	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLUNIFORM3IVPROC __glewUniform3iv;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLUNIFORM3IVPROC
__glewUniform3ivARB	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLUNIFORM3IVARBPROC __glewUniform3ivARB;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLUNIFORM3IVARBPROC
__glewUniform3ui	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLUNIFORM3UIPROC __glewUniform3ui;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLUNIFORM3UIPROC
__glewUniform3ui64ARB	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLUNIFORM3UI64ARBPROC __glewUniform3ui64ARB;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLUNIFORM3UI64ARBPROC
__glewUniform3ui64NV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLUNIFORM3UI64NVPROC __glewUniform3ui64NV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLUNIFORM3UI64NVPROC
__glewUniform3ui64vARB	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLUNIFORM3UI64VARBPROC __glewUniform3ui64vARB;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLUNIFORM3UI64VARBPROC
__glewUniform3ui64vNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLUNIFORM3UI64VNVPROC __glewUniform3ui64vNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLUNIFORM3UI64VNVPROC
__glewUniform3uiEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLUNIFORM3UIEXTPROC __glewUniform3uiEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLUNIFORM3UIEXTPROC
__glewUniform3uiv	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLUNIFORM3UIVPROC __glewUniform3uiv;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLUNIFORM3UIVPROC
__glewUniform3uivEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLUNIFORM3UIVEXTPROC __glewUniform3uivEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLUNIFORM3UIVEXTPROC
__glewUniform4d	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLUNIFORM4DPROC __glewUniform4d;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLUNIFORM4DPROC
__glewUniform4dv	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLUNIFORM4DVPROC __glewUniform4dv;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLUNIFORM4DVPROC
__glewUniform4f	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLUNIFORM4FPROC __glewUniform4f;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLUNIFORM4FPROC
__glewUniform4fARB	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLUNIFORM4FARBPROC __glewUniform4fARB;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLUNIFORM4FARBPROC
__glewUniform4fv	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLUNIFORM4FVPROC __glewUniform4fv;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLUNIFORM4FVPROC
__glewUniform4fvARB	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLUNIFORM4FVARBPROC __glewUniform4fvARB;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLUNIFORM4FVARBPROC
__glewUniform4i	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLUNIFORM4IPROC __glewUniform4i;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLUNIFORM4IPROC
__glewUniform4i64ARB	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLUNIFORM4I64ARBPROC __glewUniform4i64ARB;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLUNIFORM4I64ARBPROC
__glewUniform4i64NV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLUNIFORM4I64NVPROC __glewUniform4i64NV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLUNIFORM4I64NVPROC
__glewUniform4i64vARB	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLUNIFORM4I64VARBPROC __glewUniform4i64vARB;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLUNIFORM4I64VARBPROC
__glewUniform4i64vNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLUNIFORM4I64VNVPROC __glewUniform4i64vNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLUNIFORM4I64VNVPROC
__glewUniform4iARB	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLUNIFORM4IARBPROC __glewUniform4iARB;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLUNIFORM4IARBPROC
__glewUniform4iv	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLUNIFORM4IVPROC __glewUniform4iv;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLUNIFORM4IVPROC
__glewUniform4ivARB	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLUNIFORM4IVARBPROC __glewUniform4ivARB;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLUNIFORM4IVARBPROC
__glewUniform4ui	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLUNIFORM4UIPROC __glewUniform4ui;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLUNIFORM4UIPROC
__glewUniform4ui64ARB	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLUNIFORM4UI64ARBPROC __glewUniform4ui64ARB;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLUNIFORM4UI64ARBPROC
__glewUniform4ui64NV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLUNIFORM4UI64NVPROC __glewUniform4ui64NV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLUNIFORM4UI64NVPROC
__glewUniform4ui64vARB	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLUNIFORM4UI64VARBPROC __glewUniform4ui64vARB;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLUNIFORM4UI64VARBPROC
__glewUniform4ui64vNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLUNIFORM4UI64VNVPROC __glewUniform4ui64vNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLUNIFORM4UI64VNVPROC
__glewUniform4uiEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLUNIFORM4UIEXTPROC __glewUniform4uiEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLUNIFORM4UIEXTPROC
__glewUniform4uiv	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLUNIFORM4UIVPROC __glewUniform4uiv;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLUNIFORM4UIVPROC
__glewUniform4uivEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLUNIFORM4UIVEXTPROC __glewUniform4uivEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLUNIFORM4UIVEXTPROC
__glewUniformBlockBinding	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLUNIFORMBLOCKBINDINGPROC __glewUniformBlockBinding;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLUNIFORMBLOCKBINDINGPROC
__glewUniformBufferEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLUNIFORMBUFFEREXTPROC __glewUniformBufferEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLUNIFORMBUFFEREXTPROC
__glewUniformHandleui64ARB	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLUNIFORMHANDLEUI64ARBPROC __glewUniformHandleui64ARB;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLUNIFORMHANDLEUI64ARBPROC
__glewUniformHandleui64IMG	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLUNIFORMHANDLEUI64IMGPROC __glewUniformHandleui64IMG;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLUNIFORMHANDLEUI64IMGPROC
__glewUniformHandleui64NV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLUNIFORMHANDLEUI64NVPROC __glewUniformHandleui64NV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLUNIFORMHANDLEUI64NVPROC
__glewUniformHandleui64vARB	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLUNIFORMHANDLEUI64VARBPROC __glewUniformHandleui64vARB;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLUNIFORMHANDLEUI64VARBPROC
__glewUniformHandleui64vIMG	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLUNIFORMHANDLEUI64VIMGPROC __glewUniformHandleui64vIMG;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLUNIFORMHANDLEUI64VIMGPROC
__glewUniformHandleui64vNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLUNIFORMHANDLEUI64VNVPROC __glewUniformHandleui64vNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLUNIFORMHANDLEUI64VNVPROC
__glewUniformMatrix2dv	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLUNIFORMMATRIX2DVPROC __glewUniformMatrix2dv;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLUNIFORMMATRIX2DVPROC
__glewUniformMatrix2fv	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLUNIFORMMATRIX2FVPROC __glewUniformMatrix2fv;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLUNIFORMMATRIX2FVPROC
__glewUniformMatrix2fvARB	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLUNIFORMMATRIX2FVARBPROC __glewUniformMatrix2fvARB;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLUNIFORMMATRIX2FVARBPROC
__glewUniformMatrix2x3dv	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLUNIFORMMATRIX2X3DVPROC __glewUniformMatrix2x3dv;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLUNIFORMMATRIX2X3DVPROC
__glewUniformMatrix2x3fv	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLUNIFORMMATRIX2X3FVPROC __glewUniformMatrix2x3fv;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLUNIFORMMATRIX2X3FVPROC
__glewUniformMatrix2x3fvNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLUNIFORMMATRIX2X3FVNVPROC __glewUniformMatrix2x3fvNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLUNIFORMMATRIX2X3FVNVPROC
__glewUniformMatrix2x4dv	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLUNIFORMMATRIX2X4DVPROC __glewUniformMatrix2x4dv;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLUNIFORMMATRIX2X4DVPROC
__glewUniformMatrix2x4fv	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLUNIFORMMATRIX2X4FVPROC __glewUniformMatrix2x4fv;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLUNIFORMMATRIX2X4FVPROC
__glewUniformMatrix2x4fvNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLUNIFORMMATRIX2X4FVNVPROC __glewUniformMatrix2x4fvNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLUNIFORMMATRIX2X4FVNVPROC
__glewUniformMatrix3dv	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLUNIFORMMATRIX3DVPROC __glewUniformMatrix3dv;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLUNIFORMMATRIX3DVPROC
__glewUniformMatrix3fv	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLUNIFORMMATRIX3FVPROC __glewUniformMatrix3fv;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLUNIFORMMATRIX3FVPROC
__glewUniformMatrix3fvARB	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLUNIFORMMATRIX3FVARBPROC __glewUniformMatrix3fvARB;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLUNIFORMMATRIX3FVARBPROC
__glewUniformMatrix3x2dv	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLUNIFORMMATRIX3X2DVPROC __glewUniformMatrix3x2dv;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLUNIFORMMATRIX3X2DVPROC
__glewUniformMatrix3x2fv	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLUNIFORMMATRIX3X2FVPROC __glewUniformMatrix3x2fv;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLUNIFORMMATRIX3X2FVPROC
__glewUniformMatrix3x2fvNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLUNIFORMMATRIX3X2FVNVPROC __glewUniformMatrix3x2fvNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLUNIFORMMATRIX3X2FVNVPROC
__glewUniformMatrix3x4dv	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLUNIFORMMATRIX3X4DVPROC __glewUniformMatrix3x4dv;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLUNIFORMMATRIX3X4DVPROC
__glewUniformMatrix3x4fv	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLUNIFORMMATRIX3X4FVPROC __glewUniformMatrix3x4fv;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLUNIFORMMATRIX3X4FVPROC
__glewUniformMatrix3x4fvNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLUNIFORMMATRIX3X4FVNVPROC __glewUniformMatrix3x4fvNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLUNIFORMMATRIX3X4FVNVPROC
__glewUniformMatrix4dv	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLUNIFORMMATRIX4DVPROC __glewUniformMatrix4dv;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLUNIFORMMATRIX4DVPROC
__glewUniformMatrix4fv	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLUNIFORMMATRIX4FVPROC __glewUniformMatrix4fv;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLUNIFORMMATRIX4FVPROC
__glewUniformMatrix4fvARB	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLUNIFORMMATRIX4FVARBPROC __glewUniformMatrix4fvARB;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLUNIFORMMATRIX4FVARBPROC
__glewUniformMatrix4x2dv	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLUNIFORMMATRIX4X2DVPROC __glewUniformMatrix4x2dv;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLUNIFORMMATRIX4X2DVPROC
__glewUniformMatrix4x2fv	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLUNIFORMMATRIX4X2FVPROC __glewUniformMatrix4x2fv;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLUNIFORMMATRIX4X2FVPROC
__glewUniformMatrix4x2fvNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLUNIFORMMATRIX4X2FVNVPROC __glewUniformMatrix4x2fvNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLUNIFORMMATRIX4X2FVNVPROC
__glewUniformMatrix4x3dv	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLUNIFORMMATRIX4X3DVPROC __glewUniformMatrix4x3dv;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLUNIFORMMATRIX4X3DVPROC
__glewUniformMatrix4x3fv	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLUNIFORMMATRIX4X3FVPROC __glewUniformMatrix4x3fv;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLUNIFORMMATRIX4X3FVPROC
__glewUniformMatrix4x3fvNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLUNIFORMMATRIX4X3FVNVPROC __glewUniformMatrix4x3fvNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLUNIFORMMATRIX4X3FVNVPROC
__glewUniformSubroutinesuiv	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLUNIFORMSUBROUTINESUIVPROC __glewUniformSubroutinesuiv;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLUNIFORMSUBROUTINESUIVPROC
__glewUniformui64NV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLUNIFORMUI64NVPROC __glewUniformui64NV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLUNIFORMUI64NVPROC
__glewUniformui64vNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLUNIFORMUI64VNVPROC __glewUniformui64vNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLUNIFORMUI64VNVPROC
__glewUnlockArraysEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLUNLOCKARRAYSEXTPROC __glewUnlockArraysEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLUNLOCKARRAYSEXTPROC
__glewUnmapBuffer	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLUNMAPBUFFERPROC __glewUnmapBuffer;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLUNMAPBUFFERPROC
__glewUnmapBufferARB	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLUNMAPBUFFERARBPROC __glewUnmapBufferARB;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLUNMAPBUFFERARBPROC
__glewUnmapBufferOES	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLUNMAPBUFFEROESPROC __glewUnmapBufferOES;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLUNMAPBUFFEROESPROC
__glewUnmapNamedBuffer	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLUNMAPNAMEDBUFFERPROC __glewUnmapNamedBuffer;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLUNMAPNAMEDBUFFERPROC
__glewUnmapNamedBufferEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLUNMAPNAMEDBUFFEREXTPROC __glewUnmapNamedBufferEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLUNMAPNAMEDBUFFEREXTPROC
__glewUnmapObjectBufferATI	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLUNMAPOBJECTBUFFERATIPROC __glewUnmapObjectBufferATI;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLUNMAPOBJECTBUFFERATIPROC
__glewUnmapTexture2DINTEL	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLUNMAPTEXTURE2DINTELPROC __glewUnmapTexture2DINTEL;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLUNMAPTEXTURE2DINTELPROC
__glewUpdateObjectBufferATI	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLUPDATEOBJECTBUFFERATIPROC __glewUpdateObjectBufferATI;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLUPDATEOBJECTBUFFERATIPROC
__glewUploadGpuMaskNVX	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLUPLOADGPUMASKNVXPROC __glewUploadGpuMaskNVX;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLUPLOADGPUMASKNVXPROC
__glewUseProgram	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLUSEPROGRAMPROC __glewUseProgram;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLUSEPROGRAMPROC
__glewUseProgramObjectARB	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLUSEPROGRAMOBJECTARBPROC __glewUseProgramObjectARB;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLUSEPROGRAMOBJECTARBPROC
__glewUseProgramStages	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLUSEPROGRAMSTAGESPROC __glewUseProgramStages;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLUSEPROGRAMSTAGESPROC
__glewUseShaderProgramEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLUSESHADERPROGRAMEXTPROC __glewUseShaderProgramEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLUSESHADERPROGRAMEXTPROC
__glewVDPAUFiniNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLVDPAUFININVPROC __glewVDPAUFiniNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLVDPAUFININVPROC
__glewVDPAUGetSurfaceivNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLVDPAUGETSURFACEIVNVPROC __glewVDPAUGetSurfaceivNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLVDPAUGETSURFACEIVNVPROC
__glewVDPAUInitNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLVDPAUINITNVPROC __glewVDPAUInitNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLVDPAUINITNVPROC
__glewVDPAUIsSurfaceNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLVDPAUISSURFACENVPROC __glewVDPAUIsSurfaceNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLVDPAUISSURFACENVPROC
__glewVDPAUMapSurfacesNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLVDPAUMAPSURFACESNVPROC __glewVDPAUMapSurfacesNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLVDPAUMAPSURFACESNVPROC
__glewVDPAURegisterOutputSurfaceNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLVDPAUREGISTEROUTPUTSURFACENVPROC __glewVDPAURegisterOutputSurfaceNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLVDPAUREGISTEROUTPUTSURFACENVPROC
__glewVDPAURegisterVideoSurfaceNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLVDPAUREGISTERVIDEOSURFACENVPROC __glewVDPAURegisterVideoSurfaceNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLVDPAUREGISTERVIDEOSURFACENVPROC
__glewVDPAURegisterVideoSurfaceWithPictureStructureNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLVDPAUREGISTERVIDEOSURFACEWITHPICTURESTRUCTURENVPROC __glewVDPAURegisterVide/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLVDPAUREGISTERVIDEOSURFACEWITHPICTURESTRUCTURENVPROC
__glewVDPAUSurfaceAccessNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLVDPAUSURFACEACCESSNVPROC __glewVDPAUSurfaceAccessNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLVDPAUSURFACEACCESSNVPROC
__glewVDPAUUnmapSurfacesNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLVDPAUUNMAPSURFACESNVPROC __glewVDPAUUnmapSurfacesNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLVDPAUUNMAPSURFACESNVPROC
__glewVDPAUUnregisterSurfaceNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLVDPAUUNREGISTERSURFACENVPROC __glewVDPAUUnregisterSurfaceNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLVDPAUUNREGISTERSURFACENVPROC
__glewValidateProgram	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLVALIDATEPROGRAMPROC __glewValidateProgram;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLVALIDATEPROGRAMPROC
__glewValidateProgramARB	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLVALIDATEPROGRAMARBPROC __glewValidateProgramARB;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLVALIDATEPROGRAMARBPROC
__glewValidateProgramPipeline	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLVALIDATEPROGRAMPIPELINEPROC __glewValidateProgramPipeline;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLVALIDATEPROGRAMPIPELINEPROC
__glewVariantArrayObjectATI	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLVARIANTARRAYOBJECTATIPROC __glewVariantArrayObjectATI;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLVARIANTARRAYOBJECTATIPROC
__glewVariantPointerEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLVARIANTPOINTEREXTPROC __glewVariantPointerEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLVARIANTPOINTEREXTPROC
__glewVariantbvEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLVARIANTBVEXTPROC __glewVariantbvEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLVARIANTBVEXTPROC
__glewVariantdvEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLVARIANTDVEXTPROC __glewVariantdvEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLVARIANTDVEXTPROC
__glewVariantfvEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLVARIANTFVEXTPROC __glewVariantfvEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLVARIANTFVEXTPROC
__glewVariantivEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLVARIANTIVEXTPROC __glewVariantivEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLVARIANTIVEXTPROC
__glewVariantsvEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLVARIANTSVEXTPROC __glewVariantsvEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLVARIANTSVEXTPROC
__glewVariantubvEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLVARIANTUBVEXTPROC __glewVariantubvEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLVARIANTUBVEXTPROC
__glewVariantuivEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLVARIANTUIVEXTPROC __glewVariantuivEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLVARIANTUIVEXTPROC
__glewVariantusvEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLVARIANTUSVEXTPROC __glewVariantusvEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLVARIANTUSVEXTPROC
__glewVectorOperationSGIX	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLVECTOROPERATIONSGIXPROC __glewVectorOperationSGIX;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLVECTOROPERATIONSGIXPROC
__glewVertex2hNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEX2HNVPROC __glewVertex2hNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEX2HNVPROC
__glewVertex2hvNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEX2HVNVPROC __glewVertex2hvNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEX2HVNVPROC
__glewVertex3hNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEX3HNVPROC __glewVertex3hNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEX3HNVPROC
__glewVertex3hvNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEX3HVNVPROC __glewVertex3hvNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEX3HVNVPROC
__glewVertex4hNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEX4HNVPROC __glewVertex4hNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEX4HNVPROC
__glewVertex4hvNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEX4HVNVPROC __glewVertex4hvNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEX4HVNVPROC
__glewVertexArrayAttribBinding	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXARRAYATTRIBBINDINGPROC __glewVertexArrayAttribBinding;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXARRAYATTRIBBINDINGPROC
__glewVertexArrayAttribFormat	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXARRAYATTRIBFORMATPROC __glewVertexArrayAttribFormat;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXARRAYATTRIBFORMATPROC
__glewVertexArrayAttribIFormat	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXARRAYATTRIBIFORMATPROC __glewVertexArrayAttribIFormat;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXARRAYATTRIBIFORMATPROC
__glewVertexArrayAttribLFormat	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXARRAYATTRIBLFORMATPROC __glewVertexArrayAttribLFormat;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXARRAYATTRIBLFORMATPROC
__glewVertexArrayBindVertexBufferEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXARRAYBINDVERTEXBUFFEREXTPROC __glewVertexArrayBindVertexBufferEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXARRAYBINDVERTEXBUFFEREXTPROC
__glewVertexArrayBindingDivisor	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXARRAYBINDINGDIVISORPROC __glewVertexArrayBindingDivisor;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXARRAYBINDINGDIVISORPROC
__glewVertexArrayColorOffsetEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXARRAYCOLOROFFSETEXTPROC __glewVertexArrayColorOffsetEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXARRAYCOLOROFFSETEXTPROC
__glewVertexArrayEdgeFlagOffsetEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXARRAYEDGEFLAGOFFSETEXTPROC __glewVertexArrayEdgeFlagOffsetEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXARRAYEDGEFLAGOFFSETEXTPROC
__glewVertexArrayElementBuffer	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXARRAYELEMENTBUFFERPROC __glewVertexArrayElementBuffer;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXARRAYELEMENTBUFFERPROC
__glewVertexArrayFogCoordOffsetEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXARRAYFOGCOORDOFFSETEXTPROC __glewVertexArrayFogCoordOffsetEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXARRAYFOGCOORDOFFSETEXTPROC
__glewVertexArrayIndexOffsetEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXARRAYINDEXOFFSETEXTPROC __glewVertexArrayIndexOffsetEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXARRAYINDEXOFFSETEXTPROC
__glewVertexArrayMultiTexCoordOffsetEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXARRAYMULTITEXCOORDOFFSETEXTPROC __glewVertexArrayMultiTexCoordOffsetE/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXARRAYMULTITEXCOORDOFFSETEXTPROC
__glewVertexArrayNormalOffsetEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXARRAYNORMALOFFSETEXTPROC __glewVertexArrayNormalOffsetEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXARRAYNORMALOFFSETEXTPROC
__glewVertexArrayParameteriAPPLE	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXARRAYPARAMETERIAPPLEPROC __glewVertexArrayParameteriAPPLE;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXARRAYPARAMETERIAPPLEPROC
__glewVertexArrayRangeAPPLE	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXARRAYRANGEAPPLEPROC __glewVertexArrayRangeAPPLE;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXARRAYRANGEAPPLEPROC
__glewVertexArrayRangeNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXARRAYRANGENVPROC __glewVertexArrayRangeNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXARRAYRANGENVPROC
__glewVertexArraySecondaryColorOffsetEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXARRAYSECONDARYCOLOROFFSETEXTPROC __glewVertexArraySecondaryColorOffse/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXARRAYSECONDARYCOLOROFFSETEXTPROC
__glewVertexArrayTexCoordOffsetEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXARRAYTEXCOORDOFFSETEXTPROC __glewVertexArrayTexCoordOffsetEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXARRAYTEXCOORDOFFSETEXTPROC
__glewVertexArrayVertexAttribBindingEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXARRAYVERTEXATTRIBBINDINGEXTPROC __glewVertexArrayVertexAttribBindingE/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXARRAYVERTEXATTRIBBINDINGEXTPROC
__glewVertexArrayVertexAttribDivisorEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXARRAYVERTEXATTRIBDIVISOREXTPROC __glewVertexArrayVertexAttribDivisorE/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXARRAYVERTEXATTRIBDIVISOREXTPROC
__glewVertexArrayVertexAttribFormatEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXARRAYVERTEXATTRIBFORMATEXTPROC __glewVertexArrayVertexAttribFormatEXT/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXARRAYVERTEXATTRIBFORMATEXTPROC
__glewVertexArrayVertexAttribIFormatEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXARRAYVERTEXATTRIBIFORMATEXTPROC __glewVertexArrayVertexAttribIFormatE/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXARRAYVERTEXATTRIBIFORMATEXTPROC
__glewVertexArrayVertexAttribIOffsetEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXARRAYVERTEXATTRIBIOFFSETEXTPROC __glewVertexArrayVertexAttribIOffsetE/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXARRAYVERTEXATTRIBIOFFSETEXTPROC
__glewVertexArrayVertexAttribLFormatEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXARRAYVERTEXATTRIBLFORMATEXTPROC __glewVertexArrayVertexAttribLFormatE/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXARRAYVERTEXATTRIBLFORMATEXTPROC
__glewVertexArrayVertexAttribLOffsetEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXARRAYVERTEXATTRIBLOFFSETEXTPROC __glewVertexArrayVertexAttribLOffsetE/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXARRAYVERTEXATTRIBLOFFSETEXTPROC
__glewVertexArrayVertexAttribOffsetEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXARRAYVERTEXATTRIBOFFSETEXTPROC __glewVertexArrayVertexAttribOffsetEXT/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXARRAYVERTEXATTRIBOFFSETEXTPROC
__glewVertexArrayVertexBindingDivisorEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXARRAYVERTEXBINDINGDIVISOREXTPROC __glewVertexArrayVertexBindingDiviso/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXARRAYVERTEXBINDINGDIVISOREXTPROC
__glewVertexArrayVertexBuffer	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXARRAYVERTEXBUFFERPROC __glewVertexArrayVertexBuffer;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXARRAYVERTEXBUFFERPROC
__glewVertexArrayVertexBuffers	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXARRAYVERTEXBUFFERSPROC __glewVertexArrayVertexBuffers;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXARRAYVERTEXBUFFERSPROC
__glewVertexArrayVertexOffsetEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXARRAYVERTEXOFFSETEXTPROC __glewVertexArrayVertexOffsetEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXARRAYVERTEXOFFSETEXTPROC
__glewVertexAttrib1d	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXATTRIB1DPROC __glewVertexAttrib1d;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXATTRIB1DPROC
__glewVertexAttrib1dARB	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXATTRIB1DARBPROC __glewVertexAttrib1dARB;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXATTRIB1DARBPROC
__glewVertexAttrib1dNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXATTRIB1DNVPROC __glewVertexAttrib1dNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXATTRIB1DNVPROC
__glewVertexAttrib1dv	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXATTRIB1DVPROC __glewVertexAttrib1dv;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXATTRIB1DVPROC
__glewVertexAttrib1dvARB	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXATTRIB1DVARBPROC __glewVertexAttrib1dvARB;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXATTRIB1DVARBPROC
__glewVertexAttrib1dvNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXATTRIB1DVNVPROC __glewVertexAttrib1dvNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXATTRIB1DVNVPROC
__glewVertexAttrib1f	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXATTRIB1FPROC __glewVertexAttrib1f;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXATTRIB1FPROC
__glewVertexAttrib1fARB	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXATTRIB1FARBPROC __glewVertexAttrib1fARB;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXATTRIB1FARBPROC
__glewVertexAttrib1fNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXATTRIB1FNVPROC __glewVertexAttrib1fNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXATTRIB1FNVPROC
__glewVertexAttrib1fv	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXATTRIB1FVPROC __glewVertexAttrib1fv;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXATTRIB1FVPROC
__glewVertexAttrib1fvARB	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXATTRIB1FVARBPROC __glewVertexAttrib1fvARB;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXATTRIB1FVARBPROC
__glewVertexAttrib1fvNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXATTRIB1FVNVPROC __glewVertexAttrib1fvNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXATTRIB1FVNVPROC
__glewVertexAttrib1hNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXATTRIB1HNVPROC __glewVertexAttrib1hNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXATTRIB1HNVPROC
__glewVertexAttrib1hvNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXATTRIB1HVNVPROC __glewVertexAttrib1hvNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXATTRIB1HVNVPROC
__glewVertexAttrib1s	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXATTRIB1SPROC __glewVertexAttrib1s;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXATTRIB1SPROC
__glewVertexAttrib1sARB	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXATTRIB1SARBPROC __glewVertexAttrib1sARB;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXATTRIB1SARBPROC
__glewVertexAttrib1sNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXATTRIB1SNVPROC __glewVertexAttrib1sNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXATTRIB1SNVPROC
__glewVertexAttrib1sv	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXATTRIB1SVPROC __glewVertexAttrib1sv;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXATTRIB1SVPROC
__glewVertexAttrib1svARB	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXATTRIB1SVARBPROC __glewVertexAttrib1svARB;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXATTRIB1SVARBPROC
__glewVertexAttrib1svNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXATTRIB1SVNVPROC __glewVertexAttrib1svNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXATTRIB1SVNVPROC
__glewVertexAttrib2d	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXATTRIB2DPROC __glewVertexAttrib2d;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXATTRIB2DPROC
__glewVertexAttrib2dARB	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXATTRIB2DARBPROC __glewVertexAttrib2dARB;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXATTRIB2DARBPROC
__glewVertexAttrib2dNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXATTRIB2DNVPROC __glewVertexAttrib2dNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXATTRIB2DNVPROC
__glewVertexAttrib2dv	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXATTRIB2DVPROC __glewVertexAttrib2dv;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXATTRIB2DVPROC
__glewVertexAttrib2dvARB	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXATTRIB2DVARBPROC __glewVertexAttrib2dvARB;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXATTRIB2DVARBPROC
__glewVertexAttrib2dvNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXATTRIB2DVNVPROC __glewVertexAttrib2dvNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXATTRIB2DVNVPROC
__glewVertexAttrib2f	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXATTRIB2FPROC __glewVertexAttrib2f;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXATTRIB2FPROC
__glewVertexAttrib2fARB	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXATTRIB2FARBPROC __glewVertexAttrib2fARB;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXATTRIB2FARBPROC
__glewVertexAttrib2fNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXATTRIB2FNVPROC __glewVertexAttrib2fNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXATTRIB2FNVPROC
__glewVertexAttrib2fv	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXATTRIB2FVPROC __glewVertexAttrib2fv;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXATTRIB2FVPROC
__glewVertexAttrib2fvARB	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXATTRIB2FVARBPROC __glewVertexAttrib2fvARB;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXATTRIB2FVARBPROC
__glewVertexAttrib2fvNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXATTRIB2FVNVPROC __glewVertexAttrib2fvNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXATTRIB2FVNVPROC
__glewVertexAttrib2hNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXATTRIB2HNVPROC __glewVertexAttrib2hNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXATTRIB2HNVPROC
__glewVertexAttrib2hvNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXATTRIB2HVNVPROC __glewVertexAttrib2hvNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXATTRIB2HVNVPROC
__glewVertexAttrib2s	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXATTRIB2SPROC __glewVertexAttrib2s;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXATTRIB2SPROC
__glewVertexAttrib2sARB	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXATTRIB2SARBPROC __glewVertexAttrib2sARB;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXATTRIB2SARBPROC
__glewVertexAttrib2sNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXATTRIB2SNVPROC __glewVertexAttrib2sNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXATTRIB2SNVPROC
__glewVertexAttrib2sv	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXATTRIB2SVPROC __glewVertexAttrib2sv;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXATTRIB2SVPROC
__glewVertexAttrib2svARB	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXATTRIB2SVARBPROC __glewVertexAttrib2svARB;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXATTRIB2SVARBPROC
__glewVertexAttrib2svNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXATTRIB2SVNVPROC __glewVertexAttrib2svNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXATTRIB2SVNVPROC
__glewVertexAttrib3d	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXATTRIB3DPROC __glewVertexAttrib3d;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXATTRIB3DPROC
__glewVertexAttrib3dARB	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXATTRIB3DARBPROC __glewVertexAttrib3dARB;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXATTRIB3DARBPROC
__glewVertexAttrib3dNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXATTRIB3DNVPROC __glewVertexAttrib3dNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXATTRIB3DNVPROC
__glewVertexAttrib3dv	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXATTRIB3DVPROC __glewVertexAttrib3dv;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXATTRIB3DVPROC
__glewVertexAttrib3dvARB	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXATTRIB3DVARBPROC __glewVertexAttrib3dvARB;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXATTRIB3DVARBPROC
__glewVertexAttrib3dvNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXATTRIB3DVNVPROC __glewVertexAttrib3dvNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXATTRIB3DVNVPROC
__glewVertexAttrib3f	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXATTRIB3FPROC __glewVertexAttrib3f;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXATTRIB3FPROC
__glewVertexAttrib3fARB	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXATTRIB3FARBPROC __glewVertexAttrib3fARB;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXATTRIB3FARBPROC
__glewVertexAttrib3fNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXATTRIB3FNVPROC __glewVertexAttrib3fNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXATTRIB3FNVPROC
__glewVertexAttrib3fv	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXATTRIB3FVPROC __glewVertexAttrib3fv;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXATTRIB3FVPROC
__glewVertexAttrib3fvARB	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXATTRIB3FVARBPROC __glewVertexAttrib3fvARB;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXATTRIB3FVARBPROC
__glewVertexAttrib3fvNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXATTRIB3FVNVPROC __glewVertexAttrib3fvNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXATTRIB3FVNVPROC
__glewVertexAttrib3hNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXATTRIB3HNVPROC __glewVertexAttrib3hNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXATTRIB3HNVPROC
__glewVertexAttrib3hvNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXATTRIB3HVNVPROC __glewVertexAttrib3hvNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXATTRIB3HVNVPROC
__glewVertexAttrib3s	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXATTRIB3SPROC __glewVertexAttrib3s;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXATTRIB3SPROC
__glewVertexAttrib3sARB	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXATTRIB3SARBPROC __glewVertexAttrib3sARB;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXATTRIB3SARBPROC
__glewVertexAttrib3sNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXATTRIB3SNVPROC __glewVertexAttrib3sNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXATTRIB3SNVPROC
__glewVertexAttrib3sv	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXATTRIB3SVPROC __glewVertexAttrib3sv;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXATTRIB3SVPROC
__glewVertexAttrib3svARB	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXATTRIB3SVARBPROC __glewVertexAttrib3svARB;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXATTRIB3SVARBPROC
__glewVertexAttrib3svNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXATTRIB3SVNVPROC __glewVertexAttrib3svNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXATTRIB3SVNVPROC
__glewVertexAttrib4Nbv	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXATTRIB4NBVPROC __glewVertexAttrib4Nbv;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXATTRIB4NBVPROC
__glewVertexAttrib4NbvARB	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXATTRIB4NBVARBPROC __glewVertexAttrib4NbvARB;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXATTRIB4NBVARBPROC
__glewVertexAttrib4Niv	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXATTRIB4NIVPROC __glewVertexAttrib4Niv;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXATTRIB4NIVPROC
__glewVertexAttrib4NivARB	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXATTRIB4NIVARBPROC __glewVertexAttrib4NivARB;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXATTRIB4NIVARBPROC
__glewVertexAttrib4Nsv	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXATTRIB4NSVPROC __glewVertexAttrib4Nsv;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXATTRIB4NSVPROC
__glewVertexAttrib4NsvARB	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXATTRIB4NSVARBPROC __glewVertexAttrib4NsvARB;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXATTRIB4NSVARBPROC
__glewVertexAttrib4Nub	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXATTRIB4NUBPROC __glewVertexAttrib4Nub;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXATTRIB4NUBPROC
__glewVertexAttrib4NubARB	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXATTRIB4NUBARBPROC __glewVertexAttrib4NubARB;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXATTRIB4NUBARBPROC
__glewVertexAttrib4Nubv	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXATTRIB4NUBVPROC __glewVertexAttrib4Nubv;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXATTRIB4NUBVPROC
__glewVertexAttrib4NubvARB	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXATTRIB4NUBVARBPROC __glewVertexAttrib4NubvARB;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXATTRIB4NUBVARBPROC
__glewVertexAttrib4Nuiv	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXATTRIB4NUIVPROC __glewVertexAttrib4Nuiv;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXATTRIB4NUIVPROC
__glewVertexAttrib4NuivARB	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXATTRIB4NUIVARBPROC __glewVertexAttrib4NuivARB;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXATTRIB4NUIVARBPROC
__glewVertexAttrib4Nusv	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXATTRIB4NUSVPROC __glewVertexAttrib4Nusv;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXATTRIB4NUSVPROC
__glewVertexAttrib4NusvARB	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXATTRIB4NUSVARBPROC __glewVertexAttrib4NusvARB;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXATTRIB4NUSVARBPROC
__glewVertexAttrib4bv	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXATTRIB4BVPROC __glewVertexAttrib4bv;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXATTRIB4BVPROC
__glewVertexAttrib4bvARB	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXATTRIB4BVARBPROC __glewVertexAttrib4bvARB;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXATTRIB4BVARBPROC
__glewVertexAttrib4d	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXATTRIB4DPROC __glewVertexAttrib4d;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXATTRIB4DPROC
__glewVertexAttrib4dARB	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXATTRIB4DARBPROC __glewVertexAttrib4dARB;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXATTRIB4DARBPROC
__glewVertexAttrib4dNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXATTRIB4DNVPROC __glewVertexAttrib4dNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXATTRIB4DNVPROC
__glewVertexAttrib4dv	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXATTRIB4DVPROC __glewVertexAttrib4dv;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXATTRIB4DVPROC
__glewVertexAttrib4dvARB	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXATTRIB4DVARBPROC __glewVertexAttrib4dvARB;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXATTRIB4DVARBPROC
__glewVertexAttrib4dvNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXATTRIB4DVNVPROC __glewVertexAttrib4dvNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXATTRIB4DVNVPROC
__glewVertexAttrib4f	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXATTRIB4FPROC __glewVertexAttrib4f;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXATTRIB4FPROC
__glewVertexAttrib4fARB	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXATTRIB4FARBPROC __glewVertexAttrib4fARB;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXATTRIB4FARBPROC
__glewVertexAttrib4fNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXATTRIB4FNVPROC __glewVertexAttrib4fNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXATTRIB4FNVPROC
__glewVertexAttrib4fv	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXATTRIB4FVPROC __glewVertexAttrib4fv;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXATTRIB4FVPROC
__glewVertexAttrib4fvARB	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXATTRIB4FVARBPROC __glewVertexAttrib4fvARB;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXATTRIB4FVARBPROC
__glewVertexAttrib4fvNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXATTRIB4FVNVPROC __glewVertexAttrib4fvNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXATTRIB4FVNVPROC
__glewVertexAttrib4hNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXATTRIB4HNVPROC __glewVertexAttrib4hNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXATTRIB4HNVPROC
__glewVertexAttrib4hvNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXATTRIB4HVNVPROC __glewVertexAttrib4hvNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXATTRIB4HVNVPROC
__glewVertexAttrib4iv	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXATTRIB4IVPROC __glewVertexAttrib4iv;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXATTRIB4IVPROC
__glewVertexAttrib4ivARB	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXATTRIB4IVARBPROC __glewVertexAttrib4ivARB;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXATTRIB4IVARBPROC
__glewVertexAttrib4s	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXATTRIB4SPROC __glewVertexAttrib4s;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXATTRIB4SPROC
__glewVertexAttrib4sARB	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXATTRIB4SARBPROC __glewVertexAttrib4sARB;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXATTRIB4SARBPROC
__glewVertexAttrib4sNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXATTRIB4SNVPROC __glewVertexAttrib4sNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXATTRIB4SNVPROC
__glewVertexAttrib4sv	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXATTRIB4SVPROC __glewVertexAttrib4sv;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXATTRIB4SVPROC
__glewVertexAttrib4svARB	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXATTRIB4SVARBPROC __glewVertexAttrib4svARB;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXATTRIB4SVARBPROC
__glewVertexAttrib4svNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXATTRIB4SVNVPROC __glewVertexAttrib4svNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXATTRIB4SVNVPROC
__glewVertexAttrib4ubNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXATTRIB4UBNVPROC __glewVertexAttrib4ubNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXATTRIB4UBNVPROC
__glewVertexAttrib4ubv	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXATTRIB4UBVPROC __glewVertexAttrib4ubv;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXATTRIB4UBVPROC
__glewVertexAttrib4ubvARB	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXATTRIB4UBVARBPROC __glewVertexAttrib4ubvARB;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXATTRIB4UBVARBPROC
__glewVertexAttrib4ubvNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXATTRIB4UBVNVPROC __glewVertexAttrib4ubvNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXATTRIB4UBVNVPROC
__glewVertexAttrib4uiv	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXATTRIB4UIVPROC __glewVertexAttrib4uiv;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXATTRIB4UIVPROC
__glewVertexAttrib4uivARB	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXATTRIB4UIVARBPROC __glewVertexAttrib4uivARB;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXATTRIB4UIVARBPROC
__glewVertexAttrib4usv	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXATTRIB4USVPROC __glewVertexAttrib4usv;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXATTRIB4USVPROC
__glewVertexAttrib4usvARB	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXATTRIB4USVARBPROC __glewVertexAttrib4usvARB;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXATTRIB4USVARBPROC
__glewVertexAttribArrayObjectATI	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXATTRIBARRAYOBJECTATIPROC __glewVertexAttribArrayObjectATI;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXATTRIBARRAYOBJECTATIPROC
__glewVertexAttribBinding	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXATTRIBBINDINGPROC __glewVertexAttribBinding;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXATTRIBBINDINGPROC
__glewVertexAttribDivisor	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXATTRIBDIVISORPROC __glewVertexAttribDivisor;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXATTRIBDIVISORPROC
__glewVertexAttribDivisorANGLE	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXATTRIBDIVISORANGLEPROC __glewVertexAttribDivisorANGLE;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXATTRIBDIVISORANGLEPROC
__glewVertexAttribDivisorARB	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXATTRIBDIVISORARBPROC __glewVertexAttribDivisorARB;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXATTRIBDIVISORARBPROC
__glewVertexAttribDivisorEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXATTRIBDIVISOREXTPROC __glewVertexAttribDivisorEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXATTRIBDIVISOREXTPROC
__glewVertexAttribDivisorNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXATTRIBDIVISORNVPROC __glewVertexAttribDivisorNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXATTRIBDIVISORNVPROC
__glewVertexAttribFormat	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXATTRIBFORMATPROC __glewVertexAttribFormat;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXATTRIBFORMATPROC
__glewVertexAttribFormatNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXATTRIBFORMATNVPROC __glewVertexAttribFormatNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXATTRIBFORMATNVPROC
__glewVertexAttribI1i	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXATTRIBI1IPROC __glewVertexAttribI1i;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXATTRIBI1IPROC
__glewVertexAttribI1iEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXATTRIBI1IEXTPROC __glewVertexAttribI1iEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXATTRIBI1IEXTPROC
__glewVertexAttribI1iv	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXATTRIBI1IVPROC __glewVertexAttribI1iv;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXATTRIBI1IVPROC
__glewVertexAttribI1ivEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXATTRIBI1IVEXTPROC __glewVertexAttribI1ivEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXATTRIBI1IVEXTPROC
__glewVertexAttribI1ui	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXATTRIBI1UIPROC __glewVertexAttribI1ui;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXATTRIBI1UIPROC
__glewVertexAttribI1uiEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXATTRIBI1UIEXTPROC __glewVertexAttribI1uiEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXATTRIBI1UIEXTPROC
__glewVertexAttribI1uiv	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXATTRIBI1UIVPROC __glewVertexAttribI1uiv;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXATTRIBI1UIVPROC
__glewVertexAttribI1uivEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXATTRIBI1UIVEXTPROC __glewVertexAttribI1uivEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXATTRIBI1UIVEXTPROC
__glewVertexAttribI2i	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXATTRIBI2IPROC __glewVertexAttribI2i;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXATTRIBI2IPROC
__glewVertexAttribI2iEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXATTRIBI2IEXTPROC __glewVertexAttribI2iEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXATTRIBI2IEXTPROC
__glewVertexAttribI2iv	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXATTRIBI2IVPROC __glewVertexAttribI2iv;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXATTRIBI2IVPROC
__glewVertexAttribI2ivEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXATTRIBI2IVEXTPROC __glewVertexAttribI2ivEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXATTRIBI2IVEXTPROC
__glewVertexAttribI2ui	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXATTRIBI2UIPROC __glewVertexAttribI2ui;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXATTRIBI2UIPROC
__glewVertexAttribI2uiEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXATTRIBI2UIEXTPROC __glewVertexAttribI2uiEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXATTRIBI2UIEXTPROC
__glewVertexAttribI2uiv	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXATTRIBI2UIVPROC __glewVertexAttribI2uiv;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXATTRIBI2UIVPROC
__glewVertexAttribI2uivEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXATTRIBI2UIVEXTPROC __glewVertexAttribI2uivEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXATTRIBI2UIVEXTPROC
__glewVertexAttribI3i	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXATTRIBI3IPROC __glewVertexAttribI3i;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXATTRIBI3IPROC
__glewVertexAttribI3iEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXATTRIBI3IEXTPROC __glewVertexAttribI3iEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXATTRIBI3IEXTPROC
__glewVertexAttribI3iv	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXATTRIBI3IVPROC __glewVertexAttribI3iv;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXATTRIBI3IVPROC
__glewVertexAttribI3ivEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXATTRIBI3IVEXTPROC __glewVertexAttribI3ivEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXATTRIBI3IVEXTPROC
__glewVertexAttribI3ui	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXATTRIBI3UIPROC __glewVertexAttribI3ui;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXATTRIBI3UIPROC
__glewVertexAttribI3uiEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXATTRIBI3UIEXTPROC __glewVertexAttribI3uiEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXATTRIBI3UIEXTPROC
__glewVertexAttribI3uiv	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXATTRIBI3UIVPROC __glewVertexAttribI3uiv;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXATTRIBI3UIVPROC
__glewVertexAttribI3uivEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXATTRIBI3UIVEXTPROC __glewVertexAttribI3uivEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXATTRIBI3UIVEXTPROC
__glewVertexAttribI4bv	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXATTRIBI4BVPROC __glewVertexAttribI4bv;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXATTRIBI4BVPROC
__glewVertexAttribI4bvEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXATTRIBI4BVEXTPROC __glewVertexAttribI4bvEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXATTRIBI4BVEXTPROC
__glewVertexAttribI4i	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXATTRIBI4IPROC __glewVertexAttribI4i;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXATTRIBI4IPROC
__glewVertexAttribI4iEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXATTRIBI4IEXTPROC __glewVertexAttribI4iEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXATTRIBI4IEXTPROC
__glewVertexAttribI4iv	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXATTRIBI4IVPROC __glewVertexAttribI4iv;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXATTRIBI4IVPROC
__glewVertexAttribI4ivEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXATTRIBI4IVEXTPROC __glewVertexAttribI4ivEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXATTRIBI4IVEXTPROC
__glewVertexAttribI4sv	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXATTRIBI4SVPROC __glewVertexAttribI4sv;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXATTRIBI4SVPROC
__glewVertexAttribI4svEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXATTRIBI4SVEXTPROC __glewVertexAttribI4svEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXATTRIBI4SVEXTPROC
__glewVertexAttribI4ubv	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXATTRIBI4UBVPROC __glewVertexAttribI4ubv;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXATTRIBI4UBVPROC
__glewVertexAttribI4ubvEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXATTRIBI4UBVEXTPROC __glewVertexAttribI4ubvEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXATTRIBI4UBVEXTPROC
__glewVertexAttribI4ui	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXATTRIBI4UIPROC __glewVertexAttribI4ui;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXATTRIBI4UIPROC
__glewVertexAttribI4uiEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXATTRIBI4UIEXTPROC __glewVertexAttribI4uiEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXATTRIBI4UIEXTPROC
__glewVertexAttribI4uiv	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXATTRIBI4UIVPROC __glewVertexAttribI4uiv;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXATTRIBI4UIVPROC
__glewVertexAttribI4uivEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXATTRIBI4UIVEXTPROC __glewVertexAttribI4uivEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXATTRIBI4UIVEXTPROC
__glewVertexAttribI4usv	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXATTRIBI4USVPROC __glewVertexAttribI4usv;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXATTRIBI4USVPROC
__glewVertexAttribI4usvEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXATTRIBI4USVEXTPROC __glewVertexAttribI4usvEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXATTRIBI4USVEXTPROC
__glewVertexAttribIFormat	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXATTRIBIFORMATPROC __glewVertexAttribIFormat;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXATTRIBIFORMATPROC
__glewVertexAttribIFormatNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXATTRIBIFORMATNVPROC __glewVertexAttribIFormatNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXATTRIBIFORMATNVPROC
__glewVertexAttribIPointer	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXATTRIBIPOINTERPROC __glewVertexAttribIPointer;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXATTRIBIPOINTERPROC
__glewVertexAttribIPointerEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXATTRIBIPOINTEREXTPROC __glewVertexAttribIPointerEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXATTRIBIPOINTEREXTPROC
__glewVertexAttribL1d	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXATTRIBL1DPROC __glewVertexAttribL1d;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXATTRIBL1DPROC
__glewVertexAttribL1dEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXATTRIBL1DEXTPROC __glewVertexAttribL1dEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXATTRIBL1DEXTPROC
__glewVertexAttribL1dv	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXATTRIBL1DVPROC __glewVertexAttribL1dv;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXATTRIBL1DVPROC
__glewVertexAttribL1dvEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXATTRIBL1DVEXTPROC __glewVertexAttribL1dvEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXATTRIBL1DVEXTPROC
__glewVertexAttribL1i64NV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXATTRIBL1I64NVPROC __glewVertexAttribL1i64NV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXATTRIBL1I64NVPROC
__glewVertexAttribL1i64vNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXATTRIBL1I64VNVPROC __glewVertexAttribL1i64vNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXATTRIBL1I64VNVPROC
__glewVertexAttribL1ui64ARB	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXATTRIBL1UI64ARBPROC __glewVertexAttribL1ui64ARB;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXATTRIBL1UI64ARBPROC
__glewVertexAttribL1ui64NV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXATTRIBL1UI64NVPROC __glewVertexAttribL1ui64NV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXATTRIBL1UI64NVPROC
__glewVertexAttribL1ui64vARB	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXATTRIBL1UI64VARBPROC __glewVertexAttribL1ui64vARB;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXATTRIBL1UI64VARBPROC
__glewVertexAttribL1ui64vNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXATTRIBL1UI64VNVPROC __glewVertexAttribL1ui64vNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXATTRIBL1UI64VNVPROC
__glewVertexAttribL2d	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXATTRIBL2DPROC __glewVertexAttribL2d;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXATTRIBL2DPROC
__glewVertexAttribL2dEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXATTRIBL2DEXTPROC __glewVertexAttribL2dEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXATTRIBL2DEXTPROC
__glewVertexAttribL2dv	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXATTRIBL2DVPROC __glewVertexAttribL2dv;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXATTRIBL2DVPROC
__glewVertexAttribL2dvEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXATTRIBL2DVEXTPROC __glewVertexAttribL2dvEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXATTRIBL2DVEXTPROC
__glewVertexAttribL2i64NV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXATTRIBL2I64NVPROC __glewVertexAttribL2i64NV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXATTRIBL2I64NVPROC
__glewVertexAttribL2i64vNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXATTRIBL2I64VNVPROC __glewVertexAttribL2i64vNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXATTRIBL2I64VNVPROC
__glewVertexAttribL2ui64NV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXATTRIBL2UI64NVPROC __glewVertexAttribL2ui64NV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXATTRIBL2UI64NVPROC
__glewVertexAttribL2ui64vNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXATTRIBL2UI64VNVPROC __glewVertexAttribL2ui64vNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXATTRIBL2UI64VNVPROC
__glewVertexAttribL3d	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXATTRIBL3DPROC __glewVertexAttribL3d;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXATTRIBL3DPROC
__glewVertexAttribL3dEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXATTRIBL3DEXTPROC __glewVertexAttribL3dEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXATTRIBL3DEXTPROC
__glewVertexAttribL3dv	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXATTRIBL3DVPROC __glewVertexAttribL3dv;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXATTRIBL3DVPROC
__glewVertexAttribL3dvEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXATTRIBL3DVEXTPROC __glewVertexAttribL3dvEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXATTRIBL3DVEXTPROC
__glewVertexAttribL3i64NV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXATTRIBL3I64NVPROC __glewVertexAttribL3i64NV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXATTRIBL3I64NVPROC
__glewVertexAttribL3i64vNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXATTRIBL3I64VNVPROC __glewVertexAttribL3i64vNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXATTRIBL3I64VNVPROC
__glewVertexAttribL3ui64NV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXATTRIBL3UI64NVPROC __glewVertexAttribL3ui64NV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXATTRIBL3UI64NVPROC
__glewVertexAttribL3ui64vNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXATTRIBL3UI64VNVPROC __glewVertexAttribL3ui64vNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXATTRIBL3UI64VNVPROC
__glewVertexAttribL4d	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXATTRIBL4DPROC __glewVertexAttribL4d;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXATTRIBL4DPROC
__glewVertexAttribL4dEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXATTRIBL4DEXTPROC __glewVertexAttribL4dEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXATTRIBL4DEXTPROC
__glewVertexAttribL4dv	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXATTRIBL4DVPROC __glewVertexAttribL4dv;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXATTRIBL4DVPROC
__glewVertexAttribL4dvEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXATTRIBL4DVEXTPROC __glewVertexAttribL4dvEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXATTRIBL4DVEXTPROC
__glewVertexAttribL4i64NV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXATTRIBL4I64NVPROC __glewVertexAttribL4i64NV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXATTRIBL4I64NVPROC
__glewVertexAttribL4i64vNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXATTRIBL4I64VNVPROC __glewVertexAttribL4i64vNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXATTRIBL4I64VNVPROC
__glewVertexAttribL4ui64NV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXATTRIBL4UI64NVPROC __glewVertexAttribL4ui64NV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXATTRIBL4UI64NVPROC
__glewVertexAttribL4ui64vNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXATTRIBL4UI64VNVPROC __glewVertexAttribL4ui64vNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXATTRIBL4UI64VNVPROC
__glewVertexAttribLFormat	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXATTRIBLFORMATPROC __glewVertexAttribLFormat;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXATTRIBLFORMATPROC
__glewVertexAttribLFormatNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXATTRIBLFORMATNVPROC __glewVertexAttribLFormatNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXATTRIBLFORMATNVPROC
__glewVertexAttribLPointer	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXATTRIBLPOINTERPROC __glewVertexAttribLPointer;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXATTRIBLPOINTERPROC
__glewVertexAttribLPointerEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXATTRIBLPOINTEREXTPROC __glewVertexAttribLPointerEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXATTRIBLPOINTEREXTPROC
__glewVertexAttribP1ui	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXATTRIBP1UIPROC __glewVertexAttribP1ui;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXATTRIBP1UIPROC
__glewVertexAttribP1uiv	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXATTRIBP1UIVPROC __glewVertexAttribP1uiv;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXATTRIBP1UIVPROC
__glewVertexAttribP2ui	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXATTRIBP2UIPROC __glewVertexAttribP2ui;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXATTRIBP2UIPROC
__glewVertexAttribP2uiv	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXATTRIBP2UIVPROC __glewVertexAttribP2uiv;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXATTRIBP2UIVPROC
__glewVertexAttribP3ui	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXATTRIBP3UIPROC __glewVertexAttribP3ui;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXATTRIBP3UIPROC
__glewVertexAttribP3uiv	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXATTRIBP3UIVPROC __glewVertexAttribP3uiv;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXATTRIBP3UIVPROC
__glewVertexAttribP4ui	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXATTRIBP4UIPROC __glewVertexAttribP4ui;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXATTRIBP4UIPROC
__glewVertexAttribP4uiv	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXATTRIBP4UIVPROC __glewVertexAttribP4uiv;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXATTRIBP4UIVPROC
__glewVertexAttribParameteriAMD	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXATTRIBPARAMETERIAMDPROC __glewVertexAttribParameteriAMD;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXATTRIBPARAMETERIAMDPROC
__glewVertexAttribPointer	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXATTRIBPOINTERPROC __glewVertexAttribPointer;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXATTRIBPOINTERPROC
__glewVertexAttribPointerARB	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXATTRIBPOINTERARBPROC __glewVertexAttribPointerARB;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXATTRIBPOINTERARBPROC
__glewVertexAttribPointerNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXATTRIBPOINTERNVPROC __glewVertexAttribPointerNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXATTRIBPOINTERNVPROC
__glewVertexAttribs1dvNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXATTRIBS1DVNVPROC __glewVertexAttribs1dvNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXATTRIBS1DVNVPROC
__glewVertexAttribs1fvNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXATTRIBS1FVNVPROC __glewVertexAttribs1fvNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXATTRIBS1FVNVPROC
__glewVertexAttribs1hvNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXATTRIBS1HVNVPROC __glewVertexAttribs1hvNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXATTRIBS1HVNVPROC
__glewVertexAttribs1svNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXATTRIBS1SVNVPROC __glewVertexAttribs1svNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXATTRIBS1SVNVPROC
__glewVertexAttribs2dvNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXATTRIBS2DVNVPROC __glewVertexAttribs2dvNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXATTRIBS2DVNVPROC
__glewVertexAttribs2fvNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXATTRIBS2FVNVPROC __glewVertexAttribs2fvNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXATTRIBS2FVNVPROC
__glewVertexAttribs2hvNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXATTRIBS2HVNVPROC __glewVertexAttribs2hvNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXATTRIBS2HVNVPROC
__glewVertexAttribs2svNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXATTRIBS2SVNVPROC __glewVertexAttribs2svNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXATTRIBS2SVNVPROC
__glewVertexAttribs3dvNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXATTRIBS3DVNVPROC __glewVertexAttribs3dvNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXATTRIBS3DVNVPROC
__glewVertexAttribs3fvNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXATTRIBS3FVNVPROC __glewVertexAttribs3fvNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXATTRIBS3FVNVPROC
__glewVertexAttribs3hvNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXATTRIBS3HVNVPROC __glewVertexAttribs3hvNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXATTRIBS3HVNVPROC
__glewVertexAttribs3svNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXATTRIBS3SVNVPROC __glewVertexAttribs3svNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXATTRIBS3SVNVPROC
__glewVertexAttribs4dvNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXATTRIBS4DVNVPROC __glewVertexAttribs4dvNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXATTRIBS4DVNVPROC
__glewVertexAttribs4fvNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXATTRIBS4FVNVPROC __glewVertexAttribs4fvNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXATTRIBS4FVNVPROC
__glewVertexAttribs4hvNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXATTRIBS4HVNVPROC __glewVertexAttribs4hvNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXATTRIBS4HVNVPROC
__glewVertexAttribs4svNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXATTRIBS4SVNVPROC __glewVertexAttribs4svNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXATTRIBS4SVNVPROC
__glewVertexAttribs4ubvNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXATTRIBS4UBVNVPROC __glewVertexAttribs4ubvNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXATTRIBS4UBVNVPROC
__glewVertexBindingDivisor	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXBINDINGDIVISORPROC __glewVertexBindingDivisor;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXBINDINGDIVISORPROC
__glewVertexBlendARB	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXBLENDARBPROC __glewVertexBlendARB;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXBLENDARBPROC
__glewVertexBlendEnvfATI	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXBLENDENVFATIPROC __glewVertexBlendEnvfATI;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXBLENDENVFATIPROC
__glewVertexBlendEnviATI	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXBLENDENVIATIPROC __glewVertexBlendEnviATI;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXBLENDENVIATIPROC
__glewVertexFormatNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXFORMATNVPROC __glewVertexFormatNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXFORMATNVPROC
__glewVertexP2ui	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXP2UIPROC __glewVertexP2ui;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXP2UIPROC
__glewVertexP2uiv	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXP2UIVPROC __glewVertexP2uiv;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXP2UIVPROC
__glewVertexP3ui	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXP3UIPROC __glewVertexP3ui;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXP3UIPROC
__glewVertexP3uiv	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXP3UIVPROC __glewVertexP3uiv;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXP3UIVPROC
__glewVertexP4ui	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXP4UIPROC __glewVertexP4ui;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXP4UIPROC
__glewVertexP4uiv	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXP4UIVPROC __glewVertexP4uiv;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXP4UIVPROC
__glewVertexPointerEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXPOINTEREXTPROC __glewVertexPointerEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXPOINTEREXTPROC
__glewVertexPointerListIBM	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXPOINTERLISTIBMPROC __glewVertexPointerListIBM;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXPOINTERLISTIBMPROC
__glewVertexPointervINTEL	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXPOINTERVINTELPROC __glewVertexPointervINTEL;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXPOINTERVINTELPROC
__glewVertexStream1dATI	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXSTREAM1DATIPROC __glewVertexStream1dATI;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXSTREAM1DATIPROC
__glewVertexStream1dvATI	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXSTREAM1DVATIPROC __glewVertexStream1dvATI;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXSTREAM1DVATIPROC
__glewVertexStream1fATI	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXSTREAM1FATIPROC __glewVertexStream1fATI;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXSTREAM1FATIPROC
__glewVertexStream1fvATI	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXSTREAM1FVATIPROC __glewVertexStream1fvATI;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXSTREAM1FVATIPROC
__glewVertexStream1iATI	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXSTREAM1IATIPROC __glewVertexStream1iATI;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXSTREAM1IATIPROC
__glewVertexStream1ivATI	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXSTREAM1IVATIPROC __glewVertexStream1ivATI;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXSTREAM1IVATIPROC
__glewVertexStream1sATI	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXSTREAM1SATIPROC __glewVertexStream1sATI;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXSTREAM1SATIPROC
__glewVertexStream1svATI	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXSTREAM1SVATIPROC __glewVertexStream1svATI;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXSTREAM1SVATIPROC
__glewVertexStream2dATI	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXSTREAM2DATIPROC __glewVertexStream2dATI;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXSTREAM2DATIPROC
__glewVertexStream2dvATI	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXSTREAM2DVATIPROC __glewVertexStream2dvATI;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXSTREAM2DVATIPROC
__glewVertexStream2fATI	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXSTREAM2FATIPROC __glewVertexStream2fATI;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXSTREAM2FATIPROC
__glewVertexStream2fvATI	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXSTREAM2FVATIPROC __glewVertexStream2fvATI;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXSTREAM2FVATIPROC
__glewVertexStream2iATI	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXSTREAM2IATIPROC __glewVertexStream2iATI;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXSTREAM2IATIPROC
__glewVertexStream2ivATI	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXSTREAM2IVATIPROC __glewVertexStream2ivATI;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXSTREAM2IVATIPROC
__glewVertexStream2sATI	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXSTREAM2SATIPROC __glewVertexStream2sATI;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXSTREAM2SATIPROC
__glewVertexStream2svATI	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXSTREAM2SVATIPROC __glewVertexStream2svATI;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXSTREAM2SVATIPROC
__glewVertexStream3dATI	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXSTREAM3DATIPROC __glewVertexStream3dATI;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXSTREAM3DATIPROC
__glewVertexStream3dvATI	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXSTREAM3DVATIPROC __glewVertexStream3dvATI;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXSTREAM3DVATIPROC
__glewVertexStream3fATI	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXSTREAM3FATIPROC __glewVertexStream3fATI;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXSTREAM3FATIPROC
__glewVertexStream3fvATI	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXSTREAM3FVATIPROC __glewVertexStream3fvATI;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXSTREAM3FVATIPROC
__glewVertexStream3iATI	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXSTREAM3IATIPROC __glewVertexStream3iATI;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXSTREAM3IATIPROC
__glewVertexStream3ivATI	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXSTREAM3IVATIPROC __glewVertexStream3ivATI;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXSTREAM3IVATIPROC
__glewVertexStream3sATI	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXSTREAM3SATIPROC __glewVertexStream3sATI;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXSTREAM3SATIPROC
__glewVertexStream3svATI	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXSTREAM3SVATIPROC __glewVertexStream3svATI;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXSTREAM3SVATIPROC
__glewVertexStream4dATI	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXSTREAM4DATIPROC __glewVertexStream4dATI;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXSTREAM4DATIPROC
__glewVertexStream4dvATI	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXSTREAM4DVATIPROC __glewVertexStream4dvATI;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXSTREAM4DVATIPROC
__glewVertexStream4fATI	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXSTREAM4FATIPROC __glewVertexStream4fATI;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXSTREAM4FATIPROC
__glewVertexStream4fvATI	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXSTREAM4FVATIPROC __glewVertexStream4fvATI;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXSTREAM4FVATIPROC
__glewVertexStream4iATI	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXSTREAM4IATIPROC __glewVertexStream4iATI;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXSTREAM4IATIPROC
__glewVertexStream4ivATI	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXSTREAM4IVATIPROC __glewVertexStream4ivATI;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXSTREAM4IVATIPROC
__glewVertexStream4sATI	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXSTREAM4SATIPROC __glewVertexStream4sATI;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXSTREAM4SATIPROC
__glewVertexStream4svATI	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXSTREAM4SVATIPROC __glewVertexStream4svATI;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXSTREAM4SVATIPROC
__glewVertexWeightPointerEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXWEIGHTPOINTEREXTPROC __glewVertexWeightPointerEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXWEIGHTPOINTEREXTPROC
__glewVertexWeightfEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXWEIGHTFEXTPROC __glewVertexWeightfEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXWEIGHTFEXTPROC
__glewVertexWeightfvEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXWEIGHTFVEXTPROC __glewVertexWeightfvEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXWEIGHTFVEXTPROC
__glewVertexWeighthNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXWEIGHTHNVPROC __glewVertexWeighthNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXWEIGHTHNVPROC
__glewVertexWeighthvNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLVERTEXWEIGHTHVNVPROC __glewVertexWeighthvNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLVERTEXWEIGHTHVNVPROC
__glewVideoCaptureNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLVIDEOCAPTURENVPROC __glewVideoCaptureNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLVIDEOCAPTURENVPROC
__glewVideoCaptureStreamParameterdvNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLVIDEOCAPTURESTREAMPARAMETERDVNVPROC __glewVideoCaptureStreamParameterdvNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLVIDEOCAPTURESTREAMPARAMETERDVNVPROC
__glewVideoCaptureStreamParameterfvNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLVIDEOCAPTURESTREAMPARAMETERFVNVPROC __glewVideoCaptureStreamParameterfvNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLVIDEOCAPTURESTREAMPARAMETERFVNVPROC
__glewVideoCaptureStreamParameterivNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLVIDEOCAPTURESTREAMPARAMETERIVNVPROC __glewVideoCaptureStreamParameterivNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLVIDEOCAPTURESTREAMPARAMETERIVNVPROC
__glewViewportArrayv	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLVIEWPORTARRAYVPROC __glewViewportArrayv;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLVIEWPORTARRAYVPROC
__glewViewportArrayvNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLVIEWPORTARRAYVNVPROC __glewViewportArrayvNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLVIEWPORTARRAYVNVPROC
__glewViewportIndexedf	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLVIEWPORTINDEXEDFPROC __glewViewportIndexedf;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLVIEWPORTINDEXEDFPROC
__glewViewportIndexedfNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLVIEWPORTINDEXEDFNVPROC __glewViewportIndexedfNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLVIEWPORTINDEXEDFNVPROC
__glewViewportIndexedfv	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLVIEWPORTINDEXEDFVPROC __glewViewportIndexedfv;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLVIEWPORTINDEXEDFVPROC
__glewViewportIndexedfvNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLVIEWPORTINDEXEDFVNVPROC __glewViewportIndexedfvNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLVIEWPORTINDEXEDFVNVPROC
__glewViewportPositionWScaleNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLVIEWPORTPOSITIONWSCALENVPROC __glewViewportPositionWScaleNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLVIEWPORTPOSITIONWSCALENVPROC
__glewViewportSwizzleNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLVIEWPORTSWIZZLENVPROC __glewViewportSwizzleNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLVIEWPORTSWIZZLENVPROC
__glewWaitSemaphoreEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLWAITSEMAPHOREEXTPROC __glewWaitSemaphoreEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLWAITSEMAPHOREEXTPROC
__glewWaitSemaphoreui64NVX	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLWAITSEMAPHOREUI64NVXPROC __glewWaitSemaphoreui64NVX;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLWAITSEMAPHOREUI64NVXPROC
__glewWaitSync	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLWAITSYNCPROC __glewWaitSync;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLWAITSYNCPROC
__glewWaitSyncAPPLE	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLWAITSYNCAPPLEPROC __glewWaitSyncAPPLE;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLWAITSYNCAPPLEPROC
__glewWaitVkSemaphoreNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLWAITVKSEMAPHORENVPROC __glewWaitVkSemaphoreNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLWAITVKSEMAPHORENVPROC
__glewWeightPathsNV	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLWEIGHTPATHSNVPROC __glewWeightPathsNV;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLWEIGHTPATHSNVPROC
__glewWeightPointerARB	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLWEIGHTPOINTERARBPROC __glewWeightPointerARB;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLWEIGHTPOINTERARBPROC
__glewWeightPointerOES	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLWEIGHTPOINTEROESPROC __glewWeightPointerOES;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLWEIGHTPOINTEROESPROC
__glewWeightbvARB	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLWEIGHTBVARBPROC __glewWeightbvARB;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLWEIGHTBVARBPROC
__glewWeightdvARB	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLWEIGHTDVARBPROC __glewWeightdvARB;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLWEIGHTDVARBPROC
__glewWeightfvARB	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLWEIGHTFVARBPROC __glewWeightfvARB;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLWEIGHTFVARBPROC
__glewWeightivARB	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLWEIGHTIVARBPROC __glewWeightivARB;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLWEIGHTIVARBPROC
__glewWeightsvARB	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLWEIGHTSVARBPROC __glewWeightsvARB;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLWEIGHTSVARBPROC
__glewWeightubvARB	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLWEIGHTUBVARBPROC __glewWeightubvARB;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLWEIGHTUBVARBPROC
__glewWeightuivARB	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLWEIGHTUIVARBPROC __glewWeightuivARB;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLWEIGHTUIVARBPROC
__glewWeightusvARB	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLWEIGHTUSVARBPROC __glewWeightusvARB;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLWEIGHTUSVARBPROC
__glewWindowPos2d	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLWINDOWPOS2DPROC __glewWindowPos2d;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLWINDOWPOS2DPROC
__glewWindowPos2dARB	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLWINDOWPOS2DARBPROC __glewWindowPos2dARB;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLWINDOWPOS2DARBPROC
__glewWindowPos2dMESA	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLWINDOWPOS2DMESAPROC __glewWindowPos2dMESA;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLWINDOWPOS2DMESAPROC
__glewWindowPos2dv	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLWINDOWPOS2DVPROC __glewWindowPos2dv;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLWINDOWPOS2DVPROC
__glewWindowPos2dvARB	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLWINDOWPOS2DVARBPROC __glewWindowPos2dvARB;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLWINDOWPOS2DVARBPROC
__glewWindowPos2dvMESA	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLWINDOWPOS2DVMESAPROC __glewWindowPos2dvMESA;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLWINDOWPOS2DVMESAPROC
__glewWindowPos2f	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLWINDOWPOS2FPROC __glewWindowPos2f;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLWINDOWPOS2FPROC
__glewWindowPos2fARB	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLWINDOWPOS2FARBPROC __glewWindowPos2fARB;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLWINDOWPOS2FARBPROC
__glewWindowPos2fMESA	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLWINDOWPOS2FMESAPROC __glewWindowPos2fMESA;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLWINDOWPOS2FMESAPROC
__glewWindowPos2fv	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLWINDOWPOS2FVPROC __glewWindowPos2fv;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLWINDOWPOS2FVPROC
__glewWindowPos2fvARB	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLWINDOWPOS2FVARBPROC __glewWindowPos2fvARB;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLWINDOWPOS2FVARBPROC
__glewWindowPos2fvMESA	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLWINDOWPOS2FVMESAPROC __glewWindowPos2fvMESA;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLWINDOWPOS2FVMESAPROC
__glewWindowPos2i	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLWINDOWPOS2IPROC __glewWindowPos2i;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLWINDOWPOS2IPROC
__glewWindowPos2iARB	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLWINDOWPOS2IARBPROC __glewWindowPos2iARB;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLWINDOWPOS2IARBPROC
__glewWindowPos2iMESA	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLWINDOWPOS2IMESAPROC __glewWindowPos2iMESA;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLWINDOWPOS2IMESAPROC
__glewWindowPos2iv	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLWINDOWPOS2IVPROC __glewWindowPos2iv;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLWINDOWPOS2IVPROC
__glewWindowPos2ivARB	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLWINDOWPOS2IVARBPROC __glewWindowPos2ivARB;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLWINDOWPOS2IVARBPROC
__glewWindowPos2ivMESA	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLWINDOWPOS2IVMESAPROC __glewWindowPos2ivMESA;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLWINDOWPOS2IVMESAPROC
__glewWindowPos2s	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLWINDOWPOS2SPROC __glewWindowPos2s;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLWINDOWPOS2SPROC
__glewWindowPos2sARB	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLWINDOWPOS2SARBPROC __glewWindowPos2sARB;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLWINDOWPOS2SARBPROC
__glewWindowPos2sMESA	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLWINDOWPOS2SMESAPROC __glewWindowPos2sMESA;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLWINDOWPOS2SMESAPROC
__glewWindowPos2sv	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLWINDOWPOS2SVPROC __glewWindowPos2sv;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLWINDOWPOS2SVPROC
__glewWindowPos2svARB	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLWINDOWPOS2SVARBPROC __glewWindowPos2svARB;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLWINDOWPOS2SVARBPROC
__glewWindowPos2svMESA	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLWINDOWPOS2SVMESAPROC __glewWindowPos2svMESA;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLWINDOWPOS2SVMESAPROC
__glewWindowPos3d	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLWINDOWPOS3DPROC __glewWindowPos3d;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLWINDOWPOS3DPROC
__glewWindowPos3dARB	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLWINDOWPOS3DARBPROC __glewWindowPos3dARB;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLWINDOWPOS3DARBPROC
__glewWindowPos3dMESA	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLWINDOWPOS3DMESAPROC __glewWindowPos3dMESA;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLWINDOWPOS3DMESAPROC
__glewWindowPos3dv	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLWINDOWPOS3DVPROC __glewWindowPos3dv;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLWINDOWPOS3DVPROC
__glewWindowPos3dvARB	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLWINDOWPOS3DVARBPROC __glewWindowPos3dvARB;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLWINDOWPOS3DVARBPROC
__glewWindowPos3dvMESA	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLWINDOWPOS3DVMESAPROC __glewWindowPos3dvMESA;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLWINDOWPOS3DVMESAPROC
__glewWindowPos3f	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLWINDOWPOS3FPROC __glewWindowPos3f;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLWINDOWPOS3FPROC
__glewWindowPos3fARB	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLWINDOWPOS3FARBPROC __glewWindowPos3fARB;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLWINDOWPOS3FARBPROC
__glewWindowPos3fMESA	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLWINDOWPOS3FMESAPROC __glewWindowPos3fMESA;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLWINDOWPOS3FMESAPROC
__glewWindowPos3fv	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLWINDOWPOS3FVPROC __glewWindowPos3fv;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLWINDOWPOS3FVPROC
__glewWindowPos3fvARB	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLWINDOWPOS3FVARBPROC __glewWindowPos3fvARB;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLWINDOWPOS3FVARBPROC
__glewWindowPos3fvMESA	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLWINDOWPOS3FVMESAPROC __glewWindowPos3fvMESA;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLWINDOWPOS3FVMESAPROC
__glewWindowPos3i	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLWINDOWPOS3IPROC __glewWindowPos3i;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLWINDOWPOS3IPROC
__glewWindowPos3iARB	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLWINDOWPOS3IARBPROC __glewWindowPos3iARB;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLWINDOWPOS3IARBPROC
__glewWindowPos3iMESA	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLWINDOWPOS3IMESAPROC __glewWindowPos3iMESA;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLWINDOWPOS3IMESAPROC
__glewWindowPos3iv	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLWINDOWPOS3IVPROC __glewWindowPos3iv;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLWINDOWPOS3IVPROC
__glewWindowPos3ivARB	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLWINDOWPOS3IVARBPROC __glewWindowPos3ivARB;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLWINDOWPOS3IVARBPROC
__glewWindowPos3ivMESA	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLWINDOWPOS3IVMESAPROC __glewWindowPos3ivMESA;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLWINDOWPOS3IVMESAPROC
__glewWindowPos3s	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLWINDOWPOS3SPROC __glewWindowPos3s;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLWINDOWPOS3SPROC
__glewWindowPos3sARB	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLWINDOWPOS3SARBPROC __glewWindowPos3sARB;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLWINDOWPOS3SARBPROC
__glewWindowPos3sMESA	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLWINDOWPOS3SMESAPROC __glewWindowPos3sMESA;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLWINDOWPOS3SMESAPROC
__glewWindowPos3sv	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLWINDOWPOS3SVPROC __glewWindowPos3sv;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLWINDOWPOS3SVPROC
__glewWindowPos3svARB	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLWINDOWPOS3SVARBPROC __glewWindowPos3svARB;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLWINDOWPOS3SVARBPROC
__glewWindowPos3svMESA	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLWINDOWPOS3SVMESAPROC __glewWindowPos3svMESA;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLWINDOWPOS3SVMESAPROC
__glewWindowPos4dMESA	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLWINDOWPOS4DMESAPROC __glewWindowPos4dMESA;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLWINDOWPOS4DMESAPROC
__glewWindowPos4dvMESA	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLWINDOWPOS4DVMESAPROC __glewWindowPos4dvMESA;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLWINDOWPOS4DVMESAPROC
__glewWindowPos4fMESA	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLWINDOWPOS4FMESAPROC __glewWindowPos4fMESA;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLWINDOWPOS4FMESAPROC
__glewWindowPos4fvMESA	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLWINDOWPOS4FVMESAPROC __glewWindowPos4fvMESA;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLWINDOWPOS4FVMESAPROC
__glewWindowPos4iMESA	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLWINDOWPOS4IMESAPROC __glewWindowPos4iMESA;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLWINDOWPOS4IMESAPROC
__glewWindowPos4ivMESA	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLWINDOWPOS4IVMESAPROC __glewWindowPos4ivMESA;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLWINDOWPOS4IVMESAPROC
__glewWindowPos4sMESA	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLWINDOWPOS4SMESAPROC __glewWindowPos4sMESA;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLWINDOWPOS4SMESAPROC
__glewWindowPos4svMESA	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLWINDOWPOS4SVMESAPROC __glewWindowPos4svMESA;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLWINDOWPOS4SVMESAPROC
__glewWindowRectanglesEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLWINDOWRECTANGLESEXTPROC __glewWindowRectanglesEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLWINDOWRECTANGLESEXTPROC
__glewWriteMaskEXT	./GL/glew.h	/^GLEW_FUN_EXPORT PFNGLWRITEMASKEXTPROC __glewWriteMaskEXT;$/;"	v	typeref:typename:GLEW_FUN_EXPORT PFNGLWRITEMASKEXTPROC
__glewXAllocateMemoryNV	./GL/glxew.h	/^GLXEW_FUN_EXPORT PFNGLXALLOCATEMEMORYNVPROC __glewXAllocateMemoryNV;$/;"	v	typeref:typename:GLXEW_FUN_EXPORT PFNGLXALLOCATEMEMORYNVPROC
__glewXBindChannelToWindowSGIX	./GL/glxew.h	/^GLXEW_FUN_EXPORT PFNGLXBINDCHANNELTOWINDOWSGIXPROC __glewXBindChannelToWindowSGIX;$/;"	v	typeref:typename:GLXEW_FUN_EXPORT PFNGLXBINDCHANNELTOWINDOWSGIXPROC
__glewXBindHyperpipeSGIX	./GL/glxew.h	/^GLXEW_FUN_EXPORT PFNGLXBINDHYPERPIPESGIXPROC __glewXBindHyperpipeSGIX;$/;"	v	typeref:typename:GLXEW_FUN_EXPORT PFNGLXBINDHYPERPIPESGIXPROC
__glewXBindSwapBarrierNV	./GL/glxew.h	/^GLXEW_FUN_EXPORT PFNGLXBINDSWAPBARRIERNVPROC __glewXBindSwapBarrierNV;$/;"	v	typeref:typename:GLXEW_FUN_EXPORT PFNGLXBINDSWAPBARRIERNVPROC
__glewXBindSwapBarrierSGIX	./GL/glxew.h	/^GLXEW_FUN_EXPORT PFNGLXBINDSWAPBARRIERSGIXPROC __glewXBindSwapBarrierSGIX;$/;"	v	typeref:typename:GLXEW_FUN_EXPORT PFNGLXBINDSWAPBARRIERSGIXPROC
__glewXBindTexImageATI	./GL/glxew.h	/^GLXEW_FUN_EXPORT PFNGLXBINDTEXIMAGEATIPROC __glewXBindTexImageATI;$/;"	v	typeref:typename:GLXEW_FUN_EXPORT PFNGLXBINDTEXIMAGEATIPROC
__glewXBindTexImageEXT	./GL/glxew.h	/^GLXEW_FUN_EXPORT PFNGLXBINDTEXIMAGEEXTPROC __glewXBindTexImageEXT;$/;"	v	typeref:typename:GLXEW_FUN_EXPORT PFNGLXBINDTEXIMAGEEXTPROC
__glewXBindVideoCaptureDeviceNV	./GL/glxew.h	/^GLXEW_FUN_EXPORT PFNGLXBINDVIDEOCAPTUREDEVICENVPROC __glewXBindVideoCaptureDeviceNV;$/;"	v	typeref:typename:GLXEW_FUN_EXPORT PFNGLXBINDVIDEOCAPTUREDEVICENVPROC
__glewXBindVideoDeviceNV	./GL/glxew.h	/^GLXEW_FUN_EXPORT PFNGLXBINDVIDEODEVICENVPROC __glewXBindVideoDeviceNV;$/;"	v	typeref:typename:GLXEW_FUN_EXPORT PFNGLXBINDVIDEODEVICENVPROC
__glewXBindVideoImageNV	./GL/glxew.h	/^GLXEW_FUN_EXPORT PFNGLXBINDVIDEOIMAGENVPROC __glewXBindVideoImageNV;$/;"	v	typeref:typename:GLXEW_FUN_EXPORT PFNGLXBINDVIDEOIMAGENVPROC
__glewXBlitContextFramebufferAMD	./GL/glxew.h	/^GLXEW_FUN_EXPORT PFNGLXBLITCONTEXTFRAMEBUFFERAMDPROC __glewXBlitContextFramebufferAMD;$/;"	v	typeref:typename:GLXEW_FUN_EXPORT PFNGLXBLITCONTEXTFRAMEBUFFERAMDPROC
__glewXChannelRectSGIX	./GL/glxew.h	/^GLXEW_FUN_EXPORT PFNGLXCHANNELRECTSGIXPROC __glewXChannelRectSGIX;$/;"	v	typeref:typename:GLXEW_FUN_EXPORT PFNGLXCHANNELRECTSGIXPROC
__glewXChannelRectSyncSGIX	./GL/glxew.h	/^GLXEW_FUN_EXPORT PFNGLXCHANNELRECTSYNCSGIXPROC __glewXChannelRectSyncSGIX;$/;"	v	typeref:typename:GLXEW_FUN_EXPORT PFNGLXCHANNELRECTSYNCSGIXPROC
__glewXChooseFBConfig	./GL/glxew.h	/^GLXEW_FUN_EXPORT PFNGLXCHOOSEFBCONFIGPROC __glewXChooseFBConfig;$/;"	v	typeref:typename:GLXEW_FUN_EXPORT PFNGLXCHOOSEFBCONFIGPROC
__glewXChooseFBConfigSGIX	./GL/glxew.h	/^GLXEW_FUN_EXPORT PFNGLXCHOOSEFBCONFIGSGIXPROC __glewXChooseFBConfigSGIX;$/;"	v	typeref:typename:GLXEW_FUN_EXPORT PFNGLXCHOOSEFBCONFIGSGIXPROC
__glewXCopyBufferSubDataNV	./GL/glxew.h	/^GLXEW_FUN_EXPORT PFNGLXCOPYBUFFERSUBDATANVPROC __glewXCopyBufferSubDataNV;$/;"	v	typeref:typename:GLXEW_FUN_EXPORT PFNGLXCOPYBUFFERSUBDATANVPROC
__glewXCopyImageSubDataNV	./GL/glxew.h	/^GLXEW_FUN_EXPORT PFNGLXCOPYIMAGESUBDATANVPROC __glewXCopyImageSubDataNV;$/;"	v	typeref:typename:GLXEW_FUN_EXPORT PFNGLXCOPYIMAGESUBDATANVPROC
__glewXCopySubBufferMESA	./GL/glxew.h	/^GLXEW_FUN_EXPORT PFNGLXCOPYSUBBUFFERMESAPROC __glewXCopySubBufferMESA;$/;"	v	typeref:typename:GLXEW_FUN_EXPORT PFNGLXCOPYSUBBUFFERMESAPROC
__glewXCreateAssociatedContextAMD	./GL/glxew.h	/^GLXEW_FUN_EXPORT PFNGLXCREATEASSOCIATEDCONTEXTAMDPROC __glewXCreateAssociatedContextAMD;$/;"	v	typeref:typename:GLXEW_FUN_EXPORT PFNGLXCREATEASSOCIATEDCONTEXTAMDPROC
__glewXCreateAssociatedContextAttribsAMD	./GL/glxew.h	/^GLXEW_FUN_EXPORT PFNGLXCREATEASSOCIATEDCONTEXTATTRIBSAMDPROC __glewXCreateAssociatedContextAttri/;"	v	typeref:typename:GLXEW_FUN_EXPORT PFNGLXCREATEASSOCIATEDCONTEXTATTRIBSAMDPROC
__glewXCreateContextAttribsARB	./GL/glxew.h	/^GLXEW_FUN_EXPORT PFNGLXCREATECONTEXTATTRIBSARBPROC __glewXCreateContextAttribsARB;$/;"	v	typeref:typename:GLXEW_FUN_EXPORT PFNGLXCREATECONTEXTATTRIBSARBPROC
__glewXCreateContextWithConfigSGIX	./GL/glxew.h	/^GLXEW_FUN_EXPORT PFNGLXCREATECONTEXTWITHCONFIGSGIXPROC __glewXCreateContextWithConfigSGIX;$/;"	v	typeref:typename:GLXEW_FUN_EXPORT PFNGLXCREATECONTEXTWITHCONFIGSGIXPROC
__glewXCreateGLXPbufferSGIX	./GL/glxew.h	/^GLXEW_FUN_EXPORT PFNGLXCREATEGLXPBUFFERSGIXPROC __glewXCreateGLXPbufferSGIX;$/;"	v	typeref:typename:GLXEW_FUN_EXPORT PFNGLXCREATEGLXPBUFFERSGIXPROC
__glewXCreateGLXPixmapMESA	./GL/glxew.h	/^GLXEW_FUN_EXPORT PFNGLXCREATEGLXPIXMAPMESAPROC __glewXCreateGLXPixmapMESA;$/;"	v	typeref:typename:GLXEW_FUN_EXPORT PFNGLXCREATEGLXPIXMAPMESAPROC
__glewXCreateGLXPixmapWithConfigSGIX	./GL/glxew.h	/^GLXEW_FUN_EXPORT PFNGLXCREATEGLXPIXMAPWITHCONFIGSGIXPROC __glewXCreateGLXPixmapWithConfigSGIX;$/;"	v	typeref:typename:GLXEW_FUN_EXPORT PFNGLXCREATEGLXPIXMAPWITHCONFIGSGIXPROC
__glewXCreateNewContext	./GL/glxew.h	/^GLXEW_FUN_EXPORT PFNGLXCREATENEWCONTEXTPROC __glewXCreateNewContext;$/;"	v	typeref:typename:GLXEW_FUN_EXPORT PFNGLXCREATENEWCONTEXTPROC
__glewXCreatePbuffer	./GL/glxew.h	/^GLXEW_FUN_EXPORT PFNGLXCREATEPBUFFERPROC __glewXCreatePbuffer;$/;"	v	typeref:typename:GLXEW_FUN_EXPORT PFNGLXCREATEPBUFFERPROC
__glewXCreatePixmap	./GL/glxew.h	/^GLXEW_FUN_EXPORT PFNGLXCREATEPIXMAPPROC __glewXCreatePixmap;$/;"	v	typeref:typename:GLXEW_FUN_EXPORT PFNGLXCREATEPIXMAPPROC
__glewXCreateWindow	./GL/glxew.h	/^GLXEW_FUN_EXPORT PFNGLXCREATEWINDOWPROC __glewXCreateWindow;$/;"	v	typeref:typename:GLXEW_FUN_EXPORT PFNGLXCREATEWINDOWPROC
__glewXCushionSGI	./GL/glxew.h	/^GLXEW_FUN_EXPORT PFNGLXCUSHIONSGIPROC __glewXCushionSGI;$/;"	v	typeref:typename:GLXEW_FUN_EXPORT PFNGLXCUSHIONSGIPROC
__glewXDelayBeforeSwapNV	./GL/glxew.h	/^GLXEW_FUN_EXPORT PFNGLXDELAYBEFORESWAPNVPROC __glewXDelayBeforeSwapNV;$/;"	v	typeref:typename:GLXEW_FUN_EXPORT PFNGLXDELAYBEFORESWAPNVPROC
__glewXDeleteAssociatedContextAMD	./GL/glxew.h	/^GLXEW_FUN_EXPORT PFNGLXDELETEASSOCIATEDCONTEXTAMDPROC __glewXDeleteAssociatedContextAMD;$/;"	v	typeref:typename:GLXEW_FUN_EXPORT PFNGLXDELETEASSOCIATEDCONTEXTAMDPROC
__glewXDestroyGLXPbufferSGIX	./GL/glxew.h	/^GLXEW_FUN_EXPORT PFNGLXDESTROYGLXPBUFFERSGIXPROC __glewXDestroyGLXPbufferSGIX;$/;"	v	typeref:typename:GLXEW_FUN_EXPORT PFNGLXDESTROYGLXPBUFFERSGIXPROC
__glewXDestroyHyperpipeConfigSGIX	./GL/glxew.h	/^GLXEW_FUN_EXPORT PFNGLXDESTROYHYPERPIPECONFIGSGIXPROC __glewXDestroyHyperpipeConfigSGIX;$/;"	v	typeref:typename:GLXEW_FUN_EXPORT PFNGLXDESTROYHYPERPIPECONFIGSGIXPROC
__glewXDestroyPbuffer	./GL/glxew.h	/^GLXEW_FUN_EXPORT PFNGLXDESTROYPBUFFERPROC __glewXDestroyPbuffer;$/;"	v	typeref:typename:GLXEW_FUN_EXPORT PFNGLXDESTROYPBUFFERPROC
__glewXDestroyPixmap	./GL/glxew.h	/^GLXEW_FUN_EXPORT PFNGLXDESTROYPIXMAPPROC __glewXDestroyPixmap;$/;"	v	typeref:typename:GLXEW_FUN_EXPORT PFNGLXDESTROYPIXMAPPROC
__glewXDestroyWindow	./GL/glxew.h	/^GLXEW_FUN_EXPORT PFNGLXDESTROYWINDOWPROC __glewXDestroyWindow;$/;"	v	typeref:typename:GLXEW_FUN_EXPORT PFNGLXDESTROYWINDOWPROC
__glewXDrawableAttribATI	./GL/glxew.h	/^GLXEW_FUN_EXPORT PFNGLXDRAWABLEATTRIBATIPROC __glewXDrawableAttribATI;$/;"	v	typeref:typename:GLXEW_FUN_EXPORT PFNGLXDRAWABLEATTRIBATIPROC
__glewXEnumerateVideoCaptureDevicesNV	./GL/glxew.h	/^GLXEW_FUN_EXPORT PFNGLXENUMERATEVIDEOCAPTUREDEVICESNVPROC __glewXEnumerateVideoCaptureDevicesNV;$/;"	v	typeref:typename:GLXEW_FUN_EXPORT PFNGLXENUMERATEVIDEOCAPTUREDEVICESNVPROC
__glewXEnumerateVideoDevicesNV	./GL/glxew.h	/^GLXEW_FUN_EXPORT PFNGLXENUMERATEVIDEODEVICESNVPROC __glewXEnumerateVideoDevicesNV;$/;"	v	typeref:typename:GLXEW_FUN_EXPORT PFNGLXENUMERATEVIDEODEVICESNVPROC
__glewXFreeContextEXT	./GL/glxew.h	/^GLXEW_FUN_EXPORT PFNGLXFREECONTEXTEXTPROC __glewXFreeContextEXT;$/;"	v	typeref:typename:GLXEW_FUN_EXPORT PFNGLXFREECONTEXTEXTPROC
__glewXFreeMemoryNV	./GL/glxew.h	/^GLXEW_FUN_EXPORT PFNGLXFREEMEMORYNVPROC __glewXFreeMemoryNV;$/;"	v	typeref:typename:GLXEW_FUN_EXPORT PFNGLXFREEMEMORYNVPROC
__glewXGetAGPOffsetMESA	./GL/glxew.h	/^GLXEW_FUN_EXPORT PFNGLXGETAGPOFFSETMESAPROC __glewXGetAGPOffsetMESA;$/;"	v	typeref:typename:GLXEW_FUN_EXPORT PFNGLXGETAGPOFFSETMESAPROC
__glewXGetContextGPUIDAMD	./GL/glxew.h	/^GLXEW_FUN_EXPORT PFNGLXGETCONTEXTGPUIDAMDPROC __glewXGetContextGPUIDAMD;$/;"	v	typeref:typename:GLXEW_FUN_EXPORT PFNGLXGETCONTEXTGPUIDAMDPROC
__glewXGetContextIDEXT	./GL/glxew.h	/^GLXEW_FUN_EXPORT PFNGLXGETCONTEXTIDEXTPROC __glewXGetContextIDEXT;$/;"	v	typeref:typename:GLXEW_FUN_EXPORT PFNGLXGETCONTEXTIDEXTPROC
__glewXGetCurrentAssociatedContextAMD	./GL/glxew.h	/^GLXEW_FUN_EXPORT PFNGLXGETCURRENTASSOCIATEDCONTEXTAMDPROC __glewXGetCurrentAssociatedContextAMD;$/;"	v	typeref:typename:GLXEW_FUN_EXPORT PFNGLXGETCURRENTASSOCIATEDCONTEXTAMDPROC
__glewXGetCurrentDisplay	./GL/glxew.h	/^GLXEW_FUN_EXPORT PFNGLXGETCURRENTDISPLAYPROC __glewXGetCurrentDisplay;$/;"	v	typeref:typename:GLXEW_FUN_EXPORT PFNGLXGETCURRENTDISPLAYPROC
__glewXGetCurrentDisplayEXT	./GL/glxew.h	/^GLXEW_FUN_EXPORT PFNGLXGETCURRENTDISPLAYEXTPROC __glewXGetCurrentDisplayEXT;$/;"	v	typeref:typename:GLXEW_FUN_EXPORT PFNGLXGETCURRENTDISPLAYEXTPROC
__glewXGetCurrentReadDrawable	./GL/glxew.h	/^GLXEW_FUN_EXPORT PFNGLXGETCURRENTREADDRAWABLEPROC __glewXGetCurrentReadDrawable;$/;"	v	typeref:typename:GLXEW_FUN_EXPORT PFNGLXGETCURRENTREADDRAWABLEPROC
__glewXGetCurrentReadDrawableSGI	./GL/glxew.h	/^GLXEW_FUN_EXPORT PFNGLXGETCURRENTREADDRAWABLESGIPROC __glewXGetCurrentReadDrawableSGI;$/;"	v	typeref:typename:GLXEW_FUN_EXPORT PFNGLXGETCURRENTREADDRAWABLESGIPROC
__glewXGetFBConfigAttrib	./GL/glxew.h	/^GLXEW_FUN_EXPORT PFNGLXGETFBCONFIGATTRIBPROC __glewXGetFBConfigAttrib;$/;"	v	typeref:typename:GLXEW_FUN_EXPORT PFNGLXGETFBCONFIGATTRIBPROC
__glewXGetFBConfigAttribSGIX	./GL/glxew.h	/^GLXEW_FUN_EXPORT PFNGLXGETFBCONFIGATTRIBSGIXPROC __glewXGetFBConfigAttribSGIX;$/;"	v	typeref:typename:GLXEW_FUN_EXPORT PFNGLXGETFBCONFIGATTRIBSGIXPROC
__glewXGetFBConfigFromVisualSGIX	./GL/glxew.h	/^GLXEW_FUN_EXPORT PFNGLXGETFBCONFIGFROMVISUALSGIXPROC __glewXGetFBConfigFromVisualSGIX;$/;"	v	typeref:typename:GLXEW_FUN_EXPORT PFNGLXGETFBCONFIGFROMVISUALSGIXPROC
__glewXGetFBConfigs	./GL/glxew.h	/^GLXEW_FUN_EXPORT PFNGLXGETFBCONFIGSPROC __glewXGetFBConfigs;$/;"	v	typeref:typename:GLXEW_FUN_EXPORT PFNGLXGETFBCONFIGSPROC
__glewXGetGPUIDsAMD	./GL/glxew.h	/^GLXEW_FUN_EXPORT PFNGLXGETGPUIDSAMDPROC __glewXGetGPUIDsAMD;$/;"	v	typeref:typename:GLXEW_FUN_EXPORT PFNGLXGETGPUIDSAMDPROC
__glewXGetGPUInfoAMD	./GL/glxew.h	/^GLXEW_FUN_EXPORT PFNGLXGETGPUINFOAMDPROC __glewXGetGPUInfoAMD;$/;"	v	typeref:typename:GLXEW_FUN_EXPORT PFNGLXGETGPUINFOAMDPROC
__glewXGetMscRateOML	./GL/glxew.h	/^GLXEW_FUN_EXPORT PFNGLXGETMSCRATEOMLPROC __glewXGetMscRateOML;$/;"	v	typeref:typename:GLXEW_FUN_EXPORT PFNGLXGETMSCRATEOMLPROC
__glewXGetSelectedEvent	./GL/glxew.h	/^GLXEW_FUN_EXPORT PFNGLXGETSELECTEDEVENTPROC __glewXGetSelectedEvent;$/;"	v	typeref:typename:GLXEW_FUN_EXPORT PFNGLXGETSELECTEDEVENTPROC
__glewXGetSelectedEventSGIX	./GL/glxew.h	/^GLXEW_FUN_EXPORT PFNGLXGETSELECTEDEVENTSGIXPROC __glewXGetSelectedEventSGIX;$/;"	v	typeref:typename:GLXEW_FUN_EXPORT PFNGLXGETSELECTEDEVENTSGIXPROC
__glewXGetSwapIntervalMESA	./GL/glxew.h	/^GLXEW_FUN_EXPORT PFNGLXGETSWAPINTERVALMESAPROC __glewXGetSwapIntervalMESA;$/;"	v	typeref:typename:GLXEW_FUN_EXPORT PFNGLXGETSWAPINTERVALMESAPROC
__glewXGetSyncValuesOML	./GL/glxew.h	/^GLXEW_FUN_EXPORT PFNGLXGETSYNCVALUESOMLPROC __glewXGetSyncValuesOML;$/;"	v	typeref:typename:GLXEW_FUN_EXPORT PFNGLXGETSYNCVALUESOMLPROC
__glewXGetTransparentIndexSUN	./GL/glxew.h	/^GLXEW_FUN_EXPORT PFNGLXGETTRANSPARENTINDEXSUNPROC __glewXGetTransparentIndexSUN;$/;"	v	typeref:typename:GLXEW_FUN_EXPORT PFNGLXGETTRANSPARENTINDEXSUNPROC
__glewXGetVideoDeviceNV	./GL/glxew.h	/^GLXEW_FUN_EXPORT PFNGLXGETVIDEODEVICENVPROC __glewXGetVideoDeviceNV;$/;"	v	typeref:typename:GLXEW_FUN_EXPORT PFNGLXGETVIDEODEVICENVPROC
__glewXGetVideoInfoNV	./GL/glxew.h	/^GLXEW_FUN_EXPORT PFNGLXGETVIDEOINFONVPROC __glewXGetVideoInfoNV;$/;"	v	typeref:typename:GLXEW_FUN_EXPORT PFNGLXGETVIDEOINFONVPROC
__glewXGetVideoResizeSUN	./GL/glxew.h	/^GLXEW_FUN_EXPORT PFNGLXGETVIDEORESIZESUNPROC __glewXGetVideoResizeSUN;$/;"	v	typeref:typename:GLXEW_FUN_EXPORT PFNGLXGETVIDEORESIZESUNPROC
__glewXGetVideoSyncSGI	./GL/glxew.h	/^GLXEW_FUN_EXPORT PFNGLXGETVIDEOSYNCSGIPROC __glewXGetVideoSyncSGI;$/;"	v	typeref:typename:GLXEW_FUN_EXPORT PFNGLXGETVIDEOSYNCSGIPROC
__glewXGetVisualFromFBConfig	./GL/glxew.h	/^GLXEW_FUN_EXPORT PFNGLXGETVISUALFROMFBCONFIGPROC __glewXGetVisualFromFBConfig;$/;"	v	typeref:typename:GLXEW_FUN_EXPORT PFNGLXGETVISUALFROMFBCONFIGPROC
__glewXGetVisualFromFBConfigSGIX	./GL/glxew.h	/^GLXEW_FUN_EXPORT PFNGLXGETVISUALFROMFBCONFIGSGIXPROC __glewXGetVisualFromFBConfigSGIX;$/;"	v	typeref:typename:GLXEW_FUN_EXPORT PFNGLXGETVISUALFROMFBCONFIGSGIXPROC
__glewXHyperpipeAttribSGIX	./GL/glxew.h	/^GLXEW_FUN_EXPORT PFNGLXHYPERPIPEATTRIBSGIXPROC __glewXHyperpipeAttribSGIX;$/;"	v	typeref:typename:GLXEW_FUN_EXPORT PFNGLXHYPERPIPEATTRIBSGIXPROC
__glewXHyperpipeConfigSGIX	./GL/glxew.h	/^GLXEW_FUN_EXPORT PFNGLXHYPERPIPECONFIGSGIXPROC __glewXHyperpipeConfigSGIX;$/;"	v	typeref:typename:GLXEW_FUN_EXPORT PFNGLXHYPERPIPECONFIGSGIXPROC
__glewXImportContextEXT	./GL/glxew.h	/^GLXEW_FUN_EXPORT PFNGLXIMPORTCONTEXTEXTPROC __glewXImportContextEXT;$/;"	v	typeref:typename:GLXEW_FUN_EXPORT PFNGLXIMPORTCONTEXTEXTPROC
__glewXJoinSwapGroupNV	./GL/glxew.h	/^GLXEW_FUN_EXPORT PFNGLXJOINSWAPGROUPNVPROC __glewXJoinSwapGroupNV;$/;"	v	typeref:typename:GLXEW_FUN_EXPORT PFNGLXJOINSWAPGROUPNVPROC
__glewXJoinSwapGroupSGIX	./GL/glxew.h	/^GLXEW_FUN_EXPORT PFNGLXJOINSWAPGROUPSGIXPROC __glewXJoinSwapGroupSGIX;$/;"	v	typeref:typename:GLXEW_FUN_EXPORT PFNGLXJOINSWAPGROUPSGIXPROC
__glewXLockVideoCaptureDeviceNV	./GL/glxew.h	/^GLXEW_FUN_EXPORT PFNGLXLOCKVIDEOCAPTUREDEVICENVPROC __glewXLockVideoCaptureDeviceNV;$/;"	v	typeref:typename:GLXEW_FUN_EXPORT PFNGLXLOCKVIDEOCAPTUREDEVICENVPROC
__glewXMakeAssociatedContextCurrentAMD	./GL/glxew.h	/^GLXEW_FUN_EXPORT PFNGLXMAKEASSOCIATEDCONTEXTCURRENTAMDPROC __glewXMakeAssociatedContextCurrentAM/;"	v	typeref:typename:GLXEW_FUN_EXPORT PFNGLXMAKEASSOCIATEDCONTEXTCURRENTAMDPROC
__glewXMakeContextCurrent	./GL/glxew.h	/^GLXEW_FUN_EXPORT PFNGLXMAKECONTEXTCURRENTPROC __glewXMakeContextCurrent;$/;"	v	typeref:typename:GLXEW_FUN_EXPORT PFNGLXMAKECONTEXTCURRENTPROC
__glewXMakeCurrentReadSGI	./GL/glxew.h	/^GLXEW_FUN_EXPORT PFNGLXMAKECURRENTREADSGIPROC __glewXMakeCurrentReadSGI;$/;"	v	typeref:typename:GLXEW_FUN_EXPORT PFNGLXMAKECURRENTREADSGIPROC
__glewXNamedCopyBufferSubDataNV	./GL/glxew.h	/^GLXEW_FUN_EXPORT PFNGLXNAMEDCOPYBUFFERSUBDATANVPROC __glewXNamedCopyBufferSubDataNV;$/;"	v	typeref:typename:GLXEW_FUN_EXPORT PFNGLXNAMEDCOPYBUFFERSUBDATANVPROC
__glewXQueryChannelDeltasSGIX	./GL/glxew.h	/^GLXEW_FUN_EXPORT PFNGLXQUERYCHANNELDELTASSGIXPROC __glewXQueryChannelDeltasSGIX;$/;"	v	typeref:typename:GLXEW_FUN_EXPORT PFNGLXQUERYCHANNELDELTASSGIXPROC
__glewXQueryChannelRectSGIX	./GL/glxew.h	/^GLXEW_FUN_EXPORT PFNGLXQUERYCHANNELRECTSGIXPROC __glewXQueryChannelRectSGIX;$/;"	v	typeref:typename:GLXEW_FUN_EXPORT PFNGLXQUERYCHANNELRECTSGIXPROC
__glewXQueryContext	./GL/glxew.h	/^GLXEW_FUN_EXPORT PFNGLXQUERYCONTEXTPROC __glewXQueryContext;$/;"	v	typeref:typename:GLXEW_FUN_EXPORT PFNGLXQUERYCONTEXTPROC
__glewXQueryContextInfoEXT	./GL/glxew.h	/^GLXEW_FUN_EXPORT PFNGLXQUERYCONTEXTINFOEXTPROC __glewXQueryContextInfoEXT;$/;"	v	typeref:typename:GLXEW_FUN_EXPORT PFNGLXQUERYCONTEXTINFOEXTPROC
__glewXQueryCurrentRendererIntegerMESA	./GL/glxew.h	/^GLXEW_FUN_EXPORT PFNGLXQUERYCURRENTRENDERERINTEGERMESAPROC __glewXQueryCurrentRendererIntegerMES/;"	v	typeref:typename:GLXEW_FUN_EXPORT PFNGLXQUERYCURRENTRENDERERINTEGERMESAPROC
__glewXQueryCurrentRendererStringMESA	./GL/glxew.h	/^GLXEW_FUN_EXPORT PFNGLXQUERYCURRENTRENDERERSTRINGMESAPROC __glewXQueryCurrentRendererStringMESA;$/;"	v	typeref:typename:GLXEW_FUN_EXPORT PFNGLXQUERYCURRENTRENDERERSTRINGMESAPROC
__glewXQueryDrawable	./GL/glxew.h	/^GLXEW_FUN_EXPORT PFNGLXQUERYDRAWABLEPROC __glewXQueryDrawable;$/;"	v	typeref:typename:GLXEW_FUN_EXPORT PFNGLXQUERYDRAWABLEPROC
__glewXQueryFrameCountNV	./GL/glxew.h	/^GLXEW_FUN_EXPORT PFNGLXQUERYFRAMECOUNTNVPROC __glewXQueryFrameCountNV;$/;"	v	typeref:typename:GLXEW_FUN_EXPORT PFNGLXQUERYFRAMECOUNTNVPROC
__glewXQueryGLXPbufferSGIX	./GL/glxew.h	/^GLXEW_FUN_EXPORT PFNGLXQUERYGLXPBUFFERSGIXPROC __glewXQueryGLXPbufferSGIX;$/;"	v	typeref:typename:GLXEW_FUN_EXPORT PFNGLXQUERYGLXPBUFFERSGIXPROC
__glewXQueryHyperpipeAttribSGIX	./GL/glxew.h	/^GLXEW_FUN_EXPORT PFNGLXQUERYHYPERPIPEATTRIBSGIXPROC __glewXQueryHyperpipeAttribSGIX;$/;"	v	typeref:typename:GLXEW_FUN_EXPORT PFNGLXQUERYHYPERPIPEATTRIBSGIXPROC
__glewXQueryHyperpipeBestAttribSGIX	./GL/glxew.h	/^GLXEW_FUN_EXPORT PFNGLXQUERYHYPERPIPEBESTATTRIBSGIXPROC __glewXQueryHyperpipeBestAttribSGIX;$/;"	v	typeref:typename:GLXEW_FUN_EXPORT PFNGLXQUERYHYPERPIPEBESTATTRIBSGIXPROC
__glewXQueryHyperpipeConfigSGIX	./GL/glxew.h	/^GLXEW_FUN_EXPORT PFNGLXQUERYHYPERPIPECONFIGSGIXPROC __glewXQueryHyperpipeConfigSGIX;$/;"	v	typeref:typename:GLXEW_FUN_EXPORT PFNGLXQUERYHYPERPIPECONFIGSGIXPROC
__glewXQueryHyperpipeNetworkSGIX	./GL/glxew.h	/^GLXEW_FUN_EXPORT PFNGLXQUERYHYPERPIPENETWORKSGIXPROC __glewXQueryHyperpipeNetworkSGIX;$/;"	v	typeref:typename:GLXEW_FUN_EXPORT PFNGLXQUERYHYPERPIPENETWORKSGIXPROC
__glewXQueryMaxSwapBarriersSGIX	./GL/glxew.h	/^GLXEW_FUN_EXPORT PFNGLXQUERYMAXSWAPBARRIERSSGIXPROC __glewXQueryMaxSwapBarriersSGIX;$/;"	v	typeref:typename:GLXEW_FUN_EXPORT PFNGLXQUERYMAXSWAPBARRIERSSGIXPROC
__glewXQueryMaxSwapGroupsNV	./GL/glxew.h	/^GLXEW_FUN_EXPORT PFNGLXQUERYMAXSWAPGROUPSNVPROC __glewXQueryMaxSwapGroupsNV;$/;"	v	typeref:typename:GLXEW_FUN_EXPORT PFNGLXQUERYMAXSWAPGROUPSNVPROC
__glewXQueryRendererIntegerMESA	./GL/glxew.h	/^GLXEW_FUN_EXPORT PFNGLXQUERYRENDERERINTEGERMESAPROC __glewXQueryRendererIntegerMESA;$/;"	v	typeref:typename:GLXEW_FUN_EXPORT PFNGLXQUERYRENDERERINTEGERMESAPROC
__glewXQueryRendererStringMESA	./GL/glxew.h	/^GLXEW_FUN_EXPORT PFNGLXQUERYRENDERERSTRINGMESAPROC __glewXQueryRendererStringMESA;$/;"	v	typeref:typename:GLXEW_FUN_EXPORT PFNGLXQUERYRENDERERSTRINGMESAPROC
__glewXQuerySwapGroupNV	./GL/glxew.h	/^GLXEW_FUN_EXPORT PFNGLXQUERYSWAPGROUPNVPROC __glewXQuerySwapGroupNV;$/;"	v	typeref:typename:GLXEW_FUN_EXPORT PFNGLXQUERYSWAPGROUPNVPROC
__glewXQueryVideoCaptureDeviceNV	./GL/glxew.h	/^GLXEW_FUN_EXPORT PFNGLXQUERYVIDEOCAPTUREDEVICENVPROC __glewXQueryVideoCaptureDeviceNV;$/;"	v	typeref:typename:GLXEW_FUN_EXPORT PFNGLXQUERYVIDEOCAPTUREDEVICENVPROC
__glewXReleaseBuffersMESA	./GL/glxew.h	/^GLXEW_FUN_EXPORT PFNGLXRELEASEBUFFERSMESAPROC __glewXReleaseBuffersMESA;$/;"	v	typeref:typename:GLXEW_FUN_EXPORT PFNGLXRELEASEBUFFERSMESAPROC
__glewXReleaseTexImageATI	./GL/glxew.h	/^GLXEW_FUN_EXPORT PFNGLXRELEASETEXIMAGEATIPROC __glewXReleaseTexImageATI;$/;"	v	typeref:typename:GLXEW_FUN_EXPORT PFNGLXRELEASETEXIMAGEATIPROC
__glewXReleaseTexImageEXT	./GL/glxew.h	/^GLXEW_FUN_EXPORT PFNGLXRELEASETEXIMAGEEXTPROC __glewXReleaseTexImageEXT;$/;"	v	typeref:typename:GLXEW_FUN_EXPORT PFNGLXRELEASETEXIMAGEEXTPROC
__glewXReleaseVideoCaptureDeviceNV	./GL/glxew.h	/^GLXEW_FUN_EXPORT PFNGLXRELEASEVIDEOCAPTUREDEVICENVPROC __glewXReleaseVideoCaptureDeviceNV;$/;"	v	typeref:typename:GLXEW_FUN_EXPORT PFNGLXRELEASEVIDEOCAPTUREDEVICENVPROC
__glewXReleaseVideoDeviceNV	./GL/glxew.h	/^GLXEW_FUN_EXPORT PFNGLXRELEASEVIDEODEVICENVPROC __glewXReleaseVideoDeviceNV;$/;"	v	typeref:typename:GLXEW_FUN_EXPORT PFNGLXRELEASEVIDEODEVICENVPROC
__glewXReleaseVideoImageNV	./GL/glxew.h	/^GLXEW_FUN_EXPORT PFNGLXRELEASEVIDEOIMAGENVPROC __glewXReleaseVideoImageNV;$/;"	v	typeref:typename:GLXEW_FUN_EXPORT PFNGLXRELEASEVIDEOIMAGENVPROC
__glewXResetFrameCountNV	./GL/glxew.h	/^GLXEW_FUN_EXPORT PFNGLXRESETFRAMECOUNTNVPROC __glewXResetFrameCountNV;$/;"	v	typeref:typename:GLXEW_FUN_EXPORT PFNGLXRESETFRAMECOUNTNVPROC
__glewXSelectEvent	./GL/glxew.h	/^GLXEW_FUN_EXPORT PFNGLXSELECTEVENTPROC __glewXSelectEvent;$/;"	v	typeref:typename:GLXEW_FUN_EXPORT PFNGLXSELECTEVENTPROC
__glewXSelectEventSGIX	./GL/glxew.h	/^GLXEW_FUN_EXPORT PFNGLXSELECTEVENTSGIXPROC __glewXSelectEventSGIX;$/;"	v	typeref:typename:GLXEW_FUN_EXPORT PFNGLXSELECTEVENTSGIXPROC
__glewXSendPbufferToVideoNV	./GL/glxew.h	/^GLXEW_FUN_EXPORT PFNGLXSENDPBUFFERTOVIDEONVPROC __glewXSendPbufferToVideoNV;$/;"	v	typeref:typename:GLXEW_FUN_EXPORT PFNGLXSENDPBUFFERTOVIDEONVPROC
__glewXSet3DfxModeMESA	./GL/glxew.h	/^GLXEW_FUN_EXPORT PFNGLXSET3DFXMODEMESAPROC __glewXSet3DfxModeMESA;$/;"	v	typeref:typename:GLXEW_FUN_EXPORT PFNGLXSET3DFXMODEMESAPROC
__glewXSwapBuffersMscOML	./GL/glxew.h	/^GLXEW_FUN_EXPORT PFNGLXSWAPBUFFERSMSCOMLPROC __glewXSwapBuffersMscOML;$/;"	v	typeref:typename:GLXEW_FUN_EXPORT PFNGLXSWAPBUFFERSMSCOMLPROC
__glewXSwapIntervalEXT	./GL/glxew.h	/^GLXEW_FUN_EXPORT PFNGLXSWAPINTERVALEXTPROC __glewXSwapIntervalEXT;$/;"	v	typeref:typename:GLXEW_FUN_EXPORT PFNGLXSWAPINTERVALEXTPROC
__glewXSwapIntervalMESA	./GL/glxew.h	/^GLXEW_FUN_EXPORT PFNGLXSWAPINTERVALMESAPROC __glewXSwapIntervalMESA;$/;"	v	typeref:typename:GLXEW_FUN_EXPORT PFNGLXSWAPINTERVALMESAPROC
__glewXSwapIntervalSGI	./GL/glxew.h	/^GLXEW_FUN_EXPORT PFNGLXSWAPINTERVALSGIPROC __glewXSwapIntervalSGI;$/;"	v	typeref:typename:GLXEW_FUN_EXPORT PFNGLXSWAPINTERVALSGIPROC
__glewXVideoResizeSUN	./GL/glxew.h	/^GLXEW_FUN_EXPORT PFNGLXVIDEORESIZESUNPROC __glewXVideoResizeSUN;$/;"	v	typeref:typename:GLXEW_FUN_EXPORT PFNGLXVIDEORESIZESUNPROC
__glewXWaitForMscOML	./GL/glxew.h	/^GLXEW_FUN_EXPORT PFNGLXWAITFORMSCOMLPROC __glewXWaitForMscOML;$/;"	v	typeref:typename:GLXEW_FUN_EXPORT PFNGLXWAITFORMSCOMLPROC
__glewXWaitForSbcOML	./GL/glxew.h	/^GLXEW_FUN_EXPORT PFNGLXWAITFORSBCOMLPROC __glewXWaitForSbcOML;$/;"	v	typeref:typename:GLXEW_FUN_EXPORT PFNGLXWAITFORSBCOMLPROC
__glewXWaitVideoSyncSGI	./GL/glxew.h	/^GLXEW_FUN_EXPORT PFNGLXWAITVIDEOSYNCSGIPROC __glewXWaitVideoSyncSGI;$/;"	v	typeref:typename:GLXEW_FUN_EXPORT PFNGLXWAITVIDEOSYNCSGIPROC
__glew_h__	./GL/glew.h	/^#define __glew_h__$/;"	d
__glext_h_	./GL/glew.h	/^#define __glext_h_$/;"	d
__gltypes_h_	./GL/glew.h	/^#define __gltypes_h_$/;"	d
__glx_h__	./GL/glxew.h	/^#define __glx_h__$/;"	d
__glxew_h__	./GL/glxew.h	/^#define __glxew_h__$/;"	d
__glxext_h_	./GL/glxew.h	/^#define __glxext_h_$/;"	d
__has_include	./glm/build/CMakeFiles/3.31.0-rc1/CompilerIdC/CMakeCCompilerId.c	/^#  define __has_include(/;"	d	file:
__has_include	./glm/build/CMakeFiles/3.31.0-rc1/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^#  define __has_include(/;"	d	file:
__wglewAllocateMemoryNV	./GL/wglew.h	/^WGLEW_FUN_EXPORT PFNWGLALLOCATEMEMORYNVPROC __wglewAllocateMemoryNV;$/;"	v	typeref:typename:WGLEW_FUN_EXPORT PFNWGLALLOCATEMEMORYNVPROC
__wglewAssociateImageBufferEventsI3D	./GL/wglew.h	/^WGLEW_FUN_EXPORT PFNWGLASSOCIATEIMAGEBUFFEREVENTSI3DPROC __wglewAssociateImageBufferEventsI3D;$/;"	v	typeref:typename:WGLEW_FUN_EXPORT PFNWGLASSOCIATEIMAGEBUFFEREVENTSI3DPROC
__wglewBeginFrameTrackingI3D	./GL/wglew.h	/^WGLEW_FUN_EXPORT PFNWGLBEGINFRAMETRACKINGI3DPROC __wglewBeginFrameTrackingI3D;$/;"	v	typeref:typename:WGLEW_FUN_EXPORT PFNWGLBEGINFRAMETRACKINGI3DPROC
__wglewBindDisplayColorTableEXT	./GL/wglew.h	/^WGLEW_FUN_EXPORT PFNWGLBINDDISPLAYCOLORTABLEEXTPROC __wglewBindDisplayColorTableEXT;$/;"	v	typeref:typename:WGLEW_FUN_EXPORT PFNWGLBINDDISPLAYCOLORTABLEEXTPROC
__wglewBindSwapBarrierNV	./GL/wglew.h	/^WGLEW_FUN_EXPORT PFNWGLBINDSWAPBARRIERNVPROC __wglewBindSwapBarrierNV;$/;"	v	typeref:typename:WGLEW_FUN_EXPORT PFNWGLBINDSWAPBARRIERNVPROC
__wglewBindTexImageARB	./GL/wglew.h	/^WGLEW_FUN_EXPORT PFNWGLBINDTEXIMAGEARBPROC __wglewBindTexImageARB;$/;"	v	typeref:typename:WGLEW_FUN_EXPORT PFNWGLBINDTEXIMAGEARBPROC
__wglewBindVideoCaptureDeviceNV	./GL/wglew.h	/^WGLEW_FUN_EXPORT PFNWGLBINDVIDEOCAPTUREDEVICENVPROC __wglewBindVideoCaptureDeviceNV;$/;"	v	typeref:typename:WGLEW_FUN_EXPORT PFNWGLBINDVIDEOCAPTUREDEVICENVPROC
__wglewBindVideoDeviceNV	./GL/wglew.h	/^WGLEW_FUN_EXPORT PFNWGLBINDVIDEODEVICENVPROC __wglewBindVideoDeviceNV;$/;"	v	typeref:typename:WGLEW_FUN_EXPORT PFNWGLBINDVIDEODEVICENVPROC
__wglewBindVideoImageNV	./GL/wglew.h	/^WGLEW_FUN_EXPORT PFNWGLBINDVIDEOIMAGENVPROC __wglewBindVideoImageNV;$/;"	v	typeref:typename:WGLEW_FUN_EXPORT PFNWGLBINDVIDEOIMAGENVPROC
__wglewBlitContextFramebufferAMD	./GL/wglew.h	/^WGLEW_FUN_EXPORT PFNWGLBLITCONTEXTFRAMEBUFFERAMDPROC __wglewBlitContextFramebufferAMD;$/;"	v	typeref:typename:WGLEW_FUN_EXPORT PFNWGLBLITCONTEXTFRAMEBUFFERAMDPROC
__wglewChoosePixelFormatARB	./GL/wglew.h	/^WGLEW_FUN_EXPORT PFNWGLCHOOSEPIXELFORMATARBPROC __wglewChoosePixelFormatARB;$/;"	v	typeref:typename:WGLEW_FUN_EXPORT PFNWGLCHOOSEPIXELFORMATARBPROC
__wglewChoosePixelFormatEXT	./GL/wglew.h	/^WGLEW_FUN_EXPORT PFNWGLCHOOSEPIXELFORMATEXTPROC __wglewChoosePixelFormatEXT;$/;"	v	typeref:typename:WGLEW_FUN_EXPORT PFNWGLCHOOSEPIXELFORMATEXTPROC
__wglewCopyImageSubDataNV	./GL/wglew.h	/^WGLEW_FUN_EXPORT PFNWGLCOPYIMAGESUBDATANVPROC __wglewCopyImageSubDataNV;$/;"	v	typeref:typename:WGLEW_FUN_EXPORT PFNWGLCOPYIMAGESUBDATANVPROC
__wglewCreateAffinityDCNV	./GL/wglew.h	/^WGLEW_FUN_EXPORT PFNWGLCREATEAFFINITYDCNVPROC __wglewCreateAffinityDCNV;$/;"	v	typeref:typename:WGLEW_FUN_EXPORT PFNWGLCREATEAFFINITYDCNVPROC
__wglewCreateAssociatedContextAMD	./GL/wglew.h	/^WGLEW_FUN_EXPORT PFNWGLCREATEASSOCIATEDCONTEXTAMDPROC __wglewCreateAssociatedContextAMD;$/;"	v	typeref:typename:WGLEW_FUN_EXPORT PFNWGLCREATEASSOCIATEDCONTEXTAMDPROC
__wglewCreateAssociatedContextAttribsAMD	./GL/wglew.h	/^WGLEW_FUN_EXPORT PFNWGLCREATEASSOCIATEDCONTEXTATTRIBSAMDPROC __wglewCreateAssociatedContextAttri/;"	v	typeref:typename:WGLEW_FUN_EXPORT PFNWGLCREATEASSOCIATEDCONTEXTATTRIBSAMDPROC
__wglewCreateBufferRegionARB	./GL/wglew.h	/^WGLEW_FUN_EXPORT PFNWGLCREATEBUFFERREGIONARBPROC __wglewCreateBufferRegionARB;$/;"	v	typeref:typename:WGLEW_FUN_EXPORT PFNWGLCREATEBUFFERREGIONARBPROC
__wglewCreateContextAttribsARB	./GL/wglew.h	/^WGLEW_FUN_EXPORT PFNWGLCREATECONTEXTATTRIBSARBPROC __wglewCreateContextAttribsARB;$/;"	v	typeref:typename:WGLEW_FUN_EXPORT PFNWGLCREATECONTEXTATTRIBSARBPROC
__wglewCreateDisplayColorTableEXT	./GL/wglew.h	/^WGLEW_FUN_EXPORT PFNWGLCREATEDISPLAYCOLORTABLEEXTPROC __wglewCreateDisplayColorTableEXT;$/;"	v	typeref:typename:WGLEW_FUN_EXPORT PFNWGLCREATEDISPLAYCOLORTABLEEXTPROC
__wglewCreateImageBufferI3D	./GL/wglew.h	/^WGLEW_FUN_EXPORT PFNWGLCREATEIMAGEBUFFERI3DPROC __wglewCreateImageBufferI3D;$/;"	v	typeref:typename:WGLEW_FUN_EXPORT PFNWGLCREATEIMAGEBUFFERI3DPROC
__wglewCreatePbufferARB	./GL/wglew.h	/^WGLEW_FUN_EXPORT PFNWGLCREATEPBUFFERARBPROC __wglewCreatePbufferARB;$/;"	v	typeref:typename:WGLEW_FUN_EXPORT PFNWGLCREATEPBUFFERARBPROC
__wglewCreatePbufferEXT	./GL/wglew.h	/^WGLEW_FUN_EXPORT PFNWGLCREATEPBUFFEREXTPROC __wglewCreatePbufferEXT;$/;"	v	typeref:typename:WGLEW_FUN_EXPORT PFNWGLCREATEPBUFFEREXTPROC
__wglewDXCloseDeviceNV	./GL/wglew.h	/^WGLEW_FUN_EXPORT PFNWGLDXCLOSEDEVICENVPROC __wglewDXCloseDeviceNV;$/;"	v	typeref:typename:WGLEW_FUN_EXPORT PFNWGLDXCLOSEDEVICENVPROC
__wglewDXLockObjectsNV	./GL/wglew.h	/^WGLEW_FUN_EXPORT PFNWGLDXLOCKOBJECTSNVPROC __wglewDXLockObjectsNV;$/;"	v	typeref:typename:WGLEW_FUN_EXPORT PFNWGLDXLOCKOBJECTSNVPROC
__wglewDXObjectAccessNV	./GL/wglew.h	/^WGLEW_FUN_EXPORT PFNWGLDXOBJECTACCESSNVPROC __wglewDXObjectAccessNV;$/;"	v	typeref:typename:WGLEW_FUN_EXPORT PFNWGLDXOBJECTACCESSNVPROC
__wglewDXOpenDeviceNV	./GL/wglew.h	/^WGLEW_FUN_EXPORT PFNWGLDXOPENDEVICENVPROC __wglewDXOpenDeviceNV;$/;"	v	typeref:typename:WGLEW_FUN_EXPORT PFNWGLDXOPENDEVICENVPROC
__wglewDXRegisterObjectNV	./GL/wglew.h	/^WGLEW_FUN_EXPORT PFNWGLDXREGISTEROBJECTNVPROC __wglewDXRegisterObjectNV;$/;"	v	typeref:typename:WGLEW_FUN_EXPORT PFNWGLDXREGISTEROBJECTNVPROC
__wglewDXSetResourceShareHandleNV	./GL/wglew.h	/^WGLEW_FUN_EXPORT PFNWGLDXSETRESOURCESHAREHANDLENVPROC __wglewDXSetResourceShareHandleNV;$/;"	v	typeref:typename:WGLEW_FUN_EXPORT PFNWGLDXSETRESOURCESHAREHANDLENVPROC
__wglewDXUnlockObjectsNV	./GL/wglew.h	/^WGLEW_FUN_EXPORT PFNWGLDXUNLOCKOBJECTSNVPROC __wglewDXUnlockObjectsNV;$/;"	v	typeref:typename:WGLEW_FUN_EXPORT PFNWGLDXUNLOCKOBJECTSNVPROC
__wglewDXUnregisterObjectNV	./GL/wglew.h	/^WGLEW_FUN_EXPORT PFNWGLDXUNREGISTEROBJECTNVPROC __wglewDXUnregisterObjectNV;$/;"	v	typeref:typename:WGLEW_FUN_EXPORT PFNWGLDXUNREGISTEROBJECTNVPROC
__wglewDelayBeforeSwapNV	./GL/wglew.h	/^WGLEW_FUN_EXPORT PFNWGLDELAYBEFORESWAPNVPROC __wglewDelayBeforeSwapNV;$/;"	v	typeref:typename:WGLEW_FUN_EXPORT PFNWGLDELAYBEFORESWAPNVPROC
__wglewDeleteAssociatedContextAMD	./GL/wglew.h	/^WGLEW_FUN_EXPORT PFNWGLDELETEASSOCIATEDCONTEXTAMDPROC __wglewDeleteAssociatedContextAMD;$/;"	v	typeref:typename:WGLEW_FUN_EXPORT PFNWGLDELETEASSOCIATEDCONTEXTAMDPROC
__wglewDeleteBufferRegionARB	./GL/wglew.h	/^WGLEW_FUN_EXPORT PFNWGLDELETEBUFFERREGIONARBPROC __wglewDeleteBufferRegionARB;$/;"	v	typeref:typename:WGLEW_FUN_EXPORT PFNWGLDELETEBUFFERREGIONARBPROC
__wglewDeleteDCNV	./GL/wglew.h	/^WGLEW_FUN_EXPORT PFNWGLDELETEDCNVPROC __wglewDeleteDCNV;$/;"	v	typeref:typename:WGLEW_FUN_EXPORT PFNWGLDELETEDCNVPROC
__wglewDestroyDisplayColorTableEXT	./GL/wglew.h	/^WGLEW_FUN_EXPORT PFNWGLDESTROYDISPLAYCOLORTABLEEXTPROC __wglewDestroyDisplayColorTableEXT;$/;"	v	typeref:typename:WGLEW_FUN_EXPORT PFNWGLDESTROYDISPLAYCOLORTABLEEXTPROC
__wglewDestroyImageBufferI3D	./GL/wglew.h	/^WGLEW_FUN_EXPORT PFNWGLDESTROYIMAGEBUFFERI3DPROC __wglewDestroyImageBufferI3D;$/;"	v	typeref:typename:WGLEW_FUN_EXPORT PFNWGLDESTROYIMAGEBUFFERI3DPROC
__wglewDestroyPbufferARB	./GL/wglew.h	/^WGLEW_FUN_EXPORT PFNWGLDESTROYPBUFFERARBPROC __wglewDestroyPbufferARB;$/;"	v	typeref:typename:WGLEW_FUN_EXPORT PFNWGLDESTROYPBUFFERARBPROC
__wglewDestroyPbufferEXT	./GL/wglew.h	/^WGLEW_FUN_EXPORT PFNWGLDESTROYPBUFFEREXTPROC __wglewDestroyPbufferEXT;$/;"	v	typeref:typename:WGLEW_FUN_EXPORT PFNWGLDESTROYPBUFFEREXTPROC
__wglewDisableFrameLockI3D	./GL/wglew.h	/^WGLEW_FUN_EXPORT PFNWGLDISABLEFRAMELOCKI3DPROC __wglewDisableFrameLockI3D;$/;"	v	typeref:typename:WGLEW_FUN_EXPORT PFNWGLDISABLEFRAMELOCKI3DPROC
__wglewDisableGenlockI3D	./GL/wglew.h	/^WGLEW_FUN_EXPORT PFNWGLDISABLEGENLOCKI3DPROC __wglewDisableGenlockI3D;$/;"	v	typeref:typename:WGLEW_FUN_EXPORT PFNWGLDISABLEGENLOCKI3DPROC
__wglewEnableFrameLockI3D	./GL/wglew.h	/^WGLEW_FUN_EXPORT PFNWGLENABLEFRAMELOCKI3DPROC __wglewEnableFrameLockI3D;$/;"	v	typeref:typename:WGLEW_FUN_EXPORT PFNWGLENABLEFRAMELOCKI3DPROC
__wglewEnableGenlockI3D	./GL/wglew.h	/^WGLEW_FUN_EXPORT PFNWGLENABLEGENLOCKI3DPROC __wglewEnableGenlockI3D;$/;"	v	typeref:typename:WGLEW_FUN_EXPORT PFNWGLENABLEGENLOCKI3DPROC
__wglewEndFrameTrackingI3D	./GL/wglew.h	/^WGLEW_FUN_EXPORT PFNWGLENDFRAMETRACKINGI3DPROC __wglewEndFrameTrackingI3D;$/;"	v	typeref:typename:WGLEW_FUN_EXPORT PFNWGLENDFRAMETRACKINGI3DPROC
__wglewEnumGpuDevicesNV	./GL/wglew.h	/^WGLEW_FUN_EXPORT PFNWGLENUMGPUDEVICESNVPROC __wglewEnumGpuDevicesNV;$/;"	v	typeref:typename:WGLEW_FUN_EXPORT PFNWGLENUMGPUDEVICESNVPROC
__wglewEnumGpusFromAffinityDCNV	./GL/wglew.h	/^WGLEW_FUN_EXPORT PFNWGLENUMGPUSFROMAFFINITYDCNVPROC __wglewEnumGpusFromAffinityDCNV;$/;"	v	typeref:typename:WGLEW_FUN_EXPORT PFNWGLENUMGPUSFROMAFFINITYDCNVPROC
__wglewEnumGpusNV	./GL/wglew.h	/^WGLEW_FUN_EXPORT PFNWGLENUMGPUSNVPROC __wglewEnumGpusNV;$/;"	v	typeref:typename:WGLEW_FUN_EXPORT PFNWGLENUMGPUSNVPROC
__wglewEnumerateVideoCaptureDevicesNV	./GL/wglew.h	/^WGLEW_FUN_EXPORT PFNWGLENUMERATEVIDEOCAPTUREDEVICESNVPROC __wglewEnumerateVideoCaptureDevicesNV;$/;"	v	typeref:typename:WGLEW_FUN_EXPORT PFNWGLENUMERATEVIDEOCAPTUREDEVICESNVPROC
__wglewEnumerateVideoDevicesNV	./GL/wglew.h	/^WGLEW_FUN_EXPORT PFNWGLENUMERATEVIDEODEVICESNVPROC __wglewEnumerateVideoDevicesNV;$/;"	v	typeref:typename:WGLEW_FUN_EXPORT PFNWGLENUMERATEVIDEODEVICESNVPROC
__wglewFreeMemoryNV	./GL/wglew.h	/^WGLEW_FUN_EXPORT PFNWGLFREEMEMORYNVPROC __wglewFreeMemoryNV;$/;"	v	typeref:typename:WGLEW_FUN_EXPORT PFNWGLFREEMEMORYNVPROC
__wglewGenlockSampleRateI3D	./GL/wglew.h	/^WGLEW_FUN_EXPORT PFNWGLGENLOCKSAMPLERATEI3DPROC __wglewGenlockSampleRateI3D;$/;"	v	typeref:typename:WGLEW_FUN_EXPORT PFNWGLGENLOCKSAMPLERATEI3DPROC
__wglewGenlockSourceDelayI3D	./GL/wglew.h	/^WGLEW_FUN_EXPORT PFNWGLGENLOCKSOURCEDELAYI3DPROC __wglewGenlockSourceDelayI3D;$/;"	v	typeref:typename:WGLEW_FUN_EXPORT PFNWGLGENLOCKSOURCEDELAYI3DPROC
__wglewGenlockSourceEdgeI3D	./GL/wglew.h	/^WGLEW_FUN_EXPORT PFNWGLGENLOCKSOURCEEDGEI3DPROC __wglewGenlockSourceEdgeI3D;$/;"	v	typeref:typename:WGLEW_FUN_EXPORT PFNWGLGENLOCKSOURCEEDGEI3DPROC
__wglewGenlockSourceI3D	./GL/wglew.h	/^WGLEW_FUN_EXPORT PFNWGLGENLOCKSOURCEI3DPROC __wglewGenlockSourceI3D;$/;"	v	typeref:typename:WGLEW_FUN_EXPORT PFNWGLGENLOCKSOURCEI3DPROC
__wglewGetContextGPUIDAMD	./GL/wglew.h	/^WGLEW_FUN_EXPORT PFNWGLGETCONTEXTGPUIDAMDPROC __wglewGetContextGPUIDAMD;$/;"	v	typeref:typename:WGLEW_FUN_EXPORT PFNWGLGETCONTEXTGPUIDAMDPROC
__wglewGetCurrentAssociatedContextAMD	./GL/wglew.h	/^WGLEW_FUN_EXPORT PFNWGLGETCURRENTASSOCIATEDCONTEXTAMDPROC __wglewGetCurrentAssociatedContextAMD;$/;"	v	typeref:typename:WGLEW_FUN_EXPORT PFNWGLGETCURRENTASSOCIATEDCONTEXTAMDPROC
__wglewGetCurrentReadDCARB	./GL/wglew.h	/^WGLEW_FUN_EXPORT PFNWGLGETCURRENTREADDCARBPROC __wglewGetCurrentReadDCARB;$/;"	v	typeref:typename:WGLEW_FUN_EXPORT PFNWGLGETCURRENTREADDCARBPROC
__wglewGetCurrentReadDCEXT	./GL/wglew.h	/^WGLEW_FUN_EXPORT PFNWGLGETCURRENTREADDCEXTPROC __wglewGetCurrentReadDCEXT;$/;"	v	typeref:typename:WGLEW_FUN_EXPORT PFNWGLGETCURRENTREADDCEXTPROC
__wglewGetDigitalVideoParametersI3D	./GL/wglew.h	/^WGLEW_FUN_EXPORT PFNWGLGETDIGITALVIDEOPARAMETERSI3DPROC __wglewGetDigitalVideoParametersI3D;$/;"	v	typeref:typename:WGLEW_FUN_EXPORT PFNWGLGETDIGITALVIDEOPARAMETERSI3DPROC
__wglewGetExtensionsStringARB	./GL/wglew.h	/^WGLEW_FUN_EXPORT PFNWGLGETEXTENSIONSSTRINGARBPROC __wglewGetExtensionsStringARB;$/;"	v	typeref:typename:WGLEW_FUN_EXPORT PFNWGLGETEXTENSIONSSTRINGARBPROC
__wglewGetExtensionsStringEXT	./GL/wglew.h	/^WGLEW_FUN_EXPORT PFNWGLGETEXTENSIONSSTRINGEXTPROC __wglewGetExtensionsStringEXT;$/;"	v	typeref:typename:WGLEW_FUN_EXPORT PFNWGLGETEXTENSIONSSTRINGEXTPROC
__wglewGetFrameUsageI3D	./GL/wglew.h	/^WGLEW_FUN_EXPORT PFNWGLGETFRAMEUSAGEI3DPROC __wglewGetFrameUsageI3D;$/;"	v	typeref:typename:WGLEW_FUN_EXPORT PFNWGLGETFRAMEUSAGEI3DPROC
__wglewGetGPUIDsAMD	./GL/wglew.h	/^WGLEW_FUN_EXPORT PFNWGLGETGPUIDSAMDPROC __wglewGetGPUIDsAMD;$/;"	v	typeref:typename:WGLEW_FUN_EXPORT PFNWGLGETGPUIDSAMDPROC
__wglewGetGPUInfoAMD	./GL/wglew.h	/^WGLEW_FUN_EXPORT PFNWGLGETGPUINFOAMDPROC __wglewGetGPUInfoAMD;$/;"	v	typeref:typename:WGLEW_FUN_EXPORT PFNWGLGETGPUINFOAMDPROC
__wglewGetGammaTableI3D	./GL/wglew.h	/^WGLEW_FUN_EXPORT PFNWGLGETGAMMATABLEI3DPROC __wglewGetGammaTableI3D;$/;"	v	typeref:typename:WGLEW_FUN_EXPORT PFNWGLGETGAMMATABLEI3DPROC
__wglewGetGammaTableParametersI3D	./GL/wglew.h	/^WGLEW_FUN_EXPORT PFNWGLGETGAMMATABLEPARAMETERSI3DPROC __wglewGetGammaTableParametersI3D;$/;"	v	typeref:typename:WGLEW_FUN_EXPORT PFNWGLGETGAMMATABLEPARAMETERSI3DPROC
__wglewGetGenlockSampleRateI3D	./GL/wglew.h	/^WGLEW_FUN_EXPORT PFNWGLGETGENLOCKSAMPLERATEI3DPROC __wglewGetGenlockSampleRateI3D;$/;"	v	typeref:typename:WGLEW_FUN_EXPORT PFNWGLGETGENLOCKSAMPLERATEI3DPROC
__wglewGetGenlockSourceDelayI3D	./GL/wglew.h	/^WGLEW_FUN_EXPORT PFNWGLGETGENLOCKSOURCEDELAYI3DPROC __wglewGetGenlockSourceDelayI3D;$/;"	v	typeref:typename:WGLEW_FUN_EXPORT PFNWGLGETGENLOCKSOURCEDELAYI3DPROC
__wglewGetGenlockSourceEdgeI3D	./GL/wglew.h	/^WGLEW_FUN_EXPORT PFNWGLGETGENLOCKSOURCEEDGEI3DPROC __wglewGetGenlockSourceEdgeI3D;$/;"	v	typeref:typename:WGLEW_FUN_EXPORT PFNWGLGETGENLOCKSOURCEEDGEI3DPROC
__wglewGetGenlockSourceI3D	./GL/wglew.h	/^WGLEW_FUN_EXPORT PFNWGLGETGENLOCKSOURCEI3DPROC __wglewGetGenlockSourceI3D;$/;"	v	typeref:typename:WGLEW_FUN_EXPORT PFNWGLGETGENLOCKSOURCEI3DPROC
__wglewGetMscRateOML	./GL/wglew.h	/^WGLEW_FUN_EXPORT PFNWGLGETMSCRATEOMLPROC __wglewGetMscRateOML;$/;"	v	typeref:typename:WGLEW_FUN_EXPORT PFNWGLGETMSCRATEOMLPROC
__wglewGetPbufferDCARB	./GL/wglew.h	/^WGLEW_FUN_EXPORT PFNWGLGETPBUFFERDCARBPROC __wglewGetPbufferDCARB;$/;"	v	typeref:typename:WGLEW_FUN_EXPORT PFNWGLGETPBUFFERDCARBPROC
__wglewGetPbufferDCEXT	./GL/wglew.h	/^WGLEW_FUN_EXPORT PFNWGLGETPBUFFERDCEXTPROC __wglewGetPbufferDCEXT;$/;"	v	typeref:typename:WGLEW_FUN_EXPORT PFNWGLGETPBUFFERDCEXTPROC
__wglewGetPixelFormatAttribfvARB	./GL/wglew.h	/^WGLEW_FUN_EXPORT PFNWGLGETPIXELFORMATATTRIBFVARBPROC __wglewGetPixelFormatAttribfvARB;$/;"	v	typeref:typename:WGLEW_FUN_EXPORT PFNWGLGETPIXELFORMATATTRIBFVARBPROC
__wglewGetPixelFormatAttribfvEXT	./GL/wglew.h	/^WGLEW_FUN_EXPORT PFNWGLGETPIXELFORMATATTRIBFVEXTPROC __wglewGetPixelFormatAttribfvEXT;$/;"	v	typeref:typename:WGLEW_FUN_EXPORT PFNWGLGETPIXELFORMATATTRIBFVEXTPROC
__wglewGetPixelFormatAttribivARB	./GL/wglew.h	/^WGLEW_FUN_EXPORT PFNWGLGETPIXELFORMATATTRIBIVARBPROC __wglewGetPixelFormatAttribivARB;$/;"	v	typeref:typename:WGLEW_FUN_EXPORT PFNWGLGETPIXELFORMATATTRIBIVARBPROC
__wglewGetPixelFormatAttribivEXT	./GL/wglew.h	/^WGLEW_FUN_EXPORT PFNWGLGETPIXELFORMATATTRIBIVEXTPROC __wglewGetPixelFormatAttribivEXT;$/;"	v	typeref:typename:WGLEW_FUN_EXPORT PFNWGLGETPIXELFORMATATTRIBIVEXTPROC
__wglewGetSwapIntervalEXT	./GL/wglew.h	/^WGLEW_FUN_EXPORT PFNWGLGETSWAPINTERVALEXTPROC __wglewGetSwapIntervalEXT;$/;"	v	typeref:typename:WGLEW_FUN_EXPORT PFNWGLGETSWAPINTERVALEXTPROC
__wglewGetSyncValuesOML	./GL/wglew.h	/^WGLEW_FUN_EXPORT PFNWGLGETSYNCVALUESOMLPROC __wglewGetSyncValuesOML;$/;"	v	typeref:typename:WGLEW_FUN_EXPORT PFNWGLGETSYNCVALUESOMLPROC
__wglewGetVideoDeviceNV	./GL/wglew.h	/^WGLEW_FUN_EXPORT PFNWGLGETVIDEODEVICENVPROC __wglewGetVideoDeviceNV;$/;"	v	typeref:typename:WGLEW_FUN_EXPORT PFNWGLGETVIDEODEVICENVPROC
__wglewGetVideoInfoNV	./GL/wglew.h	/^WGLEW_FUN_EXPORT PFNWGLGETVIDEOINFONVPROC __wglewGetVideoInfoNV;$/;"	v	typeref:typename:WGLEW_FUN_EXPORT PFNWGLGETVIDEOINFONVPROC
__wglewIsEnabledFrameLockI3D	./GL/wglew.h	/^WGLEW_FUN_EXPORT PFNWGLISENABLEDFRAMELOCKI3DPROC __wglewIsEnabledFrameLockI3D;$/;"	v	typeref:typename:WGLEW_FUN_EXPORT PFNWGLISENABLEDFRAMELOCKI3DPROC
__wglewIsEnabledGenlockI3D	./GL/wglew.h	/^WGLEW_FUN_EXPORT PFNWGLISENABLEDGENLOCKI3DPROC __wglewIsEnabledGenlockI3D;$/;"	v	typeref:typename:WGLEW_FUN_EXPORT PFNWGLISENABLEDGENLOCKI3DPROC
__wglewJoinSwapGroupNV	./GL/wglew.h	/^WGLEW_FUN_EXPORT PFNWGLJOINSWAPGROUPNVPROC __wglewJoinSwapGroupNV;$/;"	v	typeref:typename:WGLEW_FUN_EXPORT PFNWGLJOINSWAPGROUPNVPROC
__wglewLoadDisplayColorTableEXT	./GL/wglew.h	/^WGLEW_FUN_EXPORT PFNWGLLOADDISPLAYCOLORTABLEEXTPROC __wglewLoadDisplayColorTableEXT;$/;"	v	typeref:typename:WGLEW_FUN_EXPORT PFNWGLLOADDISPLAYCOLORTABLEEXTPROC
__wglewLockVideoCaptureDeviceNV	./GL/wglew.h	/^WGLEW_FUN_EXPORT PFNWGLLOCKVIDEOCAPTUREDEVICENVPROC __wglewLockVideoCaptureDeviceNV;$/;"	v	typeref:typename:WGLEW_FUN_EXPORT PFNWGLLOCKVIDEOCAPTUREDEVICENVPROC
__wglewMakeAssociatedContextCurrentAMD	./GL/wglew.h	/^WGLEW_FUN_EXPORT PFNWGLMAKEASSOCIATEDCONTEXTCURRENTAMDPROC __wglewMakeAssociatedContextCurrentAM/;"	v	typeref:typename:WGLEW_FUN_EXPORT PFNWGLMAKEASSOCIATEDCONTEXTCURRENTAMDPROC
__wglewMakeContextCurrentARB	./GL/wglew.h	/^WGLEW_FUN_EXPORT PFNWGLMAKECONTEXTCURRENTARBPROC __wglewMakeContextCurrentARB;$/;"	v	typeref:typename:WGLEW_FUN_EXPORT PFNWGLMAKECONTEXTCURRENTARBPROC
__wglewMakeContextCurrentEXT	./GL/wglew.h	/^WGLEW_FUN_EXPORT PFNWGLMAKECONTEXTCURRENTEXTPROC __wglewMakeContextCurrentEXT;$/;"	v	typeref:typename:WGLEW_FUN_EXPORT PFNWGLMAKECONTEXTCURRENTEXTPROC
__wglewQueryCurrentContextNV	./GL/wglew.h	/^WGLEW_FUN_EXPORT PFNWGLQUERYCURRENTCONTEXTNVPROC __wglewQueryCurrentContextNV;$/;"	v	typeref:typename:WGLEW_FUN_EXPORT PFNWGLQUERYCURRENTCONTEXTNVPROC
__wglewQueryFrameCountNV	./GL/wglew.h	/^WGLEW_FUN_EXPORT PFNWGLQUERYFRAMECOUNTNVPROC __wglewQueryFrameCountNV;$/;"	v	typeref:typename:WGLEW_FUN_EXPORT PFNWGLQUERYFRAMECOUNTNVPROC
__wglewQueryFrameLockMasterI3D	./GL/wglew.h	/^WGLEW_FUN_EXPORT PFNWGLQUERYFRAMELOCKMASTERI3DPROC __wglewQueryFrameLockMasterI3D;$/;"	v	typeref:typename:WGLEW_FUN_EXPORT PFNWGLQUERYFRAMELOCKMASTERI3DPROC
__wglewQueryFrameTrackingI3D	./GL/wglew.h	/^WGLEW_FUN_EXPORT PFNWGLQUERYFRAMETRACKINGI3DPROC __wglewQueryFrameTrackingI3D;$/;"	v	typeref:typename:WGLEW_FUN_EXPORT PFNWGLQUERYFRAMETRACKINGI3DPROC
__wglewQueryGenlockMaxSourceDelayI3D	./GL/wglew.h	/^WGLEW_FUN_EXPORT PFNWGLQUERYGENLOCKMAXSOURCEDELAYI3DPROC __wglewQueryGenlockMaxSourceDelayI3D;$/;"	v	typeref:typename:WGLEW_FUN_EXPORT PFNWGLQUERYGENLOCKMAXSOURCEDELAYI3DPROC
__wglewQueryMaxSwapGroupsNV	./GL/wglew.h	/^WGLEW_FUN_EXPORT PFNWGLQUERYMAXSWAPGROUPSNVPROC __wglewQueryMaxSwapGroupsNV;$/;"	v	typeref:typename:WGLEW_FUN_EXPORT PFNWGLQUERYMAXSWAPGROUPSNVPROC
__wglewQueryPbufferARB	./GL/wglew.h	/^WGLEW_FUN_EXPORT PFNWGLQUERYPBUFFERARBPROC __wglewQueryPbufferARB;$/;"	v	typeref:typename:WGLEW_FUN_EXPORT PFNWGLQUERYPBUFFERARBPROC
__wglewQueryPbufferEXT	./GL/wglew.h	/^WGLEW_FUN_EXPORT PFNWGLQUERYPBUFFEREXTPROC __wglewQueryPbufferEXT;$/;"	v	typeref:typename:WGLEW_FUN_EXPORT PFNWGLQUERYPBUFFEREXTPROC
__wglewQuerySwapGroupNV	./GL/wglew.h	/^WGLEW_FUN_EXPORT PFNWGLQUERYSWAPGROUPNVPROC __wglewQuerySwapGroupNV;$/;"	v	typeref:typename:WGLEW_FUN_EXPORT PFNWGLQUERYSWAPGROUPNVPROC
__wglewQueryVideoCaptureDeviceNV	./GL/wglew.h	/^WGLEW_FUN_EXPORT PFNWGLQUERYVIDEOCAPTUREDEVICENVPROC __wglewQueryVideoCaptureDeviceNV;$/;"	v	typeref:typename:WGLEW_FUN_EXPORT PFNWGLQUERYVIDEOCAPTUREDEVICENVPROC
__wglewReleaseImageBufferEventsI3D	./GL/wglew.h	/^WGLEW_FUN_EXPORT PFNWGLRELEASEIMAGEBUFFEREVENTSI3DPROC __wglewReleaseImageBufferEventsI3D;$/;"	v	typeref:typename:WGLEW_FUN_EXPORT PFNWGLRELEASEIMAGEBUFFEREVENTSI3DPROC
__wglewReleasePbufferDCARB	./GL/wglew.h	/^WGLEW_FUN_EXPORT PFNWGLRELEASEPBUFFERDCARBPROC __wglewReleasePbufferDCARB;$/;"	v	typeref:typename:WGLEW_FUN_EXPORT PFNWGLRELEASEPBUFFERDCARBPROC
__wglewReleasePbufferDCEXT	./GL/wglew.h	/^WGLEW_FUN_EXPORT PFNWGLRELEASEPBUFFERDCEXTPROC __wglewReleasePbufferDCEXT;$/;"	v	typeref:typename:WGLEW_FUN_EXPORT PFNWGLRELEASEPBUFFERDCEXTPROC
__wglewReleaseTexImageARB	./GL/wglew.h	/^WGLEW_FUN_EXPORT PFNWGLRELEASETEXIMAGEARBPROC __wglewReleaseTexImageARB;$/;"	v	typeref:typename:WGLEW_FUN_EXPORT PFNWGLRELEASETEXIMAGEARBPROC
__wglewReleaseVideoCaptureDeviceNV	./GL/wglew.h	/^WGLEW_FUN_EXPORT PFNWGLRELEASEVIDEOCAPTUREDEVICENVPROC __wglewReleaseVideoCaptureDeviceNV;$/;"	v	typeref:typename:WGLEW_FUN_EXPORT PFNWGLRELEASEVIDEOCAPTUREDEVICENVPROC
__wglewReleaseVideoDeviceNV	./GL/wglew.h	/^WGLEW_FUN_EXPORT PFNWGLRELEASEVIDEODEVICENVPROC __wglewReleaseVideoDeviceNV;$/;"	v	typeref:typename:WGLEW_FUN_EXPORT PFNWGLRELEASEVIDEODEVICENVPROC
__wglewReleaseVideoImageNV	./GL/wglew.h	/^WGLEW_FUN_EXPORT PFNWGLRELEASEVIDEOIMAGENVPROC __wglewReleaseVideoImageNV;$/;"	v	typeref:typename:WGLEW_FUN_EXPORT PFNWGLRELEASEVIDEOIMAGENVPROC
__wglewResetFrameCountNV	./GL/wglew.h	/^WGLEW_FUN_EXPORT PFNWGLRESETFRAMECOUNTNVPROC __wglewResetFrameCountNV;$/;"	v	typeref:typename:WGLEW_FUN_EXPORT PFNWGLRESETFRAMECOUNTNVPROC
__wglewRestoreBufferRegionARB	./GL/wglew.h	/^WGLEW_FUN_EXPORT PFNWGLRESTOREBUFFERREGIONARBPROC __wglewRestoreBufferRegionARB;$/;"	v	typeref:typename:WGLEW_FUN_EXPORT PFNWGLRESTOREBUFFERREGIONARBPROC
__wglewSaveBufferRegionARB	./GL/wglew.h	/^WGLEW_FUN_EXPORT PFNWGLSAVEBUFFERREGIONARBPROC __wglewSaveBufferRegionARB;$/;"	v	typeref:typename:WGLEW_FUN_EXPORT PFNWGLSAVEBUFFERREGIONARBPROC
__wglewSendPbufferToVideoNV	./GL/wglew.h	/^WGLEW_FUN_EXPORT PFNWGLSENDPBUFFERTOVIDEONVPROC __wglewSendPbufferToVideoNV;$/;"	v	typeref:typename:WGLEW_FUN_EXPORT PFNWGLSENDPBUFFERTOVIDEONVPROC
__wglewSetDigitalVideoParametersI3D	./GL/wglew.h	/^WGLEW_FUN_EXPORT PFNWGLSETDIGITALVIDEOPARAMETERSI3DPROC __wglewSetDigitalVideoParametersI3D;$/;"	v	typeref:typename:WGLEW_FUN_EXPORT PFNWGLSETDIGITALVIDEOPARAMETERSI3DPROC
__wglewSetGammaTableI3D	./GL/wglew.h	/^WGLEW_FUN_EXPORT PFNWGLSETGAMMATABLEI3DPROC __wglewSetGammaTableI3D;$/;"	v	typeref:typename:WGLEW_FUN_EXPORT PFNWGLSETGAMMATABLEI3DPROC
__wglewSetGammaTableParametersI3D	./GL/wglew.h	/^WGLEW_FUN_EXPORT PFNWGLSETGAMMATABLEPARAMETERSI3DPROC __wglewSetGammaTableParametersI3D;$/;"	v	typeref:typename:WGLEW_FUN_EXPORT PFNWGLSETGAMMATABLEPARAMETERSI3DPROC
__wglewSetPbufferAttribARB	./GL/wglew.h	/^WGLEW_FUN_EXPORT PFNWGLSETPBUFFERATTRIBARBPROC __wglewSetPbufferAttribARB;$/;"	v	typeref:typename:WGLEW_FUN_EXPORT PFNWGLSETPBUFFERATTRIBARBPROC
__wglewSetStereoEmitterState3DL	./GL/wglew.h	/^WGLEW_FUN_EXPORT PFNWGLSETSTEREOEMITTERSTATE3DLPROC __wglewSetStereoEmitterState3DL;$/;"	v	typeref:typename:WGLEW_FUN_EXPORT PFNWGLSETSTEREOEMITTERSTATE3DLPROC
__wglewSwapBuffersMscOML	./GL/wglew.h	/^WGLEW_FUN_EXPORT PFNWGLSWAPBUFFERSMSCOMLPROC __wglewSwapBuffersMscOML;$/;"	v	typeref:typename:WGLEW_FUN_EXPORT PFNWGLSWAPBUFFERSMSCOMLPROC
__wglewSwapIntervalEXT	./GL/wglew.h	/^WGLEW_FUN_EXPORT PFNWGLSWAPINTERVALEXTPROC __wglewSwapIntervalEXT;$/;"	v	typeref:typename:WGLEW_FUN_EXPORT PFNWGLSWAPINTERVALEXTPROC
__wglewSwapLayerBuffersMscOML	./GL/wglew.h	/^WGLEW_FUN_EXPORT PFNWGLSWAPLAYERBUFFERSMSCOMLPROC __wglewSwapLayerBuffersMscOML;$/;"	v	typeref:typename:WGLEW_FUN_EXPORT PFNWGLSWAPLAYERBUFFERSMSCOMLPROC
__wglewWaitForMscOML	./GL/wglew.h	/^WGLEW_FUN_EXPORT PFNWGLWAITFORMSCOMLPROC __wglewWaitForMscOML;$/;"	v	typeref:typename:WGLEW_FUN_EXPORT PFNWGLWAITFORMSCOMLPROC
__wglewWaitForSbcOML	./GL/wglew.h	/^WGLEW_FUN_EXPORT PFNWGLWAITFORSBCOMLPROC __wglewWaitForSbcOML;$/;"	v	typeref:typename:WGLEW_FUN_EXPORT PFNWGLWAITFORSBCOMLPROC
__wglew_h__	./GL/wglew.h	/^#define __wglew_h__$/;"	d
__wglext_h_	./GL/wglew.h	/^#define __wglext_h_$/;"	d
_apply_op	./glm/detail/_swizzle.hpp	/^		GLM_FUNC_QUALIFIER void _apply_op(vec<N, T, Q> const& that, const U& op)$/;"	f	struct:glm::detail::_swizzle_base2	typeref:typename:GLM_FUNC_QUALIFIER void
_buffer	./glm/detail/_swizzle.hpp	/^		char    _buffer[1];$/;"	m	struct:glm::detail::_swizzle_base0	typeref:typename:char[1]
_internal_	./glm/gtx/pca.inl	/^	namespace _internal_$/;"	n	namespace:glm	file:
_swizzle	./glm/detail/_swizzle.hpp	/^	struct _swizzle : public _swizzle_base2<N, T, Q, E0, E1, E2, E3, (E0 == E1 || E0 == E2 || E0 ==/;"	s	namespace:glm::detail
_swizzle_base0	./glm/detail/_swizzle.hpp	/^	struct _swizzle_base0$/;"	s	namespace:glm::detail
_swizzle_base1	./glm/detail/_swizzle.hpp	/^	struct _swizzle_base1 : public _swizzle_base0<T, N>$/;"	s	namespace:glm::detail
_swizzle_base1	./glm/detail/_swizzle.hpp	/^	struct _swizzle_base1<2, T, Q, E0,E1,-1,-2, Aligned> : public _swizzle_base0<T, 2>$/;"	s	namespace:glm::detail
_swizzle_base1	./glm/detail/_swizzle.hpp	/^	struct _swizzle_base1<3, T, Q, E0,E1,E2,-1, Aligned> : public _swizzle_base0<T, 3>$/;"	s	namespace:glm::detail
_swizzle_base1	./glm/detail/_swizzle.hpp	/^	struct _swizzle_base1<4, T, Q, E0,E1,E2,E3, Aligned> : public _swizzle_base0<T, 4>$/;"	s	namespace:glm::detail
_swizzle_base1	./glm/detail/type_vec4_simd.inl	/^		struct _swizzle_base1<4, float, Q, E0, E1, E2, E3, true> : public _swizzle_base0<float, 4>$/;"	s	namespace:glm::detail	file:
_swizzle_base1	./glm/detail/type_vec4_simd.inl	/^		struct _swizzle_base1<4, int, Q, E0, E1, E2, E3, true> : public _swizzle_base0<int, 4>$/;"	s	namespace:glm::detail	file:
_swizzle_base1	./glm/detail/type_vec4_simd.inl	/^		struct _swizzle_base1<4, uint, Q, E0, E1, E2, E3, true> : public _swizzle_base0<uint, 4>$/;"	s	namespace:glm::detail	file:
_swizzle_base2	./glm/detail/_swizzle.hpp	/^	struct _swizzle_base2 : public _swizzle_base1<N, T, Q, E0,E1,E2,E3, detail::is_aligned<Q>::valu/;"	s	namespace:glm::detail
_swizzle_base2	./glm/detail/_swizzle.hpp	/^	struct _swizzle_base2<N, T, Q, E0,E1,E2,E3, 1> : public _swizzle_base1<N, T, Q, E0,E1,E2,E3, de/;"	s	namespace:glm::detail
abs	./glm/detail/func_common.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR genFIType abs(genFIType x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR genFIType
abs	./glm/detail/func_common.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR int abs(int x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR int
abs	./glm/detail/func_common.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<L, T, Q> abs(vec<L, T, Q> const& x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<L,T,Q>
abs	./glm/ext/matrix_common.inl	/^	GLM_FUNC_DECL GLM_CONSTEXPR mat<C, R, T, Q> abs(mat<C, R, T, Q> const& x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_DECL GLM_CONSTEXPR mat<C,R,T,Q>
acos	./glm/detail/func_trigonometric.inl	/^	GLM_FUNC_QUALIFIER vec<L, T, Q> acos(vec<L, T, Q> const& v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<L,T,Q>
acosh	./glm/detail/func_trigonometric.inl	/^		GLM_FUNC_QUALIFIER genType acosh(genType x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genType
acosh	./glm/detail/func_trigonometric.inl	/^	GLM_FUNC_QUALIFIER vec<L, T, Q> acosh(vec<L, T, Q> const& v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<L,T,Q>
acot	./glm/ext/scalar_reciprocal.inl	/^	GLM_FUNC_QUALIFIER genType acot(genType x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genType
acot	./glm/ext/vector_reciprocal.inl	/^	GLM_FUNC_QUALIFIER vec<L, T, Q> acot(vec<L, T, Q> const& x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<L,T,Q>
acoth	./glm/ext/scalar_reciprocal.inl	/^	GLM_FUNC_QUALIFIER genType acoth(genType x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genType
acoth	./glm/ext/vector_reciprocal.inl	/^	GLM_FUNC_QUALIFIER vec<L, T, Q> acoth(vec<L, T, Q> const& x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<L,T,Q>
acsc	./glm/ext/scalar_reciprocal.inl	/^	GLM_FUNC_QUALIFIER genType acsc(genType x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genType
acsc	./glm/ext/vector_reciprocal.inl	/^	GLM_FUNC_QUALIFIER vec<L, T, Q> acsc(vec<L, T, Q> const& x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<L,T,Q>
acsch	./glm/ext/scalar_reciprocal.inl	/^	GLM_FUNC_QUALIFIER genType acsch(genType x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genType
acsch	./glm/ext/vector_reciprocal.inl	/^	GLM_FUNC_QUALIFIER vec<L, T, Q> acsch(vec<L, T, Q> const& x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<L,T,Q>
adjugate	./glm/gtx/matrix_operation.inl	/^	GLM_FUNC_QUALIFIER mat<2, 2, T, Q> adjugate(mat<2, 2, T, Q> const& m)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER mat<2,2,T,Q>
adjugate	./glm/gtx/matrix_operation.inl	/^	GLM_FUNC_QUALIFIER mat<3, 3, T, Q> adjugate(mat<3, 3, T, Q> const& m)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER mat<3,3,T,Q>
adjugate	./glm/gtx/matrix_operation.inl	/^	GLM_FUNC_QUALIFIER mat<4, 4, T, Q> adjugate(mat<4, 4, T, Q> const& m)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER mat<4,4,T,Q>
affineInverse	./glm/gtc/matrix_inverse.inl	/^	GLM_FUNC_QUALIFIER mat<3, 3, T, Q> affineInverse(mat<3, 3, T, Q> const& m)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER mat<3,3,T,Q>
affineInverse	./glm/gtc/matrix_inverse.inl	/^	GLM_FUNC_QUALIFIER mat<4, 4, T, Q> affineInverse(mat<4, 4, T, Q> const& m)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER mat<4,4,T,Q>
aligned	./glm/detail/qualifier.hpp	/^			aligned = aligned_highp, \/\/\/< By default aligned qualifier is also high precision$/;"	e	enum:glm::qualifier
aligned_bvec1	./glm/gtc/type_aligned.hpp	/^	typedef aligned_highp_bvec1			aligned_bvec1;$/;"	t	namespace:glm	typeref:typename:aligned_highp_bvec1
aligned_bvec1	./glm/gtc/type_aligned.hpp	/^	typedef aligned_lowp_bvec1			aligned_bvec1;$/;"	t	namespace:glm	typeref:typename:aligned_lowp_bvec1
aligned_bvec1	./glm/gtc/type_aligned.hpp	/^	typedef aligned_mediump_bvec1		aligned_bvec1;$/;"	t	namespace:glm	typeref:typename:aligned_mediump_bvec1
aligned_bvec2	./glm/gtc/type_aligned.hpp	/^	typedef aligned_highp_bvec2			aligned_bvec2;$/;"	t	namespace:glm	typeref:typename:aligned_highp_bvec2
aligned_bvec2	./glm/gtc/type_aligned.hpp	/^	typedef aligned_lowp_bvec2			aligned_bvec2;$/;"	t	namespace:glm	typeref:typename:aligned_lowp_bvec2
aligned_bvec2	./glm/gtc/type_aligned.hpp	/^	typedef aligned_mediump_bvec2		aligned_bvec2;$/;"	t	namespace:glm	typeref:typename:aligned_mediump_bvec2
aligned_bvec3	./glm/gtc/type_aligned.hpp	/^	typedef aligned_highp_bvec3			aligned_bvec3;$/;"	t	namespace:glm	typeref:typename:aligned_highp_bvec3
aligned_bvec3	./glm/gtc/type_aligned.hpp	/^	typedef aligned_lowp_bvec3			aligned_bvec3;$/;"	t	namespace:glm	typeref:typename:aligned_lowp_bvec3
aligned_bvec3	./glm/gtc/type_aligned.hpp	/^	typedef aligned_mediump_bvec3		aligned_bvec3;$/;"	t	namespace:glm	typeref:typename:aligned_mediump_bvec3
aligned_bvec4	./glm/gtc/type_aligned.hpp	/^	typedef aligned_highp_bvec4			aligned_bvec4;$/;"	t	namespace:glm	typeref:typename:aligned_highp_bvec4
aligned_bvec4	./glm/gtc/type_aligned.hpp	/^	typedef aligned_lowp_bvec4			aligned_bvec4;$/;"	t	namespace:glm	typeref:typename:aligned_lowp_bvec4
aligned_bvec4	./glm/gtc/type_aligned.hpp	/^	typedef aligned_mediump_bvec4		aligned_bvec4;$/;"	t	namespace:glm	typeref:typename:aligned_mediump_bvec4
aligned_dmat2	./glm/gtc/type_aligned.hpp	/^	typedef aligned_highp_dmat2			aligned_dmat2;$/;"	t	namespace:glm	typeref:typename:aligned_highp_dmat2
aligned_dmat2	./glm/gtc/type_aligned.hpp	/^	typedef aligned_lowp_dmat2			aligned_dmat2;$/;"	t	namespace:glm	typeref:typename:aligned_lowp_dmat2
aligned_dmat2	./glm/gtc/type_aligned.hpp	/^	typedef aligned_mediump_dmat2		aligned_dmat2;$/;"	t	namespace:glm	typeref:typename:aligned_mediump_dmat2
aligned_dmat2x2	./glm/gtc/type_aligned.hpp	/^	typedef aligned_highp_dmat2x2		aligned_dmat2x2;$/;"	t	namespace:glm	typeref:typename:aligned_highp_dmat2x2
aligned_dmat2x2	./glm/gtc/type_aligned.hpp	/^	typedef aligned_lowp_dmat2x2		aligned_dmat2x2;$/;"	t	namespace:glm	typeref:typename:aligned_lowp_dmat2x2
aligned_dmat2x2	./glm/gtc/type_aligned.hpp	/^	typedef aligned_mediump_dmat2x2		aligned_dmat2x2;$/;"	t	namespace:glm	typeref:typename:aligned_mediump_dmat2x2
aligned_dmat2x3	./glm/gtc/type_aligned.hpp	/^	typedef aligned_highp_dmat2x3		aligned_dmat2x3;$/;"	t	namespace:glm	typeref:typename:aligned_highp_dmat2x3
aligned_dmat2x3	./glm/gtc/type_aligned.hpp	/^	typedef aligned_lowp_dmat2x3		aligned_dmat2x3;$/;"	t	namespace:glm	typeref:typename:aligned_lowp_dmat2x3
aligned_dmat2x3	./glm/gtc/type_aligned.hpp	/^	typedef aligned_mediump_dmat2x3		aligned_dmat2x3;$/;"	t	namespace:glm	typeref:typename:aligned_mediump_dmat2x3
aligned_dmat2x4	./glm/gtc/type_aligned.hpp	/^	typedef aligned_highp_dmat2x4		aligned_dmat2x4;$/;"	t	namespace:glm	typeref:typename:aligned_highp_dmat2x4
aligned_dmat2x4	./glm/gtc/type_aligned.hpp	/^	typedef aligned_lowp_dmat2x4		aligned_dmat2x4;$/;"	t	namespace:glm	typeref:typename:aligned_lowp_dmat2x4
aligned_dmat2x4	./glm/gtc/type_aligned.hpp	/^	typedef aligned_mediump_dmat2x4		aligned_dmat2x4;$/;"	t	namespace:glm	typeref:typename:aligned_mediump_dmat2x4
aligned_dmat3	./glm/gtc/type_aligned.hpp	/^	typedef aligned_highp_dmat3			aligned_dmat3;$/;"	t	namespace:glm	typeref:typename:aligned_highp_dmat3
aligned_dmat3	./glm/gtc/type_aligned.hpp	/^	typedef aligned_lowp_dmat3			aligned_dmat3;$/;"	t	namespace:glm	typeref:typename:aligned_lowp_dmat3
aligned_dmat3	./glm/gtc/type_aligned.hpp	/^	typedef aligned_mediump_dmat3		aligned_dmat3;$/;"	t	namespace:glm	typeref:typename:aligned_mediump_dmat3
aligned_dmat3x2	./glm/gtc/type_aligned.hpp	/^	typedef aligned_highp_dmat3x2		aligned_dmat3x2;$/;"	t	namespace:glm	typeref:typename:aligned_highp_dmat3x2
aligned_dmat3x2	./glm/gtc/type_aligned.hpp	/^	typedef aligned_lowp_dmat3x2		aligned_dmat3x2;$/;"	t	namespace:glm	typeref:typename:aligned_lowp_dmat3x2
aligned_dmat3x2	./glm/gtc/type_aligned.hpp	/^	typedef aligned_mediump_dmat3x2		aligned_dmat3x2;$/;"	t	namespace:glm	typeref:typename:aligned_mediump_dmat3x2
aligned_dmat3x3	./glm/gtc/type_aligned.hpp	/^	typedef aligned_highp_dmat3x3		aligned_dmat3x3;$/;"	t	namespace:glm	typeref:typename:aligned_highp_dmat3x3
aligned_dmat3x3	./glm/gtc/type_aligned.hpp	/^	typedef aligned_lowp_dmat3x3		aligned_dmat3x3;$/;"	t	namespace:glm	typeref:typename:aligned_lowp_dmat3x3
aligned_dmat3x3	./glm/gtc/type_aligned.hpp	/^	typedef aligned_mediump_dmat3x3		aligned_dmat3x3;$/;"	t	namespace:glm	typeref:typename:aligned_mediump_dmat3x3
aligned_dmat3x4	./glm/gtc/type_aligned.hpp	/^	typedef aligned_highp_dmat3x4		aligned_dmat3x4;$/;"	t	namespace:glm	typeref:typename:aligned_highp_dmat3x4
aligned_dmat3x4	./glm/gtc/type_aligned.hpp	/^	typedef aligned_lowp_dmat3x4		aligned_dmat3x4;$/;"	t	namespace:glm	typeref:typename:aligned_lowp_dmat3x4
aligned_dmat3x4	./glm/gtc/type_aligned.hpp	/^	typedef aligned_mediump_dmat3x4		aligned_dmat3x4;$/;"	t	namespace:glm	typeref:typename:aligned_mediump_dmat3x4
aligned_dmat4	./glm/gtc/type_aligned.hpp	/^	typedef aligned_highp_dmat4			aligned_dmat4;$/;"	t	namespace:glm	typeref:typename:aligned_highp_dmat4
aligned_dmat4	./glm/gtc/type_aligned.hpp	/^	typedef aligned_lowp_dmat4			aligned_dmat4;$/;"	t	namespace:glm	typeref:typename:aligned_lowp_dmat4
aligned_dmat4	./glm/gtc/type_aligned.hpp	/^	typedef aligned_mediump_dmat4		aligned_dmat4;$/;"	t	namespace:glm	typeref:typename:aligned_mediump_dmat4
aligned_dmat4x2	./glm/gtc/type_aligned.hpp	/^	typedef aligned_highp_dmat4x2		aligned_dmat4x2;$/;"	t	namespace:glm	typeref:typename:aligned_highp_dmat4x2
aligned_dmat4x2	./glm/gtc/type_aligned.hpp	/^	typedef aligned_lowp_dmat4x2		aligned_dmat4x2;$/;"	t	namespace:glm	typeref:typename:aligned_lowp_dmat4x2
aligned_dmat4x2	./glm/gtc/type_aligned.hpp	/^	typedef aligned_mediump_dmat4x2		aligned_dmat4x2;$/;"	t	namespace:glm	typeref:typename:aligned_mediump_dmat4x2
aligned_dmat4x3	./glm/gtc/type_aligned.hpp	/^	typedef aligned_highp_dmat4x3		aligned_dmat4x3;$/;"	t	namespace:glm	typeref:typename:aligned_highp_dmat4x3
aligned_dmat4x3	./glm/gtc/type_aligned.hpp	/^	typedef aligned_lowp_dmat4x3		aligned_dmat4x3;$/;"	t	namespace:glm	typeref:typename:aligned_lowp_dmat4x3
aligned_dmat4x3	./glm/gtc/type_aligned.hpp	/^	typedef aligned_mediump_dmat4x3		aligned_dmat4x3;$/;"	t	namespace:glm	typeref:typename:aligned_mediump_dmat4x3
aligned_dmat4x4	./glm/gtc/type_aligned.hpp	/^	typedef aligned_highp_dmat4x4		aligned_dmat4x4;$/;"	t	namespace:glm	typeref:typename:aligned_highp_dmat4x4
aligned_dmat4x4	./glm/gtc/type_aligned.hpp	/^	typedef aligned_lowp_dmat4x4		aligned_dmat4x4;$/;"	t	namespace:glm	typeref:typename:aligned_lowp_dmat4x4
aligned_dmat4x4	./glm/gtc/type_aligned.hpp	/^	typedef aligned_mediump_dmat4x4		aligned_dmat4x4;$/;"	t	namespace:glm	typeref:typename:aligned_mediump_dmat4x4
aligned_dvec1	./glm/gtc/type_aligned.hpp	/^	typedef aligned_highp_dvec1			aligned_dvec1;$/;"	t	namespace:glm	typeref:typename:aligned_highp_dvec1
aligned_dvec1	./glm/gtc/type_aligned.hpp	/^	typedef aligned_lowp_dvec1			aligned_dvec1;$/;"	t	namespace:glm	typeref:typename:aligned_lowp_dvec1
aligned_dvec1	./glm/gtc/type_aligned.hpp	/^	typedef aligned_mediump_dvec1		aligned_dvec1;$/;"	t	namespace:glm	typeref:typename:aligned_mediump_dvec1
aligned_dvec2	./glm/gtc/type_aligned.hpp	/^	typedef aligned_highp_dvec2			aligned_dvec2;$/;"	t	namespace:glm	typeref:typename:aligned_highp_dvec2
aligned_dvec2	./glm/gtc/type_aligned.hpp	/^	typedef aligned_lowp_dvec2			aligned_dvec2;$/;"	t	namespace:glm	typeref:typename:aligned_lowp_dvec2
aligned_dvec2	./glm/gtc/type_aligned.hpp	/^	typedef aligned_mediump_dvec2		aligned_dvec2;$/;"	t	namespace:glm	typeref:typename:aligned_mediump_dvec2
aligned_dvec3	./glm/gtc/type_aligned.hpp	/^	typedef aligned_highp_dvec3			aligned_dvec3;$/;"	t	namespace:glm	typeref:typename:aligned_highp_dvec3
aligned_dvec3	./glm/gtc/type_aligned.hpp	/^	typedef aligned_lowp_dvec3			aligned_dvec3;$/;"	t	namespace:glm	typeref:typename:aligned_lowp_dvec3
aligned_dvec3	./glm/gtc/type_aligned.hpp	/^	typedef aligned_mediump_dvec3		aligned_dvec3;$/;"	t	namespace:glm	typeref:typename:aligned_mediump_dvec3
aligned_dvec4	./glm/gtc/type_aligned.hpp	/^	typedef aligned_highp_dvec4			aligned_dvec4;$/;"	t	namespace:glm	typeref:typename:aligned_highp_dvec4
aligned_dvec4	./glm/gtc/type_aligned.hpp	/^	typedef aligned_lowp_dvec4			aligned_dvec4;$/;"	t	namespace:glm	typeref:typename:aligned_lowp_dvec4
aligned_dvec4	./glm/gtc/type_aligned.hpp	/^	typedef aligned_mediump_dvec4		aligned_dvec4;$/;"	t	namespace:glm	typeref:typename:aligned_mediump_dvec4
aligned_highp	./glm/detail/qualifier.hpp	/^			aligned_highp, \/\/\/< Typed data is aligned in memory allowing SIMD optimizations and operat/;"	e	enum:glm::qualifier
aligned_highp_bvec1	./glm/gtc/type_aligned.hpp	/^	typedef vec<1, bool, aligned_highp>		aligned_highp_bvec1;$/;"	t	namespace:glm	typeref:typename:vec<1,bool,aligned_highp>
aligned_highp_bvec2	./glm/gtc/type_aligned.hpp	/^	typedef vec<2, bool, aligned_highp>		aligned_highp_bvec2;$/;"	t	namespace:glm	typeref:typename:vec<2,bool,aligned_highp>
aligned_highp_bvec3	./glm/gtc/type_aligned.hpp	/^	typedef vec<3, bool, aligned_highp>		aligned_highp_bvec3;$/;"	t	namespace:glm	typeref:typename:vec<3,bool,aligned_highp>
aligned_highp_bvec4	./glm/gtc/type_aligned.hpp	/^	typedef vec<4, bool, aligned_highp>		aligned_highp_bvec4;$/;"	t	namespace:glm	typeref:typename:vec<4,bool,aligned_highp>
aligned_highp_dmat2	./glm/gtc/type_aligned.hpp	/^	typedef mat<2, 2, double, aligned_highp>	aligned_highp_dmat2;$/;"	t	namespace:glm	typeref:typename:mat<2,2,double,aligned_highp>
aligned_highp_dmat2x2	./glm/gtc/type_aligned.hpp	/^	typedef mat<2, 2, double, aligned_highp>	aligned_highp_dmat2x2;$/;"	t	namespace:glm	typeref:typename:mat<2,2,double,aligned_highp>
aligned_highp_dmat2x3	./glm/gtc/type_aligned.hpp	/^	typedef mat<2, 3, double, aligned_highp>	aligned_highp_dmat2x3;$/;"	t	namespace:glm	typeref:typename:mat<2,3,double,aligned_highp>
aligned_highp_dmat2x4	./glm/gtc/type_aligned.hpp	/^	typedef mat<2, 4, double, aligned_highp>	aligned_highp_dmat2x4;$/;"	t	namespace:glm	typeref:typename:mat<2,4,double,aligned_highp>
aligned_highp_dmat3	./glm/gtc/type_aligned.hpp	/^	typedef mat<3, 3, double, aligned_highp>	aligned_highp_dmat3;$/;"	t	namespace:glm	typeref:typename:mat<3,3,double,aligned_highp>
aligned_highp_dmat3x2	./glm/gtc/type_aligned.hpp	/^	typedef mat<3, 2, double, aligned_highp>	aligned_highp_dmat3x2;$/;"	t	namespace:glm	typeref:typename:mat<3,2,double,aligned_highp>
aligned_highp_dmat3x3	./glm/gtc/type_aligned.hpp	/^	typedef mat<3, 3, double, aligned_highp>	aligned_highp_dmat3x3;$/;"	t	namespace:glm	typeref:typename:mat<3,3,double,aligned_highp>
aligned_highp_dmat3x4	./glm/gtc/type_aligned.hpp	/^	typedef mat<3, 4, double, aligned_highp>	aligned_highp_dmat3x4;$/;"	t	namespace:glm	typeref:typename:mat<3,4,double,aligned_highp>
aligned_highp_dmat4	./glm/gtc/type_aligned.hpp	/^	typedef mat<4, 4, double, aligned_highp>	aligned_highp_dmat4;$/;"	t	namespace:glm	typeref:typename:mat<4,4,double,aligned_highp>
aligned_highp_dmat4x2	./glm/gtc/type_aligned.hpp	/^	typedef mat<4, 2, double, aligned_highp>	aligned_highp_dmat4x2;$/;"	t	namespace:glm	typeref:typename:mat<4,2,double,aligned_highp>
aligned_highp_dmat4x3	./glm/gtc/type_aligned.hpp	/^	typedef mat<4, 3, double, aligned_highp>	aligned_highp_dmat4x3;$/;"	t	namespace:glm	typeref:typename:mat<4,3,double,aligned_highp>
aligned_highp_dmat4x4	./glm/gtc/type_aligned.hpp	/^	typedef mat<4, 4, double, aligned_highp>	aligned_highp_dmat4x4;$/;"	t	namespace:glm	typeref:typename:mat<4,4,double,aligned_highp>
aligned_highp_dvec1	./glm/gtc/type_aligned.hpp	/^	typedef vec<1, double, aligned_highp>	aligned_highp_dvec1;$/;"	t	namespace:glm	typeref:typename:vec<1,double,aligned_highp>
aligned_highp_dvec2	./glm/gtc/type_aligned.hpp	/^	typedef vec<2, double, aligned_highp>	aligned_highp_dvec2;$/;"	t	namespace:glm	typeref:typename:vec<2,double,aligned_highp>
aligned_highp_dvec3	./glm/gtc/type_aligned.hpp	/^	typedef vec<3, double, aligned_highp>	aligned_highp_dvec3;$/;"	t	namespace:glm	typeref:typename:vec<3,double,aligned_highp>
aligned_highp_dvec4	./glm/gtc/type_aligned.hpp	/^	typedef vec<4, double, aligned_highp>	aligned_highp_dvec4;$/;"	t	namespace:glm	typeref:typename:vec<4,double,aligned_highp>
aligned_highp_ivec1	./glm/gtc/type_aligned.hpp	/^	typedef vec<1, int, aligned_highp>		aligned_highp_ivec1;$/;"	t	namespace:glm	typeref:typename:vec<1,int,aligned_highp>
aligned_highp_ivec2	./glm/gtc/type_aligned.hpp	/^	typedef vec<2, int, aligned_highp>		aligned_highp_ivec2;$/;"	t	namespace:glm	typeref:typename:vec<2,int,aligned_highp>
aligned_highp_ivec3	./glm/gtc/type_aligned.hpp	/^	typedef vec<3, int, aligned_highp>		aligned_highp_ivec3;$/;"	t	namespace:glm	typeref:typename:vec<3,int,aligned_highp>
aligned_highp_ivec4	./glm/gtc/type_aligned.hpp	/^	typedef vec<4, int, aligned_highp>		aligned_highp_ivec4;$/;"	t	namespace:glm	typeref:typename:vec<4,int,aligned_highp>
aligned_highp_mat2	./glm/gtc/type_aligned.hpp	/^	typedef mat<2, 2, float, aligned_highp>		aligned_highp_mat2;$/;"	t	namespace:glm	typeref:typename:mat<2,2,float,aligned_highp>
aligned_highp_mat2x2	./glm/gtc/type_aligned.hpp	/^	typedef mat<2, 2, float, aligned_highp>		aligned_highp_mat2x2;$/;"	t	namespace:glm	typeref:typename:mat<2,2,float,aligned_highp>
aligned_highp_mat2x3	./glm/gtc/type_aligned.hpp	/^	typedef mat<2, 3, float, aligned_highp>		aligned_highp_mat2x3;$/;"	t	namespace:glm	typeref:typename:mat<2,3,float,aligned_highp>
aligned_highp_mat2x4	./glm/gtc/type_aligned.hpp	/^	typedef mat<2, 4, float, aligned_highp>		aligned_highp_mat2x4;$/;"	t	namespace:glm	typeref:typename:mat<2,4,float,aligned_highp>
aligned_highp_mat3	./glm/gtc/type_aligned.hpp	/^	typedef mat<3, 3, float, aligned_highp>		aligned_highp_mat3;$/;"	t	namespace:glm	typeref:typename:mat<3,3,float,aligned_highp>
aligned_highp_mat3x2	./glm/gtc/type_aligned.hpp	/^	typedef mat<3, 2, float, aligned_highp>		aligned_highp_mat3x2;$/;"	t	namespace:glm	typeref:typename:mat<3,2,float,aligned_highp>
aligned_highp_mat3x3	./glm/gtc/type_aligned.hpp	/^	typedef mat<3, 3, float, aligned_highp>		aligned_highp_mat3x3;$/;"	t	namespace:glm	typeref:typename:mat<3,3,float,aligned_highp>
aligned_highp_mat3x4	./glm/gtc/type_aligned.hpp	/^	typedef mat<3, 4, float, aligned_highp>		aligned_highp_mat3x4;$/;"	t	namespace:glm	typeref:typename:mat<3,4,float,aligned_highp>
aligned_highp_mat4	./glm/gtc/type_aligned.hpp	/^	typedef mat<4, 4, float, aligned_highp>		aligned_highp_mat4;$/;"	t	namespace:glm	typeref:typename:mat<4,4,float,aligned_highp>
aligned_highp_mat4x2	./glm/gtc/type_aligned.hpp	/^	typedef mat<4, 2, float, aligned_highp>		aligned_highp_mat4x2;$/;"	t	namespace:glm	typeref:typename:mat<4,2,float,aligned_highp>
aligned_highp_mat4x3	./glm/gtc/type_aligned.hpp	/^	typedef mat<4, 3, float, aligned_highp>		aligned_highp_mat4x3;$/;"	t	namespace:glm	typeref:typename:mat<4,3,float,aligned_highp>
aligned_highp_mat4x4	./glm/gtc/type_aligned.hpp	/^	typedef mat<4, 4, float, aligned_highp>		aligned_highp_mat4x4;$/;"	t	namespace:glm	typeref:typename:mat<4,4,float,aligned_highp>
aligned_highp_uvec1	./glm/gtc/type_aligned.hpp	/^	typedef vec<1, uint, aligned_highp>		aligned_highp_uvec1;$/;"	t	namespace:glm	typeref:typename:vec<1,uint,aligned_highp>
aligned_highp_uvec2	./glm/gtc/type_aligned.hpp	/^	typedef vec<2, uint, aligned_highp>		aligned_highp_uvec2;$/;"	t	namespace:glm	typeref:typename:vec<2,uint,aligned_highp>
aligned_highp_uvec3	./glm/gtc/type_aligned.hpp	/^	typedef vec<3, uint, aligned_highp>		aligned_highp_uvec3;$/;"	t	namespace:glm	typeref:typename:vec<3,uint,aligned_highp>
aligned_highp_uvec4	./glm/gtc/type_aligned.hpp	/^	typedef vec<4, uint, aligned_highp>		aligned_highp_uvec4;$/;"	t	namespace:glm	typeref:typename:vec<4,uint,aligned_highp>
aligned_highp_vec1	./glm/gtc/type_aligned.hpp	/^	typedef vec<1, float, aligned_highp>	aligned_highp_vec1;$/;"	t	namespace:glm	typeref:typename:vec<1,float,aligned_highp>
aligned_highp_vec2	./glm/gtc/type_aligned.hpp	/^	typedef vec<2, float, aligned_highp>	aligned_highp_vec2;$/;"	t	namespace:glm	typeref:typename:vec<2,float,aligned_highp>
aligned_highp_vec3	./glm/gtc/type_aligned.hpp	/^	typedef vec<3, float, aligned_highp>	aligned_highp_vec3;$/;"	t	namespace:glm	typeref:typename:vec<3,float,aligned_highp>
aligned_highp_vec4	./glm/gtc/type_aligned.hpp	/^	typedef vec<4, float, aligned_highp>	aligned_highp_vec4;$/;"	t	namespace:glm	typeref:typename:vec<4,float,aligned_highp>
aligned_ivec1	./glm/gtc/type_aligned.hpp	/^	typedef aligned_highp_ivec1			aligned_ivec1;$/;"	t	namespace:glm	typeref:typename:aligned_highp_ivec1
aligned_ivec1	./glm/gtc/type_aligned.hpp	/^	typedef aligned_lowp_ivec1			aligned_ivec1;$/;"	t	namespace:glm	typeref:typename:aligned_lowp_ivec1
aligned_ivec1	./glm/gtc/type_aligned.hpp	/^	typedef aligned_mediump_ivec1		aligned_ivec1;$/;"	t	namespace:glm	typeref:typename:aligned_mediump_ivec1
aligned_ivec2	./glm/gtc/type_aligned.hpp	/^	typedef aligned_highp_ivec2			aligned_ivec2;$/;"	t	namespace:glm	typeref:typename:aligned_highp_ivec2
aligned_ivec2	./glm/gtc/type_aligned.hpp	/^	typedef aligned_lowp_ivec2			aligned_ivec2;$/;"	t	namespace:glm	typeref:typename:aligned_lowp_ivec2
aligned_ivec2	./glm/gtc/type_aligned.hpp	/^	typedef aligned_mediump_ivec2		aligned_ivec2;$/;"	t	namespace:glm	typeref:typename:aligned_mediump_ivec2
aligned_ivec3	./glm/gtc/type_aligned.hpp	/^	typedef aligned_highp_ivec3			aligned_ivec3;$/;"	t	namespace:glm	typeref:typename:aligned_highp_ivec3
aligned_ivec3	./glm/gtc/type_aligned.hpp	/^	typedef aligned_lowp_ivec3			aligned_ivec3;$/;"	t	namespace:glm	typeref:typename:aligned_lowp_ivec3
aligned_ivec3	./glm/gtc/type_aligned.hpp	/^	typedef aligned_mediump_ivec3		aligned_ivec3;$/;"	t	namespace:glm	typeref:typename:aligned_mediump_ivec3
aligned_ivec4	./glm/gtc/type_aligned.hpp	/^	typedef aligned_highp_ivec4			aligned_ivec4;$/;"	t	namespace:glm	typeref:typename:aligned_highp_ivec4
aligned_ivec4	./glm/gtc/type_aligned.hpp	/^	typedef aligned_lowp_ivec4			aligned_ivec4;$/;"	t	namespace:glm	typeref:typename:aligned_lowp_ivec4
aligned_ivec4	./glm/gtc/type_aligned.hpp	/^	typedef aligned_mediump_ivec4		aligned_ivec4;$/;"	t	namespace:glm	typeref:typename:aligned_mediump_ivec4
aligned_lowp	./glm/detail/qualifier.hpp	/^			aligned_lowp, \/\/ \/\/\/< Typed data is aligned in memory allowing SIMD optimizations and op/;"	e	enum:glm::qualifier
aligned_lowp_bvec1	./glm/gtc/type_aligned.hpp	/^	typedef vec<1, bool, aligned_lowp>		aligned_lowp_bvec1;$/;"	t	namespace:glm	typeref:typename:vec<1,bool,aligned_lowp>
aligned_lowp_bvec2	./glm/gtc/type_aligned.hpp	/^	typedef vec<2, bool, aligned_lowp>		aligned_lowp_bvec2;$/;"	t	namespace:glm	typeref:typename:vec<2,bool,aligned_lowp>
aligned_lowp_bvec3	./glm/gtc/type_aligned.hpp	/^	typedef vec<3, bool, aligned_lowp>		aligned_lowp_bvec3;$/;"	t	namespace:glm	typeref:typename:vec<3,bool,aligned_lowp>
aligned_lowp_bvec4	./glm/gtc/type_aligned.hpp	/^	typedef vec<4, bool, aligned_lowp>		aligned_lowp_bvec4;$/;"	t	namespace:glm	typeref:typename:vec<4,bool,aligned_lowp>
aligned_lowp_dmat2	./glm/gtc/type_aligned.hpp	/^	typedef mat<2, 2, double, aligned_lowp>		aligned_lowp_dmat2;$/;"	t	namespace:glm	typeref:typename:mat<2,2,double,aligned_lowp>
aligned_lowp_dmat2x2	./glm/gtc/type_aligned.hpp	/^	typedef mat<2, 2, double, aligned_lowp>		aligned_lowp_dmat2x2;$/;"	t	namespace:glm	typeref:typename:mat<2,2,double,aligned_lowp>
aligned_lowp_dmat2x3	./glm/gtc/type_aligned.hpp	/^	typedef mat<2, 3, double, aligned_lowp>		aligned_lowp_dmat2x3;$/;"	t	namespace:glm	typeref:typename:mat<2,3,double,aligned_lowp>
aligned_lowp_dmat2x4	./glm/gtc/type_aligned.hpp	/^	typedef mat<2, 4, double, aligned_lowp>		aligned_lowp_dmat2x4;$/;"	t	namespace:glm	typeref:typename:mat<2,4,double,aligned_lowp>
aligned_lowp_dmat3	./glm/gtc/type_aligned.hpp	/^	typedef mat<3, 3, double, aligned_lowp>		aligned_lowp_dmat3;$/;"	t	namespace:glm	typeref:typename:mat<3,3,double,aligned_lowp>
aligned_lowp_dmat3x2	./glm/gtc/type_aligned.hpp	/^	typedef mat<3, 2, double, aligned_lowp>		aligned_lowp_dmat3x2;$/;"	t	namespace:glm	typeref:typename:mat<3,2,double,aligned_lowp>
aligned_lowp_dmat3x3	./glm/gtc/type_aligned.hpp	/^	typedef mat<3, 3, double, aligned_lowp>		aligned_lowp_dmat3x3;$/;"	t	namespace:glm	typeref:typename:mat<3,3,double,aligned_lowp>
aligned_lowp_dmat3x4	./glm/gtc/type_aligned.hpp	/^	typedef mat<3, 4, double, aligned_lowp>		aligned_lowp_dmat3x4;$/;"	t	namespace:glm	typeref:typename:mat<3,4,double,aligned_lowp>
aligned_lowp_dmat4	./glm/gtc/type_aligned.hpp	/^	typedef mat<4, 4, double, aligned_lowp>		aligned_lowp_dmat4;$/;"	t	namespace:glm	typeref:typename:mat<4,4,double,aligned_lowp>
aligned_lowp_dmat4x2	./glm/gtc/type_aligned.hpp	/^	typedef mat<4, 2, double, aligned_lowp>		aligned_lowp_dmat4x2;$/;"	t	namespace:glm	typeref:typename:mat<4,2,double,aligned_lowp>
aligned_lowp_dmat4x3	./glm/gtc/type_aligned.hpp	/^	typedef mat<4, 3, double, aligned_lowp>		aligned_lowp_dmat4x3;$/;"	t	namespace:glm	typeref:typename:mat<4,3,double,aligned_lowp>
aligned_lowp_dmat4x4	./glm/gtc/type_aligned.hpp	/^	typedef mat<4, 4, double, aligned_lowp>		aligned_lowp_dmat4x4;$/;"	t	namespace:glm	typeref:typename:mat<4,4,double,aligned_lowp>
aligned_lowp_dvec1	./glm/gtc/type_aligned.hpp	/^	typedef vec<1, double, aligned_lowp>	aligned_lowp_dvec1;$/;"	t	namespace:glm	typeref:typename:vec<1,double,aligned_lowp>
aligned_lowp_dvec2	./glm/gtc/type_aligned.hpp	/^	typedef vec<2, double, aligned_lowp>	aligned_lowp_dvec2;$/;"	t	namespace:glm	typeref:typename:vec<2,double,aligned_lowp>
aligned_lowp_dvec3	./glm/gtc/type_aligned.hpp	/^	typedef vec<3, double, aligned_lowp>	aligned_lowp_dvec3;$/;"	t	namespace:glm	typeref:typename:vec<3,double,aligned_lowp>
aligned_lowp_dvec4	./glm/gtc/type_aligned.hpp	/^	typedef vec<4, double, aligned_lowp>	aligned_lowp_dvec4;$/;"	t	namespace:glm	typeref:typename:vec<4,double,aligned_lowp>
aligned_lowp_ivec1	./glm/gtc/type_aligned.hpp	/^	typedef vec<1, int, aligned_lowp>		aligned_lowp_ivec1;$/;"	t	namespace:glm	typeref:typename:vec<1,int,aligned_lowp>
aligned_lowp_ivec2	./glm/gtc/type_aligned.hpp	/^	typedef vec<2, int, aligned_lowp>		aligned_lowp_ivec2;$/;"	t	namespace:glm	typeref:typename:vec<2,int,aligned_lowp>
aligned_lowp_ivec3	./glm/gtc/type_aligned.hpp	/^	typedef vec<3, int, aligned_lowp>		aligned_lowp_ivec3;$/;"	t	namespace:glm	typeref:typename:vec<3,int,aligned_lowp>
aligned_lowp_ivec4	./glm/gtc/type_aligned.hpp	/^	typedef vec<4, int, aligned_lowp>		aligned_lowp_ivec4;$/;"	t	namespace:glm	typeref:typename:vec<4,int,aligned_lowp>
aligned_lowp_mat2	./glm/gtc/type_aligned.hpp	/^	typedef mat<2, 2, float, aligned_lowp>		aligned_lowp_mat2;$/;"	t	namespace:glm	typeref:typename:mat<2,2,float,aligned_lowp>
aligned_lowp_mat2x2	./glm/gtc/type_aligned.hpp	/^	typedef mat<2, 2, float, aligned_lowp>		aligned_lowp_mat2x2;$/;"	t	namespace:glm	typeref:typename:mat<2,2,float,aligned_lowp>
aligned_lowp_mat2x3	./glm/gtc/type_aligned.hpp	/^	typedef mat<2, 3, float, aligned_lowp>		aligned_lowp_mat2x3;$/;"	t	namespace:glm	typeref:typename:mat<2,3,float,aligned_lowp>
aligned_lowp_mat2x4	./glm/gtc/type_aligned.hpp	/^	typedef mat<2, 4, float, aligned_lowp>		aligned_lowp_mat2x4;$/;"	t	namespace:glm	typeref:typename:mat<2,4,float,aligned_lowp>
aligned_lowp_mat3	./glm/gtc/type_aligned.hpp	/^	typedef mat<3, 3, float, aligned_lowp>		aligned_lowp_mat3;$/;"	t	namespace:glm	typeref:typename:mat<3,3,float,aligned_lowp>
aligned_lowp_mat3x2	./glm/gtc/type_aligned.hpp	/^	typedef mat<3, 2, float, aligned_lowp>		aligned_lowp_mat3x2;$/;"	t	namespace:glm	typeref:typename:mat<3,2,float,aligned_lowp>
aligned_lowp_mat3x3	./glm/gtc/type_aligned.hpp	/^	typedef mat<3, 3, float, aligned_lowp>		aligned_lowp_mat3x3;$/;"	t	namespace:glm	typeref:typename:mat<3,3,float,aligned_lowp>
aligned_lowp_mat3x4	./glm/gtc/type_aligned.hpp	/^	typedef mat<3, 4, float, aligned_lowp>		aligned_lowp_mat3x4;$/;"	t	namespace:glm	typeref:typename:mat<3,4,float,aligned_lowp>
aligned_lowp_mat4	./glm/gtc/type_aligned.hpp	/^	typedef mat<4, 4, float, aligned_lowp>		aligned_lowp_mat4;$/;"	t	namespace:glm	typeref:typename:mat<4,4,float,aligned_lowp>
aligned_lowp_mat4x2	./glm/gtc/type_aligned.hpp	/^	typedef mat<4, 2, float, aligned_lowp>		aligned_lowp_mat4x2;$/;"	t	namespace:glm	typeref:typename:mat<4,2,float,aligned_lowp>
aligned_lowp_mat4x3	./glm/gtc/type_aligned.hpp	/^	typedef mat<4, 3, float, aligned_lowp>		aligned_lowp_mat4x3;$/;"	t	namespace:glm	typeref:typename:mat<4,3,float,aligned_lowp>
aligned_lowp_mat4x4	./glm/gtc/type_aligned.hpp	/^	typedef mat<4, 4, float, aligned_lowp>		aligned_lowp_mat4x4;$/;"	t	namespace:glm	typeref:typename:mat<4,4,float,aligned_lowp>
aligned_lowp_uvec1	./glm/gtc/type_aligned.hpp	/^	typedef vec<1, uint, aligned_lowp>		aligned_lowp_uvec1;$/;"	t	namespace:glm	typeref:typename:vec<1,uint,aligned_lowp>
aligned_lowp_uvec2	./glm/gtc/type_aligned.hpp	/^	typedef vec<2, uint, aligned_lowp>		aligned_lowp_uvec2;$/;"	t	namespace:glm	typeref:typename:vec<2,uint,aligned_lowp>
aligned_lowp_uvec3	./glm/gtc/type_aligned.hpp	/^	typedef vec<3, uint, aligned_lowp>		aligned_lowp_uvec3;$/;"	t	namespace:glm	typeref:typename:vec<3,uint,aligned_lowp>
aligned_lowp_uvec4	./glm/gtc/type_aligned.hpp	/^	typedef vec<4, uint, aligned_lowp>		aligned_lowp_uvec4;$/;"	t	namespace:glm	typeref:typename:vec<4,uint,aligned_lowp>
aligned_lowp_vec1	./glm/gtc/type_aligned.hpp	/^	typedef vec<1, float, aligned_lowp>		aligned_lowp_vec1;$/;"	t	namespace:glm	typeref:typename:vec<1,float,aligned_lowp>
aligned_lowp_vec2	./glm/gtc/type_aligned.hpp	/^	typedef vec<2, float, aligned_lowp>		aligned_lowp_vec2;$/;"	t	namespace:glm	typeref:typename:vec<2,float,aligned_lowp>
aligned_lowp_vec3	./glm/gtc/type_aligned.hpp	/^	typedef vec<3, float, aligned_lowp>		aligned_lowp_vec3;$/;"	t	namespace:glm	typeref:typename:vec<3,float,aligned_lowp>
aligned_lowp_vec4	./glm/gtc/type_aligned.hpp	/^	typedef vec<4, float, aligned_lowp>		aligned_lowp_vec4;$/;"	t	namespace:glm	typeref:typename:vec<4,float,aligned_lowp>
aligned_mat2	./glm/gtc/type_aligned.hpp	/^	typedef aligned_highp_mat2			aligned_mat2;$/;"	t	namespace:glm	typeref:typename:aligned_highp_mat2
aligned_mat2	./glm/gtc/type_aligned.hpp	/^	typedef aligned_lowp_mat2			aligned_mat2;$/;"	t	namespace:glm	typeref:typename:aligned_lowp_mat2
aligned_mat2	./glm/gtc/type_aligned.hpp	/^	typedef aligned_mediump_mat2		aligned_mat2;$/;"	t	namespace:glm	typeref:typename:aligned_mediump_mat2
aligned_mat2x2	./glm/gtc/type_aligned.hpp	/^	typedef aligned_highp_mat2x2		aligned_mat2x2;$/;"	t	namespace:glm	typeref:typename:aligned_highp_mat2x2
aligned_mat2x2	./glm/gtc/type_aligned.hpp	/^	typedef aligned_lowp_mat2x2			aligned_mat2x2;$/;"	t	namespace:glm	typeref:typename:aligned_lowp_mat2x2
aligned_mat2x2	./glm/gtc/type_aligned.hpp	/^	typedef aligned_mediump_mat2x2		aligned_mat2x2;$/;"	t	namespace:glm	typeref:typename:aligned_mediump_mat2x2
aligned_mat2x3	./glm/gtc/type_aligned.hpp	/^	typedef aligned_highp_mat2x3		aligned_mat2x3;$/;"	t	namespace:glm	typeref:typename:aligned_highp_mat2x3
aligned_mat2x3	./glm/gtc/type_aligned.hpp	/^	typedef aligned_lowp_mat2x3			aligned_mat2x3;$/;"	t	namespace:glm	typeref:typename:aligned_lowp_mat2x3
aligned_mat2x3	./glm/gtc/type_aligned.hpp	/^	typedef aligned_mediump_mat2x3		aligned_mat2x3;$/;"	t	namespace:glm	typeref:typename:aligned_mediump_mat2x3
aligned_mat2x4	./glm/gtc/type_aligned.hpp	/^	typedef aligned_highp_mat2x4		aligned_mat2x4;$/;"	t	namespace:glm	typeref:typename:aligned_highp_mat2x4
aligned_mat2x4	./glm/gtc/type_aligned.hpp	/^	typedef aligned_lowp_mat2x4			aligned_mat2x4;$/;"	t	namespace:glm	typeref:typename:aligned_lowp_mat2x4
aligned_mat2x4	./glm/gtc/type_aligned.hpp	/^	typedef aligned_mediump_mat2x4		aligned_mat2x4;$/;"	t	namespace:glm	typeref:typename:aligned_mediump_mat2x4
aligned_mat3	./glm/gtc/type_aligned.hpp	/^	typedef aligned_highp_mat3			aligned_mat3;$/;"	t	namespace:glm	typeref:typename:aligned_highp_mat3
aligned_mat3	./glm/gtc/type_aligned.hpp	/^	typedef aligned_lowp_mat3			aligned_mat3;$/;"	t	namespace:glm	typeref:typename:aligned_lowp_mat3
aligned_mat3	./glm/gtc/type_aligned.hpp	/^	typedef aligned_mediump_mat3		aligned_mat3;$/;"	t	namespace:glm	typeref:typename:aligned_mediump_mat3
aligned_mat3x2	./glm/gtc/type_aligned.hpp	/^	typedef aligned_highp_mat3x2		aligned_mat3x2;$/;"	t	namespace:glm	typeref:typename:aligned_highp_mat3x2
aligned_mat3x2	./glm/gtc/type_aligned.hpp	/^	typedef aligned_lowp_mat3x2			aligned_mat3x2;$/;"	t	namespace:glm	typeref:typename:aligned_lowp_mat3x2
aligned_mat3x2	./glm/gtc/type_aligned.hpp	/^	typedef aligned_mediump_mat3x2		aligned_mat3x2;$/;"	t	namespace:glm	typeref:typename:aligned_mediump_mat3x2
aligned_mat3x3	./glm/gtc/type_aligned.hpp	/^	typedef aligned_highp_mat3x3		aligned_mat3x3;$/;"	t	namespace:glm	typeref:typename:aligned_highp_mat3x3
aligned_mat3x3	./glm/gtc/type_aligned.hpp	/^	typedef aligned_lowp_mat3x3			aligned_mat3x3;$/;"	t	namespace:glm	typeref:typename:aligned_lowp_mat3x3
aligned_mat3x3	./glm/gtc/type_aligned.hpp	/^	typedef aligned_mediump_mat3x3		aligned_mat3x3;$/;"	t	namespace:glm	typeref:typename:aligned_mediump_mat3x3
aligned_mat3x4	./glm/gtc/type_aligned.hpp	/^	typedef aligned_highp_mat3x4		aligned_mat3x4;$/;"	t	namespace:glm	typeref:typename:aligned_highp_mat3x4
aligned_mat3x4	./glm/gtc/type_aligned.hpp	/^	typedef aligned_lowp_mat3x4			aligned_mat3x4;$/;"	t	namespace:glm	typeref:typename:aligned_lowp_mat3x4
aligned_mat3x4	./glm/gtc/type_aligned.hpp	/^	typedef aligned_mediump_mat3x4		aligned_mat3x4;$/;"	t	namespace:glm	typeref:typename:aligned_mediump_mat3x4
aligned_mat4	./glm/gtc/type_aligned.hpp	/^	typedef aligned_highp_mat4			aligned_mat4;$/;"	t	namespace:glm	typeref:typename:aligned_highp_mat4
aligned_mat4	./glm/gtc/type_aligned.hpp	/^	typedef aligned_lowp_mat4			aligned_mat4;$/;"	t	namespace:glm	typeref:typename:aligned_lowp_mat4
aligned_mat4	./glm/gtc/type_aligned.hpp	/^	typedef aligned_mediump_mat4		aligned_mat4;$/;"	t	namespace:glm	typeref:typename:aligned_mediump_mat4
aligned_mat4x2	./glm/gtc/type_aligned.hpp	/^	typedef aligned_highp_mat4x2		aligned_mat4x2;$/;"	t	namespace:glm	typeref:typename:aligned_highp_mat4x2
aligned_mat4x2	./glm/gtc/type_aligned.hpp	/^	typedef aligned_lowp_mat4x2			aligned_mat4x2;$/;"	t	namespace:glm	typeref:typename:aligned_lowp_mat4x2
aligned_mat4x2	./glm/gtc/type_aligned.hpp	/^	typedef aligned_mediump_mat4x2		aligned_mat4x2;$/;"	t	namespace:glm	typeref:typename:aligned_mediump_mat4x2
aligned_mat4x3	./glm/gtc/type_aligned.hpp	/^	typedef aligned_highp_mat4x3		aligned_mat4x3;$/;"	t	namespace:glm	typeref:typename:aligned_highp_mat4x3
aligned_mat4x3	./glm/gtc/type_aligned.hpp	/^	typedef aligned_lowp_mat4x3			aligned_mat4x3;$/;"	t	namespace:glm	typeref:typename:aligned_lowp_mat4x3
aligned_mat4x3	./glm/gtc/type_aligned.hpp	/^	typedef aligned_mediump_mat4x3		aligned_mat4x3;$/;"	t	namespace:glm	typeref:typename:aligned_mediump_mat4x3
aligned_mat4x4	./glm/gtc/type_aligned.hpp	/^	typedef aligned_highp_mat4x4		aligned_mat4x4;$/;"	t	namespace:glm	typeref:typename:aligned_highp_mat4x4
aligned_mat4x4	./glm/gtc/type_aligned.hpp	/^	typedef aligned_lowp_mat4x4			aligned_mat4x4;$/;"	t	namespace:glm	typeref:typename:aligned_lowp_mat4x4
aligned_mat4x4	./glm/gtc/type_aligned.hpp	/^	typedef aligned_mediump_mat4x4		aligned_mat4x4;$/;"	t	namespace:glm	typeref:typename:aligned_mediump_mat4x4
aligned_mediump	./glm/detail/qualifier.hpp	/^			aligned_mediump, \/\/\/< Typed data is aligned in memory allowing SIMD optimizations and oper/;"	e	enum:glm::qualifier
aligned_mediump_bvec1	./glm/gtc/type_aligned.hpp	/^	typedef vec<1, bool, aligned_mediump>	aligned_mediump_bvec1;$/;"	t	namespace:glm	typeref:typename:vec<1,bool,aligned_mediump>
aligned_mediump_bvec2	./glm/gtc/type_aligned.hpp	/^	typedef vec<2, bool, aligned_mediump>	aligned_mediump_bvec2;$/;"	t	namespace:glm	typeref:typename:vec<2,bool,aligned_mediump>
aligned_mediump_bvec3	./glm/gtc/type_aligned.hpp	/^	typedef vec<3, bool, aligned_mediump>	aligned_mediump_bvec3;$/;"	t	namespace:glm	typeref:typename:vec<3,bool,aligned_mediump>
aligned_mediump_bvec4	./glm/gtc/type_aligned.hpp	/^	typedef vec<4, bool, aligned_mediump>	aligned_mediump_bvec4;$/;"	t	namespace:glm	typeref:typename:vec<4,bool,aligned_mediump>
aligned_mediump_dmat2	./glm/gtc/type_aligned.hpp	/^	typedef mat<2, 2, double, aligned_mediump>	aligned_mediump_dmat2;$/;"	t	namespace:glm	typeref:typename:mat<2,2,double,aligned_mediump>
aligned_mediump_dmat2x2	./glm/gtc/type_aligned.hpp	/^	typedef mat<2, 2, double, aligned_mediump>	aligned_mediump_dmat2x2;$/;"	t	namespace:glm	typeref:typename:mat<2,2,double,aligned_mediump>
aligned_mediump_dmat2x3	./glm/gtc/type_aligned.hpp	/^	typedef mat<2, 3, double, aligned_mediump>	aligned_mediump_dmat2x3;$/;"	t	namespace:glm	typeref:typename:mat<2,3,double,aligned_mediump>
aligned_mediump_dmat2x4	./glm/gtc/type_aligned.hpp	/^	typedef mat<2, 4, double, aligned_mediump>	aligned_mediump_dmat2x4;$/;"	t	namespace:glm	typeref:typename:mat<2,4,double,aligned_mediump>
aligned_mediump_dmat3	./glm/gtc/type_aligned.hpp	/^	typedef mat<3, 3, double, aligned_mediump>	aligned_mediump_dmat3;$/;"	t	namespace:glm	typeref:typename:mat<3,3,double,aligned_mediump>
aligned_mediump_dmat3x2	./glm/gtc/type_aligned.hpp	/^	typedef mat<3, 2, double, aligned_mediump>	aligned_mediump_dmat3x2;$/;"	t	namespace:glm	typeref:typename:mat<3,2,double,aligned_mediump>
aligned_mediump_dmat3x3	./glm/gtc/type_aligned.hpp	/^	typedef mat<3, 3, double, aligned_mediump>	aligned_mediump_dmat3x3;$/;"	t	namespace:glm	typeref:typename:mat<3,3,double,aligned_mediump>
aligned_mediump_dmat3x4	./glm/gtc/type_aligned.hpp	/^	typedef mat<3, 4, double, aligned_mediump>	aligned_mediump_dmat3x4;$/;"	t	namespace:glm	typeref:typename:mat<3,4,double,aligned_mediump>
aligned_mediump_dmat4	./glm/gtc/type_aligned.hpp	/^	typedef mat<4, 4, double, aligned_mediump>	aligned_mediump_dmat4;$/;"	t	namespace:glm	typeref:typename:mat<4,4,double,aligned_mediump>
aligned_mediump_dmat4x2	./glm/gtc/type_aligned.hpp	/^	typedef mat<4, 2, double, aligned_mediump>	aligned_mediump_dmat4x2;$/;"	t	namespace:glm	typeref:typename:mat<4,2,double,aligned_mediump>
aligned_mediump_dmat4x3	./glm/gtc/type_aligned.hpp	/^	typedef mat<4, 3, double, aligned_mediump>	aligned_mediump_dmat4x3;$/;"	t	namespace:glm	typeref:typename:mat<4,3,double,aligned_mediump>
aligned_mediump_dmat4x4	./glm/gtc/type_aligned.hpp	/^	typedef mat<4, 4, double, aligned_mediump>	aligned_mediump_dmat4x4;$/;"	t	namespace:glm	typeref:typename:mat<4,4,double,aligned_mediump>
aligned_mediump_dvec1	./glm/gtc/type_aligned.hpp	/^	typedef vec<1, double, aligned_mediump>	aligned_mediump_dvec1;$/;"	t	namespace:glm	typeref:typename:vec<1,double,aligned_mediump>
aligned_mediump_dvec2	./glm/gtc/type_aligned.hpp	/^	typedef vec<2, double, aligned_mediump>	aligned_mediump_dvec2;$/;"	t	namespace:glm	typeref:typename:vec<2,double,aligned_mediump>
aligned_mediump_dvec3	./glm/gtc/type_aligned.hpp	/^	typedef vec<3, double, aligned_mediump>	aligned_mediump_dvec3;$/;"	t	namespace:glm	typeref:typename:vec<3,double,aligned_mediump>
aligned_mediump_dvec4	./glm/gtc/type_aligned.hpp	/^	typedef vec<4, double, aligned_mediump>	aligned_mediump_dvec4;$/;"	t	namespace:glm	typeref:typename:vec<4,double,aligned_mediump>
aligned_mediump_ivec1	./glm/gtc/type_aligned.hpp	/^	typedef vec<1, int, aligned_mediump>	aligned_mediump_ivec1;$/;"	t	namespace:glm	typeref:typename:vec<1,int,aligned_mediump>
aligned_mediump_ivec2	./glm/gtc/type_aligned.hpp	/^	typedef vec<2, int, aligned_mediump>	aligned_mediump_ivec2;$/;"	t	namespace:glm	typeref:typename:vec<2,int,aligned_mediump>
aligned_mediump_ivec3	./glm/gtc/type_aligned.hpp	/^	typedef vec<3, int, aligned_mediump>	aligned_mediump_ivec3;$/;"	t	namespace:glm	typeref:typename:vec<3,int,aligned_mediump>
aligned_mediump_ivec4	./glm/gtc/type_aligned.hpp	/^	typedef vec<4, int, aligned_mediump>	aligned_mediump_ivec4;$/;"	t	namespace:glm	typeref:typename:vec<4,int,aligned_mediump>
aligned_mediump_mat2	./glm/gtc/type_aligned.hpp	/^	typedef mat<2, 2, float, aligned_mediump>	aligned_mediump_mat2;$/;"	t	namespace:glm	typeref:typename:mat<2,2,float,aligned_mediump>
aligned_mediump_mat2x2	./glm/gtc/type_aligned.hpp	/^	typedef mat<2, 2, float, aligned_mediump>	aligned_mediump_mat2x2;$/;"	t	namespace:glm	typeref:typename:mat<2,2,float,aligned_mediump>
aligned_mediump_mat2x3	./glm/gtc/type_aligned.hpp	/^	typedef mat<2, 3, float, aligned_mediump>	aligned_mediump_mat2x3;$/;"	t	namespace:glm	typeref:typename:mat<2,3,float,aligned_mediump>
aligned_mediump_mat2x4	./glm/gtc/type_aligned.hpp	/^	typedef mat<2, 4, float, aligned_mediump>	aligned_mediump_mat2x4;$/;"	t	namespace:glm	typeref:typename:mat<2,4,float,aligned_mediump>
aligned_mediump_mat3	./glm/gtc/type_aligned.hpp	/^	typedef mat<3, 3, float, aligned_mediump>	aligned_mediump_mat3;$/;"	t	namespace:glm	typeref:typename:mat<3,3,float,aligned_mediump>
aligned_mediump_mat3x2	./glm/gtc/type_aligned.hpp	/^	typedef mat<3, 2, float, aligned_mediump>	aligned_mediump_mat3x2;$/;"	t	namespace:glm	typeref:typename:mat<3,2,float,aligned_mediump>
aligned_mediump_mat3x3	./glm/gtc/type_aligned.hpp	/^	typedef mat<3, 3, float, aligned_mediump>	aligned_mediump_mat3x3;$/;"	t	namespace:glm	typeref:typename:mat<3,3,float,aligned_mediump>
aligned_mediump_mat3x4	./glm/gtc/type_aligned.hpp	/^	typedef mat<3, 4, float, aligned_mediump>	aligned_mediump_mat3x4;$/;"	t	namespace:glm	typeref:typename:mat<3,4,float,aligned_mediump>
aligned_mediump_mat4	./glm/gtc/type_aligned.hpp	/^	typedef mat<4, 4, float, aligned_mediump>	aligned_mediump_mat4;$/;"	t	namespace:glm	typeref:typename:mat<4,4,float,aligned_mediump>
aligned_mediump_mat4x2	./glm/gtc/type_aligned.hpp	/^	typedef mat<4, 2, float, aligned_mediump>	aligned_mediump_mat4x2;$/;"	t	namespace:glm	typeref:typename:mat<4,2,float,aligned_mediump>
aligned_mediump_mat4x3	./glm/gtc/type_aligned.hpp	/^	typedef mat<4, 3, float, aligned_mediump>	aligned_mediump_mat4x3;$/;"	t	namespace:glm	typeref:typename:mat<4,3,float,aligned_mediump>
aligned_mediump_mat4x4	./glm/gtc/type_aligned.hpp	/^	typedef mat<4, 4, float, aligned_mediump>	aligned_mediump_mat4x4;$/;"	t	namespace:glm	typeref:typename:mat<4,4,float,aligned_mediump>
aligned_mediump_uvec1	./glm/gtc/type_aligned.hpp	/^	typedef vec<1, uint, aligned_mediump>	aligned_mediump_uvec1;$/;"	t	namespace:glm	typeref:typename:vec<1,uint,aligned_mediump>
aligned_mediump_uvec2	./glm/gtc/type_aligned.hpp	/^	typedef vec<2, uint, aligned_mediump>	aligned_mediump_uvec2;$/;"	t	namespace:glm	typeref:typename:vec<2,uint,aligned_mediump>
aligned_mediump_uvec3	./glm/gtc/type_aligned.hpp	/^	typedef vec<3, uint, aligned_mediump>	aligned_mediump_uvec3;$/;"	t	namespace:glm	typeref:typename:vec<3,uint,aligned_mediump>
aligned_mediump_uvec4	./glm/gtc/type_aligned.hpp	/^	typedef vec<4, uint, aligned_mediump>	aligned_mediump_uvec4;$/;"	t	namespace:glm	typeref:typename:vec<4,uint,aligned_mediump>
aligned_mediump_vec1	./glm/gtc/type_aligned.hpp	/^	typedef vec<1, float, aligned_mediump>	aligned_mediump_vec1;$/;"	t	namespace:glm	typeref:typename:vec<1,float,aligned_mediump>
aligned_mediump_vec2	./glm/gtc/type_aligned.hpp	/^	typedef vec<2, float, aligned_mediump>	aligned_mediump_vec2;$/;"	t	namespace:glm	typeref:typename:vec<2,float,aligned_mediump>
aligned_mediump_vec3	./glm/gtc/type_aligned.hpp	/^	typedef vec<3, float, aligned_mediump>	aligned_mediump_vec3;$/;"	t	namespace:glm	typeref:typename:vec<3,float,aligned_mediump>
aligned_mediump_vec4	./glm/gtc/type_aligned.hpp	/^	typedef vec<4, float, aligned_mediump>	aligned_mediump_vec4;$/;"	t	namespace:glm	typeref:typename:vec<4,float,aligned_mediump>
aligned_uvec1	./glm/gtc/type_aligned.hpp	/^	typedef aligned_highp_uvec1			aligned_uvec1;$/;"	t	namespace:glm	typeref:typename:aligned_highp_uvec1
aligned_uvec1	./glm/gtc/type_aligned.hpp	/^	typedef aligned_lowp_uvec1			aligned_uvec1;$/;"	t	namespace:glm	typeref:typename:aligned_lowp_uvec1
aligned_uvec1	./glm/gtc/type_aligned.hpp	/^	typedef aligned_mediump_uvec1		aligned_uvec1;$/;"	t	namespace:glm	typeref:typename:aligned_mediump_uvec1
aligned_uvec2	./glm/gtc/type_aligned.hpp	/^	typedef aligned_highp_uvec2			aligned_uvec2;$/;"	t	namespace:glm	typeref:typename:aligned_highp_uvec2
aligned_uvec2	./glm/gtc/type_aligned.hpp	/^	typedef aligned_lowp_uvec2			aligned_uvec2;$/;"	t	namespace:glm	typeref:typename:aligned_lowp_uvec2
aligned_uvec2	./glm/gtc/type_aligned.hpp	/^	typedef aligned_mediump_uvec2		aligned_uvec2;$/;"	t	namespace:glm	typeref:typename:aligned_mediump_uvec2
aligned_uvec3	./glm/gtc/type_aligned.hpp	/^	typedef aligned_highp_uvec3			aligned_uvec3;$/;"	t	namespace:glm	typeref:typename:aligned_highp_uvec3
aligned_uvec3	./glm/gtc/type_aligned.hpp	/^	typedef aligned_lowp_uvec3			aligned_uvec3;$/;"	t	namespace:glm	typeref:typename:aligned_lowp_uvec3
aligned_uvec3	./glm/gtc/type_aligned.hpp	/^	typedef aligned_mediump_uvec3		aligned_uvec3;$/;"	t	namespace:glm	typeref:typename:aligned_mediump_uvec3
aligned_uvec4	./glm/gtc/type_aligned.hpp	/^	typedef aligned_highp_uvec4			aligned_uvec4;$/;"	t	namespace:glm	typeref:typename:aligned_highp_uvec4
aligned_uvec4	./glm/gtc/type_aligned.hpp	/^	typedef aligned_lowp_uvec4			aligned_uvec4;$/;"	t	namespace:glm	typeref:typename:aligned_lowp_uvec4
aligned_uvec4	./glm/gtc/type_aligned.hpp	/^	typedef aligned_mediump_uvec4		aligned_uvec4;$/;"	t	namespace:glm	typeref:typename:aligned_mediump_uvec4
aligned_vec1	./glm/gtc/type_aligned.hpp	/^	typedef aligned_highp_vec1			aligned_vec1;$/;"	t	namespace:glm	typeref:typename:aligned_highp_vec1
aligned_vec1	./glm/gtc/type_aligned.hpp	/^	typedef aligned_lowp_vec1			aligned_vec1;$/;"	t	namespace:glm	typeref:typename:aligned_lowp_vec1
aligned_vec1	./glm/gtc/type_aligned.hpp	/^	typedef aligned_mediump_vec1		aligned_vec1;$/;"	t	namespace:glm	typeref:typename:aligned_mediump_vec1
aligned_vec2	./glm/gtc/type_aligned.hpp	/^	typedef aligned_highp_vec2			aligned_vec2;$/;"	t	namespace:glm	typeref:typename:aligned_highp_vec2
aligned_vec2	./glm/gtc/type_aligned.hpp	/^	typedef aligned_lowp_vec2			aligned_vec2;$/;"	t	namespace:glm	typeref:typename:aligned_lowp_vec2
aligned_vec2	./glm/gtc/type_aligned.hpp	/^	typedef aligned_mediump_vec2		aligned_vec2;$/;"	t	namespace:glm	typeref:typename:aligned_mediump_vec2
aligned_vec3	./glm/gtc/type_aligned.hpp	/^	typedef aligned_highp_vec3			aligned_vec3;$/;"	t	namespace:glm	typeref:typename:aligned_highp_vec3
aligned_vec3	./glm/gtc/type_aligned.hpp	/^	typedef aligned_lowp_vec3			aligned_vec3;$/;"	t	namespace:glm	typeref:typename:aligned_lowp_vec3
aligned_vec3	./glm/gtc/type_aligned.hpp	/^	typedef aligned_mediump_vec3		aligned_vec3;$/;"	t	namespace:glm	typeref:typename:aligned_mediump_vec3
aligned_vec4	./glm/gtc/type_aligned.hpp	/^	typedef aligned_highp_vec4 			aligned_vec4;$/;"	t	namespace:glm	typeref:typename:aligned_highp_vec4
aligned_vec4	./glm/gtc/type_aligned.hpp	/^	typedef aligned_lowp_vec4			aligned_vec4;$/;"	t	namespace:glm	typeref:typename:aligned_lowp_vec4
aligned_vec4	./glm/gtc/type_aligned.hpp	/^	typedef aligned_mediump_vec4		aligned_vec4;$/;"	t	namespace:glm	typeref:typename:aligned_mediump_vec4
all	./glm/detail/func_vector_relational.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR bool all(vec<L, bool, Q> const& v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR bool
all	./glm/gtx/scalar_relational.inl	/^	GLM_FUNC_QUALIFIER bool all$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER bool
angle	./glm/ext/quaternion_trigonometric.inl	/^	GLM_FUNC_QUALIFIER T angle(qua<T, Q> const& x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER T
angle	./glm/gtx/vector_angle.inl	/^	GLM_FUNC_QUALIFIER T angle(vec<L, T, Q> const& x, vec<L, T, Q> const& y)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER T
angle	./glm/gtx/vector_angle.inl	/^	GLM_FUNC_QUALIFIER genType angle$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genType
angleAxis	./glm/ext/quaternion_trigonometric.inl	/^	GLM_FUNC_QUALIFIER qua<T, Q> angleAxis(T const& angle, vec<3, T, Q> const& v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER qua<T,Q>
any	./glm/detail/func_vector_relational.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR bool any(vec<L, bool, Q> const& v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR bool
any	./glm/gtx/scalar_relational.inl	/^	GLM_FUNC_QUALIFIER bool any$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER bool
areCollinear	./glm/gtx/vector_query.inl	/^	GLM_FUNC_QUALIFIER bool areCollinear(vec<L, T, Q> const& v0, vec<L, T, Q> const& v1, T const& e/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER bool
areOrthogonal	./glm/gtx/vector_query.inl	/^	GLM_FUNC_QUALIFIER bool areOrthogonal(vec<L, T, Q> const& v0, vec<L, T, Q> const& v1, T const& /;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER bool
areOrthonormal	./glm/gtx/vector_query.inl	/^	GLM_FUNC_QUALIFIER bool areOrthonormal(vec<L, T, Q> const& v0, vec<L, T, Q> const& v1, T const&/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER bool
asec	./glm/ext/scalar_reciprocal.inl	/^	GLM_FUNC_QUALIFIER genType asec(genType x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genType
asec	./glm/ext/vector_reciprocal.inl	/^	GLM_FUNC_QUALIFIER vec<L, T, Q> asec(vec<L, T, Q> const& x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<L,T,Q>
asech	./glm/ext/scalar_reciprocal.inl	/^	GLM_FUNC_QUALIFIER genType asech(genType x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genType
asech	./glm/ext/vector_reciprocal.inl	/^	GLM_FUNC_QUALIFIER vec<L, T, Q> asech(vec<L, T, Q> const& x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<L,T,Q>
asin	./glm/detail/func_trigonometric.inl	/^	GLM_FUNC_QUALIFIER vec<L, T, Q> asin(vec<L, T, Q> const& v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<L,T,Q>
asinh	./glm/detail/func_trigonometric.inl	/^		GLM_FUNC_QUALIFIER genType asinh(genType x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genType
asinh	./glm/detail/func_trigonometric.inl	/^	GLM_FUNC_QUALIFIER vec<L, T, Q> asinh(vec<L, T, Q> const& v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<L,T,Q>
associatedMax	./glm/gtx/associated_min_max.inl	/^GLM_FUNC_QUALIFIER U associatedMax$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER U
associatedMax	./glm/gtx/associated_min_max.inl	/^GLM_FUNC_QUALIFIER U associatedMax(T x, U a, T y, U b)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER U
associatedMax	./glm/gtx/associated_min_max.inl	/^GLM_FUNC_QUALIFIER vec<L, T, Q> associatedMax$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<L,T,Q>
associatedMax	./glm/gtx/associated_min_max.inl	/^GLM_FUNC_QUALIFIER vec<L, U, Q> associatedMax$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<L,U,Q>
associatedMin	./glm/gtx/associated_min_max.inl	/^GLM_FUNC_QUALIFIER U associatedMin$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER U
associatedMin	./glm/gtx/associated_min_max.inl	/^GLM_FUNC_QUALIFIER U associatedMin(T x, U a, T y, U b)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER U
associatedMin	./glm/gtx/associated_min_max.inl	/^GLM_FUNC_QUALIFIER vec<L, U, Q> associatedMin$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<L,U,Q>
atan	./glm/detail/func_trigonometric.inl	/^	GLM_FUNC_QUALIFIER genType atan(genType y, genType x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genType
atan	./glm/detail/func_trigonometric.inl	/^	GLM_FUNC_QUALIFIER vec<L, T, Q> atan(vec<L, T, Q> const& v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<L,T,Q>
atan	./glm/detail/func_trigonometric.inl	/^	GLM_FUNC_QUALIFIER vec<L, T, Q> atan(vec<L, T, Q> const& y, vec<L, T, Q> const& x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<L,T,Q>
atan2	./glm/gtx/compatibility.hpp	/^	template<typename T, qualifier Q> GLM_FUNC_QUALIFIER vec<2, T, Q> atan2(const vec<2, T, Q>& y, /;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<2,T,Q>
atan2	./glm/gtx/compatibility.hpp	/^	template<typename T, qualifier Q> GLM_FUNC_QUALIFIER vec<3, T, Q> atan2(const vec<3, T, Q>& y, /;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<3,T,Q>
atan2	./glm/gtx/compatibility.hpp	/^	template<typename T, qualifier Q> GLM_FUNC_QUALIFIER vec<4, T, Q> atan2(const vec<4, T, Q>& y, /;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<4,T,Q>
atan2	./glm/gtx/compatibility.hpp	/^	template<typename T> GLM_FUNC_QUALIFIER T atan2(T y, T x){return atan(y, x);}																\//;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER T
atanh	./glm/detail/func_trigonometric.inl	/^		GLM_FUNC_QUALIFIER genType atanh(genType x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genType
atanh	./glm/detail/func_trigonometric.inl	/^	GLM_FUNC_QUALIFIER vec<L, T, Q> atanh(vec<L, T, Q> const& v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<L,T,Q>
aux_buffer	./GL/glxew.h	/^  unsigned int aux_buffer; $/;"	m	struct:__anonb1a929810108	typeref:typename:unsigned int
axis	./glm/ext/quaternion_trigonometric.inl	/^	GLM_FUNC_QUALIFIER vec<3, T, Q> axis(qua<T, Q> const& x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<3,T,Q>
axisAngle	./glm/gtx/matrix_interpolation.inl	/^	GLM_FUNC_QUALIFIER void axisAngle(mat<4, 4, T, Q> const& m, vec<3, T, Q>& axis, T& angle)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER void
axisAngleMatrix	./glm/gtx/matrix_interpolation.inl	/^	GLM_FUNC_QUALIFIER mat<4, 4, T, Q> axisAngleMatrix(vec<3, T, Q> const& axis, T const angle)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER mat<4,4,T,Q>
backEaseIn	./glm/gtx/easing.inl	/^	GLM_FUNC_QUALIFIER genType backEaseIn(genType const& a)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genType
backEaseIn	./glm/gtx/easing.inl	/^	GLM_FUNC_QUALIFIER genType backEaseIn(genType const& a, genType const& o)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genType
backEaseInOut	./glm/gtx/easing.inl	/^	GLM_FUNC_QUALIFIER genType backEaseInOut(genType const& a)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genType
backEaseInOut	./glm/gtx/easing.inl	/^	GLM_FUNC_QUALIFIER genType backEaseInOut(genType const& a, genType const& o)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genType
backEaseOut	./glm/gtx/easing.inl	/^	GLM_FUNC_QUALIFIER genType backEaseOut(genType const& a)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genType
backEaseOut	./glm/gtx/easing.inl	/^	GLM_FUNC_QUALIFIER genType backEaseOut(genType const& a, genType const& o)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genType
ballRand	./glm/gtc/random.inl	/^	GLM_FUNC_QUALIFIER vec<3, T, defaultp> ballRand(T Radius)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<3,T,defaultp>
base_type	./glm/detail/_swizzle.hpp	/^		typedef _swizzle_base2<N, T, Q, E0, E1, E2, E3, (E0 == E1 || E0 == E2 || E0 == E3 || E1 == E2 /;"	t	struct:glm::detail::_swizzle
basic_format_saver	./glm/gtx/io.hpp	/^		class basic_format_saver$/;"	c	namespace:glm::io
basic_format_saver	./glm/gtx/io.inl	/^	GLM_FUNC_QUALIFIER basic_format_saver<CTy, CTr>::basic_format_saver(std::basic_ios<CTy, CTr>& a/;"	f	class:glm::io::basic_format_saver	typeref:typename:GLM_FUNC_QUALIFIER
basic_state_saver	./glm/gtx/io.hpp	/^		class basic_state_saver {$/;"	c	namespace:glm::io
basic_state_saver	./glm/gtx/io.inl	/^	GLM_FUNC_QUALIFIER basic_state_saver<CTy, CTr>::basic_state_saver(std::basic_ios<CTy, CTr>& a)$/;"	f	class:glm::io::basic_state_saver	typeref:typename:GLM_FUNC_QUALIFIER
begin	./glm/gtx/range.hpp	/^	inline typename genType::value_type * begin(genType& v)$/;"	f	namespace:glm	typeref:typename:genType::value_type *
begin	./glm/gtx/range.hpp	/^	inline typename genType::value_type const * begin(genType const& v)$/;"	f	namespace:glm	typeref:typename:genType::value_type const *
bitCount	./glm/detail/func_integer.inl	/^	GLM_FUNC_QUALIFIER int bitCount(genIUType x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER int
bitCount	./glm/detail/func_integer.inl	/^	GLM_FUNC_QUALIFIER vec<L, int, Q> bitCount(vec<L, T, Q> const& v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<L,int,Q>
bitCount	./glm/detail/func_integer_simd.inl	/^	GLM_FUNC_QUALIFIER int bitCount(detail::uint64 x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER int
bitCount	./glm/detail/func_integer_simd.inl	/^	GLM_FUNC_QUALIFIER int bitCount(uint x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER int
bitfieldDeinterleave	./glm/gtc/bitfield.inl	/^	GLM_FUNC_QUALIFIER glm::u16vec2 bitfieldDeinterleave(glm::uint32 x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::u16vec2
bitfieldDeinterleave	./glm/gtc/bitfield.inl	/^	GLM_FUNC_QUALIFIER glm::u32vec2 bitfieldDeinterleave(glm::uint64 x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::u32vec2
bitfieldDeinterleave	./glm/gtc/bitfield.inl	/^	GLM_FUNC_QUALIFIER u8vec2 bitfieldDeinterleave(glm::uint16 x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER u8vec2
bitfieldExtract	./glm/detail/func_integer.inl	/^	GLM_FUNC_QUALIFIER genIUType bitfieldExtract(genIUType Value, int Offset, int Bits)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genIUType
bitfieldExtract	./glm/detail/func_integer.inl	/^	GLM_FUNC_QUALIFIER vec<L, T, Q> bitfieldExtract(vec<L, T, Q> const& Value, int Offset, int Bits/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<L,T,Q>
bitfieldFillOne	./glm/gtc/bitfield.inl	/^	GLM_FUNC_QUALIFIER genIUType bitfieldFillOne(genIUType Value, int FirstBit, int BitCount)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genIUType
bitfieldFillOne	./glm/gtc/bitfield.inl	/^	GLM_FUNC_QUALIFIER vec<L, T, Q> bitfieldFillOne(vec<L, T, Q> const& Value, int FirstBit, int Bi/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<L,T,Q>
bitfieldFillZero	./glm/gtc/bitfield.inl	/^	GLM_FUNC_QUALIFIER genIUType bitfieldFillZero(genIUType Value, int FirstBit, int BitCount)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genIUType
bitfieldFillZero	./glm/gtc/bitfield.inl	/^	GLM_FUNC_QUALIFIER vec<L, T, Q> bitfieldFillZero(vec<L, T, Q> const& Value, int FirstBit, int B/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<L,T,Q>
bitfieldInsert	./glm/detail/func_integer.inl	/^	GLM_FUNC_QUALIFIER genIUType bitfieldInsert(genIUType const& Base, genIUType const& Insert, int/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genIUType
bitfieldInsert	./glm/detail/func_integer.inl	/^	GLM_FUNC_QUALIFIER vec<L, T, Q> bitfieldInsert(vec<L, T, Q> const& Base, vec<L, T, Q> const& In/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<L,T,Q>
bitfieldInterleave	./glm/gtc/bitfield.inl	/^	GLM_FUNC_QUALIFIER glm::uint16 bitfieldInterleave(glm::uint8 x, glm::uint8 y)$/;"	f	namespace:glm::detail	typeref:typename:GLM_FUNC_QUALIFIER glm::uint16
bitfieldInterleave	./glm/gtc/bitfield.inl	/^	GLM_FUNC_QUALIFIER glm::uint32 bitfieldInterleave(glm::uint16 x, glm::uint16 y)$/;"	f	namespace:glm::detail	typeref:typename:GLM_FUNC_QUALIFIER glm::uint32
bitfieldInterleave	./glm/gtc/bitfield.inl	/^	GLM_FUNC_QUALIFIER glm::uint32 bitfieldInterleave(glm::uint8 x, glm::uint8 y, glm::uint8 z)$/;"	f	namespace:glm::detail	typeref:typename:GLM_FUNC_QUALIFIER glm::uint32
bitfieldInterleave	./glm/gtc/bitfield.inl	/^	GLM_FUNC_QUALIFIER glm::uint32 bitfieldInterleave(glm::uint8 x, glm::uint8 y, glm::uint8 z, glm/;"	f	namespace:glm::detail	typeref:typename:GLM_FUNC_QUALIFIER glm::uint32
bitfieldInterleave	./glm/gtc/bitfield.inl	/^	GLM_FUNC_QUALIFIER glm::uint32 bitfieldInterleave(u16vec2 const& v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::uint32
bitfieldInterleave	./glm/gtc/bitfield.inl	/^	GLM_FUNC_QUALIFIER glm::uint64 bitfieldInterleave(glm::uint16 x, glm::uint16 y, glm::uint16 z)$/;"	f	namespace:glm::detail	typeref:typename:GLM_FUNC_QUALIFIER glm::uint64
bitfieldInterleave	./glm/gtc/bitfield.inl	/^	GLM_FUNC_QUALIFIER glm::uint64 bitfieldInterleave(glm::uint16 x, glm::uint16 y, glm::uint16 z, /;"	f	namespace:glm::detail	typeref:typename:GLM_FUNC_QUALIFIER glm::uint64
bitfieldInterleave	./glm/gtc/bitfield.inl	/^	GLM_FUNC_QUALIFIER glm::uint64 bitfieldInterleave(glm::uint32 x, glm::uint32 y)$/;"	f	namespace:glm::detail	typeref:typename:GLM_FUNC_QUALIFIER glm::uint64
bitfieldInterleave	./glm/gtc/bitfield.inl	/^	GLM_FUNC_QUALIFIER glm::uint64 bitfieldInterleave(glm::uint32 x, glm::uint32 y, glm::uint32 z)$/;"	f	namespace:glm::detail	typeref:typename:GLM_FUNC_QUALIFIER glm::uint64
bitfieldInterleave	./glm/gtc/bitfield.inl	/^	GLM_FUNC_QUALIFIER glm::uint64 bitfieldInterleave(u32vec2 const& v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::uint64
bitfieldInterleave	./glm/gtc/bitfield.inl	/^	GLM_FUNC_QUALIFIER int16 bitfieldInterleave(int8 x, int8 y)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER int16
bitfieldInterleave	./glm/gtc/bitfield.inl	/^	GLM_FUNC_QUALIFIER int32 bitfieldInterleave(int16 x, int16 y)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER int32
bitfieldInterleave	./glm/gtc/bitfield.inl	/^	GLM_FUNC_QUALIFIER int32 bitfieldInterleave(int8 x, int8 y, int8 z)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER int32
bitfieldInterleave	./glm/gtc/bitfield.inl	/^	GLM_FUNC_QUALIFIER int32 bitfieldInterleave(int8 x, int8 y, int8 z, int8 w)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER int32
bitfieldInterleave	./glm/gtc/bitfield.inl	/^	GLM_FUNC_QUALIFIER int64 bitfieldInterleave(int16 x, int16 y, int16 z)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER int64
bitfieldInterleave	./glm/gtc/bitfield.inl	/^	GLM_FUNC_QUALIFIER int64 bitfieldInterleave(int16 x, int16 y, int16 z, int16 w)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER int64
bitfieldInterleave	./glm/gtc/bitfield.inl	/^	GLM_FUNC_QUALIFIER int64 bitfieldInterleave(int32 x, int32 y)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER int64
bitfieldInterleave	./glm/gtc/bitfield.inl	/^	GLM_FUNC_QUALIFIER int64 bitfieldInterleave(int32 x, int32 y, int32 z)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER int64
bitfieldInterleave	./glm/gtc/bitfield.inl	/^	GLM_FUNC_QUALIFIER uint16 bitfieldInterleave(u8vec2 const& v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER uint16
bitfieldInterleave	./glm/gtc/bitfield.inl	/^	GLM_FUNC_QUALIFIER uint16 bitfieldInterleave(uint8 x, uint8 y)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER uint16
bitfieldInterleave	./glm/gtc/bitfield.inl	/^	GLM_FUNC_QUALIFIER uint32 bitfieldInterleave(u8vec3 const& v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER uint32
bitfieldInterleave	./glm/gtc/bitfield.inl	/^	GLM_FUNC_QUALIFIER uint32 bitfieldInterleave(u8vec4 const& v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER uint32
bitfieldInterleave	./glm/gtc/bitfield.inl	/^	GLM_FUNC_QUALIFIER uint32 bitfieldInterleave(uint16 x, uint16 y)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER uint32
bitfieldInterleave	./glm/gtc/bitfield.inl	/^	GLM_FUNC_QUALIFIER uint32 bitfieldInterleave(uint8 x, uint8 y, uint8 z)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER uint32
bitfieldInterleave	./glm/gtc/bitfield.inl	/^	GLM_FUNC_QUALIFIER uint32 bitfieldInterleave(uint8 x, uint8 y, uint8 z, uint8 w)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER uint32
bitfieldInterleave	./glm/gtc/bitfield.inl	/^	GLM_FUNC_QUALIFIER uint64 bitfieldInterleave(u16vec3 const& v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER uint64
bitfieldInterleave	./glm/gtc/bitfield.inl	/^	GLM_FUNC_QUALIFIER uint64 bitfieldInterleave(u16vec4 const& v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER uint64
bitfieldInterleave	./glm/gtc/bitfield.inl	/^	GLM_FUNC_QUALIFIER uint64 bitfieldInterleave(u32vec3 const& v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER uint64
bitfieldInterleave	./glm/gtc/bitfield.inl	/^	GLM_FUNC_QUALIFIER uint64 bitfieldInterleave(uint16 x, uint16 y, uint16 z)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER uint64
bitfieldInterleave	./glm/gtc/bitfield.inl	/^	GLM_FUNC_QUALIFIER uint64 bitfieldInterleave(uint16 x, uint16 y, uint16 z, uint16 w)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER uint64
bitfieldInterleave	./glm/gtc/bitfield.inl	/^	GLM_FUNC_QUALIFIER uint64 bitfieldInterleave(uint32 x, uint32 y)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER uint64
bitfieldInterleave	./glm/gtc/bitfield.inl	/^	GLM_FUNC_QUALIFIER uint64 bitfieldInterleave(uint32 x, uint32 y, uint32 z)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER uint64
bitfieldReverse	./glm/detail/func_integer.inl	/^	GLM_FUNC_QUALIFIER genIUType bitfieldReverse(genIUType x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genIUType
bitfieldReverse	./glm/detail/func_integer.inl	/^	GLM_FUNC_QUALIFIER vec<L, T, Q> bitfieldReverse(vec<L, T, Q> const& v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<L,T,Q>
bitfieldRotateLeft	./glm/gtc/bitfield.inl	/^	GLM_FUNC_QUALIFIER genIType bitfieldRotateLeft(genIType In, int Shift)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genIType
bitfieldRotateLeft	./glm/gtc/bitfield.inl	/^	GLM_FUNC_QUALIFIER vec<L, T, Q> bitfieldRotateLeft(vec<L, T, Q> const& In, int Shift)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<L,T,Q>
bitfieldRotateRight	./glm/gtc/bitfield.inl	/^	GLM_FUNC_QUALIFIER genIType bitfieldRotateRight(genIType In, int Shift)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genIType
bitfieldRotateRight	./glm/gtc/bitfield.inl	/^	GLM_FUNC_QUALIFIER vec<L, T, Q> bitfieldRotateRight(vec<L, T, Q> const& In, int Shift)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<L,T,Q>
bool1	./glm/gtx/compatibility.hpp	/^	typedef bool						bool1;			\/\/!< \\brief boolean type with 1 component. (From GLM_GTX_compatib/;"	t	namespace:glm	typeref:typename:bool
bool1x1	./glm/gtx/compatibility.hpp	/^	typedef bool						bool1x1;		\/\/!< \\brief boolean matrix with 1 x 1 component. (From GLM_GTX_c/;"	t	namespace:glm	typeref:typename:bool
bool2	./glm/gtx/compatibility.hpp	/^	typedef vec<2, bool, highp>			bool2;			\/\/!< \\brief boolean type with 2 components. (From GLM/;"	t	namespace:glm	typeref:typename:vec<2,bool,highp>
bool2x2	./glm/gtx/compatibility.hpp	/^	typedef mat<2, 2, bool, highp>		bool2x2;		\/\/!< \\brief boolean matrix with 2 x 2 components. /;"	t	namespace:glm	typeref:typename:mat<2,2,bool,highp>
bool2x3	./glm/gtx/compatibility.hpp	/^	typedef mat<2, 3, bool, highp>		bool2x3;		\/\/!< \\brief boolean matrix with 2 x 3 components. /;"	t	namespace:glm	typeref:typename:mat<2,3,bool,highp>
bool2x4	./glm/gtx/compatibility.hpp	/^	typedef mat<2, 4, bool, highp>		bool2x4;		\/\/!< \\brief boolean matrix with 2 x 4 components. /;"	t	namespace:glm	typeref:typename:mat<2,4,bool,highp>
bool3	./glm/gtx/compatibility.hpp	/^	typedef vec<3, bool, highp>			bool3;			\/\/!< \\brief boolean type with 3 components. (From GLM/;"	t	namespace:glm	typeref:typename:vec<3,bool,highp>
bool3x2	./glm/gtx/compatibility.hpp	/^	typedef mat<3, 2, bool, highp>		bool3x2;		\/\/!< \\brief boolean matrix with 3 x 2 components. /;"	t	namespace:glm	typeref:typename:mat<3,2,bool,highp>
bool3x3	./glm/gtx/compatibility.hpp	/^	typedef mat<3, 3, bool, highp>		bool3x3;		\/\/!< \\brief boolean matrix with 3 x 3 components. /;"	t	namespace:glm	typeref:typename:mat<3,3,bool,highp>
bool3x4	./glm/gtx/compatibility.hpp	/^	typedef mat<3, 4, bool, highp>		bool3x4;		\/\/!< \\brief boolean matrix with 3 x 4 components. /;"	t	namespace:glm	typeref:typename:mat<3,4,bool,highp>
bool4	./glm/gtx/compatibility.hpp	/^	typedef vec<4, bool, highp>			bool4;			\/\/!< \\brief boolean type with 4 components. (From GLM/;"	t	namespace:glm	typeref:typename:vec<4,bool,highp>
bool4x2	./glm/gtx/compatibility.hpp	/^	typedef mat<4, 2, bool, highp>		bool4x2;		\/\/!< \\brief boolean matrix with 4 x 2 components. /;"	t	namespace:glm	typeref:typename:mat<4,2,bool,highp>
bool4x3	./glm/gtx/compatibility.hpp	/^	typedef mat<4, 3, bool, highp>		bool4x3;		\/\/!< \\brief boolean matrix with 4 x 3 components. /;"	t	namespace:glm	typeref:typename:mat<4,3,bool,highp>
bool4x4	./glm/gtx/compatibility.hpp	/^	typedef mat<4, 4, bool, highp>		bool4x4;		\/\/!< \\brief boolean matrix with 4 x 4 components. /;"	t	namespace:glm	typeref:typename:mat<4,4,bool,highp>
bool_type	./glm/detail/type_vec1.hpp	/^		typedef vec<1, bool, Q> bool_type;$/;"	t	struct:glm::vec	typeref:typename:vec<1,bool,Q>
bool_type	./glm/detail/type_vec2.hpp	/^		typedef vec<2, bool, Q> bool_type;$/;"	t	struct:glm::vec	typeref:typename:vec<2,bool,Q>
bool_type	./glm/detail/type_vec3.hpp	/^		typedef vec<3, bool, Q> bool_type;$/;"	t	struct:glm::vec	typeref:typename:vec<3,bool,Q>
bool_type	./glm/detail/type_vec4.hpp	/^		typedef vec<4, bool, Q> bool_type;$/;"	t	struct:glm::vec	typeref:typename:vec<4,bool,Q>
bounceEaseIn	./glm/gtx/easing.inl	/^	GLM_FUNC_QUALIFIER genType bounceEaseIn(genType const& a)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genType
bounceEaseInOut	./glm/gtx/easing.inl	/^	GLM_FUNC_QUALIFIER genType bounceEaseInOut(genType const& a)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genType
bounceEaseOut	./glm/gtx/easing.inl	/^	GLM_FUNC_QUALIFIER genType bounceEaseOut(genType const& a)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genType
bss_	./glm/gtx/io.hpp	/^			basic_state_saver<CTy> const bss_;$/;"	m	class:glm::io::basic_format_saver	typeref:typename:basic_state_saver<CTy> const
buffer_mask	./GL/glxew.h	/^  unsigned int buffer_mask; $/;"	m	struct:__anonb1a929810108	typeref:typename:unsigned int
bvec1	./glm/ext/vector_bool1.hpp	/^	typedef vec<1, bool, defaultp>		bvec1;$/;"	t	namespace:glm	typeref:typename:vec<1,bool,defaultp>
bvec1	./glm/fwd.hpp	/^	typedef vec<1, bool, defaultp>	bvec1;$/;"	t	namespace:glm	typeref:typename:vec<1,bool,defaultp>
bvec2	./glm/ext/vector_bool2.hpp	/^	typedef vec<2, bool, defaultp>		bvec2;$/;"	t	namespace:glm	typeref:typename:vec<2,bool,defaultp>
bvec2	./glm/fwd.hpp	/^	typedef vec<2, bool, defaultp>	bvec2;$/;"	t	namespace:glm	typeref:typename:vec<2,bool,defaultp>
bvec3	./glm/ext/vector_bool3.hpp	/^	typedef vec<3, bool, defaultp>		bvec3;$/;"	t	namespace:glm	typeref:typename:vec<3,bool,defaultp>
bvec3	./glm/fwd.hpp	/^	typedef vec<3, bool, defaultp>	bvec3;$/;"	t	namespace:glm	typeref:typename:vec<3,bool,defaultp>
bvec4	./glm/ext/vector_bool4.hpp	/^	typedef vec<4, bool, defaultp>		bvec4;$/;"	t	namespace:glm	typeref:typename:vec<4,bool,defaultp>
bvec4	./glm/fwd.hpp	/^	typedef vec<4, bool, defaultp>	bvec4;$/;"	t	namespace:glm	typeref:typename:vec<4,bool,defaultp>
byte	./glm/gtx/raw_data.hpp	/^	typedef detail::uint8		byte;$/;"	t	namespace:glm	typeref:typename:detail::uint8
call	./glm/detail/_vectorize.hpp	/^		GLM_FUNC_QUALIFIER GLM_CONSTEXPR static vec<1, R, Q> call(R (*Func) (T x), vec<1, T, Q> const&/;"	f	struct:glm::detail::functor1	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<1,R,Q>
call	./glm/detail/_vectorize.hpp	/^		GLM_FUNC_QUALIFIER GLM_CONSTEXPR static vec<2, R, Q> call(R (*Func) (T x), vec<2, T, Q> const&/;"	f	struct:glm::detail::functor1	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<2,R,Q>
call	./glm/detail/_vectorize.hpp	/^		GLM_FUNC_QUALIFIER GLM_CONSTEXPR static vec<3, R, Q> call(R (*Func) (T x), vec<3, T, Q> const&/;"	f	struct:glm::detail::functor1	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<3,R,Q>
call	./glm/detail/_vectorize.hpp	/^		GLM_FUNC_QUALIFIER GLM_CONSTEXPR static vec<4, R, Q> call(R (*Func) (T x), vec<4, T, Q> const&/;"	f	struct:glm::detail::functor1	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4,R,Q>
call	./glm/detail/_vectorize.hpp	/^		GLM_FUNC_QUALIFIER static vec<1, T, Q> call(T (*Func) (T x, T y), vec<1, T, Q> const& a, T b)$/;"	f	struct:glm::detail::functor2_vec_sca	typeref:typename:GLM_FUNC_QUALIFIER vec<1,T,Q>
call	./glm/detail/_vectorize.hpp	/^		GLM_FUNC_QUALIFIER static vec<1, T, Q> call(T (*Func) (T x, T y), vec<1, T, Q> const& a, vec<1/;"	f	struct:glm::detail::functor2	typeref:typename:GLM_FUNC_QUALIFIER vec<1,T,Q>
call	./glm/detail/_vectorize.hpp	/^		GLM_FUNC_QUALIFIER static vec<1, int, Q> call(int (*Func) (T x, int y), vec<1, T, Q> const& a,/;"	f	struct:glm::detail::functor2_vec_int	typeref:typename:GLM_FUNC_QUALIFIER vec<1,int,Q>
call	./glm/detail/_vectorize.hpp	/^		GLM_FUNC_QUALIFIER static vec<2, T, Q> call(T (*Func) (T x, T y), vec<2, T, Q> const& a, T b)$/;"	f	struct:glm::detail::functor2_vec_sca	typeref:typename:GLM_FUNC_QUALIFIER vec<2,T,Q>
call	./glm/detail/_vectorize.hpp	/^		GLM_FUNC_QUALIFIER static vec<2, T, Q> call(T (*Func) (T x, T y), vec<2, T, Q> const& a, vec<2/;"	f	struct:glm::detail::functor2	typeref:typename:GLM_FUNC_QUALIFIER vec<2,T,Q>
call	./glm/detail/_vectorize.hpp	/^		GLM_FUNC_QUALIFIER static vec<2, int, Q> call(int (*Func) (T x, int y), vec<2, T, Q> const& a,/;"	f	struct:glm::detail::functor2_vec_int	typeref:typename:GLM_FUNC_QUALIFIER vec<2,int,Q>
call	./glm/detail/_vectorize.hpp	/^		GLM_FUNC_QUALIFIER static vec<3, T, Q> call(T (*Func) (T x, T y), vec<3, T, Q> const& a, T b)$/;"	f	struct:glm::detail::functor2_vec_sca	typeref:typename:GLM_FUNC_QUALIFIER vec<3,T,Q>
call	./glm/detail/_vectorize.hpp	/^		GLM_FUNC_QUALIFIER static vec<3, T, Q> call(T (*Func) (T x, T y), vec<3, T, Q> const& a, vec<3/;"	f	struct:glm::detail::functor2	typeref:typename:GLM_FUNC_QUALIFIER vec<3,T,Q>
call	./glm/detail/_vectorize.hpp	/^		GLM_FUNC_QUALIFIER static vec<3, int, Q> call(int (*Func) (T x, int y), vec<3, T, Q> const& a,/;"	f	struct:glm::detail::functor2_vec_int	typeref:typename:GLM_FUNC_QUALIFIER vec<3,int,Q>
call	./glm/detail/_vectorize.hpp	/^		GLM_FUNC_QUALIFIER static vec<4, T, Q> call(T (*Func) (T x, T y), vec<4, T, Q> const& a, T b)$/;"	f	struct:glm::detail::functor2_vec_sca	typeref:typename:GLM_FUNC_QUALIFIER vec<4,T,Q>
call	./glm/detail/_vectorize.hpp	/^		GLM_FUNC_QUALIFIER static vec<4, T, Q> call(T (*Func) (T x, T y), vec<4, T, Q> const& a, vec<4/;"	f	struct:glm::detail::functor2	typeref:typename:GLM_FUNC_QUALIFIER vec<4,T,Q>
call	./glm/detail/_vectorize.hpp	/^		GLM_FUNC_QUALIFIER static vec<4, int, Q> call(int (*Func) (T x, int y), vec<4, T, Q> const& a,/;"	f	struct:glm::detail::functor2_vec_int	typeref:typename:GLM_FUNC_QUALIFIER vec<4,int,Q>
call	./glm/detail/compute_common.hpp	/^		GLM_FUNC_QUALIFIER GLM_CONSTEXPR static genFIType call(genFIType x)$/;"	f	struct:glm::detail::compute_abs	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR genFIType
call	./glm/detail/compute_common.hpp	/^		GLM_FUNC_QUALIFIER static float call(float x)$/;"	f	struct:glm::detail::compute_abs	typeref:typename:GLM_FUNC_QUALIFIER float
call	./glm/detail/compute_vector_decl.hpp	/^			GLM_FUNC_QUALIFIER GLM_CONSTEXPR static bool call(vec<4, T, Q> const& v1, vec<4, T, Q> const&/;"	f	struct:glm::detail::compute_vec_nequal	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR bool
call	./glm/detail/compute_vector_decl.hpp	/^			GLM_FUNC_QUALIFIER GLM_CONSTEXPR static bool call(vec<L, T, Q> const& v1, vec<L, T, Q> const&/;"	f	struct:glm::detail::compute_vec_equal	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR bool
call	./glm/detail/compute_vector_decl.hpp	/^			GLM_FUNC_QUALIFIER GLM_CONSTEXPR static vec<L, T, Q> call(vec<L, T, Q> const& a)$/;"	f	struct:glm::detail::compute_vec_bitwise_not	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<L,T,Q>
call	./glm/detail/compute_vector_decl.hpp	/^			GLM_FUNC_QUALIFIER GLM_CONSTEXPR static vec<L, T, Q> call(vec<L, T, Q> const& a, vec<L, T, Q>/;"	f	struct:glm::detail::compute_vec_add	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<L,T,Q>
call	./glm/detail/compute_vector_decl.hpp	/^			GLM_FUNC_QUALIFIER GLM_CONSTEXPR static vec<L, T, Q> call(vec<L, T, Q> const& a, vec<L, T, Q>/;"	f	struct:glm::detail::compute_vec_and	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<L,T,Q>
call	./glm/detail/compute_vector_decl.hpp	/^			GLM_FUNC_QUALIFIER GLM_CONSTEXPR static vec<L, T, Q> call(vec<L, T, Q> const& a, vec<L, T, Q>/;"	f	struct:glm::detail::compute_vec_div	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<L,T,Q>
call	./glm/detail/compute_vector_decl.hpp	/^			GLM_FUNC_QUALIFIER GLM_CONSTEXPR static vec<L, T, Q> call(vec<L, T, Q> const& a, vec<L, T, Q>/;"	f	struct:glm::detail::compute_vec_mod	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<L,T,Q>
call	./glm/detail/compute_vector_decl.hpp	/^			GLM_FUNC_QUALIFIER GLM_CONSTEXPR static vec<L, T, Q> call(vec<L, T, Q> const& a, vec<L, T, Q>/;"	f	struct:glm::detail::compute_vec_mul	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<L,T,Q>
call	./glm/detail/compute_vector_decl.hpp	/^			GLM_FUNC_QUALIFIER GLM_CONSTEXPR static vec<L, T, Q> call(vec<L, T, Q> const& a, vec<L, T, Q>/;"	f	struct:glm::detail::compute_vec_or	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<L,T,Q>
call	./glm/detail/compute_vector_decl.hpp	/^			GLM_FUNC_QUALIFIER GLM_CONSTEXPR static vec<L, T, Q> call(vec<L, T, Q> const& a, vec<L, T, Q>/;"	f	struct:glm::detail::compute_vec_shift_left	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<L,T,Q>
call	./glm/detail/compute_vector_decl.hpp	/^			GLM_FUNC_QUALIFIER GLM_CONSTEXPR static vec<L, T, Q> call(vec<L, T, Q> const& a, vec<L, T, Q>/;"	f	struct:glm::detail::compute_vec_shift_right	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<L,T,Q>
call	./glm/detail/compute_vector_decl.hpp	/^			GLM_FUNC_QUALIFIER GLM_CONSTEXPR static vec<L, T, Q> call(vec<L, T, Q> const& a, vec<L, T, Q>/;"	f	struct:glm::detail::compute_vec_sub	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<L,T,Q>
call	./glm/detail/compute_vector_decl.hpp	/^			GLM_FUNC_QUALIFIER GLM_CONSTEXPR static vec<L, T, Q> call(vec<L, T, Q> const& a, vec<L, T, Q>/;"	f	struct:glm::detail::compute_vec_xor	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<L,T,Q>
call	./glm/detail/compute_vector_relational.hpp	/^		GLM_FUNC_QUALIFIER GLM_CONSTEXPR static bool call(T a, T b)$/;"	f	struct:glm::detail::compute_equal	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR bool
call	./glm/detail/func_common.inl	/^		GLM_FUNC_QUALIFIER GLM_CONSTEXPR static T call(T const& x, T const& y, U const& a)$/;"	f	struct:glm::detail::compute_mix	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR T	file:
call	./glm/detail/func_common.inl	/^		GLM_FUNC_QUALIFIER GLM_CONSTEXPR static T call(T const& x, T const& y, bool const& a)$/;"	f	struct:glm::detail::compute_mix	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR T	file:
call	./glm/detail/func_common.inl	/^		GLM_FUNC_QUALIFIER GLM_CONSTEXPR static vec<L, T, Q> call(vec<L, T, Q> const& x)$/;"	f	struct:glm::detail::compute_abs_vector	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<L,T,Q>	file:
call	./glm/detail/func_common.inl	/^		GLM_FUNC_QUALIFIER GLM_CONSTEXPR static vec<L, T, Q> call(vec<L, T, Q> const& x)$/;"	f	struct:glm::detail::compute_sign	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<L,T,Q>	file:
call	./glm/detail/func_common.inl	/^		GLM_FUNC_QUALIFIER GLM_CONSTEXPR static vec<L, T, Q> call(vec<L, T, Q> const& x, vec<L, T, Q> /;"	f	struct:glm::detail::compute_mix_scalar	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<L,T,Q>	file:
call	./glm/detail/func_common.inl	/^		GLM_FUNC_QUALIFIER GLM_CONSTEXPR static vec<L, T, Q> call(vec<L, T, Q> const& x, vec<L, T, Q> /;"	f	struct:glm::detail::compute_mix_vector	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<L,T,Q>	file:
call	./glm/detail/func_common.inl	/^		GLM_FUNC_QUALIFIER static vec<L, T, Q> call(vec<L, T, Q> const& a, vec<L, T, Q> const& b)$/;"	f	struct:glm::detail::compute_mod	typeref:typename:GLM_FUNC_QUALIFIER vec<L,T,Q>	file:
call	./glm/detail/func_common.inl	/^		GLM_FUNC_QUALIFIER static vec<L, T, Q> call(vec<L, T, Q> const& edge, vec<L, T, Q> const& x)$/;"	f	struct:glm::detail::compute_step_vector	typeref:typename:GLM_FUNC_QUALIFIER vec<L,T,Q>	file:
call	./glm/detail/func_common.inl	/^		GLM_FUNC_QUALIFIER static vec<L, T, Q> call(vec<L, T, Q> const& edge0, vec<L, T, Q> const& edg/;"	f	struct:glm::detail::compute_smoothstep_vector	typeref:typename:GLM_FUNC_QUALIFIER vec<L,T,Q>	file:
call	./glm/detail/func_common.inl	/^		GLM_FUNC_QUALIFIER static vec<L, T, Q> call(vec<L, T, Q> const& x)$/;"	f	struct:glm::detail::compute_ceil	typeref:typename:GLM_FUNC_QUALIFIER vec<L,T,Q>	file:
call	./glm/detail/func_common.inl	/^		GLM_FUNC_QUALIFIER static vec<L, T, Q> call(vec<L, T, Q> const& x)$/;"	f	struct:glm::detail::compute_floor	typeref:typename:GLM_FUNC_QUALIFIER vec<L,T,Q>	file:
call	./glm/detail/func_common.inl	/^		GLM_FUNC_QUALIFIER static vec<L, T, Q> call(vec<L, T, Q> const& x)$/;"	f	struct:glm::detail::compute_fract	typeref:typename:GLM_FUNC_QUALIFIER vec<L,T,Q>	file:
call	./glm/detail/func_common.inl	/^		GLM_FUNC_QUALIFIER static vec<L, T, Q> call(vec<L, T, Q> const& x)$/;"	f	struct:glm::detail::compute_round	typeref:typename:GLM_FUNC_QUALIFIER vec<L,T,Q>	file:
call	./glm/detail/func_common.inl	/^		GLM_FUNC_QUALIFIER static vec<L, T, Q> call(vec<L, T, Q> const& x)$/;"	f	struct:glm::detail::compute_trunc	typeref:typename:GLM_FUNC_QUALIFIER vec<L,T,Q>	file:
call	./glm/detail/func_common.inl	/^		GLM_FUNC_QUALIFIER static vec<L, T, Q> call(vec<L, T, Q> const& x, vec<L, T, Q> const& minVal,/;"	f	struct:glm::detail::compute_clamp_vector	typeref:typename:GLM_FUNC_QUALIFIER vec<L,T,Q>	file:
call	./glm/detail/func_common.inl	/^		GLM_FUNC_QUALIFIER static vec<L, T, Q> call(vec<L, T, Q> const& x, vec<L, T, Q> const& y)$/;"	f	struct:glm::detail::compute_max_vector	typeref:typename:GLM_FUNC_QUALIFIER vec<L,T,Q>	file:
call	./glm/detail/func_common.inl	/^		GLM_FUNC_QUALIFIER static vec<L, T, Q> call(vec<L, T, Q> const& x, vec<L, T, Q> const& y)$/;"	f	struct:glm::detail::compute_min_vector	typeref:typename:GLM_FUNC_QUALIFIER vec<L,T,Q>	file:
call	./glm/detail/func_common_simd.inl	/^		GLM_FUNC_QUALIFIER static vec<4, float, Q> call(vec<4, float, Q> const& edge0, vec<4, float, Q/;"	f	struct:glm::detail::compute_smoothstep_vector	typeref:typename:GLM_FUNC_QUALIFIER vec<4,float,Q>	file:
call	./glm/detail/func_common_simd.inl	/^		GLM_FUNC_QUALIFIER static vec<4, float, Q> call(vec<4, float, Q> const& v)$/;"	f	struct:glm::detail::compute_abs_vector	typeref:typename:GLM_FUNC_QUALIFIER vec<4,float,Q>	file:
call	./glm/detail/func_common_simd.inl	/^		GLM_FUNC_QUALIFIER static vec<4, float, Q> call(vec<4, float, Q> const& v)$/;"	f	struct:glm::detail::compute_ceil	typeref:typename:GLM_FUNC_QUALIFIER vec<4,float,Q>	file:
call	./glm/detail/func_common_simd.inl	/^		GLM_FUNC_QUALIFIER static vec<4, float, Q> call(vec<4, float, Q> const& v)$/;"	f	struct:glm::detail::compute_floor	typeref:typename:GLM_FUNC_QUALIFIER vec<4,float,Q>	file:
call	./glm/detail/func_common_simd.inl	/^		GLM_FUNC_QUALIFIER static vec<4, float, Q> call(vec<4, float, Q> const& v)$/;"	f	struct:glm::detail::compute_fract	typeref:typename:GLM_FUNC_QUALIFIER vec<4,float,Q>	file:
call	./glm/detail/func_common_simd.inl	/^		GLM_FUNC_QUALIFIER static vec<4, float, Q> call(vec<4, float, Q> const& v)$/;"	f	struct:glm::detail::compute_round	typeref:typename:GLM_FUNC_QUALIFIER vec<4,float,Q>	file:
call	./glm/detail/func_common_simd.inl	/^		GLM_FUNC_QUALIFIER static vec<4, float, Q> call(vec<4, float, Q> const& v1, vec<4, float, Q> c/;"	f	struct:glm::detail::compute_max_vector	typeref:typename:GLM_FUNC_QUALIFIER vec<4,float,Q>	file:
call	./glm/detail/func_common_simd.inl	/^		GLM_FUNC_QUALIFIER static vec<4, float, Q> call(vec<4, float, Q> const& v1, vec<4, float, Q> c/;"	f	struct:glm::detail::compute_min_vector	typeref:typename:GLM_FUNC_QUALIFIER vec<4,float,Q>	file:
call	./glm/detail/func_common_simd.inl	/^		GLM_FUNC_QUALIFIER static vec<4, float, Q> call(vec<4, float, Q> const& x, vec<4, float, Q> co/;"	f	struct:glm::detail::compute_clamp_vector	typeref:typename:GLM_FUNC_QUALIFIER vec<4,float,Q>	file:
call	./glm/detail/func_common_simd.inl	/^		GLM_FUNC_QUALIFIER static vec<4, float, Q> call(vec<4, float, Q> const& x, vec<4, float, Q> co/;"	f	struct:glm::detail::compute_mix_vector	typeref:typename:GLM_FUNC_QUALIFIER vec<4,float,Q>	file:
call	./glm/detail/func_common_simd.inl	/^		GLM_FUNC_QUALIFIER static vec<4, float, Q> call(vec<4, float, Q> const& x, vec<4, float, Q> co/;"	f	struct:glm::detail::compute_mod	typeref:typename:GLM_FUNC_QUALIFIER vec<4,float,Q>	file:
call	./glm/detail/func_common_simd.inl	/^		GLM_FUNC_QUALIFIER static vec<4, int, Q> call(vec<4, int, Q> const& v)$/;"	f	struct:glm::detail::compute_abs_vector	typeref:typename:GLM_FUNC_QUALIFIER vec<4,int,Q>	file:
call	./glm/detail/func_common_simd.inl	/^		GLM_FUNC_QUALIFIER static vec<4, int, Q> call(vec<4, int, Q> const& v1, vec<4, int, Q> const& /;"	f	struct:glm::detail::compute_max_vector	typeref:typename:GLM_FUNC_QUALIFIER vec<4,int,Q>	file:
call	./glm/detail/func_common_simd.inl	/^		GLM_FUNC_QUALIFIER static vec<4, int, Q> call(vec<4, int, Q> const& v1, vec<4, int, Q> const& /;"	f	struct:glm::detail::compute_min_vector	typeref:typename:GLM_FUNC_QUALIFIER vec<4,int,Q>	file:
call	./glm/detail/func_common_simd.inl	/^		GLM_FUNC_QUALIFIER static vec<4, int, Q> call(vec<4, int, Q> const& x, vec<4, int, Q> const& m/;"	f	struct:glm::detail::compute_clamp_vector	typeref:typename:GLM_FUNC_QUALIFIER vec<4,int,Q>	file:
call	./glm/detail/func_common_simd.inl	/^		GLM_FUNC_QUALIFIER static vec<4, uint, Q> call(vec<4, uint, Q> const& v1, vec<4, uint, Q> cons/;"	f	struct:glm::detail::compute_max_vector	typeref:typename:GLM_FUNC_QUALIFIER vec<4,uint,Q>	file:
call	./glm/detail/func_common_simd.inl	/^		GLM_FUNC_QUALIFIER static vec<4, uint, Q> call(vec<4, uint, Q> const& v1, vec<4, uint, Q> cons/;"	f	struct:glm::detail::compute_min_vector	typeref:typename:GLM_FUNC_QUALIFIER vec<4,uint,Q>	file:
call	./glm/detail/func_common_simd.inl	/^		GLM_FUNC_QUALIFIER static vec<4, uint, Q> call(vec<4, uint, Q> const& x, vec<4, uint, Q> const/;"	f	struct:glm::detail::compute_clamp_vector	typeref:typename:GLM_FUNC_QUALIFIER vec<4,uint,Q>	file:
call	./glm/detail/func_exponential.inl	/^		GLM_FUNC_QUALIFIER static vec<L, T, Q> call(vec<L, T, Q> const& v)$/;"	f	struct:glm::detail::compute_log2	typeref:typename:GLM_FUNC_QUALIFIER vec<L,T,Q>	file:
call	./glm/detail/func_exponential.inl	/^		GLM_FUNC_QUALIFIER static vec<L, T, Q> call(vec<L, T, Q> const& x)$/;"	f	struct:glm::detail::compute_inversesqrt	typeref:typename:GLM_FUNC_QUALIFIER vec<L,T,Q>	file:
call	./glm/detail/func_exponential.inl	/^		GLM_FUNC_QUALIFIER static vec<L, T, Q> call(vec<L, T, Q> const& x)$/;"	f	struct:glm::detail::compute_sqrt	typeref:typename:GLM_FUNC_QUALIFIER vec<L,T,Q>	file:
call	./glm/detail/func_exponential.inl	/^		GLM_FUNC_QUALIFIER static vec<L, float, lowp> call(vec<L, float, lowp> const& x)$/;"	f	struct:glm::detail::compute_inversesqrt	typeref:typename:GLM_FUNC_QUALIFIER vec<L,float,lowp>	file:
call	./glm/detail/func_exponential_simd.inl	/^		GLM_FUNC_QUALIFIER static vec<4, float, Q> call(vec<4, float, Q> const& v)$/;"	f	struct:glm::detail::compute_sqrt	typeref:typename:GLM_FUNC_QUALIFIER vec<4,float,Q>	file:
call	./glm/detail/func_exponential_simd.inl	/^		GLM_FUNC_QUALIFIER static vec<4, float, aligned_lowp> call(vec<4, float, aligned_lowp> const& /;"	f	struct:glm::detail::compute_sqrt	typeref:typename:GLM_FUNC_QUALIFIER vec<4,float,aligned_lowp>	file:
call	./glm/detail/func_geometric.inl	/^		GLM_FUNC_QUALIFIER GLM_CONSTEXPR static T call(vec<1, T, Q> const& a, vec<1, T, Q> const& b)$/;"	f	struct:glm::detail::compute_dot	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR T	file:
call	./glm/detail/func_geometric.inl	/^		GLM_FUNC_QUALIFIER GLM_CONSTEXPR static T call(vec<2, T, Q> const& a, vec<2, T, Q> const& b)$/;"	f	struct:glm::detail::compute_dot	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR T	file:
call	./glm/detail/func_geometric.inl	/^		GLM_FUNC_QUALIFIER GLM_CONSTEXPR static T call(vec<3, T, Q> const& a, vec<3, T, Q> const& b)$/;"	f	struct:glm::detail::compute_dot	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR T	file:
call	./glm/detail/func_geometric.inl	/^		GLM_FUNC_QUALIFIER GLM_CONSTEXPR static T call(vec<4, T, Q> const& a, vec<4, T, Q> const& b)$/;"	f	struct:glm::detail::compute_dot	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR T	file:
call	./glm/detail/func_geometric.inl	/^		GLM_FUNC_QUALIFIER GLM_CONSTEXPR static vec<3, T, Q> call(vec<3, T, Q> const& x, vec<3, T, Q> /;"	f	struct:glm::detail::compute_cross	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<3,T,Q>	file:
call	./glm/detail/func_geometric.inl	/^		GLM_FUNC_QUALIFIER static T call(vec<L, T, Q> const& p0, vec<L, T, Q> const& p1)$/;"	f	struct:glm::detail::compute_distance	typeref:typename:GLM_FUNC_QUALIFIER T	file:
call	./glm/detail/func_geometric.inl	/^		GLM_FUNC_QUALIFIER static T call(vec<L, T, Q> const& v)$/;"	f	struct:glm::detail::compute_length	typeref:typename:GLM_FUNC_QUALIFIER T	file:
call	./glm/detail/func_geometric.inl	/^		GLM_FUNC_QUALIFIER static vec<L, T, Q> call(vec<L, T, Q> const& I, vec<L, T, Q> const& N)$/;"	f	struct:glm::detail::compute_reflect	typeref:typename:GLM_FUNC_QUALIFIER vec<L,T,Q>	file:
call	./glm/detail/func_geometric.inl	/^		GLM_FUNC_QUALIFIER static vec<L, T, Q> call(vec<L, T, Q> const& I, vec<L, T, Q> const& N, T et/;"	f	struct:glm::detail::compute_refract	typeref:typename:GLM_FUNC_QUALIFIER vec<L,T,Q>	file:
call	./glm/detail/func_geometric.inl	/^		GLM_FUNC_QUALIFIER static vec<L, T, Q> call(vec<L, T, Q> const& N, vec<L, T, Q> const& I, vec</;"	f	struct:glm::detail::compute_faceforward	typeref:typename:GLM_FUNC_QUALIFIER vec<L,T,Q>	file:
call	./glm/detail/func_geometric.inl	/^		GLM_FUNC_QUALIFIER static vec<L, T, Q> call(vec<L, T, Q> const& v)$/;"	f	struct:glm::detail::compute_normalize	typeref:typename:GLM_FUNC_QUALIFIER vec<L,T,Q>	file:
call	./glm/detail/func_geometric_simd.inl	/^		GLM_FUNC_QUALIFIER static float call(vec<4, float, Q> const& p0, vec<4, float, Q> const& p1)$/;"	f	struct:glm::detail::compute_distance	typeref:typename:GLM_FUNC_QUALIFIER float	file:
call	./glm/detail/func_geometric_simd.inl	/^		GLM_FUNC_QUALIFIER static float call(vec<4, float, Q> const& v)$/;"	f	struct:glm::detail::compute_length	typeref:typename:GLM_FUNC_QUALIFIER float	file:
call	./glm/detail/func_geometric_simd.inl	/^		GLM_FUNC_QUALIFIER static float call(vec<4, float, Q> const& x, vec<4, float, Q> const& y)$/;"	f	struct:glm::detail::compute_dot	typeref:typename:GLM_FUNC_QUALIFIER float	file:
call	./glm/detail/func_geometric_simd.inl	/^		GLM_FUNC_QUALIFIER static vec<3, float, Q> call(vec<3, float, Q> const& a, vec<3, float, Q> co/;"	f	struct:glm::detail::compute_cross	typeref:typename:GLM_FUNC_QUALIFIER vec<3,float,Q>	file:
call	./glm/detail/func_geometric_simd.inl	/^		GLM_FUNC_QUALIFIER static vec<4, float, Q> call(vec<4, float, Q> const& I, vec<4, float, Q> co/;"	f	struct:glm::detail::compute_reflect	typeref:typename:GLM_FUNC_QUALIFIER vec<4,float,Q>	file:
call	./glm/detail/func_geometric_simd.inl	/^		GLM_FUNC_QUALIFIER static vec<4, float, Q> call(vec<4, float, Q> const& I, vec<4, float, Q> co/;"	f	struct:glm::detail::compute_refract	typeref:typename:GLM_FUNC_QUALIFIER vec<4,float,Q>	file:
call	./glm/detail/func_geometric_simd.inl	/^		GLM_FUNC_QUALIFIER static vec<4, float, Q> call(vec<4, float, Q> const& N, vec<4, float, Q> co/;"	f	struct:glm::detail::compute_faceforward	typeref:typename:GLM_FUNC_QUALIFIER vec<4,float,Q>	file:
call	./glm/detail/func_geometric_simd.inl	/^		GLM_FUNC_QUALIFIER static vec<4, float, Q> call(vec<4, float, Q> const& v)$/;"	f	struct:glm::detail::compute_normalize	typeref:typename:GLM_FUNC_QUALIFIER vec<4,float,Q>	file:
call	./glm/detail/func_integer.inl	/^			GLM_FUNC_QUALIFIER static int call(genIUType Value)$/;"	f	struct:glm::detail::compute_findLSB	typeref:typename:GLM_FUNC_QUALIFIER int	file:
call	./glm/detail/func_integer.inl	/^			GLM_FUNC_QUALIFIER static vec<L, int, Q> call(vec<L, T, Q> const& x)$/;"	f	struct:glm::detail::compute_findMSB_vec	typeref:typename:GLM_FUNC_QUALIFIER vec<L,int,Q>	file:
call	./glm/detail/func_integer.inl	/^		GLM_FUNC_QUALIFIER static int call(genIUType Value)$/;"	f	struct:glm::detail::compute_findLSB	typeref:typename:GLM_FUNC_QUALIFIER int	file:
call	./glm/detail/func_integer.inl	/^		GLM_FUNC_QUALIFIER static vec<L, T, Q> call(vec<L, T, Q> const& v, T Mask, T Shift)$/;"	f	struct:glm::detail::compute_bitfieldBitCountStep	typeref:typename:GLM_FUNC_QUALIFIER vec<L,T,Q>	file:
call	./glm/detail/func_integer.inl	/^		GLM_FUNC_QUALIFIER static vec<L, T, Q> call(vec<L, T, Q> const& v, T Mask, T Shift)$/;"	f	struct:glm::detail::compute_bitfieldReverseStep	typeref:typename:GLM_FUNC_QUALIFIER vec<L,T,Q>	file:
call	./glm/detail/func_integer.inl	/^		GLM_FUNC_QUALIFIER static vec<L, T, Q> call(vec<L, T, Q> const& v, T, T)$/;"	f	struct:glm::detail::compute_bitfieldBitCountStep	typeref:typename:GLM_FUNC_QUALIFIER vec<L,T,Q>	file:
call	./glm/detail/func_integer.inl	/^		GLM_FUNC_QUALIFIER static vec<L, T, Q> call(vec<L, T, Q> const& v, T, T)$/;"	f	struct:glm::detail::compute_bitfieldReverseStep	typeref:typename:GLM_FUNC_QUALIFIER vec<L,T,Q>	file:
call	./glm/detail/func_integer.inl	/^		GLM_FUNC_QUALIFIER static vec<L, T, Q> call(vec<L, T, Q> const& x, T Shift)$/;"	f	struct:glm::detail::compute_findMSB_step_vec	typeref:typename:GLM_FUNC_QUALIFIER vec<L,T,Q>	file:
call	./glm/detail/func_integer.inl	/^		GLM_FUNC_QUALIFIER static vec<L, T, Q> call(vec<L, T, Q> const& x, T)$/;"	f	struct:glm::detail::compute_findMSB_step_vec	typeref:typename:GLM_FUNC_QUALIFIER vec<L,T,Q>	file:
call	./glm/detail/func_integer.inl	/^		GLM_FUNC_QUALIFIER static vec<L, int, Q> call(vec<L, T, Q> const& v)$/;"	f	struct:glm::detail::compute_findMSB_vec	typeref:typename:GLM_FUNC_QUALIFIER vec<L,int,Q>	file:
call	./glm/detail/func_integer_simd.inl	/^		GLM_FUNC_QUALIFIER static vec<4, uint, Q> call(vec<4, uint, Q> const& v, uint Mask, uint Shift/;"	f	struct:glm::detail::compute_bitfieldBitCountStep	typeref:typename:GLM_FUNC_QUALIFIER vec<4,uint,Q>	file:
call	./glm/detail/func_integer_simd.inl	/^		GLM_FUNC_QUALIFIER static vec<4, uint, Q> call(vec<4, uint, Q> const& v, uint Mask, uint Shift/;"	f	struct:glm::detail::compute_bitfieldReverseStep	typeref:typename:GLM_FUNC_QUALIFIER vec<4,uint,Q>	file:
call	./glm/detail/func_matrix.inl	/^		GLM_FUNC_QUALIFIER static T call(mat<2, 2, T, Q> const& m)$/;"	f	struct:glm::detail::compute_determinant	typeref:typename:GLM_FUNC_QUALIFIER T	file:
call	./glm/detail/func_matrix.inl	/^		GLM_FUNC_QUALIFIER static T call(mat<3, 3, T, Q> const& m)$/;"	f	struct:glm::detail::compute_determinant	typeref:typename:GLM_FUNC_QUALIFIER T	file:
call	./glm/detail/func_matrix.inl	/^		GLM_FUNC_QUALIFIER static T call(mat<4, 4, T, Q> const& m)$/;"	f	struct:glm::detail::compute_determinant	typeref:typename:GLM_FUNC_QUALIFIER T	file:
call	./glm/detail/func_matrix.inl	/^		GLM_FUNC_QUALIFIER static T call(mat<C, R, T, Q> const& m)$/;"	f	struct:glm::detail::compute_determinant_type	typeref:typename:GLM_FUNC_QUALIFIER T	file:
call	./glm/detail/func_matrix.inl	/^		GLM_FUNC_QUALIFIER static mat<2, 2, T, Q> call(mat<2, 2, T, Q> const& m)$/;"	f	struct:glm::detail::compute_inverse	typeref:typename:GLM_FUNC_QUALIFIER mat<2,2,T,Q>	file:
call	./glm/detail/func_matrix.inl	/^		GLM_FUNC_QUALIFIER static mat<2, 2, T, Q> call(mat<2, 2, T, Q> const& m)$/;"	f	struct:glm::detail::compute_transpose	typeref:typename:GLM_FUNC_QUALIFIER mat<2,2,T,Q>	file:
call	./glm/detail/func_matrix.inl	/^		GLM_FUNC_QUALIFIER static mat<2, 3, T, Q> call(mat<3, 2, T, Q> const& m)$/;"	f	struct:glm::detail::compute_transpose	typeref:typename:GLM_FUNC_QUALIFIER mat<2,3,T,Q>	file:
call	./glm/detail/func_matrix.inl	/^		GLM_FUNC_QUALIFIER static mat<2, 4, T, Q> call(mat<4, 2, T, Q> const& m)$/;"	f	struct:glm::detail::compute_transpose	typeref:typename:GLM_FUNC_QUALIFIER mat<2,4,T,Q>	file:
call	./glm/detail/func_matrix.inl	/^		GLM_FUNC_QUALIFIER static mat<3, 2, T, Q> call(mat<2, 3, T, Q> const& m)$/;"	f	struct:glm::detail::compute_transpose	typeref:typename:GLM_FUNC_QUALIFIER mat<3,2,T,Q>	file:
call	./glm/detail/func_matrix.inl	/^		GLM_FUNC_QUALIFIER static mat<3, 3, T, Q> call(mat<3, 3, T, Q> const& m)$/;"	f	struct:glm::detail::compute_inverse	typeref:typename:GLM_FUNC_QUALIFIER mat<3,3,T,Q>	file:
call	./glm/detail/func_matrix.inl	/^		GLM_FUNC_QUALIFIER static mat<3, 3, T, Q> call(mat<3, 3, T, Q> const& m)$/;"	f	struct:glm::detail::compute_transpose	typeref:typename:GLM_FUNC_QUALIFIER mat<3,3,T,Q>	file:
call	./glm/detail/func_matrix.inl	/^		GLM_FUNC_QUALIFIER static mat<3, 4, T, Q> call(mat<4, 3, T, Q> const& m)$/;"	f	struct:glm::detail::compute_transpose	typeref:typename:GLM_FUNC_QUALIFIER mat<3,4,T,Q>	file:
call	./glm/detail/func_matrix.inl	/^		GLM_FUNC_QUALIFIER static mat<4, 2, T, Q> call(mat<2, 4, T, Q> const& m)$/;"	f	struct:glm::detail::compute_transpose	typeref:typename:GLM_FUNC_QUALIFIER mat<4,2,T,Q>	file:
call	./glm/detail/func_matrix.inl	/^		GLM_FUNC_QUALIFIER static mat<4, 3, T, Q> call(mat<3, 4, T, Q> const& m)$/;"	f	struct:glm::detail::compute_transpose	typeref:typename:GLM_FUNC_QUALIFIER mat<4,3,T,Q>	file:
call	./glm/detail/func_matrix.inl	/^		GLM_FUNC_QUALIFIER static mat<4, 4, T, Q> call(mat<4, 4, T, Q> const& m)$/;"	f	struct:glm::detail::compute_inverse	typeref:typename:GLM_FUNC_QUALIFIER mat<4,4,T,Q>	file:
call	./glm/detail/func_matrix.inl	/^		GLM_FUNC_QUALIFIER static mat<4, 4, T, Q> call(mat<4, 4, T, Q> const& m)$/;"	f	struct:glm::detail::compute_transpose	typeref:typename:GLM_FUNC_QUALIFIER mat<4,4,T,Q>	file:
call	./glm/detail/func_matrix.inl	/^		GLM_FUNC_QUALIFIER static mat<C, R, T, Q> call(mat<C, R, T, Q> const& x, mat<C, R, T, Q> const/;"	f	struct:glm::detail::compute_matrixCompMult	typeref:typename:GLM_FUNC_QUALIFIER mat<C,R,T,Q>	file:
call	./glm/detail/func_matrix.inl	/^		GLM_FUNC_QUALIFIER static mat<C, R, T, Q> call(mat<C, R, T, Q> const& x, mat<C, R, T, Q> const/;"	f	struct:glm::detail::compute_matrixCompMult_type	typeref:typename:GLM_FUNC_QUALIFIER mat<C,R,T,Q>	file:
call	./glm/detail/func_matrix.inl	/^		GLM_FUNC_QUALIFIER static mat<R, C, T, Q> call(mat<C, R, T, Q> const& m)$/;"	f	struct:glm::detail::compute_transpose_type	typeref:typename:GLM_FUNC_QUALIFIER mat<R,C,T,Q>	file:
call	./glm/detail/func_matrix.inl	/^		GLM_FUNC_QUALIFIER static typename detail::outerProduct_trait<DA, DB, T, Q>::type call(vec<DA,/;"	f	struct:glm::detail::compute_outerProduct	typeref:typename:GLM_FUNC_QUALIFIER typename detail::outerProduct_trait<DA,DB,T,Q>::type	file:
call	./glm/detail/func_matrix.inl	/^		GLM_FUNC_QUALIFIER static typename detail::outerProduct_trait<DA, DB, T, Q>::type call(vec<DA,/;"	f	struct:glm::detail::compute_outerProduct_type	typeref:typename:GLM_FUNC_QUALIFIER typename detail::outerProduct_trait<DA,DB,T,Q>::type	file:
call	./glm/detail/func_matrix_simd.inl	/^		GLM_FUNC_QUALIFIER static float call(mat<4, 4, float, Q> const& m)$/;"	f	struct:glm::detail::compute_determinant	typeref:typename:GLM_FUNC_QUALIFIER float	file:
call	./glm/detail/func_matrix_simd.inl	/^		GLM_FUNC_QUALIFIER static mat<4, 4, float, Q> call(mat<4, 4, float, Q> const& m)$/;"	f	struct:glm::detail::compute_inverse	typeref:typename:GLM_FUNC_QUALIFIER mat<4,4,float,Q>	file:
call	./glm/detail/func_matrix_simd.inl	/^		GLM_FUNC_QUALIFIER static mat<4, 4, float, Q> call(mat<4, 4, float, Q> const& m)$/;"	f	struct:glm::detail::compute_transpose	typeref:typename:GLM_FUNC_QUALIFIER mat<4,4,float,Q>	file:
call	./glm/detail/func_matrix_simd.inl	/^		GLM_FUNC_QUALIFIER static mat<4, 4, float, Q> call(mat<4, 4, float, Q> const& x, mat<4, 4, flo/;"	f	struct:glm::detail::compute_matrixCompMult	typeref:typename:GLM_FUNC_QUALIFIER mat<4,4,float,Q>	file:
call	./glm/detail/type_quat.inl	/^		GLM_FUNC_QUALIFIER GLM_CONSTEXPR static T call(qua<T, Q> const& a, qua<T, Q> const& b)$/;"	f	struct:glm::detail::compute_dot	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR T	file:
call	./glm/detail/type_quat.inl	/^		GLM_FUNC_QUALIFIER GLM_CONSTEXPR static qua<T, Q> call(qua<T, Q> const& q, T s)$/;"	f	struct:glm::detail::compute_quat_div_scalar	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR qua<T,Q>	file:
call	./glm/detail/type_quat.inl	/^		GLM_FUNC_QUALIFIER GLM_CONSTEXPR static qua<T, Q> call(qua<T, Q> const& q, T s)$/;"	f	struct:glm::detail::compute_quat_mul_scalar	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR qua<T,Q>	file:
call	./glm/detail/type_quat.inl	/^		GLM_FUNC_QUALIFIER GLM_CONSTEXPR static qua<T, Q> call(qua<T, Q> const& q, qua<T, Q> const& p)$/;"	f	struct:glm::detail::compute_quat_add	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR qua<T,Q>	file:
call	./glm/detail/type_quat.inl	/^		GLM_FUNC_QUALIFIER GLM_CONSTEXPR static qua<T, Q> call(qua<T, Q> const& q, qua<T, Q> const& p)$/;"	f	struct:glm::detail::compute_quat_sub	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR qua<T,Q>	file:
call	./glm/detail/type_quat.inl	/^		GLM_FUNC_QUALIFIER GLM_CONSTEXPR static vec<4, T, Q> call(qua<T, Q> const& q, vec<4, T, Q> con/;"	f	struct:glm::detail::compute_quat_mul_vec4	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4,T,Q>	file:
call	./glm/detail/type_quat_simd.inl	/^		static qua<double, Q> call(qua<double, Q> const& a, qua<double, Q> const& b)$/;"	f	struct:glm::detail::compute_quat_add	typeref:typename:qua<double,Q>	file:
call	./glm/detail/type_quat_simd.inl	/^		static qua<double, Q> call(qua<double, Q> const& a, qua<double, Q> const& b)$/;"	f	struct:glm::detail::compute_quat_sub	typeref:typename:qua<double,Q>	file:
call	./glm/detail/type_quat_simd.inl	/^		static qua<double, Q> call(qua<double, Q> const& q, double s)$/;"	f	struct:glm::detail::compute_quat_div_scalar	typeref:typename:qua<double,Q>	file:
call	./glm/detail/type_quat_simd.inl	/^		static qua<double, Q> call(qua<double, Q> const& q, double s)$/;"	f	struct:glm::detail::compute_quat_mul_scalar	typeref:typename:qua<double,Q>	file:
call	./glm/detail/type_quat_simd.inl	/^		static qua<float, Q> call(qua<float, Q> const& q, float s)$/;"	f	struct:glm::detail::compute_quat_div_scalar	typeref:typename:qua<float,Q>	file:
call	./glm/detail/type_quat_simd.inl	/^		static qua<float, Q> call(qua<float, Q> const& q, float s)$/;"	f	struct:glm::detail::compute_quat_mul_scalar	typeref:typename:qua<float,Q>	file:
call	./glm/detail/type_quat_simd.inl	/^		static qua<float, Q> call(qua<float, Q> const& q, qua<float, Q> const& p)$/;"	f	struct:glm::detail::compute_quat_add	typeref:typename:qua<float,Q>	file:
call	./glm/detail/type_quat_simd.inl	/^		static qua<float, Q> call(qua<float, Q> const& q, qua<float, Q> const& p)$/;"	f	struct:glm::detail::compute_quat_sub	typeref:typename:qua<float,Q>	file:
call	./glm/detail/type_quat_simd.inl	/^		static vec<4, float, Q> call(qua<float, Q> const& q, vec<4, float, Q> const& v)$/;"	f	struct:glm::detail::compute_quat_mul_vec4	typeref:typename:vec<4,float,Q>	file:
call	./glm/detail/type_vec4.inl	/^		GLM_FUNC_QUALIFIER GLM_CONSTEXPR static bool call(vec<4, T, Q> const& v1, vec<4, T, Q> const& /;"	f	struct:glm::detail::compute_vec4_equal	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR bool	file:
call	./glm/detail/type_vec4.inl	/^		GLM_FUNC_QUALIFIER GLM_CONSTEXPR static bool call(vec<4, T, Q> const& v1, vec<4, T, Q> const& /;"	f	struct:glm::detail::compute_vec4_nequal	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR bool	file:
call	./glm/detail/type_vec4.inl	/^		GLM_FUNC_QUALIFIER GLM_CONSTEXPR static vec<4, T, Q> call(vec<4, T, Q> const& a, vec<4, T, Q> /;"	f	struct:glm::detail::compute_vec4_add	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4,T,Q>	file:
call	./glm/detail/type_vec4.inl	/^		GLM_FUNC_QUALIFIER GLM_CONSTEXPR static vec<4, T, Q> call(vec<4, T, Q> const& a, vec<4, T, Q> /;"	f	struct:glm::detail::compute_vec4_and	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4,T,Q>	file:
call	./glm/detail/type_vec4.inl	/^		GLM_FUNC_QUALIFIER GLM_CONSTEXPR static vec<4, T, Q> call(vec<4, T, Q> const& a, vec<4, T, Q> /;"	f	struct:glm::detail::compute_vec4_div	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4,T,Q>	file:
call	./glm/detail/type_vec4.inl	/^		GLM_FUNC_QUALIFIER GLM_CONSTEXPR static vec<4, T, Q> call(vec<4, T, Q> const& a, vec<4, T, Q> /;"	f	struct:glm::detail::compute_vec4_mod	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4,T,Q>	file:
call	./glm/detail/type_vec4.inl	/^		GLM_FUNC_QUALIFIER GLM_CONSTEXPR static vec<4, T, Q> call(vec<4, T, Q> const& a, vec<4, T, Q> /;"	f	struct:glm::detail::compute_vec4_mul	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4,T,Q>	file:
call	./glm/detail/type_vec4.inl	/^		GLM_FUNC_QUALIFIER GLM_CONSTEXPR static vec<4, T, Q> call(vec<4, T, Q> const& a, vec<4, T, Q> /;"	f	struct:glm::detail::compute_vec4_or	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4,T,Q>	file:
call	./glm/detail/type_vec4.inl	/^		GLM_FUNC_QUALIFIER GLM_CONSTEXPR static vec<4, T, Q> call(vec<4, T, Q> const& a, vec<4, T, Q> /;"	f	struct:glm::detail::compute_vec4_shift_left	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4,T,Q>	file:
call	./glm/detail/type_vec4.inl	/^		GLM_FUNC_QUALIFIER GLM_CONSTEXPR static vec<4, T, Q> call(vec<4, T, Q> const& a, vec<4, T, Q> /;"	f	struct:glm::detail::compute_vec4_shift_right	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4,T,Q>	file:
call	./glm/detail/type_vec4.inl	/^		GLM_FUNC_QUALIFIER GLM_CONSTEXPR static vec<4, T, Q> call(vec<4, T, Q> const& a, vec<4, T, Q> /;"	f	struct:glm::detail::compute_vec4_sub	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4,T,Q>	file:
call	./glm/detail/type_vec4.inl	/^		GLM_FUNC_QUALIFIER GLM_CONSTEXPR static vec<4, T, Q> call(vec<4, T, Q> const& a, vec<4, T, Q> /;"	f	struct:glm::detail::compute_vec4_xor	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4,T,Q>	file:
call	./glm/detail/type_vec4.inl	/^		GLM_FUNC_QUALIFIER GLM_CONSTEXPR static vec<4, T, Q> call(vec<4, T, Q> const& v)$/;"	f	struct:glm::detail::compute_vec4_bitwise_not	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4,T,Q>	file:
call	./glm/detail/type_vec4_simd.inl	/^				call(vec<4, float, Q> const& a, vec<4, float, Q> const& b)$/;"	f	struct:glm::detail::compute_vec4_add	typeref:typename:vec<4,float,Q>	file:
call	./glm/detail/type_vec4_simd.inl	/^				call(vec<4, int, Q> const& a, vec<4, int, Q> const& b)$/;"	f	struct:glm::detail::compute_vec4_add	typeref:typename:vec<4,int,Q>	file:
call	./glm/detail/type_vec4_simd.inl	/^				call(vec<4, uint, Q> const& a, vec<4, uint, Q> const& b)$/;"	f	struct:glm::detail::compute_vec4_add	typeref:typename:vec<4,uint,Q>	file:
call	./glm/detail/type_vec4_simd.inl	/^			static bool call(vec<4, float, Q> const& v1, vec<4, float, Q> const& v2)$/;"	f	struct:glm::detail::compute_vec4_equal	typeref:typename:bool	file:
call	./glm/detail/type_vec4_simd.inl	/^			static bool call(vec<4, float, Q> const& v1, vec<4, float, Q> const& v2)$/;"	f	struct:glm::detail::compute_vec4_nequal	typeref:typename:bool	file:
call	./glm/detail/type_vec4_simd.inl	/^			static bool call(vec<4, int, Q> const& v1, vec<4, int, Q> const& v2)$/;"	f	struct:glm::detail::compute_vec4_equal	typeref:typename:bool	file:
call	./glm/detail/type_vec4_simd.inl	/^			static bool call(vec<4, int, Q> const& v1, vec<4, int, Q> const& v2)$/;"	f	struct:glm::detail::compute_vec4_nequal	typeref:typename:bool	file:
call	./glm/detail/type_vec4_simd.inl	/^			static bool call(vec<4, uint, Q> const& v1, vec<4, uint, Q> const& v2)$/;"	f	struct:glm::detail::compute_vec4_equal	typeref:typename:bool	file:
call	./glm/detail/type_vec4_simd.inl	/^			static bool call(vec<4, uint, Q> const& v1, vec<4, uint, Q> const& v2)$/;"	f	struct:glm::detail::compute_vec4_nequal	typeref:typename:bool	file:
call	./glm/detail/type_vec4_simd.inl	/^			static vec<4, T, Q> call(vec<4, T, Q> const& a, vec<4, T, Q> const& b)$/;"	f	struct:glm::detail::compute_vec4_and	typeref:typename:vec<4,T,Q>	file:
call	./glm/detail/type_vec4_simd.inl	/^			static vec<4, T, Q> call(vec<4, T, Q> const& a, vec<4, T, Q> const& b)$/;"	f	struct:glm::detail::compute_vec4_or	typeref:typename:vec<4,T,Q>	file:
call	./glm/detail/type_vec4_simd.inl	/^			static vec<4, T, Q> call(vec<4, T, Q> const& a, vec<4, T, Q> const& b)$/;"	f	struct:glm::detail::compute_vec4_shift_left	typeref:typename:vec<4,T,Q>	file:
call	./glm/detail/type_vec4_simd.inl	/^			static vec<4, T, Q> call(vec<4, T, Q> const& a, vec<4, T, Q> const& b)$/;"	f	struct:glm::detail::compute_vec4_shift_right	typeref:typename:vec<4,T,Q>	file:
call	./glm/detail/type_vec4_simd.inl	/^			static vec<4, T, Q> call(vec<4, T, Q> const& a, vec<4, T, Q> const& b)$/;"	f	struct:glm::detail::compute_vec4_xor	typeref:typename:vec<4,T,Q>	file:
call	./glm/detail/type_vec4_simd.inl	/^			static vec<4, T, Q> call(vec<4, T, Q> const& v)$/;"	f	struct:glm::detail::compute_vec4_bitwise_not	typeref:typename:vec<4,T,Q>	file:
call	./glm/detail/type_vec4_simd.inl	/^			static vec<4, double, Q> call(vec<4, double, Q> const& a, vec<4, double, Q> const& b)$/;"	f	struct:glm::detail::compute_vec4_add	typeref:typename:vec<4,double,Q>	file:
call	./glm/detail/type_vec4_simd.inl	/^			static vec<4, double, Q> call(vec<4, double, Q> const& a, vec<4, double, Q> const& b)$/;"	f	struct:glm::detail::compute_vec4_div	typeref:typename:vec<4,double,Q>	file:
call	./glm/detail/type_vec4_simd.inl	/^			static vec<4, double, Q> call(vec<4, double, Q> const& a, vec<4, double, Q> const& b)$/;"	f	struct:glm::detail::compute_vec4_mul	typeref:typename:vec<4,double,Q>	file:
call	./glm/detail/type_vec4_simd.inl	/^			static vec<4, double, Q> call(vec<4, double, Q> const& a, vec<4, double, Q> const& b)$/;"	f	struct:glm::detail::compute_vec4_sub	typeref:typename:vec<4,double,Q>	file:
call	./glm/detail/type_vec4_simd.inl	/^			static vec<4, float, Q> call(vec<4, float, Q> const& a, vec<4, float, Q> const& b)$/;"	f	struct:glm::detail::compute_vec4_add	typeref:typename:vec<4,float,Q>	file:
call	./glm/detail/type_vec4_simd.inl	/^			static vec<4, float, Q> call(vec<4, float, Q> const& a, vec<4, float, Q> const& b)$/;"	f	struct:glm::detail::compute_vec4_div	typeref:typename:vec<4,float,Q>	file:
call	./glm/detail/type_vec4_simd.inl	/^			static vec<4, float, Q> call(vec<4, float, Q> const& a, vec<4, float, Q> const& b)$/;"	f	struct:glm::detail::compute_vec4_mul	typeref:typename:vec<4,float,Q>	file:
call	./glm/detail/type_vec4_simd.inl	/^			static vec<4, float, Q> call(vec<4, float, Q> const& a, vec<4, float, Q> const& b)$/;"	f	struct:glm::detail::compute_vec4_sub	typeref:typename:vec<4,float,Q>	file:
call	./glm/detail/type_vec4_simd.inl	/^			static vec<4, float, aligned_lowp> call(vec<4, float, aligned_lowp> const& a, vec<4, float, a/;"	f	struct:glm::detail::compute_vec4_div	typeref:typename:vec<4,float,aligned_lowp>	file:
call	./glm/detail/type_vec4_simd.inl	/^			static vec<4, int, Q> call(vec<4, int, Q> const& a, vec<4, int, Q> const& b)$/;"	f	struct:glm::detail::compute_vec4_mul	typeref:typename:vec<4,int,Q>	file:
call	./glm/detail/type_vec4_simd.inl	/^			static vec<4, int, Q> call(vec<4, int, Q> const& a, vec<4, int, Q> const& b)$/;"	f	struct:glm::detail::compute_vec4_sub	typeref:typename:vec<4,int,Q>	file:
call	./glm/detail/type_vec4_simd.inl	/^			static vec<4, uint, Q> call(vec<4, uint, Q> const& a, vec<4, uint, Q> const& b)$/;"	f	struct:glm::detail::compute_vec4_mul	typeref:typename:vec<4,uint,Q>	file:
call	./glm/detail/type_vec4_simd.inl	/^			static vec<4, uint, Q> call(vec<4, uint, Q> const& a, vec<4, uint, Q> const& b)$/;"	f	struct:glm::detail::compute_vec4_sub	typeref:typename:vec<4,uint,Q>	file:
call	./glm/ext/_matrix_vectorize.hpp	/^			GLM_FUNC_QUALIFIER GLM_CONSTEXPR static mat<2, 2, T, Q> call(Ret (*Func)(T x), mat<2, 2, T, Q/;"	f	struct:glm::detail::matrix_functor_1	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<2,2,T,Q>
call	./glm/ext/_matrix_vectorize.hpp	/^			GLM_FUNC_QUALIFIER GLM_CONSTEXPR static mat<2, 3, T, Q> call(Ret (*Func)(T x), mat<2, 3, T, Q/;"	f	struct:glm::detail::matrix_functor_1	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<2,3,T,Q>
call	./glm/ext/_matrix_vectorize.hpp	/^			GLM_FUNC_QUALIFIER GLM_CONSTEXPR static mat<2, 4, T, Q> call(Ret (*Func)(T x), mat<2, 4, T, Q/;"	f	struct:glm::detail::matrix_functor_1	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<2,4,T,Q>
call	./glm/ext/_matrix_vectorize.hpp	/^			GLM_FUNC_QUALIFIER GLM_CONSTEXPR static mat<3, 2, T, Q> call(Ret (*Func)(T x), mat<3, 2, T, Q/;"	f	struct:glm::detail::matrix_functor_1	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<3,2,T,Q>
call	./glm/ext/_matrix_vectorize.hpp	/^			GLM_FUNC_QUALIFIER GLM_CONSTEXPR static mat<3, 3, T, Q> call(Ret (*Func)(T x), mat<3, 3, T, Q/;"	f	struct:glm::detail::matrix_functor_1	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<3,3,T,Q>
call	./glm/ext/_matrix_vectorize.hpp	/^			GLM_FUNC_QUALIFIER GLM_CONSTEXPR static mat<3, 4, T, Q> call(Ret (*Func)(T x), mat<3, 4, T, Q/;"	f	struct:glm::detail::matrix_functor_1	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<3,4,T,Q>
call	./glm/ext/_matrix_vectorize.hpp	/^			GLM_FUNC_QUALIFIER GLM_CONSTEXPR static mat<4, 2, T, Q> call(Ret (*Func)(T x), mat<4, 2, T, Q/;"	f	struct:glm::detail::matrix_functor_1	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<4,2,T,Q>
call	./glm/ext/_matrix_vectorize.hpp	/^			GLM_FUNC_QUALIFIER GLM_CONSTEXPR static mat<4, 3, T, Q> call(Ret (*Func)(T x), mat<4, 3, T, Q/;"	f	struct:glm::detail::matrix_functor_1	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<4,3,T,Q>
call	./glm/ext/_matrix_vectorize.hpp	/^			GLM_FUNC_QUALIFIER GLM_CONSTEXPR static mat<4, 4, T, Q> call(Ret (*Func)(T x), mat<4, 4, T, Q/;"	f	struct:glm::detail::matrix_functor_1	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<4,4,T,Q>
call	./glm/ext/matrix_common.inl	/^		GLM_FUNC_QUALIFIER GLM_CONSTEXPR static mat<C, R, T, Q> call(mat<C, R, T, Q> const& x)$/;"	f	struct:glm::compute_abs_matrix	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<C,R,T,Q>	file:
call	./glm/ext/matrix_integer.inl	/^		GLM_FUNC_QUALIFIER static T call(mat<C, R, T, Q> const& m)$/;"	f	struct:glm::detail::compute_determinant_type	typeref:typename:GLM_FUNC_QUALIFIER T	file:
call	./glm/ext/matrix_integer.inl	/^		GLM_FUNC_QUALIFIER static mat<C, R, T, Q> call(mat<C, R, T, Q> const& x, mat<C, R, T, Q> const/;"	f	struct:glm::detail::compute_matrixCompMult_type	typeref:typename:GLM_FUNC_QUALIFIER mat<C,R,T,Q>	file:
call	./glm/ext/matrix_integer.inl	/^		GLM_FUNC_QUALIFIER static mat<R, C, T, Q> call(mat<C, R, T, Q> const& m)$/;"	f	struct:glm::detail::compute_transpose_type	typeref:typename:GLM_FUNC_QUALIFIER mat<R,C,T,Q>	file:
call	./glm/ext/matrix_integer.inl	/^		GLM_FUNC_QUALIFIER static typename detail::outerProduct_trait<DA, DB, T, Q>::type call(vec<DA,/;"	f	struct:glm::detail::compute_outerProduct_type	typeref:typename:GLM_FUNC_QUALIFIER typename detail::outerProduct_trait<DA,DB,T,Q>::type	file:
call	./glm/ext/quaternion_common_simd.inl	/^		static GLM_FUNC_QUALIFIER float call(qua<float, Q> const& x, qua<float, Q> const& y)$/;"	f	struct:glm::detail::compute_dot	typeref:typename:GLM_FUNC_QUALIFIER float	file:
call	./glm/ext/scalar_integer.inl	/^		GLM_FUNC_QUALIFIER static genType call(genType Source, genType Multiple)$/;"	f	struct:glm::detail::compute_ceilMultiple	typeref:typename:GLM_FUNC_QUALIFIER genType	file:
call	./glm/ext/scalar_integer.inl	/^		GLM_FUNC_QUALIFIER static genType call(genType Source, genType Multiple)$/;"	f	struct:glm::detail::compute_floorMultiple	typeref:typename:GLM_FUNC_QUALIFIER genType	file:
call	./glm/ext/scalar_integer.inl	/^		GLM_FUNC_QUALIFIER static vec<L, T, Q> call(vec<L, T, Q> const& v, T Shift)$/;"	f	struct:glm::detail::compute_ceilShift	typeref:typename:GLM_FUNC_QUALIFIER vec<L,T,Q>	file:
call	./glm/ext/scalar_integer.inl	/^		GLM_FUNC_QUALIFIER static vec<L, T, Q> call(vec<L, T, Q> const& v, T)$/;"	f	struct:glm::detail::compute_ceilShift	typeref:typename:GLM_FUNC_QUALIFIER vec<L,T,Q>	file:
call	./glm/ext/scalar_integer.inl	/^		GLM_FUNC_QUALIFIER static vec<L, T, Q> call(vec<L, T, Q> const& x)$/;"	f	struct:glm::detail::compute_ceilPowerOfTwo	typeref:typename:GLM_FUNC_QUALIFIER vec<L,T,Q>	file:
call	./glm/gtc/color_space.inl	/^		GLM_FUNC_QUALIFIER static vec<4, T, Q> call(vec<4, T, Q> const& ColorRGB, T GammaCorrection)$/;"	f	struct:glm::detail::compute_rgbToSrgb	typeref:typename:GLM_FUNC_QUALIFIER vec<4,T,Q>	file:
call	./glm/gtc/color_space.inl	/^		GLM_FUNC_QUALIFIER static vec<4, T, Q> call(vec<4, T, Q> const& ColorSRGB, T Gamma)$/;"	f	struct:glm::detail::compute_srgbToRgb	typeref:typename:GLM_FUNC_QUALIFIER vec<4,T,Q>	file:
call	./glm/gtc/color_space.inl	/^		GLM_FUNC_QUALIFIER static vec<L, T, Q> call(vec<L, T, Q> const& ColorRGB, T GammaCorrection)$/;"	f	struct:glm::detail::compute_rgbToSrgb	typeref:typename:GLM_FUNC_QUALIFIER vec<L,T,Q>	file:
call	./glm/gtc/color_space.inl	/^		GLM_FUNC_QUALIFIER static vec<L, T, Q> call(vec<L, T, Q> const& ColorSRGB, T Gamma)$/;"	f	struct:glm::detail::compute_srgbToRgb	typeref:typename:GLM_FUNC_QUALIFIER vec<L,T,Q>	file:
call	./glm/gtc/integer.inl	/^			GLM_FUNC_QUALIFIER static vec<4, int, Q> call(vec<4, int, Q> const& v)$/;"	f	struct:glm::detail::compute_log2	typeref:typename:GLM_FUNC_QUALIFIER vec<4,int,Q>	file:
call	./glm/gtc/integer.inl	/^		GLM_FUNC_QUALIFIER static vec<L, T, Q> call(vec<L, T, Q> const& v)$/;"	f	struct:glm::detail::compute_log2	typeref:typename:GLM_FUNC_QUALIFIER vec<L,T,Q>	file:
call	./glm/gtc/random.inl	/^		GLM_FUNC_QUALIFIER static vec<1, uint8, P> call()$/;"	f	struct:glm::detail::compute_rand	typeref:typename:GLM_FUNC_QUALIFIER vec<1,uint8,P>	file:
call	./glm/gtc/random.inl	/^		GLM_FUNC_QUALIFIER static vec<2, uint8, P> call()$/;"	f	struct:glm::detail::compute_rand	typeref:typename:GLM_FUNC_QUALIFIER vec<2,uint8,P>	file:
call	./glm/gtc/random.inl	/^		GLM_FUNC_QUALIFIER static vec<3, uint8, P> call()$/;"	f	struct:glm::detail::compute_rand	typeref:typename:GLM_FUNC_QUALIFIER vec<3,uint8,P>	file:
call	./glm/gtc/random.inl	/^		GLM_FUNC_QUALIFIER static vec<4, uint8, P> call()$/;"	f	struct:glm::detail::compute_rand	typeref:typename:GLM_FUNC_QUALIFIER vec<4,uint8,P>	file:
call	./glm/gtc/random.inl	/^		GLM_FUNC_QUALIFIER static vec<L, double, Q> call(vec<L, double, Q> const& Min, vec<L, double, /;"	f	struct:glm::detail::compute_linearRand	typeref:typename:GLM_FUNC_QUALIFIER vec<L,double,Q>	file:
call	./glm/gtc/random.inl	/^		GLM_FUNC_QUALIFIER static vec<L, float, Q> call(vec<L, float, Q> const& Min, vec<L, float, Q> /;"	f	struct:glm::detail::compute_linearRand	typeref:typename:GLM_FUNC_QUALIFIER vec<L,float,Q>	file:
call	./glm/gtc/random.inl	/^		GLM_FUNC_QUALIFIER static vec<L, int16, Q> call(vec<L, int16, Q> const& Min, vec<L, int16, Q> /;"	f	struct:glm::detail::compute_linearRand	typeref:typename:GLM_FUNC_QUALIFIER vec<L,int16,Q>	file:
call	./glm/gtc/random.inl	/^		GLM_FUNC_QUALIFIER static vec<L, int32, Q> call(vec<L, int32, Q> const& Min, vec<L, int32, Q> /;"	f	struct:glm::detail::compute_linearRand	typeref:typename:GLM_FUNC_QUALIFIER vec<L,int32,Q>	file:
call	./glm/gtc/random.inl	/^		GLM_FUNC_QUALIFIER static vec<L, int64, Q> call(vec<L, int64, Q> const& Min, vec<L, int64, Q> /;"	f	struct:glm::detail::compute_linearRand	typeref:typename:GLM_FUNC_QUALIFIER vec<L,int64,Q>	file:
call	./glm/gtc/random.inl	/^		GLM_FUNC_QUALIFIER static vec<L, int8, Q> call(vec<L, int8, Q> const& Min, vec<L, int8, Q> con/;"	f	struct:glm::detail::compute_linearRand	typeref:typename:GLM_FUNC_QUALIFIER vec<L,int8,Q>	file:
call	./glm/gtc/random.inl	/^		GLM_FUNC_QUALIFIER static vec<L, long double, Q> call(vec<L, long double, Q> const& Min, vec<L/;"	f	struct:glm::detail::compute_linearRand	typeref:typename:GLM_FUNC_QUALIFIER vec<L,long double,Q>	file:
call	./glm/gtc/random.inl	/^		GLM_FUNC_QUALIFIER static vec<L, uint16, Q> call()$/;"	f	struct:glm::detail::compute_rand	typeref:typename:GLM_FUNC_QUALIFIER vec<L,uint16,Q>	file:
call	./glm/gtc/random.inl	/^		GLM_FUNC_QUALIFIER static vec<L, uint16, Q> call(vec<L, uint16, Q> const& Min, vec<L, uint16, /;"	f	struct:glm::detail::compute_linearRand	typeref:typename:GLM_FUNC_QUALIFIER vec<L,uint16,Q>	file:
call	./glm/gtc/random.inl	/^		GLM_FUNC_QUALIFIER static vec<L, uint32, Q> call()$/;"	f	struct:glm::detail::compute_rand	typeref:typename:GLM_FUNC_QUALIFIER vec<L,uint32,Q>	file:
call	./glm/gtc/random.inl	/^		GLM_FUNC_QUALIFIER static vec<L, uint32, Q> call(vec<L, uint32, Q> const& Min, vec<L, uint32, /;"	f	struct:glm::detail::compute_linearRand	typeref:typename:GLM_FUNC_QUALIFIER vec<L,uint32,Q>	file:
call	./glm/gtc/random.inl	/^		GLM_FUNC_QUALIFIER static vec<L, uint64, Q> call()$/;"	f	struct:glm::detail::compute_rand	typeref:typename:GLM_FUNC_QUALIFIER vec<L,uint64,Q>	file:
call	./glm/gtc/random.inl	/^		GLM_FUNC_QUALIFIER static vec<L, uint64, Q> call(vec<L, uint64, Q> const& Min, vec<L, uint64, /;"	f	struct:glm::detail::compute_linearRand	typeref:typename:GLM_FUNC_QUALIFIER vec<L,uint64,Q>	file:
call	./glm/gtc/random.inl	/^		GLM_FUNC_QUALIFIER static vec<L, uint8, Q> call(vec<L, uint8, Q> const& Min, vec<L, uint8, Q> /;"	f	struct:glm::detail::compute_linearRand	typeref:typename:GLM_FUNC_QUALIFIER vec<L,uint8,Q>	file:
call	./glm/gtc/round.inl	/^		GLM_FUNC_QUALIFIER static genType call(genType Source, genType Multiple)$/;"	f	struct:glm::detail::compute_roundMultiple	typeref:typename:GLM_FUNC_QUALIFIER genType	file:
call	./glm/gtx/common.inl	/^		GLM_FUNC_QUALIFIER static vec<L, T, Q> call(vec<L, T, Q> const& a, vec<L, T, Q> const& b)$/;"	f	struct:glm::detail::compute_fmod	typeref:typename:GLM_FUNC_QUALIFIER vec<L,T,Q>	file:
call	./glm/gtx/component_wise.inl	/^		GLM_FUNC_QUALIFIER static vec<L, T, Q> call(vec<L, floatType, Q> const& v)$/;"	f	struct:glm::detail::compute_compScale	typeref:typename:GLM_FUNC_QUALIFIER vec<L,T,Q>	file:
call	./glm/gtx/component_wise.inl	/^		GLM_FUNC_QUALIFIER static vec<L, floatType, Q> call(vec<L, T, Q> const& v)$/;"	f	struct:glm::detail::compute_compNormalize	typeref:typename:GLM_FUNC_QUALIFIER vec<L,floatType,Q>	file:
call	./glm/gtx/exterior_product.inl	/^		GLM_FUNC_QUALIFIER GLM_CONSTEXPR static T call(vec<2, T, Q> const& v, vec<2, T, Q> const& u)$/;"	f	struct:glm::detail::compute_cross_vec2	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR T	file:
call	./glm/gtx/norm.inl	/^		GLM_FUNC_QUALIFIER static T call(vec<L, T, Q> const& v)$/;"	f	struct:glm::detail::compute_length2	typeref:typename:GLM_FUNC_QUALIFIER T	file:
call	./glm/gtx/string_cast.inl	/^		GLM_FUNC_QUALIFIER static std::string call(mat<2, 2, T, Q> const& x)$/;"	f	struct:glm::detail::compute_to_string	typeref:typename:GLM_FUNC_QUALIFIER std::string	file:
call	./glm/gtx/string_cast.inl	/^		GLM_FUNC_QUALIFIER static std::string call(mat<2, 3, T, Q> const& x)$/;"	f	struct:glm::detail::compute_to_string	typeref:typename:GLM_FUNC_QUALIFIER std::string	file:
call	./glm/gtx/string_cast.inl	/^		GLM_FUNC_QUALIFIER static std::string call(mat<2, 4, T, Q> const& x)$/;"	f	struct:glm::detail::compute_to_string	typeref:typename:GLM_FUNC_QUALIFIER std::string	file:
call	./glm/gtx/string_cast.inl	/^		GLM_FUNC_QUALIFIER static std::string call(mat<3, 2, T, Q> const& x)$/;"	f	struct:glm::detail::compute_to_string	typeref:typename:GLM_FUNC_QUALIFIER std::string	file:
call	./glm/gtx/string_cast.inl	/^		GLM_FUNC_QUALIFIER static std::string call(mat<3, 3, T, Q> const& x)$/;"	f	struct:glm::detail::compute_to_string	typeref:typename:GLM_FUNC_QUALIFIER std::string	file:
call	./glm/gtx/string_cast.inl	/^		GLM_FUNC_QUALIFIER static std::string call(mat<3, 4, T, Q> const& x)$/;"	f	struct:glm::detail::compute_to_string	typeref:typename:GLM_FUNC_QUALIFIER std::string	file:
call	./glm/gtx/string_cast.inl	/^		GLM_FUNC_QUALIFIER static std::string call(mat<4, 2, T, Q> const& x)$/;"	f	struct:glm::detail::compute_to_string	typeref:typename:GLM_FUNC_QUALIFIER std::string	file:
call	./glm/gtx/string_cast.inl	/^		GLM_FUNC_QUALIFIER static std::string call(mat<4, 3, T, Q> const& x)$/;"	f	struct:glm::detail::compute_to_string	typeref:typename:GLM_FUNC_QUALIFIER std::string	file:
call	./glm/gtx/string_cast.inl	/^		GLM_FUNC_QUALIFIER static std::string call(mat<4, 4, T, Q> const& x)$/;"	f	struct:glm::detail::compute_to_string	typeref:typename:GLM_FUNC_QUALIFIER std::string	file:
call	./glm/gtx/string_cast.inl	/^		GLM_FUNC_QUALIFIER static std::string call(qua<T, Q> const& q)$/;"	f	struct:glm::detail::compute_to_string	typeref:typename:GLM_FUNC_QUALIFIER std::string	file:
call	./glm/gtx/string_cast.inl	/^		GLM_FUNC_QUALIFIER static std::string call(tdualquat<T, Q> const& x)$/;"	f	struct:glm::detail::compute_to_string	typeref:typename:GLM_FUNC_QUALIFIER std::string	file:
call	./glm/gtx/string_cast.inl	/^		GLM_FUNC_QUALIFIER static std::string call(vec<1, T, Q> const& x)$/;"	f	struct:glm::detail::compute_to_string	typeref:typename:GLM_FUNC_QUALIFIER std::string	file:
call	./glm/gtx/string_cast.inl	/^		GLM_FUNC_QUALIFIER static std::string call(vec<1, bool, Q> const& x)$/;"	f	struct:glm::detail::compute_to_string	typeref:typename:GLM_FUNC_QUALIFIER std::string	file:
call	./glm/gtx/string_cast.inl	/^		GLM_FUNC_QUALIFIER static std::string call(vec<2, T, Q> const& x)$/;"	f	struct:glm::detail::compute_to_string	typeref:typename:GLM_FUNC_QUALIFIER std::string	file:
call	./glm/gtx/string_cast.inl	/^		GLM_FUNC_QUALIFIER static std::string call(vec<2, bool, Q> const& x)$/;"	f	struct:glm::detail::compute_to_string	typeref:typename:GLM_FUNC_QUALIFIER std::string	file:
call	./glm/gtx/string_cast.inl	/^		GLM_FUNC_QUALIFIER static std::string call(vec<3, T, Q> const& x)$/;"	f	struct:glm::detail::compute_to_string	typeref:typename:GLM_FUNC_QUALIFIER std::string	file:
call	./glm/gtx/string_cast.inl	/^		GLM_FUNC_QUALIFIER static std::string call(vec<3, bool, Q> const& x)$/;"	f	struct:glm::detail::compute_to_string	typeref:typename:GLM_FUNC_QUALIFIER std::string	file:
call	./glm/gtx/string_cast.inl	/^		GLM_FUNC_QUALIFIER static std::string call(vec<4, T, Q> const& x)$/;"	f	struct:glm::detail::compute_to_string	typeref:typename:GLM_FUNC_QUALIFIER std::string	file:
call	./glm/gtx/string_cast.inl	/^		GLM_FUNC_QUALIFIER static std::string call(vec<4, bool, Q> const& x)$/;"	f	struct:glm::detail::compute_to_string	typeref:typename:GLM_FUNC_QUALIFIER std::string	file:
call	./glm/gtx/vector_query.inl	/^		GLM_FUNC_QUALIFIER static bool call(vec<2, T, Q> const& v0, vec<2, T, Q> const& v1, T const& e/;"	f	struct:glm::detail::compute_areCollinear	typeref:typename:GLM_FUNC_QUALIFIER bool	file:
call	./glm/gtx/vector_query.inl	/^		GLM_FUNC_QUALIFIER static bool call(vec<3, T, Q> const& v0, vec<3, T, Q> const& v1, T const& e/;"	f	struct:glm::detail::compute_areCollinear	typeref:typename:GLM_FUNC_QUALIFIER bool	file:
call	./glm/gtx/vector_query.inl	/^		GLM_FUNC_QUALIFIER static bool call(vec<4, T, Q> const& v0, vec<4, T, Q> const& v1, T const& e/;"	f	struct:glm::detail::compute_areCollinear	typeref:typename:GLM_FUNC_QUALIFIER bool	file:
call	./glm/gtx/vector_query.inl	/^		GLM_FUNC_QUALIFIER static vec<2, bool, Q> call(vec<2, T, Q> const& v, T const& epsilon)$/;"	f	struct:glm::detail::compute_isCompNull	typeref:typename:GLM_FUNC_QUALIFIER vec<2,bool,Q>	file:
call	./glm/gtx/vector_query.inl	/^		GLM_FUNC_QUALIFIER static vec<3, bool, Q> call(vec<3, T, Q> const& v, T const& epsilon)$/;"	f	struct:glm::detail::compute_isCompNull	typeref:typename:GLM_FUNC_QUALIFIER vec<3,bool,Q>	file:
call	./glm/gtx/vector_query.inl	/^		GLM_FUNC_QUALIFIER static vec<4, bool, Q> call(vec<4, T, Q> const& v, T const& epsilon)$/;"	f	struct:glm::detail::compute_isCompNull	typeref:typename:GLM_FUNC_QUALIFIER vec<4,bool,Q>	file:
cast	./glm/gtx/string_cast.inl	/^	struct cast$/;"	s	namespace:glm::detail	file:
cast	./glm/gtx/string_cast.inl	/^	struct cast<float>$/;"	s	namespace:glm::detail	file:
catmullRom	./glm/gtx/spline.inl	/^	GLM_FUNC_QUALIFIER genType catmullRom$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genType
cb	./GL/wglew.h	/^  DWORD cb; $/;"	m	struct:_GPU_DEVICE	typeref:typename:DWORD
ceil	./glm/detail/func_common.inl	/^	GLM_FUNC_QUALIFIER vec<L, T, Q> ceil(vec<L, T, Q> const& x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<L,T,Q>
ceilMultiple	./glm/gtc/round.inl	/^	GLM_FUNC_QUALIFIER genType ceilMultiple(genType Source, genType Multiple)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genType
ceilMultiple	./glm/gtc/round.inl	/^	GLM_FUNC_QUALIFIER vec<L, T, Q> ceilMultiple(vec<L, T, Q> const& Source, vec<L, T, Q> const& Mu/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<L,T,Q>
ceilPowerOfTwo	./glm/gtc/round.inl	/^	GLM_FUNC_QUALIFIER genType ceilPowerOfTwo(genType value)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genType
ceilPowerOfTwo	./glm/gtc/round.inl	/^	GLM_FUNC_QUALIFIER vec<L, T, Q> ceilPowerOfTwo(vec<L, T, Q> const& v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<L,T,Q>
channel	./GL/glxew.h	/^  int channel; $/;"	m	struct:__anonb1a929810408	typeref:typename:int
char_type	./glm/gtx/io.hpp	/^			typedef CTy char_type;$/;"	t	class:glm::io::format_punct	typeref:typename:CTy
char_type	./glm/gtx/io.hpp	/^			typedef typename state_type::char_type char_type;$/;"	t	class:glm::io::basic_state_saver	typeref:typename:state_type::char_type
circularEaseIn	./glm/gtx/easing.inl	/^	GLM_FUNC_QUALIFIER genType circularEaseIn(genType const& a)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genType
circularEaseInOut	./glm/gtx/easing.inl	/^	GLM_FUNC_QUALIFIER genType circularEaseInOut(genType const& a)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genType
circularEaseOut	./glm/gtx/easing.inl	/^	GLM_FUNC_QUALIFIER genType circularEaseOut(genType const& a)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genType
circularRand	./glm/gtc/random.inl	/^	GLM_FUNC_QUALIFIER vec<2, T, defaultp> circularRand(T Radius)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<2,T,defaultp>
cl_context	./GL/glew.h	/^typedef struct _cl_context *cl_context;$/;"	t	typeref:struct:_cl_context *
cl_event	./GL/glew.h	/^typedef struct _cl_event *cl_event;$/;"	t	typeref:struct:_cl_event *
clamp	./glm/detail/func_common.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR genType clamp(genType x, genType minVal, genType maxVal)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR genType
clamp	./glm/detail/func_common.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<L, T, Q> clamp(vec<L, T, Q> const& x, T minVal, T maxVal)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<L,T,Q>
clamp	./glm/detail/func_common.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<L, T, Q> clamp(vec<L, T, Q> const& x, vec<L, T, Q> const& /;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<L,T,Q>
clamp	./glm/ext/scalar_common.inl	/^	GLM_FUNC_QUALIFIER genType clamp(genType const& Texcoord)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genType
clamp	./glm/ext/vector_common.inl	/^	GLM_FUNC_QUALIFIER vec<L, T, Q> clamp(vec<L, T, Q> const& Texcoord)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<L,T,Q>
closeBounded	./glm/gtx/common.inl	/^	GLM_FUNC_QUALIFIER vec<L, bool, Q> closeBounded(vec<L, T, Q> const& Value, vec<L, T, Q> const& /;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<L,bool,Q>
closestPointOnLine	./glm/gtx/closest_point.inl	/^	GLM_FUNC_QUALIFIER vec<2, T, Q> closestPointOnLine$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<2,T,Q>
closestPointOnLine	./glm/gtx/closest_point.inl	/^	GLM_FUNC_QUALIFIER vec<3, T, Q> closestPointOnLine$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<3,T,Q>
colMajor2	./glm/gtx/matrix_major_storage.inl	/^	GLM_FUNC_QUALIFIER mat<2, 2, T, Q> colMajor2($/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER mat<2,2,T,Q>
colMajor3	./glm/gtx/matrix_major_storage.inl	/^	GLM_FUNC_QUALIFIER mat<3, 3, T, Q> colMajor3($/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER mat<3,3,T,Q>
colMajor4	./glm/gtx/matrix_major_storage.inl	/^	GLM_FUNC_QUALIFIER mat<4, 4, T, Q> colMajor4($/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER mat<4,4,T,Q>
col_type	./glm/detail/type_mat2x2.hpp	/^		typedef vec<2, T, Q> col_type;$/;"	t	struct:glm::mat	typeref:typename:vec<2,T,Q>
col_type	./glm/detail/type_mat2x3.hpp	/^		typedef vec<3, T, Q> col_type;$/;"	t	struct:glm::mat	typeref:typename:vec<3,T,Q>
col_type	./glm/detail/type_mat2x4.hpp	/^		typedef vec<4, T, Q> col_type;$/;"	t	struct:glm::mat	typeref:typename:vec<4,T,Q>
col_type	./glm/detail/type_mat3x2.hpp	/^		typedef vec<2, T, Q> col_type;$/;"	t	struct:glm::mat	typeref:typename:vec<2,T,Q>
col_type	./glm/detail/type_mat3x3.hpp	/^		typedef vec<3, T, Q> col_type;$/;"	t	struct:glm::mat	typeref:typename:vec<3,T,Q>
col_type	./glm/detail/type_mat3x4.hpp	/^		typedef vec<4, T, Q> col_type;$/;"	t	struct:glm::mat	typeref:typename:vec<4,T,Q>
col_type	./glm/detail/type_mat4x2.hpp	/^		typedef vec<2, T, Q> col_type;$/;"	t	struct:glm::mat	typeref:typename:vec<2,T,Q>
col_type	./glm/detail/type_mat4x3.hpp	/^		typedef vec<3, T, Q> col_type;$/;"	t	struct:glm::mat	typeref:typename:vec<3,T,Q>
col_type	./glm/detail/type_mat4x4.hpp	/^		typedef vec<4, T, Q> col_type;$/;"	t	struct:glm::mat	typeref:typename:vec<4,T,Q>
colorData	main.cpp	/^const GLfloat colorData[] = {$/;"	v	typeref:typename:const GLfloat[]
cols	./glm/gtx/type_trait.hpp	/^		static length_t const cols = 0;$/;"	m	struct:glm::type	typeref:typename:length_t const
cols	./glm/gtx/type_trait.hpp	/^		static length_t const cols = C;$/;"	m	struct:glm::type	typeref:typename:length_t const
cols	./glm/gtx/type_trait.inl	/^	length_t const type<T>::cols;$/;"	m	class:glm::type<T>	typeref:typename:length_t const
cols	./glm/gtx/type_trait.inl	/^	length_t const type<mat<C, R, T, Q> >::cols;$/;"	m	class:glm::type<mat<C, R, T, Q> >	typeref:typename:length_t const
column	./glm/gtc/matrix_access.inl	/^	GLM_FUNC_QUALIFIER genType column$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genType
column	./glm/gtc/matrix_access.inl	/^	GLM_FUNC_QUALIFIER typename genType::col_type column$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER typename genType::col_type
column_major	./glm/gtx/io.hpp	/^		enum order_type { column_major, row_major};$/;"	e	enum:glm::io::order_type
combine	./glm/gtx/matrix_decompose.inl	/^	GLM_FUNC_QUALIFIER vec<3, T, Q> combine($/;"	f	namespace:glm::detail	typeref:typename:GLM_FUNC_QUALIFIER vec<3,T,Q>
compAdd	./glm/gtx/component_wise.inl	/^	GLM_FUNC_QUALIFIER T compAdd(vec<L, T, Q> const& v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER T
compMax	./glm/gtx/component_wise.inl	/^	GLM_FUNC_QUALIFIER T compMax(vec<L, T, Q> const& v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER T
compMin	./glm/gtx/component_wise.inl	/^	GLM_FUNC_QUALIFIER T compMin(vec<L, T, Q> const& v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER T
compMul	./glm/gtx/component_wise.inl	/^	GLM_FUNC_QUALIFIER T compMul(vec<L, T, Q> const& v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER T
compNormalize	./glm/gtx/component_wise.inl	/^	GLM_FUNC_QUALIFIER vec<L, floatType, Q> compNormalize(vec<L, T, Q> const& v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<L,floatType,Q>
compScale	./glm/gtx/component_wise.inl	/^	GLM_FUNC_QUALIFIER vec<L, T, Q> compScale(vec<L, floatType, Q> const& v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<L,T,Q>
components	./glm/gtx/range.hpp	/^	inline length_t components(genType const& m)$/;"	f	namespace:glm	typeref:typename:length_t
components	./glm/gtx/range.hpp	/^	inline length_t components(vec<1, T, Q> const& v)$/;"	f	namespace:glm	typeref:typename:length_t
components	./glm/gtx/range.hpp	/^	inline length_t components(vec<2, T, Q> const& v)$/;"	f	namespace:glm	typeref:typename:length_t
components	./glm/gtx/range.hpp	/^	inline length_t components(vec<3, T, Q> const& v)$/;"	f	namespace:glm	typeref:typename:length_t
components	./glm/gtx/range.hpp	/^	inline length_t components(vec<4, T, Q> const& v)$/;"	f	namespace:glm	typeref:typename:length_t
components	./glm/gtx/type_trait.hpp	/^		static length_t const components = 0;$/;"	m	struct:glm::type	typeref:typename:length_t const
components	./glm/gtx/type_trait.hpp	/^		static length_t const components = 4;$/;"	m	struct:glm::type	typeref:typename:length_t const
components	./glm/gtx/type_trait.hpp	/^		static length_t const components = 8;$/;"	m	struct:glm::type	typeref:typename:length_t const
components	./glm/gtx/type_trait.hpp	/^		static length_t const components = C;$/;"	m	struct:glm::type	typeref:typename:length_t const
components	./glm/gtx/type_trait.hpp	/^		static length_t const components = L;$/;"	m	struct:glm::type	typeref:typename:length_t const
components	./glm/gtx/type_trait.inl	/^	length_t const type<T>::components;$/;"	m	class:glm::type<T>	typeref:typename:length_t const
components	./glm/gtx/type_trait.inl	/^	length_t const type<mat<C, R, T, Q> >::components;$/;"	m	class:glm::type<mat<C, R, T, Q> >	typeref:typename:length_t const
components	./glm/gtx/type_trait.inl	/^	length_t const type<qua<T, Q> >::components;$/;"	m	class:glm::type<qua<T, Q> >	typeref:typename:length_t const
components	./glm/gtx/type_trait.inl	/^	length_t const type<tdualquat<T, Q> >::components;$/;"	m	class:glm::type<tdualquat<T, Q> >	typeref:typename:length_t const
components	./glm/gtx/type_trait.inl	/^	length_t const type<vec<L, T, Q> >::components;$/;"	m	class:glm::type<vec<L, T, Q> >	typeref:typename:length_t const
computeCovarianceMatrix	./glm/gtx/pca.inl	/^	GLM_FUNC_QUALIFIER mat<D, D, T, Q> computeCovarianceMatrix(I const& b, I const& e)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER mat<D,D,T,Q>
computeCovarianceMatrix	./glm/gtx/pca.inl	/^	GLM_FUNC_QUALIFIER mat<D, D, T, Q> computeCovarianceMatrix(I const& b, I const& e, vec<D, T, Q>/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER mat<D,D,T,Q>
computeCovarianceMatrix	./glm/gtx/pca.inl	/^	GLM_FUNC_QUALIFIER mat<D, D, T, Q> computeCovarianceMatrix(vec<D, T, Q> const* v, size_t n)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER mat<D,D,T,Q>
computeCovarianceMatrix	./glm/gtx/pca.inl	/^	GLM_FUNC_QUALIFIER mat<D, D, T, Q> computeCovarianceMatrix(vec<D, T, Q> const* v, size_t n, vec/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER mat<D,D,T,Q>
compute_YCoCgR	./glm/gtx/color_space_YCoCg.inl	/^	class compute_YCoCgR {$/;"	c	namespace:glm	file:
compute_YCoCgR	./glm/gtx/color_space_YCoCg.inl	/^	class compute_YCoCgR<T, Q, true> {$/;"	c	namespace:glm	file:
compute_abs	./glm/detail/compute_common.hpp	/^	struct compute_abs$/;"	s	namespace:glm::detail
compute_abs	./glm/detail/compute_common.hpp	/^	struct compute_abs<float, true>$/;"	s	namespace:glm::detail
compute_abs	./glm/detail/compute_common.hpp	/^	struct compute_abs<genFIType, false>$/;"	s	namespace:glm::detail
compute_abs	./glm/detail/compute_common.hpp	/^	struct compute_abs<genFIType, true>$/;"	s	namespace:glm::detail
compute_abs_matrix	./glm/ext/matrix_common.inl	/^	struct compute_abs_matrix$/;"	s	namespace:glm	file:
compute_abs_vector	./glm/detail/func_common.inl	/^	struct compute_abs_vector$/;"	s	namespace:glm::detail	file:
compute_abs_vector	./glm/detail/func_common_simd.inl	/^	struct compute_abs_vector<4, float, Q, true>$/;"	s	namespace:glm::detail	file:
compute_abs_vector	./glm/detail/func_common_simd.inl	/^	struct compute_abs_vector<4, int, Q, true>$/;"	s	namespace:glm::detail	file:
compute_areCollinear	./glm/gtx/vector_query.inl	/^	struct compute_areCollinear<2, T, Q>$/;"	s	namespace:glm::detail	file:
compute_areCollinear	./glm/gtx/vector_query.inl	/^	struct compute_areCollinear<3, T, Q>$/;"	s	namespace:glm::detail	file:
compute_areCollinear	./glm/gtx/vector_query.inl	/^	struct compute_areCollinear<4, T, Q>$/;"	s	namespace:glm::detail	file:
compute_areCollinear	./glm/gtx/vector_query.inl	/^	struct compute_areCollinear{};$/;"	s	namespace:glm::detail	file:
compute_bitfieldBitCountStep	./glm/detail/func_integer.inl	/^	struct compute_bitfieldBitCountStep$/;"	s	namespace:glm::detail	file:
compute_bitfieldBitCountStep	./glm/detail/func_integer.inl	/^	struct compute_bitfieldBitCountStep<L, T, Q, Aligned, true>$/;"	s	namespace:glm::detail	file:
compute_bitfieldBitCountStep	./glm/detail/func_integer_simd.inl	/^	struct compute_bitfieldBitCountStep<4, uint, Q, true, true>$/;"	s	namespace:glm::detail	file:
compute_bitfieldReverseStep	./glm/detail/func_integer.inl	/^	struct compute_bitfieldReverseStep$/;"	s	namespace:glm::detail	file:
compute_bitfieldReverseStep	./glm/detail/func_integer.inl	/^	struct compute_bitfieldReverseStep<L, T, Q, Aligned, true>$/;"	s	namespace:glm::detail	file:
compute_bitfieldReverseStep	./glm/detail/func_integer_simd.inl	/^	struct compute_bitfieldReverseStep<4, uint, Q, true, true>$/;"	s	namespace:glm::detail	file:
compute_ceil	./glm/detail/func_common.inl	/^	struct compute_ceil$/;"	s	namespace:glm::detail	file:
compute_ceil	./glm/detail/func_common_simd.inl	/^	struct compute_ceil<4, float, Q, true>$/;"	s	namespace:glm::detail	file:
compute_ceilMultiple	./glm/ext/scalar_integer.inl	/^	struct compute_ceilMultiple<false, false>$/;"	s	namespace:glm::detail	file:
compute_ceilMultiple	./glm/ext/scalar_integer.inl	/^	struct compute_ceilMultiple<false, true>$/;"	s	namespace:glm::detail	file:
compute_ceilMultiple	./glm/ext/scalar_integer.inl	/^	struct compute_ceilMultiple<true, true>$/;"	s	namespace:glm::detail	file:
compute_ceilMultiple	./glm/ext/scalar_integer.inl	/^	struct compute_ceilMultiple{};$/;"	s	namespace:glm::detail	file:
compute_ceilPowerOfTwo	./glm/ext/scalar_integer.inl	/^	struct compute_ceilPowerOfTwo$/;"	s	namespace:glm::detail	file:
compute_ceilPowerOfTwo	./glm/ext/scalar_integer.inl	/^	struct compute_ceilPowerOfTwo<L, T, Q, false>$/;"	s	namespace:glm::detail	file:
compute_ceilShift	./glm/ext/scalar_integer.inl	/^	struct compute_ceilShift$/;"	s	namespace:glm::detail	file:
compute_ceilShift	./glm/ext/scalar_integer.inl	/^	struct compute_ceilShift<L, T, Q, true>$/;"	s	namespace:glm::detail	file:
compute_clamp_vector	./glm/detail/func_common.inl	/^	struct compute_clamp_vector$/;"	s	namespace:glm::detail	file:
compute_clamp_vector	./glm/detail/func_common_simd.inl	/^	struct compute_clamp_vector<4, float, Q, true>$/;"	s	namespace:glm::detail	file:
compute_clamp_vector	./glm/detail/func_common_simd.inl	/^	struct compute_clamp_vector<4, int, Q, true>$/;"	s	namespace:glm::detail	file:
compute_clamp_vector	./glm/detail/func_common_simd.inl	/^	struct compute_clamp_vector<4, uint, Q, true>$/;"	s	namespace:glm::detail	file:
compute_compNormalize	./glm/gtx/component_wise.inl	/^	struct compute_compNormalize$/;"	s	namespace:glm::detail	file:
compute_compNormalize	./glm/gtx/component_wise.inl	/^	struct compute_compNormalize<L, T, floatType, Q, false, true>$/;"	s	namespace:glm::detail	file:
compute_compNormalize	./glm/gtx/component_wise.inl	/^	struct compute_compNormalize<L, T, floatType, Q, true, false>$/;"	s	namespace:glm::detail	file:
compute_compNormalize	./glm/gtx/component_wise.inl	/^	struct compute_compNormalize<L, T, floatType, Q, true, true>$/;"	s	namespace:glm::detail	file:
compute_compScale	./glm/gtx/component_wise.inl	/^	struct compute_compScale$/;"	s	namespace:glm::detail	file:
compute_compScale	./glm/gtx/component_wise.inl	/^	struct compute_compScale<L, T, floatType, Q, false, true>$/;"	s	namespace:glm::detail	file:
compute_compScale	./glm/gtx/component_wise.inl	/^	struct compute_compScale<L, T, floatType, Q, true, false>$/;"	s	namespace:glm::detail	file:
compute_compScale	./glm/gtx/component_wise.inl	/^	struct compute_compScale<L, T, floatType, Q, true, true>$/;"	s	namespace:glm::detail	file:
compute_cross	./glm/detail/func_geometric.inl	/^	struct compute_cross$/;"	s	namespace:glm::detail	file:
compute_cross	./glm/detail/func_geometric_simd.inl	/^	struct compute_cross<float, Q, true>$/;"	s	namespace:glm::detail	file:
compute_cross_vec2	./glm/gtx/exterior_product.inl	/^	struct compute_cross_vec2$/;"	s	namespace:glm::detail	file:
compute_determinant	./glm/detail/func_matrix.inl	/^	struct compute_determinant<2, 2, T, Q, Aligned>$/;"	s	namespace:glm::detail	file:
compute_determinant	./glm/detail/func_matrix.inl	/^	struct compute_determinant<3, 3, T, Q, Aligned>$/;"	s	namespace:glm::detail	file:
compute_determinant	./glm/detail/func_matrix.inl	/^	struct compute_determinant<4, 4, T, Q, Aligned>$/;"	s	namespace:glm::detail	file:
compute_determinant	./glm/detail/func_matrix.inl	/^	struct compute_determinant{};$/;"	s	namespace:glm::detail	file:
compute_determinant	./glm/detail/func_matrix_simd.inl	/^	struct compute_determinant<4, 4, float, Q, true>$/;"	s	namespace:glm::detail	file:
compute_determinant_type	./glm/detail/func_matrix.inl	/^	struct compute_determinant_type{$/;"	s	namespace:glm::detail	file:
compute_determinant_type	./glm/ext/matrix_integer.inl	/^	struct compute_determinant_type<C, R, T, Q, false, Aligned>{$/;"	s	namespace:glm::detail	file:
compute_distance	./glm/detail/func_geometric.inl	/^	struct compute_distance$/;"	s	namespace:glm::detail	file:
compute_distance	./glm/detail/func_geometric_simd.inl	/^	struct compute_distance<4, float, Q, true>$/;"	s	namespace:glm::detail	file:
compute_dot	./glm/detail/func_geometric.inl	/^	struct compute_dot<vec<1, T, Q>, T, Aligned>$/;"	s	namespace:glm::detail	file:
compute_dot	./glm/detail/func_geometric.inl	/^	struct compute_dot<vec<2, T, Q>, T, Aligned>$/;"	s	namespace:glm::detail	file:
compute_dot	./glm/detail/func_geometric.inl	/^	struct compute_dot<vec<3, T, Q>, T, Aligned>$/;"	s	namespace:glm::detail	file:
compute_dot	./glm/detail/func_geometric.inl	/^	struct compute_dot<vec<4, T, Q>, T, Aligned>$/;"	s	namespace:glm::detail	file:
compute_dot	./glm/detail/func_geometric.inl	/^	struct compute_dot{};$/;"	s	namespace:glm::detail	file:
compute_dot	./glm/detail/func_geometric_simd.inl	/^	struct compute_dot<vec<4, float, Q>, float, true>$/;"	s	namespace:glm::detail	file:
compute_dot	./glm/detail/type_quat.inl	/^	struct compute_dot<qua<T, Q>, T, Aligned>$/;"	s	namespace:glm::detail	file:
compute_dot	./glm/ext/quaternion_common_simd.inl	/^	struct compute_dot<qua<float, Q>, float, true>$/;"	s	namespace:glm::detail	file:
compute_equal	./glm/detail/compute_vector_relational.hpp	/^	struct compute_equal$/;"	s	namespace:glm::detail
compute_faceforward	./glm/detail/func_geometric.inl	/^	struct compute_faceforward$/;"	s	namespace:glm::detail	file:
compute_faceforward	./glm/detail/func_geometric_simd.inl	/^	struct compute_faceforward<4, float, Q, true>$/;"	s	namespace:glm::detail	file:
compute_findLSB	./glm/detail/func_integer.inl	/^		struct compute_findLSB<genIUType, 32>$/;"	s	namespace:glm::detail	file:
compute_findLSB	./glm/detail/func_integer.inl	/^		struct compute_findLSB<genIUType, 64>$/;"	s	namespace:glm::detail	file:
compute_findLSB	./glm/detail/func_integer.inl	/^	struct compute_findLSB$/;"	s	namespace:glm::detail	file:
compute_findMSB_32	./glm/detail/func_integer.inl	/^		GLM_FUNC_QUALIFIER int compute_findMSB_32(genIUType Value)$/;"	f	namespace:glm::detail	typeref:typename:GLM_FUNC_QUALIFIER int
compute_findMSB_64	./glm/detail/func_integer.inl	/^		GLM_FUNC_QUALIFIER int compute_findMSB_64(genIUType Value)$/;"	f	namespace:glm::detail	typeref:typename:GLM_FUNC_QUALIFIER int
compute_findMSB_step_vec	./glm/detail/func_integer.inl	/^	struct compute_findMSB_step_vec$/;"	s	namespace:glm::detail	file:
compute_findMSB_step_vec	./glm/detail/func_integer.inl	/^	struct compute_findMSB_step_vec<L, T, Q, false>$/;"	s	namespace:glm::detail	file:
compute_findMSB_vec	./glm/detail/func_integer.inl	/^		struct compute_findMSB_vec<L, T, Q, 32>$/;"	s	namespace:glm::detail	file:
compute_findMSB_vec	./glm/detail/func_integer.inl	/^		struct compute_findMSB_vec<L, T, Q, 64>$/;"	s	namespace:glm::detail	file:
compute_findMSB_vec	./glm/detail/func_integer.inl	/^	struct compute_findMSB_vec$/;"	s	namespace:glm::detail	file:
compute_floor	./glm/detail/func_common.inl	/^	struct compute_floor$/;"	s	namespace:glm::detail	file:
compute_floor	./glm/detail/func_common_simd.inl	/^	struct compute_floor<4, float, Q, true>$/;"	s	namespace:glm::detail	file:
compute_floorMultiple	./glm/ext/scalar_integer.inl	/^	struct compute_floorMultiple<false, false>$/;"	s	namespace:glm::detail	file:
compute_floorMultiple	./glm/ext/scalar_integer.inl	/^	struct compute_floorMultiple<false, true>$/;"	s	namespace:glm::detail	file:
compute_floorMultiple	./glm/ext/scalar_integer.inl	/^	struct compute_floorMultiple<true, true>$/;"	s	namespace:glm::detail	file:
compute_floorMultiple	./glm/ext/scalar_integer.inl	/^	struct compute_floorMultiple{};$/;"	s	namespace:glm::detail	file:
compute_fmod	./glm/gtx/common.inl	/^	struct compute_fmod$/;"	s	namespace:glm::detail	file:
compute_fmod	./glm/gtx/common.inl	/^	struct compute_fmod<L, T, Q, false>$/;"	s	namespace:glm::detail	file:
compute_fract	./glm/detail/func_common.inl	/^	struct compute_fract$/;"	s	namespace:glm::detail	file:
compute_fract	./glm/detail/func_common_simd.inl	/^	struct compute_fract<4, float, Q, true>$/;"	s	namespace:glm::detail	file:
compute_half	./glm/gtc/packing.inl	/^	struct compute_half$/;"	s	namespace:glm::detail	file:
compute_half	./glm/gtc/packing.inl	/^	struct compute_half<1, Q>$/;"	s	namespace:glm::detail	file:
compute_half	./glm/gtc/packing.inl	/^	struct compute_half<2, Q>$/;"	s	namespace:glm::detail	file:
compute_half	./glm/gtc/packing.inl	/^	struct compute_half<3, Q>$/;"	s	namespace:glm::detail	file:
compute_half	./glm/gtc/packing.inl	/^	struct compute_half<4, Q>$/;"	s	namespace:glm::detail	file:
compute_inverse	./glm/detail/func_matrix.inl	/^	struct compute_inverse<2, 2, T, Q, Aligned>$/;"	s	namespace:glm::detail	file:
compute_inverse	./glm/detail/func_matrix.inl	/^	struct compute_inverse<3, 3, T, Q, Aligned>$/;"	s	namespace:glm::detail	file:
compute_inverse	./glm/detail/func_matrix.inl	/^	struct compute_inverse<4, 4, T, Q, Aligned>$/;"	s	namespace:glm::detail	file:
compute_inverse	./glm/detail/func_matrix.inl	/^	struct compute_inverse{};$/;"	s	namespace:glm::detail	file:
compute_inverse	./glm/detail/func_matrix_simd.inl	/^	struct compute_inverse<4, 4, float, Q, true>$/;"	s	namespace:glm::detail	file:
compute_inversesqrt	./glm/detail/func_exponential.inl	/^	struct compute_inversesqrt$/;"	s	namespace:glm::detail	file:
compute_inversesqrt	./glm/detail/func_exponential.inl	/^	struct compute_inversesqrt<L, float, lowp, Aligned>$/;"	s	namespace:glm::detail	file:
compute_isCompNull	./glm/gtx/vector_query.inl	/^	struct compute_isCompNull<2, T, Q>$/;"	s	namespace:glm::detail	file:
compute_isCompNull	./glm/gtx/vector_query.inl	/^	struct compute_isCompNull<3, T, Q>$/;"	s	namespace:glm::detail	file:
compute_isCompNull	./glm/gtx/vector_query.inl	/^	struct compute_isCompNull<4, T, Q>$/;"	s	namespace:glm::detail	file:
compute_isCompNull	./glm/gtx/vector_query.inl	/^	struct compute_isCompNull{};$/;"	s	namespace:glm::detail	file:
compute_length	./glm/detail/func_geometric.inl	/^	struct compute_length$/;"	s	namespace:glm::detail	file:
compute_length	./glm/detail/func_geometric_simd.inl	/^	struct compute_length<4, float, Q, true>$/;"	s	namespace:glm::detail	file:
compute_length2	./glm/gtx/norm.inl	/^	struct compute_length2$/;"	s	namespace:glm::detail	file:
compute_linearRand	./glm/gtc/random.inl	/^	struct compute_linearRand$/;"	s	namespace:glm::detail	file:
compute_linearRand	./glm/gtc/random.inl	/^	struct compute_linearRand<L, double, Q>$/;"	s	namespace:glm::detail	file:
compute_linearRand	./glm/gtc/random.inl	/^	struct compute_linearRand<L, float, Q>$/;"	s	namespace:glm::detail	file:
compute_linearRand	./glm/gtc/random.inl	/^	struct compute_linearRand<L, int16, Q>$/;"	s	namespace:glm::detail	file:
compute_linearRand	./glm/gtc/random.inl	/^	struct compute_linearRand<L, int32, Q>$/;"	s	namespace:glm::detail	file:
compute_linearRand	./glm/gtc/random.inl	/^	struct compute_linearRand<L, int64, Q>$/;"	s	namespace:glm::detail	file:
compute_linearRand	./glm/gtc/random.inl	/^	struct compute_linearRand<L, int8, Q>$/;"	s	namespace:glm::detail	file:
compute_linearRand	./glm/gtc/random.inl	/^	struct compute_linearRand<L, long double, Q>$/;"	s	namespace:glm::detail	file:
compute_linearRand	./glm/gtc/random.inl	/^	struct compute_linearRand<L, uint16, Q>$/;"	s	namespace:glm::detail	file:
compute_linearRand	./glm/gtc/random.inl	/^	struct compute_linearRand<L, uint32, Q>$/;"	s	namespace:glm::detail	file:
compute_linearRand	./glm/gtc/random.inl	/^	struct compute_linearRand<L, uint64, Q>$/;"	s	namespace:glm::detail	file:
compute_linearRand	./glm/gtc/random.inl	/^	struct compute_linearRand<L, uint8, Q>$/;"	s	namespace:glm::detail	file:
compute_log2	./glm/detail/func_exponential.inl	/^	struct compute_log2$/;"	s	namespace:glm::detail	file:
compute_log2	./glm/gtc/integer.inl	/^		struct compute_log2<4, int, Q, false, Aligned>$/;"	s	namespace:glm::detail	file:
compute_log2	./glm/gtc/integer.inl	/^	struct compute_log2<L, T, Q, false, Aligned>$/;"	s	namespace:glm::detail	file:
compute_matrixCompMult	./glm/detail/func_matrix.inl	/^	struct compute_matrixCompMult$/;"	s	namespace:glm::detail	file:
compute_matrixCompMult	./glm/detail/func_matrix_simd.inl	/^	struct compute_matrixCompMult<4, 4, float, Q, true>$/;"	s	namespace:glm::detail	file:
compute_matrixCompMult_type	./glm/detail/func_matrix.inl	/^	struct compute_matrixCompMult_type {$/;"	s	namespace:glm::detail	file:
compute_matrixCompMult_type	./glm/ext/matrix_integer.inl	/^	struct compute_matrixCompMult_type<C, R, T, Q, false, Aligned> {$/;"	s	namespace:glm::detail	file:
compute_max_vector	./glm/detail/func_common.inl	/^	struct compute_max_vector$/;"	s	namespace:glm::detail	file:
compute_max_vector	./glm/detail/func_common_simd.inl	/^	struct compute_max_vector<4, float, Q, true>$/;"	s	namespace:glm::detail	file:
compute_max_vector	./glm/detail/func_common_simd.inl	/^	struct compute_max_vector<4, int, Q, true>$/;"	s	namespace:glm::detail	file:
compute_max_vector	./glm/detail/func_common_simd.inl	/^	struct compute_max_vector<4, uint, Q, true>$/;"	s	namespace:glm::detail	file:
compute_min_vector	./glm/detail/func_common.inl	/^	struct compute_min_vector$/;"	s	namespace:glm::detail	file:
compute_min_vector	./glm/detail/func_common_simd.inl	/^	struct compute_min_vector<4, float, Q, true>$/;"	s	namespace:glm::detail	file:
compute_min_vector	./glm/detail/func_common_simd.inl	/^	struct compute_min_vector<4, int, Q, true>$/;"	s	namespace:glm::detail	file:
compute_min_vector	./glm/detail/func_common_simd.inl	/^	struct compute_min_vector<4, uint, Q, true>$/;"	s	namespace:glm::detail	file:
compute_mix	./glm/detail/func_common.inl	/^	struct compute_mix$/;"	s	namespace:glm::detail	file:
compute_mix	./glm/detail/func_common.inl	/^	struct compute_mix<T, bool>$/;"	s	namespace:glm::detail	file:
compute_mix_scalar	./glm/detail/func_common.inl	/^	struct compute_mix_scalar$/;"	s	namespace:glm::detail	file:
compute_mix_scalar	./glm/detail/func_common.inl	/^	struct compute_mix_scalar<L, T, bool, Q, Aligned>$/;"	s	namespace:glm::detail	file:
compute_mix_vector	./glm/detail/func_common.inl	/^	struct compute_mix_vector$/;"	s	namespace:glm::detail	file:
compute_mix_vector	./glm/detail/func_common.inl	/^	struct compute_mix_vector<L, T, bool, Q, Aligned>$/;"	s	namespace:glm::detail	file:
compute_mix_vector	./glm/detail/func_common_simd.inl	/^	struct compute_mix_vector<4, float, bool, Q, true>$/;"	s	namespace:glm::detail	file:
compute_mod	./glm/detail/func_common.inl	/^	struct compute_mod$/;"	s	namespace:glm::detail	file:
compute_mod	./glm/detail/func_common_simd.inl	/^	struct compute_mod<4, float, Q, true>$/;"	s	namespace:glm::detail	file:
compute_normalize	./glm/detail/func_geometric.inl	/^	struct compute_normalize$/;"	s	namespace:glm::detail	file:
compute_normalize	./glm/detail/func_geometric_simd.inl	/^	struct compute_normalize<4, float, Q, true>$/;"	s	namespace:glm::detail	file:
compute_outerProduct	./glm/detail/func_matrix.inl	/^	struct compute_outerProduct {$/;"	s	namespace:glm::detail	file:
compute_outerProduct_type	./glm/detail/func_matrix.inl	/^	struct compute_outerProduct_type {$/;"	s	namespace:glm::detail	file:
compute_outerProduct_type	./glm/ext/matrix_integer.inl	/^	struct compute_outerProduct_type<DA, DB, T, Q, false> {$/;"	s	namespace:glm::detail	file:
compute_quat_add	./glm/detail/type_quat.inl	/^	struct compute_quat_add$/;"	s	namespace:glm::detail	file:
compute_quat_add	./glm/detail/type_quat_simd.inl	/^	struct compute_quat_add<double, Q, true>$/;"	s	namespace:glm::detail	file:
compute_quat_add	./glm/detail/type_quat_simd.inl	/^	struct compute_quat_add<float, Q, true>$/;"	s	namespace:glm::detail	file:
compute_quat_div_scalar	./glm/detail/type_quat.inl	/^	struct compute_quat_div_scalar$/;"	s	namespace:glm::detail	file:
compute_quat_div_scalar	./glm/detail/type_quat_simd.inl	/^	struct compute_quat_div_scalar<double, Q, true>$/;"	s	namespace:glm::detail	file:
compute_quat_div_scalar	./glm/detail/type_quat_simd.inl	/^	struct compute_quat_div_scalar<float, Q, true>$/;"	s	namespace:glm::detail	file:
compute_quat_mul_scalar	./glm/detail/type_quat.inl	/^	struct compute_quat_mul_scalar$/;"	s	namespace:glm::detail	file:
compute_quat_mul_scalar	./glm/detail/type_quat_simd.inl	/^	struct compute_quat_mul_scalar<double, Q, true>$/;"	s	namespace:glm::detail	file:
compute_quat_mul_scalar	./glm/detail/type_quat_simd.inl	/^	struct compute_quat_mul_scalar<float, Q, true>$/;"	s	namespace:glm::detail	file:
compute_quat_mul_vec4	./glm/detail/type_quat.inl	/^	struct compute_quat_mul_vec4$/;"	s	namespace:glm::detail	file:
compute_quat_mul_vec4	./glm/detail/type_quat_simd.inl	/^	struct compute_quat_mul_vec4<float, Q, true>$/;"	s	namespace:glm::detail	file:
compute_quat_sub	./glm/detail/type_quat.inl	/^	struct compute_quat_sub$/;"	s	namespace:glm::detail	file:
compute_quat_sub	./glm/detail/type_quat_simd.inl	/^	struct compute_quat_sub<double, Q, true>$/;"	s	namespace:glm::detail	file:
compute_quat_sub	./glm/detail/type_quat_simd.inl	/^	struct compute_quat_sub<float, Q, true>$/;"	s	namespace:glm::detail	file:
compute_rand	./glm/gtc/random.inl	/^	struct compute_rand$/;"	s	namespace:glm::detail	file:
compute_rand	./glm/gtc/random.inl	/^	struct compute_rand<1, uint8, P>$/;"	s	namespace:glm::detail	file:
compute_rand	./glm/gtc/random.inl	/^	struct compute_rand<2, uint8, P>$/;"	s	namespace:glm::detail	file:
compute_rand	./glm/gtc/random.inl	/^	struct compute_rand<3, uint8, P>$/;"	s	namespace:glm::detail	file:
compute_rand	./glm/gtc/random.inl	/^	struct compute_rand<4, uint8, P>$/;"	s	namespace:glm::detail	file:
compute_rand	./glm/gtc/random.inl	/^	struct compute_rand<L, uint16, Q>$/;"	s	namespace:glm::detail	file:
compute_rand	./glm/gtc/random.inl	/^	struct compute_rand<L, uint32, Q>$/;"	s	namespace:glm::detail	file:
compute_rand	./glm/gtc/random.inl	/^	struct compute_rand<L, uint64, Q>$/;"	s	namespace:glm::detail	file:
compute_reflect	./glm/detail/func_geometric.inl	/^	struct compute_reflect$/;"	s	namespace:glm::detail	file:
compute_reflect	./glm/detail/func_geometric_simd.inl	/^	struct compute_reflect<4, float, Q, true>$/;"	s	namespace:glm::detail	file:
compute_refract	./glm/detail/func_geometric.inl	/^	struct compute_refract$/;"	s	namespace:glm::detail	file:
compute_refract	./glm/detail/func_geometric_simd.inl	/^	struct compute_refract<4, float, Q, true>$/;"	s	namespace:glm::detail	file:
compute_rgbToSrgb	./glm/gtc/color_space.inl	/^	struct compute_rgbToSrgb$/;"	s	namespace:glm::detail	file:
compute_rgbToSrgb	./glm/gtc/color_space.inl	/^	struct compute_rgbToSrgb<4, T, Q>$/;"	s	namespace:glm::detail	file:
compute_round	./glm/detail/func_common.inl	/^	struct compute_round$/;"	s	namespace:glm::detail	file:
compute_round	./glm/detail/func_common_simd.inl	/^	struct compute_round<4, float, Q, true>$/;"	s	namespace:glm::detail	file:
compute_roundMultiple	./glm/gtc/round.inl	/^	struct compute_roundMultiple {};$/;"	s	namespace:glm::detail	file:
compute_roundMultiple	./glm/gtc/round.inl	/^	struct compute_roundMultiple<false, false>$/;"	s	namespace:glm::detail	file:
compute_roundMultiple	./glm/gtc/round.inl	/^	struct compute_roundMultiple<false, true>$/;"	s	namespace:glm::detail	file:
compute_roundMultiple	./glm/gtc/round.inl	/^	struct compute_roundMultiple<true, true>$/;"	s	namespace:glm::detail	file:
compute_sign	./glm/detail/func_common.inl	/^	struct compute_sign$/;"	s	namespace:glm::detail	file:
compute_sign	./glm/detail/func_common.inl	/^	struct compute_sign<L, T, Q, false, Aligned>$/;"	s	namespace:glm::detail	file:
compute_smoothstep_vector	./glm/detail/func_common.inl	/^	struct compute_smoothstep_vector$/;"	s	namespace:glm::detail	file:
compute_smoothstep_vector	./glm/detail/func_common_simd.inl	/^	struct compute_smoothstep_vector<4, float, Q, true>$/;"	s	namespace:glm::detail	file:
compute_splat	./glm/detail/compute_vector_decl.hpp	/^		struct compute_splat {};$/;"	s	namespace:glm::detail
compute_sqrt	./glm/detail/func_exponential.inl	/^	struct compute_sqrt$/;"	s	namespace:glm::detail	file:
compute_sqrt	./glm/detail/func_exponential_simd.inl	/^	struct compute_sqrt<4, float, Q, true>$/;"	s	namespace:glm::detail	file:
compute_sqrt	./glm/detail/func_exponential_simd.inl	/^	struct compute_sqrt<4, float, aligned_lowp, true>$/;"	s	namespace:glm::detail	file:
compute_srgbToRgb	./glm/gtc/color_space.inl	/^	struct compute_srgbToRgb$/;"	s	namespace:glm::detail	file:
compute_srgbToRgb	./glm/gtc/color_space.inl	/^	struct compute_srgbToRgb<4, T, Q>$/;"	s	namespace:glm::detail	file:
compute_step_vector	./glm/detail/func_common.inl	/^	struct compute_step_vector$/;"	s	namespace:glm::detail	file:
compute_to_string	./glm/gtx/string_cast.inl	/^	struct compute_to_string$/;"	s	namespace:glm::detail	file:
compute_to_string	./glm/gtx/string_cast.inl	/^	struct compute_to_string<mat<2, 2, T, Q> >$/;"	s	namespace:glm::detail	file:
compute_to_string	./glm/gtx/string_cast.inl	/^	struct compute_to_string<mat<2, 3, T, Q> >$/;"	s	namespace:glm::detail	file:
compute_to_string	./glm/gtx/string_cast.inl	/^	struct compute_to_string<mat<2, 4, T, Q> >$/;"	s	namespace:glm::detail	file:
compute_to_string	./glm/gtx/string_cast.inl	/^	struct compute_to_string<mat<3, 2, T, Q> >$/;"	s	namespace:glm::detail	file:
compute_to_string	./glm/gtx/string_cast.inl	/^	struct compute_to_string<mat<3, 3, T, Q> >$/;"	s	namespace:glm::detail	file:
compute_to_string	./glm/gtx/string_cast.inl	/^	struct compute_to_string<mat<3, 4, T, Q> >$/;"	s	namespace:glm::detail	file:
compute_to_string	./glm/gtx/string_cast.inl	/^	struct compute_to_string<mat<4, 2, T, Q> >$/;"	s	namespace:glm::detail	file:
compute_to_string	./glm/gtx/string_cast.inl	/^	struct compute_to_string<mat<4, 3, T, Q> >$/;"	s	namespace:glm::detail	file:
compute_to_string	./glm/gtx/string_cast.inl	/^	struct compute_to_string<mat<4, 4, T, Q> >$/;"	s	namespace:glm::detail	file:
compute_to_string	./glm/gtx/string_cast.inl	/^	struct compute_to_string<qua<T, Q> >$/;"	s	namespace:glm::detail	file:
compute_to_string	./glm/gtx/string_cast.inl	/^	struct compute_to_string<tdualquat<T, Q> >$/;"	s	namespace:glm::detail	file:
compute_to_string	./glm/gtx/string_cast.inl	/^	struct compute_to_string<vec<1, T, Q> >$/;"	s	namespace:glm::detail	file:
compute_to_string	./glm/gtx/string_cast.inl	/^	struct compute_to_string<vec<1, bool, Q> >$/;"	s	namespace:glm::detail	file:
compute_to_string	./glm/gtx/string_cast.inl	/^	struct compute_to_string<vec<2, T, Q> >$/;"	s	namespace:glm::detail	file:
compute_to_string	./glm/gtx/string_cast.inl	/^	struct compute_to_string<vec<2, bool, Q> >$/;"	s	namespace:glm::detail	file:
compute_to_string	./glm/gtx/string_cast.inl	/^	struct compute_to_string<vec<3, T, Q> >$/;"	s	namespace:glm::detail	file:
compute_to_string	./glm/gtx/string_cast.inl	/^	struct compute_to_string<vec<3, bool, Q> >$/;"	s	namespace:glm::detail	file:
compute_to_string	./glm/gtx/string_cast.inl	/^	struct compute_to_string<vec<4, T, Q> >$/;"	s	namespace:glm::detail	file:
compute_to_string	./glm/gtx/string_cast.inl	/^	struct compute_to_string<vec<4, bool, Q> >$/;"	s	namespace:glm::detail	file:
compute_transpose	./glm/detail/func_matrix.inl	/^	struct compute_transpose<2, 2, T, Q, Aligned>$/;"	s	namespace:glm::detail	file:
compute_transpose	./glm/detail/func_matrix.inl	/^	struct compute_transpose<2, 3, T, Q, Aligned>$/;"	s	namespace:glm::detail	file:
compute_transpose	./glm/detail/func_matrix.inl	/^	struct compute_transpose<2, 4, T, Q, Aligned>$/;"	s	namespace:glm::detail	file:
compute_transpose	./glm/detail/func_matrix.inl	/^	struct compute_transpose<3, 2, T, Q, Aligned>$/;"	s	namespace:glm::detail	file:
compute_transpose	./glm/detail/func_matrix.inl	/^	struct compute_transpose<3, 3, T, Q, Aligned>$/;"	s	namespace:glm::detail	file:
compute_transpose	./glm/detail/func_matrix.inl	/^	struct compute_transpose<3, 4, T, Q, Aligned>$/;"	s	namespace:glm::detail	file:
compute_transpose	./glm/detail/func_matrix.inl	/^	struct compute_transpose<4, 2, T, Q, Aligned>$/;"	s	namespace:glm::detail	file:
compute_transpose	./glm/detail/func_matrix.inl	/^	struct compute_transpose<4, 3, T, Q, Aligned>$/;"	s	namespace:glm::detail	file:
compute_transpose	./glm/detail/func_matrix.inl	/^	struct compute_transpose<4, 4, T, Q, Aligned>$/;"	s	namespace:glm::detail	file:
compute_transpose	./glm/detail/func_matrix.inl	/^	struct compute_transpose{};$/;"	s	namespace:glm::detail	file:
compute_transpose	./glm/detail/func_matrix_simd.inl	/^	struct compute_transpose<4, 4, float, Q, true>$/;"	s	namespace:glm::detail	file:
compute_transpose_type	./glm/detail/func_matrix.inl	/^	struct compute_transpose_type {$/;"	s	namespace:glm::detail	file:
compute_transpose_type	./glm/ext/matrix_integer.inl	/^	struct compute_transpose_type<C, R, T, Q, false, Aligned>$/;"	s	namespace:glm::detail	file:
compute_trunc	./glm/detail/func_common.inl	/^	struct compute_trunc$/;"	s	namespace:glm::detail	file:
compute_vec4_add	./glm/detail/type_vec4.inl	/^	struct compute_vec4_add$/;"	s	namespace:glm::detail	file:
compute_vec4_add	./glm/detail/type_vec4_simd.inl	/^		struct compute_vec4_add<double, Q, true>$/;"	s	namespace:glm::detail	file:
compute_vec4_add	./glm/detail/type_vec4_simd.inl	/^		struct compute_vec4_add<float, Q, true>$/;"	s	namespace:glm::detail	file:
compute_vec4_add	./glm/detail/type_vec4_simd.inl	/^		struct compute_vec4_add<int, Q, true>$/;"	s	namespace:glm::detail	file:
compute_vec4_add	./glm/detail/type_vec4_simd.inl	/^		struct compute_vec4_add<uint, Q, true>$/;"	s	namespace:glm::detail	file:
compute_vec4_and	./glm/detail/type_vec4.inl	/^	struct compute_vec4_and$/;"	s	namespace:glm::detail	file:
compute_vec4_and	./glm/detail/type_vec4_simd.inl	/^		struct compute_vec4_and<T, Q, true, 32, true>$/;"	s	namespace:glm::detail	file:
compute_vec4_and	./glm/detail/type_vec4_simd.inl	/^		struct compute_vec4_and<T, Q, true, 64, true>$/;"	s	namespace:glm::detail	file:
compute_vec4_bitwise_not	./glm/detail/type_vec4.inl	/^	struct compute_vec4_bitwise_not$/;"	s	namespace:glm::detail	file:
compute_vec4_bitwise_not	./glm/detail/type_vec4_simd.inl	/^		struct compute_vec4_bitwise_not<T, Q, true, 32, true>$/;"	s	namespace:glm::detail	file:
compute_vec4_bitwise_not	./glm/detail/type_vec4_simd.inl	/^		struct compute_vec4_bitwise_not<T, Q, true, 64, true>$/;"	s	namespace:glm::detail	file:
compute_vec4_div	./glm/detail/type_vec4.inl	/^	struct compute_vec4_div$/;"	s	namespace:glm::detail	file:
compute_vec4_div	./glm/detail/type_vec4_simd.inl	/^		struct compute_vec4_div<double, Q, true>$/;"	s	namespace:glm::detail	file:
compute_vec4_div	./glm/detail/type_vec4_simd.inl	/^		struct compute_vec4_div<float, Q, true>$/;"	s	namespace:glm::detail	file:
compute_vec4_div	./glm/detail/type_vec4_simd.inl	/^		struct compute_vec4_div<float, aligned_lowp, true>$/;"	s	namespace:glm::detail	file:
compute_vec4_equal	./glm/detail/type_vec4.inl	/^	struct compute_vec4_equal$/;"	s	namespace:glm::detail	file:
compute_vec4_equal	./glm/detail/type_vec4_simd.inl	/^		struct compute_vec4_equal<float, Q, false, 32, true>$/;"	s	namespace:glm::detail	file:
compute_vec4_equal	./glm/detail/type_vec4_simd.inl	/^		struct compute_vec4_equal<int, Q, false, 32, true>$/;"	s	namespace:glm::detail	file:
compute_vec4_equal	./glm/detail/type_vec4_simd.inl	/^		struct compute_vec4_equal<int, Q, true, 32, true>$/;"	s	namespace:glm::detail	file:
compute_vec4_equal	./glm/detail/type_vec4_simd.inl	/^		struct compute_vec4_equal<uint, Q, false, 32, true>$/;"	s	namespace:glm::detail	file:
compute_vec4_mod	./glm/detail/type_vec4.inl	/^	struct compute_vec4_mod$/;"	s	namespace:glm::detail	file:
compute_vec4_mul	./glm/detail/type_vec4.inl	/^	struct compute_vec4_mul$/;"	s	namespace:glm::detail	file:
compute_vec4_mul	./glm/detail/type_vec4_simd.inl	/^		struct compute_vec4_mul<double, Q, true>$/;"	s	namespace:glm::detail	file:
compute_vec4_mul	./glm/detail/type_vec4_simd.inl	/^		struct compute_vec4_mul<float, Q, true>$/;"	s	namespace:glm::detail	file:
compute_vec4_mul	./glm/detail/type_vec4_simd.inl	/^		struct compute_vec4_mul<int, Q, true>$/;"	s	namespace:glm::detail	file:
compute_vec4_mul	./glm/detail/type_vec4_simd.inl	/^		struct compute_vec4_mul<uint, Q, true>$/;"	s	namespace:glm::detail	file:
compute_vec4_nequal	./glm/detail/type_vec4.inl	/^	struct compute_vec4_nequal$/;"	s	namespace:glm::detail	file:
compute_vec4_nequal	./glm/detail/type_vec4_simd.inl	/^		struct compute_vec4_nequal<float, Q, false, 32, true>$/;"	s	namespace:glm::detail	file:
compute_vec4_nequal	./glm/detail/type_vec4_simd.inl	/^		struct compute_vec4_nequal<int, Q, false, 32, true>$/;"	s	namespace:glm::detail	file:
compute_vec4_nequal	./glm/detail/type_vec4_simd.inl	/^		struct compute_vec4_nequal<int, Q, true, 32, true>$/;"	s	namespace:glm::detail	file:
compute_vec4_nequal	./glm/detail/type_vec4_simd.inl	/^		struct compute_vec4_nequal<uint, Q, false, 32, true>$/;"	s	namespace:glm::detail	file:
compute_vec4_or	./glm/detail/type_vec4.inl	/^	struct compute_vec4_or$/;"	s	namespace:glm::detail	file:
compute_vec4_or	./glm/detail/type_vec4_simd.inl	/^		struct compute_vec4_or<T, Q, true, 32, true>$/;"	s	namespace:glm::detail	file:
compute_vec4_or	./glm/detail/type_vec4_simd.inl	/^		struct compute_vec4_or<T, Q, true, 64, true>$/;"	s	namespace:glm::detail	file:
compute_vec4_shift_left	./glm/detail/type_vec4.inl	/^	struct compute_vec4_shift_left$/;"	s	namespace:glm::detail	file:
compute_vec4_shift_left	./glm/detail/type_vec4_simd.inl	/^		struct compute_vec4_shift_left<T, Q, true, 32, true>$/;"	s	namespace:glm::detail	file:
compute_vec4_shift_left	./glm/detail/type_vec4_simd.inl	/^		struct compute_vec4_shift_left<T, Q, true, 64, true>$/;"	s	namespace:glm::detail	file:
compute_vec4_shift_right	./glm/detail/type_vec4.inl	/^	struct compute_vec4_shift_right$/;"	s	namespace:glm::detail	file:
compute_vec4_shift_right	./glm/detail/type_vec4_simd.inl	/^		struct compute_vec4_shift_right<T, Q, true, 32, true>$/;"	s	namespace:glm::detail	file:
compute_vec4_shift_right	./glm/detail/type_vec4_simd.inl	/^		struct compute_vec4_shift_right<T, Q, true, 64, true>$/;"	s	namespace:glm::detail	file:
compute_vec4_sub	./glm/detail/type_vec4.inl	/^	struct compute_vec4_sub$/;"	s	namespace:glm::detail	file:
compute_vec4_sub	./glm/detail/type_vec4_simd.inl	/^		struct compute_vec4_sub<double, Q, true>$/;"	s	namespace:glm::detail	file:
compute_vec4_sub	./glm/detail/type_vec4_simd.inl	/^		struct compute_vec4_sub<float, Q, true>$/;"	s	namespace:glm::detail	file:
compute_vec4_sub	./glm/detail/type_vec4_simd.inl	/^		struct compute_vec4_sub<int, Q, true>$/;"	s	namespace:glm::detail	file:
compute_vec4_sub	./glm/detail/type_vec4_simd.inl	/^		struct compute_vec4_sub<uint, Q, true>$/;"	s	namespace:glm::detail	file:
compute_vec4_xor	./glm/detail/type_vec4.inl	/^	struct compute_vec4_xor$/;"	s	namespace:glm::detail	file:
compute_vec4_xor	./glm/detail/type_vec4_simd.inl	/^		struct compute_vec4_xor<T, Q, true, 32, true>$/;"	s	namespace:glm::detail	file:
compute_vec4_xor	./glm/detail/type_vec4_simd.inl	/^		struct compute_vec4_xor<T, Q, true, 64, true>$/;"	s	namespace:glm::detail	file:
compute_vec_add	./glm/detail/compute_vector_decl.hpp	/^		struct compute_vec_add {};$/;"	s	namespace:glm::detail
compute_vec_add	./glm/detail/compute_vector_decl.hpp	/^		struct compute_vec_add<L, T, Q, false>$/;"	s	namespace:glm::detail
compute_vec_and	./glm/detail/compute_vector_decl.hpp	/^		struct compute_vec_and {};$/;"	s	namespace:glm::detail
compute_vec_and	./glm/detail/compute_vector_decl.hpp	/^		struct compute_vec_and<L, T, Q, IsInt, Size, false>$/;"	s	namespace:glm::detail
compute_vec_bitwise_not	./glm/detail/compute_vector_decl.hpp	/^		struct compute_vec_bitwise_not {};$/;"	s	namespace:glm::detail
compute_vec_bitwise_not	./glm/detail/compute_vector_decl.hpp	/^		struct compute_vec_bitwise_not<L, T, Q, IsInt, Size, false>$/;"	s	namespace:glm::detail
compute_vec_div	./glm/detail/compute_vector_decl.hpp	/^		struct compute_vec_div {};$/;"	s	namespace:glm::detail
compute_vec_div	./glm/detail/compute_vector_decl.hpp	/^		struct compute_vec_div<L, T, Q, false>$/;"	s	namespace:glm::detail
compute_vec_equal	./glm/detail/compute_vector_decl.hpp	/^		struct compute_vec_equal {};$/;"	s	namespace:glm::detail
compute_vec_equal	./glm/detail/compute_vector_decl.hpp	/^		struct compute_vec_equal<L, T, Q, IsInt, Size, false>$/;"	s	namespace:glm::detail
compute_vec_mod	./glm/detail/compute_vector_decl.hpp	/^		struct compute_vec_mod {};$/;"	s	namespace:glm::detail
compute_vec_mod	./glm/detail/compute_vector_decl.hpp	/^		struct compute_vec_mod<L, T, Q, false>$/;"	s	namespace:glm::detail
compute_vec_mul	./glm/detail/compute_vector_decl.hpp	/^		struct compute_vec_mul {};$/;"	s	namespace:glm::detail
compute_vec_mul	./glm/detail/compute_vector_decl.hpp	/^		struct compute_vec_mul<L, T, Q, false>$/;"	s	namespace:glm::detail
compute_vec_nequal	./glm/detail/compute_vector_decl.hpp	/^		struct compute_vec_nequal {};$/;"	s	namespace:glm::detail
compute_vec_nequal	./glm/detail/compute_vector_decl.hpp	/^		struct compute_vec_nequal<L, T, Q, IsInt, Size, false>$/;"	s	namespace:glm::detail
compute_vec_or	./glm/detail/compute_vector_decl.hpp	/^		struct compute_vec_or {};$/;"	s	namespace:glm::detail
compute_vec_or	./glm/detail/compute_vector_decl.hpp	/^		struct compute_vec_or<L, T, Q, IsInt, Size, false>$/;"	s	namespace:glm::detail
compute_vec_shift_left	./glm/detail/compute_vector_decl.hpp	/^		struct compute_vec_shift_left {};$/;"	s	namespace:glm::detail
compute_vec_shift_left	./glm/detail/compute_vector_decl.hpp	/^		struct compute_vec_shift_left<L, T, Q, IsInt, Size, false>$/;"	s	namespace:glm::detail
compute_vec_shift_right	./glm/detail/compute_vector_decl.hpp	/^		struct compute_vec_shift_right {};$/;"	s	namespace:glm::detail
compute_vec_shift_right	./glm/detail/compute_vector_decl.hpp	/^		struct compute_vec_shift_right<L, T, Q, IsInt, Size, false>$/;"	s	namespace:glm::detail
compute_vec_sub	./glm/detail/compute_vector_decl.hpp	/^		struct compute_vec_sub {};$/;"	s	namespace:glm::detail
compute_vec_sub	./glm/detail/compute_vector_decl.hpp	/^		struct compute_vec_sub<L, T, Q, false>$/;"	s	namespace:glm::detail
compute_vec_xor	./glm/detail/compute_vector_decl.hpp	/^		struct compute_vec_xor {};$/;"	s	namespace:glm::detail
compute_vec_xor	./glm/detail/compute_vector_decl.hpp	/^		struct compute_vec_xor<L, T, Q, IsInt, Size, false>$/;"	s	namespace:glm::detail
conjugate	./glm/ext/quaternion_common.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR qua<T, Q> conjugate(qua<T, Q> const& q)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR qua<T,Q>
const	./glm/build/CMakeFiles/3.31.0-rc1/CompilerIdC/CMakeCCompilerId.c	/^# define const$/;"	d	file:
convertD65XYZToD50XYZ	./glm/gtx/color_encoding.inl	/^	GLM_FUNC_QUALIFIER vec<3, T, Q> convertD65XYZToD50XYZ(vec<3, T, Q> const& ColorD65XYZ)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<3,T,Q>
convertD65XYZToLinearSRGB	./glm/gtx/color_encoding.inl	/^	GLM_FUNC_QUALIFIER vec<3, T, Q> convertD65XYZToLinearSRGB(vec<3, T, Q> const& ColorD65XYZ)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<3,T,Q>
convertLinearSRGBToD50XYZ	./glm/gtx/color_encoding.inl	/^	GLM_FUNC_QUALIFIER vec<3, T, Q> convertLinearSRGBToD50XYZ(vec<3, T, Q> const& ColorLinearSRGB)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<3,T,Q>
convertLinearSRGBToD65XYZ	./glm/gtx/color_encoding.inl	/^	GLM_FUNC_QUALIFIER vec<3, T, Q> convertLinearSRGBToD65XYZ(vec<3, T, Q> const& ColorLinearSRGB)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<3,T,Q>
convertLinearToSRGB	./glm/gtc/color_space.inl	/^	GLM_FUNC_QUALIFIER vec<3, float, lowp> convertLinearToSRGB(vec<3, float, lowp> const& ColorLine/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<3,float,lowp>
convertLinearToSRGB	./glm/gtc/color_space.inl	/^	GLM_FUNC_QUALIFIER vec<L, T, Q> convertLinearToSRGB(vec<L, T, Q> const& ColorLinear)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<L,T,Q>
convertLinearToSRGB	./glm/gtc/color_space.inl	/^	GLM_FUNC_QUALIFIER vec<L, T, Q> convertLinearToSRGB(vec<L, T, Q> const& ColorLinear, T Gamma)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<L,T,Q>
convertSRGBToLinear	./glm/gtc/color_space.inl	/^	GLM_FUNC_QUALIFIER vec<L, T, Q> convertSRGBToLinear(vec<L, T, Q> const& ColorSRGB)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<L,T,Q>
convertSRGBToLinear	./glm/gtc/color_space.inl	/^	GLM_FUNC_QUALIFIER vec<L, T, Q> convertSRGBToLinear(vec<L, T, Q> const& ColorSRGB, T Gamma)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<L,T,Q>
copy_lane	./glm/simd/neon.h	/^		static inline float32x4_t copy_lane(float32x4_t vdst, int dlane, float32x4_t vsrc, int slane) /;"	f	namespace:glm::neon	typeref:typename:float32x4_t
cos	./glm/detail/func_trigonometric.inl	/^	GLM_FUNC_QUALIFIER vec<L, T, Q> cos(vec<L, T, Q> const& v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<L,T,Q>
cos_52s	./glm/gtx/fast_trigonometry.inl	/^	GLM_FUNC_QUALIFIER T cos_52s(T x)$/;"	f	namespace:glm::detail	typeref:typename:GLM_FUNC_QUALIFIER T
cos_52s	./glm/gtx/fast_trigonometry.inl	/^	GLM_FUNC_QUALIFIER vec<L, T, Q> cos_52s(vec<L, T, Q> const& x)$/;"	f	namespace:glm::detail	typeref:typename:GLM_FUNC_QUALIFIER vec<L,T,Q>
cos_one_over_two	./glm/ext/scalar_constants.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR genType cos_one_over_two()$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR genType
cosh	./glm/detail/func_trigonometric.inl	/^	GLM_FUNC_QUALIFIER vec<L, T, Q> cosh(vec<L, T, Q> const& v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<L,T,Q>
cot	./glm/ext/scalar_reciprocal.inl	/^	GLM_FUNC_QUALIFIER genType cot(genType angle)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genType
cot	./glm/ext/vector_reciprocal.inl	/^	GLM_FUNC_QUALIFIER vec<L, T, Q> cot(vec<L, T, Q> const& x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<L,T,Q>
coth	./glm/ext/scalar_reciprocal.inl	/^	GLM_FUNC_QUALIFIER genType coth(genType angle)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genType
coth	./glm/ext/vector_reciprocal.inl	/^	GLM_FUNC_QUALIFIER vec<L, T, Q> coth(vec<L, T, Q> const& x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<L,T,Q>
count	./GL/glxew.h	/^  int count; $/;"	m	struct:__anonb1a929810108	typeref:typename:int
count	./GL/glxew.h	/^typedef struct { int type; unsigned long serial; Bool send_event; Display *display; GLXDrawable /;"	m	struct:__anonb1a929810608	typeref:typename:int
countof	./glm/detail/setup.hpp	/^		constexpr std::size_t countof(T const (&)[N])$/;"	f	namespace:glm	typeref:typename:std::size_t
cross	./glm/detail/func_geometric.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<3, T, Q> cross(vec<3, T, Q> const& x, vec<3, T, Q> const& /;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<3,T,Q>
cross	./glm/ext/quaternion_geometric.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR qua<T, Q> cross(qua<T, Q> const& q1, qua<T, Q> const& q2)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR qua<T,Q>
cross	./glm/gtx/exterior_product.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR T cross(vec<2, T, Q> const& x, vec<2, T, Q> const& y)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR T
cross	./glm/gtx/quaternion.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<3, T, Q> cross(qua<T, Q> const& q, vec<3, T, Q> const& v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<3,T,Q>
cross	./glm/gtx/quaternion.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<3, T, Q> cross(vec<3, T, Q> const& v, qua<T, Q> const& q)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<3,T,Q>
csc	./glm/ext/scalar_reciprocal.inl	/^	GLM_FUNC_QUALIFIER genType csc(genType angle)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genType
csc	./glm/ext/vector_reciprocal.inl	/^	GLM_FUNC_QUALIFIER vec<L, T, Q> csc(vec<L, T, Q> const& x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<L,T,Q>
csch	./glm/ext/scalar_reciprocal.inl	/^	GLM_FUNC_QUALIFIER genType csch(genType angle)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genType
csch	./glm/ext/vector_reciprocal.inl	/^	GLM_FUNC_QUALIFIER vec<L, T, Q> csch(vec<L, T, Q> const& x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<L,T,Q>
cubic	./glm/gtx/spline.inl	/^	GLM_FUNC_QUALIFIER genType cubic$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genType
cubicEaseIn	./glm/gtx/easing.inl	/^	GLM_FUNC_QUALIFIER genType cubicEaseIn(genType const& a)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genType
cubicEaseInOut	./glm/gtx/easing.inl	/^	GLM_FUNC_QUALIFIER genType cubicEaseInOut(genType const& a)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genType
cubicEaseOut	./glm/gtx/easing.inl	/^	GLM_FUNC_QUALIFIER genType cubicEaseOut(genType const& a)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genType
data	./glm/detail/qualifier.hpp	/^				T data[4];$/;"	m	struct:glm::detail::storage::type	typeref:typename:T[4]
data	./glm/detail/qualifier.hpp	/^				T data[L];$/;"	m	struct:glm::detail::storage::type	typeref:typename:T[]
data	./glm/detail/qualifier.hpp	/^			T data[L];$/;"	m	struct:glm::detail::storage::type	typeref:typename:T[]
data	./glm/detail/type_quat.hpp	/^				typename detail::storage<4, T, detail::is_aligned<Q>::value>::type data;$/;"	m	union:glm::qua::__anon440bef85010a	typeref:typename:detail::storage<4,T,detail::is_aligned<Q>::value>::type
data	./glm/detail/type_vec1.hpp	/^				typename detail::storage<1, T, detail::is_aligned<Q>::value>::type data;$/;"	m	union:glm::vec::__anon119f3359010a	typeref:typename:detail::storage<1,T,detail::is_aligned<Q>::value>::type
data	./glm/gtc/packing.inl	/^		} data;$/;"	m	union:glm::detail::i10i10i10i2	typeref:struct:glm::detail::i10i10i10i2::Data	file:
data	./glm/gtc/packing.inl	/^		} data;$/;"	m	union:glm::detail::u10u10u10u2	typeref:struct:glm::detail::u10u10u10u2::Data	file:
data	./glm/gtc/packing.inl	/^		} data;$/;"	m	union:glm::detail::u3u3u2	typeref:struct:glm::detail::u3u3u2::Data	file:
data	./glm/gtc/packing.inl	/^		} data;$/;"	m	union:glm::detail::u4u4	typeref:struct:glm::detail::u4u4::Data	file:
data	./glm/gtc/packing.inl	/^		} data;$/;"	m	union:glm::detail::u4u4u4u4	typeref:struct:glm::detail::u4u4u4u4::Data	file:
data	./glm/gtc/packing.inl	/^		} data;$/;"	m	union:glm::detail::u5u5u5u1	typeref:struct:glm::detail::u5u5u5u1::Data	file:
data	./glm/gtc/packing.inl	/^		} data;$/;"	m	union:glm::detail::u5u6u5	typeref:struct:glm::detail::u5u6u5::Data	file:
data	./glm/gtc/packing.inl	/^		} data;$/;"	m	union:glm::detail::u9u9u9e5	typeref:struct:glm::detail::u9u9u9e5::Data	file:
ddualquat	./glm/gtx/dual_quaternion.hpp	/^	typedef highp_ddualquat			ddualquat;$/;"	t	namespace:glm	typeref:typename:highp_ddualquat
ddualquat	./glm/gtx/dual_quaternion.hpp	/^	typedef lowp_ddualquat			ddualquat;$/;"	t	namespace:glm	typeref:typename:lowp_ddualquat
ddualquat	./glm/gtx/dual_quaternion.hpp	/^	typedef mediump_ddualquat		ddualquat;$/;"	t	namespace:glm	typeref:typename:mediump_ddualquat
decompose	./glm/gtx/matrix_decompose.inl	/^	GLM_FUNC_QUALIFIER bool decompose(mat<4, 4, T, Q> const& ModelMatrix, vec<3, T, Q> & Scale, qua/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER bool
defaultp	./glm/detail/qualifier.hpp	/^			defaultp = aligned_highp$/;"	e	enum:glm::qualifier
degrees	./glm/detail/func_trigonometric.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR genType degrees(genType radians)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR genType
degrees	./glm/detail/func_trigonometric.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<L, T, Q> degrees(vec<L, T, Q> const& v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<L,T,Q>
delim_left	./glm/gtx/io.hpp	/^			char_type  delim_left;$/;"	m	class:glm::io::format_punct	typeref:typename:char_type
delim_right	./glm/gtx/io.hpp	/^			char_type  delim_right;$/;"	m	class:glm::io::format_punct	typeref:typename:char_type
delimeter	./glm/gtx/io.hpp	/^		struct delimeter$/;"	s	namespace:glm::io
delimeter	./glm/gtx/io.inl	/^	GLM_FUNC_QUALIFIER delimeter<CTy>::delimeter(CTy a, CTy b, CTy c)$/;"	f	class:glm::io::delimeter	typeref:typename:GLM_FUNC_QUALIFIER
derivedEulerAngleX	./glm/gtx/euler_angles.inl	/^	GLM_FUNC_QUALIFIER mat<4, 4, T, defaultp> derivedEulerAngleX$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER mat<4,4,T,defaultp>
derivedEulerAngleY	./glm/gtx/euler_angles.inl	/^	GLM_FUNC_QUALIFIER mat<4, 4, T, defaultp> derivedEulerAngleY$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER mat<4,4,T,defaultp>
derivedEulerAngleZ	./glm/gtx/euler_angles.inl	/^	GLM_FUNC_QUALIFIER mat<4, 4, T, defaultp> derivedEulerAngleZ$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER mat<4,4,T,defaultp>
destHeight	./GL/glxew.h	/^  int destHeight; $/;"	m	struct:__anonb1a929810508	typeref:typename:int
destWidth	./GL/glxew.h	/^  int destWidth; $/;"	m	struct:__anonb1a929810508	typeref:typename:int
destXOrigin	./GL/glxew.h	/^  int destXOrigin; $/;"	m	struct:__anonb1a929810508	typeref:typename:int
destYOrigin	./GL/glxew.h	/^  int destYOrigin; $/;"	m	struct:__anonb1a929810508	typeref:typename:int
detail	./glm/detail/_noise.hpp	/^namespace detail$/;"	n	namespace:glm
detail	./glm/detail/_swizzle.hpp	/^	namespace detail$/;"	n	namespace:glm
detail	./glm/detail/_swizzle.hpp	/^namespace detail$/;"	n	namespace:glm
detail	./glm/detail/_vectorize.hpp	/^namespace detail$/;"	n	namespace:glm
detail	./glm/detail/compute_common.hpp	/^namespace detail$/;"	n	namespace:glm
detail	./glm/detail/compute_vector_decl.hpp	/^	namespace detail$/;"	n	namespace:glm
detail	./glm/detail/compute_vector_relational.hpp	/^namespace detail$/;"	n	namespace:glm
detail	./glm/detail/func_common.inl	/^namespace detail$/;"	n	namespace:glm	file:
detail	./glm/detail/func_common_simd.inl	/^namespace detail$/;"	n	namespace:glm	file:
detail	./glm/detail/func_exponential.inl	/^namespace detail$/;"	n	namespace:glm	file:
detail	./glm/detail/func_exponential_simd.inl	/^namespace detail$/;"	n	namespace:glm	file:
detail	./glm/detail/func_geometric.inl	/^namespace detail$/;"	n	namespace:glm	file:
detail	./glm/detail/func_geometric_simd.inl	/^namespace detail$/;"	n	namespace:glm	file:
detail	./glm/detail/func_integer.inl	/^namespace detail$/;"	n	namespace:glm	file:
detail	./glm/detail/func_integer_simd.inl	/^namespace detail$/;"	n	namespace:glm	file:
detail	./glm/detail/func_matrix.inl	/^namespace detail$/;"	n	namespace:glm	file:
detail	./glm/detail/func_matrix_simd.inl	/^namespace detail$/;"	n	namespace:glm	file:
detail	./glm/detail/func_packing_simd.inl	/^namespace detail$/;"	n	namespace:glm	file:
detail	./glm/detail/func_vector_relational_simd.inl	/^namespace detail$/;"	n	namespace:glm	file:
detail	./glm/detail/qualifier.hpp	/^namespace detail$/;"	n	namespace:glm
detail	./glm/detail/setup.hpp	/^namespace detail$/;"	n	namespace:glm
detail	./glm/detail/type_float.hpp	/^namespace detail$/;"	n	namespace:glm
detail	./glm/detail/type_half.hpp	/^namespace detail$/;"	n	namespace:glm
detail	./glm/detail/type_half.inl	/^namespace detail$/;"	n	namespace:glm	file:
detail	./glm/detail/type_quat.inl	/^namespace detail$/;"	n	namespace:glm	file:
detail	./glm/detail/type_quat_simd.inl	/^namespace detail$/;"	n	namespace:glm	file:
detail	./glm/detail/type_vec4.inl	/^namespace detail$/;"	n	namespace:glm	file:
detail	./glm/detail/type_vec4_simd.inl	/^	namespace detail {$/;"	n	namespace:glm	file:
detail	./glm/detail/type_vec4_simd.inl	/^	namespace detail$/;"	n	namespace:glm	file:
detail	./glm/ext/_matrix_vectorize.hpp	/^	namespace detail {$/;"	n	namespace:glm
detail	./glm/ext/matrix_integer.inl	/^namespace detail$/;"	n	namespace:glm	file:
detail	./glm/ext/quaternion_common_simd.inl	/^namespace detail$/;"	n	namespace:glm	file:
detail	./glm/ext/scalar_int_sized.hpp	/^namespace detail$/;"	n	namespace:glm
detail	./glm/ext/scalar_integer.inl	/^namespace detail$/;"	n	namespace:glm	file:
detail	./glm/ext/scalar_uint_sized.hpp	/^namespace detail$/;"	n	namespace:glm
detail	./glm/ext/scalar_ulp.inl	/^namespace detail$/;"	n	namespace:glm	file:
detail	./glm/gtc/bitfield.inl	/^namespace detail$/;"	n	namespace:glm	file:
detail	./glm/gtc/color_space.inl	/^namespace detail$/;"	n	namespace:glm	file:
detail	./glm/gtc/integer.inl	/^namespace detail$/;"	n	namespace:glm	file:
detail	./glm/gtc/noise.inl	/^namespace detail$/;"	n	namespace:glm	file:
detail	./glm/gtc/packing.inl	/^namespace detail$/;"	n	namespace:glm	file:
detail	./glm/gtc/random.inl	/^namespace detail$/;"	n	namespace:glm	file:
detail	./glm/gtc/round.inl	/^namespace detail$/;"	n	namespace:glm	file:
detail	./glm/gtx/common.inl	/^namespace detail$/;"	n	namespace:glm	file:
detail	./glm/gtx/component_wise.inl	/^namespace detail$/;"	n	namespace:glm	file:
detail	./glm/gtx/exterior_product.inl	/^namespace detail$/;"	n	namespace:glm	file:
detail	./glm/gtx/fast_trigonometry.inl	/^namespace detail$/;"	n	namespace:glm	file:
detail	./glm/gtx/hash.inl	/^namespace detail$/;"	n	namespace:glm	file:
detail	./glm/gtx/integer.inl	/^namespace detail$/;"	n	namespace:glm	file:
detail	./glm/gtx/io.inl	/^namespace detail$/;"	n	namespace:glm	file:
detail	./glm/gtx/matrix_decompose.inl	/^namespace detail$/;"	n	namespace:glm	file:
detail	./glm/gtx/norm.inl	/^namespace detail$/;"	n	namespace:glm	file:
detail	./glm/gtx/string_cast.inl	/^namespace detail$/;"	n	namespace:glm	file:
detail	./glm/gtx/vector_query.inl	/^namespace detail$/;"	n	namespace:glm	file:
detail	./glm/matrix.hpp	/^namespace detail$/;"	n	namespace:glm
determinant	./glm/detail/func_matrix.inl	/^	GLM_FUNC_QUALIFIER T determinant(mat<C, R, T, Q> const& m)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER T
diagonal2x2	./glm/gtx/matrix_operation.inl	/^	GLM_FUNC_QUALIFIER mat<2, 2, T, Q> diagonal2x2$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER mat<2,2,T,Q>
diagonal2x3	./glm/gtx/matrix_operation.inl	/^	GLM_FUNC_QUALIFIER mat<2, 3, T, Q> diagonal2x3$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER mat<2,3,T,Q>
diagonal2x4	./glm/gtx/matrix_operation.inl	/^	GLM_FUNC_QUALIFIER mat<2, 4, T, Q> diagonal2x4$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER mat<2,4,T,Q>
diagonal3x2	./glm/gtx/matrix_operation.inl	/^	GLM_FUNC_QUALIFIER mat<3, 2, T, Q> diagonal3x2$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER mat<3,2,T,Q>
diagonal3x3	./glm/gtx/matrix_operation.inl	/^	GLM_FUNC_QUALIFIER mat<3, 3, T, Q> diagonal3x3$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER mat<3,3,T,Q>
diagonal3x4	./glm/gtx/matrix_operation.inl	/^	GLM_FUNC_QUALIFIER mat<3, 4, T, Q> diagonal3x4$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER mat<3,4,T,Q>
diagonal4x2	./glm/gtx/matrix_operation.inl	/^	GLM_FUNC_QUALIFIER mat<4, 2, T, Q> diagonal4x2$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER mat<4,2,T,Q>
diagonal4x3	./glm/gtx/matrix_operation.inl	/^	GLM_FUNC_QUALIFIER mat<4, 3, T, Q> diagonal4x3$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER mat<4,3,T,Q>
diagonal4x4	./glm/gtx/matrix_operation.inl	/^	GLM_FUNC_QUALIFIER mat<4, 4, T, Q> diagonal4x4$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER mat<4,4,T,Q>
diskRand	./glm/gtc/random.inl	/^	GLM_FUNC_QUALIFIER vec<2, T, defaultp> diskRand(T Radius)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<2,T,defaultp>
display	./GL/glxew.h	/^  Display *display; $/;"	m	struct:__anonb1a929810108	typeref:typename:Display *
display	./GL/glxew.h	/^typedef struct { int type; unsigned long serial; Bool send_event; Display *display; GLXDrawable /;"	m	struct:__anonb1a929810608	typeref:typename:Display *
distance	./glm/detail/func_geometric.inl	/^	GLM_FUNC_QUALIFIER T distance(vec<L, T, Q> const& p0, vec<L, T, Q> const& p1)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER T
distance	./glm/detail/func_geometric.inl	/^	GLM_FUNC_QUALIFIER genType distance(genType const& p0, genType const& p1)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genType
distance2	./glm/gtx/norm.inl	/^	GLM_FUNC_QUALIFIER T distance2(T p0, T p1)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER T
distance2	./glm/gtx/norm.inl	/^	GLM_FUNC_QUALIFIER T distance2(vec<L, T, Q> const& p0, vec<L, T, Q> const& p1)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER T
dmat2	./glm/ext/matrix_double2x2.hpp	/^	typedef mat<2, 2, double, defaultp>		dmat2;$/;"	t	namespace:glm	typeref:typename:mat<2,2,double,defaultp>
dmat2	./glm/fwd.hpp	/^	typedef mat<2, 2, f64, defaultp>	dmat2;$/;"	t	namespace:glm	typeref:typename:mat<2,2,f64,defaultp>
dmat2x2	./glm/ext/matrix_double2x2.hpp	/^	typedef mat<2, 2, double, defaultp>		dmat2x2;$/;"	t	namespace:glm	typeref:typename:mat<2,2,double,defaultp>
dmat2x2	./glm/fwd.hpp	/^	typedef mat<2, 2, double, defaultp>	dmat2x2;$/;"	t	namespace:glm	typeref:typename:mat<2,2,double,defaultp>
dmat2x3	./glm/ext/matrix_double2x3.hpp	/^	typedef mat<2, 3, double, defaultp>		dmat2x3;$/;"	t	namespace:glm	typeref:typename:mat<2,3,double,defaultp>
dmat2x3	./glm/fwd.hpp	/^	typedef mat<2, 3, double, defaultp>	dmat2x3;$/;"	t	namespace:glm	typeref:typename:mat<2,3,double,defaultp>
dmat2x4	./glm/ext/matrix_double2x4.hpp	/^	typedef mat<2, 4, double, defaultp>		dmat2x4;$/;"	t	namespace:glm	typeref:typename:mat<2,4,double,defaultp>
dmat2x4	./glm/fwd.hpp	/^	typedef mat<2, 4, double, defaultp>	dmat2x4;$/;"	t	namespace:glm	typeref:typename:mat<2,4,double,defaultp>
dmat3	./glm/ext/matrix_double3x3.hpp	/^	typedef mat<3, 3, double, defaultp>		dmat3;$/;"	t	namespace:glm	typeref:typename:mat<3,3,double,defaultp>
dmat3	./glm/fwd.hpp	/^	typedef mat<3, 3, f64, defaultp>	dmat3;$/;"	t	namespace:glm	typeref:typename:mat<3,3,f64,defaultp>
dmat3x2	./glm/ext/matrix_double3x2.hpp	/^	typedef mat<3, 2, double, defaultp>		dmat3x2;$/;"	t	namespace:glm	typeref:typename:mat<3,2,double,defaultp>
dmat3x2	./glm/fwd.hpp	/^	typedef mat<3, 2, double, defaultp>	dmat3x2;$/;"	t	namespace:glm	typeref:typename:mat<3,2,double,defaultp>
dmat3x3	./glm/ext/matrix_double3x3.hpp	/^	typedef mat<3, 3, double, defaultp>		dmat3x3;$/;"	t	namespace:glm	typeref:typename:mat<3,3,double,defaultp>
dmat3x3	./glm/fwd.hpp	/^	typedef mat<3, 3, double, defaultp>	dmat3x3;$/;"	t	namespace:glm	typeref:typename:mat<3,3,double,defaultp>
dmat3x4	./glm/ext/matrix_double3x4.hpp	/^	typedef mat<3, 4, double, defaultp>		dmat3x4;$/;"	t	namespace:glm	typeref:typename:mat<3,4,double,defaultp>
dmat3x4	./glm/fwd.hpp	/^	typedef mat<3, 4, double, defaultp>	dmat3x4;$/;"	t	namespace:glm	typeref:typename:mat<3,4,double,defaultp>
dmat4	./glm/ext/matrix_double4x4.hpp	/^	typedef mat<4, 4, double, defaultp>		dmat4;$/;"	t	namespace:glm	typeref:typename:mat<4,4,double,defaultp>
dmat4	./glm/fwd.hpp	/^	typedef mat<4, 4, f64, defaultp>	dmat4;$/;"	t	namespace:glm	typeref:typename:mat<4,4,f64,defaultp>
dmat4x2	./glm/ext/matrix_double4x2.hpp	/^	typedef mat<4, 2, double, defaultp>		dmat4x2;$/;"	t	namespace:glm	typeref:typename:mat<4,2,double,defaultp>
dmat4x2	./glm/fwd.hpp	/^	typedef mat<4, 2, double, defaultp>	dmat4x2;$/;"	t	namespace:glm	typeref:typename:mat<4,2,double,defaultp>
dmat4x3	./glm/ext/matrix_double4x3.hpp	/^	typedef mat<4, 3, double, defaultp>		dmat4x3;$/;"	t	namespace:glm	typeref:typename:mat<4,3,double,defaultp>
dmat4x3	./glm/fwd.hpp	/^	typedef mat<4, 3, double, defaultp>	dmat4x3;$/;"	t	namespace:glm	typeref:typename:mat<4,3,double,defaultp>
dmat4x4	./glm/ext/matrix_double4x4.hpp	/^	typedef mat<4, 4, double, defaultp>		dmat4x4;$/;"	t	namespace:glm	typeref:typename:mat<4,4,double,defaultp>
dmat4x4	./glm/fwd.hpp	/^	typedef mat<4, 4, double, defaultp>	dmat4x4;$/;"	t	namespace:glm	typeref:typename:mat<4,4,double,defaultp>
dot	./glm/detail/func_geometric.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR T dot(T x, T y)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR T
dot	./glm/detail/func_geometric.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR T dot(vec<L, T, Q> const& x, vec<L, T, Q> const& y)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR T
dot	./glm/ext/quaternion_geometric.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR T dot(qua<T, Q> const& x, qua<T, Q> const& y)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR T
double1	./glm/gtx/compatibility.hpp	/^	typedef double						double1;		\/\/!< \\brief double-qualifier floating-point vector with 1 comp/;"	t	namespace:glm	typeref:typename:double
double1x1	./glm/gtx/compatibility.hpp	/^	typedef double						double1x1;		\/\/!< \\brief double-qualifier floating-point matrix with 1 co/;"	t	namespace:glm	typeref:typename:double
double2	./glm/gtx/compatibility.hpp	/^	typedef vec<2, double, highp>		double2;		\/\/!< \\brief double-qualifier floating-point vector /;"	t	namespace:glm	typeref:typename:vec<2,double,highp>
double2x2	./glm/gtx/compatibility.hpp	/^	typedef mat<2, 2, double, highp>		double2x2;		\/\/!< \\brief double-qualifier floating-point ma/;"	t	namespace:glm	typeref:typename:mat<2,2,double,highp>
double2x3	./glm/gtx/compatibility.hpp	/^	typedef mat<2, 3, double, highp>		double2x3;		\/\/!< \\brief double-qualifier floating-point ma/;"	t	namespace:glm	typeref:typename:mat<2,3,double,highp>
double2x4	./glm/gtx/compatibility.hpp	/^	typedef mat<2, 4, double, highp>		double2x4;		\/\/!< \\brief double-qualifier floating-point ma/;"	t	namespace:glm	typeref:typename:mat<2,4,double,highp>
double3	./glm/gtx/compatibility.hpp	/^	typedef vec<3, double, highp>		double3;		\/\/!< \\brief double-qualifier floating-point vector /;"	t	namespace:glm	typeref:typename:vec<3,double,highp>
double3x2	./glm/gtx/compatibility.hpp	/^	typedef mat<3, 2, double, highp>		double3x2;		\/\/!< \\brief double-qualifier floating-point ma/;"	t	namespace:glm	typeref:typename:mat<3,2,double,highp>
double3x3	./glm/gtx/compatibility.hpp	/^	typedef mat<3, 3, double, highp>		double3x3;		\/\/!< \\brief double-qualifier floating-point ma/;"	t	namespace:glm	typeref:typename:mat<3,3,double,highp>
double3x4	./glm/gtx/compatibility.hpp	/^	typedef mat<3, 4, double, highp>		double3x4;		\/\/!< \\brief double-qualifier floating-point ma/;"	t	namespace:glm	typeref:typename:mat<3,4,double,highp>
double4	./glm/gtx/compatibility.hpp	/^	typedef vec<4, double, highp>		double4;		\/\/!< \\brief double-qualifier floating-point vector /;"	t	namespace:glm	typeref:typename:vec<4,double,highp>
double4x2	./glm/gtx/compatibility.hpp	/^	typedef mat<4, 2, double, highp>		double4x2;		\/\/!< \\brief double-qualifier floating-point ma/;"	t	namespace:glm	typeref:typename:mat<4,2,double,highp>
double4x3	./glm/gtx/compatibility.hpp	/^	typedef mat<4, 3, double, highp>		double4x3;		\/\/!< \\brief double-qualifier floating-point ma/;"	t	namespace:glm	typeref:typename:mat<4,3,double,highp>
double4x4	./glm/gtx/compatibility.hpp	/^	typedef mat<4, 4, double, highp>		double4x4;		\/\/!< \\brief double-qualifier floating-point ma/;"	t	namespace:glm	typeref:typename:mat<4,4,double,highp>
dquat	./glm/ext/quaternion_double.hpp	/^	typedef qua<double, defaultp>		dquat;$/;"	t	namespace:glm	typeref:typename:qua<double,defaultp>
dquat	./glm/fwd.hpp	/^	typedef qua<double, defaultp>		dquat;$/;"	t	namespace:glm	typeref:typename:qua<double,defaultp>
draw_type	./GL/glxew.h	/^  int draw_type; $/;"	m	struct:__anonb1a929810108	typeref:typename:int
draw_type	./GL/glxew.h	/^typedef struct { int type; unsigned long serial; Bool send_event; Display *display; GLXDrawable /;"	m	struct:__anonb1a929810608	typeref:typename:int
drawable	./GL/glxew.h	/^  GLXDrawable drawable; $/;"	m	struct:__anonb1a929810108	typeref:typename:GLXDrawable
drawable	./GL/glxew.h	/^typedef struct { int type; unsigned long serial; Bool send_event; Display *display; GLXDrawable /;"	m	struct:__anonb1a929810608	typeref:typename:GLXDrawable
dual	./glm/gtx/dual_quaternion.hpp	/^		qua<T, Q> real, dual;$/;"	m	struct:glm::tdualquat	typeref:typename:qua<T,Q>
dual_quat_identity	./glm/gtx/dual_quaternion.inl	/^	GLM_FUNC_QUALIFIER tdualquat<T, Q> dual_quat_identity()$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tdualquat<T,Q>
dualquat	./glm/gtx/dual_quaternion.hpp	/^	typedef highp_fdualquat			dualquat;$/;"	t	namespace:glm	typeref:typename:highp_fdualquat
dualquat	./glm/gtx/dual_quaternion.hpp	/^	typedef lowp_fdualquat			dualquat;$/;"	t	namespace:glm	typeref:typename:lowp_fdualquat
dualquat	./glm/gtx/dual_quaternion.hpp	/^	typedef mediump_fdualquat		dualquat;$/;"	t	namespace:glm	typeref:typename:mediump_fdualquat
dualquat_cast	./glm/gtx/dual_quaternion.inl	/^	GLM_FUNC_QUALIFIER tdualquat<T, Q> dualquat_cast(mat<2, 4, T, Q> const& x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tdualquat<T,Q>
dualquat_cast	./glm/gtx/dual_quaternion.inl	/^	GLM_FUNC_QUALIFIER tdualquat<T, Q> dualquat_cast(mat<3, 4, T, Q> const& x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tdualquat<T,Q>
dup_lane	./glm/simd/neon.h	/^		static inline float32x2_t dup_lane(float32x4_t vsrc, int lane) {$/;"	f	namespace:glm::neon	typeref:typename:float32x2_t
dupq_lane	./glm/simd/neon.h	/^		static inline float32x4_t dupq_lane(float32x4_t vsrc, int lane) {$/;"	f	namespace:glm::neon	typeref:typename:float32x4_t
dvec1	./glm/ext/vector_double1.hpp	/^	typedef vec<1, double, defaultp>		dvec1;$/;"	t	namespace:glm	typeref:typename:vec<1,double,defaultp>
dvec1	./glm/fwd.hpp	/^	typedef vec<1, f64, defaultp>		dvec1;$/;"	t	namespace:glm	typeref:typename:vec<1,f64,defaultp>
dvec2	./glm/ext/vector_double2.hpp	/^	typedef vec<2, double, defaultp>		dvec2;$/;"	t	namespace:glm	typeref:typename:vec<2,double,defaultp>
dvec2	./glm/fwd.hpp	/^	typedef vec<2, f64, defaultp>		dvec2;$/;"	t	namespace:glm	typeref:typename:vec<2,f64,defaultp>
dvec3	./glm/ext/vector_double3.hpp	/^	typedef vec<3, double, defaultp>		dvec3;$/;"	t	namespace:glm	typeref:typename:vec<3,double,defaultp>
dvec3	./glm/fwd.hpp	/^	typedef vec<3, f64, defaultp>		dvec3;$/;"	t	namespace:glm	typeref:typename:vec<3,f64,defaultp>
dvec4	./glm/ext/vector_double4.hpp	/^	typedef vec<4, double, defaultp>		dvec4;$/;"	t	namespace:glm	typeref:typename:vec<4,double,defaultp>
dvec4	./glm/fwd.hpp	/^	typedef vec<4, f64, defaultp>		dvec4;$/;"	t	namespace:glm	typeref:typename:vec<4,f64,defaultp>
dword	./glm/gtx/raw_data.hpp	/^	typedef detail::uint32		dword;$/;"	t	namespace:glm	typeref:typename:detail::uint32
e	./glm/gtc/constants.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR genType e()$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR genType
eglBindAPI	./GL/eglew.h	/^#define eglBindAPI /;"	d
eglBindTexImage	./GL/eglew.h	/^#define eglBindTexImage /;"	d
eglBindWaylandDisplayWL	./GL/eglew.h	/^#define eglBindWaylandDisplayWL /;"	d
eglChooseConfig	./GL/eglew.h	/^#define eglChooseConfig /;"	d
eglClientSignalSyncEXT	./GL/eglew.h	/^#define eglClientSignalSyncEXT /;"	d
eglClientWaitSync	./GL/eglew.h	/^#define eglClientWaitSync /;"	d
eglClientWaitSyncKHR	./GL/eglew.h	/^#define eglClientWaitSyncKHR /;"	d
eglClientWaitSyncNV	./GL/eglew.h	/^#define eglClientWaitSyncNV /;"	d
eglCompositorBindTexWindowEXT	./GL/eglew.h	/^#define eglCompositorBindTexWindowEXT /;"	d
eglCompositorSetContextAttributesEXT	./GL/eglew.h	/^#define eglCompositorSetContextAttributesEXT /;"	d
eglCompositorSetContextListEXT	./GL/eglew.h	/^#define eglCompositorSetContextListEXT /;"	d
eglCompositorSetSizeEXT	./GL/eglew.h	/^#define eglCompositorSetSizeEXT /;"	d
eglCompositorSetWindowAttributesEXT	./GL/eglew.h	/^#define eglCompositorSetWindowAttributesEXT /;"	d
eglCompositorSetWindowListEXT	./GL/eglew.h	/^#define eglCompositorSetWindowListEXT /;"	d
eglCompositorSwapPolicyEXT	./GL/eglew.h	/^#define eglCompositorSwapPolicyEXT /;"	d
eglCopyBuffers	./GL/eglew.h	/^#define eglCopyBuffers /;"	d
eglCreateContext	./GL/eglew.h	/^#define eglCreateContext /;"	d
eglCreateDRMImageMESA	./GL/eglew.h	/^#define eglCreateDRMImageMESA /;"	d
eglCreateFenceSyncNV	./GL/eglew.h	/^#define eglCreateFenceSyncNV /;"	d
eglCreateImage	./GL/eglew.h	/^#define eglCreateImage /;"	d
eglCreateImageKHR	./GL/eglew.h	/^#define eglCreateImageKHR /;"	d
eglCreateNativeClientBufferANDROID	./GL/eglew.h	/^#define eglCreateNativeClientBufferANDROID /;"	d
eglCreatePbufferFromClientBuffer	./GL/eglew.h	/^#define eglCreatePbufferFromClientBuffer /;"	d
eglCreatePbufferSurface	./GL/eglew.h	/^#define eglCreatePbufferSurface /;"	d
eglCreatePixmapSurface	./GL/eglew.h	/^#define eglCreatePixmapSurface /;"	d
eglCreatePixmapSurfaceHI	./GL/eglew.h	/^#define eglCreatePixmapSurfaceHI /;"	d
eglCreatePlatformPixmapSurface	./GL/eglew.h	/^#define eglCreatePlatformPixmapSurface /;"	d
eglCreatePlatformPixmapSurfaceEXT	./GL/eglew.h	/^#define eglCreatePlatformPixmapSurfaceEXT /;"	d
eglCreatePlatformWindowSurface	./GL/eglew.h	/^#define eglCreatePlatformWindowSurface /;"	d
eglCreatePlatformWindowSurfaceEXT	./GL/eglew.h	/^#define eglCreatePlatformWindowSurfaceEXT /;"	d
eglCreateStreamAttribKHR	./GL/eglew.h	/^#define eglCreateStreamAttribKHR /;"	d
eglCreateStreamFromFileDescriptorKHR	./GL/eglew.h	/^#define eglCreateStreamFromFileDescriptorKHR /;"	d
eglCreateStreamKHR	./GL/eglew.h	/^#define eglCreateStreamKHR /;"	d
eglCreateStreamProducerSurfaceKHR	./GL/eglew.h	/^#define eglCreateStreamProducerSurfaceKHR /;"	d
eglCreateStreamSyncNV	./GL/eglew.h	/^#define eglCreateStreamSyncNV /;"	d
eglCreateSync	./GL/eglew.h	/^#define eglCreateSync /;"	d
eglCreateSync64KHR	./GL/eglew.h	/^#define eglCreateSync64KHR /;"	d
eglCreateSyncKHR	./GL/eglew.h	/^#define eglCreateSyncKHR /;"	d
eglCreateWaylandBufferFromImageWL	./GL/eglew.h	/^#define eglCreateWaylandBufferFromImageWL /;"	d
eglCreateWindowSurface	./GL/eglew.h	/^#define eglCreateWindowSurface /;"	d
eglDebugMessageControlKHR	./GL/eglew.h	/^#define eglDebugMessageControlKHR /;"	d
eglDestroyContext	./GL/eglew.h	/^#define eglDestroyContext /;"	d
eglDestroyImage	./GL/eglew.h	/^#define eglDestroyImage /;"	d
eglDestroyImageKHR	./GL/eglew.h	/^#define eglDestroyImageKHR /;"	d
eglDestroyStreamKHR	./GL/eglew.h	/^#define eglDestroyStreamKHR /;"	d
eglDestroySurface	./GL/eglew.h	/^#define eglDestroySurface /;"	d
eglDestroySync	./GL/eglew.h	/^#define eglDestroySync /;"	d
eglDestroySyncKHR	./GL/eglew.h	/^#define eglDestroySyncKHR /;"	d
eglDestroySyncNV	./GL/eglew.h	/^#define eglDestroySyncNV /;"	d
eglDupNativeFenceFDANDROID	./GL/eglew.h	/^#define eglDupNativeFenceFDANDROID /;"	d
eglExportDMABUFImageMESA	./GL/eglew.h	/^#define eglExportDMABUFImageMESA /;"	d
eglExportDMABUFImageQueryMESA	./GL/eglew.h	/^#define eglExportDMABUFImageQueryMESA /;"	d
eglExportDRMImageMESA	./GL/eglew.h	/^#define eglExportDRMImageMESA /;"	d
eglFenceNV	./GL/eglew.h	/^#define eglFenceNV /;"	d
eglGetCompositorTimingANDROID	./GL/eglew.h	/^#define eglGetCompositorTimingANDROID /;"	d
eglGetCompositorTimingSupportedANDROID	./GL/eglew.h	/^#define eglGetCompositorTimingSupportedANDROID /;"	d
eglGetConfigAttrib	./GL/eglew.h	/^#define eglGetConfigAttrib /;"	d
eglGetConfigs	./GL/eglew.h	/^#define eglGetConfigs /;"	d
eglGetCurrentContext	./GL/eglew.h	/^#define eglGetCurrentContext /;"	d
eglGetCurrentDisplay	./GL/eglew.h	/^#define eglGetCurrentDisplay /;"	d
eglGetCurrentSurface	./GL/eglew.h	/^#define eglGetCurrentSurface /;"	d
eglGetDisplay	./GL/eglew.h	/^#define eglGetDisplay /;"	d
eglGetDisplayDriverConfig	./GL/eglew.h	/^#define eglGetDisplayDriverConfig /;"	d
eglGetDisplayDriverName	./GL/eglew.h	/^#define eglGetDisplayDriverName /;"	d
eglGetError	./GL/eglew.h	/^#define eglGetError /;"	d
eglGetFrameTimestampSupportedANDROID	./GL/eglew.h	/^#define eglGetFrameTimestampSupportedANDROID /;"	d
eglGetFrameTimestampsANDROID	./GL/eglew.h	/^#define eglGetFrameTimestampsANDROID /;"	d
eglGetNativeClientBufferANDROID	./GL/eglew.h	/^#define eglGetNativeClientBufferANDROID /;"	d
eglGetNextFrameIdANDROID	./GL/eglew.h	/^#define eglGetNextFrameIdANDROID /;"	d
eglGetOutputLayersEXT	./GL/eglew.h	/^#define eglGetOutputLayersEXT /;"	d
eglGetOutputPortsEXT	./GL/eglew.h	/^#define eglGetOutputPortsEXT /;"	d
eglGetPlatformDisplay	./GL/eglew.h	/^#define eglGetPlatformDisplay /;"	d
eglGetPlatformDisplayEXT	./GL/eglew.h	/^#define eglGetPlatformDisplayEXT /;"	d
eglGetStreamFileDescriptorKHR	./GL/eglew.h	/^#define eglGetStreamFileDescriptorKHR /;"	d
eglGetSyncAttrib	./GL/eglew.h	/^#define eglGetSyncAttrib /;"	d
eglGetSyncAttribKHR	./GL/eglew.h	/^#define eglGetSyncAttribKHR /;"	d
eglGetSyncAttribNV	./GL/eglew.h	/^#define eglGetSyncAttribNV /;"	d
eglGetSystemTimeFrequencyNV	./GL/eglew.h	/^#define eglGetSystemTimeFrequencyNV /;"	d
eglGetSystemTimeNV	./GL/eglew.h	/^#define eglGetSystemTimeNV /;"	d
eglInitialize	./GL/eglew.h	/^#define eglInitialize /;"	d
eglLabelObjectKHR	./GL/eglew.h	/^#define eglLabelObjectKHR /;"	d
eglLockSurfaceKHR	./GL/eglew.h	/^#define eglLockSurfaceKHR /;"	d
eglMakeCurrent	./GL/eglew.h	/^#define eglMakeCurrent /;"	d
eglOutputLayerAttribEXT	./GL/eglew.h	/^#define eglOutputLayerAttribEXT /;"	d
eglOutputPortAttribEXT	./GL/eglew.h	/^#define eglOutputPortAttribEXT /;"	d
eglPostSubBufferNV	./GL/eglew.h	/^#define eglPostSubBufferNV /;"	d
eglPresentationTimeANDROID	./GL/eglew.h	/^#define eglPresentationTimeANDROID /;"	d
eglQueryAPI	./GL/eglew.h	/^#define eglQueryAPI /;"	d
eglQueryContext	./GL/eglew.h	/^#define eglQueryContext /;"	d
eglQueryDebugKHR	./GL/eglew.h	/^#define eglQueryDebugKHR /;"	d
eglQueryDeviceAttribEXT	./GL/eglew.h	/^#define eglQueryDeviceAttribEXT /;"	d
eglQueryDeviceStringEXT	./GL/eglew.h	/^#define eglQueryDeviceStringEXT /;"	d
eglQueryDevicesEXT	./GL/eglew.h	/^#define eglQueryDevicesEXT /;"	d
eglQueryDisplayAttribEXT	./GL/eglew.h	/^#define eglQueryDisplayAttribEXT /;"	d
eglQueryDisplayAttribKHR	./GL/eglew.h	/^#define eglQueryDisplayAttribKHR /;"	d
eglQueryDisplayAttribNV	./GL/eglew.h	/^#define eglQueryDisplayAttribNV /;"	d
eglQueryDmaBufFormatsEXT	./GL/eglew.h	/^#define eglQueryDmaBufFormatsEXT /;"	d
eglQueryDmaBufModifiersEXT	./GL/eglew.h	/^#define eglQueryDmaBufModifiersEXT /;"	d
eglQueryNativeDisplayNV	./GL/eglew.h	/^#define eglQueryNativeDisplayNV /;"	d
eglQueryNativePixmapNV	./GL/eglew.h	/^#define eglQueryNativePixmapNV /;"	d
eglQueryNativeWindowNV	./GL/eglew.h	/^#define eglQueryNativeWindowNV /;"	d
eglQueryOutputLayerAttribEXT	./GL/eglew.h	/^#define eglQueryOutputLayerAttribEXT /;"	d
eglQueryOutputLayerStringEXT	./GL/eglew.h	/^#define eglQueryOutputLayerStringEXT /;"	d
eglQueryOutputPortAttribEXT	./GL/eglew.h	/^#define eglQueryOutputPortAttribEXT /;"	d
eglQueryOutputPortStringEXT	./GL/eglew.h	/^#define eglQueryOutputPortStringEXT /;"	d
eglQueryStreamAttribKHR	./GL/eglew.h	/^#define eglQueryStreamAttribKHR /;"	d
eglQueryStreamKHR	./GL/eglew.h	/^#define eglQueryStreamKHR /;"	d
eglQueryStreamMetadataNV	./GL/eglew.h	/^#define eglQueryStreamMetadataNV /;"	d
eglQueryStreamTimeKHR	./GL/eglew.h	/^#define eglQueryStreamTimeKHR /;"	d
eglQueryStreamu64KHR	./GL/eglew.h	/^#define eglQueryStreamu64KHR /;"	d
eglQueryString	./GL/eglew.h	/^#define eglQueryString /;"	d
eglQuerySurface	./GL/eglew.h	/^#define eglQuerySurface /;"	d
eglQuerySurface64KHR	./GL/eglew.h	/^#define eglQuerySurface64KHR /;"	d
eglQuerySurfacePointerANGLE	./GL/eglew.h	/^#define eglQuerySurfacePointerANGLE /;"	d
eglQueryWaylandBufferWL	./GL/eglew.h	/^#define eglQueryWaylandBufferWL /;"	d
eglReleaseTexImage	./GL/eglew.h	/^#define eglReleaseTexImage /;"	d
eglReleaseThread	./GL/eglew.h	/^#define eglReleaseThread /;"	d
eglResetStreamNV	./GL/eglew.h	/^#define eglResetStreamNV /;"	d
eglSetBlobCacheFuncsANDROID	./GL/eglew.h	/^#define eglSetBlobCacheFuncsANDROID /;"	d
eglSetDamageRegionKHR	./GL/eglew.h	/^#define eglSetDamageRegionKHR /;"	d
eglSetStreamAttribKHR	./GL/eglew.h	/^#define eglSetStreamAttribKHR /;"	d
eglSetStreamMetadataNV	./GL/eglew.h	/^#define eglSetStreamMetadataNV /;"	d
eglSignalSyncKHR	./GL/eglew.h	/^#define eglSignalSyncKHR /;"	d
eglSignalSyncNV	./GL/eglew.h	/^#define eglSignalSyncNV /;"	d
eglStreamAttribKHR	./GL/eglew.h	/^#define eglStreamAttribKHR /;"	d
eglStreamConsumerAcquireAttribKHR	./GL/eglew.h	/^#define eglStreamConsumerAcquireAttribKHR /;"	d
eglStreamConsumerAcquireKHR	./GL/eglew.h	/^#define eglStreamConsumerAcquireKHR /;"	d
eglStreamConsumerGLTextureExternalAttribsNV	./GL/eglew.h	/^#define eglStreamConsumerGLTextureExternalAttribsNV /;"	d
eglStreamConsumerGLTextureExternalKHR	./GL/eglew.h	/^#define eglStreamConsumerGLTextureExternalKHR /;"	d
eglStreamConsumerOutputEXT	./GL/eglew.h	/^#define eglStreamConsumerOutputEXT /;"	d
eglStreamConsumerReleaseAttribKHR	./GL/eglew.h	/^#define eglStreamConsumerReleaseAttribKHR /;"	d
eglStreamConsumerReleaseKHR	./GL/eglew.h	/^#define eglStreamConsumerReleaseKHR /;"	d
eglStreamFlushNV	./GL/eglew.h	/^#define eglStreamFlushNV /;"	d
eglSurfaceAttrib	./GL/eglew.h	/^#define eglSurfaceAttrib /;"	d
eglSwapBuffers	./GL/eglew.h	/^#define eglSwapBuffers /;"	d
eglSwapBuffersRegion2NOK	./GL/eglew.h	/^#define eglSwapBuffersRegion2NOK /;"	d
eglSwapBuffersRegionNOK	./GL/eglew.h	/^#define eglSwapBuffersRegionNOK /;"	d
eglSwapBuffersWithDamageEXT	./GL/eglew.h	/^#define eglSwapBuffersWithDamageEXT /;"	d
eglSwapBuffersWithDamageKHR	./GL/eglew.h	/^#define eglSwapBuffersWithDamageKHR /;"	d
eglSwapInterval	./GL/eglew.h	/^#define eglSwapInterval /;"	d
eglTerminate	./GL/eglew.h	/^#define eglTerminate /;"	d
eglUnbindWaylandDisplayWL	./GL/eglew.h	/^#define eglUnbindWaylandDisplayWL /;"	d
eglUnlockSurfaceKHR	./GL/eglew.h	/^#define eglUnlockSurfaceKHR /;"	d
eglUnsignalSyncEXT	./GL/eglew.h	/^#define eglUnsignalSyncEXT /;"	d
eglWaitClient	./GL/eglew.h	/^#define eglWaitClient /;"	d
eglWaitGL	./GL/eglew.h	/^#define eglWaitGL /;"	d
eglWaitNative	./GL/eglew.h	/^#define eglWaitNative /;"	d
eglWaitSync	./GL/eglew.h	/^#define eglWaitSync /;"	d
eglWaitSyncKHR	./GL/eglew.h	/^#define eglWaitSyncKHR /;"	d
elasticEaseIn	./glm/gtx/easing.inl	/^	GLM_FUNC_QUALIFIER genType elasticEaseIn(genType const& a)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genType
elasticEaseInOut	./glm/gtx/easing.inl	/^	GLM_FUNC_QUALIFIER genType elasticEaseInOut(genType const& a)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genType
elasticEaseOut	./glm/gtx/easing.inl	/^	GLM_FUNC_QUALIFIER genType elasticEaseOut(genType const& a)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genType
elem	./glm/detail/_swizzle.hpp	/^		GLM_FUNC_QUALIFIER T const& elem(int i) const{ return (reinterpret_cast<const T*>(_buffer))[i]/;"	f	struct:glm::detail::_swizzle_base0	typeref:typename:GLM_FUNC_QUALIFIER T const &
elem	./glm/detail/_swizzle.hpp	/^		GLM_FUNC_QUALIFIER T& elem(int i){ return (reinterpret_cast<T*>(_buffer))[i]; }$/;"	f	struct:glm::detail::_swizzle_base0	typeref:typename:GLM_FUNC_QUALIFIER T &
end	./glm/gtx/range.hpp	/^	inline typename genType::value_type * end(genType& v)$/;"	f	namespace:glm	typeref:typename:genType::value_type *
end	./glm/gtx/range.hpp	/^	inline typename genType::value_type const * end(genType const& v)$/;"	f	namespace:glm	typeref:typename:genType::value_type const *
epsilon	./glm/ext/scalar_constants.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR genType epsilon()$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR genType
epsilonEqual	./glm/gtc/epsilon.inl	/^	GLM_FUNC_QUALIFIER bool epsilonEqual$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER bool
epsilonEqual	./glm/gtc/epsilon.inl	/^	GLM_FUNC_QUALIFIER vec<4, bool, Q> epsilonEqual(qua<T, Q> const& x, qua<T, Q> const& y, T const/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<4,bool,Q>
epsilonEqual	./glm/gtc/epsilon.inl	/^	GLM_FUNC_QUALIFIER vec<L, bool, Q> epsilonEqual(vec<L, T, Q> const& x, vec<L, T, Q> const& y, T/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<L,bool,Q>
epsilonEqual	./glm/gtc/epsilon.inl	/^	GLM_FUNC_QUALIFIER vec<L, bool, Q> epsilonEqual(vec<L, T, Q> const& x, vec<L, T, Q> const& y, v/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<L,bool,Q>
epsilonNotEqual	./glm/gtc/epsilon.inl	/^	GLM_FUNC_QUALIFIER bool epsilonNotEqual(double const& x, double const& y, double const& epsilon/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER bool
epsilonNotEqual	./glm/gtc/epsilon.inl	/^	GLM_FUNC_QUALIFIER bool epsilonNotEqual(float const& x, float const& y, float const& epsilon)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER bool
epsilonNotEqual	./glm/gtc/epsilon.inl	/^	GLM_FUNC_QUALIFIER vec<4, bool, Q> epsilonNotEqual(qua<T, Q> const& x, qua<T, Q> const& y, T co/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<4,bool,Q>
epsilonNotEqual	./glm/gtc/epsilon.inl	/^	GLM_FUNC_QUALIFIER vec<L, bool, Q> epsilonNotEqual(vec<L, T, Q> const& x, vec<L, T, Q> const& y/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<L,bool,Q>
equal	./glm/detail/func_vector_relational.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<L, bool, Q> equal(vec<L, T, Q> const& x, vec<L, T, Q> cons/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<L,bool,Q>
equal	./glm/ext/matrix_relational.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<C, bool, Q> equal(mat<C, R, T, Q> const& a, mat<C, R, T, Q/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<C,bool,Q>
equal	./glm/ext/quaternion_relational.inl	/^	GLM_FUNC_QUALIFIER vec<4, bool, Q> equal(qua<T, Q> const& x, qua<T, Q> const& y)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<4,bool,Q>
equal	./glm/ext/quaternion_relational.inl	/^	GLM_FUNC_QUALIFIER vec<4, bool, Q> equal(qua<T, Q> const& x, qua<T, Q> const& y, T epsilon)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<4,bool,Q>
equal	./glm/ext/scalar_relational.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR bool equal(genType const& x, genType const& y, genType const& /;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR bool
equal	./glm/ext/scalar_relational.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR bool equal(genType const& x, genType const& y, int MaxULPs)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR bool
equal	./glm/ext/vector_relational.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<L, bool, Q> equal(vec<L, T, Q> const& x, vec<L, T, Q> cons/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<L,bool,Q>
equal	./glm/gtx/scalar_relational.inl	/^	GLM_FUNC_QUALIFIER bool equal$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER bool
euclidean	./glm/gtx/polar_coordinates.inl	/^	GLM_FUNC_QUALIFIER vec<3, T, Q> euclidean$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<3,T,Q>
euler	./glm/gtc/constants.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR genType euler()$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR genType
eulerAngleX	./glm/gtx/euler_angles.inl	/^	GLM_FUNC_QUALIFIER mat<4, 4, T, defaultp> eulerAngleX$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER mat<4,4,T,defaultp>
eulerAngleXY	./glm/gtx/euler_angles.inl	/^	GLM_FUNC_QUALIFIER mat<4, 4, T, defaultp> eulerAngleXY$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER mat<4,4,T,defaultp>
eulerAngleXYX	./glm/gtx/euler_angles.inl	/^	GLM_FUNC_QUALIFIER mat<4, 4, T, defaultp> eulerAngleXYX$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER mat<4,4,T,defaultp>
eulerAngleXYZ	./glm/gtx/euler_angles.inl	/^    GLM_FUNC_QUALIFIER mat<4, 4, T, defaultp> eulerAngleXYZ$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER mat<4,4,T,defaultp>
eulerAngleXZ	./glm/gtx/euler_angles.inl	/^	GLM_FUNC_QUALIFIER mat<4, 4, T, defaultp> eulerAngleXZ$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER mat<4,4,T,defaultp>
eulerAngleXZX	./glm/gtx/euler_angles.inl	/^	GLM_FUNC_QUALIFIER mat<4, 4, T, defaultp> eulerAngleXZX$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER mat<4,4,T,defaultp>
eulerAngleXZY	./glm/gtx/euler_angles.inl	/^	GLM_FUNC_QUALIFIER mat<4, 4, T, defaultp> eulerAngleXZY$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER mat<4,4,T,defaultp>
eulerAngleY	./glm/gtx/euler_angles.inl	/^	GLM_FUNC_QUALIFIER mat<4, 4, T, defaultp> eulerAngleY$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER mat<4,4,T,defaultp>
eulerAngleYX	./glm/gtx/euler_angles.inl	/^	GLM_FUNC_QUALIFIER mat<4, 4, T, defaultp> eulerAngleYX$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER mat<4,4,T,defaultp>
eulerAngleYXY	./glm/gtx/euler_angles.inl	/^	GLM_FUNC_QUALIFIER mat<4, 4, T, defaultp> eulerAngleYXY$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER mat<4,4,T,defaultp>
eulerAngleYXZ	./glm/gtx/euler_angles.inl	/^	GLM_FUNC_QUALIFIER mat<4, 4, T, defaultp> eulerAngleYXZ$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER mat<4,4,T,defaultp>
eulerAngleYZ	./glm/gtx/euler_angles.inl	/^	GLM_FUNC_QUALIFIER mat<4, 4, T, defaultp> eulerAngleYZ$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER mat<4,4,T,defaultp>
eulerAngleYZX	./glm/gtx/euler_angles.inl	/^	GLM_FUNC_QUALIFIER mat<4, 4, T, defaultp> eulerAngleYZX$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER mat<4,4,T,defaultp>
eulerAngleYZY	./glm/gtx/euler_angles.inl	/^	GLM_FUNC_QUALIFIER mat<4, 4, T, defaultp> eulerAngleYZY$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER mat<4,4,T,defaultp>
eulerAngleZ	./glm/gtx/euler_angles.inl	/^	GLM_FUNC_QUALIFIER mat<4, 4, T, defaultp> eulerAngleZ$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER mat<4,4,T,defaultp>
eulerAngleZX	./glm/gtx/euler_angles.inl	/^	GLM_FUNC_QUALIFIER mat<4, 4, T, defaultp> eulerAngleZX$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER mat<4,4,T,defaultp>
eulerAngleZXY	./glm/gtx/euler_angles.inl	/^	GLM_FUNC_QUALIFIER mat<4, 4, T, defaultp> eulerAngleZXY$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER mat<4,4,T,defaultp>
eulerAngleZXZ	./glm/gtx/euler_angles.inl	/^	GLM_FUNC_QUALIFIER mat<4, 4, T, defaultp> eulerAngleZXZ$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER mat<4,4,T,defaultp>
eulerAngleZY	./glm/gtx/euler_angles.inl	/^	GLM_FUNC_QUALIFIER mat<4, 4, T, defaultp> eulerAngleZY$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER mat<4,4,T,defaultp>
eulerAngleZYX	./glm/gtx/euler_angles.inl	/^	GLM_FUNC_QUALIFIER mat<4, 4, T, defaultp> eulerAngleZYX$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER mat<4,4,T,defaultp>
eulerAngleZYZ	./glm/gtx/euler_angles.inl	/^	GLM_FUNC_QUALIFIER mat<4, 4, T, defaultp> eulerAngleZYZ$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER mat<4,4,T,defaultp>
eulerAngles	./glm/gtc/quaternion.inl	/^	GLM_FUNC_QUALIFIER vec<3, T, Q> eulerAngles(qua<T, Q> const& x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<3,T,Q>
event_type	./GL/glxew.h	/^  int event_type; $/;"	m	struct:__anonb1a929810108	typeref:typename:int
event_type	./GL/glxew.h	/^typedef struct { int type; unsigned long serial; Bool send_event; Display *display; GLXDrawable /;"	m	struct:__anonb1a929810608	typeref:typename:int
exp	./glm/detail/func_exponential.inl	/^	GLM_FUNC_QUALIFIER vec<L, T, Q> exp(vec<L, T, Q> const& x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<L,T,Q>
exp	./glm/ext/quaternion_exponential.inl	/^	GLM_FUNC_QUALIFIER qua<T, Q> exp(qua<T, Q> const& q)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER qua<T,Q>
exp2	./glm/detail/func_exponential.inl	/^	GLM_FUNC_QUALIFIER genType exp2(genType x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genType
exp2	./glm/detail/func_exponential.inl	/^	GLM_FUNC_QUALIFIER vec<L, T, Q> exp2(vec<L, T, Q> const& x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<L,T,Q>
exponent	./glm/detail/type_float.hpp	/^		GLM_CONSTEXPR int_type exponent() const { return (i >> 23) & ((1 << 8) - 1); }$/;"	f	union:glm::detail::float_t	typeref:typename:GLM_CONSTEXPR int_type
exponent	./glm/detail/type_float.hpp	/^		GLM_CONSTEXPR int_type exponent() const { return (i >> 52) & ((int_type(1) << 11) - 1); }$/;"	f	union:glm::detail::float_t	typeref:typename:GLM_CONSTEXPR int_type
exponentialEaseIn	./glm/gtx/easing.inl	/^	GLM_FUNC_QUALIFIER genType exponentialEaseIn(genType const& a)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genType
exponentialEaseInOut	./glm/gtx/easing.inl	/^	GLM_FUNC_QUALIFIER genType exponentialEaseInOut(genType const& a)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genType
exponentialEaseOut	./glm/gtx/easing.inl	/^	GLM_FUNC_QUALIFIER genType exponentialEaseOut(genType const& a)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genType
extend	./glm/gtx/extend.inl	/^	GLM_FUNC_QUALIFIER genType extend$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genType
extend	./glm/gtx/extend.inl	/^	GLM_FUNC_QUALIFIER vec<2, T, Q> extend$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<2,T,Q>
extend	./glm/gtx/extend.inl	/^	GLM_FUNC_QUALIFIER vec<3, T, Q> extend$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<3,T,Q>
extend	./glm/gtx/extend.inl	/^	GLM_FUNC_QUALIFIER vec<4, T, Q> extend$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<4,T,Q>
extractEulerAngleXYX	./glm/gtx/euler_angles.inl	/^	GLM_FUNC_QUALIFIER void extractEulerAngleXYX(mat<4, 4, T, defaultp> const & M,$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER void
extractEulerAngleXYZ	./glm/gtx/euler_angles.inl	/^	GLM_FUNC_QUALIFIER void extractEulerAngleXYZ(mat<4, 4, T, defaultp> const& M,$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER void
extractEulerAngleXZX	./glm/gtx/euler_angles.inl	/^	GLM_FUNC_QUALIFIER void extractEulerAngleXZX(mat<4, 4, T, defaultp> const & M,$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER void
extractEulerAngleXZY	./glm/gtx/euler_angles.inl	/^	GLM_FUNC_QUALIFIER void extractEulerAngleXZY(mat<4, 4, T, defaultp> const & M,$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER void
extractEulerAngleYXY	./glm/gtx/euler_angles.inl	/^	GLM_FUNC_QUALIFIER void extractEulerAngleYXY(mat<4, 4, T, defaultp> const & M,$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER void
extractEulerAngleYXZ	./glm/gtx/euler_angles.inl	/^	GLM_FUNC_QUALIFIER void extractEulerAngleYXZ(mat<4, 4, T, defaultp> const & M,$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER void
extractEulerAngleYZX	./glm/gtx/euler_angles.inl	/^	GLM_FUNC_QUALIFIER void extractEulerAngleYZX(mat<4, 4, T, defaultp> const & M,$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER void
extractEulerAngleYZY	./glm/gtx/euler_angles.inl	/^	GLM_FUNC_QUALIFIER void extractEulerAngleYZY(mat<4, 4, T, defaultp> const & M,$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER void
extractEulerAngleZXY	./glm/gtx/euler_angles.inl	/^	GLM_FUNC_QUALIFIER void extractEulerAngleZXY(mat<4, 4, T, defaultp> const & M,$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER void
extractEulerAngleZXZ	./glm/gtx/euler_angles.inl	/^	GLM_FUNC_QUALIFIER void extractEulerAngleZXZ(mat<4, 4, T, defaultp> const & M,$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER void
extractEulerAngleZYX	./glm/gtx/euler_angles.inl	/^	GLM_FUNC_QUALIFIER void extractEulerAngleZYX(mat<4, 4, T, defaultp> const & M,$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER void
extractEulerAngleZYZ	./glm/gtx/euler_angles.inl	/^	GLM_FUNC_QUALIFIER void extractEulerAngleZYZ(mat<4, 4, T, defaultp> const & M,$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER void
extractMatrixRotation	./glm/gtx/matrix_interpolation.inl	/^	GLM_FUNC_QUALIFIER mat<4, 4, T, Q> extractMatrixRotation(mat<4, 4, T, Q> const& m)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER mat<4,4,T,Q>
extractRealComponent	./glm/gtx/quaternion.inl	/^	GLM_FUNC_QUALIFIER T extractRealComponent(qua<T, Q> const& q)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER T
f	./glm/detail/type_float.hpp	/^		float_type f;$/;"	m	union:glm::detail::float_t	typeref:typename:float_type
f	./glm/detail/type_half.inl	/^		float f;$/;"	m	union:glm::detail::uif32	typeref:typename:float	file:
f32	./glm/fwd.hpp	/^	typedef float					f32;$/;"	t	namespace:glm	typeref:typename:float
f32	./glm/gtc/type_precision.hpp	/^	typedef float32 f32;$/;"	t	namespace:glm	typeref:typename:float32
f32	./glm/gtc/type_precision.hpp	/^	typedef highp_float32_t f32;$/;"	t	namespace:glm	typeref:typename:highp_float32_t
f32	./glm/gtc/type_precision.hpp	/^	typedef lowp_f32 f32;$/;"	t	namespace:glm	typeref:typename:lowp_f32
f32	./glm/gtc/type_precision.hpp	/^	typedef mediump_float32 f32;$/;"	t	namespace:glm	typeref:typename:mediump_float32
f32mat1	./glm/gtx/number_precision.hpp	/^	typedef f32			f32mat1;	\/\/!< \\brief Single-qualifier floating-point scalar. (from GLM_GTX_num/;"	t	namespace:glm	typeref:typename:f32
f32mat1x1	./glm/gtx/number_precision.hpp	/^	typedef f32			f32mat1x1;	\/\/!< \\brief Single-qualifier floating-point scalar. (from GLM_GTX_n/;"	t	namespace:glm	typeref:typename:f32
f32mat2	./glm/fwd.hpp	/^	typedef mat<2, 2, f32, defaultp>	f32mat2;$/;"	t	namespace:glm	typeref:typename:mat<2,2,f32,defaultp>
f32mat2	./glm/gtc/type_precision.hpp	/^	typedef mat<2, 2, f32, defaultp> f32mat2;$/;"	t	namespace:glm	typeref:typename:mat<2,2,f32,defaultp>
f32mat2x2	./glm/fwd.hpp	/^	typedef mat<2, 2, f32, defaultp>	f32mat2x2;$/;"	t	namespace:glm	typeref:typename:mat<2,2,f32,defaultp>
f32mat2x2	./glm/gtc/type_precision.hpp	/^	typedef mat<2, 2, f32, defaultp> f32mat2x2;$/;"	t	namespace:glm	typeref:typename:mat<2,2,f32,defaultp>
f32mat2x3	./glm/fwd.hpp	/^	typedef mat<2, 3, f32, defaultp>	f32mat2x3;$/;"	t	namespace:glm	typeref:typename:mat<2,3,f32,defaultp>
f32mat2x3	./glm/gtc/type_precision.hpp	/^	typedef mat<2, 3, f32, defaultp> f32mat2x3;$/;"	t	namespace:glm	typeref:typename:mat<2,3,f32,defaultp>
f32mat2x4	./glm/fwd.hpp	/^	typedef mat<2, 4, f32, defaultp>	f32mat2x4;$/;"	t	namespace:glm	typeref:typename:mat<2,4,f32,defaultp>
f32mat2x4	./glm/gtc/type_precision.hpp	/^	typedef mat<2, 4, f32, defaultp> f32mat2x4;$/;"	t	namespace:glm	typeref:typename:mat<2,4,f32,defaultp>
f32mat3	./glm/fwd.hpp	/^	typedef mat<3, 3, f32, defaultp>	f32mat3;$/;"	t	namespace:glm	typeref:typename:mat<3,3,f32,defaultp>
f32mat3	./glm/gtc/type_precision.hpp	/^	typedef mat<3, 3, f32, defaultp> f32mat3;$/;"	t	namespace:glm	typeref:typename:mat<3,3,f32,defaultp>
f32mat3x2	./glm/fwd.hpp	/^	typedef mat<3, 2, f32, defaultp>	f32mat3x2;$/;"	t	namespace:glm	typeref:typename:mat<3,2,f32,defaultp>
f32mat3x2	./glm/gtc/type_precision.hpp	/^	typedef mat<3, 2, f32, defaultp> f32mat3x2;$/;"	t	namespace:glm	typeref:typename:mat<3,2,f32,defaultp>
f32mat3x3	./glm/fwd.hpp	/^	typedef mat<3, 3, f32, defaultp>	f32mat3x3;$/;"	t	namespace:glm	typeref:typename:mat<3,3,f32,defaultp>
f32mat3x3	./glm/gtc/type_precision.hpp	/^	typedef mat<3, 3, f32, defaultp> f32mat3x3;$/;"	t	namespace:glm	typeref:typename:mat<3,3,f32,defaultp>
f32mat3x4	./glm/fwd.hpp	/^	typedef mat<3, 4, f32, defaultp>	f32mat3x4;$/;"	t	namespace:glm	typeref:typename:mat<3,4,f32,defaultp>
f32mat3x4	./glm/gtc/type_precision.hpp	/^	typedef mat<3, 4, f32, defaultp> f32mat3x4;$/;"	t	namespace:glm	typeref:typename:mat<3,4,f32,defaultp>
f32mat4	./glm/fwd.hpp	/^	typedef mat<4, 4, f32, defaultp>	f32mat4;$/;"	t	namespace:glm	typeref:typename:mat<4,4,f32,defaultp>
f32mat4	./glm/gtc/type_precision.hpp	/^	typedef mat<4, 4, f32, defaultp> f32mat4;$/;"	t	namespace:glm	typeref:typename:mat<4,4,f32,defaultp>
f32mat4x2	./glm/fwd.hpp	/^	typedef mat<4, 2, f32, defaultp>	f32mat4x2;$/;"	t	namespace:glm	typeref:typename:mat<4,2,f32,defaultp>
f32mat4x2	./glm/gtc/type_precision.hpp	/^	typedef mat<4, 2, f32, defaultp> f32mat4x2;$/;"	t	namespace:glm	typeref:typename:mat<4,2,f32,defaultp>
f32mat4x3	./glm/fwd.hpp	/^	typedef mat<4, 3, f32, defaultp>	f32mat4x3;$/;"	t	namespace:glm	typeref:typename:mat<4,3,f32,defaultp>
f32mat4x3	./glm/gtc/type_precision.hpp	/^	typedef mat<4, 3, f32, defaultp> f32mat4x3;$/;"	t	namespace:glm	typeref:typename:mat<4,3,f32,defaultp>
f32mat4x4	./glm/fwd.hpp	/^	typedef mat<4, 4, f32, defaultp>	f32mat4x4;$/;"	t	namespace:glm	typeref:typename:mat<4,4,f32,defaultp>
f32mat4x4	./glm/gtc/type_precision.hpp	/^	typedef mat<4, 4, f32, defaultp> f32mat4x4;$/;"	t	namespace:glm	typeref:typename:mat<4,4,f32,defaultp>
f32quat	./glm/fwd.hpp	/^	typedef qua<f32, defaultp>			f32quat;$/;"	t	namespace:glm	typeref:typename:qua<f32,defaultp>
f32quat	./glm/gtc/type_precision.hpp	/^	typedef qua<f32, defaultp> f32quat;$/;"	t	namespace:glm	typeref:typename:qua<f32,defaultp>
f32vec1	./glm/fwd.hpp	/^	typedef vec<1, f32, defaultp>		f32vec1;$/;"	t	namespace:glm	typeref:typename:vec<1,f32,defaultp>
f32vec1	./glm/gtc/type_precision.hpp	/^	typedef vec<1, f32, defaultp> f32vec1;$/;"	t	namespace:glm	typeref:typename:vec<1,f32,defaultp>
f32vec2	./glm/fwd.hpp	/^	typedef vec<2, f32, defaultp>		f32vec2;$/;"	t	namespace:glm	typeref:typename:vec<2,f32,defaultp>
f32vec2	./glm/gtc/type_precision.hpp	/^	typedef vec<2, f32, defaultp> f32vec2;$/;"	t	namespace:glm	typeref:typename:vec<2,f32,defaultp>
f32vec3	./glm/fwd.hpp	/^	typedef vec<3, f32, defaultp>		f32vec3;$/;"	t	namespace:glm	typeref:typename:vec<3,f32,defaultp>
f32vec3	./glm/gtc/type_precision.hpp	/^	typedef vec<3, f32, defaultp> f32vec3;$/;"	t	namespace:glm	typeref:typename:vec<3,f32,defaultp>
f32vec4	./glm/fwd.hpp	/^	typedef vec<4, f32, defaultp>		f32vec4;$/;"	t	namespace:glm	typeref:typename:vec<4,f32,defaultp>
f32vec4	./glm/gtc/type_precision.hpp	/^	typedef vec<4, f32, defaultp> f32vec4;$/;"	t	namespace:glm	typeref:typename:vec<4,f32,defaultp>
f64	./glm/fwd.hpp	/^	typedef double					f64;$/;"	t	namespace:glm	typeref:typename:double
f64	./glm/gtc/type_precision.hpp	/^		typedef float64 f64;$/;"	t	namespace:glm	typeref:typename:float64
f64	./glm/gtc/type_precision.hpp	/^	typedef highp_float64_t f64;$/;"	t	namespace:glm	typeref:typename:highp_float64_t
f64	./glm/gtc/type_precision.hpp	/^	typedef lowp_f64 f64;$/;"	t	namespace:glm	typeref:typename:lowp_f64
f64	./glm/gtc/type_precision.hpp	/^	typedef mediump_float64 f64;$/;"	t	namespace:glm	typeref:typename:mediump_float64
f64mat1	./glm/gtx/number_precision.hpp	/^	typedef f64			f64mat1;	\/\/!< \\brief Double-qualifier floating-point scalar. (from GLM_GTX_num/;"	t	namespace:glm	typeref:typename:f64
f64mat1x1	./glm/gtx/number_precision.hpp	/^	typedef f64			f64mat1x1;	\/\/!< \\brief Double-qualifier floating-point scalar. (from GLM_GTX_n/;"	t	namespace:glm	typeref:typename:f64
f64mat2	./glm/fwd.hpp	/^	typedef mat<2, 2, f64, defaultp>	f64mat2;$/;"	t	namespace:glm	typeref:typename:mat<2,2,f64,defaultp>
f64mat2	./glm/gtc/type_precision.hpp	/^	typedef mat<2, 2, f64, defaultp> f64mat2;$/;"	t	namespace:glm	typeref:typename:mat<2,2,f64,defaultp>
f64mat2x2	./glm/fwd.hpp	/^	typedef mat<2, 2, f64, defaultp>	f64mat2x2;$/;"	t	namespace:glm	typeref:typename:mat<2,2,f64,defaultp>
f64mat2x2	./glm/gtc/type_precision.hpp	/^	typedef mat<2, 2, f64, defaultp> f64mat2x2;$/;"	t	namespace:glm	typeref:typename:mat<2,2,f64,defaultp>
f64mat2x3	./glm/fwd.hpp	/^	typedef mat<2, 3, f64, defaultp>	f64mat2x3;$/;"	t	namespace:glm	typeref:typename:mat<2,3,f64,defaultp>
f64mat2x3	./glm/gtc/type_precision.hpp	/^	typedef mat<2, 3, f64, defaultp> f64mat2x3;$/;"	t	namespace:glm	typeref:typename:mat<2,3,f64,defaultp>
f64mat2x4	./glm/fwd.hpp	/^	typedef mat<2, 4, f64, defaultp>	f64mat2x4;$/;"	t	namespace:glm	typeref:typename:mat<2,4,f64,defaultp>
f64mat2x4	./glm/gtc/type_precision.hpp	/^	typedef mat<2, 4, f64, defaultp> f64mat2x4;$/;"	t	namespace:glm	typeref:typename:mat<2,4,f64,defaultp>
f64mat3	./glm/fwd.hpp	/^	typedef mat<3, 3, f64, defaultp>	f64mat3;$/;"	t	namespace:glm	typeref:typename:mat<3,3,f64,defaultp>
f64mat3	./glm/gtc/type_precision.hpp	/^	typedef mat<3, 3, f64, defaultp> f64mat3;$/;"	t	namespace:glm	typeref:typename:mat<3,3,f64,defaultp>
f64mat3x2	./glm/fwd.hpp	/^	typedef mat<3, 2, f64, defaultp>	f64mat3x2;$/;"	t	namespace:glm	typeref:typename:mat<3,2,f64,defaultp>
f64mat3x2	./glm/gtc/type_precision.hpp	/^	typedef mat<3, 2, f64, defaultp> f64mat3x2;$/;"	t	namespace:glm	typeref:typename:mat<3,2,f64,defaultp>
f64mat3x3	./glm/fwd.hpp	/^	typedef mat<3, 3, f64, defaultp>	f64mat3x3;$/;"	t	namespace:glm	typeref:typename:mat<3,3,f64,defaultp>
f64mat3x3	./glm/gtc/type_precision.hpp	/^	typedef mat<3, 3, f64, defaultp> f64mat3x3;$/;"	t	namespace:glm	typeref:typename:mat<3,3,f64,defaultp>
f64mat3x4	./glm/fwd.hpp	/^	typedef mat<3, 4, f64, defaultp>	f64mat3x4;$/;"	t	namespace:glm	typeref:typename:mat<3,4,f64,defaultp>
f64mat3x4	./glm/gtc/type_precision.hpp	/^	typedef mat<3, 4, f64, defaultp> f64mat3x4;$/;"	t	namespace:glm	typeref:typename:mat<3,4,f64,defaultp>
f64mat4	./glm/fwd.hpp	/^	typedef mat<4, 4, f64, defaultp>	f64mat4;$/;"	t	namespace:glm	typeref:typename:mat<4,4,f64,defaultp>
f64mat4	./glm/gtc/type_precision.hpp	/^	typedef mat<4, 4, f64, defaultp> f64mat4;$/;"	t	namespace:glm	typeref:typename:mat<4,4,f64,defaultp>
f64mat4x2	./glm/fwd.hpp	/^	typedef mat<4, 2, f64, defaultp>	f64mat4x2;$/;"	t	namespace:glm	typeref:typename:mat<4,2,f64,defaultp>
f64mat4x2	./glm/gtc/type_precision.hpp	/^	typedef mat<4, 2, f64, defaultp> f64mat4x2;$/;"	t	namespace:glm	typeref:typename:mat<4,2,f64,defaultp>
f64mat4x3	./glm/fwd.hpp	/^	typedef mat<4, 3, f64, defaultp>	f64mat4x3;$/;"	t	namespace:glm	typeref:typename:mat<4,3,f64,defaultp>
f64mat4x3	./glm/gtc/type_precision.hpp	/^	typedef mat<4, 3, f64, defaultp> f64mat4x3;$/;"	t	namespace:glm	typeref:typename:mat<4,3,f64,defaultp>
f64mat4x4	./glm/fwd.hpp	/^	typedef mat<4, 4, f64, defaultp>	f64mat4x4;$/;"	t	namespace:glm	typeref:typename:mat<4,4,f64,defaultp>
f64mat4x4	./glm/gtc/type_precision.hpp	/^	typedef mat<4, 4, f64, defaultp> f64mat4x4;$/;"	t	namespace:glm	typeref:typename:mat<4,4,f64,defaultp>
f64quat	./glm/fwd.hpp	/^	typedef qua<f64, defaultp>			f64quat;$/;"	t	namespace:glm	typeref:typename:qua<f64,defaultp>
f64quat	./glm/gtc/type_precision.hpp	/^	typedef qua<f64, defaultp> f64quat;$/;"	t	namespace:glm	typeref:typename:qua<f64,defaultp>
f64vec1	./glm/fwd.hpp	/^	typedef vec<1, f64, defaultp>		f64vec1;$/;"	t	namespace:glm	typeref:typename:vec<1,f64,defaultp>
f64vec1	./glm/gtc/type_precision.hpp	/^		typedef vec<1, f64, defaultp> f64vec1;$/;"	t	namespace:glm	typeref:typename:vec<1,f64,defaultp>
f64vec2	./glm/fwd.hpp	/^	typedef vec<2, f64, defaultp>		f64vec2;$/;"	t	namespace:glm	typeref:typename:vec<2,f64,defaultp>
f64vec2	./glm/gtc/type_precision.hpp	/^		typedef vec<2, f64, defaultp> f64vec2;$/;"	t	namespace:glm	typeref:typename:vec<2,f64,defaultp>
f64vec3	./glm/fwd.hpp	/^	typedef vec<3, f64, defaultp>		f64vec3;$/;"	t	namespace:glm	typeref:typename:vec<3,f64,defaultp>
f64vec3	./glm/gtc/type_precision.hpp	/^		typedef vec<3, f64, defaultp> f64vec3;$/;"	t	namespace:glm	typeref:typename:vec<3,f64,defaultp>
f64vec4	./glm/fwd.hpp	/^	typedef vec<4, f64, defaultp>		f64vec4;$/;"	t	namespace:glm	typeref:typename:vec<4,f64,defaultp>
f64vec4	./glm/gtc/type_precision.hpp	/^		typedef vec<4, f64, defaultp> f64vec4;$/;"	t	namespace:glm	typeref:typename:vec<4,f64,defaultp>
faceforward	./glm/detail/func_geometric.inl	/^	GLM_FUNC_QUALIFIER genType faceforward(genType const& N, genType const& I, genType const& Nref)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genType
faceforward	./glm/detail/func_geometric.inl	/^	GLM_FUNC_QUALIFIER vec<L, T, Q> faceforward(vec<L, T, Q> const& N, vec<L, T, Q> const& I, vec<L/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<L,T,Q>
factorial	./glm/gtx/integer.inl	/^	GLM_FUNC_QUALIFIER genType factorial(genType const& x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genType
factorial	./glm/gtx/integer.inl	/^	GLM_FUNC_QUALIFIER vec<2, T, Q> factorial($/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<2,T,Q>
factorial	./glm/gtx/integer.inl	/^	GLM_FUNC_QUALIFIER vec<3, T, Q> factorial($/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<3,T,Q>
factorial	./glm/gtx/integer.inl	/^	GLM_FUNC_QUALIFIER vec<4, T, Q> factorial($/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<4,T,Q>
fade	./glm/detail/_noise.hpp	/^	GLM_FUNC_QUALIFIER vec<2, T, Q> fade(vec<2, T, Q> const& t)$/;"	f	namespace:glm::detail	typeref:typename:GLM_FUNC_QUALIFIER vec<2,T,Q>
fade	./glm/detail/_noise.hpp	/^	GLM_FUNC_QUALIFIER vec<3, T, Q> fade(vec<3, T, Q> const& t)$/;"	f	namespace:glm::detail	typeref:typename:GLM_FUNC_QUALIFIER vec<3,T,Q>
fade	./glm/detail/_noise.hpp	/^	GLM_FUNC_QUALIFIER vec<4, T, Q> fade(vec<4, T, Q> const& t)$/;"	f	namespace:glm::detail	typeref:typename:GLM_FUNC_QUALIFIER vec<4,T,Q>
fastAcos	./glm/gtx/fast_trigonometry.inl	/^	GLM_FUNC_QUALIFIER T fastAcos(T x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER T
fastAcos	./glm/gtx/fast_trigonometry.inl	/^	GLM_FUNC_QUALIFIER vec<L, T, Q> fastAcos(vec<L, T, Q> const& x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<L,T,Q>
fastAsin	./glm/gtx/fast_trigonometry.inl	/^	GLM_FUNC_QUALIFIER T fastAsin(T x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER T
fastAsin	./glm/gtx/fast_trigonometry.inl	/^	GLM_FUNC_QUALIFIER vec<L, T, Q> fastAsin(vec<L, T, Q> const& x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<L,T,Q>
fastAtan	./glm/gtx/fast_trigonometry.inl	/^	GLM_FUNC_QUALIFIER T fastAtan(T x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER T
fastAtan	./glm/gtx/fast_trigonometry.inl	/^	GLM_FUNC_QUALIFIER T fastAtan(T y, T x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER T
fastAtan	./glm/gtx/fast_trigonometry.inl	/^	GLM_FUNC_QUALIFIER vec<L, T, Q> fastAtan(vec<L, T, Q> const& x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<L,T,Q>
fastAtan	./glm/gtx/fast_trigonometry.inl	/^	GLM_FUNC_QUALIFIER vec<L, T, Q> fastAtan(vec<L, T, Q> const& y, vec<L, T, Q> const& x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<L,T,Q>
fastCos	./glm/gtx/fast_trigonometry.inl	/^	GLM_FUNC_QUALIFIER T fastCos(T x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER T
fastCos	./glm/gtx/fast_trigonometry.inl	/^	GLM_FUNC_QUALIFIER vec<L, T, Q> fastCos(vec<L, T, Q> const& x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<L,T,Q>
fastDistance	./glm/gtx/fast_square_root.inl	/^	GLM_FUNC_QUALIFIER T fastDistance(vec<L, T, Q> const& x, vec<L, T, Q> const& y)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER T
fastDistance	./glm/gtx/fast_square_root.inl	/^	GLM_FUNC_QUALIFIER genType fastDistance(genType x, genType y)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genType
fastExp	./glm/gtx/fast_exponential.inl	/^	GLM_FUNC_QUALIFIER T fastExp(T x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER T
fastExp	./glm/gtx/fast_exponential.inl	/^	GLM_FUNC_QUALIFIER vec<L, T, Q> fastExp(vec<L, T, Q> const& x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<L,T,Q>
fastExp2	./glm/gtx/fast_exponential.inl	/^	GLM_FUNC_QUALIFIER genType fastExp2(genType x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genType
fastExp2	./glm/gtx/fast_exponential.inl	/^	GLM_FUNC_QUALIFIER vec<L, T, Q> fastExp2(vec<L, T, Q> const& x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<L,T,Q>
fastInverseSqrt	./glm/gtx/fast_square_root.inl	/^	GLM_FUNC_QUALIFIER genType fastInverseSqrt(genType x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genType
fastInverseSqrt	./glm/gtx/fast_square_root.inl	/^	GLM_FUNC_QUALIFIER vec<L, T, Q> fastInverseSqrt(vec<L, T, Q> const& x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<L,T,Q>
fastLength	./glm/gtx/fast_square_root.inl	/^	GLM_FUNC_QUALIFIER T fastLength(vec<L, T, Q> const& x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER T
fastLength	./glm/gtx/fast_square_root.inl	/^	GLM_FUNC_QUALIFIER genType fastLength(genType x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genType
fastLog	./glm/gtx/fast_exponential.inl	/^	GLM_FUNC_QUALIFIER genType fastLog(genType x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genType
fastLog	./glm/gtx/fast_exponential.inl	/^	GLM_FUNC_QUALIFIER vec<L, T, Q> fastLog(vec<L, T, Q> const& x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<L,T,Q>
fastLog2	./glm/gtx/fast_exponential.inl	/^	GLM_FUNC_QUALIFIER genType fastLog2(genType x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genType
fastLog2	./glm/gtx/fast_exponential.inl	/^	GLM_FUNC_QUALIFIER vec<L, T, Q> fastLog2(vec<L, T, Q> const& x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<L,T,Q>
fastMix	./glm/gtx/quaternion.inl	/^	GLM_FUNC_QUALIFIER qua<T, Q> fastMix(qua<T, Q> const& x, qua<T, Q> const& y, T const& a)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER qua<T,Q>
fastNormalize	./glm/gtx/fast_square_root.inl	/^	GLM_FUNC_QUALIFIER genType fastNormalize(genType x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genType
fastNormalize	./glm/gtx/fast_square_root.inl	/^	GLM_FUNC_QUALIFIER vec<L, T, Q> fastNormalize(vec<L, T, Q> const& x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<L,T,Q>
fastNormalizeDot	./glm/gtx/normalize_dot.inl	/^	GLM_FUNC_QUALIFIER T fastNormalizeDot(vec<L, T, Q> const& x, vec<L, T, Q> const& y)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER T
fastPow	./glm/gtx/fast_exponential.inl	/^	GLM_FUNC_QUALIFIER T fastPow(T x, int y)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER T
fastPow	./glm/gtx/fast_exponential.inl	/^	GLM_FUNC_QUALIFIER genType fastPow(genType x, genType y)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genType
fastPow	./glm/gtx/fast_exponential.inl	/^	GLM_FUNC_QUALIFIER vec<L, T, Q> fastPow(vec<L, T, Q> const& x, vec<L, T, Q> const& y)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<L,T,Q>
fastPow	./glm/gtx/fast_exponential.inl	/^	GLM_FUNC_QUALIFIER vec<L, T, Q> fastPow(vec<L, T, Q> const& x, vec<L, int, Q> const& y)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<L,T,Q>
fastSin	./glm/gtx/fast_trigonometry.inl	/^	GLM_FUNC_QUALIFIER T fastSin(T x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER T
fastSin	./glm/gtx/fast_trigonometry.inl	/^	GLM_FUNC_QUALIFIER vec<L, T, Q> fastSin(vec<L, T, Q> const& x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<L,T,Q>
fastSqrt	./glm/gtx/fast_square_root.inl	/^	GLM_FUNC_QUALIFIER genType fastSqrt(genType x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genType
fastSqrt	./glm/gtx/fast_square_root.inl	/^	GLM_FUNC_QUALIFIER vec<L, T, Q> fastSqrt(vec<L, T, Q> const& x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<L,T,Q>
fastTan	./glm/gtx/fast_trigonometry.inl	/^	GLM_FUNC_QUALIFIER T fastTan(T x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER T
fastTan	./glm/gtx/fast_trigonometry.inl	/^	GLM_FUNC_QUALIFIER vec<L, T, Q> fastTan(vec<L, T, Q> const& x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<L,T,Q>
fclamp	./glm/ext/scalar_common.inl	/^	GLM_FUNC_QUALIFIER genType fclamp(genType x, genType minVal, genType maxVal)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genType
fclamp	./glm/ext/vector_common.inl	/^	GLM_FUNC_QUALIFIER vec<L, T, Q> fclamp(vec<L, T, Q> const& x, T minVal, T maxVal)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<L,T,Q>
fclamp	./glm/ext/vector_common.inl	/^	GLM_FUNC_QUALIFIER vec<L, T, Q> fclamp(vec<L, T, Q> const& x, vec<L, T, Q> const& minVal, vec<L/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<L,T,Q>
fcompMax	./glm/gtx/component_wise.inl	/^	GLM_FUNC_QUALIFIER T fcompMax(vec<L, T, Q> const& v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER T
fcompMin	./glm/gtx/component_wise.inl	/^	GLM_FUNC_QUALIFIER T fcompMin(vec<L, T, Q> const& v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER T
fdualquat	./glm/gtx/dual_quaternion.hpp	/^	typedef highp_fdualquat			fdualquat;$/;"	t	namespace:glm	typeref:typename:highp_fdualquat
fdualquat	./glm/gtx/dual_quaternion.hpp	/^	typedef lowp_fdualquat			fdualquat;$/;"	t	namespace:glm	typeref:typename:lowp_fdualquat
fdualquat	./glm/gtx/dual_quaternion.hpp	/^	typedef mediump_fdualquat		fdualquat;$/;"	t	namespace:glm	typeref:typename:mediump_fdualquat
fill_	./glm/gtx/io.hpp	/^			char_type       fill_;$/;"	m	class:glm::io::basic_state_saver	typeref:typename:char_type
findEigenvaluesSymReal	./glm/gtx/pca.inl	/^	GLM_FUNC_QUALIFIER unsigned int findEigenvaluesSymReal$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER unsigned int
findLSB	./glm/detail/func_integer.inl	/^	GLM_FUNC_QUALIFIER int findLSB(genIUType Value)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER int
findLSB	./glm/detail/func_integer.inl	/^	GLM_FUNC_QUALIFIER vec<L, int, Q> findLSB(vec<L, T, Q> const& x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<L,int,Q>
findMSB	./glm/detail/func_integer.inl	/^	GLM_FUNC_QUALIFIER int findMSB(genIUType v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER int
findMSB	./glm/detail/func_integer.inl	/^	GLM_FUNC_QUALIFIER vec<L, int, Q> findMSB(vec<L, T, Q> const& v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<L,int,Q>
findNSB	./glm/ext/scalar_integer.inl	/^	GLM_FUNC_QUALIFIER int findNSB(genIUType x, int significantBitCount)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER int
findNSB	./glm/ext/vector_integer.inl	/^	GLM_FUNC_QUALIFIER vec<L, int, Q> findNSB(vec<L, T, Q> const& Source, vec<L, int, Q> Significan/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<L,int,Q>
flags_	./glm/gtx/io.hpp	/^			flags_type      flags_;$/;"	m	class:glm::io::basic_state_saver	typeref:typename:flags_type
flags_type	./glm/gtx/io.hpp	/^			typedef ::std::ios_base::fmtflags      flags_type;$/;"	t	class:glm::io::basic_state_saver	typeref:typename:::std::ios_base::fmtflags
fliplr	./glm/gtx/matrix_factorisation.inl	/^	GLM_FUNC_QUALIFIER mat<C, R, T, Q> fliplr(mat<C, R, T, Q> const& in)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER mat<C,R,T,Q>
flipud	./glm/gtx/matrix_factorisation.inl	/^	GLM_FUNC_QUALIFIER mat<C, R, T, Q> flipud(mat<C, R, T, Q> const& in)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER mat<C,R,T,Q>
float1	./glm/gtx/compatibility.hpp	/^	typedef float						float1;			\/\/!< \\brief single-qualifier floating-point vector with 1 compo/;"	t	namespace:glm	typeref:typename:float
float1x1	./glm/gtx/compatibility.hpp	/^	typedef float						float1x1;		\/\/!< \\brief single-qualifier floating-point matrix with 1 comp/;"	t	namespace:glm	typeref:typename:float
float2	./glm/gtx/compatibility.hpp	/^	typedef vec<2, float, highp>		float2;			\/\/!< \\brief single-qualifier floating-point vector w/;"	t	namespace:glm	typeref:typename:vec<2,float,highp>
float2half	./glm/gtc/packing.inl	/^	GLM_FUNC_QUALIFIER glm::uint16 float2half(glm::uint32 f)$/;"	f	namespace:glm::detail	typeref:typename:GLM_FUNC_QUALIFIER glm::uint16
float2packed10	./glm/gtc/packing.inl	/^	GLM_FUNC_QUALIFIER glm::uint32 float2packed10(glm::uint32 f)$/;"	f	namespace:glm::detail	typeref:typename:GLM_FUNC_QUALIFIER glm::uint32
float2packed11	./glm/gtc/packing.inl	/^	GLM_FUNC_QUALIFIER glm::uint32 float2packed11(glm::uint32 f)$/;"	f	namespace:glm::detail	typeref:typename:GLM_FUNC_QUALIFIER glm::uint32
float2x2	./glm/gtx/compatibility.hpp	/^	typedef mat<2, 2, float, highp>		float2x2;		\/\/!< \\brief single-qualifier floating-point matr/;"	t	namespace:glm	typeref:typename:mat<2,2,float,highp>
float2x3	./glm/gtx/compatibility.hpp	/^	typedef mat<2, 3, float, highp>		float2x3;		\/\/!< \\brief single-qualifier floating-point matr/;"	t	namespace:glm	typeref:typename:mat<2,3,float,highp>
float2x4	./glm/gtx/compatibility.hpp	/^	typedef mat<2, 4, float, highp>		float2x4;		\/\/!< \\brief single-qualifier floating-point matr/;"	t	namespace:glm	typeref:typename:mat<2,4,float,highp>
float3	./glm/gtx/compatibility.hpp	/^	typedef vec<3, float, highp>		float3;			\/\/!< \\brief single-qualifier floating-point vector w/;"	t	namespace:glm	typeref:typename:vec<3,float,highp>
float32	./glm/fwd.hpp	/^	typedef float					float32;$/;"	t	namespace:glm	typeref:typename:float
float32	./glm/gtc/type_precision.hpp	/^	typedef float float32;$/;"	t	namespace:glm	typeref:typename:float
float32_t	./glm/fwd.hpp	/^	typedef float					float32_t;$/;"	t	namespace:glm	typeref:typename:float
float32_t	./glm/gtc/type_precision.hpp	/^	typedef float32 float32_t;$/;"	t	namespace:glm	typeref:typename:float32
float32_t	./glm/gtc/type_precision.hpp	/^	typedef highp_float32_t float32_t;$/;"	t	namespace:glm	typeref:typename:highp_float32_t
float32_t	./glm/gtc/type_precision.hpp	/^	typedef lowp_float32_t float32_t;$/;"	t	namespace:glm	typeref:typename:lowp_float32_t
float32_t	./glm/gtc/type_precision.hpp	/^	typedef mediump_float32 float32_t;$/;"	t	namespace:glm	typeref:typename:mediump_float32
float3x2	./glm/gtx/compatibility.hpp	/^	typedef mat<3, 2, float, highp>		float3x2;		\/\/!< \\brief single-qualifier floating-point matr/;"	t	namespace:glm	typeref:typename:mat<3,2,float,highp>
float3x3	./glm/gtx/compatibility.hpp	/^	typedef mat<3, 3, float, highp>		float3x3;		\/\/!< \\brief single-qualifier floating-point matr/;"	t	namespace:glm	typeref:typename:mat<3,3,float,highp>
float3x4	./glm/gtx/compatibility.hpp	/^	typedef mat<3, 4, float, highp>		float3x4;		\/\/!< \\brief single-qualifier floating-point matr/;"	t	namespace:glm	typeref:typename:mat<3,4,float,highp>
float4	./glm/gtx/compatibility.hpp	/^	typedef vec<4, float, highp>		float4;			\/\/!< \\brief single-qualifier floating-point vector w/;"	t	namespace:glm	typeref:typename:vec<4,float,highp>
float4x2	./glm/gtx/compatibility.hpp	/^	typedef mat<4, 2, float, highp>		float4x2;		\/\/!< \\brief single-qualifier floating-point matr/;"	t	namespace:glm	typeref:typename:mat<4,2,float,highp>
float4x3	./glm/gtx/compatibility.hpp	/^	typedef mat<4, 3, float, highp>		float4x3;		\/\/!< \\brief single-qualifier floating-point matr/;"	t	namespace:glm	typeref:typename:mat<4,3,float,highp>
float4x4	./glm/gtx/compatibility.hpp	/^	typedef mat<4, 4, float, highp>		float4x4;		\/\/!< \\brief single-qualifier floating-point matr/;"	t	namespace:glm	typeref:typename:mat<4,4,float,highp>
float64	./glm/fwd.hpp	/^	typedef double					float64;$/;"	t	namespace:glm	typeref:typename:double
float64	./glm/gtc/type_precision.hpp	/^	typedef double float64;$/;"	t	namespace:glm	typeref:typename:double
float64_t	./glm/fwd.hpp	/^	typedef double					float64_t;$/;"	t	namespace:glm	typeref:typename:double
float64_t	./glm/gtc/type_precision.hpp	/^		typedef float64 float64_t;$/;"	t	namespace:glm	typeref:typename:float64
float64_t	./glm/gtc/type_precision.hpp	/^	typedef highp_float64_t float64_t;$/;"	t	namespace:glm	typeref:typename:highp_float64_t
float64_t	./glm/gtc/type_precision.hpp	/^	typedef lowp_float64_t float64_t;$/;"	t	namespace:glm	typeref:typename:lowp_float64_t
float64_t	./glm/gtc/type_precision.hpp	/^	typedef mediump_float64 float64_t;$/;"	t	namespace:glm	typeref:typename:mediump_float64
floatBitsToInt	./glm/detail/func_common.inl	/^	GLM_FUNC_QUALIFIER int floatBitsToInt(float v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER int
floatBitsToInt	./glm/detail/func_common.inl	/^	GLM_FUNC_QUALIFIER vec<L, int, Q> floatBitsToInt(vec<L, float, Q> const& v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<L,int,Q>
floatBitsToUint	./glm/detail/func_common.inl	/^	GLM_FUNC_QUALIFIER uint floatBitsToUint(float v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER uint
floatBitsToUint	./glm/detail/func_common.inl	/^	GLM_FUNC_QUALIFIER vec<L, uint, Q> floatBitsToUint(vec<L, float, Q> const& v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<L,uint,Q>
floatDistance	./glm/ext/scalar_ulp.inl	/^	GLM_FUNC_QUALIFIER int floatDistance(float x, float y)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER int
floatDistance	./glm/ext/scalar_ulp.inl	/^	GLM_FUNC_QUALIFIER int64 floatDistance(double x, double y)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER int64
floatDistance	./glm/ext/vector_ulp.inl	/^	GLM_FUNC_QUALIFIER vec<L, int, Q> floatDistance(vec<L, float, Q> const& x, vec<L, float, Q> con/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<L,int,Q>
floatDistance	./glm/ext/vector_ulp.inl	/^	GLM_FUNC_QUALIFIER vec<L, int64, Q> floatDistance(vec<L, double, Q> const& x, vec<L, double, Q>/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<L,int64,Q>
floatNormalize	./glm/gtx/float_notmalize.inl	/^	GLM_FUNC_QUALIFIER vec<L, float, Q> floatNormalize(vec<L, T, Q> const& v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<L,float,Q>
floatTo10bit	./glm/gtc/packing.inl	/^	GLM_FUNC_QUALIFIER glm::uint floatTo10bit(float x)$/;"	f	namespace:glm::detail	typeref:typename:GLM_FUNC_QUALIFIER glm::uint
floatTo11bit	./glm/gtc/packing.inl	/^	GLM_FUNC_QUALIFIER glm::uint floatTo11bit(float x)$/;"	f	namespace:glm::detail	typeref:typename:GLM_FUNC_QUALIFIER glm::uint
float_distance	./glm/gtc/ulp.inl	/^	GLM_FUNC_QUALIFIER int float_distance(float x, float y)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER int
float_distance	./glm/gtc/ulp.inl	/^	GLM_FUNC_QUALIFIER int64 float_distance(double x, double y)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER int64
float_distance	./glm/gtc/ulp.inl	/^	GLM_FUNC_QUALIFIER vec<L, int, Q> float_distance(vec<L, float, Q> const& x, vec<L, float, Q> co/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<L,int,Q>
float_distance	./glm/gtc/ulp.inl	/^	GLM_FUNC_QUALIFIER vec<L, int64, Q> float_distance(vec<L, double, Q> const& x, vec<L, double, Q/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<L,int64,Q>
float_t	./glm/detail/type_float.hpp	/^		GLM_CONSTEXPR float_t(float_type Num = 0.0f) : f(Num) {}$/;"	f	union:glm::detail::float_t	typeref:typename:GLM_CONSTEXPR
float_t	./glm/detail/type_float.hpp	/^		GLM_CONSTEXPR float_t(float_type Num = static_cast<float_type>(0)) : f(Num) {}$/;"	f	union:glm::detail::float_t	typeref:typename:GLM_CONSTEXPR
float_t	./glm/detail/type_float.hpp	/^	union float_t$/;"	u	namespace:glm::detail
float_t	./glm/detail/type_float.hpp	/^	union float_t<double>$/;"	u	namespace:glm::detail
float_t	./glm/detail/type_float.hpp	/^	union float_t<float>$/;"	u	namespace:glm::detail
float_type	./glm/detail/type_float.hpp	/^		typedef double float_type;$/;"	t	union:glm::detail::float_t	typeref:typename:double
float_type	./glm/detail/type_float.hpp	/^		typedef float float_type;$/;"	t	union:glm::detail::float_t	typeref:typename:float
floor	./glm/detail/func_common.inl	/^	GLM_FUNC_QUALIFIER vec<L, T, Q> floor(vec<L, T, Q> const& x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<L,T,Q>
floorMultiple	./glm/gtc/round.inl	/^	GLM_FUNC_QUALIFIER genType floorMultiple(genType Source, genType Multiple)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genType
floorMultiple	./glm/gtc/round.inl	/^	GLM_FUNC_QUALIFIER vec<L, T, Q> floorMultiple(vec<L, T, Q> const& Source, vec<L, T, Q> const& M/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<L,T,Q>
floorPowerOfTwo	./glm/gtc/round.inl	/^	GLM_FUNC_QUALIFIER genType floorPowerOfTwo(genType value)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genType
floorPowerOfTwo	./glm/gtc/round.inl	/^	GLM_FUNC_QUALIFIER vec<L, T, Q> floorPowerOfTwo(vec<L, T, Q> const& v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<L,T,Q>
fma	./glm/detail/func_common.inl	/^		GLM_FUNC_QUALIFIER genType fma(genType const& a, genType const& b, genType const& c)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genType
fmat2	./glm/fwd.hpp	/^	typedef mat<2, 2, f32, defaultp>	fmat2;$/;"	t	namespace:glm	typeref:typename:mat<2,2,f32,defaultp>
fmat2	./glm/gtc/type_precision.hpp	/^	typedef mat<2, 2, f32, defaultp> fmat2;$/;"	t	namespace:glm	typeref:typename:mat<2,2,f32,defaultp>
fmat2x2	./glm/fwd.hpp	/^	typedef mat<2, 2, f32, defaultp>	fmat2x2;$/;"	t	namespace:glm	typeref:typename:mat<2,2,f32,defaultp>
fmat2x2	./glm/gtc/type_precision.hpp	/^	typedef mat<2, 2, f32, defaultp> fmat2x2;$/;"	t	namespace:glm	typeref:typename:mat<2,2,f32,defaultp>
fmat2x3	./glm/fwd.hpp	/^	typedef mat<2, 3, f32, defaultp>	fmat2x3;$/;"	t	namespace:glm	typeref:typename:mat<2,3,f32,defaultp>
fmat2x3	./glm/gtc/type_precision.hpp	/^	typedef mat<2, 3, f32, defaultp> fmat2x3;$/;"	t	namespace:glm	typeref:typename:mat<2,3,f32,defaultp>
fmat2x4	./glm/fwd.hpp	/^	typedef mat<2, 4, f32, defaultp>	fmat2x4;$/;"	t	namespace:glm	typeref:typename:mat<2,4,f32,defaultp>
fmat2x4	./glm/gtc/type_precision.hpp	/^	typedef mat<2, 4, f32, defaultp> fmat2x4;$/;"	t	namespace:glm	typeref:typename:mat<2,4,f32,defaultp>
fmat3	./glm/fwd.hpp	/^	typedef mat<3, 3, f32, defaultp>	fmat3;$/;"	t	namespace:glm	typeref:typename:mat<3,3,f32,defaultp>
fmat3	./glm/gtc/type_precision.hpp	/^	typedef mat<3, 3, f32, defaultp> fmat3;$/;"	t	namespace:glm	typeref:typename:mat<3,3,f32,defaultp>
fmat3x2	./glm/fwd.hpp	/^	typedef mat<3, 2, f32, defaultp>	fmat3x2;$/;"	t	namespace:glm	typeref:typename:mat<3,2,f32,defaultp>
fmat3x2	./glm/gtc/type_precision.hpp	/^	typedef mat<3, 2, f32, defaultp> fmat3x2;$/;"	t	namespace:glm	typeref:typename:mat<3,2,f32,defaultp>
fmat3x3	./glm/fwd.hpp	/^	typedef mat<3, 3, f32, defaultp>	fmat3x3;$/;"	t	namespace:glm	typeref:typename:mat<3,3,f32,defaultp>
fmat3x3	./glm/gtc/type_precision.hpp	/^	typedef mat<3, 3, f32, defaultp> fmat3x3;$/;"	t	namespace:glm	typeref:typename:mat<3,3,f32,defaultp>
fmat3x4	./glm/fwd.hpp	/^	typedef mat<3, 4, f32, defaultp>	fmat3x4;$/;"	t	namespace:glm	typeref:typename:mat<3,4,f32,defaultp>
fmat3x4	./glm/gtc/type_precision.hpp	/^	typedef mat<3, 4, f32, defaultp> fmat3x4;$/;"	t	namespace:glm	typeref:typename:mat<3,4,f32,defaultp>
fmat4	./glm/fwd.hpp	/^	typedef mat<4, 4, f32, defaultp>	fmat4;$/;"	t	namespace:glm	typeref:typename:mat<4,4,f32,defaultp>
fmat4	./glm/gtc/type_precision.hpp	/^	typedef mat<4, 4, f32, defaultp> fmat4;$/;"	t	namespace:glm	typeref:typename:mat<4,4,f32,defaultp>
fmat4x2	./glm/fwd.hpp	/^	typedef mat<4, 2, f32, defaultp>	fmat4x2;$/;"	t	namespace:glm	typeref:typename:mat<4,2,f32,defaultp>
fmat4x2	./glm/gtc/type_precision.hpp	/^	typedef mat<4, 2, f32, defaultp> fmat4x2;$/;"	t	namespace:glm	typeref:typename:mat<4,2,f32,defaultp>
fmat4x3	./glm/fwd.hpp	/^	typedef mat<4, 3, f32, defaultp>	fmat4x3;$/;"	t	namespace:glm	typeref:typename:mat<4,3,f32,defaultp>
fmat4x3	./glm/gtc/type_precision.hpp	/^	typedef mat<4, 3, f32, defaultp> fmat4x3;$/;"	t	namespace:glm	typeref:typename:mat<4,3,f32,defaultp>
fmat4x4	./glm/fwd.hpp	/^	typedef mat<4, 4, f32, defaultp>	fmat4x4;$/;"	t	namespace:glm	typeref:typename:mat<4,4,f32,defaultp>
fmat4x4	./glm/gtc/type_precision.hpp	/^	typedef mat<4, 4, f32, defaultp> fmat4x4;$/;"	t	namespace:glm	typeref:typename:mat<4,4,f32,defaultp>
fmax	./glm/ext/scalar_common.inl	/^		GLM_FUNC_QUALIFIER T fmax(T a, T b)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER T
fmax	./glm/ext/scalar_common.inl	/^	GLM_FUNC_QUALIFIER T fmax(T a, T b, T c)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER T
fmax	./glm/ext/scalar_common.inl	/^	GLM_FUNC_QUALIFIER T fmax(T a, T b, T c, T d)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER T
fmax	./glm/ext/vector_common.inl	/^	GLM_FUNC_QUALIFIER vec<L, T, Q> fmax(vec<L, T, Q> const& a, T b)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<L,T,Q>
fmax	./glm/ext/vector_common.inl	/^	GLM_FUNC_QUALIFIER vec<L, T, Q> fmax(vec<L, T, Q> const& a, vec<L, T, Q> const& b)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<L,T,Q>
fmax	./glm/ext/vector_common.inl	/^	GLM_FUNC_QUALIFIER vec<L, T, Q> fmax(vec<L, T, Q> const& a, vec<L, T, Q> const& b, vec<L, T, Q>/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<L,T,Q>
fmin	./glm/ext/scalar_common.inl	/^		GLM_FUNC_QUALIFIER T fmin(T a, T b)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER T
fmin	./glm/ext/scalar_common.inl	/^	GLM_FUNC_QUALIFIER T fmin(T a, T b, T c)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER T
fmin	./glm/ext/scalar_common.inl	/^	GLM_FUNC_QUALIFIER T fmin(T a, T b, T c, T d)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER T
fmin	./glm/ext/vector_common.inl	/^	GLM_FUNC_QUALIFIER vec<L, T, Q> fmin(vec<L, T, Q> const& a, T b)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<L,T,Q>
fmin	./glm/ext/vector_common.inl	/^	GLM_FUNC_QUALIFIER vec<L, T, Q> fmin(vec<L, T, Q> const& a, vec<L, T, Q> const& b)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<L,T,Q>
fmin	./glm/ext/vector_common.inl	/^	GLM_FUNC_QUALIFIER vec<L, T, Q> fmin(vec<L, T, Q> const& a, vec<L, T, Q> const& b, vec<L, T, Q>/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<L,T,Q>
fmod	./glm/gtx/common.inl	/^	GLM_FUNC_QUALIFIER genType fmod(genType x, genType y)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genType
fmod	./glm/gtx/common.inl	/^	GLM_FUNC_QUALIFIER vec<L, T, Q> fmod(vec<L, T, Q> const& x, T y)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<L,T,Q>
fmod	./glm/gtx/common.inl	/^	GLM_FUNC_QUALIFIER vec<L, T, Q> fmod(vec<L, T, Q> const& x, vec<L, T, Q> const& y)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<L,T,Q>
format	./glm/gtx/string_cast.inl	/^	GLM_FUNC_QUALIFIER std::string format(const char* message, ...) {$/;"	f	namespace:glm::detail	typeref:typename:GLM_FUNC_QUALIFIER std::string
format_punct	./glm/gtx/io.hpp	/^		class format_punct : public std::locale::facet$/;"	c	namespace:glm::io
format_punct	./glm/gtx/io.inl	/^	GLM_FUNC_QUALIFIER format_punct<CTy>::format_punct(format_punct const& a)$/;"	f	class:glm::io::format_punct	typeref:typename:GLM_FUNC_QUALIFIER
format_punct	./glm/gtx/io.inl	/^	GLM_FUNC_QUALIFIER format_punct<CTy>::format_punct(size_t a)$/;"	f	class:glm::io::format_punct	typeref:typename:GLM_FUNC_QUALIFIER
format_saver	./glm/gtx/io.hpp	/^		typedef basic_format_saver<char>     format_saver;$/;"	t	namespace:glm::io	typeref:typename:basic_format_saver<char>
formatted	./glm/gtx/io.hpp	/^			bool       formatted;$/;"	m	class:glm::io::format_punct	typeref:typename:bool
formatted	./glm/gtx/io.inl	/^	GLM_FUNC_QUALIFIER std::basic_ios<CTy, CTr>& formatted(std::basic_ios<CTy, CTr>& ios)$/;"	f	namespace:glm::io	typeref:typename:GLM_FUNC_QUALIFIER std::basic_ios<CTy,CTr> &
four_over_pi	./glm/gtc/constants.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR genType four_over_pi()$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR genType
fquat	./glm/fwd.hpp	/^	typedef qua<float, defaultp>		fquat;$/;"	t	namespace:glm	typeref:typename:qua<float,defaultp>
fract	./glm/detail/func_common.inl	/^	GLM_FUNC_QUALIFIER genType fract(genType x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genType
fract	./glm/detail/func_common.inl	/^	GLM_FUNC_QUALIFIER vec<L, T, Q> fract(vec<L, T, Q> const& x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<L,T,Q>
fragShader	main.cpp	/^const char* fragShader =$/;"	v	typeref:typename:const char *
frexp	./glm/detail/func_common.inl	/^	GLM_FUNC_QUALIFIER genType frexp(genType x, int& exp)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genType
frexp	./glm/detail/func_common.inl	/^	GLM_FUNC_QUALIFIER vec<L, T, Q> frexp(vec<L, T, Q> const& v, vec<L, int, Q>& exp)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<L,T,Q>
frustum	./glm/ext/matrix_clip_space.inl	/^	GLM_FUNC_QUALIFIER mat<4, 4, T, defaultp> frustum(T left, T right, T bottom, T top, T nearVal, /;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER mat<4,4,T,defaultp>
frustumLH	./glm/ext/matrix_clip_space.inl	/^	GLM_FUNC_QUALIFIER mat<4, 4, T, defaultp> frustumLH(T left, T right, T bottom, T top, T nearVal/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER mat<4,4,T,defaultp>
frustumLH_NO	./glm/ext/matrix_clip_space.inl	/^	GLM_FUNC_QUALIFIER mat<4, 4, T, defaultp> frustumLH_NO(T left, T right, T bottom, T top, T near/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER mat<4,4,T,defaultp>
frustumLH_ZO	./glm/ext/matrix_clip_space.inl	/^	GLM_FUNC_QUALIFIER mat<4, 4, T, defaultp> frustumLH_ZO(T left, T right, T bottom, T top, T near/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER mat<4,4,T,defaultp>
frustumNO	./glm/ext/matrix_clip_space.inl	/^	GLM_FUNC_QUALIFIER mat<4, 4, T, defaultp> frustumNO(T left, T right, T bottom, T top, T nearVal/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER mat<4,4,T,defaultp>
frustumRH	./glm/ext/matrix_clip_space.inl	/^	GLM_FUNC_QUALIFIER mat<4, 4, T, defaultp> frustumRH(T left, T right, T bottom, T top, T nearVal/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER mat<4,4,T,defaultp>
frustumRH_NO	./glm/ext/matrix_clip_space.inl	/^	GLM_FUNC_QUALIFIER mat<4, 4, T, defaultp> frustumRH_NO(T left, T right, T bottom, T top, T near/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER mat<4,4,T,defaultp>
frustumRH_ZO	./glm/ext/matrix_clip_space.inl	/^	GLM_FUNC_QUALIFIER mat<4, 4, T, defaultp> frustumRH_ZO(T left, T right, T bottom, T top, T near/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER mat<4,4,T,defaultp>
frustumZO	./glm/ext/matrix_clip_space.inl	/^	GLM_FUNC_QUALIFIER mat<4, 4, T, defaultp> frustumZO(T left, T right, T bottom, T top, T nearVal/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER mat<4,4,T,defaultp>
functor1	./glm/detail/_vectorize.hpp	/^	struct functor1<vec, 1, R, T, Q>$/;"	s	namespace:glm::detail
functor1	./glm/detail/_vectorize.hpp	/^	struct functor1<vec, 2, R, T, Q>$/;"	s	namespace:glm::detail
functor1	./glm/detail/_vectorize.hpp	/^	struct functor1<vec, 3, R, T, Q>$/;"	s	namespace:glm::detail
functor1	./glm/detail/_vectorize.hpp	/^	struct functor1<vec, 4, R, T, Q>$/;"	s	namespace:glm::detail
functor1	./glm/detail/_vectorize.hpp	/^	struct functor1{};$/;"	s	namespace:glm::detail
functor2	./glm/detail/_vectorize.hpp	/^	struct functor2<vec, 1, T, Q>$/;"	s	namespace:glm::detail
functor2	./glm/detail/_vectorize.hpp	/^	struct functor2<vec, 2, T, Q>$/;"	s	namespace:glm::detail
functor2	./glm/detail/_vectorize.hpp	/^	struct functor2<vec, 3, T, Q>$/;"	s	namespace:glm::detail
functor2	./glm/detail/_vectorize.hpp	/^	struct functor2<vec, 4, T, Q>$/;"	s	namespace:glm::detail
functor2	./glm/detail/_vectorize.hpp	/^	struct functor2{};$/;"	s	namespace:glm::detail
functor2_vec_int	./glm/detail/_vectorize.hpp	/^	struct functor2_vec_int {};$/;"	s	namespace:glm::detail
functor2_vec_int	./glm/detail/_vectorize.hpp	/^	struct functor2_vec_int<1, T, Q>$/;"	s	namespace:glm::detail
functor2_vec_int	./glm/detail/_vectorize.hpp	/^	struct functor2_vec_int<2, T, Q>$/;"	s	namespace:glm::detail
functor2_vec_int	./glm/detail/_vectorize.hpp	/^	struct functor2_vec_int<3, T, Q>$/;"	s	namespace:glm::detail
functor2_vec_int	./glm/detail/_vectorize.hpp	/^	struct functor2_vec_int<4, T, Q>$/;"	s	namespace:glm::detail
functor2_vec_sca	./glm/detail/_vectorize.hpp	/^	struct functor2_vec_sca<vec, 1, T, Q>$/;"	s	namespace:glm::detail
functor2_vec_sca	./glm/detail/_vectorize.hpp	/^	struct functor2_vec_sca<vec, 2, T, Q>$/;"	s	namespace:glm::detail
functor2_vec_sca	./glm/detail/_vectorize.hpp	/^	struct functor2_vec_sca<vec, 3, T, Q>$/;"	s	namespace:glm::detail
functor2_vec_sca	./glm/detail/_vectorize.hpp	/^	struct functor2_vec_sca<vec, 4, T, Q>$/;"	s	namespace:glm::detail
functor2_vec_sca	./glm/detail/_vectorize.hpp	/^	struct functor2_vec_sca{};$/;"	s	namespace:glm::detail
fvec1	./glm/fwd.hpp	/^	typedef vec<1, f32, defaultp>		fvec1;$/;"	t	namespace:glm	typeref:typename:vec<1,f32,defaultp>
fvec1	./glm/gtc/type_precision.hpp	/^	typedef vec<1, float, defaultp> fvec1;$/;"	t	namespace:glm	typeref:typename:vec<1,float,defaultp>
fvec2	./glm/fwd.hpp	/^	typedef vec<2, f32, defaultp>		fvec2;$/;"	t	namespace:glm	typeref:typename:vec<2,f32,defaultp>
fvec2	./glm/gtc/type_precision.hpp	/^	typedef vec<2, float, defaultp> fvec2;$/;"	t	namespace:glm	typeref:typename:vec<2,float,defaultp>
fvec3	./glm/fwd.hpp	/^	typedef vec<3, f32, defaultp>		fvec3;$/;"	t	namespace:glm	typeref:typename:vec<3,f32,defaultp>
fvec3	./glm/gtc/type_precision.hpp	/^	typedef vec<3, float, defaultp> fvec3;$/;"	t	namespace:glm	typeref:typename:vec<3,float,defaultp>
fvec4	./glm/fwd.hpp	/^	typedef vec<4, f32, defaultp>		fvec4;$/;"	t	namespace:glm	typeref:typename:vec<4,f32,defaultp>
fvec4	./glm/gtc/type_precision.hpp	/^	typedef vec<4, float, defaultp> fvec4;$/;"	t	namespace:glm	typeref:typename:vec<4,float,defaultp>
gauss	./glm/gtx/functions.inl	/^	GLM_FUNC_QUALIFIER T gauss$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER T
gaussRand	./glm/gtc/random.inl	/^	GLM_FUNC_QUALIFIER genType gaussRand(genType Mean, genType Deviation)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genType
gaussRand	./glm/gtc/random.inl	/^	GLM_FUNC_QUALIFIER vec<L, T, Q> gaussRand(vec<L, T, Q> const& Mean, vec<L, T, Q> const& Deviati/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<L,T,Q>
genTypeEnum	./glm/detail/qualifier.hpp	/^	enum genTypeEnum$/;"	g	namespace:glm::detail
genTypeTrait	./glm/detail/qualifier.hpp	/^	struct genTypeTrait$/;"	s	namespace:glm::detail
genTypeTrait	./glm/detail/qualifier.hpp	/^	struct genTypeTrait<mat<C, R, T> >$/;"	s	namespace:glm::detail
genTypeTrait	./glm/detail/type_quat.inl	/^	struct genTypeTrait<qua<T> >$/;"	s	namespace:glm::detail	file:
get_facet	./glm/gtx/io.inl	/^	GLM_FUNC_QUALIFIER FTy const& get_facet(std::basic_ios<CTy, CTr>& ios)$/;"	f	namespace:glm::io	typeref:typename:GLM_FUNC_QUALIFIER FTy const &
glAcquireKeyedMutexWin32EXT	./GL/glew.h	/^#define glAcquireKeyedMutexWin32EXT /;"	d
glActiveProgramEXT	./GL/glew.h	/^#define glActiveProgramEXT /;"	d
glActiveShaderProgram	./GL/glew.h	/^#define glActiveShaderProgram /;"	d
glActiveStencilFaceEXT	./GL/glew.h	/^#define glActiveStencilFaceEXT /;"	d
glActiveTexture	./GL/glew.h	/^#define glActiveTexture /;"	d
glActiveTextureARB	./GL/glew.h	/^#define glActiveTextureARB /;"	d
glActiveVaryingNV	./GL/glew.h	/^#define glActiveVaryingNV /;"	d
glAddSwapHintRectWIN	./GL/glew.h	/^#define glAddSwapHintRectWIN /;"	d
glAddressSpace	./GL/glew.h	/^#define glAddressSpace /;"	d
glAllocMPEGPredictorsSGIX	./GL/glew.h	/^#define glAllocMPEGPredictorsSGIX /;"	d
glAlphaFragmentOp1ATI	./GL/glew.h	/^#define glAlphaFragmentOp1ATI /;"	d
glAlphaFragmentOp2ATI	./GL/glew.h	/^#define glAlphaFragmentOp2ATI /;"	d
glAlphaFragmentOp3ATI	./GL/glew.h	/^#define glAlphaFragmentOp3ATI /;"	d
glAlphaFuncQCOM	./GL/glew.h	/^#define glAlphaFuncQCOM /;"	d
glAlphaFuncx	./GL/glew.h	/^#define glAlphaFuncx /;"	d
glAlphaToCoverageDitherControlNV	./GL/glew.h	/^#define glAlphaToCoverageDitherControlNV /;"	d
glApplyTextureEXT	./GL/glew.h	/^#define glApplyTextureEXT /;"	d
glAreProgramsResidentNV	./GL/glew.h	/^#define glAreProgramsResidentNV /;"	d
glAreTexturesResidentEXT	./GL/glew.h	/^#define glAreTexturesResidentEXT /;"	d
glAreVertexArraysResidentSGIX	./GL/glew.h	/^#define glAreVertexArraysResidentSGIX /;"	d
glArrayElementEXT	./GL/glew.h	/^#define glArrayElementEXT /;"	d
glArrayObjectATI	./GL/glew.h	/^#define glArrayObjectATI /;"	d
glAsyncCopyBufferSubDataNVX	./GL/glew.h	/^#define glAsyncCopyBufferSubDataNVX /;"	d
glAsyncCopyImageSubDataNVX	./GL/glew.h	/^#define glAsyncCopyImageSubDataNVX /;"	d
glAsyncMarkerSGIX	./GL/glew.h	/^#define glAsyncMarkerSGIX /;"	d
glAttachObjectARB	./GL/glew.h	/^#define glAttachObjectARB /;"	d
glAttachShader	./GL/glew.h	/^#define glAttachShader /;"	d
glBeginConditionalRender	./GL/glew.h	/^#define glBeginConditionalRender /;"	d
glBeginConditionalRenderNV	./GL/glew.h	/^#define glBeginConditionalRenderNV /;"	d
glBeginConditionalRenderNVX	./GL/glew.h	/^#define glBeginConditionalRenderNVX /;"	d
glBeginFragmentShaderATI	./GL/glew.h	/^#define glBeginFragmentShaderATI /;"	d
glBeginOcclusionQueryNV	./GL/glew.h	/^#define glBeginOcclusionQueryNV /;"	d
glBeginPerfMonitorAMD	./GL/glew.h	/^#define glBeginPerfMonitorAMD /;"	d
glBeginPerfQueryINTEL	./GL/glew.h	/^#define glBeginPerfQueryINTEL /;"	d
glBeginQuery	./GL/glew.h	/^#define glBeginQuery /;"	d
glBeginQueryANGLE	./GL/glew.h	/^#define glBeginQueryANGLE /;"	d
glBeginQueryARB	./GL/glew.h	/^#define glBeginQueryARB /;"	d
glBeginQueryEXT	./GL/glew.h	/^#define glBeginQueryEXT /;"	d
glBeginQueryIndexed	./GL/glew.h	/^#define glBeginQueryIndexed /;"	d
glBeginSceneEXT	./GL/glew.h	/^#define glBeginSceneEXT /;"	d
glBeginTransformFeedback	./GL/glew.h	/^#define glBeginTransformFeedback /;"	d
glBeginTransformFeedbackEXT	./GL/glew.h	/^#define glBeginTransformFeedbackEXT /;"	d
glBeginTransformFeedbackNV	./GL/glew.h	/^#define glBeginTransformFeedbackNV /;"	d
glBeginVertexShaderEXT	./GL/glew.h	/^#define glBeginVertexShaderEXT /;"	d
glBeginVideoCaptureNV	./GL/glew.h	/^#define glBeginVideoCaptureNV /;"	d
glBindArraySetEXT	./GL/glew.h	/^#define glBindArraySetEXT /;"	d
glBindAttribLocation	./GL/glew.h	/^#define glBindAttribLocation /;"	d
glBindAttribLocationARB	./GL/glew.h	/^#define glBindAttribLocationARB /;"	d
glBindBuffer	./GL/glew.h	/^#define glBindBuffer /;"	d
glBindBufferARB	./GL/glew.h	/^#define glBindBufferARB /;"	d
glBindBufferBase	./GL/glew.h	/^#define glBindBufferBase /;"	d
glBindBufferBaseEXT	./GL/glew.h	/^#define glBindBufferBaseEXT /;"	d
glBindBufferBaseNV	./GL/glew.h	/^#define glBindBufferBaseNV /;"	d
glBindBufferOffsetEXT	./GL/glew.h	/^#define glBindBufferOffsetEXT /;"	d
glBindBufferOffsetNV	./GL/glew.h	/^#define glBindBufferOffsetNV /;"	d
glBindBufferRange	./GL/glew.h	/^#define glBindBufferRange /;"	d
glBindBufferRangeEXT	./GL/glew.h	/^#define glBindBufferRangeEXT /;"	d
glBindBufferRangeNV	./GL/glew.h	/^#define glBindBufferRangeNV /;"	d
glBindBuffersBase	./GL/glew.h	/^#define glBindBuffersBase /;"	d
glBindBuffersRange	./GL/glew.h	/^#define glBindBuffersRange /;"	d
glBindFragDataLocation	./GL/glew.h	/^#define glBindFragDataLocation /;"	d
glBindFragDataLocationEXT	./GL/glew.h	/^#define glBindFragDataLocationEXT /;"	d
glBindFragDataLocationIndexed	./GL/glew.h	/^#define glBindFragDataLocationIndexed /;"	d
glBindFragDataLocationIndexedEXT	./GL/glew.h	/^#define glBindFragDataLocationIndexedEXT /;"	d
glBindFragmentShaderATI	./GL/glew.h	/^#define glBindFragmentShaderATI /;"	d
glBindFramebuffer	./GL/glew.h	/^#define glBindFramebuffer /;"	d
glBindFramebufferEXT	./GL/glew.h	/^#define glBindFramebufferEXT /;"	d
glBindFramebufferOES	./GL/glew.h	/^#define glBindFramebufferOES /;"	d
glBindImageTexture	./GL/glew.h	/^#define glBindImageTexture /;"	d
glBindImageTextureEXT	./GL/glew.h	/^#define glBindImageTextureEXT /;"	d
glBindImageTextures	./GL/glew.h	/^#define glBindImageTextures /;"	d
glBindLightParameterEXT	./GL/glew.h	/^#define glBindLightParameterEXT /;"	d
glBindMaterialParameterEXT	./GL/glew.h	/^#define glBindMaterialParameterEXT /;"	d
glBindMultiTextureEXT	./GL/glew.h	/^#define glBindMultiTextureEXT /;"	d
glBindParameterEXT	./GL/glew.h	/^#define glBindParameterEXT /;"	d
glBindProgramARB	./GL/glew.h	/^#define glBindProgramARB /;"	d
glBindProgramNV	./GL/glew.h	/^#define glBindProgramNV /;"	d
glBindProgramPipeline	./GL/glew.h	/^#define glBindProgramPipeline /;"	d
glBindRenderbuffer	./GL/glew.h	/^#define glBindRenderbuffer /;"	d
glBindRenderbufferEXT	./GL/glew.h	/^#define glBindRenderbufferEXT /;"	d
glBindRenderbufferOES	./GL/glew.h	/^#define glBindRenderbufferOES /;"	d
glBindSampler	./GL/glew.h	/^#define glBindSampler /;"	d
glBindSamplers	./GL/glew.h	/^#define glBindSamplers /;"	d
glBindShadingRateImageNV	./GL/glew.h	/^#define glBindShadingRateImageNV /;"	d
glBindTexGenParameterEXT	./GL/glew.h	/^#define glBindTexGenParameterEXT /;"	d
glBindTextureEXT	./GL/glew.h	/^#define glBindTextureEXT /;"	d
glBindTextureUnit	./GL/glew.h	/^#define glBindTextureUnit /;"	d
glBindTextureUnitParameterEXT	./GL/glew.h	/^#define glBindTextureUnitParameterEXT /;"	d
glBindTextures	./GL/glew.h	/^#define glBindTextures /;"	d
glBindTransformFeedback	./GL/glew.h	/^#define glBindTransformFeedback /;"	d
glBindTransformFeedbackNV	./GL/glew.h	/^#define glBindTransformFeedbackNV /;"	d
glBindVertexArray	./GL/glew.h	/^#define glBindVertexArray /;"	d
glBindVertexArrayAPPLE	./GL/glew.h	/^#define glBindVertexArrayAPPLE /;"	d
glBindVertexArrayOES	./GL/glew.h	/^#define glBindVertexArrayOES /;"	d
glBindVertexArraySGIX	./GL/glew.h	/^#define glBindVertexArraySGIX /;"	d
glBindVertexBuffer	./GL/glew.h	/^#define glBindVertexBuffer /;"	d
glBindVertexBuffers	./GL/glew.h	/^#define glBindVertexBuffers /;"	d
glBindVertexShaderEXT	./GL/glew.h	/^#define glBindVertexShaderEXT /;"	d
glBindVideoCaptureStreamBufferNV	./GL/glew.h	/^#define glBindVideoCaptureStreamBufferNV /;"	d
glBindVideoCaptureStreamTextureNV	./GL/glew.h	/^#define glBindVideoCaptureStreamTextureNV /;"	d
glBinormalPointerEXT	./GL/glew.h	/^#define glBinormalPointerEXT /;"	d
glBlendBarrierKHR	./GL/glew.h	/^#define glBlendBarrierKHR /;"	d
glBlendBarrierNV	./GL/glew.h	/^#define glBlendBarrierNV /;"	d
glBlendColor	./GL/glew.h	/^#define glBlendColor /;"	d
glBlendColorEXT	./GL/glew.h	/^#define glBlendColorEXT /;"	d
glBlendEquation	./GL/glew.h	/^#define glBlendEquation /;"	d
glBlendEquationEXT	./GL/glew.h	/^#define glBlendEquationEXT /;"	d
glBlendEquationIndexedAMD	./GL/glew.h	/^#define glBlendEquationIndexedAMD /;"	d
glBlendEquationOES	./GL/glew.h	/^#define glBlendEquationOES /;"	d
glBlendEquationSeparate	./GL/glew.h	/^#define glBlendEquationSeparate /;"	d
glBlendEquationSeparateEXT	./GL/glew.h	/^#define glBlendEquationSeparateEXT /;"	d
glBlendEquationSeparateIndexedAMD	./GL/glew.h	/^#define glBlendEquationSeparateIndexedAMD /;"	d
glBlendEquationSeparateOES	./GL/glew.h	/^#define glBlendEquationSeparateOES /;"	d
glBlendEquationSeparatei	./GL/glew.h	/^#define glBlendEquationSeparatei /;"	d
glBlendEquationSeparateiARB	./GL/glew.h	/^#define glBlendEquationSeparateiARB /;"	d
glBlendEquationSeparateiEXT	./GL/glew.h	/^#define glBlendEquationSeparateiEXT /;"	d
glBlendEquationSeparateiOES	./GL/glew.h	/^#define glBlendEquationSeparateiOES /;"	d
glBlendEquationi	./GL/glew.h	/^#define glBlendEquationi /;"	d
glBlendEquationiARB	./GL/glew.h	/^#define glBlendEquationiARB /;"	d
glBlendEquationiEXT	./GL/glew.h	/^#define glBlendEquationiEXT /;"	d
glBlendEquationiOES	./GL/glew.h	/^#define glBlendEquationiOES /;"	d
glBlendFuncIndexedAMD	./GL/glew.h	/^#define glBlendFuncIndexedAMD /;"	d
glBlendFuncSeparate	./GL/glew.h	/^#define glBlendFuncSeparate /;"	d
glBlendFuncSeparateEXT	./GL/glew.h	/^#define glBlendFuncSeparateEXT /;"	d
glBlendFuncSeparateIndexedAMD	./GL/glew.h	/^#define glBlendFuncSeparateIndexedAMD /;"	d
glBlendFuncSeparateOES	./GL/glew.h	/^#define glBlendFuncSeparateOES /;"	d
glBlendFuncSeparatei	./GL/glew.h	/^#define glBlendFuncSeparatei /;"	d
glBlendFuncSeparateiARB	./GL/glew.h	/^#define glBlendFuncSeparateiARB /;"	d
glBlendFuncSeparateiEXT	./GL/glew.h	/^#define glBlendFuncSeparateiEXT /;"	d
glBlendFuncSeparateiOES	./GL/glew.h	/^#define glBlendFuncSeparateiOES /;"	d
glBlendFunci	./GL/glew.h	/^#define glBlendFunci /;"	d
glBlendFunciARB	./GL/glew.h	/^#define glBlendFunciARB /;"	d
glBlendFunciEXT	./GL/glew.h	/^#define glBlendFunciEXT /;"	d
glBlendFunciOES	./GL/glew.h	/^#define glBlendFunciOES /;"	d
glBlendParameteriNV	./GL/glew.h	/^#define glBlendParameteriNV /;"	d
glBlitFramebuffer	./GL/glew.h	/^#define glBlitFramebuffer /;"	d
glBlitFramebufferANGLE	./GL/glew.h	/^#define glBlitFramebufferANGLE /;"	d
glBlitFramebufferEXT	./GL/glew.h	/^#define glBlitFramebufferEXT /;"	d
glBlitFramebufferNV	./GL/glew.h	/^#define glBlitFramebufferNV /;"	d
glBlitNamedFramebuffer	./GL/glew.h	/^#define glBlitNamedFramebuffer /;"	d
glBufferAddressRangeNV	./GL/glew.h	/^#define glBufferAddressRangeNV /;"	d
glBufferAttachMemoryNV	./GL/glew.h	/^#define glBufferAttachMemoryNV /;"	d
glBufferData	./GL/glew.h	/^#define glBufferData /;"	d
glBufferDataARB	./GL/glew.h	/^#define glBufferDataARB /;"	d
glBufferPageCommitmentARB	./GL/glew.h	/^#define glBufferPageCommitmentARB /;"	d
glBufferParameteriAPPLE	./GL/glew.h	/^#define glBufferParameteriAPPLE /;"	d
glBufferRegionEnabled	./GL/glew.h	/^#define glBufferRegionEnabled /;"	d
glBufferStorage	./GL/glew.h	/^#define glBufferStorage /;"	d
glBufferStorageEXT	./GL/glew.h	/^#define glBufferStorageEXT /;"	d
glBufferStorageExternalEXT	./GL/glew.h	/^#define glBufferStorageExternalEXT /;"	d
glBufferStorageMemEXT	./GL/glew.h	/^#define glBufferStorageMemEXT /;"	d
glBufferSubData	./GL/glew.h	/^#define glBufferSubData /;"	d
glBufferSubDataARB	./GL/glew.h	/^#define glBufferSubDataARB /;"	d
glCallCommandListNV	./GL/glew.h	/^#define glCallCommandListNV /;"	d
glCheckFramebufferStatus	./GL/glew.h	/^#define glCheckFramebufferStatus /;"	d
glCheckFramebufferStatusEXT	./GL/glew.h	/^#define glCheckFramebufferStatusEXT /;"	d
glCheckFramebufferStatusOES	./GL/glew.h	/^#define glCheckFramebufferStatusOES /;"	d
glCheckNamedFramebufferStatus	./GL/glew.h	/^#define glCheckNamedFramebufferStatus /;"	d
glCheckNamedFramebufferStatusEXT	./GL/glew.h	/^#define glCheckNamedFramebufferStatusEXT /;"	d
glClampColor	./GL/glew.h	/^#define glClampColor /;"	d
glClampColorARB	./GL/glew.h	/^#define glClampColorARB /;"	d
glClearBufferData	./GL/glew.h	/^#define glClearBufferData /;"	d
glClearBufferSubData	./GL/glew.h	/^#define glClearBufferSubData /;"	d
glClearBufferfi	./GL/glew.h	/^#define glClearBufferfi /;"	d
glClearBufferfv	./GL/glew.h	/^#define glClearBufferfv /;"	d
glClearBufferiv	./GL/glew.h	/^#define glClearBufferiv /;"	d
glClearBufferuiv	./GL/glew.h	/^#define glClearBufferuiv /;"	d
glClearColorIiEXT	./GL/glew.h	/^#define glClearColorIiEXT /;"	d
glClearColorIuiEXT	./GL/glew.h	/^#define glClearColorIuiEXT /;"	d
glClearColorx	./GL/glew.h	/^#define glClearColorx /;"	d
glClearDepthdNV	./GL/glew.h	/^#define glClearDepthdNV /;"	d
glClearDepthf	./GL/glew.h	/^#define glClearDepthf /;"	d
glClearDepthfOES	./GL/glew.h	/^#define glClearDepthfOES /;"	d
glClearDepthx	./GL/glew.h	/^#define glClearDepthx /;"	d
glClearNamedBufferData	./GL/glew.h	/^#define glClearNamedBufferData /;"	d
glClearNamedBufferDataEXT	./GL/glew.h	/^#define glClearNamedBufferDataEXT /;"	d
glClearNamedBufferSubData	./GL/glew.h	/^#define glClearNamedBufferSubData /;"	d
glClearNamedBufferSubDataEXT	./GL/glew.h	/^#define glClearNamedBufferSubDataEXT /;"	d
glClearNamedFramebufferfi	./GL/glew.h	/^#define glClearNamedFramebufferfi /;"	d
glClearNamedFramebufferfv	./GL/glew.h	/^#define glClearNamedFramebufferfv /;"	d
glClearNamedFramebufferiv	./GL/glew.h	/^#define glClearNamedFramebufferiv /;"	d
glClearNamedFramebufferuiv	./GL/glew.h	/^#define glClearNamedFramebufferuiv /;"	d
glClearPixelLocalStorageuiEXT	./GL/glew.h	/^#define glClearPixelLocalStorageuiEXT /;"	d
glClearTexImage	./GL/glew.h	/^#define glClearTexImage /;"	d
glClearTexImageEXT	./GL/glew.h	/^#define glClearTexImageEXT /;"	d
glClearTexSubImage	./GL/glew.h	/^#define glClearTexSubImage /;"	d
glClearTexSubImageEXT	./GL/glew.h	/^#define glClearTexSubImageEXT /;"	d
glClientActiveTexture	./GL/glew.h	/^#define glClientActiveTexture /;"	d
glClientActiveTextureARB	./GL/glew.h	/^#define glClientActiveTextureARB /;"	d
glClientActiveVertexStreamATI	./GL/glew.h	/^#define glClientActiveVertexStreamATI /;"	d
glClientAttribDefaultEXT	./GL/glew.h	/^#define glClientAttribDefaultEXT /;"	d
glClientWaitSemaphoreui64NVX	./GL/glew.h	/^#define glClientWaitSemaphoreui64NVX /;"	d
glClientWaitSync	./GL/glew.h	/^#define glClientWaitSync /;"	d
glClientWaitSyncAPPLE	./GL/glew.h	/^#define glClientWaitSyncAPPLE /;"	d
glClipControl	./GL/glew.h	/^#define glClipControl /;"	d
glClipControlEXT	./GL/glew.h	/^#define glClipControlEXT /;"	d
glClipPlanef	./GL/glew.h	/^#define glClipPlanef /;"	d
glClipPlanefOES	./GL/glew.h	/^#define glClipPlanefOES /;"	d
glClipPlanex	./GL/glew.h	/^#define glClipPlanex /;"	d
glColor3fVertex3fSUN	./GL/glew.h	/^#define glColor3fVertex3fSUN /;"	d
glColor3fVertex3fvSUN	./GL/glew.h	/^#define glColor3fVertex3fvSUN /;"	d
glColor3hNV	./GL/glew.h	/^#define glColor3hNV /;"	d
glColor3hvNV	./GL/glew.h	/^#define glColor3hvNV /;"	d
glColor4fNormal3fVertex3fSUN	./GL/glew.h	/^#define glColor4fNormal3fVertex3fSUN /;"	d
glColor4fNormal3fVertex3fvSUN	./GL/glew.h	/^#define glColor4fNormal3fVertex3fvSUN /;"	d
glColor4hNV	./GL/glew.h	/^#define glColor4hNV /;"	d
glColor4hvNV	./GL/glew.h	/^#define glColor4hvNV /;"	d
glColor4ubVertex2fSUN	./GL/glew.h	/^#define glColor4ubVertex2fSUN /;"	d
glColor4ubVertex2fvSUN	./GL/glew.h	/^#define glColor4ubVertex2fvSUN /;"	d
glColor4ubVertex3fSUN	./GL/glew.h	/^#define glColor4ubVertex3fSUN /;"	d
glColor4ubVertex3fvSUN	./GL/glew.h	/^#define glColor4ubVertex3fvSUN /;"	d
glColor4x	./GL/glew.h	/^#define glColor4x /;"	d
glColorFormatNV	./GL/glew.h	/^#define glColorFormatNV /;"	d
glColorFragmentOp1ATI	./GL/glew.h	/^#define glColorFragmentOp1ATI /;"	d
glColorFragmentOp2ATI	./GL/glew.h	/^#define glColorFragmentOp2ATI /;"	d
glColorFragmentOp3ATI	./GL/glew.h	/^#define glColorFragmentOp3ATI /;"	d
glColorMaskIndexedEXT	./GL/glew.h	/^#define glColorMaskIndexedEXT /;"	d
glColorMaski	./GL/glew.h	/^#define glColorMaski /;"	d
glColorMaskiEXT	./GL/glew.h	/^#define glColorMaskiEXT /;"	d
glColorMaskiOES	./GL/glew.h	/^#define glColorMaskiOES /;"	d
glColorP3ui	./GL/glew.h	/^#define glColorP3ui /;"	d
glColorP3uiv	./GL/glew.h	/^#define glColorP3uiv /;"	d
glColorP4ui	./GL/glew.h	/^#define glColorP4ui /;"	d
glColorP4uiv	./GL/glew.h	/^#define glColorP4uiv /;"	d
glColorPointerEXT	./GL/glew.h	/^#define glColorPointerEXT /;"	d
glColorPointerListIBM	./GL/glew.h	/^#define glColorPointerListIBM /;"	d
glColorPointervINTEL	./GL/glew.h	/^#define glColorPointervINTEL /;"	d
glColorSubTable	./GL/glew.h	/^#define glColorSubTable /;"	d
glColorSubTableEXT	./GL/glew.h	/^#define glColorSubTableEXT /;"	d
glColorTable	./GL/glew.h	/^#define glColorTable /;"	d
glColorTableEXT	./GL/glew.h	/^#define glColorTableEXT /;"	d
glColorTableParameterfv	./GL/glew.h	/^#define glColorTableParameterfv /;"	d
glColorTableParameterfvSGI	./GL/glew.h	/^#define glColorTableParameterfvSGI /;"	d
glColorTableParameteriv	./GL/glew.h	/^#define glColorTableParameteriv /;"	d
glColorTableParameterivSGI	./GL/glew.h	/^#define glColorTableParameterivSGI /;"	d
glColorTableSGI	./GL/glew.h	/^#define glColorTableSGI /;"	d
glCombinerInputNV	./GL/glew.h	/^#define glCombinerInputNV /;"	d
glCombinerOutputNV	./GL/glew.h	/^#define glCombinerOutputNV /;"	d
glCombinerParameterfNV	./GL/glew.h	/^#define glCombinerParameterfNV /;"	d
glCombinerParameterfvNV	./GL/glew.h	/^#define glCombinerParameterfvNV /;"	d
glCombinerParameteriNV	./GL/glew.h	/^#define glCombinerParameteriNV /;"	d
glCombinerParameterivNV	./GL/glew.h	/^#define glCombinerParameterivNV /;"	d
glCombinerStageParameterfvNV	./GL/glew.h	/^#define glCombinerStageParameterfvNV /;"	d
glCommandListSegmentsNV	./GL/glew.h	/^#define glCommandListSegmentsNV /;"	d
glCompileCommandListNV	./GL/glew.h	/^#define glCompileCommandListNV /;"	d
glCompileShader	./GL/glew.h	/^#define glCompileShader /;"	d
glCompileShaderARB	./GL/glew.h	/^#define glCompileShaderARB /;"	d
glCompileShaderIncludeARB	./GL/glew.h	/^#define glCompileShaderIncludeARB /;"	d
glCompressedMultiTexImage1DEXT	./GL/glew.h	/^#define glCompressedMultiTexImage1DEXT /;"	d
glCompressedMultiTexImage2DEXT	./GL/glew.h	/^#define glCompressedMultiTexImage2DEXT /;"	d
glCompressedMultiTexImage3DEXT	./GL/glew.h	/^#define glCompressedMultiTexImage3DEXT /;"	d
glCompressedMultiTexSubImage1DEXT	./GL/glew.h	/^#define glCompressedMultiTexSubImage1DEXT /;"	d
glCompressedMultiTexSubImage2DEXT	./GL/glew.h	/^#define glCompressedMultiTexSubImage2DEXT /;"	d
glCompressedMultiTexSubImage3DEXT	./GL/glew.h	/^#define glCompressedMultiTexSubImage3DEXT /;"	d
glCompressedTexImage1D	./GL/glew.h	/^#define glCompressedTexImage1D /;"	d
glCompressedTexImage1DARB	./GL/glew.h	/^#define glCompressedTexImage1DARB /;"	d
glCompressedTexImage2D	./GL/glew.h	/^#define glCompressedTexImage2D /;"	d
glCompressedTexImage2DARB	./GL/glew.h	/^#define glCompressedTexImage2DARB /;"	d
glCompressedTexImage3D	./GL/glew.h	/^#define glCompressedTexImage3D /;"	d
glCompressedTexImage3DARB	./GL/glew.h	/^#define glCompressedTexImage3DARB /;"	d
glCompressedTexImage3DNV	./GL/glew.h	/^#define glCompressedTexImage3DNV /;"	d
glCompressedTexImage3DOES	./GL/glew.h	/^#define glCompressedTexImage3DOES /;"	d
glCompressedTexSubImage1D	./GL/glew.h	/^#define glCompressedTexSubImage1D /;"	d
glCompressedTexSubImage1DARB	./GL/glew.h	/^#define glCompressedTexSubImage1DARB /;"	d
glCompressedTexSubImage2D	./GL/glew.h	/^#define glCompressedTexSubImage2D /;"	d
glCompressedTexSubImage2DARB	./GL/glew.h	/^#define glCompressedTexSubImage2DARB /;"	d
glCompressedTexSubImage3D	./GL/glew.h	/^#define glCompressedTexSubImage3D /;"	d
glCompressedTexSubImage3DARB	./GL/glew.h	/^#define glCompressedTexSubImage3DARB /;"	d
glCompressedTexSubImage3DNV	./GL/glew.h	/^#define glCompressedTexSubImage3DNV /;"	d
glCompressedTexSubImage3DOES	./GL/glew.h	/^#define glCompressedTexSubImage3DOES /;"	d
glCompressedTextureImage1DEXT	./GL/glew.h	/^#define glCompressedTextureImage1DEXT /;"	d
glCompressedTextureImage2DEXT	./GL/glew.h	/^#define glCompressedTextureImage2DEXT /;"	d
glCompressedTextureImage3DEXT	./GL/glew.h	/^#define glCompressedTextureImage3DEXT /;"	d
glCompressedTextureSubImage1D	./GL/glew.h	/^#define glCompressedTextureSubImage1D /;"	d
glCompressedTextureSubImage1DEXT	./GL/glew.h	/^#define glCompressedTextureSubImage1DEXT /;"	d
glCompressedTextureSubImage2D	./GL/glew.h	/^#define glCompressedTextureSubImage2D /;"	d
glCompressedTextureSubImage2DEXT	./GL/glew.h	/^#define glCompressedTextureSubImage2DEXT /;"	d
glCompressedTextureSubImage3D	./GL/glew.h	/^#define glCompressedTextureSubImage3D /;"	d
glCompressedTextureSubImage3DEXT	./GL/glew.h	/^#define glCompressedTextureSubImage3DEXT /;"	d
glConservativeRasterParameterfNV	./GL/glew.h	/^#define glConservativeRasterParameterfNV /;"	d
glConservativeRasterParameteriNV	./GL/glew.h	/^#define glConservativeRasterParameteriNV /;"	d
glConvolutionFilter1D	./GL/glew.h	/^#define glConvolutionFilter1D /;"	d
glConvolutionFilter1DEXT	./GL/glew.h	/^#define glConvolutionFilter1DEXT /;"	d
glConvolutionFilter2D	./GL/glew.h	/^#define glConvolutionFilter2D /;"	d
glConvolutionFilter2DEXT	./GL/glew.h	/^#define glConvolutionFilter2DEXT /;"	d
glConvolutionParameterf	./GL/glew.h	/^#define glConvolutionParameterf /;"	d
glConvolutionParameterfEXT	./GL/glew.h	/^#define glConvolutionParameterfEXT /;"	d
glConvolutionParameterfv	./GL/glew.h	/^#define glConvolutionParameterfv /;"	d
glConvolutionParameterfvEXT	./GL/glew.h	/^#define glConvolutionParameterfvEXT /;"	d
glConvolutionParameteri	./GL/glew.h	/^#define glConvolutionParameteri /;"	d
glConvolutionParameteriEXT	./GL/glew.h	/^#define glConvolutionParameteriEXT /;"	d
glConvolutionParameteriv	./GL/glew.h	/^#define glConvolutionParameteriv /;"	d
glConvolutionParameterivEXT	./GL/glew.h	/^#define glConvolutionParameterivEXT /;"	d
glCopyBufferSubData	./GL/glew.h	/^#define glCopyBufferSubData /;"	d
glCopyBufferSubDataNV	./GL/glew.h	/^#define glCopyBufferSubDataNV /;"	d
glCopyColorSubTable	./GL/glew.h	/^#define glCopyColorSubTable /;"	d
glCopyColorSubTableEXT	./GL/glew.h	/^#define glCopyColorSubTableEXT /;"	d
glCopyColorTable	./GL/glew.h	/^#define glCopyColorTable /;"	d
glCopyColorTableSGI	./GL/glew.h	/^#define glCopyColorTableSGI /;"	d
glCopyConvolutionFilter1D	./GL/glew.h	/^#define glCopyConvolutionFilter1D /;"	d
glCopyConvolutionFilter1DEXT	./GL/glew.h	/^#define glCopyConvolutionFilter1DEXT /;"	d
glCopyConvolutionFilter2D	./GL/glew.h	/^#define glCopyConvolutionFilter2D /;"	d
glCopyConvolutionFilter2DEXT	./GL/glew.h	/^#define glCopyConvolutionFilter2DEXT /;"	d
glCopyImageSubData	./GL/glew.h	/^#define glCopyImageSubData /;"	d
glCopyImageSubDataEXT	./GL/glew.h	/^#define glCopyImageSubDataEXT /;"	d
glCopyImageSubDataNV	./GL/glew.h	/^#define glCopyImageSubDataNV /;"	d
glCopyImageSubDataOES	./GL/glew.h	/^#define glCopyImageSubDataOES /;"	d
glCopyMultiTexImage1DEXT	./GL/glew.h	/^#define glCopyMultiTexImage1DEXT /;"	d
glCopyMultiTexImage2DEXT	./GL/glew.h	/^#define glCopyMultiTexImage2DEXT /;"	d
glCopyMultiTexSubImage1DEXT	./GL/glew.h	/^#define glCopyMultiTexSubImage1DEXT /;"	d
glCopyMultiTexSubImage2DEXT	./GL/glew.h	/^#define glCopyMultiTexSubImage2DEXT /;"	d
glCopyMultiTexSubImage3DEXT	./GL/glew.h	/^#define glCopyMultiTexSubImage3DEXT /;"	d
glCopyNamedBufferSubData	./GL/glew.h	/^#define glCopyNamedBufferSubData /;"	d
glCopyPathNV	./GL/glew.h	/^#define glCopyPathNV /;"	d
glCopyTexImage1DEXT	./GL/glew.h	/^#define glCopyTexImage1DEXT /;"	d
glCopyTexImage2DEXT	./GL/glew.h	/^#define glCopyTexImage2DEXT /;"	d
glCopyTexSubImage1DEXT	./GL/glew.h	/^#define glCopyTexSubImage1DEXT /;"	d
glCopyTexSubImage2DEXT	./GL/glew.h	/^#define glCopyTexSubImage2DEXT /;"	d
glCopyTexSubImage3D	./GL/glew.h	/^#define glCopyTexSubImage3D /;"	d
glCopyTexSubImage3DEXT	./GL/glew.h	/^#define glCopyTexSubImage3DEXT /;"	d
glCopyTexSubImage3DNV	./GL/glew.h	/^#define glCopyTexSubImage3DNV /;"	d
glCopyTexSubImage3DOES	./GL/glew.h	/^#define glCopyTexSubImage3DOES /;"	d
glCopyTextureImage1DEXT	./GL/glew.h	/^#define glCopyTextureImage1DEXT /;"	d
glCopyTextureImage2DEXT	./GL/glew.h	/^#define glCopyTextureImage2DEXT /;"	d
glCopyTextureLevelsAPPLE	./GL/glew.h	/^#define glCopyTextureLevelsAPPLE /;"	d
glCopyTextureSubImage1D	./GL/glew.h	/^#define glCopyTextureSubImage1D /;"	d
glCopyTextureSubImage1DEXT	./GL/glew.h	/^#define glCopyTextureSubImage1DEXT /;"	d
glCopyTextureSubImage2D	./GL/glew.h	/^#define glCopyTextureSubImage2D /;"	d
glCopyTextureSubImage2DEXT	./GL/glew.h	/^#define glCopyTextureSubImage2DEXT /;"	d
glCopyTextureSubImage3D	./GL/glew.h	/^#define glCopyTextureSubImage3D /;"	d
glCopyTextureSubImage3DEXT	./GL/glew.h	/^#define glCopyTextureSubImage3DEXT /;"	d
glCoverFillPathInstancedNV	./GL/glew.h	/^#define glCoverFillPathInstancedNV /;"	d
glCoverFillPathNV	./GL/glew.h	/^#define glCoverFillPathNV /;"	d
glCoverStrokePathInstancedNV	./GL/glew.h	/^#define glCoverStrokePathInstancedNV /;"	d
glCoverStrokePathNV	./GL/glew.h	/^#define glCoverStrokePathNV /;"	d
glCoverageModulationNV	./GL/glew.h	/^#define glCoverageModulationNV /;"	d
glCoverageModulationTableNV	./GL/glew.h	/^#define glCoverageModulationTableNV /;"	d
glCreateArraySetExt	./GL/glew.h	/^#define glCreateArraySetExt /;"	d
glCreateBuffers	./GL/glew.h	/^#define glCreateBuffers /;"	d
glCreateCommandListsNV	./GL/glew.h	/^#define glCreateCommandListsNV /;"	d
glCreateFramebuffers	./GL/glew.h	/^#define glCreateFramebuffers /;"	d
glCreateMemoryObjectsEXT	./GL/glew.h	/^#define glCreateMemoryObjectsEXT /;"	d
glCreatePerfQueryINTEL	./GL/glew.h	/^#define glCreatePerfQueryINTEL /;"	d
glCreateProgram	./GL/glew.h	/^#define glCreateProgram /;"	d
glCreateProgramObjectARB	./GL/glew.h	/^#define glCreateProgramObjectARB /;"	d
glCreateProgramPipelines	./GL/glew.h	/^#define glCreateProgramPipelines /;"	d
glCreateQueries	./GL/glew.h	/^#define glCreateQueries /;"	d
glCreateRenderbuffers	./GL/glew.h	/^#define glCreateRenderbuffers /;"	d
glCreateSamplers	./GL/glew.h	/^#define glCreateSamplers /;"	d
glCreateShader	./GL/glew.h	/^#define glCreateShader /;"	d
glCreateShaderObjectARB	./GL/glew.h	/^#define glCreateShaderObjectARB /;"	d
glCreateShaderProgramEXT	./GL/glew.h	/^#define glCreateShaderProgramEXT /;"	d
glCreateShaderProgramv	./GL/glew.h	/^#define glCreateShaderProgramv /;"	d
glCreateStatesNV	./GL/glew.h	/^#define glCreateStatesNV /;"	d
glCreateSyncFromCLeventARB	./GL/glew.h	/^#define glCreateSyncFromCLeventARB /;"	d
glCreateTextures	./GL/glew.h	/^#define glCreateTextures /;"	d
glCreateTransformFeedbacks	./GL/glew.h	/^#define glCreateTransformFeedbacks /;"	d
glCreateVertexArrays	./GL/glew.h	/^#define glCreateVertexArrays /;"	d
glCullParameterdvEXT	./GL/glew.h	/^#define glCullParameterdvEXT /;"	d
glCullParameterfvEXT	./GL/glew.h	/^#define glCullParameterfvEXT /;"	d
glCurrentPaletteMatrixARB	./GL/glew.h	/^#define glCurrentPaletteMatrixARB /;"	d
glCurrentPaletteMatrixOES	./GL/glew.h	/^#define glCurrentPaletteMatrixOES /;"	d
glDataPipe	./GL/glew.h	/^#define glDataPipe /;"	d
glDebugMessageCallback	./GL/glew.h	/^#define glDebugMessageCallback /;"	d
glDebugMessageCallbackAMD	./GL/glew.h	/^#define glDebugMessageCallbackAMD /;"	d
glDebugMessageCallbackARB	./GL/glew.h	/^#define glDebugMessageCallbackARB /;"	d
glDebugMessageControl	./GL/glew.h	/^#define glDebugMessageControl /;"	d
glDebugMessageControlARB	./GL/glew.h	/^#define glDebugMessageControlARB /;"	d
glDebugMessageEnableAMD	./GL/glew.h	/^#define glDebugMessageEnableAMD /;"	d
glDebugMessageInsert	./GL/glew.h	/^#define glDebugMessageInsert /;"	d
glDebugMessageInsertAMD	./GL/glew.h	/^#define glDebugMessageInsertAMD /;"	d
glDebugMessageInsertARB	./GL/glew.h	/^#define glDebugMessageInsertARB /;"	d
glDeformSGIX	./GL/glew.h	/^#define glDeformSGIX /;"	d
glDeleteArraySetsEXT	./GL/glew.h	/^#define glDeleteArraySetsEXT /;"	d
glDeleteAsyncMarkersSGIX	./GL/glew.h	/^#define glDeleteAsyncMarkersSGIX /;"	d
glDeleteBufferRegion	./GL/glew.h	/^#define glDeleteBufferRegion /;"	d
glDeleteBuffers	./GL/glew.h	/^#define glDeleteBuffers /;"	d
glDeleteBuffersARB	./GL/glew.h	/^#define glDeleteBuffersARB /;"	d
glDeleteCommandListsNV	./GL/glew.h	/^#define glDeleteCommandListsNV /;"	d
glDeleteFencesAPPLE	./GL/glew.h	/^#define glDeleteFencesAPPLE /;"	d
glDeleteFencesNV	./GL/glew.h	/^#define glDeleteFencesNV /;"	d
glDeleteFragmentShaderATI	./GL/glew.h	/^#define glDeleteFragmentShaderATI /;"	d
glDeleteFramebuffers	./GL/glew.h	/^#define glDeleteFramebuffers /;"	d
glDeleteFramebuffersEXT	./GL/glew.h	/^#define glDeleteFramebuffersEXT /;"	d
glDeleteFramebuffersOES	./GL/glew.h	/^#define glDeleteFramebuffersOES /;"	d
glDeleteMPEGPredictorsSGIX	./GL/glew.h	/^#define glDeleteMPEGPredictorsSGIX /;"	d
glDeleteMemoryObjectsEXT	./GL/glew.h	/^#define glDeleteMemoryObjectsEXT /;"	d
glDeleteNamedStringARB	./GL/glew.h	/^#define glDeleteNamedStringARB /;"	d
glDeleteNamesAMD	./GL/glew.h	/^#define glDeleteNamesAMD /;"	d
glDeleteObjectARB	./GL/glew.h	/^#define glDeleteObjectARB /;"	d
glDeleteOcclusionQueriesNV	./GL/glew.h	/^#define glDeleteOcclusionQueriesNV /;"	d
glDeletePathsNV	./GL/glew.h	/^#define glDeletePathsNV /;"	d
glDeletePerfMonitorsAMD	./GL/glew.h	/^#define glDeletePerfMonitorsAMD /;"	d
glDeletePerfQueryINTEL	./GL/glew.h	/^#define glDeletePerfQueryINTEL /;"	d
glDeleteProgram	./GL/glew.h	/^#define glDeleteProgram /;"	d
glDeleteProgramPipelines	./GL/glew.h	/^#define glDeleteProgramPipelines /;"	d
glDeleteProgramsARB	./GL/glew.h	/^#define glDeleteProgramsARB /;"	d
glDeleteProgramsNV	./GL/glew.h	/^#define glDeleteProgramsNV /;"	d
glDeleteQueries	./GL/glew.h	/^#define glDeleteQueries /;"	d
glDeleteQueriesANGLE	./GL/glew.h	/^#define glDeleteQueriesANGLE /;"	d
glDeleteQueriesARB	./GL/glew.h	/^#define glDeleteQueriesARB /;"	d
glDeleteQueriesEXT	./GL/glew.h	/^#define glDeleteQueriesEXT /;"	d
glDeleteRenderbuffers	./GL/glew.h	/^#define glDeleteRenderbuffers /;"	d
glDeleteRenderbuffersEXT	./GL/glew.h	/^#define glDeleteRenderbuffersEXT /;"	d
glDeleteRenderbuffersOES	./GL/glew.h	/^#define glDeleteRenderbuffersOES /;"	d
glDeleteSamplers	./GL/glew.h	/^#define glDeleteSamplers /;"	d
glDeleteSemaphoresEXT	./GL/glew.h	/^#define glDeleteSemaphoresEXT /;"	d
glDeleteShader	./GL/glew.h	/^#define glDeleteShader /;"	d
glDeleteStatesNV	./GL/glew.h	/^#define glDeleteStatesNV /;"	d
glDeleteSync	./GL/glew.h	/^#define glDeleteSync /;"	d
glDeleteSyncAPPLE	./GL/glew.h	/^#define glDeleteSyncAPPLE /;"	d
glDeleteTexturesEXT	./GL/glew.h	/^#define glDeleteTexturesEXT /;"	d
glDeleteTransformFeedbacks	./GL/glew.h	/^#define glDeleteTransformFeedbacks /;"	d
glDeleteTransformFeedbacksNV	./GL/glew.h	/^#define glDeleteTransformFeedbacksNV /;"	d
glDeleteVertexArrays	./GL/glew.h	/^#define glDeleteVertexArrays /;"	d
glDeleteVertexArraysAPPLE	./GL/glew.h	/^#define glDeleteVertexArraysAPPLE /;"	d
glDeleteVertexArraysOES	./GL/glew.h	/^#define glDeleteVertexArraysOES /;"	d
glDeleteVertexArraysSGIX	./GL/glew.h	/^#define glDeleteVertexArraysSGIX /;"	d
glDeleteVertexShaderEXT	./GL/glew.h	/^#define glDeleteVertexShaderEXT /;"	d
glDepthBoundsEXT	./GL/glew.h	/^#define glDepthBoundsEXT /;"	d
glDepthBoundsdNV	./GL/glew.h	/^#define glDepthBoundsdNV /;"	d
glDepthRangeArrayfvNV	./GL/glew.h	/^#define glDepthRangeArrayfvNV /;"	d
glDepthRangeArrayv	./GL/glew.h	/^#define glDepthRangeArrayv /;"	d
glDepthRangeIndexed	./GL/glew.h	/^#define glDepthRangeIndexed /;"	d
glDepthRangeIndexedfNV	./GL/glew.h	/^#define glDepthRangeIndexedfNV /;"	d
glDepthRangedNV	./GL/glew.h	/^#define glDepthRangedNV /;"	d
glDepthRangef	./GL/glew.h	/^#define glDepthRangef /;"	d
glDepthRangefOES	./GL/glew.h	/^#define glDepthRangefOES /;"	d
glDepthRangex	./GL/glew.h	/^#define glDepthRangex /;"	d
glDetachObjectARB	./GL/glew.h	/^#define glDetachObjectARB /;"	d
glDetachShader	./GL/glew.h	/^#define glDetachShader /;"	d
glDetailTexFuncSGIS	./GL/glew.h	/^#define glDetailTexFuncSGIS /;"	d
glDisableClientStateIndexedEXT	./GL/glew.h	/^#define glDisableClientStateIndexedEXT /;"	d
glDisableClientStateiEXT	./GL/glew.h	/^#define glDisableClientStateiEXT /;"	d
glDisableDriverControlQCOM	./GL/glew.h	/^#define glDisableDriverControlQCOM /;"	d
glDisableIndexedEXT	./GL/glew.h	/^#define glDisableIndexedEXT /;"	d
glDisableVariantClientStateEXT	./GL/glew.h	/^#define glDisableVariantClientStateEXT /;"	d
glDisableVertexArrayAttrib	./GL/glew.h	/^#define glDisableVertexArrayAttrib /;"	d
glDisableVertexArrayAttribEXT	./GL/glew.h	/^#define glDisableVertexArrayAttribEXT /;"	d
glDisableVertexArrayEXT	./GL/glew.h	/^#define glDisableVertexArrayEXT /;"	d
glDisableVertexAttribAPPLE	./GL/glew.h	/^#define glDisableVertexAttribAPPLE /;"	d
glDisableVertexAttribArray	./GL/glew.h	/^#define glDisableVertexAttribArray /;"	d
glDisableVertexAttribArrayARB	./GL/glew.h	/^#define glDisableVertexAttribArrayARB /;"	d
glDisablei	./GL/glew.h	/^#define glDisablei /;"	d
glDisableiEXT	./GL/glew.h	/^#define glDisableiEXT /;"	d
glDisableiNV	./GL/glew.h	/^#define glDisableiNV /;"	d
glDisableiOES	./GL/glew.h	/^#define glDisableiOES /;"	d
glDiscardFramebufferEXT	./GL/glew.h	/^#define glDiscardFramebufferEXT /;"	d
glDispatchCompute	./GL/glew.h	/^#define glDispatchCompute /;"	d
glDispatchComputeGroupSizeARB	./GL/glew.h	/^#define glDispatchComputeGroupSizeARB /;"	d
glDispatchComputeIndirect	./GL/glew.h	/^#define glDispatchComputeIndirect /;"	d
glDrawArraysEXT	./GL/glew.h	/^#define glDrawArraysEXT /;"	d
glDrawArraysIndirect	./GL/glew.h	/^#define glDrawArraysIndirect /;"	d
glDrawArraysInstanced	./GL/glew.h	/^#define glDrawArraysInstanced /;"	d
glDrawArraysInstancedANGLE	./GL/glew.h	/^#define glDrawArraysInstancedANGLE /;"	d
glDrawArraysInstancedARB	./GL/glew.h	/^#define glDrawArraysInstancedARB /;"	d
glDrawArraysInstancedBaseInstance	./GL/glew.h	/^#define glDrawArraysInstancedBaseInstance /;"	d
glDrawArraysInstancedBaseInstanceEXT	./GL/glew.h	/^#define glDrawArraysInstancedBaseInstanceEXT /;"	d
glDrawArraysInstancedEXT	./GL/glew.h	/^#define glDrawArraysInstancedEXT /;"	d
glDrawArraysInstancedNV	./GL/glew.h	/^#define glDrawArraysInstancedNV /;"	d
glDrawBufferRegion	./GL/glew.h	/^#define glDrawBufferRegion /;"	d
glDrawBuffers	./GL/glew.h	/^#define glDrawBuffers /;"	d
glDrawBuffersARB	./GL/glew.h	/^#define glDrawBuffersARB /;"	d
glDrawBuffersATI	./GL/glew.h	/^#define glDrawBuffersATI /;"	d
glDrawBuffersEXT	./GL/glew.h	/^#define glDrawBuffersEXT /;"	d
glDrawBuffersIndexedEXT	./GL/glew.h	/^#define glDrawBuffersIndexedEXT /;"	d
glDrawBuffersNV	./GL/glew.h	/^#define glDrawBuffersNV /;"	d
glDrawCommandsAddressNV	./GL/glew.h	/^#define glDrawCommandsAddressNV /;"	d
glDrawCommandsNV	./GL/glew.h	/^#define glDrawCommandsNV /;"	d
glDrawCommandsStatesAddressNV	./GL/glew.h	/^#define glDrawCommandsStatesAddressNV /;"	d
glDrawCommandsStatesNV	./GL/glew.h	/^#define glDrawCommandsStatesNV /;"	d
glDrawElementArrayAPPLE	./GL/glew.h	/^#define glDrawElementArrayAPPLE /;"	d
glDrawElementArrayATI	./GL/glew.h	/^#define glDrawElementArrayATI /;"	d
glDrawElementsBaseVertex	./GL/glew.h	/^#define glDrawElementsBaseVertex /;"	d
glDrawElementsBaseVertexEXT	./GL/glew.h	/^#define glDrawElementsBaseVertexEXT /;"	d
glDrawElementsIndirect	./GL/glew.h	/^#define glDrawElementsIndirect /;"	d
glDrawElementsInstanced	./GL/glew.h	/^#define glDrawElementsInstanced /;"	d
glDrawElementsInstancedANGLE	./GL/glew.h	/^#define glDrawElementsInstancedANGLE /;"	d
glDrawElementsInstancedARB	./GL/glew.h	/^#define glDrawElementsInstancedARB /;"	d
glDrawElementsInstancedBaseInstance	./GL/glew.h	/^#define glDrawElementsInstancedBaseInstance /;"	d
glDrawElementsInstancedBaseInstanceEXT	./GL/glew.h	/^#define glDrawElementsInstancedBaseInstanceEXT /;"	d
glDrawElementsInstancedBaseVertex	./GL/glew.h	/^#define glDrawElementsInstancedBaseVertex /;"	d
glDrawElementsInstancedBaseVertexBaseInstance	./GL/glew.h	/^#define glDrawElementsInstancedBaseVertexBaseInstance /;"	d
glDrawElementsInstancedBaseVertexBaseInstanceEXT	./GL/glew.h	/^#define glDrawElementsInstancedBaseVertexBaseInstanceEXT /;"	d
glDrawElementsInstancedBaseVertexEXT	./GL/glew.h	/^#define glDrawElementsInstancedBaseVertexEXT /;"	d
glDrawElementsInstancedEXT	./GL/glew.h	/^#define glDrawElementsInstancedEXT /;"	d
glDrawElementsInstancedNV	./GL/glew.h	/^#define glDrawElementsInstancedNV /;"	d
glDrawMeshTasksIndirectNV	./GL/glew.h	/^#define glDrawMeshTasksIndirectNV /;"	d
glDrawMeshTasksNV	./GL/glew.h	/^#define glDrawMeshTasksNV /;"	d
glDrawRangeElementArrayAPPLE	./GL/glew.h	/^#define glDrawRangeElementArrayAPPLE /;"	d
glDrawRangeElementArrayATI	./GL/glew.h	/^#define glDrawRangeElementArrayATI /;"	d
glDrawRangeElements	./GL/glew.h	/^#define glDrawRangeElements /;"	d
glDrawRangeElementsBaseVertex	./GL/glew.h	/^#define glDrawRangeElementsBaseVertex /;"	d
glDrawRangeElementsBaseVertexEXT	./GL/glew.h	/^#define glDrawRangeElementsBaseVertexEXT /;"	d
glDrawRangeElementsEXT	./GL/glew.h	/^#define glDrawRangeElementsEXT /;"	d
glDrawTextureNV	./GL/glew.h	/^#define glDrawTextureNV /;"	d
glDrawTransformFeedback	./GL/glew.h	/^#define glDrawTransformFeedback /;"	d
glDrawTransformFeedbackEXT	./GL/glew.h	/^#define glDrawTransformFeedbackEXT /;"	d
glDrawTransformFeedbackInstanced	./GL/glew.h	/^#define glDrawTransformFeedbackInstanced /;"	d
glDrawTransformFeedbackInstancedEXT	./GL/glew.h	/^#define glDrawTransformFeedbackInstancedEXT /;"	d
glDrawTransformFeedbackNV	./GL/glew.h	/^#define glDrawTransformFeedbackNV /;"	d
glDrawTransformFeedbackStream	./GL/glew.h	/^#define glDrawTransformFeedbackStream /;"	d
glDrawTransformFeedbackStreamInstanced	./GL/glew.h	/^#define glDrawTransformFeedbackStreamInstanced /;"	d
glDrawVkImageNV	./GL/glew.h	/^#define glDrawVkImageNV /;"	d
glEGLImageTargetRenderbufferStorageOES	./GL/glew.h	/^#define glEGLImageTargetRenderbufferStorageOES /;"	d
glEGLImageTargetTexStorageEXT	./GL/glew.h	/^#define glEGLImageTargetTexStorageEXT /;"	d
glEGLImageTargetTexture2DOES	./GL/glew.h	/^#define glEGLImageTargetTexture2DOES /;"	d
glEGLImageTargetTextureStorageEXT	./GL/glew.h	/^#define glEGLImageTargetTextureStorageEXT /;"	d
glEdgeFlagFormatNV	./GL/glew.h	/^#define glEdgeFlagFormatNV /;"	d
glEdgeFlagPointerEXT	./GL/glew.h	/^#define glEdgeFlagPointerEXT /;"	d
glEdgeFlagPointerListIBM	./GL/glew.h	/^#define glEdgeFlagPointerListIBM /;"	d
glElementPointerAPPLE	./GL/glew.h	/^#define glElementPointerAPPLE /;"	d
glElementPointerATI	./GL/glew.h	/^#define glElementPointerATI /;"	d
glEnableClientStateIndexedEXT	./GL/glew.h	/^#define glEnableClientStateIndexedEXT /;"	d
glEnableClientStateiEXT	./GL/glew.h	/^#define glEnableClientStateiEXT /;"	d
glEnableDriverControlQCOM	./GL/glew.h	/^#define glEnableDriverControlQCOM /;"	d
glEnableIndexedEXT	./GL/glew.h	/^#define glEnableIndexedEXT /;"	d
glEnableVariantClientStateEXT	./GL/glew.h	/^#define glEnableVariantClientStateEXT /;"	d
glEnableVertexArrayAttrib	./GL/glew.h	/^#define glEnableVertexArrayAttrib /;"	d
glEnableVertexArrayAttribEXT	./GL/glew.h	/^#define glEnableVertexArrayAttribEXT /;"	d
glEnableVertexArrayEXT	./GL/glew.h	/^#define glEnableVertexArrayEXT /;"	d
glEnableVertexAttribAPPLE	./GL/glew.h	/^#define glEnableVertexAttribAPPLE /;"	d
glEnableVertexAttribArray	./GL/glew.h	/^#define glEnableVertexAttribArray /;"	d
glEnableVertexAttribArrayARB	./GL/glew.h	/^#define glEnableVertexAttribArrayARB /;"	d
glEnablei	./GL/glew.h	/^#define glEnablei /;"	d
glEnableiEXT	./GL/glew.h	/^#define glEnableiEXT /;"	d
glEnableiNV	./GL/glew.h	/^#define glEnableiNV /;"	d
glEnableiOES	./GL/glew.h	/^#define glEnableiOES /;"	d
glEndConditionalRender	./GL/glew.h	/^#define glEndConditionalRender /;"	d
glEndConditionalRenderNV	./GL/glew.h	/^#define glEndConditionalRenderNV /;"	d
glEndConditionalRenderNVX	./GL/glew.h	/^#define glEndConditionalRenderNVX /;"	d
glEndFragmentShaderATI	./GL/glew.h	/^#define glEndFragmentShaderATI /;"	d
glEndOcclusionQueryNV	./GL/glew.h	/^#define glEndOcclusionQueryNV /;"	d
glEndPerfMonitorAMD	./GL/glew.h	/^#define glEndPerfMonitorAMD /;"	d
glEndPerfQueryINTEL	./GL/glew.h	/^#define glEndPerfQueryINTEL /;"	d
glEndQuery	./GL/glew.h	/^#define glEndQuery /;"	d
glEndQueryANGLE	./GL/glew.h	/^#define glEndQueryANGLE /;"	d
glEndQueryARB	./GL/glew.h	/^#define glEndQueryARB /;"	d
glEndQueryEXT	./GL/glew.h	/^#define glEndQueryEXT /;"	d
glEndQueryIndexed	./GL/glew.h	/^#define glEndQueryIndexed /;"	d
glEndSceneEXT	./GL/glew.h	/^#define glEndSceneEXT /;"	d
glEndTilingQCOM	./GL/glew.h	/^#define glEndTilingQCOM /;"	d
glEndTransformFeedback	./GL/glew.h	/^#define glEndTransformFeedback /;"	d
glEndTransformFeedbackEXT	./GL/glew.h	/^#define glEndTransformFeedbackEXT /;"	d
glEndTransformFeedbackNV	./GL/glew.h	/^#define glEndTransformFeedbackNV /;"	d
glEndVertexShaderEXT	./GL/glew.h	/^#define glEndVertexShaderEXT /;"	d
glEndVideoCaptureNV	./GL/glew.h	/^#define glEndVideoCaptureNV /;"	d
glErrorStringREGAL	./GL/glew.h	/^#define glErrorStringREGAL /;"	d
glEvalMapsNV	./GL/glew.h	/^#define glEvalMapsNV /;"	d
glExecuteProgramNV	./GL/glew.h	/^#define glExecuteProgramNV /;"	d
glExtGetBufferPointervQCOM	./GL/glew.h	/^#define glExtGetBufferPointervQCOM /;"	d
glExtGetBuffersQCOM	./GL/glew.h	/^#define glExtGetBuffersQCOM /;"	d
glExtGetFramebuffersQCOM	./GL/glew.h	/^#define glExtGetFramebuffersQCOM /;"	d
glExtGetProgramBinarySourceQCOM	./GL/glew.h	/^#define glExtGetProgramBinarySourceQCOM /;"	d
glExtGetProgramsQCOM	./GL/glew.h	/^#define glExtGetProgramsQCOM /;"	d
glExtGetRenderbuffersQCOM	./GL/glew.h	/^#define glExtGetRenderbuffersQCOM /;"	d
glExtGetShadersQCOM	./GL/glew.h	/^#define glExtGetShadersQCOM /;"	d
glExtGetTexLevelParameterivQCOM	./GL/glew.h	/^#define glExtGetTexLevelParameterivQCOM /;"	d
glExtGetTexSubImageQCOM	./GL/glew.h	/^#define glExtGetTexSubImageQCOM /;"	d
glExtGetTexturesQCOM	./GL/glew.h	/^#define glExtGetTexturesQCOM /;"	d
glExtIsProgramBinaryQCOM	./GL/glew.h	/^#define glExtIsProgramBinaryQCOM /;"	d
glExtTexObjectStateOverrideiQCOM	./GL/glew.h	/^#define glExtTexObjectStateOverrideiQCOM /;"	d
glExtractComponentEXT	./GL/glew.h	/^#define glExtractComponentEXT /;"	d
glFenceSync	./GL/glew.h	/^#define glFenceSync /;"	d
glFenceSyncAPPLE	./GL/glew.h	/^#define glFenceSyncAPPLE /;"	d
glFinalCombinerInputNV	./GL/glew.h	/^#define glFinalCombinerInputNV /;"	d
glFinishAsyncSGIX	./GL/glew.h	/^#define glFinishAsyncSGIX /;"	d
glFinishFenceAPPLE	./GL/glew.h	/^#define glFinishFenceAPPLE /;"	d
glFinishFenceNV	./GL/glew.h	/^#define glFinishFenceNV /;"	d
glFinishObjectAPPLE	./GL/glew.h	/^#define glFinishObjectAPPLE /;"	d
glFinishTextureSUNX	./GL/glew.h	/^#define glFinishTextureSUNX /;"	d
glFlushMappedBufferRange	./GL/glew.h	/^#define glFlushMappedBufferRange /;"	d
glFlushMappedBufferRangeAPPLE	./GL/glew.h	/^#define glFlushMappedBufferRangeAPPLE /;"	d
glFlushMappedBufferRangeEXT	./GL/glew.h	/^#define glFlushMappedBufferRangeEXT /;"	d
glFlushMappedNamedBufferRange	./GL/glew.h	/^#define glFlushMappedNamedBufferRange /;"	d
glFlushMappedNamedBufferRangeEXT	./GL/glew.h	/^#define glFlushMappedNamedBufferRangeEXT /;"	d
glFlushPixelDataRangeNV	./GL/glew.h	/^#define glFlushPixelDataRangeNV /;"	d
glFlushRasterSGIX	./GL/glew.h	/^#define glFlushRasterSGIX /;"	d
glFlushVertexArrayRangeAPPLE	./GL/glew.h	/^#define glFlushVertexArrayRangeAPPLE /;"	d
glFlushVertexArrayRangeNV	./GL/glew.h	/^#define glFlushVertexArrayRangeNV /;"	d
glFogCoordFormatNV	./GL/glew.h	/^#define glFogCoordFormatNV /;"	d
glFogCoordPointer	./GL/glew.h	/^#define glFogCoordPointer /;"	d
glFogCoordPointerEXT	./GL/glew.h	/^#define glFogCoordPointerEXT /;"	d
glFogCoordPointerListIBM	./GL/glew.h	/^#define glFogCoordPointerListIBM /;"	d
glFogCoordd	./GL/glew.h	/^#define glFogCoordd /;"	d
glFogCoorddEXT	./GL/glew.h	/^#define glFogCoorddEXT /;"	d
glFogCoorddv	./GL/glew.h	/^#define glFogCoorddv /;"	d
glFogCoorddvEXT	./GL/glew.h	/^#define glFogCoorddvEXT /;"	d
glFogCoordf	./GL/glew.h	/^#define glFogCoordf /;"	d
glFogCoordfEXT	./GL/glew.h	/^#define glFogCoordfEXT /;"	d
glFogCoordfv	./GL/glew.h	/^#define glFogCoordfv /;"	d
glFogCoordfvEXT	./GL/glew.h	/^#define glFogCoordfvEXT /;"	d
glFogCoordhNV	./GL/glew.h	/^#define glFogCoordhNV /;"	d
glFogCoordhvNV	./GL/glew.h	/^#define glFogCoordhvNV /;"	d
glFogFuncSGIS	./GL/glew.h	/^#define glFogFuncSGIS /;"	d
glFogLayersSGIX	./GL/glew.h	/^#define glFogLayersSGIX /;"	d
glFogx	./GL/glew.h	/^#define glFogx /;"	d
glFogxv	./GL/glew.h	/^#define glFogxv /;"	d
glFragmentColorMaterialEXT	./GL/glew.h	/^#define glFragmentColorMaterialEXT /;"	d
glFragmentColorMaterialSGIX	./GL/glew.h	/^#define glFragmentColorMaterialSGIX /;"	d
glFragmentCoverageColorNV	./GL/glew.h	/^#define glFragmentCoverageColorNV /;"	d
glFragmentLightModelfEXT	./GL/glew.h	/^#define glFragmentLightModelfEXT /;"	d
glFragmentLightModelfSGIX	./GL/glew.h	/^#define glFragmentLightModelfSGIX /;"	d
glFragmentLightModelfvEXT	./GL/glew.h	/^#define glFragmentLightModelfvEXT /;"	d
glFragmentLightModelfvSGIX	./GL/glew.h	/^#define glFragmentLightModelfvSGIX /;"	d
glFragmentLightModeliEXT	./GL/glew.h	/^#define glFragmentLightModeliEXT /;"	d
glFragmentLightModeliSGIX	./GL/glew.h	/^#define glFragmentLightModeliSGIX /;"	d
glFragmentLightModelivEXT	./GL/glew.h	/^#define glFragmentLightModelivEXT /;"	d
glFragmentLightModelivSGIX	./GL/glew.h	/^#define glFragmentLightModelivSGIX /;"	d
glFragmentLightfEXT	./GL/glew.h	/^#define glFragmentLightfEXT /;"	d
glFragmentLightfSGIX	./GL/glew.h	/^#define glFragmentLightfSGIX /;"	d
glFragmentLightfvEXT	./GL/glew.h	/^#define glFragmentLightfvEXT /;"	d
glFragmentLightfvSGIX	./GL/glew.h	/^#define glFragmentLightfvSGIX /;"	d
glFragmentLightiEXT	./GL/glew.h	/^#define glFragmentLightiEXT /;"	d
glFragmentLightiSGIX	./GL/glew.h	/^#define glFragmentLightiSGIX /;"	d
glFragmentLightivEXT	./GL/glew.h	/^#define glFragmentLightivEXT /;"	d
glFragmentLightivSGIX	./GL/glew.h	/^#define glFragmentLightivSGIX /;"	d
glFragmentMaterialfEXT	./GL/glew.h	/^#define glFragmentMaterialfEXT /;"	d
glFragmentMaterialfSGIX	./GL/glew.h	/^#define glFragmentMaterialfSGIX /;"	d
glFragmentMaterialfvEXT	./GL/glew.h	/^#define glFragmentMaterialfvEXT /;"	d
glFragmentMaterialfvSGIX	./GL/glew.h	/^#define glFragmentMaterialfvSGIX /;"	d
glFragmentMaterialiEXT	./GL/glew.h	/^#define glFragmentMaterialiEXT /;"	d
glFragmentMaterialiSGIX	./GL/glew.h	/^#define glFragmentMaterialiSGIX /;"	d
glFragmentMaterialivEXT	./GL/glew.h	/^#define glFragmentMaterialivEXT /;"	d
glFragmentMaterialivSGIX	./GL/glew.h	/^#define glFragmentMaterialivSGIX /;"	d
glFrameTerminatorGREMEDY	./GL/glew.h	/^#define glFrameTerminatorGREMEDY /;"	d
glFrameZoomSGIX	./GL/glew.h	/^#define glFrameZoomSGIX /;"	d
glFramebufferDrawBufferEXT	./GL/glew.h	/^#define glFramebufferDrawBufferEXT /;"	d
glFramebufferDrawBuffersEXT	./GL/glew.h	/^#define glFramebufferDrawBuffersEXT /;"	d
glFramebufferFetchBarrierEXT	./GL/glew.h	/^#define glFramebufferFetchBarrierEXT /;"	d
glFramebufferFetchBarrierQCOM	./GL/glew.h	/^#define glFramebufferFetchBarrierQCOM /;"	d
glFramebufferFoveationConfigQCOM	./GL/glew.h	/^#define glFramebufferFoveationConfigQCOM /;"	d
glFramebufferFoveationParametersQCOM	./GL/glew.h	/^#define glFramebufferFoveationParametersQCOM /;"	d
glFramebufferParameteri	./GL/glew.h	/^#define glFramebufferParameteri /;"	d
glFramebufferParameteriMESA	./GL/glew.h	/^#define glFramebufferParameteriMESA /;"	d
glFramebufferPixelLocalStorageSizeEXT	./GL/glew.h	/^#define glFramebufferPixelLocalStorageSizeEXT /;"	d
glFramebufferReadBufferEXT	./GL/glew.h	/^#define glFramebufferReadBufferEXT /;"	d
glFramebufferRenderbuffer	./GL/glew.h	/^#define glFramebufferRenderbuffer /;"	d
glFramebufferRenderbufferEXT	./GL/glew.h	/^#define glFramebufferRenderbufferEXT /;"	d
glFramebufferRenderbufferOES	./GL/glew.h	/^#define glFramebufferRenderbufferOES /;"	d
glFramebufferSampleLocationsfvARB	./GL/glew.h	/^#define glFramebufferSampleLocationsfvARB /;"	d
glFramebufferSampleLocationsfvNV	./GL/glew.h	/^#define glFramebufferSampleLocationsfvNV /;"	d
glFramebufferSamplePositionsfvAMD	./GL/glew.h	/^#define glFramebufferSamplePositionsfvAMD /;"	d
glFramebufferTexture	./GL/glew.h	/^#define glFramebufferTexture /;"	d
glFramebufferTexture1D	./GL/glew.h	/^#define glFramebufferTexture1D /;"	d
glFramebufferTexture1DEXT	./GL/glew.h	/^#define glFramebufferTexture1DEXT /;"	d
glFramebufferTexture2D	./GL/glew.h	/^#define glFramebufferTexture2D /;"	d
glFramebufferTexture2DDownsampleIMG	./GL/glew.h	/^#define glFramebufferTexture2DDownsampleIMG /;"	d
glFramebufferTexture2DEXT	./GL/glew.h	/^#define glFramebufferTexture2DEXT /;"	d
glFramebufferTexture2DMultisampleEXT	./GL/glew.h	/^#define glFramebufferTexture2DMultisampleEXT /;"	d
glFramebufferTexture2DMultisampleIMG	./GL/glew.h	/^#define glFramebufferTexture2DMultisampleIMG /;"	d
glFramebufferTexture2DOES	./GL/glew.h	/^#define glFramebufferTexture2DOES /;"	d
glFramebufferTexture3D	./GL/glew.h	/^#define glFramebufferTexture3D /;"	d
glFramebufferTexture3DEXT	./GL/glew.h	/^#define glFramebufferTexture3DEXT /;"	d
glFramebufferTexture3DOES	./GL/glew.h	/^#define glFramebufferTexture3DOES /;"	d
glFramebufferTextureARB	./GL/glew.h	/^#define glFramebufferTextureARB /;"	d
glFramebufferTextureEXT	./GL/glew.h	/^#define glFramebufferTextureEXT /;"	d
glFramebufferTextureFaceARB	./GL/glew.h	/^#define glFramebufferTextureFaceARB /;"	d
glFramebufferTextureFaceEXT	./GL/glew.h	/^#define glFramebufferTextureFaceEXT /;"	d
glFramebufferTextureLayer	./GL/glew.h	/^#define glFramebufferTextureLayer /;"	d
glFramebufferTextureLayerARB	./GL/glew.h	/^#define glFramebufferTextureLayerARB /;"	d
glFramebufferTextureLayerDownsampleIMG	./GL/glew.h	/^#define glFramebufferTextureLayerDownsampleIMG /;"	d
glFramebufferTextureLayerEXT	./GL/glew.h	/^#define glFramebufferTextureLayerEXT /;"	d
glFramebufferTextureLayerNV	./GL/glew.h	/^#define glFramebufferTextureLayerNV /;"	d
glFramebufferTextureMultisampleMultiviewOVR	./GL/glew.h	/^#define glFramebufferTextureMultisampleMultiviewOVR /;"	d
glFramebufferTextureMultiviewOVR	./GL/glew.h	/^#define glFramebufferTextureMultiviewOVR /;"	d
glFreeObjectBufferATI	./GL/glew.h	/^#define glFreeObjectBufferATI /;"	d
glFrustumf	./GL/glew.h	/^#define glFrustumf /;"	d
glFrustumfOES	./GL/glew.h	/^#define glFrustumfOES /;"	d
glFrustumx	./GL/glew.h	/^#define glFrustumx /;"	d
glGenAsyncMarkersSGIX	./GL/glew.h	/^#define glGenAsyncMarkersSGIX /;"	d
glGenBuffers	./GL/glew.h	/^#define glGenBuffers /;"	d
glGenBuffersARB	./GL/glew.h	/^#define glGenBuffersARB /;"	d
glGenFencesAPPLE	./GL/glew.h	/^#define glGenFencesAPPLE /;"	d
glGenFencesNV	./GL/glew.h	/^#define glGenFencesNV /;"	d
glGenFragmentShadersATI	./GL/glew.h	/^#define glGenFragmentShadersATI /;"	d
glGenFramebuffers	./GL/glew.h	/^#define glGenFramebuffers /;"	d
glGenFramebuffersEXT	./GL/glew.h	/^#define glGenFramebuffersEXT /;"	d
glGenFramebuffersOES	./GL/glew.h	/^#define glGenFramebuffersOES /;"	d
glGenMPEGPredictorsSGIX	./GL/glew.h	/^#define glGenMPEGPredictorsSGIX /;"	d
glGenNamesAMD	./GL/glew.h	/^#define glGenNamesAMD /;"	d
glGenOcclusionQueriesNV	./GL/glew.h	/^#define glGenOcclusionQueriesNV /;"	d
glGenPathsNV	./GL/glew.h	/^#define glGenPathsNV /;"	d
glGenPerfMonitorsAMD	./GL/glew.h	/^#define glGenPerfMonitorsAMD /;"	d
glGenProgramPipelines	./GL/glew.h	/^#define glGenProgramPipelines /;"	d
glGenProgramsARB	./GL/glew.h	/^#define glGenProgramsARB /;"	d
glGenProgramsNV	./GL/glew.h	/^#define glGenProgramsNV /;"	d
glGenQueries	./GL/glew.h	/^#define glGenQueries /;"	d
glGenQueriesANGLE	./GL/glew.h	/^#define glGenQueriesANGLE /;"	d
glGenQueriesARB	./GL/glew.h	/^#define glGenQueriesARB /;"	d
glGenQueriesEXT	./GL/glew.h	/^#define glGenQueriesEXT /;"	d
glGenRenderbuffers	./GL/glew.h	/^#define glGenRenderbuffers /;"	d
glGenRenderbuffersEXT	./GL/glew.h	/^#define glGenRenderbuffersEXT /;"	d
glGenRenderbuffersOES	./GL/glew.h	/^#define glGenRenderbuffersOES /;"	d
glGenSamplers	./GL/glew.h	/^#define glGenSamplers /;"	d
glGenSemaphoresEXT	./GL/glew.h	/^#define glGenSemaphoresEXT /;"	d
glGenSymbolsEXT	./GL/glew.h	/^#define glGenSymbolsEXT /;"	d
glGenTexturesEXT	./GL/glew.h	/^#define glGenTexturesEXT /;"	d
glGenTransformFeedbacks	./GL/glew.h	/^#define glGenTransformFeedbacks /;"	d
glGenTransformFeedbacksNV	./GL/glew.h	/^#define glGenTransformFeedbacksNV /;"	d
glGenVertexArrays	./GL/glew.h	/^#define glGenVertexArrays /;"	d
glGenVertexArraysAPPLE	./GL/glew.h	/^#define glGenVertexArraysAPPLE /;"	d
glGenVertexArraysOES	./GL/glew.h	/^#define glGenVertexArraysOES /;"	d
glGenVertexArraysSGIX	./GL/glew.h	/^#define glGenVertexArraysSGIX /;"	d
glGenVertexShadersEXT	./GL/glew.h	/^#define glGenVertexShadersEXT /;"	d
glGenerateMipmap	./GL/glew.h	/^#define glGenerateMipmap /;"	d
glGenerateMipmapEXT	./GL/glew.h	/^#define glGenerateMipmapEXT /;"	d
glGenerateMipmapOES	./GL/glew.h	/^#define glGenerateMipmapOES /;"	d
glGenerateMultiTexMipmapEXT	./GL/glew.h	/^#define glGenerateMultiTexMipmapEXT /;"	d
glGenerateTextureMipmap	./GL/glew.h	/^#define glGenerateTextureMipmap /;"	d
glGenerateTextureMipmapEXT	./GL/glew.h	/^#define glGenerateTextureMipmapEXT /;"	d
glGetActiveAtomicCounterBufferiv	./GL/glew.h	/^#define glGetActiveAtomicCounterBufferiv /;"	d
glGetActiveAttrib	./GL/glew.h	/^#define glGetActiveAttrib /;"	d
glGetActiveAttribARB	./GL/glew.h	/^#define glGetActiveAttribARB /;"	d
glGetActiveSubroutineName	./GL/glew.h	/^#define glGetActiveSubroutineName /;"	d
glGetActiveSubroutineUniformName	./GL/glew.h	/^#define glGetActiveSubroutineUniformName /;"	d
glGetActiveSubroutineUniformiv	./GL/glew.h	/^#define glGetActiveSubroutineUniformiv /;"	d
glGetActiveUniform	./GL/glew.h	/^#define glGetActiveUniform /;"	d
glGetActiveUniformARB	./GL/glew.h	/^#define glGetActiveUniformARB /;"	d
glGetActiveUniformBlockName	./GL/glew.h	/^#define glGetActiveUniformBlockName /;"	d
glGetActiveUniformBlockiv	./GL/glew.h	/^#define glGetActiveUniformBlockiv /;"	d
glGetActiveUniformName	./GL/glew.h	/^#define glGetActiveUniformName /;"	d
glGetActiveUniformsiv	./GL/glew.h	/^#define glGetActiveUniformsiv /;"	d
glGetActiveVaryingNV	./GL/glew.h	/^#define glGetActiveVaryingNV /;"	d
glGetArrayObjectfvATI	./GL/glew.h	/^#define glGetArrayObjectfvATI /;"	d
glGetArrayObjectivATI	./GL/glew.h	/^#define glGetArrayObjectivATI /;"	d
glGetAttachedObjectsARB	./GL/glew.h	/^#define glGetAttachedObjectsARB /;"	d
glGetAttachedShaders	./GL/glew.h	/^#define glGetAttachedShaders /;"	d
glGetAttribLocation	./GL/glew.h	/^#define glGetAttribLocation /;"	d
glGetAttribLocationARB	./GL/glew.h	/^#define glGetAttribLocationARB /;"	d
glGetBooleanIndexedvEXT	./GL/glew.h	/^#define glGetBooleanIndexedvEXT /;"	d
glGetBooleani_v	./GL/glew.h	/^#define glGetBooleani_v /;"	d
glGetBufferParameteri64v	./GL/glew.h	/^#define glGetBufferParameteri64v /;"	d
glGetBufferParameteriv	./GL/glew.h	/^#define glGetBufferParameteriv /;"	d
glGetBufferParameterivARB	./GL/glew.h	/^#define glGetBufferParameterivARB /;"	d
glGetBufferParameterui64vNV	./GL/glew.h	/^#define glGetBufferParameterui64vNV /;"	d
glGetBufferPointerv	./GL/glew.h	/^#define glGetBufferPointerv /;"	d
glGetBufferPointervARB	./GL/glew.h	/^#define glGetBufferPointervARB /;"	d
glGetBufferPointervOES	./GL/glew.h	/^#define glGetBufferPointervOES /;"	d
glGetBufferSubData	./GL/glew.h	/^#define glGetBufferSubData /;"	d
glGetBufferSubDataARB	./GL/glew.h	/^#define glGetBufferSubDataARB /;"	d
glGetClipPlanef	./GL/glew.h	/^#define glGetClipPlanef /;"	d
glGetClipPlanefOES	./GL/glew.h	/^#define glGetClipPlanefOES /;"	d
glGetClipPlanex	./GL/glew.h	/^#define glGetClipPlanex /;"	d
glGetColorTable	./GL/glew.h	/^#define glGetColorTable /;"	d
glGetColorTableEXT	./GL/glew.h	/^#define glGetColorTableEXT /;"	d
glGetColorTableParameterfv	./GL/glew.h	/^#define glGetColorTableParameterfv /;"	d
glGetColorTableParameterfvEXT	./GL/glew.h	/^#define glGetColorTableParameterfvEXT /;"	d
glGetColorTableParameterfvSGI	./GL/glew.h	/^#define glGetColorTableParameterfvSGI /;"	d
glGetColorTableParameteriv	./GL/glew.h	/^#define glGetColorTableParameteriv /;"	d
glGetColorTableParameterivEXT	./GL/glew.h	/^#define glGetColorTableParameterivEXT /;"	d
glGetColorTableParameterivSGI	./GL/glew.h	/^#define glGetColorTableParameterivSGI /;"	d
glGetColorTableSGI	./GL/glew.h	/^#define glGetColorTableSGI /;"	d
glGetCombinerInputParameterfvNV	./GL/glew.h	/^#define glGetCombinerInputParameterfvNV /;"	d
glGetCombinerInputParameterivNV	./GL/glew.h	/^#define glGetCombinerInputParameterivNV /;"	d
glGetCombinerOutputParameterfvNV	./GL/glew.h	/^#define glGetCombinerOutputParameterfvNV /;"	d
glGetCombinerOutputParameterivNV	./GL/glew.h	/^#define glGetCombinerOutputParameterivNV /;"	d
glGetCombinerStageParameterfvNV	./GL/glew.h	/^#define glGetCombinerStageParameterfvNV /;"	d
glGetCommandHeaderNV	./GL/glew.h	/^#define glGetCommandHeaderNV /;"	d
glGetCompressedMultiTexImageEXT	./GL/glew.h	/^#define glGetCompressedMultiTexImageEXT /;"	d
glGetCompressedTexImage	./GL/glew.h	/^#define glGetCompressedTexImage /;"	d
glGetCompressedTexImageARB	./GL/glew.h	/^#define glGetCompressedTexImageARB /;"	d
glGetCompressedTextureImage	./GL/glew.h	/^#define glGetCompressedTextureImage /;"	d
glGetCompressedTextureImageEXT	./GL/glew.h	/^#define glGetCompressedTextureImageEXT /;"	d
glGetCompressedTextureSubImage	./GL/glew.h	/^#define glGetCompressedTextureSubImage /;"	d
glGetConvolutionFilter	./GL/glew.h	/^#define glGetConvolutionFilter /;"	d
glGetConvolutionFilterEXT	./GL/glew.h	/^#define glGetConvolutionFilterEXT /;"	d
glGetConvolutionParameterfv	./GL/glew.h	/^#define glGetConvolutionParameterfv /;"	d
glGetConvolutionParameterfvEXT	./GL/glew.h	/^#define glGetConvolutionParameterfvEXT /;"	d
glGetConvolutionParameteriv	./GL/glew.h	/^#define glGetConvolutionParameteriv /;"	d
glGetConvolutionParameterivEXT	./GL/glew.h	/^#define glGetConvolutionParameterivEXT /;"	d
glGetCoverageModulationTableNV	./GL/glew.h	/^#define glGetCoverageModulationTableNV /;"	d
glGetDebugMessageLog	./GL/glew.h	/^#define glGetDebugMessageLog /;"	d
glGetDebugMessageLogAMD	./GL/glew.h	/^#define glGetDebugMessageLogAMD /;"	d
glGetDebugMessageLogARB	./GL/glew.h	/^#define glGetDebugMessageLogARB /;"	d
glGetDetailTexFuncSGIS	./GL/glew.h	/^#define glGetDetailTexFuncSGIS /;"	d
glGetDoubleIndexedvEXT	./GL/glew.h	/^#define glGetDoubleIndexedvEXT /;"	d
glGetDoublei_v	./GL/glew.h	/^#define glGetDoublei_v /;"	d
glGetDoublei_vEXT	./GL/glew.h	/^#define glGetDoublei_vEXT /;"	d
glGetDriverControlStringQCOM	./GL/glew.h	/^#define glGetDriverControlStringQCOM /;"	d
glGetDriverControlsQCOM	./GL/glew.h	/^#define glGetDriverControlsQCOM /;"	d
glGetExtensionREGAL	./GL/glew.h	/^#define glGetExtensionREGAL /;"	d
glGetFenceivNV	./GL/glew.h	/^#define glGetFenceivNV /;"	d
glGetFinalCombinerInputParameterfvNV	./GL/glew.h	/^#define glGetFinalCombinerInputParameterfvNV /;"	d
glGetFinalCombinerInputParameterivNV	./GL/glew.h	/^#define glGetFinalCombinerInputParameterivNV /;"	d
glGetFirstPerfQueryIdINTEL	./GL/glew.h	/^#define glGetFirstPerfQueryIdINTEL /;"	d
glGetFixedv	./GL/glew.h	/^#define glGetFixedv /;"	d
glGetFloatIndexedvEXT	./GL/glew.h	/^#define glGetFloatIndexedvEXT /;"	d
glGetFloati_v	./GL/glew.h	/^#define glGetFloati_v /;"	d
glGetFloati_vEXT	./GL/glew.h	/^#define glGetFloati_vEXT /;"	d
glGetFloati_vNV	./GL/glew.h	/^#define glGetFloati_vNV /;"	d
glGetFogFuncSGIS	./GL/glew.h	/^#define glGetFogFuncSGIS /;"	d
glGetFogLayersSGIX	./GL/glew.h	/^#define glGetFogLayersSGIX /;"	d
glGetFragDataIndex	./GL/glew.h	/^#define glGetFragDataIndex /;"	d
glGetFragDataIndexEXT	./GL/glew.h	/^#define glGetFragDataIndexEXT /;"	d
glGetFragDataLocation	./GL/glew.h	/^#define glGetFragDataLocation /;"	d
glGetFragDataLocationEXT	./GL/glew.h	/^#define glGetFragDataLocationEXT /;"	d
glGetFragmentLightfvEXT	./GL/glew.h	/^#define glGetFragmentLightfvEXT /;"	d
glGetFragmentLightfvSGIX	./GL/glew.h	/^#define glGetFragmentLightfvSGIX /;"	d
glGetFragmentLightivEXT	./GL/glew.h	/^#define glGetFragmentLightivEXT /;"	d
glGetFragmentLightivSGIX	./GL/glew.h	/^#define glGetFragmentLightivSGIX /;"	d
glGetFragmentMaterialfvEXT	./GL/glew.h	/^#define glGetFragmentMaterialfvEXT /;"	d
glGetFragmentMaterialfvSGIX	./GL/glew.h	/^#define glGetFragmentMaterialfvSGIX /;"	d
glGetFragmentMaterialivEXT	./GL/glew.h	/^#define glGetFragmentMaterialivEXT /;"	d
glGetFragmentMaterialivSGIX	./GL/glew.h	/^#define glGetFragmentMaterialivSGIX /;"	d
glGetFramebufferAttachmentParameteriv	./GL/glew.h	/^#define glGetFramebufferAttachmentParameteriv /;"	d
glGetFramebufferAttachmentParameterivEXT	./GL/glew.h	/^#define glGetFramebufferAttachmentParameterivEXT /;"	d
glGetFramebufferAttachmentParameterivOES	./GL/glew.h	/^#define glGetFramebufferAttachmentParameterivOES /;"	d
glGetFramebufferParameterfvAMD	./GL/glew.h	/^#define glGetFramebufferParameterfvAMD /;"	d
glGetFramebufferParameteriv	./GL/glew.h	/^#define glGetFramebufferParameteriv /;"	d
glGetFramebufferParameterivEXT	./GL/glew.h	/^#define glGetFramebufferParameterivEXT /;"	d
glGetFramebufferParameterivMESA	./GL/glew.h	/^#define glGetFramebufferParameterivMESA /;"	d
glGetFramebufferPixelLocalStorageSizeEXT	./GL/glew.h	/^#define glGetFramebufferPixelLocalStorageSizeEXT /;"	d
glGetGraphicsResetStatus	./GL/glew.h	/^#define glGetGraphicsResetStatus /;"	d
glGetGraphicsResetStatusARB	./GL/glew.h	/^#define glGetGraphicsResetStatusARB /;"	d
glGetHandleARB	./GL/glew.h	/^#define glGetHandleARB /;"	d
glGetHistogram	./GL/glew.h	/^#define glGetHistogram /;"	d
glGetHistogramEXT	./GL/glew.h	/^#define glGetHistogramEXT /;"	d
glGetHistogramParameterfv	./GL/glew.h	/^#define glGetHistogramParameterfv /;"	d
glGetHistogramParameterfvEXT	./GL/glew.h	/^#define glGetHistogramParameterfvEXT /;"	d
glGetHistogramParameteriv	./GL/glew.h	/^#define glGetHistogramParameteriv /;"	d
glGetHistogramParameterivEXT	./GL/glew.h	/^#define glGetHistogramParameterivEXT /;"	d
glGetImageHandleARB	./GL/glew.h	/^#define glGetImageHandleARB /;"	d
glGetImageHandleNV	./GL/glew.h	/^#define glGetImageHandleNV /;"	d
glGetImageTransformParameterfvHP	./GL/glew.h	/^#define glGetImageTransformParameterfvHP /;"	d
glGetImageTransformParameterivHP	./GL/glew.h	/^#define glGetImageTransformParameterivHP /;"	d
glGetInfoLogARB	./GL/glew.h	/^#define glGetInfoLogARB /;"	d
glGetInteger64i_v	./GL/glew.h	/^#define glGetInteger64i_v /;"	d
glGetInteger64v	./GL/glew.h	/^#define glGetInteger64v /;"	d
glGetInteger64vAPPLE	./GL/glew.h	/^#define glGetInteger64vAPPLE /;"	d
glGetInteger64vEXT	./GL/glew.h	/^#define glGetInteger64vEXT /;"	d
glGetIntegerIndexedvEXT	./GL/glew.h	/^#define glGetIntegerIndexedvEXT /;"	d
glGetIntegeri_v	./GL/glew.h	/^#define glGetIntegeri_v /;"	d
glGetIntegeri_vEXT	./GL/glew.h	/^#define glGetIntegeri_vEXT /;"	d
glGetIntegerui64i_vNV	./GL/glew.h	/^#define glGetIntegerui64i_vNV /;"	d
glGetIntegerui64vNV	./GL/glew.h	/^#define glGetIntegerui64vNV /;"	d
glGetInternalformatSampleivNV	./GL/glew.h	/^#define glGetInternalformatSampleivNV /;"	d
glGetInternalformati64v	./GL/glew.h	/^#define glGetInternalformati64v /;"	d
glGetInternalformativ	./GL/glew.h	/^#define glGetInternalformativ /;"	d
glGetInvariantBooleanvEXT	./GL/glew.h	/^#define glGetInvariantBooleanvEXT /;"	d
glGetInvariantFloatvEXT	./GL/glew.h	/^#define glGetInvariantFloatvEXT /;"	d
glGetInvariantIntegervEXT	./GL/glew.h	/^#define glGetInvariantIntegervEXT /;"	d
glGetLightxv	./GL/glew.h	/^#define glGetLightxv /;"	d
glGetLocalConstantBooleanvEXT	./GL/glew.h	/^#define glGetLocalConstantBooleanvEXT /;"	d
glGetLocalConstantFloatvEXT	./GL/glew.h	/^#define glGetLocalConstantFloatvEXT /;"	d
glGetLocalConstantIntegervEXT	./GL/glew.h	/^#define glGetLocalConstantIntegervEXT /;"	d
glGetMPEGParameterfvSGIX	./GL/glew.h	/^#define glGetMPEGParameterfvSGIX /;"	d
glGetMPEGParameterivSGIX	./GL/glew.h	/^#define glGetMPEGParameterivSGIX /;"	d
glGetMPEGPredictorSGIX	./GL/glew.h	/^#define glGetMPEGPredictorSGIX /;"	d
glGetMPEGQuantTableubv	./GL/glew.h	/^#define glGetMPEGQuantTableubv /;"	d
glGetMapAttribParameterfvNV	./GL/glew.h	/^#define glGetMapAttribParameterfvNV /;"	d
glGetMapAttribParameterivNV	./GL/glew.h	/^#define glGetMapAttribParameterivNV /;"	d
glGetMapControlPointsNV	./GL/glew.h	/^#define glGetMapControlPointsNV /;"	d
glGetMapParameterfvNV	./GL/glew.h	/^#define glGetMapParameterfvNV /;"	d
glGetMapParameterivNV	./GL/glew.h	/^#define glGetMapParameterivNV /;"	d
glGetMaterialxv	./GL/glew.h	/^#define glGetMaterialxv /;"	d
glGetMemoryObjectDetachedResourcesuivNV	./GL/glew.h	/^#define glGetMemoryObjectDetachedResourcesuivNV /;"	d
glGetMemoryObjectParameterivEXT	./GL/glew.h	/^#define glGetMemoryObjectParameterivEXT /;"	d
glGetMinmax	./GL/glew.h	/^#define glGetMinmax /;"	d
glGetMinmaxEXT	./GL/glew.h	/^#define glGetMinmaxEXT /;"	d
glGetMinmaxParameterfv	./GL/glew.h	/^#define glGetMinmaxParameterfv /;"	d
glGetMinmaxParameterfvEXT	./GL/glew.h	/^#define glGetMinmaxParameterfvEXT /;"	d
glGetMinmaxParameteriv	./GL/glew.h	/^#define glGetMinmaxParameteriv /;"	d
glGetMinmaxParameterivEXT	./GL/glew.h	/^#define glGetMinmaxParameterivEXT /;"	d
glGetMultiTexEnvfvEXT	./GL/glew.h	/^#define glGetMultiTexEnvfvEXT /;"	d
glGetMultiTexEnvivEXT	./GL/glew.h	/^#define glGetMultiTexEnvivEXT /;"	d
glGetMultiTexGendvEXT	./GL/glew.h	/^#define glGetMultiTexGendvEXT /;"	d
glGetMultiTexGenfvEXT	./GL/glew.h	/^#define glGetMultiTexGenfvEXT /;"	d
glGetMultiTexGenivEXT	./GL/glew.h	/^#define glGetMultiTexGenivEXT /;"	d
glGetMultiTexImageEXT	./GL/glew.h	/^#define glGetMultiTexImageEXT /;"	d
glGetMultiTexLevelParameterfvEXT	./GL/glew.h	/^#define glGetMultiTexLevelParameterfvEXT /;"	d
glGetMultiTexLevelParameterivEXT	./GL/glew.h	/^#define glGetMultiTexLevelParameterivEXT /;"	d
glGetMultiTexParameterIivEXT	./GL/glew.h	/^#define glGetMultiTexParameterIivEXT /;"	d
glGetMultiTexParameterIuivEXT	./GL/glew.h	/^#define glGetMultiTexParameterIuivEXT /;"	d
glGetMultiTexParameterfvEXT	./GL/glew.h	/^#define glGetMultiTexParameterfvEXT /;"	d
glGetMultiTexParameterivEXT	./GL/glew.h	/^#define glGetMultiTexParameterivEXT /;"	d
glGetMultisamplefv	./GL/glew.h	/^#define glGetMultisamplefv /;"	d
glGetMultisamplefvNV	./GL/glew.h	/^#define glGetMultisamplefvNV /;"	d
glGetNamedBufferParameteri64v	./GL/glew.h	/^#define glGetNamedBufferParameteri64v /;"	d
glGetNamedBufferParameteriv	./GL/glew.h	/^#define glGetNamedBufferParameteriv /;"	d
glGetNamedBufferParameterivEXT	./GL/glew.h	/^#define glGetNamedBufferParameterivEXT /;"	d
glGetNamedBufferParameterui64vNV	./GL/glew.h	/^#define glGetNamedBufferParameterui64vNV /;"	d
glGetNamedBufferPointerv	./GL/glew.h	/^#define glGetNamedBufferPointerv /;"	d
glGetNamedBufferPointervEXT	./GL/glew.h	/^#define glGetNamedBufferPointervEXT /;"	d
glGetNamedBufferSubData	./GL/glew.h	/^#define glGetNamedBufferSubData /;"	d
glGetNamedBufferSubDataEXT	./GL/glew.h	/^#define glGetNamedBufferSubDataEXT /;"	d
glGetNamedFramebufferAttachmentParameteriv	./GL/glew.h	/^#define glGetNamedFramebufferAttachmentParameteriv /;"	d
glGetNamedFramebufferAttachmentParameterivEXT	./GL/glew.h	/^#define glGetNamedFramebufferAttachmentParameterivEXT /;"	d
glGetNamedFramebufferParameterfvAMD	./GL/glew.h	/^#define glGetNamedFramebufferParameterfvAMD /;"	d
glGetNamedFramebufferParameteriv	./GL/glew.h	/^#define glGetNamedFramebufferParameteriv /;"	d
glGetNamedFramebufferParameterivEXT	./GL/glew.h	/^#define glGetNamedFramebufferParameterivEXT /;"	d
glGetNamedProgramLocalParameterIivEXT	./GL/glew.h	/^#define glGetNamedProgramLocalParameterIivEXT /;"	d
glGetNamedProgramLocalParameterIuivEXT	./GL/glew.h	/^#define glGetNamedProgramLocalParameterIuivEXT /;"	d
glGetNamedProgramLocalParameterdvEXT	./GL/glew.h	/^#define glGetNamedProgramLocalParameterdvEXT /;"	d
glGetNamedProgramLocalParameterfvEXT	./GL/glew.h	/^#define glGetNamedProgramLocalParameterfvEXT /;"	d
glGetNamedProgramStringEXT	./GL/glew.h	/^#define glGetNamedProgramStringEXT /;"	d
glGetNamedProgramivEXT	./GL/glew.h	/^#define glGetNamedProgramivEXT /;"	d
glGetNamedRenderbufferParameteriv	./GL/glew.h	/^#define glGetNamedRenderbufferParameteriv /;"	d
glGetNamedRenderbufferParameterivEXT	./GL/glew.h	/^#define glGetNamedRenderbufferParameterivEXT /;"	d
glGetNamedStringARB	./GL/glew.h	/^#define glGetNamedStringARB /;"	d
glGetNamedStringivARB	./GL/glew.h	/^#define glGetNamedStringivARB /;"	d
glGetNextPerfQueryIdINTEL	./GL/glew.h	/^#define glGetNextPerfQueryIdINTEL /;"	d
glGetNonlinLightfvSGIX	./GL/glew.h	/^#define glGetNonlinLightfvSGIX /;"	d
glGetNonlinMaterialfvSGIX	./GL/glew.h	/^#define glGetNonlinMaterialfvSGIX /;"	d
glGetObjectBufferfvATI	./GL/glew.h	/^#define glGetObjectBufferfvATI /;"	d
glGetObjectBufferivATI	./GL/glew.h	/^#define glGetObjectBufferivATI /;"	d
glGetObjectLabel	./GL/glew.h	/^#define glGetObjectLabel /;"	d
glGetObjectLabelEXT	./GL/glew.h	/^#define glGetObjectLabelEXT /;"	d
glGetObjectParameterfvARB	./GL/glew.h	/^#define glGetObjectParameterfvARB /;"	d
glGetObjectParameterivAPPLE	./GL/glew.h	/^#define glGetObjectParameterivAPPLE /;"	d
glGetObjectParameterivARB	./GL/glew.h	/^#define glGetObjectParameterivARB /;"	d
glGetObjectPtrLabel	./GL/glew.h	/^#define glGetObjectPtrLabel /;"	d
glGetOcclusionQueryivNV	./GL/glew.h	/^#define glGetOcclusionQueryivNV /;"	d
glGetOcclusionQueryuivNV	./GL/glew.h	/^#define glGetOcclusionQueryuivNV /;"	d
glGetPathColorGenfvNV	./GL/glew.h	/^#define glGetPathColorGenfvNV /;"	d
glGetPathColorGenivNV	./GL/glew.h	/^#define glGetPathColorGenivNV /;"	d
glGetPathCommandsNV	./GL/glew.h	/^#define glGetPathCommandsNV /;"	d
glGetPathCoordsNV	./GL/glew.h	/^#define glGetPathCoordsNV /;"	d
glGetPathDashArrayNV	./GL/glew.h	/^#define glGetPathDashArrayNV /;"	d
glGetPathLengthNV	./GL/glew.h	/^#define glGetPathLengthNV /;"	d
glGetPathMetricRangeNV	./GL/glew.h	/^#define glGetPathMetricRangeNV /;"	d
glGetPathMetricsNV	./GL/glew.h	/^#define glGetPathMetricsNV /;"	d
glGetPathParameterfvNV	./GL/glew.h	/^#define glGetPathParameterfvNV /;"	d
glGetPathParameterivNV	./GL/glew.h	/^#define glGetPathParameterivNV /;"	d
glGetPathSpacingNV	./GL/glew.h	/^#define glGetPathSpacingNV /;"	d
glGetPathTexGenfvNV	./GL/glew.h	/^#define glGetPathTexGenfvNV /;"	d
glGetPathTexGenivNV	./GL/glew.h	/^#define glGetPathTexGenivNV /;"	d
glGetPerfCounterInfoINTEL	./GL/glew.h	/^#define glGetPerfCounterInfoINTEL /;"	d
glGetPerfMonitorCounterDataAMD	./GL/glew.h	/^#define glGetPerfMonitorCounterDataAMD /;"	d
glGetPerfMonitorCounterInfoAMD	./GL/glew.h	/^#define glGetPerfMonitorCounterInfoAMD /;"	d
glGetPerfMonitorCounterStringAMD	./GL/glew.h	/^#define glGetPerfMonitorCounterStringAMD /;"	d
glGetPerfMonitorCountersAMD	./GL/glew.h	/^#define glGetPerfMonitorCountersAMD /;"	d
glGetPerfMonitorGroupStringAMD	./GL/glew.h	/^#define glGetPerfMonitorGroupStringAMD /;"	d
glGetPerfMonitorGroupsAMD	./GL/glew.h	/^#define glGetPerfMonitorGroupsAMD /;"	d
glGetPerfQueryDataINTEL	./GL/glew.h	/^#define glGetPerfQueryDataINTEL /;"	d
glGetPerfQueryIdByNameINTEL	./GL/glew.h	/^#define glGetPerfQueryIdByNameINTEL /;"	d
glGetPerfQueryInfoINTEL	./GL/glew.h	/^#define glGetPerfQueryInfoINTEL /;"	d
glGetPixelTransformParameterfvEXT	./GL/glew.h	/^#define glGetPixelTransformParameterfvEXT /;"	d
glGetPixelTransformParameterfvSGI	./GL/glew.h	/^#define glGetPixelTransformParameterfvSGI /;"	d
glGetPixelTransformParameterivEXT	./GL/glew.h	/^#define glGetPixelTransformParameterivEXT /;"	d
glGetPixelTransformParameterivSGI	./GL/glew.h	/^#define glGetPixelTransformParameterivSGI /;"	d
glGetPointerIndexedvEXT	./GL/glew.h	/^#define glGetPointerIndexedvEXT /;"	d
glGetPointeri_vEXT	./GL/glew.h	/^#define glGetPointeri_vEXT /;"	d
glGetProcAddressREGAL	./GL/glew.h	/^#define glGetProcAddressREGAL /;"	d
glGetProgramBinary	./GL/glew.h	/^#define glGetProgramBinary /;"	d
glGetProgramBinaryOES	./GL/glew.h	/^#define glGetProgramBinaryOES /;"	d
glGetProgramEnvParameterdvARB	./GL/glew.h	/^#define glGetProgramEnvParameterdvARB /;"	d
glGetProgramEnvParameterfvARB	./GL/glew.h	/^#define glGetProgramEnvParameterfvARB /;"	d
glGetProgramInfoLog	./GL/glew.h	/^#define glGetProgramInfoLog /;"	d
glGetProgramInterfaceiv	./GL/glew.h	/^#define glGetProgramInterfaceiv /;"	d
glGetProgramLocalParameterdvARB	./GL/glew.h	/^#define glGetProgramLocalParameterdvARB /;"	d
glGetProgramLocalParameterfvARB	./GL/glew.h	/^#define glGetProgramLocalParameterfvARB /;"	d
glGetProgramNamedParameterdvNV	./GL/glew.h	/^#define glGetProgramNamedParameterdvNV /;"	d
glGetProgramNamedParameterfvNV	./GL/glew.h	/^#define glGetProgramNamedParameterfvNV /;"	d
glGetProgramParameterdvNV	./GL/glew.h	/^#define glGetProgramParameterdvNV /;"	d
glGetProgramParameterfvNV	./GL/glew.h	/^#define glGetProgramParameterfvNV /;"	d
glGetProgramPipelineInfoLog	./GL/glew.h	/^#define glGetProgramPipelineInfoLog /;"	d
glGetProgramPipelineiv	./GL/glew.h	/^#define glGetProgramPipelineiv /;"	d
glGetProgramResourceIndex	./GL/glew.h	/^#define glGetProgramResourceIndex /;"	d
glGetProgramResourceLocation	./GL/glew.h	/^#define glGetProgramResourceLocation /;"	d
glGetProgramResourceLocationIndex	./GL/glew.h	/^#define glGetProgramResourceLocationIndex /;"	d
glGetProgramResourceLocationIndexEXT	./GL/glew.h	/^#define glGetProgramResourceLocationIndexEXT /;"	d
glGetProgramResourceName	./GL/glew.h	/^#define glGetProgramResourceName /;"	d
glGetProgramResourcefvNV	./GL/glew.h	/^#define glGetProgramResourcefvNV /;"	d
glGetProgramResourceiv	./GL/glew.h	/^#define glGetProgramResourceiv /;"	d
glGetProgramStageiv	./GL/glew.h	/^#define glGetProgramStageiv /;"	d
glGetProgramStringARB	./GL/glew.h	/^#define glGetProgramStringARB /;"	d
glGetProgramStringNV	./GL/glew.h	/^#define glGetProgramStringNV /;"	d
glGetProgramiv	./GL/glew.h	/^#define glGetProgramiv /;"	d
glGetProgramivARB	./GL/glew.h	/^#define glGetProgramivARB /;"	d
glGetProgramivNV	./GL/glew.h	/^#define glGetProgramivNV /;"	d
glGetQueryBufferObjecti64v	./GL/glew.h	/^#define glGetQueryBufferObjecti64v /;"	d
glGetQueryBufferObjectiv	./GL/glew.h	/^#define glGetQueryBufferObjectiv /;"	d
glGetQueryBufferObjectui64v	./GL/glew.h	/^#define glGetQueryBufferObjectui64v /;"	d
glGetQueryBufferObjectuiv	./GL/glew.h	/^#define glGetQueryBufferObjectuiv /;"	d
glGetQueryIndexediv	./GL/glew.h	/^#define glGetQueryIndexediv /;"	d
glGetQueryObjecti64v	./GL/glew.h	/^#define glGetQueryObjecti64v /;"	d
glGetQueryObjecti64vANGLE	./GL/glew.h	/^#define glGetQueryObjecti64vANGLE /;"	d
glGetQueryObjecti64vEXT	./GL/glew.h	/^#define glGetQueryObjecti64vEXT /;"	d
glGetQueryObjectiv	./GL/glew.h	/^#define glGetQueryObjectiv /;"	d
glGetQueryObjectivANGLE	./GL/glew.h	/^#define glGetQueryObjectivANGLE /;"	d
glGetQueryObjectivARB	./GL/glew.h	/^#define glGetQueryObjectivARB /;"	d
glGetQueryObjectivEXT	./GL/glew.h	/^#define glGetQueryObjectivEXT /;"	d
glGetQueryObjectui64v	./GL/glew.h	/^#define glGetQueryObjectui64v /;"	d
glGetQueryObjectui64vANGLE	./GL/glew.h	/^#define glGetQueryObjectui64vANGLE /;"	d
glGetQueryObjectui64vEXT	./GL/glew.h	/^#define glGetQueryObjectui64vEXT /;"	d
glGetQueryObjectuiv	./GL/glew.h	/^#define glGetQueryObjectuiv /;"	d
glGetQueryObjectuivANGLE	./GL/glew.h	/^#define glGetQueryObjectuivANGLE /;"	d
glGetQueryObjectuivARB	./GL/glew.h	/^#define glGetQueryObjectuivARB /;"	d
glGetQueryObjectuivEXT	./GL/glew.h	/^#define glGetQueryObjectuivEXT /;"	d
glGetQueryiv	./GL/glew.h	/^#define glGetQueryiv /;"	d
glGetQueryivANGLE	./GL/glew.h	/^#define glGetQueryivANGLE /;"	d
glGetQueryivARB	./GL/glew.h	/^#define glGetQueryivARB /;"	d
glGetQueryivEXT	./GL/glew.h	/^#define glGetQueryivEXT /;"	d
glGetRenderbufferParameteriv	./GL/glew.h	/^#define glGetRenderbufferParameteriv /;"	d
glGetRenderbufferParameterivEXT	./GL/glew.h	/^#define glGetRenderbufferParameterivEXT /;"	d
glGetRenderbufferParameterivOES	./GL/glew.h	/^#define glGetRenderbufferParameterivOES /;"	d
glGetSamplerParameterIiv	./GL/glew.h	/^#define glGetSamplerParameterIiv /;"	d
glGetSamplerParameterIivEXT	./GL/glew.h	/^#define glGetSamplerParameterIivEXT /;"	d
glGetSamplerParameterIivOES	./GL/glew.h	/^#define glGetSamplerParameterIivOES /;"	d
glGetSamplerParameterIuiv	./GL/glew.h	/^#define glGetSamplerParameterIuiv /;"	d
glGetSamplerParameterIuivEXT	./GL/glew.h	/^#define glGetSamplerParameterIuivEXT /;"	d
glGetSamplerParameterIuivOES	./GL/glew.h	/^#define glGetSamplerParameterIuivOES /;"	d
glGetSamplerParameterfv	./GL/glew.h	/^#define glGetSamplerParameterfv /;"	d
glGetSamplerParameteriv	./GL/glew.h	/^#define glGetSamplerParameteriv /;"	d
glGetSemaphoreParameterui64vEXT	./GL/glew.h	/^#define glGetSemaphoreParameterui64vEXT /;"	d
glGetSeparableFilter	./GL/glew.h	/^#define glGetSeparableFilter /;"	d
glGetSeparableFilterEXT	./GL/glew.h	/^#define glGetSeparableFilterEXT /;"	d
glGetShaderInfoLog	./GL/glew.h	/^#define glGetShaderInfoLog /;"	d
glGetShaderPrecisionFormat	./GL/glew.h	/^#define glGetShaderPrecisionFormat /;"	d
glGetShaderSource	./GL/glew.h	/^#define glGetShaderSource /;"	d
glGetShaderSourceARB	./GL/glew.h	/^#define glGetShaderSourceARB /;"	d
glGetShaderiv	./GL/glew.h	/^#define glGetShaderiv /;"	d
glGetShadingRateImagePaletteNV	./GL/glew.h	/^#define glGetShadingRateImagePaletteNV /;"	d
glGetShadingRateSampleLocationivNV	./GL/glew.h	/^#define glGetShadingRateSampleLocationivNV /;"	d
glGetSharpenTexFuncSGIS	./GL/glew.h	/^#define glGetSharpenTexFuncSGIS /;"	d
glGetStageIndexNV	./GL/glew.h	/^#define glGetStageIndexNV /;"	d
glGetStringi	./GL/glew.h	/^#define glGetStringi /;"	d
glGetSubroutineIndex	./GL/glew.h	/^#define glGetSubroutineIndex /;"	d
glGetSubroutineUniformLocation	./GL/glew.h	/^#define glGetSubroutineUniformLocation /;"	d
glGetSynciv	./GL/glew.h	/^#define glGetSynciv /;"	d
glGetSyncivAPPLE	./GL/glew.h	/^#define glGetSyncivAPPLE /;"	d
glGetTexBumpParameterfvATI	./GL/glew.h	/^#define glGetTexBumpParameterfvATI /;"	d
glGetTexBumpParameterivATI	./GL/glew.h	/^#define glGetTexBumpParameterivATI /;"	d
glGetTexEnvxv	./GL/glew.h	/^#define glGetTexEnvxv /;"	d
glGetTexFilterFuncSGIS	./GL/glew.h	/^#define glGetTexFilterFuncSGIS /;"	d
glGetTexGenfvOES	./GL/glew.h	/^#define glGetTexGenfvOES /;"	d
glGetTexGenivOES	./GL/glew.h	/^#define glGetTexGenivOES /;"	d
glGetTexGenxvOES	./GL/glew.h	/^#define glGetTexGenxvOES /;"	d
glGetTexParameterIiv	./GL/glew.h	/^#define glGetTexParameterIiv /;"	d
glGetTexParameterIivEXT	./GL/glew.h	/^#define glGetTexParameterIivEXT /;"	d
glGetTexParameterIivOES	./GL/glew.h	/^#define glGetTexParameterIivOES /;"	d
glGetTexParameterIuiv	./GL/glew.h	/^#define glGetTexParameterIuiv /;"	d
glGetTexParameterIuivEXT	./GL/glew.h	/^#define glGetTexParameterIuivEXT /;"	d
glGetTexParameterIuivOES	./GL/glew.h	/^#define glGetTexParameterIuivOES /;"	d
glGetTexParameterPointervAPPLE	./GL/glew.h	/^#define glGetTexParameterPointervAPPLE /;"	d
glGetTexParameterxv	./GL/glew.h	/^#define glGetTexParameterxv /;"	d
glGetTextureHandleARB	./GL/glew.h	/^#define glGetTextureHandleARB /;"	d
glGetTextureHandleIMG	./GL/glew.h	/^#define glGetTextureHandleIMG /;"	d
glGetTextureHandleNV	./GL/glew.h	/^#define glGetTextureHandleNV /;"	d
glGetTextureImage	./GL/glew.h	/^#define glGetTextureImage /;"	d
glGetTextureImageEXT	./GL/glew.h	/^#define glGetTextureImageEXT /;"	d
glGetTextureLevelParameterfv	./GL/glew.h	/^#define glGetTextureLevelParameterfv /;"	d
glGetTextureLevelParameterfvEXT	./GL/glew.h	/^#define glGetTextureLevelParameterfvEXT /;"	d
glGetTextureLevelParameteriv	./GL/glew.h	/^#define glGetTextureLevelParameteriv /;"	d
glGetTextureLevelParameterivEXT	./GL/glew.h	/^#define glGetTextureLevelParameterivEXT /;"	d
glGetTextureParameterIiv	./GL/glew.h	/^#define glGetTextureParameterIiv /;"	d
glGetTextureParameterIivEXT	./GL/glew.h	/^#define glGetTextureParameterIivEXT /;"	d
glGetTextureParameterIuiv	./GL/glew.h	/^#define glGetTextureParameterIuiv /;"	d
glGetTextureParameterIuivEXT	./GL/glew.h	/^#define glGetTextureParameterIuivEXT /;"	d
glGetTextureParameterfv	./GL/glew.h	/^#define glGetTextureParameterfv /;"	d
glGetTextureParameterfvEXT	./GL/glew.h	/^#define glGetTextureParameterfvEXT /;"	d
glGetTextureParameteriv	./GL/glew.h	/^#define glGetTextureParameteriv /;"	d
glGetTextureParameterivEXT	./GL/glew.h	/^#define glGetTextureParameterivEXT /;"	d
glGetTextureSamplerHandleARB	./GL/glew.h	/^#define glGetTextureSamplerHandleARB /;"	d
glGetTextureSamplerHandleIMG	./GL/glew.h	/^#define glGetTextureSamplerHandleIMG /;"	d
glGetTextureSamplerHandleNV	./GL/glew.h	/^#define glGetTextureSamplerHandleNV /;"	d
glGetTextureSubImage	./GL/glew.h	/^#define glGetTextureSubImage /;"	d
glGetTrackMatrixivNV	./GL/glew.h	/^#define glGetTrackMatrixivNV /;"	d
glGetTransformFeedbackVarying	./GL/glew.h	/^#define glGetTransformFeedbackVarying /;"	d
glGetTransformFeedbackVaryingEXT	./GL/glew.h	/^#define glGetTransformFeedbackVaryingEXT /;"	d
glGetTransformFeedbackVaryingNV	./GL/glew.h	/^#define glGetTransformFeedbackVaryingNV /;"	d
glGetTransformFeedbacki64_v	./GL/glew.h	/^#define glGetTransformFeedbacki64_v /;"	d
glGetTransformFeedbacki_v	./GL/glew.h	/^#define glGetTransformFeedbacki_v /;"	d
glGetTransformFeedbackiv	./GL/glew.h	/^#define glGetTransformFeedbackiv /;"	d
glGetTranslatedShaderSourceANGLE	./GL/glew.h	/^#define glGetTranslatedShaderSourceANGLE /;"	d
glGetUniformBlockIndex	./GL/glew.h	/^#define glGetUniformBlockIndex /;"	d
glGetUniformBufferSizeEXT	./GL/glew.h	/^#define glGetUniformBufferSizeEXT /;"	d
glGetUniformIndices	./GL/glew.h	/^#define glGetUniformIndices /;"	d
glGetUniformLocation	./GL/glew.h	/^#define glGetUniformLocation /;"	d
glGetUniformLocationARB	./GL/glew.h	/^#define glGetUniformLocationARB /;"	d
glGetUniformOffsetEXT	./GL/glew.h	/^#define glGetUniformOffsetEXT /;"	d
glGetUniformSubroutineuiv	./GL/glew.h	/^#define glGetUniformSubroutineuiv /;"	d
glGetUniformdv	./GL/glew.h	/^#define glGetUniformdv /;"	d
glGetUniformfv	./GL/glew.h	/^#define glGetUniformfv /;"	d
glGetUniformfvARB	./GL/glew.h	/^#define glGetUniformfvARB /;"	d
glGetUniformi64vARB	./GL/glew.h	/^#define glGetUniformi64vARB /;"	d
glGetUniformi64vNV	./GL/glew.h	/^#define glGetUniformi64vNV /;"	d
glGetUniformiv	./GL/glew.h	/^#define glGetUniformiv /;"	d
glGetUniformivARB	./GL/glew.h	/^#define glGetUniformivARB /;"	d
glGetUniformui64vARB	./GL/glew.h	/^#define glGetUniformui64vARB /;"	d
glGetUniformui64vNV	./GL/glew.h	/^#define glGetUniformui64vNV /;"	d
glGetUniformuiv	./GL/glew.h	/^#define glGetUniformuiv /;"	d
glGetUniformuivEXT	./GL/glew.h	/^#define glGetUniformuivEXT /;"	d
glGetUnsignedBytei_vEXT	./GL/glew.h	/^#define glGetUnsignedBytei_vEXT /;"	d
glGetUnsignedBytevEXT	./GL/glew.h	/^#define glGetUnsignedBytevEXT /;"	d
glGetVariantArrayObjectfvATI	./GL/glew.h	/^#define glGetVariantArrayObjectfvATI /;"	d
glGetVariantArrayObjectivATI	./GL/glew.h	/^#define glGetVariantArrayObjectivATI /;"	d
glGetVariantBooleanvEXT	./GL/glew.h	/^#define glGetVariantBooleanvEXT /;"	d
glGetVariantFloatvEXT	./GL/glew.h	/^#define glGetVariantFloatvEXT /;"	d
glGetVariantIntegervEXT	./GL/glew.h	/^#define glGetVariantIntegervEXT /;"	d
glGetVariantPointervEXT	./GL/glew.h	/^#define glGetVariantPointervEXT /;"	d
glGetVaryingLocationNV	./GL/glew.h	/^#define glGetVaryingLocationNV /;"	d
glGetVectorOperationSGIX	./GL/glew.h	/^#define glGetVectorOperationSGIX /;"	d
glGetVertexArrayIndexed64iv	./GL/glew.h	/^#define glGetVertexArrayIndexed64iv /;"	d
glGetVertexArrayIndexediv	./GL/glew.h	/^#define glGetVertexArrayIndexediv /;"	d
glGetVertexArrayIntegeri_vEXT	./GL/glew.h	/^#define glGetVertexArrayIntegeri_vEXT /;"	d
glGetVertexArrayIntegervEXT	./GL/glew.h	/^#define glGetVertexArrayIntegervEXT /;"	d
glGetVertexArrayPointeri_vEXT	./GL/glew.h	/^#define glGetVertexArrayPointeri_vEXT /;"	d
glGetVertexArrayPointervEXT	./GL/glew.h	/^#define glGetVertexArrayPointervEXT /;"	d
glGetVertexArrayiv	./GL/glew.h	/^#define glGetVertexArrayiv /;"	d
glGetVertexAttribArrayObjectfvATI	./GL/glew.h	/^#define glGetVertexAttribArrayObjectfvATI /;"	d
glGetVertexAttribArrayObjectivATI	./GL/glew.h	/^#define glGetVertexAttribArrayObjectivATI /;"	d
glGetVertexAttribIiv	./GL/glew.h	/^#define glGetVertexAttribIiv /;"	d
glGetVertexAttribIivEXT	./GL/glew.h	/^#define glGetVertexAttribIivEXT /;"	d
glGetVertexAttribIuiv	./GL/glew.h	/^#define glGetVertexAttribIuiv /;"	d
glGetVertexAttribIuivEXT	./GL/glew.h	/^#define glGetVertexAttribIuivEXT /;"	d
glGetVertexAttribLdv	./GL/glew.h	/^#define glGetVertexAttribLdv /;"	d
glGetVertexAttribLdvEXT	./GL/glew.h	/^#define glGetVertexAttribLdvEXT /;"	d
glGetVertexAttribLi64vNV	./GL/glew.h	/^#define glGetVertexAttribLi64vNV /;"	d
glGetVertexAttribLui64vARB	./GL/glew.h	/^#define glGetVertexAttribLui64vARB /;"	d
glGetVertexAttribLui64vNV	./GL/glew.h	/^#define glGetVertexAttribLui64vNV /;"	d
glGetVertexAttribPointerv	./GL/glew.h	/^#define glGetVertexAttribPointerv /;"	d
glGetVertexAttribPointervARB	./GL/glew.h	/^#define glGetVertexAttribPointervARB /;"	d
glGetVertexAttribPointervNV	./GL/glew.h	/^#define glGetVertexAttribPointervNV /;"	d
glGetVertexAttribdv	./GL/glew.h	/^#define glGetVertexAttribdv /;"	d
glGetVertexAttribdvARB	./GL/glew.h	/^#define glGetVertexAttribdvARB /;"	d
glGetVertexAttribdvNV	./GL/glew.h	/^#define glGetVertexAttribdvNV /;"	d
glGetVertexAttribfv	./GL/glew.h	/^#define glGetVertexAttribfv /;"	d
glGetVertexAttribfvARB	./GL/glew.h	/^#define glGetVertexAttribfvARB /;"	d
glGetVertexAttribfvNV	./GL/glew.h	/^#define glGetVertexAttribfvNV /;"	d
glGetVertexAttribiv	./GL/glew.h	/^#define glGetVertexAttribiv /;"	d
glGetVertexAttribivARB	./GL/glew.h	/^#define glGetVertexAttribivARB /;"	d
glGetVertexAttribivNV	./GL/glew.h	/^#define glGetVertexAttribivNV /;"	d
glGetVideoCaptureStreamdvNV	./GL/glew.h	/^#define glGetVideoCaptureStreamdvNV /;"	d
glGetVideoCaptureStreamfvNV	./GL/glew.h	/^#define glGetVideoCaptureStreamfvNV /;"	d
glGetVideoCaptureStreamivNV	./GL/glew.h	/^#define glGetVideoCaptureStreamivNV /;"	d
glGetVideoCaptureivNV	./GL/glew.h	/^#define glGetVideoCaptureivNV /;"	d
glGetVideoi64vNV	./GL/glew.h	/^#define glGetVideoi64vNV /;"	d
glGetVideoivNV	./GL/glew.h	/^#define glGetVideoivNV /;"	d
glGetVideoui64vNV	./GL/glew.h	/^#define glGetVideoui64vNV /;"	d
glGetVideouivNV	./GL/glew.h	/^#define glGetVideouivNV /;"	d
glGetVkProcAddrNV	./GL/glew.h	/^#define glGetVkProcAddrNV /;"	d
glGetnColorTableARB	./GL/glew.h	/^#define glGetnColorTableARB /;"	d
glGetnCompressedTexImage	./GL/glew.h	/^#define glGetnCompressedTexImage /;"	d
glGetnCompressedTexImageARB	./GL/glew.h	/^#define glGetnCompressedTexImageARB /;"	d
glGetnConvolutionFilterARB	./GL/glew.h	/^#define glGetnConvolutionFilterARB /;"	d
glGetnHistogramARB	./GL/glew.h	/^#define glGetnHistogramARB /;"	d
glGetnMapdvARB	./GL/glew.h	/^#define glGetnMapdvARB /;"	d
glGetnMapfvARB	./GL/glew.h	/^#define glGetnMapfvARB /;"	d
glGetnMapivARB	./GL/glew.h	/^#define glGetnMapivARB /;"	d
glGetnMinmaxARB	./GL/glew.h	/^#define glGetnMinmaxARB /;"	d
glGetnPixelMapfvARB	./GL/glew.h	/^#define glGetnPixelMapfvARB /;"	d
glGetnPixelMapuivARB	./GL/glew.h	/^#define glGetnPixelMapuivARB /;"	d
glGetnPixelMapusvARB	./GL/glew.h	/^#define glGetnPixelMapusvARB /;"	d
glGetnPolygonStippleARB	./GL/glew.h	/^#define glGetnPolygonStippleARB /;"	d
glGetnSeparableFilterARB	./GL/glew.h	/^#define glGetnSeparableFilterARB /;"	d
glGetnTexImage	./GL/glew.h	/^#define glGetnTexImage /;"	d
glGetnTexImageARB	./GL/glew.h	/^#define glGetnTexImageARB /;"	d
glGetnUniformdv	./GL/glew.h	/^#define glGetnUniformdv /;"	d
glGetnUniformdvARB	./GL/glew.h	/^#define glGetnUniformdvARB /;"	d
glGetnUniformfv	./GL/glew.h	/^#define glGetnUniformfv /;"	d
glGetnUniformfvARB	./GL/glew.h	/^#define glGetnUniformfvARB /;"	d
glGetnUniformfvEXT	./GL/glew.h	/^#define glGetnUniformfvEXT /;"	d
glGetnUniformi64vARB	./GL/glew.h	/^#define glGetnUniformi64vARB /;"	d
glGetnUniformiv	./GL/glew.h	/^#define glGetnUniformiv /;"	d
glGetnUniformivARB	./GL/glew.h	/^#define glGetnUniformivARB /;"	d
glGetnUniformivEXT	./GL/glew.h	/^#define glGetnUniformivEXT /;"	d
glGetnUniformui64vARB	./GL/glew.h	/^#define glGetnUniformui64vARB /;"	d
glGetnUniformuiv	./GL/glew.h	/^#define glGetnUniformuiv /;"	d
glGetnUniformuivARB	./GL/glew.h	/^#define glGetnUniformuivARB /;"	d
glGlobalAlphaFactorbSUN	./GL/glew.h	/^#define glGlobalAlphaFactorbSUN /;"	d
glGlobalAlphaFactordSUN	./GL/glew.h	/^#define glGlobalAlphaFactordSUN /;"	d
glGlobalAlphaFactorfSUN	./GL/glew.h	/^#define glGlobalAlphaFactorfSUN /;"	d
glGlobalAlphaFactoriSUN	./GL/glew.h	/^#define glGlobalAlphaFactoriSUN /;"	d
glGlobalAlphaFactorsSUN	./GL/glew.h	/^#define glGlobalAlphaFactorsSUN /;"	d
glGlobalAlphaFactorubSUN	./GL/glew.h	/^#define glGlobalAlphaFactorubSUN /;"	d
glGlobalAlphaFactoruiSUN	./GL/glew.h	/^#define glGlobalAlphaFactoruiSUN /;"	d
glGlobalAlphaFactorusSUN	./GL/glew.h	/^#define glGlobalAlphaFactorusSUN /;"	d
glHistogram	./GL/glew.h	/^#define glHistogram /;"	d
glHistogramEXT	./GL/glew.h	/^#define glHistogramEXT /;"	d
glIglooInterfaceSGIX	./GL/glew.h	/^#define glIglooInterfaceSGIX /;"	d
glImageTransformParameterfHP	./GL/glew.h	/^#define glImageTransformParameterfHP /;"	d
glImageTransformParameterfvHP	./GL/glew.h	/^#define glImageTransformParameterfvHP /;"	d
glImageTransformParameteriHP	./GL/glew.h	/^#define glImageTransformParameteriHP /;"	d
glImageTransformParameterivHP	./GL/glew.h	/^#define glImageTransformParameterivHP /;"	d
glImportMemoryFdEXT	./GL/glew.h	/^#define glImportMemoryFdEXT /;"	d
glImportMemoryWin32HandleEXT	./GL/glew.h	/^#define glImportMemoryWin32HandleEXT /;"	d
glImportMemoryWin32NameEXT	./GL/glew.h	/^#define glImportMemoryWin32NameEXT /;"	d
glImportSemaphoreFdEXT	./GL/glew.h	/^#define glImportSemaphoreFdEXT /;"	d
glImportSemaphoreWin32HandleEXT	./GL/glew.h	/^#define glImportSemaphoreWin32HandleEXT /;"	d
glImportSemaphoreWin32NameEXT	./GL/glew.h	/^#define glImportSemaphoreWin32NameEXT /;"	d
glImportSyncEXT	./GL/glew.h	/^#define glImportSyncEXT /;"	d
glIndexFormatNV	./GL/glew.h	/^#define glIndexFormatNV /;"	d
glIndexFuncEXT	./GL/glew.h	/^#define glIndexFuncEXT /;"	d
glIndexMaterialEXT	./GL/glew.h	/^#define glIndexMaterialEXT /;"	d
glIndexPointerEXT	./GL/glew.h	/^#define glIndexPointerEXT /;"	d
glIndexPointerListIBM	./GL/glew.h	/^#define glIndexPointerListIBM /;"	d
glInsertComponentEXT	./GL/glew.h	/^#define glInsertComponentEXT /;"	d
glInsertEventMarkerEXT	./GL/glew.h	/^#define glInsertEventMarkerEXT /;"	d
glInterleavedTextureCoordSetsSGIS	./GL/glew.h	/^#define glInterleavedTextureCoordSetsSGIS /;"	d
glInterpolatePathsNV	./GL/glew.h	/^#define glInterpolatePathsNV /;"	d
glInvalidateBufferData	./GL/glew.h	/^#define glInvalidateBufferData /;"	d
glInvalidateBufferSubData	./GL/glew.h	/^#define glInvalidateBufferSubData /;"	d
glInvalidateFramebuffer	./GL/glew.h	/^#define glInvalidateFramebuffer /;"	d
glInvalidateNamedFramebufferData	./GL/glew.h	/^#define glInvalidateNamedFramebufferData /;"	d
glInvalidateNamedFramebufferSubData	./GL/glew.h	/^#define glInvalidateNamedFramebufferSubData /;"	d
glInvalidateSubFramebuffer	./GL/glew.h	/^#define glInvalidateSubFramebuffer /;"	d
glInvalidateTexImage	./GL/glew.h	/^#define glInvalidateTexImage /;"	d
glInvalidateTexSubImage	./GL/glew.h	/^#define glInvalidateTexSubImage /;"	d
glIsAsyncMarkerSGIX	./GL/glew.h	/^#define glIsAsyncMarkerSGIX /;"	d
glIsBuffer	./GL/glew.h	/^#define glIsBuffer /;"	d
glIsBufferARB	./GL/glew.h	/^#define glIsBufferARB /;"	d
glIsBufferResidentNV	./GL/glew.h	/^#define glIsBufferResidentNV /;"	d
glIsCommandListNV	./GL/glew.h	/^#define glIsCommandListNV /;"	d
glIsEnabledIndexedEXT	./GL/glew.h	/^#define glIsEnabledIndexedEXT /;"	d
glIsEnabledi	./GL/glew.h	/^#define glIsEnabledi /;"	d
glIsEnablediEXT	./GL/glew.h	/^#define glIsEnablediEXT /;"	d
glIsEnablediNV	./GL/glew.h	/^#define glIsEnablediNV /;"	d
glIsEnablediOES	./GL/glew.h	/^#define glIsEnablediOES /;"	d
glIsFenceAPPLE	./GL/glew.h	/^#define glIsFenceAPPLE /;"	d
glIsFenceNV	./GL/glew.h	/^#define glIsFenceNV /;"	d
glIsFramebuffer	./GL/glew.h	/^#define glIsFramebuffer /;"	d
glIsFramebufferEXT	./GL/glew.h	/^#define glIsFramebufferEXT /;"	d
glIsFramebufferOES	./GL/glew.h	/^#define glIsFramebufferOES /;"	d
glIsImageHandleResidentARB	./GL/glew.h	/^#define glIsImageHandleResidentARB /;"	d
glIsImageHandleResidentNV	./GL/glew.h	/^#define glIsImageHandleResidentNV /;"	d
glIsMPEGPredictorSGIX	./GL/glew.h	/^#define glIsMPEGPredictorSGIX /;"	d
glIsMemoryObjectEXT	./GL/glew.h	/^#define glIsMemoryObjectEXT /;"	d
glIsNameAMD	./GL/glew.h	/^#define glIsNameAMD /;"	d
glIsNamedBufferResidentNV	./GL/glew.h	/^#define glIsNamedBufferResidentNV /;"	d
glIsNamedStringARB	./GL/glew.h	/^#define glIsNamedStringARB /;"	d
glIsObjectBufferATI	./GL/glew.h	/^#define glIsObjectBufferATI /;"	d
glIsOcclusionQueryNV	./GL/glew.h	/^#define glIsOcclusionQueryNV /;"	d
glIsPathNV	./GL/glew.h	/^#define glIsPathNV /;"	d
glIsPointInFillPathNV	./GL/glew.h	/^#define glIsPointInFillPathNV /;"	d
glIsPointInStrokePathNV	./GL/glew.h	/^#define glIsPointInStrokePathNV /;"	d
glIsProgram	./GL/glew.h	/^#define glIsProgram /;"	d
glIsProgramARB	./GL/glew.h	/^#define glIsProgramARB /;"	d
glIsProgramNV	./GL/glew.h	/^#define glIsProgramNV /;"	d
glIsProgramPipeline	./GL/glew.h	/^#define glIsProgramPipeline /;"	d
glIsQuery	./GL/glew.h	/^#define glIsQuery /;"	d
glIsQueryANGLE	./GL/glew.h	/^#define glIsQueryANGLE /;"	d
glIsQueryARB	./GL/glew.h	/^#define glIsQueryARB /;"	d
glIsQueryEXT	./GL/glew.h	/^#define glIsQueryEXT /;"	d
glIsRenderbuffer	./GL/glew.h	/^#define glIsRenderbuffer /;"	d
glIsRenderbufferEXT	./GL/glew.h	/^#define glIsRenderbufferEXT /;"	d
glIsRenderbufferOES	./GL/glew.h	/^#define glIsRenderbufferOES /;"	d
glIsSampler	./GL/glew.h	/^#define glIsSampler /;"	d
glIsSemaphoreEXT	./GL/glew.h	/^#define glIsSemaphoreEXT /;"	d
glIsShader	./GL/glew.h	/^#define glIsShader /;"	d
glIsStateNV	./GL/glew.h	/^#define glIsStateNV /;"	d
glIsSupportedREGAL	./GL/glew.h	/^#define glIsSupportedREGAL /;"	d
glIsSync	./GL/glew.h	/^#define glIsSync /;"	d
glIsSyncAPPLE	./GL/glew.h	/^#define glIsSyncAPPLE /;"	d
glIsTextureEXT	./GL/glew.h	/^#define glIsTextureEXT /;"	d
glIsTextureHandleResidentARB	./GL/glew.h	/^#define glIsTextureHandleResidentARB /;"	d
glIsTextureHandleResidentNV	./GL/glew.h	/^#define glIsTextureHandleResidentNV /;"	d
glIsTransformFeedback	./GL/glew.h	/^#define glIsTransformFeedback /;"	d
glIsTransformFeedbackNV	./GL/glew.h	/^#define glIsTransformFeedbackNV /;"	d
glIsVariantEnabledEXT	./GL/glew.h	/^#define glIsVariantEnabledEXT /;"	d
glIsVertexArray	./GL/glew.h	/^#define glIsVertexArray /;"	d
glIsVertexArrayAPPLE	./GL/glew.h	/^#define glIsVertexArrayAPPLE /;"	d
glIsVertexArrayOES	./GL/glew.h	/^#define glIsVertexArrayOES /;"	d
glIsVertexArraySGIX	./GL/glew.h	/^#define glIsVertexArraySGIX /;"	d
glIsVertexAttribEnabledAPPLE	./GL/glew.h	/^#define glIsVertexAttribEnabledAPPLE /;"	d
glLGPUCopyImageSubDataNVX	./GL/glew.h	/^#define glLGPUCopyImageSubDataNVX /;"	d
glLGPUInterlockNVX	./GL/glew.h	/^#define glLGPUInterlockNVX /;"	d
glLGPUNamedBufferSubDataNVX	./GL/glew.h	/^#define glLGPUNamedBufferSubDataNVX /;"	d
glLabelObjectEXT	./GL/glew.h	/^#define glLabelObjectEXT /;"	d
glLightEnviEXT	./GL/glew.h	/^#define glLightEnviEXT /;"	d
glLightModelx	./GL/glew.h	/^#define glLightModelx /;"	d
glLightModelxv	./GL/glew.h	/^#define glLightModelxv /;"	d
glLightx	./GL/glew.h	/^#define glLightx /;"	d
glLightxv	./GL/glew.h	/^#define glLightxv /;"	d
glLineWidthx	./GL/glew.h	/^#define glLineWidthx /;"	d
glLinkProgram	./GL/glew.h	/^#define glLinkProgram /;"	d
glLinkProgramARB	./GL/glew.h	/^#define glLinkProgramARB /;"	d
glListDrawCommandsStatesClientNV	./GL/glew.h	/^#define glListDrawCommandsStatesClientNV /;"	d
glLoadIdentityDeformationMapSGIX	./GL/glew.h	/^#define glLoadIdentityDeformationMapSGIX /;"	d
glLoadMatrixx	./GL/glew.h	/^#define glLoadMatrixx /;"	d
glLoadProgramNV	./GL/glew.h	/^#define glLoadProgramNV /;"	d
glLoadTransposeMatrixd	./GL/glew.h	/^#define glLoadTransposeMatrixd /;"	d
glLoadTransposeMatrixdARB	./GL/glew.h	/^#define glLoadTransposeMatrixdARB /;"	d
glLoadTransposeMatrixf	./GL/glew.h	/^#define glLoadTransposeMatrixf /;"	d
glLoadTransposeMatrixfARB	./GL/glew.h	/^#define glLoadTransposeMatrixfARB /;"	d
glLockArraysEXT	./GL/glew.h	/^#define glLockArraysEXT /;"	d
glLogMessageCallbackREGAL	./GL/glew.h	/^#define glLogMessageCallbackREGAL /;"	d
glMPEGPredictorSGIX	./GL/glew.h	/^#define glMPEGPredictorSGIX /;"	d
glMPEGQuantTableubv	./GL/glew.h	/^#define glMPEGQuantTableubv /;"	d
glMakeBufferNonResidentNV	./GL/glew.h	/^#define glMakeBufferNonResidentNV /;"	d
glMakeBufferResidentNV	./GL/glew.h	/^#define glMakeBufferResidentNV /;"	d
glMakeImageHandleNonResidentARB	./GL/glew.h	/^#define glMakeImageHandleNonResidentARB /;"	d
glMakeImageHandleNonResidentNV	./GL/glew.h	/^#define glMakeImageHandleNonResidentNV /;"	d
glMakeImageHandleResidentARB	./GL/glew.h	/^#define glMakeImageHandleResidentARB /;"	d
glMakeImageHandleResidentNV	./GL/glew.h	/^#define glMakeImageHandleResidentNV /;"	d
glMakeNamedBufferNonResidentNV	./GL/glew.h	/^#define glMakeNamedBufferNonResidentNV /;"	d
glMakeNamedBufferResidentNV	./GL/glew.h	/^#define glMakeNamedBufferResidentNV /;"	d
glMakeTextureHandleNonResidentARB	./GL/glew.h	/^#define glMakeTextureHandleNonResidentARB /;"	d
glMakeTextureHandleNonResidentNV	./GL/glew.h	/^#define glMakeTextureHandleNonResidentNV /;"	d
glMakeTextureHandleResidentARB	./GL/glew.h	/^#define glMakeTextureHandleResidentARB /;"	d
glMakeTextureHandleResidentNV	./GL/glew.h	/^#define glMakeTextureHandleResidentNV /;"	d
glMapBuffer	./GL/glew.h	/^#define glMapBuffer /;"	d
glMapBufferARB	./GL/glew.h	/^#define glMapBufferARB /;"	d
glMapBufferOES	./GL/glew.h	/^#define glMapBufferOES /;"	d
glMapBufferRange	./GL/glew.h	/^#define glMapBufferRange /;"	d
glMapBufferRangeEXT	./GL/glew.h	/^#define glMapBufferRangeEXT /;"	d
glMapControlPointsNV	./GL/glew.h	/^#define glMapControlPointsNV /;"	d
glMapNamedBuffer	./GL/glew.h	/^#define glMapNamedBuffer /;"	d
glMapNamedBufferEXT	./GL/glew.h	/^#define glMapNamedBufferEXT /;"	d
glMapNamedBufferRange	./GL/glew.h	/^#define glMapNamedBufferRange /;"	d
glMapNamedBufferRangeEXT	./GL/glew.h	/^#define glMapNamedBufferRangeEXT /;"	d
glMapObjectBufferATI	./GL/glew.h	/^#define glMapObjectBufferATI /;"	d
glMapParameterfvNV	./GL/glew.h	/^#define glMapParameterfvNV /;"	d
glMapParameterivNV	./GL/glew.h	/^#define glMapParameterivNV /;"	d
glMapTexture2DINTEL	./GL/glew.h	/^#define glMapTexture2DINTEL /;"	d
glMapVertexAttrib1dAPPLE	./GL/glew.h	/^#define glMapVertexAttrib1dAPPLE /;"	d
glMapVertexAttrib1fAPPLE	./GL/glew.h	/^#define glMapVertexAttrib1fAPPLE /;"	d
glMapVertexAttrib2dAPPLE	./GL/glew.h	/^#define glMapVertexAttrib2dAPPLE /;"	d
glMapVertexAttrib2fAPPLE	./GL/glew.h	/^#define glMapVertexAttrib2fAPPLE /;"	d
glMaterialx	./GL/glew.h	/^#define glMaterialx /;"	d
glMaterialxv	./GL/glew.h	/^#define glMaterialxv /;"	d
glMatrixFrustumEXT	./GL/glew.h	/^#define glMatrixFrustumEXT /;"	d
glMatrixIndexPointerARB	./GL/glew.h	/^#define glMatrixIndexPointerARB /;"	d
glMatrixIndexPointerOES	./GL/glew.h	/^#define glMatrixIndexPointerOES /;"	d
glMatrixIndexubvARB	./GL/glew.h	/^#define glMatrixIndexubvARB /;"	d
glMatrixIndexuivARB	./GL/glew.h	/^#define glMatrixIndexuivARB /;"	d
glMatrixIndexusvARB	./GL/glew.h	/^#define glMatrixIndexusvARB /;"	d
glMatrixLoad3x2fNV	./GL/glew.h	/^#define glMatrixLoad3x2fNV /;"	d
glMatrixLoad3x3fNV	./GL/glew.h	/^#define glMatrixLoad3x3fNV /;"	d
glMatrixLoadIdentityEXT	./GL/glew.h	/^#define glMatrixLoadIdentityEXT /;"	d
glMatrixLoadTranspose3x3fNV	./GL/glew.h	/^#define glMatrixLoadTranspose3x3fNV /;"	d
glMatrixLoadTransposedEXT	./GL/glew.h	/^#define glMatrixLoadTransposedEXT /;"	d
glMatrixLoadTransposefEXT	./GL/glew.h	/^#define glMatrixLoadTransposefEXT /;"	d
glMatrixLoaddEXT	./GL/glew.h	/^#define glMatrixLoaddEXT /;"	d
glMatrixLoadfEXT	./GL/glew.h	/^#define glMatrixLoadfEXT /;"	d
glMatrixMult3x2fNV	./GL/glew.h	/^#define glMatrixMult3x2fNV /;"	d
glMatrixMult3x3fNV	./GL/glew.h	/^#define glMatrixMult3x3fNV /;"	d
glMatrixMultTranspose3x3fNV	./GL/glew.h	/^#define glMatrixMultTranspose3x3fNV /;"	d
glMatrixMultTransposedEXT	./GL/glew.h	/^#define glMatrixMultTransposedEXT /;"	d
glMatrixMultTransposefEXT	./GL/glew.h	/^#define glMatrixMultTransposefEXT /;"	d
glMatrixMultdEXT	./GL/glew.h	/^#define glMatrixMultdEXT /;"	d
glMatrixMultfEXT	./GL/glew.h	/^#define glMatrixMultfEXT /;"	d
glMatrixOrthoEXT	./GL/glew.h	/^#define glMatrixOrthoEXT /;"	d
glMatrixPopEXT	./GL/glew.h	/^#define glMatrixPopEXT /;"	d
glMatrixPushEXT	./GL/glew.h	/^#define glMatrixPushEXT /;"	d
glMatrixRotatedEXT	./GL/glew.h	/^#define glMatrixRotatedEXT /;"	d
glMatrixRotatefEXT	./GL/glew.h	/^#define glMatrixRotatefEXT /;"	d
glMatrixScaledEXT	./GL/glew.h	/^#define glMatrixScaledEXT /;"	d
glMatrixScalefEXT	./GL/glew.h	/^#define glMatrixScalefEXT /;"	d
glMatrixTranslatedEXT	./GL/glew.h	/^#define glMatrixTranslatedEXT /;"	d
glMatrixTranslatefEXT	./GL/glew.h	/^#define glMatrixTranslatefEXT /;"	d
glMaxShaderCompilerThreadsARB	./GL/glew.h	/^#define glMaxShaderCompilerThreadsARB /;"	d
glMaxShaderCompilerThreadsKHR	./GL/glew.h	/^#define glMaxShaderCompilerThreadsKHR /;"	d
glMemoryBarrier	./GL/glew.h	/^#define glMemoryBarrier /;"	d
glMemoryBarrierByRegion	./GL/glew.h	/^#define glMemoryBarrierByRegion /;"	d
glMemoryBarrierEXT	./GL/glew.h	/^#define glMemoryBarrierEXT /;"	d
glMemoryObjectParameterivEXT	./GL/glew.h	/^#define glMemoryObjectParameterivEXT /;"	d
glMeshBreadthSGIX	./GL/glew.h	/^#define glMeshBreadthSGIX /;"	d
glMeshStrideSGIX	./GL/glew.h	/^#define glMeshStrideSGIX /;"	d
glMinSampleShading	./GL/glew.h	/^#define glMinSampleShading /;"	d
glMinSampleShadingARB	./GL/glew.h	/^#define glMinSampleShadingARB /;"	d
glMinSampleShadingOES	./GL/glew.h	/^#define glMinSampleShadingOES /;"	d
glMinmax	./GL/glew.h	/^#define glMinmax /;"	d
glMinmaxEXT	./GL/glew.h	/^#define glMinmaxEXT /;"	d
glMultMatrixx	./GL/glew.h	/^#define glMultMatrixx /;"	d
glMultTransposeMatrixd	./GL/glew.h	/^#define glMultTransposeMatrixd /;"	d
glMultTransposeMatrixdARB	./GL/glew.h	/^#define glMultTransposeMatrixdARB /;"	d
glMultTransposeMatrixf	./GL/glew.h	/^#define glMultTransposeMatrixf /;"	d
glMultTransposeMatrixfARB	./GL/glew.h	/^#define glMultTransposeMatrixfARB /;"	d
glMultiDrawArrays	./GL/glew.h	/^#define glMultiDrawArrays /;"	d
glMultiDrawArraysEXT	./GL/glew.h	/^#define glMultiDrawArraysEXT /;"	d
glMultiDrawArraysIndirect	./GL/glew.h	/^#define glMultiDrawArraysIndirect /;"	d
glMultiDrawArraysIndirectAMD	./GL/glew.h	/^#define glMultiDrawArraysIndirectAMD /;"	d
glMultiDrawArraysIndirectBindlessCountNV	./GL/glew.h	/^#define glMultiDrawArraysIndirectBindlessCountNV /;"	d
glMultiDrawArraysIndirectBindlessNV	./GL/glew.h	/^#define glMultiDrawArraysIndirectBindlessNV /;"	d
glMultiDrawArraysIndirectCount	./GL/glew.h	/^#define glMultiDrawArraysIndirectCount /;"	d
glMultiDrawArraysIndirectCountARB	./GL/glew.h	/^#define glMultiDrawArraysIndirectCountARB /;"	d
glMultiDrawArraysIndirectEXT	./GL/glew.h	/^#define glMultiDrawArraysIndirectEXT /;"	d
glMultiDrawElementArrayAPPLE	./GL/glew.h	/^#define glMultiDrawElementArrayAPPLE /;"	d
glMultiDrawElements	./GL/glew.h	/^#define glMultiDrawElements /;"	d
glMultiDrawElementsBaseVertex	./GL/glew.h	/^#define glMultiDrawElementsBaseVertex /;"	d
glMultiDrawElementsBaseVertexEXT	./GL/glew.h	/^#define glMultiDrawElementsBaseVertexEXT /;"	d
glMultiDrawElementsEXT	./GL/glew.h	/^#define glMultiDrawElementsEXT /;"	d
glMultiDrawElementsIndirect	./GL/glew.h	/^#define glMultiDrawElementsIndirect /;"	d
glMultiDrawElementsIndirectAMD	./GL/glew.h	/^#define glMultiDrawElementsIndirectAMD /;"	d
glMultiDrawElementsIndirectBindlessCountNV	./GL/glew.h	/^#define glMultiDrawElementsIndirectBindlessCountNV /;"	d
glMultiDrawElementsIndirectBindlessNV	./GL/glew.h	/^#define glMultiDrawElementsIndirectBindlessNV /;"	d
glMultiDrawElementsIndirectCount	./GL/glew.h	/^#define glMultiDrawElementsIndirectCount /;"	d
glMultiDrawElementsIndirectCountARB	./GL/glew.h	/^#define glMultiDrawElementsIndirectCountARB /;"	d
glMultiDrawElementsIndirectEXT	./GL/glew.h	/^#define glMultiDrawElementsIndirectEXT /;"	d
glMultiDrawMeshTasksIndirectCountNV	./GL/glew.h	/^#define glMultiDrawMeshTasksIndirectCountNV /;"	d
glMultiDrawMeshTasksIndirectNV	./GL/glew.h	/^#define glMultiDrawMeshTasksIndirectNV /;"	d
glMultiDrawRangeElementArrayAPPLE	./GL/glew.h	/^#define glMultiDrawRangeElementArrayAPPLE /;"	d
glMultiModeDrawArraysIBM	./GL/glew.h	/^#define glMultiModeDrawArraysIBM /;"	d
glMultiModeDrawElementsIBM	./GL/glew.h	/^#define glMultiModeDrawElementsIBM /;"	d
glMultiTexBufferEXT	./GL/glew.h	/^#define glMultiTexBufferEXT /;"	d
glMultiTexCoord1d	./GL/glew.h	/^#define glMultiTexCoord1d /;"	d
glMultiTexCoord1dARB	./GL/glew.h	/^#define glMultiTexCoord1dARB /;"	d
glMultiTexCoord1dv	./GL/glew.h	/^#define glMultiTexCoord1dv /;"	d
glMultiTexCoord1dvARB	./GL/glew.h	/^#define glMultiTexCoord1dvARB /;"	d
glMultiTexCoord1f	./GL/glew.h	/^#define glMultiTexCoord1f /;"	d
glMultiTexCoord1fARB	./GL/glew.h	/^#define glMultiTexCoord1fARB /;"	d
glMultiTexCoord1fv	./GL/glew.h	/^#define glMultiTexCoord1fv /;"	d
glMultiTexCoord1fvARB	./GL/glew.h	/^#define glMultiTexCoord1fvARB /;"	d
glMultiTexCoord1hNV	./GL/glew.h	/^#define glMultiTexCoord1hNV /;"	d
glMultiTexCoord1hvNV	./GL/glew.h	/^#define glMultiTexCoord1hvNV /;"	d
glMultiTexCoord1i	./GL/glew.h	/^#define glMultiTexCoord1i /;"	d
glMultiTexCoord1iARB	./GL/glew.h	/^#define glMultiTexCoord1iARB /;"	d
glMultiTexCoord1iv	./GL/glew.h	/^#define glMultiTexCoord1iv /;"	d
glMultiTexCoord1ivARB	./GL/glew.h	/^#define glMultiTexCoord1ivARB /;"	d
glMultiTexCoord1s	./GL/glew.h	/^#define glMultiTexCoord1s /;"	d
glMultiTexCoord1sARB	./GL/glew.h	/^#define glMultiTexCoord1sARB /;"	d
glMultiTexCoord1sv	./GL/glew.h	/^#define glMultiTexCoord1sv /;"	d
glMultiTexCoord1svARB	./GL/glew.h	/^#define glMultiTexCoord1svARB /;"	d
glMultiTexCoord2d	./GL/glew.h	/^#define glMultiTexCoord2d /;"	d
glMultiTexCoord2dARB	./GL/glew.h	/^#define glMultiTexCoord2dARB /;"	d
glMultiTexCoord2dv	./GL/glew.h	/^#define glMultiTexCoord2dv /;"	d
glMultiTexCoord2dvARB	./GL/glew.h	/^#define glMultiTexCoord2dvARB /;"	d
glMultiTexCoord2f	./GL/glew.h	/^#define glMultiTexCoord2f /;"	d
glMultiTexCoord2fARB	./GL/glew.h	/^#define glMultiTexCoord2fARB /;"	d
glMultiTexCoord2fv	./GL/glew.h	/^#define glMultiTexCoord2fv /;"	d
glMultiTexCoord2fvARB	./GL/glew.h	/^#define glMultiTexCoord2fvARB /;"	d
glMultiTexCoord2hNV	./GL/glew.h	/^#define glMultiTexCoord2hNV /;"	d
glMultiTexCoord2hvNV	./GL/glew.h	/^#define glMultiTexCoord2hvNV /;"	d
glMultiTexCoord2i	./GL/glew.h	/^#define glMultiTexCoord2i /;"	d
glMultiTexCoord2iARB	./GL/glew.h	/^#define glMultiTexCoord2iARB /;"	d
glMultiTexCoord2iv	./GL/glew.h	/^#define glMultiTexCoord2iv /;"	d
glMultiTexCoord2ivARB	./GL/glew.h	/^#define glMultiTexCoord2ivARB /;"	d
glMultiTexCoord2s	./GL/glew.h	/^#define glMultiTexCoord2s /;"	d
glMultiTexCoord2sARB	./GL/glew.h	/^#define glMultiTexCoord2sARB /;"	d
glMultiTexCoord2sv	./GL/glew.h	/^#define glMultiTexCoord2sv /;"	d
glMultiTexCoord2svARB	./GL/glew.h	/^#define glMultiTexCoord2svARB /;"	d
glMultiTexCoord3d	./GL/glew.h	/^#define glMultiTexCoord3d /;"	d
glMultiTexCoord3dARB	./GL/glew.h	/^#define glMultiTexCoord3dARB /;"	d
glMultiTexCoord3dv	./GL/glew.h	/^#define glMultiTexCoord3dv /;"	d
glMultiTexCoord3dvARB	./GL/glew.h	/^#define glMultiTexCoord3dvARB /;"	d
glMultiTexCoord3f	./GL/glew.h	/^#define glMultiTexCoord3f /;"	d
glMultiTexCoord3fARB	./GL/glew.h	/^#define glMultiTexCoord3fARB /;"	d
glMultiTexCoord3fv	./GL/glew.h	/^#define glMultiTexCoord3fv /;"	d
glMultiTexCoord3fvARB	./GL/glew.h	/^#define glMultiTexCoord3fvARB /;"	d
glMultiTexCoord3hNV	./GL/glew.h	/^#define glMultiTexCoord3hNV /;"	d
glMultiTexCoord3hvNV	./GL/glew.h	/^#define glMultiTexCoord3hvNV /;"	d
glMultiTexCoord3i	./GL/glew.h	/^#define glMultiTexCoord3i /;"	d
glMultiTexCoord3iARB	./GL/glew.h	/^#define glMultiTexCoord3iARB /;"	d
glMultiTexCoord3iv	./GL/glew.h	/^#define glMultiTexCoord3iv /;"	d
glMultiTexCoord3ivARB	./GL/glew.h	/^#define glMultiTexCoord3ivARB /;"	d
glMultiTexCoord3s	./GL/glew.h	/^#define glMultiTexCoord3s /;"	d
glMultiTexCoord3sARB	./GL/glew.h	/^#define glMultiTexCoord3sARB /;"	d
glMultiTexCoord3sv	./GL/glew.h	/^#define glMultiTexCoord3sv /;"	d
glMultiTexCoord3svARB	./GL/glew.h	/^#define glMultiTexCoord3svARB /;"	d
glMultiTexCoord4d	./GL/glew.h	/^#define glMultiTexCoord4d /;"	d
glMultiTexCoord4dARB	./GL/glew.h	/^#define glMultiTexCoord4dARB /;"	d
glMultiTexCoord4dv	./GL/glew.h	/^#define glMultiTexCoord4dv /;"	d
glMultiTexCoord4dvARB	./GL/glew.h	/^#define glMultiTexCoord4dvARB /;"	d
glMultiTexCoord4f	./GL/glew.h	/^#define glMultiTexCoord4f /;"	d
glMultiTexCoord4fARB	./GL/glew.h	/^#define glMultiTexCoord4fARB /;"	d
glMultiTexCoord4fv	./GL/glew.h	/^#define glMultiTexCoord4fv /;"	d
glMultiTexCoord4fvARB	./GL/glew.h	/^#define glMultiTexCoord4fvARB /;"	d
glMultiTexCoord4hNV	./GL/glew.h	/^#define glMultiTexCoord4hNV /;"	d
glMultiTexCoord4hvNV	./GL/glew.h	/^#define glMultiTexCoord4hvNV /;"	d
glMultiTexCoord4i	./GL/glew.h	/^#define glMultiTexCoord4i /;"	d
glMultiTexCoord4iARB	./GL/glew.h	/^#define glMultiTexCoord4iARB /;"	d
glMultiTexCoord4iv	./GL/glew.h	/^#define glMultiTexCoord4iv /;"	d
glMultiTexCoord4ivARB	./GL/glew.h	/^#define glMultiTexCoord4ivARB /;"	d
glMultiTexCoord4s	./GL/glew.h	/^#define glMultiTexCoord4s /;"	d
glMultiTexCoord4sARB	./GL/glew.h	/^#define glMultiTexCoord4sARB /;"	d
glMultiTexCoord4sv	./GL/glew.h	/^#define glMultiTexCoord4sv /;"	d
glMultiTexCoord4svARB	./GL/glew.h	/^#define glMultiTexCoord4svARB /;"	d
glMultiTexCoord4x	./GL/glew.h	/^#define glMultiTexCoord4x /;"	d
glMultiTexCoordP1ui	./GL/glew.h	/^#define glMultiTexCoordP1ui /;"	d
glMultiTexCoordP1uiv	./GL/glew.h	/^#define glMultiTexCoordP1uiv /;"	d
glMultiTexCoordP2ui	./GL/glew.h	/^#define glMultiTexCoordP2ui /;"	d
glMultiTexCoordP2uiv	./GL/glew.h	/^#define glMultiTexCoordP2uiv /;"	d
glMultiTexCoordP3ui	./GL/glew.h	/^#define glMultiTexCoordP3ui /;"	d
glMultiTexCoordP3uiv	./GL/glew.h	/^#define glMultiTexCoordP3uiv /;"	d
glMultiTexCoordP4ui	./GL/glew.h	/^#define glMultiTexCoordP4ui /;"	d
glMultiTexCoordP4uiv	./GL/glew.h	/^#define glMultiTexCoordP4uiv /;"	d
glMultiTexCoordPointerEXT	./GL/glew.h	/^#define glMultiTexCoordPointerEXT /;"	d
glMultiTexEnvfEXT	./GL/glew.h	/^#define glMultiTexEnvfEXT /;"	d
glMultiTexEnvfvEXT	./GL/glew.h	/^#define glMultiTexEnvfvEXT /;"	d
glMultiTexEnviEXT	./GL/glew.h	/^#define glMultiTexEnviEXT /;"	d
glMultiTexEnvivEXT	./GL/glew.h	/^#define glMultiTexEnvivEXT /;"	d
glMultiTexGendEXT	./GL/glew.h	/^#define glMultiTexGendEXT /;"	d
glMultiTexGendvEXT	./GL/glew.h	/^#define glMultiTexGendvEXT /;"	d
glMultiTexGenfEXT	./GL/glew.h	/^#define glMultiTexGenfEXT /;"	d
glMultiTexGenfvEXT	./GL/glew.h	/^#define glMultiTexGenfvEXT /;"	d
glMultiTexGeniEXT	./GL/glew.h	/^#define glMultiTexGeniEXT /;"	d
glMultiTexGenivEXT	./GL/glew.h	/^#define glMultiTexGenivEXT /;"	d
glMultiTexImage1DEXT	./GL/glew.h	/^#define glMultiTexImage1DEXT /;"	d
glMultiTexImage2DEXT	./GL/glew.h	/^#define glMultiTexImage2DEXT /;"	d
glMultiTexImage3DEXT	./GL/glew.h	/^#define glMultiTexImage3DEXT /;"	d
glMultiTexParameterIivEXT	./GL/glew.h	/^#define glMultiTexParameterIivEXT /;"	d
glMultiTexParameterIuivEXT	./GL/glew.h	/^#define glMultiTexParameterIuivEXT /;"	d
glMultiTexParameterfEXT	./GL/glew.h	/^#define glMultiTexParameterfEXT /;"	d
glMultiTexParameterfvEXT	./GL/glew.h	/^#define glMultiTexParameterfvEXT /;"	d
glMultiTexParameteriEXT	./GL/glew.h	/^#define glMultiTexParameteriEXT /;"	d
glMultiTexParameterivEXT	./GL/glew.h	/^#define glMultiTexParameterivEXT /;"	d
glMultiTexRenderbufferEXT	./GL/glew.h	/^#define glMultiTexRenderbufferEXT /;"	d
glMultiTexSubImage1DEXT	./GL/glew.h	/^#define glMultiTexSubImage1DEXT /;"	d
glMultiTexSubImage2DEXT	./GL/glew.h	/^#define glMultiTexSubImage2DEXT /;"	d
glMultiTexSubImage3DEXT	./GL/glew.h	/^#define glMultiTexSubImage3DEXT /;"	d
glMulticastBarrierNV	./GL/glew.h	/^#define glMulticastBarrierNV /;"	d
glMulticastBlitFramebufferNV	./GL/glew.h	/^#define glMulticastBlitFramebufferNV /;"	d
glMulticastBufferSubDataNV	./GL/glew.h	/^#define glMulticastBufferSubDataNV /;"	d
glMulticastCopyBufferSubDataNV	./GL/glew.h	/^#define glMulticastCopyBufferSubDataNV /;"	d
glMulticastCopyImageSubDataNV	./GL/glew.h	/^#define glMulticastCopyImageSubDataNV /;"	d
glMulticastFramebufferSampleLocationsfvNV	./GL/glew.h	/^#define glMulticastFramebufferSampleLocationsfvNV /;"	d
glMulticastGetQueryObjecti64vNV	./GL/glew.h	/^#define glMulticastGetQueryObjecti64vNV /;"	d
glMulticastGetQueryObjectivNV	./GL/glew.h	/^#define glMulticastGetQueryObjectivNV /;"	d
glMulticastGetQueryObjectui64vNV	./GL/glew.h	/^#define glMulticastGetQueryObjectui64vNV /;"	d
glMulticastGetQueryObjectuivNV	./GL/glew.h	/^#define glMulticastGetQueryObjectuivNV /;"	d
glMulticastScissorArrayvNVX	./GL/glew.h	/^#define glMulticastScissorArrayvNVX /;"	d
glMulticastViewportArrayvNVX	./GL/glew.h	/^#define glMulticastViewportArrayvNVX /;"	d
glMulticastViewportPositionWScaleNVX	./GL/glew.h	/^#define glMulticastViewportPositionWScaleNVX /;"	d
glMulticastWaitSyncNV	./GL/glew.h	/^#define glMulticastWaitSyncNV /;"	d
glMultisampleSubRectPosSGIS	./GL/glew.h	/^#define glMultisampleSubRectPosSGIS /;"	d
glNamedBufferAttachMemoryNV	./GL/glew.h	/^#define glNamedBufferAttachMemoryNV /;"	d
glNamedBufferData	./GL/glew.h	/^#define glNamedBufferData /;"	d
glNamedBufferDataEXT	./GL/glew.h	/^#define glNamedBufferDataEXT /;"	d
glNamedBufferStorage	./GL/glew.h	/^#define glNamedBufferStorage /;"	d
glNamedBufferStorageEXT	./GL/glew.h	/^#define glNamedBufferStorageEXT /;"	d
glNamedBufferStorageExternalEXT	./GL/glew.h	/^#define glNamedBufferStorageExternalEXT /;"	d
glNamedBufferStorageMemEXT	./GL/glew.h	/^#define glNamedBufferStorageMemEXT /;"	d
glNamedBufferSubData	./GL/glew.h	/^#define glNamedBufferSubData /;"	d
glNamedBufferSubDataEXT	./GL/glew.h	/^#define glNamedBufferSubDataEXT /;"	d
glNamedCopyBufferSubDataEXT	./GL/glew.h	/^#define glNamedCopyBufferSubDataEXT /;"	d
glNamedFramebufferDrawBuffer	./GL/glew.h	/^#define glNamedFramebufferDrawBuffer /;"	d
glNamedFramebufferDrawBuffers	./GL/glew.h	/^#define glNamedFramebufferDrawBuffers /;"	d
glNamedFramebufferParameteri	./GL/glew.h	/^#define glNamedFramebufferParameteri /;"	d
glNamedFramebufferParameteriEXT	./GL/glew.h	/^#define glNamedFramebufferParameteriEXT /;"	d
glNamedFramebufferReadBuffer	./GL/glew.h	/^#define glNamedFramebufferReadBuffer /;"	d
glNamedFramebufferRenderbuffer	./GL/glew.h	/^#define glNamedFramebufferRenderbuffer /;"	d
glNamedFramebufferRenderbufferEXT	./GL/glew.h	/^#define glNamedFramebufferRenderbufferEXT /;"	d
glNamedFramebufferSampleLocationsfvARB	./GL/glew.h	/^#define glNamedFramebufferSampleLocationsfvARB /;"	d
glNamedFramebufferSampleLocationsfvNV	./GL/glew.h	/^#define glNamedFramebufferSampleLocationsfvNV /;"	d
glNamedFramebufferSamplePositionsfvAMD	./GL/glew.h	/^#define glNamedFramebufferSamplePositionsfvAMD /;"	d
glNamedFramebufferTexture	./GL/glew.h	/^#define glNamedFramebufferTexture /;"	d
glNamedFramebufferTexture1DEXT	./GL/glew.h	/^#define glNamedFramebufferTexture1DEXT /;"	d
glNamedFramebufferTexture2DEXT	./GL/glew.h	/^#define glNamedFramebufferTexture2DEXT /;"	d
glNamedFramebufferTexture3DEXT	./GL/glew.h	/^#define glNamedFramebufferTexture3DEXT /;"	d
glNamedFramebufferTextureEXT	./GL/glew.h	/^#define glNamedFramebufferTextureEXT /;"	d
glNamedFramebufferTextureFaceEXT	./GL/glew.h	/^#define glNamedFramebufferTextureFaceEXT /;"	d
glNamedFramebufferTextureLayer	./GL/glew.h	/^#define glNamedFramebufferTextureLayer /;"	d
glNamedFramebufferTextureLayerEXT	./GL/glew.h	/^#define glNamedFramebufferTextureLayerEXT /;"	d
glNamedFramebufferTextureMultiviewOVR	./GL/glew.h	/^#define glNamedFramebufferTextureMultiviewOVR /;"	d
glNamedProgramLocalParameter4dEXT	./GL/glew.h	/^#define glNamedProgramLocalParameter4dEXT /;"	d
glNamedProgramLocalParameter4dvEXT	./GL/glew.h	/^#define glNamedProgramLocalParameter4dvEXT /;"	d
glNamedProgramLocalParameter4fEXT	./GL/glew.h	/^#define glNamedProgramLocalParameter4fEXT /;"	d
glNamedProgramLocalParameter4fvEXT	./GL/glew.h	/^#define glNamedProgramLocalParameter4fvEXT /;"	d
glNamedProgramLocalParameterI4iEXT	./GL/glew.h	/^#define glNamedProgramLocalParameterI4iEXT /;"	d
glNamedProgramLocalParameterI4ivEXT	./GL/glew.h	/^#define glNamedProgramLocalParameterI4ivEXT /;"	d
glNamedProgramLocalParameterI4uiEXT	./GL/glew.h	/^#define glNamedProgramLocalParameterI4uiEXT /;"	d
glNamedProgramLocalParameterI4uivEXT	./GL/glew.h	/^#define glNamedProgramLocalParameterI4uivEXT /;"	d
glNamedProgramLocalParameters4fvEXT	./GL/glew.h	/^#define glNamedProgramLocalParameters4fvEXT /;"	d
glNamedProgramLocalParametersI4ivEXT	./GL/glew.h	/^#define glNamedProgramLocalParametersI4ivEXT /;"	d
glNamedProgramLocalParametersI4uivEXT	./GL/glew.h	/^#define glNamedProgramLocalParametersI4uivEXT /;"	d
glNamedProgramStringEXT	./GL/glew.h	/^#define glNamedProgramStringEXT /;"	d
glNamedRenderbufferStorage	./GL/glew.h	/^#define glNamedRenderbufferStorage /;"	d
glNamedRenderbufferStorageEXT	./GL/glew.h	/^#define glNamedRenderbufferStorageEXT /;"	d
glNamedRenderbufferStorageMultisample	./GL/glew.h	/^#define glNamedRenderbufferStorageMultisample /;"	d
glNamedRenderbufferStorageMultisampleAdvancedAMD	./GL/glew.h	/^#define glNamedRenderbufferStorageMultisampleAdvancedAMD /;"	d
glNamedRenderbufferStorageMultisampleCoverageEXT	./GL/glew.h	/^#define glNamedRenderbufferStorageMultisampleCoverageEXT /;"	d
glNamedRenderbufferStorageMultisampleEXT	./GL/glew.h	/^#define glNamedRenderbufferStorageMultisampleEXT /;"	d
glNamedStringARB	./GL/glew.h	/^#define glNamedStringARB /;"	d
glNewBufferRegion	./GL/glew.h	/^#define glNewBufferRegion /;"	d
glNewObjectBufferATI	./GL/glew.h	/^#define glNewObjectBufferATI /;"	d
glNonlinLightfvSGIX	./GL/glew.h	/^#define glNonlinLightfvSGIX /;"	d
glNonlinMaterialfvSGIX	./GL/glew.h	/^#define glNonlinMaterialfvSGIX /;"	d
glNormal3fVertex3fSUN	./GL/glew.h	/^#define glNormal3fVertex3fSUN /;"	d
glNormal3fVertex3fvSUN	./GL/glew.h	/^#define glNormal3fVertex3fvSUN /;"	d
glNormal3hNV	./GL/glew.h	/^#define glNormal3hNV /;"	d
glNormal3hvNV	./GL/glew.h	/^#define glNormal3hvNV /;"	d
glNormal3x	./GL/glew.h	/^#define glNormal3x /;"	d
glNormalFormatNV	./GL/glew.h	/^#define glNormalFormatNV /;"	d
glNormalP3ui	./GL/glew.h	/^#define glNormalP3ui /;"	d
glNormalP3uiv	./GL/glew.h	/^#define glNormalP3uiv /;"	d
glNormalPointerEXT	./GL/glew.h	/^#define glNormalPointerEXT /;"	d
glNormalPointerListIBM	./GL/glew.h	/^#define glNormalPointerListIBM /;"	d
glNormalPointervINTEL	./GL/glew.h	/^#define glNormalPointervINTEL /;"	d
glNormalStream3bATI	./GL/glew.h	/^#define glNormalStream3bATI /;"	d
glNormalStream3bvATI	./GL/glew.h	/^#define glNormalStream3bvATI /;"	d
glNormalStream3dATI	./GL/glew.h	/^#define glNormalStream3dATI /;"	d
glNormalStream3dvATI	./GL/glew.h	/^#define glNormalStream3dvATI /;"	d
glNormalStream3fATI	./GL/glew.h	/^#define glNormalStream3fATI /;"	d
glNormalStream3fvATI	./GL/glew.h	/^#define glNormalStream3fvATI /;"	d
glNormalStream3iATI	./GL/glew.h	/^#define glNormalStream3iATI /;"	d
glNormalStream3ivATI	./GL/glew.h	/^#define glNormalStream3ivATI /;"	d
glNormalStream3sATI	./GL/glew.h	/^#define glNormalStream3sATI /;"	d
glNormalStream3svATI	./GL/glew.h	/^#define glNormalStream3svATI /;"	d
glObjectLabel	./GL/glew.h	/^#define glObjectLabel /;"	d
glObjectPtrLabel	./GL/glew.h	/^#define glObjectPtrLabel /;"	d
glObjectPurgeableAPPLE	./GL/glew.h	/^#define glObjectPurgeableAPPLE /;"	d
glObjectUnpurgeableAPPLE	./GL/glew.h	/^#define glObjectUnpurgeableAPPLE /;"	d
glOrthof	./GL/glew.h	/^#define glOrthof /;"	d
glOrthofOES	./GL/glew.h	/^#define glOrthofOES /;"	d
glOrthox	./GL/glew.h	/^#define glOrthox /;"	d
glPNTrianglesfATI	./GL/glew.h	/^#define glPNTrianglesfATI /;"	d
glPNTrianglesiATI	./GL/glew.h	/^#define glPNTrianglesiATI /;"	d
glPassTexCoordATI	./GL/glew.h	/^#define glPassTexCoordATI /;"	d
glPatchParameterfv	./GL/glew.h	/^#define glPatchParameterfv /;"	d
glPatchParameteri	./GL/glew.h	/^#define glPatchParameteri /;"	d
glPatchParameteriEXT	./GL/glew.h	/^#define glPatchParameteriEXT /;"	d
glPathColorGenNV	./GL/glew.h	/^#define glPathColorGenNV /;"	d
glPathCommandsNV	./GL/glew.h	/^#define glPathCommandsNV /;"	d
glPathCoordsNV	./GL/glew.h	/^#define glPathCoordsNV /;"	d
glPathCoverDepthFuncNV	./GL/glew.h	/^#define glPathCoverDepthFuncNV /;"	d
glPathDashArrayNV	./GL/glew.h	/^#define glPathDashArrayNV /;"	d
glPathFogGenNV	./GL/glew.h	/^#define glPathFogGenNV /;"	d
glPathGlyphIndexArrayNV	./GL/glew.h	/^#define glPathGlyphIndexArrayNV /;"	d
glPathGlyphIndexRangeNV	./GL/glew.h	/^#define glPathGlyphIndexRangeNV /;"	d
glPathGlyphRangeNV	./GL/glew.h	/^#define glPathGlyphRangeNV /;"	d
glPathGlyphsNV	./GL/glew.h	/^#define glPathGlyphsNV /;"	d
glPathMemoryGlyphIndexArrayNV	./GL/glew.h	/^#define glPathMemoryGlyphIndexArrayNV /;"	d
glPathParameterfNV	./GL/glew.h	/^#define glPathParameterfNV /;"	d
glPathParameterfvNV	./GL/glew.h	/^#define glPathParameterfvNV /;"	d
glPathParameteriNV	./GL/glew.h	/^#define glPathParameteriNV /;"	d
glPathParameterivNV	./GL/glew.h	/^#define glPathParameterivNV /;"	d
glPathStencilDepthOffsetNV	./GL/glew.h	/^#define glPathStencilDepthOffsetNV /;"	d
glPathStencilFuncNV	./GL/glew.h	/^#define glPathStencilFuncNV /;"	d
glPathStringNV	./GL/glew.h	/^#define glPathStringNV /;"	d
glPathSubCommandsNV	./GL/glew.h	/^#define glPathSubCommandsNV /;"	d
glPathSubCoordsNV	./GL/glew.h	/^#define glPathSubCoordsNV /;"	d
glPathTexGenNV	./GL/glew.h	/^#define glPathTexGenNV /;"	d
glPauseTransformFeedback	./GL/glew.h	/^#define glPauseTransformFeedback /;"	d
glPauseTransformFeedbackNV	./GL/glew.h	/^#define glPauseTransformFeedbackNV /;"	d
glPixelDataRangeNV	./GL/glew.h	/^#define glPixelDataRangeNV /;"	d
glPixelTexGenSGIX	./GL/glew.h	/^#define glPixelTexGenSGIX /;"	d
glPixelTransformParameterfEXT	./GL/glew.h	/^#define glPixelTransformParameterfEXT /;"	d
glPixelTransformParameterfSGI	./GL/glew.h	/^#define glPixelTransformParameterfSGI /;"	d
glPixelTransformParameterfvEXT	./GL/glew.h	/^#define glPixelTransformParameterfvEXT /;"	d
glPixelTransformParameterfvSGI	./GL/glew.h	/^#define glPixelTransformParameterfvSGI /;"	d
glPixelTransformParameteriEXT	./GL/glew.h	/^#define glPixelTransformParameteriEXT /;"	d
glPixelTransformParameteriSGI	./GL/glew.h	/^#define glPixelTransformParameteriSGI /;"	d
glPixelTransformParameterivEXT	./GL/glew.h	/^#define glPixelTransformParameterivEXT /;"	d
glPixelTransformParameterivSGI	./GL/glew.h	/^#define glPixelTransformParameterivSGI /;"	d
glPixelTransformSGI	./GL/glew.h	/^#define glPixelTransformSGI /;"	d
glPointAlongPathNV	./GL/glew.h	/^#define glPointAlongPathNV /;"	d
glPointParameterf	./GL/glew.h	/^#define glPointParameterf /;"	d
glPointParameterfARB	./GL/glew.h	/^#define glPointParameterfARB /;"	d
glPointParameterfEXT	./GL/glew.h	/^#define glPointParameterfEXT /;"	d
glPointParameterfv	./GL/glew.h	/^#define glPointParameterfv /;"	d
glPointParameterfvARB	./GL/glew.h	/^#define glPointParameterfvARB /;"	d
glPointParameterfvEXT	./GL/glew.h	/^#define glPointParameterfvEXT /;"	d
glPointParameteri	./GL/glew.h	/^#define glPointParameteri /;"	d
glPointParameteriNV	./GL/glew.h	/^#define glPointParameteriNV /;"	d
glPointParameteriv	./GL/glew.h	/^#define glPointParameteriv /;"	d
glPointParameterivNV	./GL/glew.h	/^#define glPointParameterivNV /;"	d
glPointParameterx	./GL/glew.h	/^#define glPointParameterx /;"	d
glPointParameterxv	./GL/glew.h	/^#define glPointParameterxv /;"	d
glPointSizePointerOES	./GL/glew.h	/^#define glPointSizePointerOES /;"	d
glPointSizex	./GL/glew.h	/^#define glPointSizex /;"	d
glPollAsyncSGIX	./GL/glew.h	/^#define glPollAsyncSGIX /;"	d
glPolygonModeNV	./GL/glew.h	/^#define glPolygonModeNV /;"	d
glPolygonOffsetClamp	./GL/glew.h	/^#define glPolygonOffsetClamp /;"	d
glPolygonOffsetClampEXT	./GL/glew.h	/^#define glPolygonOffsetClampEXT /;"	d
glPolygonOffsetEXT	./GL/glew.h	/^#define glPolygonOffsetEXT /;"	d
glPolygonOffsetx	./GL/glew.h	/^#define glPolygonOffsetx /;"	d
glPopDebugGroup	./GL/glew.h	/^#define glPopDebugGroup /;"	d
glPopGroupMarkerEXT	./GL/glew.h	/^#define glPopGroupMarkerEXT /;"	d
glPresentFrameDualFillNV	./GL/glew.h	/^#define glPresentFrameDualFillNV /;"	d
glPresentFrameKeyedNV	./GL/glew.h	/^#define glPresentFrameKeyedNV /;"	d
glPrimitiveBoundingBoxARB	./GL/glew.h	/^#define glPrimitiveBoundingBoxARB /;"	d
glPrimitiveBoundingBoxEXT	./GL/glew.h	/^#define glPrimitiveBoundingBoxEXT /;"	d
glPrimitiveRestartIndex	./GL/glew.h	/^#define glPrimitiveRestartIndex /;"	d
glPrimitiveRestartIndexNV	./GL/glew.h	/^#define glPrimitiveRestartIndexNV /;"	d
glPrimitiveRestartNV	./GL/glew.h	/^#define glPrimitiveRestartNV /;"	d
glPrioritizeTexturesEXT	./GL/glew.h	/^#define glPrioritizeTexturesEXT /;"	d
glPrioritizeVertexArraysSGIX	./GL/glew.h	/^#define glPrioritizeVertexArraysSGIX /;"	d
glProgramBinary	./GL/glew.h	/^#define glProgramBinary /;"	d
glProgramBinaryOES	./GL/glew.h	/^#define glProgramBinaryOES /;"	d
glProgramBufferParametersIivNV	./GL/glew.h	/^#define glProgramBufferParametersIivNV /;"	d
glProgramBufferParametersIuivNV	./GL/glew.h	/^#define glProgramBufferParametersIuivNV /;"	d
glProgramBufferParametersfvNV	./GL/glew.h	/^#define glProgramBufferParametersfvNV /;"	d
glProgramEnvParameter4dARB	./GL/glew.h	/^#define glProgramEnvParameter4dARB /;"	d
glProgramEnvParameter4dvARB	./GL/glew.h	/^#define glProgramEnvParameter4dvARB /;"	d
glProgramEnvParameter4fARB	./GL/glew.h	/^#define glProgramEnvParameter4fARB /;"	d
glProgramEnvParameter4fvARB	./GL/glew.h	/^#define glProgramEnvParameter4fvARB /;"	d
glProgramEnvParameterI4iNV	./GL/glew.h	/^#define glProgramEnvParameterI4iNV /;"	d
glProgramEnvParameterI4ivNV	./GL/glew.h	/^#define glProgramEnvParameterI4ivNV /;"	d
glProgramEnvParameterI4uiNV	./GL/glew.h	/^#define glProgramEnvParameterI4uiNV /;"	d
glProgramEnvParameterI4uivNV	./GL/glew.h	/^#define glProgramEnvParameterI4uivNV /;"	d
glProgramEnvParameters4fvEXT	./GL/glew.h	/^#define glProgramEnvParameters4fvEXT /;"	d
glProgramEnvParametersI4ivNV	./GL/glew.h	/^#define glProgramEnvParametersI4ivNV /;"	d
glProgramEnvParametersI4uivNV	./GL/glew.h	/^#define glProgramEnvParametersI4uivNV /;"	d
glProgramLocalParameter4dARB	./GL/glew.h	/^#define glProgramLocalParameter4dARB /;"	d
glProgramLocalParameter4dvARB	./GL/glew.h	/^#define glProgramLocalParameter4dvARB /;"	d
glProgramLocalParameter4fARB	./GL/glew.h	/^#define glProgramLocalParameter4fARB /;"	d
glProgramLocalParameter4fvARB	./GL/glew.h	/^#define glProgramLocalParameter4fvARB /;"	d
glProgramLocalParameterI4iNV	./GL/glew.h	/^#define glProgramLocalParameterI4iNV /;"	d
glProgramLocalParameterI4ivNV	./GL/glew.h	/^#define glProgramLocalParameterI4ivNV /;"	d
glProgramLocalParameterI4uiNV	./GL/glew.h	/^#define glProgramLocalParameterI4uiNV /;"	d
glProgramLocalParameterI4uivNV	./GL/glew.h	/^#define glProgramLocalParameterI4uivNV /;"	d
glProgramLocalParameters4fvEXT	./GL/glew.h	/^#define glProgramLocalParameters4fvEXT /;"	d
glProgramLocalParametersI4ivNV	./GL/glew.h	/^#define glProgramLocalParametersI4ivNV /;"	d
glProgramLocalParametersI4uivNV	./GL/glew.h	/^#define glProgramLocalParametersI4uivNV /;"	d
glProgramNamedParameter4dNV	./GL/glew.h	/^#define glProgramNamedParameter4dNV /;"	d
glProgramNamedParameter4dvNV	./GL/glew.h	/^#define glProgramNamedParameter4dvNV /;"	d
glProgramNamedParameter4fNV	./GL/glew.h	/^#define glProgramNamedParameter4fNV /;"	d
glProgramNamedParameter4fvNV	./GL/glew.h	/^#define glProgramNamedParameter4fvNV /;"	d
glProgramParameter4dNV	./GL/glew.h	/^#define glProgramParameter4dNV /;"	d
glProgramParameter4dvNV	./GL/glew.h	/^#define glProgramParameter4dvNV /;"	d
glProgramParameter4fNV	./GL/glew.h	/^#define glProgramParameter4fNV /;"	d
glProgramParameter4fvNV	./GL/glew.h	/^#define glProgramParameter4fvNV /;"	d
glProgramParameteri	./GL/glew.h	/^#define glProgramParameteri /;"	d
glProgramParameteriARB	./GL/glew.h	/^#define glProgramParameteriARB /;"	d
glProgramParameteriEXT	./GL/glew.h	/^#define glProgramParameteriEXT /;"	d
glProgramParameters4dvNV	./GL/glew.h	/^#define glProgramParameters4dvNV /;"	d
glProgramParameters4fvNV	./GL/glew.h	/^#define glProgramParameters4fvNV /;"	d
glProgramPathFragmentInputGenNV	./GL/glew.h	/^#define glProgramPathFragmentInputGenNV /;"	d
glProgramStringARB	./GL/glew.h	/^#define glProgramStringARB /;"	d
glProgramUniform1d	./GL/glew.h	/^#define glProgramUniform1d /;"	d
glProgramUniform1dv	./GL/glew.h	/^#define glProgramUniform1dv /;"	d
glProgramUniform1f	./GL/glew.h	/^#define glProgramUniform1f /;"	d
glProgramUniform1fEXT	./GL/glew.h	/^#define glProgramUniform1fEXT /;"	d
glProgramUniform1fv	./GL/glew.h	/^#define glProgramUniform1fv /;"	d
glProgramUniform1fvEXT	./GL/glew.h	/^#define glProgramUniform1fvEXT /;"	d
glProgramUniform1i	./GL/glew.h	/^#define glProgramUniform1i /;"	d
glProgramUniform1i64ARB	./GL/glew.h	/^#define glProgramUniform1i64ARB /;"	d
glProgramUniform1i64NV	./GL/glew.h	/^#define glProgramUniform1i64NV /;"	d
glProgramUniform1i64vARB	./GL/glew.h	/^#define glProgramUniform1i64vARB /;"	d
glProgramUniform1i64vNV	./GL/glew.h	/^#define glProgramUniform1i64vNV /;"	d
glProgramUniform1iEXT	./GL/glew.h	/^#define glProgramUniform1iEXT /;"	d
glProgramUniform1iv	./GL/glew.h	/^#define glProgramUniform1iv /;"	d
glProgramUniform1ivEXT	./GL/glew.h	/^#define glProgramUniform1ivEXT /;"	d
glProgramUniform1ui	./GL/glew.h	/^#define glProgramUniform1ui /;"	d
glProgramUniform1ui64ARB	./GL/glew.h	/^#define glProgramUniform1ui64ARB /;"	d
glProgramUniform1ui64NV	./GL/glew.h	/^#define glProgramUniform1ui64NV /;"	d
glProgramUniform1ui64vARB	./GL/glew.h	/^#define glProgramUniform1ui64vARB /;"	d
glProgramUniform1ui64vNV	./GL/glew.h	/^#define glProgramUniform1ui64vNV /;"	d
glProgramUniform1uiEXT	./GL/glew.h	/^#define glProgramUniform1uiEXT /;"	d
glProgramUniform1uiv	./GL/glew.h	/^#define glProgramUniform1uiv /;"	d
glProgramUniform1uivEXT	./GL/glew.h	/^#define glProgramUniform1uivEXT /;"	d
glProgramUniform2d	./GL/glew.h	/^#define glProgramUniform2d /;"	d
glProgramUniform2dv	./GL/glew.h	/^#define glProgramUniform2dv /;"	d
glProgramUniform2f	./GL/glew.h	/^#define glProgramUniform2f /;"	d
glProgramUniform2fEXT	./GL/glew.h	/^#define glProgramUniform2fEXT /;"	d
glProgramUniform2fv	./GL/glew.h	/^#define glProgramUniform2fv /;"	d
glProgramUniform2fvEXT	./GL/glew.h	/^#define glProgramUniform2fvEXT /;"	d
glProgramUniform2i	./GL/glew.h	/^#define glProgramUniform2i /;"	d
glProgramUniform2i64ARB	./GL/glew.h	/^#define glProgramUniform2i64ARB /;"	d
glProgramUniform2i64NV	./GL/glew.h	/^#define glProgramUniform2i64NV /;"	d
glProgramUniform2i64vARB	./GL/glew.h	/^#define glProgramUniform2i64vARB /;"	d
glProgramUniform2i64vNV	./GL/glew.h	/^#define glProgramUniform2i64vNV /;"	d
glProgramUniform2iEXT	./GL/glew.h	/^#define glProgramUniform2iEXT /;"	d
glProgramUniform2iv	./GL/glew.h	/^#define glProgramUniform2iv /;"	d
glProgramUniform2ivEXT	./GL/glew.h	/^#define glProgramUniform2ivEXT /;"	d
glProgramUniform2ui	./GL/glew.h	/^#define glProgramUniform2ui /;"	d
glProgramUniform2ui64ARB	./GL/glew.h	/^#define glProgramUniform2ui64ARB /;"	d
glProgramUniform2ui64NV	./GL/glew.h	/^#define glProgramUniform2ui64NV /;"	d
glProgramUniform2ui64vARB	./GL/glew.h	/^#define glProgramUniform2ui64vARB /;"	d
glProgramUniform2ui64vNV	./GL/glew.h	/^#define glProgramUniform2ui64vNV /;"	d
glProgramUniform2uiEXT	./GL/glew.h	/^#define glProgramUniform2uiEXT /;"	d
glProgramUniform2uiv	./GL/glew.h	/^#define glProgramUniform2uiv /;"	d
glProgramUniform2uivEXT	./GL/glew.h	/^#define glProgramUniform2uivEXT /;"	d
glProgramUniform3d	./GL/glew.h	/^#define glProgramUniform3d /;"	d
glProgramUniform3dv	./GL/glew.h	/^#define glProgramUniform3dv /;"	d
glProgramUniform3f	./GL/glew.h	/^#define glProgramUniform3f /;"	d
glProgramUniform3fEXT	./GL/glew.h	/^#define glProgramUniform3fEXT /;"	d
glProgramUniform3fv	./GL/glew.h	/^#define glProgramUniform3fv /;"	d
glProgramUniform3fvEXT	./GL/glew.h	/^#define glProgramUniform3fvEXT /;"	d
glProgramUniform3i	./GL/glew.h	/^#define glProgramUniform3i /;"	d
glProgramUniform3i64ARB	./GL/glew.h	/^#define glProgramUniform3i64ARB /;"	d
glProgramUniform3i64NV	./GL/glew.h	/^#define glProgramUniform3i64NV /;"	d
glProgramUniform3i64vARB	./GL/glew.h	/^#define glProgramUniform3i64vARB /;"	d
glProgramUniform3i64vNV	./GL/glew.h	/^#define glProgramUniform3i64vNV /;"	d
glProgramUniform3iEXT	./GL/glew.h	/^#define glProgramUniform3iEXT /;"	d
glProgramUniform3iv	./GL/glew.h	/^#define glProgramUniform3iv /;"	d
glProgramUniform3ivEXT	./GL/glew.h	/^#define glProgramUniform3ivEXT /;"	d
glProgramUniform3ui	./GL/glew.h	/^#define glProgramUniform3ui /;"	d
glProgramUniform3ui64ARB	./GL/glew.h	/^#define glProgramUniform3ui64ARB /;"	d
glProgramUniform3ui64NV	./GL/glew.h	/^#define glProgramUniform3ui64NV /;"	d
glProgramUniform3ui64vARB	./GL/glew.h	/^#define glProgramUniform3ui64vARB /;"	d
glProgramUniform3ui64vNV	./GL/glew.h	/^#define glProgramUniform3ui64vNV /;"	d
glProgramUniform3uiEXT	./GL/glew.h	/^#define glProgramUniform3uiEXT /;"	d
glProgramUniform3uiv	./GL/glew.h	/^#define glProgramUniform3uiv /;"	d
glProgramUniform3uivEXT	./GL/glew.h	/^#define glProgramUniform3uivEXT /;"	d
glProgramUniform4d	./GL/glew.h	/^#define glProgramUniform4d /;"	d
glProgramUniform4dv	./GL/glew.h	/^#define glProgramUniform4dv /;"	d
glProgramUniform4f	./GL/glew.h	/^#define glProgramUniform4f /;"	d
glProgramUniform4fEXT	./GL/glew.h	/^#define glProgramUniform4fEXT /;"	d
glProgramUniform4fv	./GL/glew.h	/^#define glProgramUniform4fv /;"	d
glProgramUniform4fvEXT	./GL/glew.h	/^#define glProgramUniform4fvEXT /;"	d
glProgramUniform4i	./GL/glew.h	/^#define glProgramUniform4i /;"	d
glProgramUniform4i64ARB	./GL/glew.h	/^#define glProgramUniform4i64ARB /;"	d
glProgramUniform4i64NV	./GL/glew.h	/^#define glProgramUniform4i64NV /;"	d
glProgramUniform4i64vARB	./GL/glew.h	/^#define glProgramUniform4i64vARB /;"	d
glProgramUniform4i64vNV	./GL/glew.h	/^#define glProgramUniform4i64vNV /;"	d
glProgramUniform4iEXT	./GL/glew.h	/^#define glProgramUniform4iEXT /;"	d
glProgramUniform4iv	./GL/glew.h	/^#define glProgramUniform4iv /;"	d
glProgramUniform4ivEXT	./GL/glew.h	/^#define glProgramUniform4ivEXT /;"	d
glProgramUniform4ui	./GL/glew.h	/^#define glProgramUniform4ui /;"	d
glProgramUniform4ui64ARB	./GL/glew.h	/^#define glProgramUniform4ui64ARB /;"	d
glProgramUniform4ui64NV	./GL/glew.h	/^#define glProgramUniform4ui64NV /;"	d
glProgramUniform4ui64vARB	./GL/glew.h	/^#define glProgramUniform4ui64vARB /;"	d
glProgramUniform4ui64vNV	./GL/glew.h	/^#define glProgramUniform4ui64vNV /;"	d
glProgramUniform4uiEXT	./GL/glew.h	/^#define glProgramUniform4uiEXT /;"	d
glProgramUniform4uiv	./GL/glew.h	/^#define glProgramUniform4uiv /;"	d
glProgramUniform4uivEXT	./GL/glew.h	/^#define glProgramUniform4uivEXT /;"	d
glProgramUniformHandleui64ARB	./GL/glew.h	/^#define glProgramUniformHandleui64ARB /;"	d
glProgramUniformHandleui64IMG	./GL/glew.h	/^#define glProgramUniformHandleui64IMG /;"	d
glProgramUniformHandleui64NV	./GL/glew.h	/^#define glProgramUniformHandleui64NV /;"	d
glProgramUniformHandleui64vARB	./GL/glew.h	/^#define glProgramUniformHandleui64vARB /;"	d
glProgramUniformHandleui64vIMG	./GL/glew.h	/^#define glProgramUniformHandleui64vIMG /;"	d
glProgramUniformHandleui64vNV	./GL/glew.h	/^#define glProgramUniformHandleui64vNV /;"	d
glProgramUniformMatrix2dv	./GL/glew.h	/^#define glProgramUniformMatrix2dv /;"	d
glProgramUniformMatrix2fv	./GL/glew.h	/^#define glProgramUniformMatrix2fv /;"	d
glProgramUniformMatrix2fvEXT	./GL/glew.h	/^#define glProgramUniformMatrix2fvEXT /;"	d
glProgramUniformMatrix2x3dv	./GL/glew.h	/^#define glProgramUniformMatrix2x3dv /;"	d
glProgramUniformMatrix2x3fv	./GL/glew.h	/^#define glProgramUniformMatrix2x3fv /;"	d
glProgramUniformMatrix2x3fvEXT	./GL/glew.h	/^#define glProgramUniformMatrix2x3fvEXT /;"	d
glProgramUniformMatrix2x4dv	./GL/glew.h	/^#define glProgramUniformMatrix2x4dv /;"	d
glProgramUniformMatrix2x4fv	./GL/glew.h	/^#define glProgramUniformMatrix2x4fv /;"	d
glProgramUniformMatrix2x4fvEXT	./GL/glew.h	/^#define glProgramUniformMatrix2x4fvEXT /;"	d
glProgramUniformMatrix3dv	./GL/glew.h	/^#define glProgramUniformMatrix3dv /;"	d
glProgramUniformMatrix3fv	./GL/glew.h	/^#define glProgramUniformMatrix3fv /;"	d
glProgramUniformMatrix3fvEXT	./GL/glew.h	/^#define glProgramUniformMatrix3fvEXT /;"	d
glProgramUniformMatrix3x2dv	./GL/glew.h	/^#define glProgramUniformMatrix3x2dv /;"	d
glProgramUniformMatrix3x2fv	./GL/glew.h	/^#define glProgramUniformMatrix3x2fv /;"	d
glProgramUniformMatrix3x2fvEXT	./GL/glew.h	/^#define glProgramUniformMatrix3x2fvEXT /;"	d
glProgramUniformMatrix3x4dv	./GL/glew.h	/^#define glProgramUniformMatrix3x4dv /;"	d
glProgramUniformMatrix3x4fv	./GL/glew.h	/^#define glProgramUniformMatrix3x4fv /;"	d
glProgramUniformMatrix3x4fvEXT	./GL/glew.h	/^#define glProgramUniformMatrix3x4fvEXT /;"	d
glProgramUniformMatrix4dv	./GL/glew.h	/^#define glProgramUniformMatrix4dv /;"	d
glProgramUniformMatrix4fv	./GL/glew.h	/^#define glProgramUniformMatrix4fv /;"	d
glProgramUniformMatrix4fvEXT	./GL/glew.h	/^#define glProgramUniformMatrix4fvEXT /;"	d
glProgramUniformMatrix4x2dv	./GL/glew.h	/^#define glProgramUniformMatrix4x2dv /;"	d
glProgramUniformMatrix4x2fv	./GL/glew.h	/^#define glProgramUniformMatrix4x2fv /;"	d
glProgramUniformMatrix4x2fvEXT	./GL/glew.h	/^#define glProgramUniformMatrix4x2fvEXT /;"	d
glProgramUniformMatrix4x3dv	./GL/glew.h	/^#define glProgramUniformMatrix4x3dv /;"	d
glProgramUniformMatrix4x3fv	./GL/glew.h	/^#define glProgramUniformMatrix4x3fv /;"	d
glProgramUniformMatrix4x3fvEXT	./GL/glew.h	/^#define glProgramUniformMatrix4x3fvEXT /;"	d
glProgramUniformui64NV	./GL/glew.h	/^#define glProgramUniformui64NV /;"	d
glProgramUniformui64vNV	./GL/glew.h	/^#define glProgramUniformui64vNV /;"	d
glProgramVertexLimitNV	./GL/glew.h	/^#define glProgramVertexLimitNV /;"	d
glProvokingVertex	./GL/glew.h	/^#define glProvokingVertex /;"	d
glProvokingVertexEXT	./GL/glew.h	/^#define glProvokingVertexEXT /;"	d
glPushClientAttribDefaultEXT	./GL/glew.h	/^#define glPushClientAttribDefaultEXT /;"	d
glPushDebugGroup	./GL/glew.h	/^#define glPushDebugGroup /;"	d
glPushGroupMarkerEXT	./GL/glew.h	/^#define glPushGroupMarkerEXT /;"	d
glQueryCounter	./GL/glew.h	/^#define glQueryCounter /;"	d
glQueryCounterANGLE	./GL/glew.h	/^#define glQueryCounterANGLE /;"	d
glQueryCounterEXT	./GL/glew.h	/^#define glQueryCounterEXT /;"	d
glQueryObjectParameteruiAMD	./GL/glew.h	/^#define glQueryObjectParameteruiAMD /;"	d
glRasterSamplesEXT	./GL/glew.h	/^#define glRasterSamplesEXT /;"	d
glReadBufferIndexedEXT	./GL/glew.h	/^#define glReadBufferIndexedEXT /;"	d
glReadBufferNV	./GL/glew.h	/^#define glReadBufferNV /;"	d
glReadBufferRegion	./GL/glew.h	/^#define glReadBufferRegion /;"	d
glReadVideoPixelsSUN	./GL/glew.h	/^#define glReadVideoPixelsSUN /;"	d
glReadnPixels	./GL/glew.h	/^#define glReadnPixels /;"	d
glReadnPixelsARB	./GL/glew.h	/^#define glReadnPixelsARB /;"	d
glReadnPixelsEXT	./GL/glew.h	/^#define glReadnPixelsEXT /;"	d
glReferencePlaneSGIX	./GL/glew.h	/^#define glReferencePlaneSGIX /;"	d
glReleaseKeyedMutexWin32EXT	./GL/glew.h	/^#define glReleaseKeyedMutexWin32EXT /;"	d
glReleaseShaderCompiler	./GL/glew.h	/^#define glReleaseShaderCompiler /;"	d
glRenderGpuMaskNV	./GL/glew.h	/^#define glRenderGpuMaskNV /;"	d
glRenderbufferStorage	./GL/glew.h	/^#define glRenderbufferStorage /;"	d
glRenderbufferStorageEXT	./GL/glew.h	/^#define glRenderbufferStorageEXT /;"	d
glRenderbufferStorageMultisample	./GL/glew.h	/^#define glRenderbufferStorageMultisample /;"	d
glRenderbufferStorageMultisampleANGLE	./GL/glew.h	/^#define glRenderbufferStorageMultisampleANGLE /;"	d
glRenderbufferStorageMultisampleAPPLE	./GL/glew.h	/^#define glRenderbufferStorageMultisampleAPPLE /;"	d
glRenderbufferStorageMultisampleAdvancedAMD	./GL/glew.h	/^#define glRenderbufferStorageMultisampleAdvancedAMD /;"	d
glRenderbufferStorageMultisampleCoverageNV	./GL/glew.h	/^#define glRenderbufferStorageMultisampleCoverageNV /;"	d
glRenderbufferStorageMultisampleEXT	./GL/glew.h	/^#define glRenderbufferStorageMultisampleEXT /;"	d
glRenderbufferStorageMultisampleIMG	./GL/glew.h	/^#define glRenderbufferStorageMultisampleIMG /;"	d
glRenderbufferStorageMultisampleNV	./GL/glew.h	/^#define glRenderbufferStorageMultisampleNV /;"	d
glRenderbufferStorageOES	./GL/glew.h	/^#define glRenderbufferStorageOES /;"	d
glReplacementCodePointerSUN	./GL/glew.h	/^#define glReplacementCodePointerSUN /;"	d
glReplacementCodeubSUN	./GL/glew.h	/^#define glReplacementCodeubSUN /;"	d
glReplacementCodeubvSUN	./GL/glew.h	/^#define glReplacementCodeubvSUN /;"	d
glReplacementCodeuiColor3fVertex3fSUN	./GL/glew.h	/^#define glReplacementCodeuiColor3fVertex3fSUN /;"	d
glReplacementCodeuiColor3fVertex3fvSUN	./GL/glew.h	/^#define glReplacementCodeuiColor3fVertex3fvSUN /;"	d
glReplacementCodeuiColor4fNormal3fVertex3fSUN	./GL/glew.h	/^#define glReplacementCodeuiColor4fNormal3fVertex3fSUN /;"	d
glReplacementCodeuiColor4fNormal3fVertex3fvSUN	./GL/glew.h	/^#define glReplacementCodeuiColor4fNormal3fVertex3fvSUN /;"	d
glReplacementCodeuiColor4ubVertex3fSUN	./GL/glew.h	/^#define glReplacementCodeuiColor4ubVertex3fSUN /;"	d
glReplacementCodeuiColor4ubVertex3fvSUN	./GL/glew.h	/^#define glReplacementCodeuiColor4ubVertex3fvSUN /;"	d
glReplacementCodeuiNormal3fVertex3fSUN	./GL/glew.h	/^#define glReplacementCodeuiNormal3fVertex3fSUN /;"	d
glReplacementCodeuiNormal3fVertex3fvSUN	./GL/glew.h	/^#define glReplacementCodeuiNormal3fVertex3fvSUN /;"	d
glReplacementCodeuiSUN	./GL/glew.h	/^#define glReplacementCodeuiSUN /;"	d
glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fSUN	./GL/glew.h	/^#define glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fSUN /;"	d
glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fvSUN	./GL/glew.h	/^#define glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fvSUN /;"	d
glReplacementCodeuiTexCoord2fNormal3fVertex3fSUN	./GL/glew.h	/^#define glReplacementCodeuiTexCoord2fNormal3fVertex3fSUN /;"	d
glReplacementCodeuiTexCoord2fNormal3fVertex3fvSUN	./GL/glew.h	/^#define glReplacementCodeuiTexCoord2fNormal3fVertex3fvSUN /;"	d
glReplacementCodeuiTexCoord2fVertex3fSUN	./GL/glew.h	/^#define glReplacementCodeuiTexCoord2fVertex3fSUN /;"	d
glReplacementCodeuiTexCoord2fVertex3fvSUN	./GL/glew.h	/^#define glReplacementCodeuiTexCoord2fVertex3fvSUN /;"	d
glReplacementCodeuiVertex3fSUN	./GL/glew.h	/^#define glReplacementCodeuiVertex3fSUN /;"	d
glReplacementCodeuiVertex3fvSUN	./GL/glew.h	/^#define glReplacementCodeuiVertex3fvSUN /;"	d
glReplacementCodeuivSUN	./GL/glew.h	/^#define glReplacementCodeuivSUN /;"	d
glReplacementCodeusSUN	./GL/glew.h	/^#define glReplacementCodeusSUN /;"	d
glReplacementCodeusvSUN	./GL/glew.h	/^#define glReplacementCodeusvSUN /;"	d
glRequestResidentProgramsNV	./GL/glew.h	/^#define glRequestResidentProgramsNV /;"	d
glResetHistogram	./GL/glew.h	/^#define glResetHistogram /;"	d
glResetHistogramEXT	./GL/glew.h	/^#define glResetHistogramEXT /;"	d
glResetMemoryObjectParameterNV	./GL/glew.h	/^#define glResetMemoryObjectParameterNV /;"	d
glResetMinmax	./GL/glew.h	/^#define glResetMinmax /;"	d
glResetMinmaxEXT	./GL/glew.h	/^#define glResetMinmaxEXT /;"	d
glResizeBuffersMESA	./GL/glew.h	/^#define glResizeBuffersMESA /;"	d
glResolveDepthValuesNV	./GL/glew.h	/^#define glResolveDepthValuesNV /;"	d
glResolveMultisampleFramebufferAPPLE	./GL/glew.h	/^#define glResolveMultisampleFramebufferAPPLE /;"	d
glResumeTransformFeedback	./GL/glew.h	/^#define glResumeTransformFeedback /;"	d
glResumeTransformFeedbackNV	./GL/glew.h	/^#define glResumeTransformFeedbackNV /;"	d
glRotatex	./GL/glew.h	/^#define glRotatex /;"	d
glSampleCoverage	./GL/glew.h	/^#define glSampleCoverage /;"	d
glSampleCoverageARB	./GL/glew.h	/^#define glSampleCoverageARB /;"	d
glSampleCoveragex	./GL/glew.h	/^#define glSampleCoveragex /;"	d
glSampleMapATI	./GL/glew.h	/^#define glSampleMapATI /;"	d
glSampleMaskEXT	./GL/glew.h	/^#define glSampleMaskEXT /;"	d
glSampleMaskIndexedNV	./GL/glew.h	/^#define glSampleMaskIndexedNV /;"	d
glSampleMaskSGIS	./GL/glew.h	/^#define glSampleMaskSGIS /;"	d
glSampleMaski	./GL/glew.h	/^#define glSampleMaski /;"	d
glSamplePatternEXT	./GL/glew.h	/^#define glSamplePatternEXT /;"	d
glSamplePatternSGIS	./GL/glew.h	/^#define glSamplePatternSGIS /;"	d
glSamplerParameterIiv	./GL/glew.h	/^#define glSamplerParameterIiv /;"	d
glSamplerParameterIivEXT	./GL/glew.h	/^#define glSamplerParameterIivEXT /;"	d
glSamplerParameterIivOES	./GL/glew.h	/^#define glSamplerParameterIivOES /;"	d
glSamplerParameterIuiv	./GL/glew.h	/^#define glSamplerParameterIuiv /;"	d
glSamplerParameterIuivEXT	./GL/glew.h	/^#define glSamplerParameterIuivEXT /;"	d
glSamplerParameterIuivOES	./GL/glew.h	/^#define glSamplerParameterIuivOES /;"	d
glSamplerParameterf	./GL/glew.h	/^#define glSamplerParameterf /;"	d
glSamplerParameterfv	./GL/glew.h	/^#define glSamplerParameterfv /;"	d
glSamplerParameteri	./GL/glew.h	/^#define glSamplerParameteri /;"	d
glSamplerParameteriv	./GL/glew.h	/^#define glSamplerParameteriv /;"	d
glScalex	./GL/glew.h	/^#define glScalex /;"	d
glScissorArrayv	./GL/glew.h	/^#define glScissorArrayv /;"	d
glScissorArrayvNV	./GL/glew.h	/^#define glScissorArrayvNV /;"	d
glScissorExclusiveArrayvNV	./GL/glew.h	/^#define glScissorExclusiveArrayvNV /;"	d
glScissorExclusiveNV	./GL/glew.h	/^#define glScissorExclusiveNV /;"	d
glScissorIndexed	./GL/glew.h	/^#define glScissorIndexed /;"	d
glScissorIndexedNV	./GL/glew.h	/^#define glScissorIndexedNV /;"	d
glScissorIndexedv	./GL/glew.h	/^#define glScissorIndexedv /;"	d
glScissorIndexedvNV	./GL/glew.h	/^#define glScissorIndexedvNV /;"	d
glSecondaryColor3b	./GL/glew.h	/^#define glSecondaryColor3b /;"	d
glSecondaryColor3bEXT	./GL/glew.h	/^#define glSecondaryColor3bEXT /;"	d
glSecondaryColor3bv	./GL/glew.h	/^#define glSecondaryColor3bv /;"	d
glSecondaryColor3bvEXT	./GL/glew.h	/^#define glSecondaryColor3bvEXT /;"	d
glSecondaryColor3d	./GL/glew.h	/^#define glSecondaryColor3d /;"	d
glSecondaryColor3dEXT	./GL/glew.h	/^#define glSecondaryColor3dEXT /;"	d
glSecondaryColor3dv	./GL/glew.h	/^#define glSecondaryColor3dv /;"	d
glSecondaryColor3dvEXT	./GL/glew.h	/^#define glSecondaryColor3dvEXT /;"	d
glSecondaryColor3f	./GL/glew.h	/^#define glSecondaryColor3f /;"	d
glSecondaryColor3fEXT	./GL/glew.h	/^#define glSecondaryColor3fEXT /;"	d
glSecondaryColor3fv	./GL/glew.h	/^#define glSecondaryColor3fv /;"	d
glSecondaryColor3fvEXT	./GL/glew.h	/^#define glSecondaryColor3fvEXT /;"	d
glSecondaryColor3hNV	./GL/glew.h	/^#define glSecondaryColor3hNV /;"	d
glSecondaryColor3hvNV	./GL/glew.h	/^#define glSecondaryColor3hvNV /;"	d
glSecondaryColor3i	./GL/glew.h	/^#define glSecondaryColor3i /;"	d
glSecondaryColor3iEXT	./GL/glew.h	/^#define glSecondaryColor3iEXT /;"	d
glSecondaryColor3iv	./GL/glew.h	/^#define glSecondaryColor3iv /;"	d
glSecondaryColor3ivEXT	./GL/glew.h	/^#define glSecondaryColor3ivEXT /;"	d
glSecondaryColor3s	./GL/glew.h	/^#define glSecondaryColor3s /;"	d
glSecondaryColor3sEXT	./GL/glew.h	/^#define glSecondaryColor3sEXT /;"	d
glSecondaryColor3sv	./GL/glew.h	/^#define glSecondaryColor3sv /;"	d
glSecondaryColor3svEXT	./GL/glew.h	/^#define glSecondaryColor3svEXT /;"	d
glSecondaryColor3ub	./GL/glew.h	/^#define glSecondaryColor3ub /;"	d
glSecondaryColor3ubEXT	./GL/glew.h	/^#define glSecondaryColor3ubEXT /;"	d
glSecondaryColor3ubv	./GL/glew.h	/^#define glSecondaryColor3ubv /;"	d
glSecondaryColor3ubvEXT	./GL/glew.h	/^#define glSecondaryColor3ubvEXT /;"	d
glSecondaryColor3ui	./GL/glew.h	/^#define glSecondaryColor3ui /;"	d
glSecondaryColor3uiEXT	./GL/glew.h	/^#define glSecondaryColor3uiEXT /;"	d
glSecondaryColor3uiv	./GL/glew.h	/^#define glSecondaryColor3uiv /;"	d
glSecondaryColor3uivEXT	./GL/glew.h	/^#define glSecondaryColor3uivEXT /;"	d
glSecondaryColor3us	./GL/glew.h	/^#define glSecondaryColor3us /;"	d
glSecondaryColor3usEXT	./GL/glew.h	/^#define glSecondaryColor3usEXT /;"	d
glSecondaryColor3usv	./GL/glew.h	/^#define glSecondaryColor3usv /;"	d
glSecondaryColor3usvEXT	./GL/glew.h	/^#define glSecondaryColor3usvEXT /;"	d
glSecondaryColorFormatNV	./GL/glew.h	/^#define glSecondaryColorFormatNV /;"	d
glSecondaryColorP3ui	./GL/glew.h	/^#define glSecondaryColorP3ui /;"	d
glSecondaryColorP3uiv	./GL/glew.h	/^#define glSecondaryColorP3uiv /;"	d
glSecondaryColorPointer	./GL/glew.h	/^#define glSecondaryColorPointer /;"	d
glSecondaryColorPointerEXT	./GL/glew.h	/^#define glSecondaryColorPointerEXT /;"	d
glSecondaryColorPointerListIBM	./GL/glew.h	/^#define glSecondaryColorPointerListIBM /;"	d
glSelectPerfMonitorCountersAMD	./GL/glew.h	/^#define glSelectPerfMonitorCountersAMD /;"	d
glSelectTextureCoordSetSGIS	./GL/glew.h	/^#define glSelectTextureCoordSetSGIS /;"	d
glSelectTextureSGIS	./GL/glew.h	/^#define glSelectTextureSGIS /;"	d
glSelectTextureTransformSGIS	./GL/glew.h	/^#define glSelectTextureTransformSGIS /;"	d
glSemaphoreParameterui64vEXT	./GL/glew.h	/^#define glSemaphoreParameterui64vEXT /;"	d
glSeparableFilter2D	./GL/glew.h	/^#define glSeparableFilter2D /;"	d
glSeparableFilter2DEXT	./GL/glew.h	/^#define glSeparableFilter2DEXT /;"	d
glSetFenceAPPLE	./GL/glew.h	/^#define glSetFenceAPPLE /;"	d
glSetFenceNV	./GL/glew.h	/^#define glSetFenceNV /;"	d
glSetFragmentShaderConstantATI	./GL/glew.h	/^#define glSetFragmentShaderConstantATI /;"	d
glSetInvariantEXT	./GL/glew.h	/^#define glSetInvariantEXT /;"	d
glSetLocalConstantEXT	./GL/glew.h	/^#define glSetLocalConstantEXT /;"	d
glSetMultisamplefvAMD	./GL/glew.h	/^#define glSetMultisamplefvAMD /;"	d
glShaderBinary	./GL/glew.h	/^#define glShaderBinary /;"	d
glShaderOp1EXT	./GL/glew.h	/^#define glShaderOp1EXT /;"	d
glShaderOp2EXT	./GL/glew.h	/^#define glShaderOp2EXT /;"	d
glShaderOp3EXT	./GL/glew.h	/^#define glShaderOp3EXT /;"	d
glShaderSource	./GL/glew.h	/^#define glShaderSource /;"	d
glShaderSourceARB	./GL/glew.h	/^#define glShaderSourceARB /;"	d
glShaderStorageBlockBinding	./GL/glew.h	/^#define glShaderStorageBlockBinding /;"	d
glShadingRateImageBarrierNV	./GL/glew.h	/^#define glShadingRateImageBarrierNV /;"	d
glShadingRateImagePaletteNV	./GL/glew.h	/^#define glShadingRateImagePaletteNV /;"	d
glShadingRateSampleOrderCustomNV	./GL/glew.h	/^#define glShadingRateSampleOrderCustomNV /;"	d
glSharpenTexFuncSGIS	./GL/glew.h	/^#define glSharpenTexFuncSGIS /;"	d
glSignalSemaphoreEXT	./GL/glew.h	/^#define glSignalSemaphoreEXT /;"	d
glSignalSemaphoreui64NVX	./GL/glew.h	/^#define glSignalSemaphoreui64NVX /;"	d
glSignalVkFenceNV	./GL/glew.h	/^#define glSignalVkFenceNV /;"	d
glSignalVkSemaphoreNV	./GL/glew.h	/^#define glSignalVkSemaphoreNV /;"	d
glSpecializeShader	./GL/glew.h	/^#define glSpecializeShader /;"	d
glSpecializeShaderARB	./GL/glew.h	/^#define glSpecializeShaderARB /;"	d
glSpriteParameterfSGIX	./GL/glew.h	/^#define glSpriteParameterfSGIX /;"	d
glSpriteParameterfvSGIX	./GL/glew.h	/^#define glSpriteParameterfvSGIX /;"	d
glSpriteParameteriSGIX	./GL/glew.h	/^#define glSpriteParameteriSGIX /;"	d
glSpriteParameterivSGIX	./GL/glew.h	/^#define glSpriteParameterivSGIX /;"	d
glStartTilingQCOM	./GL/glew.h	/^#define glStartTilingQCOM /;"	d
glStateCaptureNV	./GL/glew.h	/^#define glStateCaptureNV /;"	d
glStencilFillPathInstancedNV	./GL/glew.h	/^#define glStencilFillPathInstancedNV /;"	d
glStencilFillPathNV	./GL/glew.h	/^#define glStencilFillPathNV /;"	d
glStencilFuncSeparate	./GL/glew.h	/^#define glStencilFuncSeparate /;"	d
glStencilFuncSeparateATI	./GL/glew.h	/^#define glStencilFuncSeparateATI /;"	d
glStencilMaskSeparate	./GL/glew.h	/^#define glStencilMaskSeparate /;"	d
glStencilOpSeparate	./GL/glew.h	/^#define glStencilOpSeparate /;"	d
glStencilOpSeparateATI	./GL/glew.h	/^#define glStencilOpSeparateATI /;"	d
glStencilOpValueAMD	./GL/glew.h	/^#define glStencilOpValueAMD /;"	d
glStencilStrokePathInstancedNV	./GL/glew.h	/^#define glStencilStrokePathInstancedNV /;"	d
glStencilStrokePathNV	./GL/glew.h	/^#define glStencilStrokePathNV /;"	d
glStencilThenCoverFillPathInstancedNV	./GL/glew.h	/^#define glStencilThenCoverFillPathInstancedNV /;"	d
glStencilThenCoverFillPathNV	./GL/glew.h	/^#define glStencilThenCoverFillPathNV /;"	d
glStencilThenCoverStrokePathInstancedNV	./GL/glew.h	/^#define glStencilThenCoverStrokePathInstancedNV /;"	d
glStencilThenCoverStrokePathNV	./GL/glew.h	/^#define glStencilThenCoverStrokePathNV /;"	d
glStereoParameterfNV	./GL/glew.h	/^#define glStereoParameterfNV /;"	d
glStereoParameteriNV	./GL/glew.h	/^#define glStereoParameteriNV /;"	d
glStringMarkerGREMEDY	./GL/glew.h	/^#define glStringMarkerGREMEDY /;"	d
glSubpixelPrecisionBiasNV	./GL/glew.h	/^#define glSubpixelPrecisionBiasNV /;"	d
glSwapMPEGPredictorsSGIX	./GL/glew.h	/^#define glSwapMPEGPredictorsSGIX /;"	d
glSwizzleEXT	./GL/glew.h	/^#define glSwizzleEXT /;"	d
glSyncTextureINTEL	./GL/glew.h	/^#define glSyncTextureINTEL /;"	d
glTagSampleBufferSGIX	./GL/glew.h	/^#define glTagSampleBufferSGIX /;"	d
glTangentPointerEXT	./GL/glew.h	/^#define glTangentPointerEXT /;"	d
glTbufferMask3DFX	./GL/glew.h	/^#define glTbufferMask3DFX /;"	d
glTessellationFactorAMD	./GL/glew.h	/^#define glTessellationFactorAMD /;"	d
glTessellationModeAMD	./GL/glew.h	/^#define glTessellationModeAMD /;"	d
glTestFenceAPPLE	./GL/glew.h	/^#define glTestFenceAPPLE /;"	d
glTestFenceNV	./GL/glew.h	/^#define glTestFenceNV /;"	d
glTestObjectAPPLE	./GL/glew.h	/^#define glTestObjectAPPLE /;"	d
glTexAttachMemoryNV	./GL/glew.h	/^#define glTexAttachMemoryNV /;"	d
glTexBuffer	./GL/glew.h	/^#define glTexBuffer /;"	d
glTexBufferARB	./GL/glew.h	/^#define glTexBufferARB /;"	d
glTexBufferEXT	./GL/glew.h	/^#define glTexBufferEXT /;"	d
glTexBufferOES	./GL/glew.h	/^#define glTexBufferOES /;"	d
glTexBufferRange	./GL/glew.h	/^#define glTexBufferRange /;"	d
glTexBufferRangeOES	./GL/glew.h	/^#define glTexBufferRangeOES /;"	d
glTexBumpParameterfvATI	./GL/glew.h	/^#define glTexBumpParameterfvATI /;"	d
glTexBumpParameterivATI	./GL/glew.h	/^#define glTexBumpParameterivATI /;"	d
glTexCoord1hNV	./GL/glew.h	/^#define glTexCoord1hNV /;"	d
glTexCoord1hvNV	./GL/glew.h	/^#define glTexCoord1hvNV /;"	d
glTexCoord2fColor3fVertex3fSUN	./GL/glew.h	/^#define glTexCoord2fColor3fVertex3fSUN /;"	d
glTexCoord2fColor3fVertex3fvSUN	./GL/glew.h	/^#define glTexCoord2fColor3fVertex3fvSUN /;"	d
glTexCoord2fColor4fNormal3fVertex3fSUN	./GL/glew.h	/^#define glTexCoord2fColor4fNormal3fVertex3fSUN /;"	d
glTexCoord2fColor4fNormal3fVertex3fvSUN	./GL/glew.h	/^#define glTexCoord2fColor4fNormal3fVertex3fvSUN /;"	d
glTexCoord2fColor4ubVertex3fSUN	./GL/glew.h	/^#define glTexCoord2fColor4ubVertex3fSUN /;"	d
glTexCoord2fColor4ubVertex3fvSUN	./GL/glew.h	/^#define glTexCoord2fColor4ubVertex3fvSUN /;"	d
glTexCoord2fNormal3fVertex3fSUN	./GL/glew.h	/^#define glTexCoord2fNormal3fVertex3fSUN /;"	d
glTexCoord2fNormal3fVertex3fvSUN	./GL/glew.h	/^#define glTexCoord2fNormal3fVertex3fvSUN /;"	d
glTexCoord2fVertex3fSUN	./GL/glew.h	/^#define glTexCoord2fVertex3fSUN /;"	d
glTexCoord2fVertex3fvSUN	./GL/glew.h	/^#define glTexCoord2fVertex3fvSUN /;"	d
glTexCoord2hNV	./GL/glew.h	/^#define glTexCoord2hNV /;"	d
glTexCoord2hvNV	./GL/glew.h	/^#define glTexCoord2hvNV /;"	d
glTexCoord3hNV	./GL/glew.h	/^#define glTexCoord3hNV /;"	d
glTexCoord3hvNV	./GL/glew.h	/^#define glTexCoord3hvNV /;"	d
glTexCoord4fColor4fNormal3fVertex4fSUN	./GL/glew.h	/^#define glTexCoord4fColor4fNormal3fVertex4fSUN /;"	d
glTexCoord4fColor4fNormal3fVertex4fvSUN	./GL/glew.h	/^#define glTexCoord4fColor4fNormal3fVertex4fvSUN /;"	d
glTexCoord4fVertex4fSUN	./GL/glew.h	/^#define glTexCoord4fVertex4fSUN /;"	d
glTexCoord4fVertex4fvSUN	./GL/glew.h	/^#define glTexCoord4fVertex4fvSUN /;"	d
glTexCoord4hNV	./GL/glew.h	/^#define glTexCoord4hNV /;"	d
glTexCoord4hvNV	./GL/glew.h	/^#define glTexCoord4hvNV /;"	d
glTexCoordFormatNV	./GL/glew.h	/^#define glTexCoordFormatNV /;"	d
glTexCoordP1ui	./GL/glew.h	/^#define glTexCoordP1ui /;"	d
glTexCoordP1uiv	./GL/glew.h	/^#define glTexCoordP1uiv /;"	d
glTexCoordP2ui	./GL/glew.h	/^#define glTexCoordP2ui /;"	d
glTexCoordP2uiv	./GL/glew.h	/^#define glTexCoordP2uiv /;"	d
glTexCoordP3ui	./GL/glew.h	/^#define glTexCoordP3ui /;"	d
glTexCoordP3uiv	./GL/glew.h	/^#define glTexCoordP3uiv /;"	d
glTexCoordP4ui	./GL/glew.h	/^#define glTexCoordP4ui /;"	d
glTexCoordP4uiv	./GL/glew.h	/^#define glTexCoordP4uiv /;"	d
glTexCoordPointerEXT	./GL/glew.h	/^#define glTexCoordPointerEXT /;"	d
glTexCoordPointerListIBM	./GL/glew.h	/^#define glTexCoordPointerListIBM /;"	d
glTexCoordPointervINTEL	./GL/glew.h	/^#define glTexCoordPointervINTEL /;"	d
glTexEnvx	./GL/glew.h	/^#define glTexEnvx /;"	d
glTexEnvxv	./GL/glew.h	/^#define glTexEnvxv /;"	d
glTexFilterFuncSGIS	./GL/glew.h	/^#define glTexFilterFuncSGIS /;"	d
glTexGenfOES	./GL/glew.h	/^#define glTexGenfOES /;"	d
glTexGenfvOES	./GL/glew.h	/^#define glTexGenfvOES /;"	d
glTexGeniOES	./GL/glew.h	/^#define glTexGeniOES /;"	d
glTexGenivOES	./GL/glew.h	/^#define glTexGenivOES /;"	d
glTexGenxOES	./GL/glew.h	/^#define glTexGenxOES /;"	d
glTexGenxvOES	./GL/glew.h	/^#define glTexGenxvOES /;"	d
glTexImage2DMultisample	./GL/glew.h	/^#define glTexImage2DMultisample /;"	d
glTexImage2DMultisampleCoverageNV	./GL/glew.h	/^#define glTexImage2DMultisampleCoverageNV /;"	d
glTexImage3D	./GL/glew.h	/^#define glTexImage3D /;"	d
glTexImage3DEXT	./GL/glew.h	/^#define glTexImage3DEXT /;"	d
glTexImage3DMultisample	./GL/glew.h	/^#define glTexImage3DMultisample /;"	d
glTexImage3DMultisampleCoverageNV	./GL/glew.h	/^#define glTexImage3DMultisampleCoverageNV /;"	d
glTexImage3DNV	./GL/glew.h	/^#define glTexImage3DNV /;"	d
glTexImage3DOES	./GL/glew.h	/^#define glTexImage3DOES /;"	d
glTexImage4DSGIS	./GL/glew.h	/^#define glTexImage4DSGIS /;"	d
glTexPageCommitmentARB	./GL/glew.h	/^#define glTexPageCommitmentARB /;"	d
glTexPageCommitmentEXT	./GL/glew.h	/^#define glTexPageCommitmentEXT /;"	d
glTexParameterIiv	./GL/glew.h	/^#define glTexParameterIiv /;"	d
glTexParameterIivEXT	./GL/glew.h	/^#define glTexParameterIivEXT /;"	d
glTexParameterIivOES	./GL/glew.h	/^#define glTexParameterIivOES /;"	d
glTexParameterIuiv	./GL/glew.h	/^#define glTexParameterIuiv /;"	d
glTexParameterIuivEXT	./GL/glew.h	/^#define glTexParameterIuivEXT /;"	d
glTexParameterIuivOES	./GL/glew.h	/^#define glTexParameterIuivOES /;"	d
glTexParameterx	./GL/glew.h	/^#define glTexParameterx /;"	d
glTexParameterxv	./GL/glew.h	/^#define glTexParameterxv /;"	d
glTexRenderbufferNV	./GL/glew.h	/^#define glTexRenderbufferNV /;"	d
glTexScissorFuncINTEL	./GL/glew.h	/^#define glTexScissorFuncINTEL /;"	d
glTexScissorINTEL	./GL/glew.h	/^#define glTexScissorINTEL /;"	d
glTexStorage1D	./GL/glew.h	/^#define glTexStorage1D /;"	d
glTexStorage1DEXT	./GL/glew.h	/^#define glTexStorage1DEXT /;"	d
glTexStorage2D	./GL/glew.h	/^#define glTexStorage2D /;"	d
glTexStorage2DEXT	./GL/glew.h	/^#define glTexStorage2DEXT /;"	d
glTexStorage2DMultisample	./GL/glew.h	/^#define glTexStorage2DMultisample /;"	d
glTexStorage3D	./GL/glew.h	/^#define glTexStorage3D /;"	d
glTexStorage3DEXT	./GL/glew.h	/^#define glTexStorage3DEXT /;"	d
glTexStorage3DMultisample	./GL/glew.h	/^#define glTexStorage3DMultisample /;"	d
glTexStorage3DMultisampleOES	./GL/glew.h	/^#define glTexStorage3DMultisampleOES /;"	d
glTexStorageMem1DEXT	./GL/glew.h	/^#define glTexStorageMem1DEXT /;"	d
glTexStorageMem2DEXT	./GL/glew.h	/^#define glTexStorageMem2DEXT /;"	d
glTexStorageMem2DMultisampleEXT	./GL/glew.h	/^#define glTexStorageMem2DMultisampleEXT /;"	d
glTexStorageMem3DEXT	./GL/glew.h	/^#define glTexStorageMem3DEXT /;"	d
glTexStorageMem3DMultisampleEXT	./GL/glew.h	/^#define glTexStorageMem3DMultisampleEXT /;"	d
glTexStorageSparseAMD	./GL/glew.h	/^#define glTexStorageSparseAMD /;"	d
glTexSubImage1DEXT	./GL/glew.h	/^#define glTexSubImage1DEXT /;"	d
glTexSubImage2DEXT	./GL/glew.h	/^#define glTexSubImage2DEXT /;"	d
glTexSubImage3D	./GL/glew.h	/^#define glTexSubImage3D /;"	d
glTexSubImage3DEXT	./GL/glew.h	/^#define glTexSubImage3DEXT /;"	d
glTexSubImage3DNV	./GL/glew.h	/^#define glTexSubImage3DNV /;"	d
glTexSubImage3DOES	./GL/glew.h	/^#define glTexSubImage3DOES /;"	d
glTexSubImage4DSGIS	./GL/glew.h	/^#define glTexSubImage4DSGIS /;"	d
glTextureAttachMemoryNV	./GL/glew.h	/^#define glTextureAttachMemoryNV /;"	d
glTextureBarrier	./GL/glew.h	/^#define glTextureBarrier /;"	d
glTextureBarrierNV	./GL/glew.h	/^#define glTextureBarrierNV /;"	d
glTextureBuffer	./GL/glew.h	/^#define glTextureBuffer /;"	d
glTextureBufferEXT	./GL/glew.h	/^#define glTextureBufferEXT /;"	d
glTextureBufferRange	./GL/glew.h	/^#define glTextureBufferRange /;"	d
glTextureBufferRangeEXT	./GL/glew.h	/^#define glTextureBufferRangeEXT /;"	d
glTextureFogSGIX	./GL/glew.h	/^#define glTextureFogSGIX /;"	d
glTextureFoveationParametersQCOM	./GL/glew.h	/^#define glTextureFoveationParametersQCOM /;"	d
glTextureImage1DEXT	./GL/glew.h	/^#define glTextureImage1DEXT /;"	d
glTextureImage2DEXT	./GL/glew.h	/^#define glTextureImage2DEXT /;"	d
glTextureImage2DMultisampleCoverageNV	./GL/glew.h	/^#define glTextureImage2DMultisampleCoverageNV /;"	d
glTextureImage2DMultisampleNV	./GL/glew.h	/^#define glTextureImage2DMultisampleNV /;"	d
glTextureImage3DEXT	./GL/glew.h	/^#define glTextureImage3DEXT /;"	d
glTextureImage3DMultisampleCoverageNV	./GL/glew.h	/^#define glTextureImage3DMultisampleCoverageNV /;"	d
glTextureImage3DMultisampleNV	./GL/glew.h	/^#define glTextureImage3DMultisampleNV /;"	d
glTextureLightEXT	./GL/glew.h	/^#define glTextureLightEXT /;"	d
glTextureMaterialEXT	./GL/glew.h	/^#define glTextureMaterialEXT /;"	d
glTextureNormalEXT	./GL/glew.h	/^#define glTextureNormalEXT /;"	d
glTexturePageCommitmentEXT	./GL/glew.h	/^#define glTexturePageCommitmentEXT /;"	d
glTextureParameterIiv	./GL/glew.h	/^#define glTextureParameterIiv /;"	d
glTextureParameterIivEXT	./GL/glew.h	/^#define glTextureParameterIivEXT /;"	d
glTextureParameterIuiv	./GL/glew.h	/^#define glTextureParameterIuiv /;"	d
glTextureParameterIuivEXT	./GL/glew.h	/^#define glTextureParameterIuivEXT /;"	d
glTextureParameterf	./GL/glew.h	/^#define glTextureParameterf /;"	d
glTextureParameterfEXT	./GL/glew.h	/^#define glTextureParameterfEXT /;"	d
glTextureParameterfv	./GL/glew.h	/^#define glTextureParameterfv /;"	d
glTextureParameterfvEXT	./GL/glew.h	/^#define glTextureParameterfvEXT /;"	d
glTextureParameteri	./GL/glew.h	/^#define glTextureParameteri /;"	d
glTextureParameteriEXT	./GL/glew.h	/^#define glTextureParameteriEXT /;"	d
glTextureParameteriv	./GL/glew.h	/^#define glTextureParameteriv /;"	d
glTextureParameterivEXT	./GL/glew.h	/^#define glTextureParameterivEXT /;"	d
glTextureRangeAPPLE	./GL/glew.h	/^#define glTextureRangeAPPLE /;"	d
glTextureRenderbufferEXT	./GL/glew.h	/^#define glTextureRenderbufferEXT /;"	d
glTextureStorage1D	./GL/glew.h	/^#define glTextureStorage1D /;"	d
glTextureStorage1DEXT	./GL/glew.h	/^#define glTextureStorage1DEXT /;"	d
glTextureStorage2D	./GL/glew.h	/^#define glTextureStorage2D /;"	d
glTextureStorage2DEXT	./GL/glew.h	/^#define glTextureStorage2DEXT /;"	d
glTextureStorage2DMultisample	./GL/glew.h	/^#define glTextureStorage2DMultisample /;"	d
glTextureStorage2DMultisampleEXT	./GL/glew.h	/^#define glTextureStorage2DMultisampleEXT /;"	d
glTextureStorage3D	./GL/glew.h	/^#define glTextureStorage3D /;"	d
glTextureStorage3DEXT	./GL/glew.h	/^#define glTextureStorage3DEXT /;"	d
glTextureStorage3DMultisample	./GL/glew.h	/^#define glTextureStorage3DMultisample /;"	d
glTextureStorage3DMultisampleEXT	./GL/glew.h	/^#define glTextureStorage3DMultisampleEXT /;"	d
glTextureStorageMem1DEXT	./GL/glew.h	/^#define glTextureStorageMem1DEXT /;"	d
glTextureStorageMem2DEXT	./GL/glew.h	/^#define glTextureStorageMem2DEXT /;"	d
glTextureStorageMem2DMultisampleEXT	./GL/glew.h	/^#define glTextureStorageMem2DMultisampleEXT /;"	d
glTextureStorageMem3DEXT	./GL/glew.h	/^#define glTextureStorageMem3DEXT /;"	d
glTextureStorageMem3DMultisampleEXT	./GL/glew.h	/^#define glTextureStorageMem3DMultisampleEXT /;"	d
glTextureStorageSparseAMD	./GL/glew.h	/^#define glTextureStorageSparseAMD /;"	d
glTextureSubImage1D	./GL/glew.h	/^#define glTextureSubImage1D /;"	d
glTextureSubImage1DEXT	./GL/glew.h	/^#define glTextureSubImage1DEXT /;"	d
glTextureSubImage2D	./GL/glew.h	/^#define glTextureSubImage2D /;"	d
glTextureSubImage2DEXT	./GL/glew.h	/^#define glTextureSubImage2DEXT /;"	d
glTextureSubImage3D	./GL/glew.h	/^#define glTextureSubImage3D /;"	d
glTextureSubImage3DEXT	./GL/glew.h	/^#define glTextureSubImage3DEXT /;"	d
glTextureView	./GL/glew.h	/^#define glTextureView /;"	d
glTextureViewEXT	./GL/glew.h	/^#define glTextureViewEXT /;"	d
glTextureViewOES	./GL/glew.h	/^#define glTextureViewOES /;"	d
glTrackMatrixNV	./GL/glew.h	/^#define glTrackMatrixNV /;"	d
glTransformFeedbackAttribsNV	./GL/glew.h	/^#define glTransformFeedbackAttribsNV /;"	d
glTransformFeedbackBufferBase	./GL/glew.h	/^#define glTransformFeedbackBufferBase /;"	d
glTransformFeedbackBufferRange	./GL/glew.h	/^#define glTransformFeedbackBufferRange /;"	d
glTransformFeedbackVaryings	./GL/glew.h	/^#define glTransformFeedbackVaryings /;"	d
glTransformFeedbackVaryingsEXT	./GL/glew.h	/^#define glTransformFeedbackVaryingsEXT /;"	d
glTransformFeedbackVaryingsNV	./GL/glew.h	/^#define glTransformFeedbackVaryingsNV /;"	d
glTransformPathNV	./GL/glew.h	/^#define glTransformPathNV /;"	d
glTranslatex	./GL/glew.h	/^#define glTranslatex /;"	d
glUniform1d	./GL/glew.h	/^#define glUniform1d /;"	d
glUniform1dv	./GL/glew.h	/^#define glUniform1dv /;"	d
glUniform1f	./GL/glew.h	/^#define glUniform1f /;"	d
glUniform1fARB	./GL/glew.h	/^#define glUniform1fARB /;"	d
glUniform1fv	./GL/glew.h	/^#define glUniform1fv /;"	d
glUniform1fvARB	./GL/glew.h	/^#define glUniform1fvARB /;"	d
glUniform1i	./GL/glew.h	/^#define glUniform1i /;"	d
glUniform1i64ARB	./GL/glew.h	/^#define glUniform1i64ARB /;"	d
glUniform1i64NV	./GL/glew.h	/^#define glUniform1i64NV /;"	d
glUniform1i64vARB	./GL/glew.h	/^#define glUniform1i64vARB /;"	d
glUniform1i64vNV	./GL/glew.h	/^#define glUniform1i64vNV /;"	d
glUniform1iARB	./GL/glew.h	/^#define glUniform1iARB /;"	d
glUniform1iv	./GL/glew.h	/^#define glUniform1iv /;"	d
glUniform1ivARB	./GL/glew.h	/^#define glUniform1ivARB /;"	d
glUniform1ui	./GL/glew.h	/^#define glUniform1ui /;"	d
glUniform1ui64ARB	./GL/glew.h	/^#define glUniform1ui64ARB /;"	d
glUniform1ui64NV	./GL/glew.h	/^#define glUniform1ui64NV /;"	d
glUniform1ui64vARB	./GL/glew.h	/^#define glUniform1ui64vARB /;"	d
glUniform1ui64vNV	./GL/glew.h	/^#define glUniform1ui64vNV /;"	d
glUniform1uiEXT	./GL/glew.h	/^#define glUniform1uiEXT /;"	d
glUniform1uiv	./GL/glew.h	/^#define glUniform1uiv /;"	d
glUniform1uivEXT	./GL/glew.h	/^#define glUniform1uivEXT /;"	d
glUniform2d	./GL/glew.h	/^#define glUniform2d /;"	d
glUniform2dv	./GL/glew.h	/^#define glUniform2dv /;"	d
glUniform2f	./GL/glew.h	/^#define glUniform2f /;"	d
glUniform2fARB	./GL/glew.h	/^#define glUniform2fARB /;"	d
glUniform2fv	./GL/glew.h	/^#define glUniform2fv /;"	d
glUniform2fvARB	./GL/glew.h	/^#define glUniform2fvARB /;"	d
glUniform2i	./GL/glew.h	/^#define glUniform2i /;"	d
glUniform2i64ARB	./GL/glew.h	/^#define glUniform2i64ARB /;"	d
glUniform2i64NV	./GL/glew.h	/^#define glUniform2i64NV /;"	d
glUniform2i64vARB	./GL/glew.h	/^#define glUniform2i64vARB /;"	d
glUniform2i64vNV	./GL/glew.h	/^#define glUniform2i64vNV /;"	d
glUniform2iARB	./GL/glew.h	/^#define glUniform2iARB /;"	d
glUniform2iv	./GL/glew.h	/^#define glUniform2iv /;"	d
glUniform2ivARB	./GL/glew.h	/^#define glUniform2ivARB /;"	d
glUniform2ui	./GL/glew.h	/^#define glUniform2ui /;"	d
glUniform2ui64ARB	./GL/glew.h	/^#define glUniform2ui64ARB /;"	d
glUniform2ui64NV	./GL/glew.h	/^#define glUniform2ui64NV /;"	d
glUniform2ui64vARB	./GL/glew.h	/^#define glUniform2ui64vARB /;"	d
glUniform2ui64vNV	./GL/glew.h	/^#define glUniform2ui64vNV /;"	d
glUniform2uiEXT	./GL/glew.h	/^#define glUniform2uiEXT /;"	d
glUniform2uiv	./GL/glew.h	/^#define glUniform2uiv /;"	d
glUniform2uivEXT	./GL/glew.h	/^#define glUniform2uivEXT /;"	d
glUniform3d	./GL/glew.h	/^#define glUniform3d /;"	d
glUniform3dv	./GL/glew.h	/^#define glUniform3dv /;"	d
glUniform3f	./GL/glew.h	/^#define glUniform3f /;"	d
glUniform3fARB	./GL/glew.h	/^#define glUniform3fARB /;"	d
glUniform3fv	./GL/glew.h	/^#define glUniform3fv /;"	d
glUniform3fvARB	./GL/glew.h	/^#define glUniform3fvARB /;"	d
glUniform3i	./GL/glew.h	/^#define glUniform3i /;"	d
glUniform3i64ARB	./GL/glew.h	/^#define glUniform3i64ARB /;"	d
glUniform3i64NV	./GL/glew.h	/^#define glUniform3i64NV /;"	d
glUniform3i64vARB	./GL/glew.h	/^#define glUniform3i64vARB /;"	d
glUniform3i64vNV	./GL/glew.h	/^#define glUniform3i64vNV /;"	d
glUniform3iARB	./GL/glew.h	/^#define glUniform3iARB /;"	d
glUniform3iv	./GL/glew.h	/^#define glUniform3iv /;"	d
glUniform3ivARB	./GL/glew.h	/^#define glUniform3ivARB /;"	d
glUniform3ui	./GL/glew.h	/^#define glUniform3ui /;"	d
glUniform3ui64ARB	./GL/glew.h	/^#define glUniform3ui64ARB /;"	d
glUniform3ui64NV	./GL/glew.h	/^#define glUniform3ui64NV /;"	d
glUniform3ui64vARB	./GL/glew.h	/^#define glUniform3ui64vARB /;"	d
glUniform3ui64vNV	./GL/glew.h	/^#define glUniform3ui64vNV /;"	d
glUniform3uiEXT	./GL/glew.h	/^#define glUniform3uiEXT /;"	d
glUniform3uiv	./GL/glew.h	/^#define glUniform3uiv /;"	d
glUniform3uivEXT	./GL/glew.h	/^#define glUniform3uivEXT /;"	d
glUniform4d	./GL/glew.h	/^#define glUniform4d /;"	d
glUniform4dv	./GL/glew.h	/^#define glUniform4dv /;"	d
glUniform4f	./GL/glew.h	/^#define glUniform4f /;"	d
glUniform4fARB	./GL/glew.h	/^#define glUniform4fARB /;"	d
glUniform4fv	./GL/glew.h	/^#define glUniform4fv /;"	d
glUniform4fvARB	./GL/glew.h	/^#define glUniform4fvARB /;"	d
glUniform4i	./GL/glew.h	/^#define glUniform4i /;"	d
glUniform4i64ARB	./GL/glew.h	/^#define glUniform4i64ARB /;"	d
glUniform4i64NV	./GL/glew.h	/^#define glUniform4i64NV /;"	d
glUniform4i64vARB	./GL/glew.h	/^#define glUniform4i64vARB /;"	d
glUniform4i64vNV	./GL/glew.h	/^#define glUniform4i64vNV /;"	d
glUniform4iARB	./GL/glew.h	/^#define glUniform4iARB /;"	d
glUniform4iv	./GL/glew.h	/^#define glUniform4iv /;"	d
glUniform4ivARB	./GL/glew.h	/^#define glUniform4ivARB /;"	d
glUniform4ui	./GL/glew.h	/^#define glUniform4ui /;"	d
glUniform4ui64ARB	./GL/glew.h	/^#define glUniform4ui64ARB /;"	d
glUniform4ui64NV	./GL/glew.h	/^#define glUniform4ui64NV /;"	d
glUniform4ui64vARB	./GL/glew.h	/^#define glUniform4ui64vARB /;"	d
glUniform4ui64vNV	./GL/glew.h	/^#define glUniform4ui64vNV /;"	d
glUniform4uiEXT	./GL/glew.h	/^#define glUniform4uiEXT /;"	d
glUniform4uiv	./GL/glew.h	/^#define glUniform4uiv /;"	d
glUniform4uivEXT	./GL/glew.h	/^#define glUniform4uivEXT /;"	d
glUniformBlockBinding	./GL/glew.h	/^#define glUniformBlockBinding /;"	d
glUniformBufferEXT	./GL/glew.h	/^#define glUniformBufferEXT /;"	d
glUniformHandleui64ARB	./GL/glew.h	/^#define glUniformHandleui64ARB /;"	d
glUniformHandleui64IMG	./GL/glew.h	/^#define glUniformHandleui64IMG /;"	d
glUniformHandleui64NV	./GL/glew.h	/^#define glUniformHandleui64NV /;"	d
glUniformHandleui64vARB	./GL/glew.h	/^#define glUniformHandleui64vARB /;"	d
glUniformHandleui64vIMG	./GL/glew.h	/^#define glUniformHandleui64vIMG /;"	d
glUniformHandleui64vNV	./GL/glew.h	/^#define glUniformHandleui64vNV /;"	d
glUniformMatrix2dv	./GL/glew.h	/^#define glUniformMatrix2dv /;"	d
glUniformMatrix2fv	./GL/glew.h	/^#define glUniformMatrix2fv /;"	d
glUniformMatrix2fvARB	./GL/glew.h	/^#define glUniformMatrix2fvARB /;"	d
glUniformMatrix2x3dv	./GL/glew.h	/^#define glUniformMatrix2x3dv /;"	d
glUniformMatrix2x3fv	./GL/glew.h	/^#define glUniformMatrix2x3fv /;"	d
glUniformMatrix2x3fvNV	./GL/glew.h	/^#define glUniformMatrix2x3fvNV /;"	d
glUniformMatrix2x4dv	./GL/glew.h	/^#define glUniformMatrix2x4dv /;"	d
glUniformMatrix2x4fv	./GL/glew.h	/^#define glUniformMatrix2x4fv /;"	d
glUniformMatrix2x4fvNV	./GL/glew.h	/^#define glUniformMatrix2x4fvNV /;"	d
glUniformMatrix3dv	./GL/glew.h	/^#define glUniformMatrix3dv /;"	d
glUniformMatrix3fv	./GL/glew.h	/^#define glUniformMatrix3fv /;"	d
glUniformMatrix3fvARB	./GL/glew.h	/^#define glUniformMatrix3fvARB /;"	d
glUniformMatrix3x2dv	./GL/glew.h	/^#define glUniformMatrix3x2dv /;"	d
glUniformMatrix3x2fv	./GL/glew.h	/^#define glUniformMatrix3x2fv /;"	d
glUniformMatrix3x2fvNV	./GL/glew.h	/^#define glUniformMatrix3x2fvNV /;"	d
glUniformMatrix3x4dv	./GL/glew.h	/^#define glUniformMatrix3x4dv /;"	d
glUniformMatrix3x4fv	./GL/glew.h	/^#define glUniformMatrix3x4fv /;"	d
glUniformMatrix3x4fvNV	./GL/glew.h	/^#define glUniformMatrix3x4fvNV /;"	d
glUniformMatrix4dv	./GL/glew.h	/^#define glUniformMatrix4dv /;"	d
glUniformMatrix4fv	./GL/glew.h	/^#define glUniformMatrix4fv /;"	d
glUniformMatrix4fvARB	./GL/glew.h	/^#define glUniformMatrix4fvARB /;"	d
glUniformMatrix4x2dv	./GL/glew.h	/^#define glUniformMatrix4x2dv /;"	d
glUniformMatrix4x2fv	./GL/glew.h	/^#define glUniformMatrix4x2fv /;"	d
glUniformMatrix4x2fvNV	./GL/glew.h	/^#define glUniformMatrix4x2fvNV /;"	d
glUniformMatrix4x3dv	./GL/glew.h	/^#define glUniformMatrix4x3dv /;"	d
glUniformMatrix4x3fv	./GL/glew.h	/^#define glUniformMatrix4x3fv /;"	d
glUniformMatrix4x3fvNV	./GL/glew.h	/^#define glUniformMatrix4x3fvNV /;"	d
glUniformSubroutinesuiv	./GL/glew.h	/^#define glUniformSubroutinesuiv /;"	d
glUniformui64NV	./GL/glew.h	/^#define glUniformui64NV /;"	d
glUniformui64vNV	./GL/glew.h	/^#define glUniformui64vNV /;"	d
glUnlockArraysEXT	./GL/glew.h	/^#define glUnlockArraysEXT /;"	d
glUnmapBuffer	./GL/glew.h	/^#define glUnmapBuffer /;"	d
glUnmapBufferARB	./GL/glew.h	/^#define glUnmapBufferARB /;"	d
glUnmapBufferOES	./GL/glew.h	/^#define glUnmapBufferOES /;"	d
glUnmapNamedBuffer	./GL/glew.h	/^#define glUnmapNamedBuffer /;"	d
glUnmapNamedBufferEXT	./GL/glew.h	/^#define glUnmapNamedBufferEXT /;"	d
glUnmapObjectBufferATI	./GL/glew.h	/^#define glUnmapObjectBufferATI /;"	d
glUnmapTexture2DINTEL	./GL/glew.h	/^#define glUnmapTexture2DINTEL /;"	d
glUpdateObjectBufferATI	./GL/glew.h	/^#define glUpdateObjectBufferATI /;"	d
glUploadGpuMaskNVX	./GL/glew.h	/^#define glUploadGpuMaskNVX /;"	d
glUseProgram	./GL/glew.h	/^#define glUseProgram /;"	d
glUseProgramObjectARB	./GL/glew.h	/^#define glUseProgramObjectARB /;"	d
glUseProgramStages	./GL/glew.h	/^#define glUseProgramStages /;"	d
glUseShaderProgramEXT	./GL/glew.h	/^#define glUseShaderProgramEXT /;"	d
glVDPAUFiniNV	./GL/glew.h	/^#define glVDPAUFiniNV /;"	d
glVDPAUGetSurfaceivNV	./GL/glew.h	/^#define glVDPAUGetSurfaceivNV /;"	d
glVDPAUInitNV	./GL/glew.h	/^#define glVDPAUInitNV /;"	d
glVDPAUIsSurfaceNV	./GL/glew.h	/^#define glVDPAUIsSurfaceNV /;"	d
glVDPAUMapSurfacesNV	./GL/glew.h	/^#define glVDPAUMapSurfacesNV /;"	d
glVDPAURegisterOutputSurfaceNV	./GL/glew.h	/^#define glVDPAURegisterOutputSurfaceNV /;"	d
glVDPAURegisterVideoSurfaceNV	./GL/glew.h	/^#define glVDPAURegisterVideoSurfaceNV /;"	d
glVDPAURegisterVideoSurfaceWithPictureStructureNV	./GL/glew.h	/^#define glVDPAURegisterVideoSurfaceWithPictureStructureNV /;"	d
glVDPAUSurfaceAccessNV	./GL/glew.h	/^#define glVDPAUSurfaceAccessNV /;"	d
glVDPAUUnmapSurfacesNV	./GL/glew.h	/^#define glVDPAUUnmapSurfacesNV /;"	d
glVDPAUUnregisterSurfaceNV	./GL/glew.h	/^#define glVDPAUUnregisterSurfaceNV /;"	d
glValidateProgram	./GL/glew.h	/^#define glValidateProgram /;"	d
glValidateProgramARB	./GL/glew.h	/^#define glValidateProgramARB /;"	d
glValidateProgramPipeline	./GL/glew.h	/^#define glValidateProgramPipeline /;"	d
glVariantArrayObjectATI	./GL/glew.h	/^#define glVariantArrayObjectATI /;"	d
glVariantPointerEXT	./GL/glew.h	/^#define glVariantPointerEXT /;"	d
glVariantbvEXT	./GL/glew.h	/^#define glVariantbvEXT /;"	d
glVariantdvEXT	./GL/glew.h	/^#define glVariantdvEXT /;"	d
glVariantfvEXT	./GL/glew.h	/^#define glVariantfvEXT /;"	d
glVariantivEXT	./GL/glew.h	/^#define glVariantivEXT /;"	d
glVariantsvEXT	./GL/glew.h	/^#define glVariantsvEXT /;"	d
glVariantubvEXT	./GL/glew.h	/^#define glVariantubvEXT /;"	d
glVariantuivEXT	./GL/glew.h	/^#define glVariantuivEXT /;"	d
glVariantusvEXT	./GL/glew.h	/^#define glVariantusvEXT /;"	d
glVectorOperationSGIX	./GL/glew.h	/^#define glVectorOperationSGIX /;"	d
glVertex2hNV	./GL/glew.h	/^#define glVertex2hNV /;"	d
glVertex2hvNV	./GL/glew.h	/^#define glVertex2hvNV /;"	d
glVertex3hNV	./GL/glew.h	/^#define glVertex3hNV /;"	d
glVertex3hvNV	./GL/glew.h	/^#define glVertex3hvNV /;"	d
glVertex4hNV	./GL/glew.h	/^#define glVertex4hNV /;"	d
glVertex4hvNV	./GL/glew.h	/^#define glVertex4hvNV /;"	d
glVertexArrayAttribBinding	./GL/glew.h	/^#define glVertexArrayAttribBinding /;"	d
glVertexArrayAttribFormat	./GL/glew.h	/^#define glVertexArrayAttribFormat /;"	d
glVertexArrayAttribIFormat	./GL/glew.h	/^#define glVertexArrayAttribIFormat /;"	d
glVertexArrayAttribLFormat	./GL/glew.h	/^#define glVertexArrayAttribLFormat /;"	d
glVertexArrayBindVertexBufferEXT	./GL/glew.h	/^#define glVertexArrayBindVertexBufferEXT /;"	d
glVertexArrayBindingDivisor	./GL/glew.h	/^#define glVertexArrayBindingDivisor /;"	d
glVertexArrayColorOffsetEXT	./GL/glew.h	/^#define glVertexArrayColorOffsetEXT /;"	d
glVertexArrayEdgeFlagOffsetEXT	./GL/glew.h	/^#define glVertexArrayEdgeFlagOffsetEXT /;"	d
glVertexArrayElementBuffer	./GL/glew.h	/^#define glVertexArrayElementBuffer /;"	d
glVertexArrayFogCoordOffsetEXT	./GL/glew.h	/^#define glVertexArrayFogCoordOffsetEXT /;"	d
glVertexArrayIndexOffsetEXT	./GL/glew.h	/^#define glVertexArrayIndexOffsetEXT /;"	d
glVertexArrayMultiTexCoordOffsetEXT	./GL/glew.h	/^#define glVertexArrayMultiTexCoordOffsetEXT /;"	d
glVertexArrayNormalOffsetEXT	./GL/glew.h	/^#define glVertexArrayNormalOffsetEXT /;"	d
glVertexArrayParameteriAPPLE	./GL/glew.h	/^#define glVertexArrayParameteriAPPLE /;"	d
glVertexArrayRangeAPPLE	./GL/glew.h	/^#define glVertexArrayRangeAPPLE /;"	d
glVertexArrayRangeNV	./GL/glew.h	/^#define glVertexArrayRangeNV /;"	d
glVertexArraySecondaryColorOffsetEXT	./GL/glew.h	/^#define glVertexArraySecondaryColorOffsetEXT /;"	d
glVertexArrayTexCoordOffsetEXT	./GL/glew.h	/^#define glVertexArrayTexCoordOffsetEXT /;"	d
glVertexArrayVertexAttribBindingEXT	./GL/glew.h	/^#define glVertexArrayVertexAttribBindingEXT /;"	d
glVertexArrayVertexAttribDivisorEXT	./GL/glew.h	/^#define glVertexArrayVertexAttribDivisorEXT /;"	d
glVertexArrayVertexAttribFormatEXT	./GL/glew.h	/^#define glVertexArrayVertexAttribFormatEXT /;"	d
glVertexArrayVertexAttribIFormatEXT	./GL/glew.h	/^#define glVertexArrayVertexAttribIFormatEXT /;"	d
glVertexArrayVertexAttribIOffsetEXT	./GL/glew.h	/^#define glVertexArrayVertexAttribIOffsetEXT /;"	d
glVertexArrayVertexAttribLFormatEXT	./GL/glew.h	/^#define glVertexArrayVertexAttribLFormatEXT /;"	d
glVertexArrayVertexAttribLOffsetEXT	./GL/glew.h	/^#define glVertexArrayVertexAttribLOffsetEXT /;"	d
glVertexArrayVertexAttribOffsetEXT	./GL/glew.h	/^#define glVertexArrayVertexAttribOffsetEXT /;"	d
glVertexArrayVertexBindingDivisorEXT	./GL/glew.h	/^#define glVertexArrayVertexBindingDivisorEXT /;"	d
glVertexArrayVertexBuffer	./GL/glew.h	/^#define glVertexArrayVertexBuffer /;"	d
glVertexArrayVertexBuffers	./GL/glew.h	/^#define glVertexArrayVertexBuffers /;"	d
glVertexArrayVertexOffsetEXT	./GL/glew.h	/^#define glVertexArrayVertexOffsetEXT /;"	d
glVertexAttrib1d	./GL/glew.h	/^#define glVertexAttrib1d /;"	d
glVertexAttrib1dARB	./GL/glew.h	/^#define glVertexAttrib1dARB /;"	d
glVertexAttrib1dNV	./GL/glew.h	/^#define glVertexAttrib1dNV /;"	d
glVertexAttrib1dv	./GL/glew.h	/^#define glVertexAttrib1dv /;"	d
glVertexAttrib1dvARB	./GL/glew.h	/^#define glVertexAttrib1dvARB /;"	d
glVertexAttrib1dvNV	./GL/glew.h	/^#define glVertexAttrib1dvNV /;"	d
glVertexAttrib1f	./GL/glew.h	/^#define glVertexAttrib1f /;"	d
glVertexAttrib1fARB	./GL/glew.h	/^#define glVertexAttrib1fARB /;"	d
glVertexAttrib1fNV	./GL/glew.h	/^#define glVertexAttrib1fNV /;"	d
glVertexAttrib1fv	./GL/glew.h	/^#define glVertexAttrib1fv /;"	d
glVertexAttrib1fvARB	./GL/glew.h	/^#define glVertexAttrib1fvARB /;"	d
glVertexAttrib1fvNV	./GL/glew.h	/^#define glVertexAttrib1fvNV /;"	d
glVertexAttrib1hNV	./GL/glew.h	/^#define glVertexAttrib1hNV /;"	d
glVertexAttrib1hvNV	./GL/glew.h	/^#define glVertexAttrib1hvNV /;"	d
glVertexAttrib1s	./GL/glew.h	/^#define glVertexAttrib1s /;"	d
glVertexAttrib1sARB	./GL/glew.h	/^#define glVertexAttrib1sARB /;"	d
glVertexAttrib1sNV	./GL/glew.h	/^#define glVertexAttrib1sNV /;"	d
glVertexAttrib1sv	./GL/glew.h	/^#define glVertexAttrib1sv /;"	d
glVertexAttrib1svARB	./GL/glew.h	/^#define glVertexAttrib1svARB /;"	d
glVertexAttrib1svNV	./GL/glew.h	/^#define glVertexAttrib1svNV /;"	d
glVertexAttrib2d	./GL/glew.h	/^#define glVertexAttrib2d /;"	d
glVertexAttrib2dARB	./GL/glew.h	/^#define glVertexAttrib2dARB /;"	d
glVertexAttrib2dNV	./GL/glew.h	/^#define glVertexAttrib2dNV /;"	d
glVertexAttrib2dv	./GL/glew.h	/^#define glVertexAttrib2dv /;"	d
glVertexAttrib2dvARB	./GL/glew.h	/^#define glVertexAttrib2dvARB /;"	d
glVertexAttrib2dvNV	./GL/glew.h	/^#define glVertexAttrib2dvNV /;"	d
glVertexAttrib2f	./GL/glew.h	/^#define glVertexAttrib2f /;"	d
glVertexAttrib2fARB	./GL/glew.h	/^#define glVertexAttrib2fARB /;"	d
glVertexAttrib2fNV	./GL/glew.h	/^#define glVertexAttrib2fNV /;"	d
glVertexAttrib2fv	./GL/glew.h	/^#define glVertexAttrib2fv /;"	d
glVertexAttrib2fvARB	./GL/glew.h	/^#define glVertexAttrib2fvARB /;"	d
glVertexAttrib2fvNV	./GL/glew.h	/^#define glVertexAttrib2fvNV /;"	d
glVertexAttrib2hNV	./GL/glew.h	/^#define glVertexAttrib2hNV /;"	d
glVertexAttrib2hvNV	./GL/glew.h	/^#define glVertexAttrib2hvNV /;"	d
glVertexAttrib2s	./GL/glew.h	/^#define glVertexAttrib2s /;"	d
glVertexAttrib2sARB	./GL/glew.h	/^#define glVertexAttrib2sARB /;"	d
glVertexAttrib2sNV	./GL/glew.h	/^#define glVertexAttrib2sNV /;"	d
glVertexAttrib2sv	./GL/glew.h	/^#define glVertexAttrib2sv /;"	d
glVertexAttrib2svARB	./GL/glew.h	/^#define glVertexAttrib2svARB /;"	d
glVertexAttrib2svNV	./GL/glew.h	/^#define glVertexAttrib2svNV /;"	d
glVertexAttrib3d	./GL/glew.h	/^#define glVertexAttrib3d /;"	d
glVertexAttrib3dARB	./GL/glew.h	/^#define glVertexAttrib3dARB /;"	d
glVertexAttrib3dNV	./GL/glew.h	/^#define glVertexAttrib3dNV /;"	d
glVertexAttrib3dv	./GL/glew.h	/^#define glVertexAttrib3dv /;"	d
glVertexAttrib3dvARB	./GL/glew.h	/^#define glVertexAttrib3dvARB /;"	d
glVertexAttrib3dvNV	./GL/glew.h	/^#define glVertexAttrib3dvNV /;"	d
glVertexAttrib3f	./GL/glew.h	/^#define glVertexAttrib3f /;"	d
glVertexAttrib3fARB	./GL/glew.h	/^#define glVertexAttrib3fARB /;"	d
glVertexAttrib3fNV	./GL/glew.h	/^#define glVertexAttrib3fNV /;"	d
glVertexAttrib3fv	./GL/glew.h	/^#define glVertexAttrib3fv /;"	d
glVertexAttrib3fvARB	./GL/glew.h	/^#define glVertexAttrib3fvARB /;"	d
glVertexAttrib3fvNV	./GL/glew.h	/^#define glVertexAttrib3fvNV /;"	d
glVertexAttrib3hNV	./GL/glew.h	/^#define glVertexAttrib3hNV /;"	d
glVertexAttrib3hvNV	./GL/glew.h	/^#define glVertexAttrib3hvNV /;"	d
glVertexAttrib3s	./GL/glew.h	/^#define glVertexAttrib3s /;"	d
glVertexAttrib3sARB	./GL/glew.h	/^#define glVertexAttrib3sARB /;"	d
glVertexAttrib3sNV	./GL/glew.h	/^#define glVertexAttrib3sNV /;"	d
glVertexAttrib3sv	./GL/glew.h	/^#define glVertexAttrib3sv /;"	d
glVertexAttrib3svARB	./GL/glew.h	/^#define glVertexAttrib3svARB /;"	d
glVertexAttrib3svNV	./GL/glew.h	/^#define glVertexAttrib3svNV /;"	d
glVertexAttrib4Nbv	./GL/glew.h	/^#define glVertexAttrib4Nbv /;"	d
glVertexAttrib4NbvARB	./GL/glew.h	/^#define glVertexAttrib4NbvARB /;"	d
glVertexAttrib4Niv	./GL/glew.h	/^#define glVertexAttrib4Niv /;"	d
glVertexAttrib4NivARB	./GL/glew.h	/^#define glVertexAttrib4NivARB /;"	d
glVertexAttrib4Nsv	./GL/glew.h	/^#define glVertexAttrib4Nsv /;"	d
glVertexAttrib4NsvARB	./GL/glew.h	/^#define glVertexAttrib4NsvARB /;"	d
glVertexAttrib4Nub	./GL/glew.h	/^#define glVertexAttrib4Nub /;"	d
glVertexAttrib4NubARB	./GL/glew.h	/^#define glVertexAttrib4NubARB /;"	d
glVertexAttrib4Nubv	./GL/glew.h	/^#define glVertexAttrib4Nubv /;"	d
glVertexAttrib4NubvARB	./GL/glew.h	/^#define glVertexAttrib4NubvARB /;"	d
glVertexAttrib4Nuiv	./GL/glew.h	/^#define glVertexAttrib4Nuiv /;"	d
glVertexAttrib4NuivARB	./GL/glew.h	/^#define glVertexAttrib4NuivARB /;"	d
glVertexAttrib4Nusv	./GL/glew.h	/^#define glVertexAttrib4Nusv /;"	d
glVertexAttrib4NusvARB	./GL/glew.h	/^#define glVertexAttrib4NusvARB /;"	d
glVertexAttrib4bv	./GL/glew.h	/^#define glVertexAttrib4bv /;"	d
glVertexAttrib4bvARB	./GL/glew.h	/^#define glVertexAttrib4bvARB /;"	d
glVertexAttrib4d	./GL/glew.h	/^#define glVertexAttrib4d /;"	d
glVertexAttrib4dARB	./GL/glew.h	/^#define glVertexAttrib4dARB /;"	d
glVertexAttrib4dNV	./GL/glew.h	/^#define glVertexAttrib4dNV /;"	d
glVertexAttrib4dv	./GL/glew.h	/^#define glVertexAttrib4dv /;"	d
glVertexAttrib4dvARB	./GL/glew.h	/^#define glVertexAttrib4dvARB /;"	d
glVertexAttrib4dvNV	./GL/glew.h	/^#define glVertexAttrib4dvNV /;"	d
glVertexAttrib4f	./GL/glew.h	/^#define glVertexAttrib4f /;"	d
glVertexAttrib4fARB	./GL/glew.h	/^#define glVertexAttrib4fARB /;"	d
glVertexAttrib4fNV	./GL/glew.h	/^#define glVertexAttrib4fNV /;"	d
glVertexAttrib4fv	./GL/glew.h	/^#define glVertexAttrib4fv /;"	d
glVertexAttrib4fvARB	./GL/glew.h	/^#define glVertexAttrib4fvARB /;"	d
glVertexAttrib4fvNV	./GL/glew.h	/^#define glVertexAttrib4fvNV /;"	d
glVertexAttrib4hNV	./GL/glew.h	/^#define glVertexAttrib4hNV /;"	d
glVertexAttrib4hvNV	./GL/glew.h	/^#define glVertexAttrib4hvNV /;"	d
glVertexAttrib4iv	./GL/glew.h	/^#define glVertexAttrib4iv /;"	d
glVertexAttrib4ivARB	./GL/glew.h	/^#define glVertexAttrib4ivARB /;"	d
glVertexAttrib4s	./GL/glew.h	/^#define glVertexAttrib4s /;"	d
glVertexAttrib4sARB	./GL/glew.h	/^#define glVertexAttrib4sARB /;"	d
glVertexAttrib4sNV	./GL/glew.h	/^#define glVertexAttrib4sNV /;"	d
glVertexAttrib4sv	./GL/glew.h	/^#define glVertexAttrib4sv /;"	d
glVertexAttrib4svARB	./GL/glew.h	/^#define glVertexAttrib4svARB /;"	d
glVertexAttrib4svNV	./GL/glew.h	/^#define glVertexAttrib4svNV /;"	d
glVertexAttrib4ubNV	./GL/glew.h	/^#define glVertexAttrib4ubNV /;"	d
glVertexAttrib4ubv	./GL/glew.h	/^#define glVertexAttrib4ubv /;"	d
glVertexAttrib4ubvARB	./GL/glew.h	/^#define glVertexAttrib4ubvARB /;"	d
glVertexAttrib4ubvNV	./GL/glew.h	/^#define glVertexAttrib4ubvNV /;"	d
glVertexAttrib4uiv	./GL/glew.h	/^#define glVertexAttrib4uiv /;"	d
glVertexAttrib4uivARB	./GL/glew.h	/^#define glVertexAttrib4uivARB /;"	d
glVertexAttrib4usv	./GL/glew.h	/^#define glVertexAttrib4usv /;"	d
glVertexAttrib4usvARB	./GL/glew.h	/^#define glVertexAttrib4usvARB /;"	d
glVertexAttribArrayObjectATI	./GL/glew.h	/^#define glVertexAttribArrayObjectATI /;"	d
glVertexAttribBinding	./GL/glew.h	/^#define glVertexAttribBinding /;"	d
glVertexAttribDivisor	./GL/glew.h	/^#define glVertexAttribDivisor /;"	d
glVertexAttribDivisorANGLE	./GL/glew.h	/^#define glVertexAttribDivisorANGLE /;"	d
glVertexAttribDivisorARB	./GL/glew.h	/^#define glVertexAttribDivisorARB /;"	d
glVertexAttribDivisorEXT	./GL/glew.h	/^#define glVertexAttribDivisorEXT /;"	d
glVertexAttribDivisorNV	./GL/glew.h	/^#define glVertexAttribDivisorNV /;"	d
glVertexAttribFormat	./GL/glew.h	/^#define glVertexAttribFormat /;"	d
glVertexAttribFormatNV	./GL/glew.h	/^#define glVertexAttribFormatNV /;"	d
glVertexAttribI1i	./GL/glew.h	/^#define glVertexAttribI1i /;"	d
glVertexAttribI1iEXT	./GL/glew.h	/^#define glVertexAttribI1iEXT /;"	d
glVertexAttribI1iv	./GL/glew.h	/^#define glVertexAttribI1iv /;"	d
glVertexAttribI1ivEXT	./GL/glew.h	/^#define glVertexAttribI1ivEXT /;"	d
glVertexAttribI1ui	./GL/glew.h	/^#define glVertexAttribI1ui /;"	d
glVertexAttribI1uiEXT	./GL/glew.h	/^#define glVertexAttribI1uiEXT /;"	d
glVertexAttribI1uiv	./GL/glew.h	/^#define glVertexAttribI1uiv /;"	d
glVertexAttribI1uivEXT	./GL/glew.h	/^#define glVertexAttribI1uivEXT /;"	d
glVertexAttribI2i	./GL/glew.h	/^#define glVertexAttribI2i /;"	d
glVertexAttribI2iEXT	./GL/glew.h	/^#define glVertexAttribI2iEXT /;"	d
glVertexAttribI2iv	./GL/glew.h	/^#define glVertexAttribI2iv /;"	d
glVertexAttribI2ivEXT	./GL/glew.h	/^#define glVertexAttribI2ivEXT /;"	d
glVertexAttribI2ui	./GL/glew.h	/^#define glVertexAttribI2ui /;"	d
glVertexAttribI2uiEXT	./GL/glew.h	/^#define glVertexAttribI2uiEXT /;"	d
glVertexAttribI2uiv	./GL/glew.h	/^#define glVertexAttribI2uiv /;"	d
glVertexAttribI2uivEXT	./GL/glew.h	/^#define glVertexAttribI2uivEXT /;"	d
glVertexAttribI3i	./GL/glew.h	/^#define glVertexAttribI3i /;"	d
glVertexAttribI3iEXT	./GL/glew.h	/^#define glVertexAttribI3iEXT /;"	d
glVertexAttribI3iv	./GL/glew.h	/^#define glVertexAttribI3iv /;"	d
glVertexAttribI3ivEXT	./GL/glew.h	/^#define glVertexAttribI3ivEXT /;"	d
glVertexAttribI3ui	./GL/glew.h	/^#define glVertexAttribI3ui /;"	d
glVertexAttribI3uiEXT	./GL/glew.h	/^#define glVertexAttribI3uiEXT /;"	d
glVertexAttribI3uiv	./GL/glew.h	/^#define glVertexAttribI3uiv /;"	d
glVertexAttribI3uivEXT	./GL/glew.h	/^#define glVertexAttribI3uivEXT /;"	d
glVertexAttribI4bv	./GL/glew.h	/^#define glVertexAttribI4bv /;"	d
glVertexAttribI4bvEXT	./GL/glew.h	/^#define glVertexAttribI4bvEXT /;"	d
glVertexAttribI4i	./GL/glew.h	/^#define glVertexAttribI4i /;"	d
glVertexAttribI4iEXT	./GL/glew.h	/^#define glVertexAttribI4iEXT /;"	d
glVertexAttribI4iv	./GL/glew.h	/^#define glVertexAttribI4iv /;"	d
glVertexAttribI4ivEXT	./GL/glew.h	/^#define glVertexAttribI4ivEXT /;"	d
glVertexAttribI4sv	./GL/glew.h	/^#define glVertexAttribI4sv /;"	d
glVertexAttribI4svEXT	./GL/glew.h	/^#define glVertexAttribI4svEXT /;"	d
glVertexAttribI4ubv	./GL/glew.h	/^#define glVertexAttribI4ubv /;"	d
glVertexAttribI4ubvEXT	./GL/glew.h	/^#define glVertexAttribI4ubvEXT /;"	d
glVertexAttribI4ui	./GL/glew.h	/^#define glVertexAttribI4ui /;"	d
glVertexAttribI4uiEXT	./GL/glew.h	/^#define glVertexAttribI4uiEXT /;"	d
glVertexAttribI4uiv	./GL/glew.h	/^#define glVertexAttribI4uiv /;"	d
glVertexAttribI4uivEXT	./GL/glew.h	/^#define glVertexAttribI4uivEXT /;"	d
glVertexAttribI4usv	./GL/glew.h	/^#define glVertexAttribI4usv /;"	d
glVertexAttribI4usvEXT	./GL/glew.h	/^#define glVertexAttribI4usvEXT /;"	d
glVertexAttribIFormat	./GL/glew.h	/^#define glVertexAttribIFormat /;"	d
glVertexAttribIFormatNV	./GL/glew.h	/^#define glVertexAttribIFormatNV /;"	d
glVertexAttribIPointer	./GL/glew.h	/^#define glVertexAttribIPointer /;"	d
glVertexAttribIPointerEXT	./GL/glew.h	/^#define glVertexAttribIPointerEXT /;"	d
glVertexAttribL1d	./GL/glew.h	/^#define glVertexAttribL1d /;"	d
glVertexAttribL1dEXT	./GL/glew.h	/^#define glVertexAttribL1dEXT /;"	d
glVertexAttribL1dv	./GL/glew.h	/^#define glVertexAttribL1dv /;"	d
glVertexAttribL1dvEXT	./GL/glew.h	/^#define glVertexAttribL1dvEXT /;"	d
glVertexAttribL1i64NV	./GL/glew.h	/^#define glVertexAttribL1i64NV /;"	d
glVertexAttribL1i64vNV	./GL/glew.h	/^#define glVertexAttribL1i64vNV /;"	d
glVertexAttribL1ui64ARB	./GL/glew.h	/^#define glVertexAttribL1ui64ARB /;"	d
glVertexAttribL1ui64NV	./GL/glew.h	/^#define glVertexAttribL1ui64NV /;"	d
glVertexAttribL1ui64vARB	./GL/glew.h	/^#define glVertexAttribL1ui64vARB /;"	d
glVertexAttribL1ui64vNV	./GL/glew.h	/^#define glVertexAttribL1ui64vNV /;"	d
glVertexAttribL2d	./GL/glew.h	/^#define glVertexAttribL2d /;"	d
glVertexAttribL2dEXT	./GL/glew.h	/^#define glVertexAttribL2dEXT /;"	d
glVertexAttribL2dv	./GL/glew.h	/^#define glVertexAttribL2dv /;"	d
glVertexAttribL2dvEXT	./GL/glew.h	/^#define glVertexAttribL2dvEXT /;"	d
glVertexAttribL2i64NV	./GL/glew.h	/^#define glVertexAttribL2i64NV /;"	d
glVertexAttribL2i64vNV	./GL/glew.h	/^#define glVertexAttribL2i64vNV /;"	d
glVertexAttribL2ui64NV	./GL/glew.h	/^#define glVertexAttribL2ui64NV /;"	d
glVertexAttribL2ui64vNV	./GL/glew.h	/^#define glVertexAttribL2ui64vNV /;"	d
glVertexAttribL3d	./GL/glew.h	/^#define glVertexAttribL3d /;"	d
glVertexAttribL3dEXT	./GL/glew.h	/^#define glVertexAttribL3dEXT /;"	d
glVertexAttribL3dv	./GL/glew.h	/^#define glVertexAttribL3dv /;"	d
glVertexAttribL3dvEXT	./GL/glew.h	/^#define glVertexAttribL3dvEXT /;"	d
glVertexAttribL3i64NV	./GL/glew.h	/^#define glVertexAttribL3i64NV /;"	d
glVertexAttribL3i64vNV	./GL/glew.h	/^#define glVertexAttribL3i64vNV /;"	d
glVertexAttribL3ui64NV	./GL/glew.h	/^#define glVertexAttribL3ui64NV /;"	d
glVertexAttribL3ui64vNV	./GL/glew.h	/^#define glVertexAttribL3ui64vNV /;"	d
glVertexAttribL4d	./GL/glew.h	/^#define glVertexAttribL4d /;"	d
glVertexAttribL4dEXT	./GL/glew.h	/^#define glVertexAttribL4dEXT /;"	d
glVertexAttribL4dv	./GL/glew.h	/^#define glVertexAttribL4dv /;"	d
glVertexAttribL4dvEXT	./GL/glew.h	/^#define glVertexAttribL4dvEXT /;"	d
glVertexAttribL4i64NV	./GL/glew.h	/^#define glVertexAttribL4i64NV /;"	d
glVertexAttribL4i64vNV	./GL/glew.h	/^#define glVertexAttribL4i64vNV /;"	d
glVertexAttribL4ui64NV	./GL/glew.h	/^#define glVertexAttribL4ui64NV /;"	d
glVertexAttribL4ui64vNV	./GL/glew.h	/^#define glVertexAttribL4ui64vNV /;"	d
glVertexAttribLFormat	./GL/glew.h	/^#define glVertexAttribLFormat /;"	d
glVertexAttribLFormatNV	./GL/glew.h	/^#define glVertexAttribLFormatNV /;"	d
glVertexAttribLPointer	./GL/glew.h	/^#define glVertexAttribLPointer /;"	d
glVertexAttribLPointerEXT	./GL/glew.h	/^#define glVertexAttribLPointerEXT /;"	d
glVertexAttribP1ui	./GL/glew.h	/^#define glVertexAttribP1ui /;"	d
glVertexAttribP1uiv	./GL/glew.h	/^#define glVertexAttribP1uiv /;"	d
glVertexAttribP2ui	./GL/glew.h	/^#define glVertexAttribP2ui /;"	d
glVertexAttribP2uiv	./GL/glew.h	/^#define glVertexAttribP2uiv /;"	d
glVertexAttribP3ui	./GL/glew.h	/^#define glVertexAttribP3ui /;"	d
glVertexAttribP3uiv	./GL/glew.h	/^#define glVertexAttribP3uiv /;"	d
glVertexAttribP4ui	./GL/glew.h	/^#define glVertexAttribP4ui /;"	d
glVertexAttribP4uiv	./GL/glew.h	/^#define glVertexAttribP4uiv /;"	d
glVertexAttribParameteriAMD	./GL/glew.h	/^#define glVertexAttribParameteriAMD /;"	d
glVertexAttribPointer	./GL/glew.h	/^#define glVertexAttribPointer /;"	d
glVertexAttribPointerARB	./GL/glew.h	/^#define glVertexAttribPointerARB /;"	d
glVertexAttribPointerNV	./GL/glew.h	/^#define glVertexAttribPointerNV /;"	d
glVertexAttribs1dvNV	./GL/glew.h	/^#define glVertexAttribs1dvNV /;"	d
glVertexAttribs1fvNV	./GL/glew.h	/^#define glVertexAttribs1fvNV /;"	d
glVertexAttribs1hvNV	./GL/glew.h	/^#define glVertexAttribs1hvNV /;"	d
glVertexAttribs1svNV	./GL/glew.h	/^#define glVertexAttribs1svNV /;"	d
glVertexAttribs2dvNV	./GL/glew.h	/^#define glVertexAttribs2dvNV /;"	d
glVertexAttribs2fvNV	./GL/glew.h	/^#define glVertexAttribs2fvNV /;"	d
glVertexAttribs2hvNV	./GL/glew.h	/^#define glVertexAttribs2hvNV /;"	d
glVertexAttribs2svNV	./GL/glew.h	/^#define glVertexAttribs2svNV /;"	d
glVertexAttribs3dvNV	./GL/glew.h	/^#define glVertexAttribs3dvNV /;"	d
glVertexAttribs3fvNV	./GL/glew.h	/^#define glVertexAttribs3fvNV /;"	d
glVertexAttribs3hvNV	./GL/glew.h	/^#define glVertexAttribs3hvNV /;"	d
glVertexAttribs3svNV	./GL/glew.h	/^#define glVertexAttribs3svNV /;"	d
glVertexAttribs4dvNV	./GL/glew.h	/^#define glVertexAttribs4dvNV /;"	d
glVertexAttribs4fvNV	./GL/glew.h	/^#define glVertexAttribs4fvNV /;"	d
glVertexAttribs4hvNV	./GL/glew.h	/^#define glVertexAttribs4hvNV /;"	d
glVertexAttribs4svNV	./GL/glew.h	/^#define glVertexAttribs4svNV /;"	d
glVertexAttribs4ubvNV	./GL/glew.h	/^#define glVertexAttribs4ubvNV /;"	d
glVertexBindingDivisor	./GL/glew.h	/^#define glVertexBindingDivisor /;"	d
glVertexBlendARB	./GL/glew.h	/^#define glVertexBlendARB /;"	d
glVertexBlendEnvfATI	./GL/glew.h	/^#define glVertexBlendEnvfATI /;"	d
glVertexBlendEnviATI	./GL/glew.h	/^#define glVertexBlendEnviATI /;"	d
glVertexFormatNV	./GL/glew.h	/^#define glVertexFormatNV /;"	d
glVertexP2ui	./GL/glew.h	/^#define glVertexP2ui /;"	d
glVertexP2uiv	./GL/glew.h	/^#define glVertexP2uiv /;"	d
glVertexP3ui	./GL/glew.h	/^#define glVertexP3ui /;"	d
glVertexP3uiv	./GL/glew.h	/^#define glVertexP3uiv /;"	d
glVertexP4ui	./GL/glew.h	/^#define glVertexP4ui /;"	d
glVertexP4uiv	./GL/glew.h	/^#define glVertexP4uiv /;"	d
glVertexPointerEXT	./GL/glew.h	/^#define glVertexPointerEXT /;"	d
glVertexPointerListIBM	./GL/glew.h	/^#define glVertexPointerListIBM /;"	d
glVertexPointervINTEL	./GL/glew.h	/^#define glVertexPointervINTEL /;"	d
glVertexStream1dATI	./GL/glew.h	/^#define glVertexStream1dATI /;"	d
glVertexStream1dvATI	./GL/glew.h	/^#define glVertexStream1dvATI /;"	d
glVertexStream1fATI	./GL/glew.h	/^#define glVertexStream1fATI /;"	d
glVertexStream1fvATI	./GL/glew.h	/^#define glVertexStream1fvATI /;"	d
glVertexStream1iATI	./GL/glew.h	/^#define glVertexStream1iATI /;"	d
glVertexStream1ivATI	./GL/glew.h	/^#define glVertexStream1ivATI /;"	d
glVertexStream1sATI	./GL/glew.h	/^#define glVertexStream1sATI /;"	d
glVertexStream1svATI	./GL/glew.h	/^#define glVertexStream1svATI /;"	d
glVertexStream2dATI	./GL/glew.h	/^#define glVertexStream2dATI /;"	d
glVertexStream2dvATI	./GL/glew.h	/^#define glVertexStream2dvATI /;"	d
glVertexStream2fATI	./GL/glew.h	/^#define glVertexStream2fATI /;"	d
glVertexStream2fvATI	./GL/glew.h	/^#define glVertexStream2fvATI /;"	d
glVertexStream2iATI	./GL/glew.h	/^#define glVertexStream2iATI /;"	d
glVertexStream2ivATI	./GL/glew.h	/^#define glVertexStream2ivATI /;"	d
glVertexStream2sATI	./GL/glew.h	/^#define glVertexStream2sATI /;"	d
glVertexStream2svATI	./GL/glew.h	/^#define glVertexStream2svATI /;"	d
glVertexStream3dATI	./GL/glew.h	/^#define glVertexStream3dATI /;"	d
glVertexStream3dvATI	./GL/glew.h	/^#define glVertexStream3dvATI /;"	d
glVertexStream3fATI	./GL/glew.h	/^#define glVertexStream3fATI /;"	d
glVertexStream3fvATI	./GL/glew.h	/^#define glVertexStream3fvATI /;"	d
glVertexStream3iATI	./GL/glew.h	/^#define glVertexStream3iATI /;"	d
glVertexStream3ivATI	./GL/glew.h	/^#define glVertexStream3ivATI /;"	d
glVertexStream3sATI	./GL/glew.h	/^#define glVertexStream3sATI /;"	d
glVertexStream3svATI	./GL/glew.h	/^#define glVertexStream3svATI /;"	d
glVertexStream4dATI	./GL/glew.h	/^#define glVertexStream4dATI /;"	d
glVertexStream4dvATI	./GL/glew.h	/^#define glVertexStream4dvATI /;"	d
glVertexStream4fATI	./GL/glew.h	/^#define glVertexStream4fATI /;"	d
glVertexStream4fvATI	./GL/glew.h	/^#define glVertexStream4fvATI /;"	d
glVertexStream4iATI	./GL/glew.h	/^#define glVertexStream4iATI /;"	d
glVertexStream4ivATI	./GL/glew.h	/^#define glVertexStream4ivATI /;"	d
glVertexStream4sATI	./GL/glew.h	/^#define glVertexStream4sATI /;"	d
glVertexStream4svATI	./GL/glew.h	/^#define glVertexStream4svATI /;"	d
glVertexWeightPointerEXT	./GL/glew.h	/^#define glVertexWeightPointerEXT /;"	d
glVertexWeightfEXT	./GL/glew.h	/^#define glVertexWeightfEXT /;"	d
glVertexWeightfvEXT	./GL/glew.h	/^#define glVertexWeightfvEXT /;"	d
glVertexWeighthNV	./GL/glew.h	/^#define glVertexWeighthNV /;"	d
glVertexWeighthvNV	./GL/glew.h	/^#define glVertexWeighthvNV /;"	d
glVideoCaptureNV	./GL/glew.h	/^#define glVideoCaptureNV /;"	d
glVideoCaptureStreamParameterdvNV	./GL/glew.h	/^#define glVideoCaptureStreamParameterdvNV /;"	d
glVideoCaptureStreamParameterfvNV	./GL/glew.h	/^#define glVideoCaptureStreamParameterfvNV /;"	d
glVideoCaptureStreamParameterivNV	./GL/glew.h	/^#define glVideoCaptureStreamParameterivNV /;"	d
glViewportArrayv	./GL/glew.h	/^#define glViewportArrayv /;"	d
glViewportArrayvNV	./GL/glew.h	/^#define glViewportArrayvNV /;"	d
glViewportIndexedf	./GL/glew.h	/^#define glViewportIndexedf /;"	d
glViewportIndexedfNV	./GL/glew.h	/^#define glViewportIndexedfNV /;"	d
glViewportIndexedfv	./GL/glew.h	/^#define glViewportIndexedfv /;"	d
glViewportIndexedfvNV	./GL/glew.h	/^#define glViewportIndexedfvNV /;"	d
glViewportPositionWScaleNV	./GL/glew.h	/^#define glViewportPositionWScaleNV /;"	d
glViewportSwizzleNV	./GL/glew.h	/^#define glViewportSwizzleNV /;"	d
glWaitSemaphoreEXT	./GL/glew.h	/^#define glWaitSemaphoreEXT /;"	d
glWaitSemaphoreui64NVX	./GL/glew.h	/^#define glWaitSemaphoreui64NVX /;"	d
glWaitSync	./GL/glew.h	/^#define glWaitSync /;"	d
glWaitSyncAPPLE	./GL/glew.h	/^#define glWaitSyncAPPLE /;"	d
glWaitVkSemaphoreNV	./GL/glew.h	/^#define glWaitVkSemaphoreNV /;"	d
glWeightPathsNV	./GL/glew.h	/^#define glWeightPathsNV /;"	d
glWeightPointerARB	./GL/glew.h	/^#define glWeightPointerARB /;"	d
glWeightPointerOES	./GL/glew.h	/^#define glWeightPointerOES /;"	d
glWeightbvARB	./GL/glew.h	/^#define glWeightbvARB /;"	d
glWeightdvARB	./GL/glew.h	/^#define glWeightdvARB /;"	d
glWeightfvARB	./GL/glew.h	/^#define glWeightfvARB /;"	d
glWeightivARB	./GL/glew.h	/^#define glWeightivARB /;"	d
glWeightsvARB	./GL/glew.h	/^#define glWeightsvARB /;"	d
glWeightubvARB	./GL/glew.h	/^#define glWeightubvARB /;"	d
glWeightuivARB	./GL/glew.h	/^#define glWeightuivARB /;"	d
glWeightusvARB	./GL/glew.h	/^#define glWeightusvARB /;"	d
glWindowPos2d	./GL/glew.h	/^#define glWindowPos2d /;"	d
glWindowPos2dARB	./GL/glew.h	/^#define glWindowPos2dARB /;"	d
glWindowPos2dMESA	./GL/glew.h	/^#define glWindowPos2dMESA /;"	d
glWindowPos2dv	./GL/glew.h	/^#define glWindowPos2dv /;"	d
glWindowPos2dvARB	./GL/glew.h	/^#define glWindowPos2dvARB /;"	d
glWindowPos2dvMESA	./GL/glew.h	/^#define glWindowPos2dvMESA /;"	d
glWindowPos2f	./GL/glew.h	/^#define glWindowPos2f /;"	d
glWindowPos2fARB	./GL/glew.h	/^#define glWindowPos2fARB /;"	d
glWindowPos2fMESA	./GL/glew.h	/^#define glWindowPos2fMESA /;"	d
glWindowPos2fv	./GL/glew.h	/^#define glWindowPos2fv /;"	d
glWindowPos2fvARB	./GL/glew.h	/^#define glWindowPos2fvARB /;"	d
glWindowPos2fvMESA	./GL/glew.h	/^#define glWindowPos2fvMESA /;"	d
glWindowPos2i	./GL/glew.h	/^#define glWindowPos2i /;"	d
glWindowPos2iARB	./GL/glew.h	/^#define glWindowPos2iARB /;"	d
glWindowPos2iMESA	./GL/glew.h	/^#define glWindowPos2iMESA /;"	d
glWindowPos2iv	./GL/glew.h	/^#define glWindowPos2iv /;"	d
glWindowPos2ivARB	./GL/glew.h	/^#define glWindowPos2ivARB /;"	d
glWindowPos2ivMESA	./GL/glew.h	/^#define glWindowPos2ivMESA /;"	d
glWindowPos2s	./GL/glew.h	/^#define glWindowPos2s /;"	d
glWindowPos2sARB	./GL/glew.h	/^#define glWindowPos2sARB /;"	d
glWindowPos2sMESA	./GL/glew.h	/^#define glWindowPos2sMESA /;"	d
glWindowPos2sv	./GL/glew.h	/^#define glWindowPos2sv /;"	d
glWindowPos2svARB	./GL/glew.h	/^#define glWindowPos2svARB /;"	d
glWindowPos2svMESA	./GL/glew.h	/^#define glWindowPos2svMESA /;"	d
glWindowPos3d	./GL/glew.h	/^#define glWindowPos3d /;"	d
glWindowPos3dARB	./GL/glew.h	/^#define glWindowPos3dARB /;"	d
glWindowPos3dMESA	./GL/glew.h	/^#define glWindowPos3dMESA /;"	d
glWindowPos3dv	./GL/glew.h	/^#define glWindowPos3dv /;"	d
glWindowPos3dvARB	./GL/glew.h	/^#define glWindowPos3dvARB /;"	d
glWindowPos3dvMESA	./GL/glew.h	/^#define glWindowPos3dvMESA /;"	d
glWindowPos3f	./GL/glew.h	/^#define glWindowPos3f /;"	d
glWindowPos3fARB	./GL/glew.h	/^#define glWindowPos3fARB /;"	d
glWindowPos3fMESA	./GL/glew.h	/^#define glWindowPos3fMESA /;"	d
glWindowPos3fv	./GL/glew.h	/^#define glWindowPos3fv /;"	d
glWindowPos3fvARB	./GL/glew.h	/^#define glWindowPos3fvARB /;"	d
glWindowPos3fvMESA	./GL/glew.h	/^#define glWindowPos3fvMESA /;"	d
glWindowPos3i	./GL/glew.h	/^#define glWindowPos3i /;"	d
glWindowPos3iARB	./GL/glew.h	/^#define glWindowPos3iARB /;"	d
glWindowPos3iMESA	./GL/glew.h	/^#define glWindowPos3iMESA /;"	d
glWindowPos3iv	./GL/glew.h	/^#define glWindowPos3iv /;"	d
glWindowPos3ivARB	./GL/glew.h	/^#define glWindowPos3ivARB /;"	d
glWindowPos3ivMESA	./GL/glew.h	/^#define glWindowPos3ivMESA /;"	d
glWindowPos3s	./GL/glew.h	/^#define glWindowPos3s /;"	d
glWindowPos3sARB	./GL/glew.h	/^#define glWindowPos3sARB /;"	d
glWindowPos3sMESA	./GL/glew.h	/^#define glWindowPos3sMESA /;"	d
glWindowPos3sv	./GL/glew.h	/^#define glWindowPos3sv /;"	d
glWindowPos3svARB	./GL/glew.h	/^#define glWindowPos3svARB /;"	d
glWindowPos3svMESA	./GL/glew.h	/^#define glWindowPos3svMESA /;"	d
glWindowPos4dMESA	./GL/glew.h	/^#define glWindowPos4dMESA /;"	d
glWindowPos4dvMESA	./GL/glew.h	/^#define glWindowPos4dvMESA /;"	d
glWindowPos4fMESA	./GL/glew.h	/^#define glWindowPos4fMESA /;"	d
glWindowPos4fvMESA	./GL/glew.h	/^#define glWindowPos4fvMESA /;"	d
glWindowPos4iMESA	./GL/glew.h	/^#define glWindowPos4iMESA /;"	d
glWindowPos4ivMESA	./GL/glew.h	/^#define glWindowPos4ivMESA /;"	d
glWindowPos4sMESA	./GL/glew.h	/^#define glWindowPos4sMESA /;"	d
glWindowPos4svMESA	./GL/glew.h	/^#define glWindowPos4svMESA /;"	d
glWindowRectanglesEXT	./GL/glew.h	/^#define glWindowRectanglesEXT /;"	d
glWriteMaskEXT	./GL/glew.h	/^#define glWriteMaskEXT /;"	d
glXAllocateMemoryNV	./GL/glxew.h	/^#define glXAllocateMemoryNV /;"	d
glXBindChannelToWindowSGIX	./GL/glxew.h	/^#define glXBindChannelToWindowSGIX /;"	d
glXBindHyperpipeSGIX	./GL/glxew.h	/^#define glXBindHyperpipeSGIX /;"	d
glXBindSwapBarrierNV	./GL/glxew.h	/^#define glXBindSwapBarrierNV /;"	d
glXBindSwapBarrierSGIX	./GL/glxew.h	/^#define glXBindSwapBarrierSGIX /;"	d
glXBindTexImageATI	./GL/glxew.h	/^#define glXBindTexImageATI /;"	d
glXBindTexImageEXT	./GL/glxew.h	/^#define glXBindTexImageEXT /;"	d
glXBindVideoCaptureDeviceNV	./GL/glxew.h	/^#define glXBindVideoCaptureDeviceNV /;"	d
glXBindVideoDeviceNV	./GL/glxew.h	/^#define glXBindVideoDeviceNV /;"	d
glXBindVideoImageNV	./GL/glxew.h	/^#define glXBindVideoImageNV /;"	d
glXBlitContextFramebufferAMD	./GL/glxew.h	/^#define glXBlitContextFramebufferAMD /;"	d
glXChannelRectSGIX	./GL/glxew.h	/^#define glXChannelRectSGIX /;"	d
glXChannelRectSyncSGIX	./GL/glxew.h	/^#define glXChannelRectSyncSGIX /;"	d
glXChooseFBConfig	./GL/glxew.h	/^#define glXChooseFBConfig /;"	d
glXChooseFBConfigSGIX	./GL/glxew.h	/^#define glXChooseFBConfigSGIX /;"	d
glXCopyBufferSubDataNV	./GL/glxew.h	/^#define glXCopyBufferSubDataNV /;"	d
glXCopyImageSubDataNV	./GL/glxew.h	/^#define glXCopyImageSubDataNV /;"	d
glXCopySubBufferMESA	./GL/glxew.h	/^#define glXCopySubBufferMESA /;"	d
glXCreateAssociatedContextAMD	./GL/glxew.h	/^#define glXCreateAssociatedContextAMD /;"	d
glXCreateAssociatedContextAttribsAMD	./GL/glxew.h	/^#define glXCreateAssociatedContextAttribsAMD /;"	d
glXCreateContextAttribsARB	./GL/glxew.h	/^#define glXCreateContextAttribsARB /;"	d
glXCreateContextWithConfigSGIX	./GL/glxew.h	/^#define glXCreateContextWithConfigSGIX /;"	d
glXCreateGLXPbufferSGIX	./GL/glxew.h	/^#define glXCreateGLXPbufferSGIX /;"	d
glXCreateGLXPixmapMESA	./GL/glxew.h	/^#define glXCreateGLXPixmapMESA /;"	d
glXCreateGLXPixmapWithConfigSGIX	./GL/glxew.h	/^#define glXCreateGLXPixmapWithConfigSGIX /;"	d
glXCreateNewContext	./GL/glxew.h	/^#define glXCreateNewContext /;"	d
glXCreatePbuffer	./GL/glxew.h	/^#define glXCreatePbuffer /;"	d
glXCreatePixmap	./GL/glxew.h	/^#define glXCreatePixmap /;"	d
glXCreateWindow	./GL/glxew.h	/^#define glXCreateWindow /;"	d
glXCushionSGI	./GL/glxew.h	/^#define glXCushionSGI /;"	d
glXDelayBeforeSwapNV	./GL/glxew.h	/^#define glXDelayBeforeSwapNV /;"	d
glXDeleteAssociatedContextAMD	./GL/glxew.h	/^#define glXDeleteAssociatedContextAMD /;"	d
glXDestroyGLXPbufferSGIX	./GL/glxew.h	/^#define glXDestroyGLXPbufferSGIX /;"	d
glXDestroyHyperpipeConfigSGIX	./GL/glxew.h	/^#define glXDestroyHyperpipeConfigSGIX /;"	d
glXDestroyPbuffer	./GL/glxew.h	/^#define glXDestroyPbuffer /;"	d
glXDestroyPixmap	./GL/glxew.h	/^#define glXDestroyPixmap /;"	d
glXDestroyWindow	./GL/glxew.h	/^#define glXDestroyWindow /;"	d
glXDrawableAttribATI	./GL/glxew.h	/^#define glXDrawableAttribATI /;"	d
glXEnumerateVideoCaptureDevicesNV	./GL/glxew.h	/^#define glXEnumerateVideoCaptureDevicesNV /;"	d
glXEnumerateVideoDevicesNV	./GL/glxew.h	/^#define glXEnumerateVideoDevicesNV /;"	d
glXFreeContextEXT	./GL/glxew.h	/^#define glXFreeContextEXT /;"	d
glXFreeMemoryNV	./GL/glxew.h	/^#define glXFreeMemoryNV /;"	d
glXGetAGPOffsetMESA	./GL/glxew.h	/^#define glXGetAGPOffsetMESA /;"	d
glXGetContextGPUIDAMD	./GL/glxew.h	/^#define glXGetContextGPUIDAMD /;"	d
glXGetContextIDEXT	./GL/glxew.h	/^#define glXGetContextIDEXT /;"	d
glXGetCurrentAssociatedContextAMD	./GL/glxew.h	/^#define glXGetCurrentAssociatedContextAMD /;"	d
glXGetCurrentDisplay	./GL/glxew.h	/^#define glXGetCurrentDisplay /;"	d
glXGetCurrentDisplayEXT	./GL/glxew.h	/^#define glXGetCurrentDisplayEXT /;"	d
glXGetCurrentReadDrawable	./GL/glxew.h	/^#define glXGetCurrentReadDrawable /;"	d
glXGetCurrentReadDrawableSGI	./GL/glxew.h	/^#define glXGetCurrentReadDrawableSGI /;"	d
glXGetFBConfigAttrib	./GL/glxew.h	/^#define glXGetFBConfigAttrib /;"	d
glXGetFBConfigAttribSGIX	./GL/glxew.h	/^#define glXGetFBConfigAttribSGIX /;"	d
glXGetFBConfigFromVisualSGIX	./GL/glxew.h	/^#define glXGetFBConfigFromVisualSGIX /;"	d
glXGetFBConfigs	./GL/glxew.h	/^#define glXGetFBConfigs /;"	d
glXGetGPUIDsAMD	./GL/glxew.h	/^#define glXGetGPUIDsAMD /;"	d
glXGetGPUInfoAMD	./GL/glxew.h	/^#define glXGetGPUInfoAMD /;"	d
glXGetMscRateOML	./GL/glxew.h	/^#define glXGetMscRateOML /;"	d
glXGetSelectedEvent	./GL/glxew.h	/^#define glXGetSelectedEvent /;"	d
glXGetSelectedEventSGIX	./GL/glxew.h	/^#define glXGetSelectedEventSGIX /;"	d
glXGetSwapIntervalMESA	./GL/glxew.h	/^#define glXGetSwapIntervalMESA /;"	d
glXGetSyncValuesOML	./GL/glxew.h	/^#define glXGetSyncValuesOML /;"	d
glXGetTransparentIndexSUN	./GL/glxew.h	/^#define glXGetTransparentIndexSUN /;"	d
glXGetVideoDeviceNV	./GL/glxew.h	/^#define glXGetVideoDeviceNV /;"	d
glXGetVideoInfoNV	./GL/glxew.h	/^#define glXGetVideoInfoNV /;"	d
glXGetVideoResizeSUN	./GL/glxew.h	/^#define glXGetVideoResizeSUN /;"	d
glXGetVideoSyncSGI	./GL/glxew.h	/^#define glXGetVideoSyncSGI /;"	d
glXGetVisualFromFBConfig	./GL/glxew.h	/^#define glXGetVisualFromFBConfig /;"	d
glXGetVisualFromFBConfigSGIX	./GL/glxew.h	/^#define glXGetVisualFromFBConfigSGIX /;"	d
glXHyperpipeAttribSGIX	./GL/glxew.h	/^#define glXHyperpipeAttribSGIX /;"	d
glXHyperpipeConfigSGIX	./GL/glxew.h	/^#define glXHyperpipeConfigSGIX /;"	d
glXImportContextEXT	./GL/glxew.h	/^#define glXImportContextEXT /;"	d
glXJoinSwapGroupNV	./GL/glxew.h	/^#define glXJoinSwapGroupNV /;"	d
glXJoinSwapGroupSGIX	./GL/glxew.h	/^#define glXJoinSwapGroupSGIX /;"	d
glXLockVideoCaptureDeviceNV	./GL/glxew.h	/^#define glXLockVideoCaptureDeviceNV /;"	d
glXMakeAssociatedContextCurrentAMD	./GL/glxew.h	/^#define glXMakeAssociatedContextCurrentAMD /;"	d
glXMakeContextCurrent	./GL/glxew.h	/^#define glXMakeContextCurrent /;"	d
glXMakeCurrentReadSGI	./GL/glxew.h	/^#define glXMakeCurrentReadSGI /;"	d
glXNamedCopyBufferSubDataNV	./GL/glxew.h	/^#define glXNamedCopyBufferSubDataNV /;"	d
glXQueryChannelDeltasSGIX	./GL/glxew.h	/^#define glXQueryChannelDeltasSGIX /;"	d
glXQueryChannelRectSGIX	./GL/glxew.h	/^#define glXQueryChannelRectSGIX /;"	d
glXQueryContext	./GL/glxew.h	/^#define glXQueryContext /;"	d
glXQueryContextInfoEXT	./GL/glxew.h	/^#define glXQueryContextInfoEXT /;"	d
glXQueryCurrentRendererIntegerMESA	./GL/glxew.h	/^#define glXQueryCurrentRendererIntegerMESA /;"	d
glXQueryCurrentRendererStringMESA	./GL/glxew.h	/^#define glXQueryCurrentRendererStringMESA /;"	d
glXQueryDrawable	./GL/glxew.h	/^#define glXQueryDrawable /;"	d
glXQueryFrameCountNV	./GL/glxew.h	/^#define glXQueryFrameCountNV /;"	d
glXQueryGLXPbufferSGIX	./GL/glxew.h	/^#define glXQueryGLXPbufferSGIX /;"	d
glXQueryHyperpipeAttribSGIX	./GL/glxew.h	/^#define glXQueryHyperpipeAttribSGIX /;"	d
glXQueryHyperpipeBestAttribSGIX	./GL/glxew.h	/^#define glXQueryHyperpipeBestAttribSGIX /;"	d
glXQueryHyperpipeConfigSGIX	./GL/glxew.h	/^#define glXQueryHyperpipeConfigSGIX /;"	d
glXQueryHyperpipeNetworkSGIX	./GL/glxew.h	/^#define glXQueryHyperpipeNetworkSGIX /;"	d
glXQueryMaxSwapBarriersSGIX	./GL/glxew.h	/^#define glXQueryMaxSwapBarriersSGIX /;"	d
glXQueryMaxSwapGroupsNV	./GL/glxew.h	/^#define glXQueryMaxSwapGroupsNV /;"	d
glXQueryRendererIntegerMESA	./GL/glxew.h	/^#define glXQueryRendererIntegerMESA /;"	d
glXQueryRendererStringMESA	./GL/glxew.h	/^#define glXQueryRendererStringMESA /;"	d
glXQuerySwapGroupNV	./GL/glxew.h	/^#define glXQuerySwapGroupNV /;"	d
glXQueryVideoCaptureDeviceNV	./GL/glxew.h	/^#define glXQueryVideoCaptureDeviceNV /;"	d
glXReleaseBuffersMESA	./GL/glxew.h	/^#define glXReleaseBuffersMESA /;"	d
glXReleaseTexImageATI	./GL/glxew.h	/^#define glXReleaseTexImageATI /;"	d
glXReleaseTexImageEXT	./GL/glxew.h	/^#define glXReleaseTexImageEXT /;"	d
glXReleaseVideoCaptureDeviceNV	./GL/glxew.h	/^#define glXReleaseVideoCaptureDeviceNV /;"	d
glXReleaseVideoDeviceNV	./GL/glxew.h	/^#define glXReleaseVideoDeviceNV /;"	d
glXReleaseVideoImageNV	./GL/glxew.h	/^#define glXReleaseVideoImageNV /;"	d
glXResetFrameCountNV	./GL/glxew.h	/^#define glXResetFrameCountNV /;"	d
glXSelectEvent	./GL/glxew.h	/^#define glXSelectEvent /;"	d
glXSelectEventSGIX	./GL/glxew.h	/^#define glXSelectEventSGIX /;"	d
glXSendPbufferToVideoNV	./GL/glxew.h	/^#define glXSendPbufferToVideoNV /;"	d
glXSet3DfxModeMESA	./GL/glxew.h	/^#define glXSet3DfxModeMESA /;"	d
glXSwapBuffersMscOML	./GL/glxew.h	/^#define glXSwapBuffersMscOML /;"	d
glXSwapIntervalEXT	./GL/glxew.h	/^#define glXSwapIntervalEXT /;"	d
glXSwapIntervalMESA	./GL/glxew.h	/^#define glXSwapIntervalMESA /;"	d
glXSwapIntervalSGI	./GL/glxew.h	/^#define glXSwapIntervalSGI /;"	d
glXVideoResizeSUN	./GL/glxew.h	/^#define glXVideoResizeSUN /;"	d
glXWaitForMscOML	./GL/glxew.h	/^#define glXWaitForMscOML /;"	d
glXWaitForSbcOML	./GL/glxew.h	/^#define glXWaitForSbcOML /;"	d
glXWaitVideoSyncSGI	./GL/glxew.h	/^#define glXWaitVideoSyncSGI /;"	d
glewExperimental	./GL/glew.h	/^GLEWAPI GLboolean glewExperimental;$/;"	v	typeref:typename:GLEWAPI GLboolean
glewIsExtensionSupported	./GL/glew.h	/^#define glewIsExtensionSupported(/;"	d
glm	./glm/common.hpp	/^namespace glm$/;"	n
glm	./glm/detail/_noise.hpp	/^namespace glm{$/;"	n
glm	./glm/detail/_swizzle.hpp	/^namespace glm$/;"	n
glm	./glm/detail/_swizzle.hpp	/^namespace glm{$/;"	n
glm	./glm/detail/_vectorize.hpp	/^namespace glm{$/;"	n
glm	./glm/detail/compute_common.hpp	/^namespace glm{$/;"	n
glm	./glm/detail/compute_vector_decl.hpp	/^namespace glm {$/;"	n
glm	./glm/detail/compute_vector_relational.hpp	/^namespace glm{$/;"	n
glm	./glm/detail/func_common.inl	/^namespace glm$/;"	n	file:
glm	./glm/detail/func_common.inl	/^namespace glm{$/;"	n	file:
glm	./glm/detail/func_common_simd.inl	/^namespace glm{$/;"	n	file:
glm	./glm/detail/func_exponential.inl	/^namespace glm{$/;"	n	file:
glm	./glm/detail/func_exponential_simd.inl	/^namespace glm{$/;"	n	file:
glm	./glm/detail/func_geometric.inl	/^namespace glm{$/;"	n	file:
glm	./glm/detail/func_geometric_simd.inl	/^namespace glm{$/;"	n	file:
glm	./glm/detail/func_integer.inl	/^namespace glm{$/;"	n	file:
glm	./glm/detail/func_integer_simd.inl	/^namespace glm{$/;"	n	file:
glm	./glm/detail/func_matrix.inl	/^namespace glm{$/;"	n	file:
glm	./glm/detail/func_matrix_simd.inl	/^namespace glm {$/;"	n	file:
glm	./glm/detail/func_matrix_simd.inl	/^namespace glm{$/;"	n	file:
glm	./glm/detail/func_packing.inl	/^namespace glm$/;"	n	file:
glm	./glm/detail/func_packing_simd.inl	/^namespace glm{$/;"	n	file:
glm	./glm/detail/func_trigonometric.inl	/^namespace glm$/;"	n	file:
glm	./glm/detail/func_vector_relational.inl	/^namespace glm$/;"	n	file:
glm	./glm/detail/func_vector_relational_simd.inl	/^namespace glm{$/;"	n	file:
glm	./glm/detail/glm.cpp	/^namespace glm$/;"	n	file:
glm	./glm/detail/qualifier.hpp	/^namespace glm$/;"	n
glm	./glm/detail/setup.hpp	/^	namespace glm$/;"	n
glm	./glm/detail/setup.hpp	/^namespace glm$/;"	n
glm	./glm/detail/setup.hpp	/^namespace glm{$/;"	n
glm	./glm/detail/type_float.hpp	/^namespace glm{$/;"	n
glm	./glm/detail/type_half.hpp	/^namespace glm{$/;"	n
glm	./glm/detail/type_half.inl	/^namespace glm{$/;"	n	file:
glm	./glm/detail/type_mat2x2.hpp	/^namespace glm$/;"	n
glm	./glm/detail/type_mat2x2.inl	/^namespace glm$/;"	n	file:
glm	./glm/detail/type_mat2x3.hpp	/^namespace glm$/;"	n
glm	./glm/detail/type_mat2x3.inl	/^namespace glm$/;"	n	file:
glm	./glm/detail/type_mat2x4.hpp	/^namespace glm$/;"	n
glm	./glm/detail/type_mat2x4.inl	/^namespace glm$/;"	n	file:
glm	./glm/detail/type_mat3x2.hpp	/^namespace glm$/;"	n
glm	./glm/detail/type_mat3x2.inl	/^namespace glm$/;"	n	file:
glm	./glm/detail/type_mat3x3.hpp	/^namespace glm$/;"	n
glm	./glm/detail/type_mat3x3.inl	/^namespace glm$/;"	n	file:
glm	./glm/detail/type_mat3x4.hpp	/^namespace glm$/;"	n
glm	./glm/detail/type_mat3x4.inl	/^namespace glm$/;"	n	file:
glm	./glm/detail/type_mat4x2.hpp	/^namespace glm$/;"	n
glm	./glm/detail/type_mat4x2.inl	/^namespace glm$/;"	n	file:
glm	./glm/detail/type_mat4x3.hpp	/^namespace glm$/;"	n
glm	./glm/detail/type_mat4x3.inl	/^namespace glm$/;"	n	file:
glm	./glm/detail/type_mat4x4.hpp	/^namespace glm$/;"	n
glm	./glm/detail/type_mat4x4.inl	/^namespace glm$/;"	n	file:
glm	./glm/detail/type_mat4x4_simd.inl	/^namespace glm$/;"	n	file:
glm	./glm/detail/type_quat.hpp	/^namespace glm$/;"	n
glm	./glm/detail/type_quat.inl	/^namespace glm{$/;"	n	file:
glm	./glm/detail/type_quat_simd.inl	/^namespace glm{$/;"	n	file:
glm	./glm/detail/type_vec1.hpp	/^namespace glm$/;"	n
glm	./glm/detail/type_vec1.inl	/^namespace glm$/;"	n	file:
glm	./glm/detail/type_vec2.hpp	/^namespace glm$/;"	n
glm	./glm/detail/type_vec2.inl	/^namespace glm$/;"	n	file:
glm	./glm/detail/type_vec3.hpp	/^namespace glm$/;"	n
glm	./glm/detail/type_vec3.inl	/^namespace glm$/;"	n	file:
glm	./glm/detail/type_vec4.hpp	/^namespace glm$/;"	n
glm	./glm/detail/type_vec4.inl	/^namespace glm{$/;"	n	file:
glm	./glm/detail/type_vec4_simd.inl	/^namespace glm {$/;"	n	file:
glm	./glm/exponential.hpp	/^namespace glm$/;"	n
glm	./glm/ext/_matrix_vectorize.hpp	/^namespace glm {$/;"	n
glm	./glm/ext/matrix_clip_space.hpp	/^namespace glm$/;"	n
glm	./glm/ext/matrix_clip_space.inl	/^namespace glm$/;"	n	file:
glm	./glm/ext/matrix_common.hpp	/^namespace glm$/;"	n
glm	./glm/ext/matrix_common.inl	/^namespace glm$/;"	n	file:
glm	./glm/ext/matrix_double2x2.hpp	/^namespace glm$/;"	n
glm	./glm/ext/matrix_double2x2_precision.hpp	/^namespace glm$/;"	n
glm	./glm/ext/matrix_double2x3.hpp	/^namespace glm$/;"	n
glm	./glm/ext/matrix_double2x3_precision.hpp	/^namespace glm$/;"	n
glm	./glm/ext/matrix_double2x4.hpp	/^namespace glm$/;"	n
glm	./glm/ext/matrix_double2x4_precision.hpp	/^namespace glm$/;"	n
glm	./glm/ext/matrix_double3x2.hpp	/^namespace glm$/;"	n
glm	./glm/ext/matrix_double3x2_precision.hpp	/^namespace glm$/;"	n
glm	./glm/ext/matrix_double3x3.hpp	/^namespace glm$/;"	n
glm	./glm/ext/matrix_double3x3_precision.hpp	/^namespace glm$/;"	n
glm	./glm/ext/matrix_double3x4.hpp	/^namespace glm$/;"	n
glm	./glm/ext/matrix_double3x4_precision.hpp	/^namespace glm$/;"	n
glm	./glm/ext/matrix_double4x2.hpp	/^namespace glm$/;"	n
glm	./glm/ext/matrix_double4x2_precision.hpp	/^namespace glm$/;"	n
glm	./glm/ext/matrix_double4x3.hpp	/^namespace glm$/;"	n
glm	./glm/ext/matrix_double4x3_precision.hpp	/^namespace glm$/;"	n
glm	./glm/ext/matrix_double4x4.hpp	/^namespace glm$/;"	n
glm	./glm/ext/matrix_double4x4_precision.hpp	/^namespace glm$/;"	n
glm	./glm/ext/matrix_float2x2.hpp	/^namespace glm$/;"	n
glm	./glm/ext/matrix_float2x2_precision.hpp	/^namespace glm$/;"	n
glm	./glm/ext/matrix_float2x3.hpp	/^namespace glm$/;"	n
glm	./glm/ext/matrix_float2x3_precision.hpp	/^namespace glm$/;"	n
glm	./glm/ext/matrix_float2x4.hpp	/^namespace glm$/;"	n
glm	./glm/ext/matrix_float2x4_precision.hpp	/^namespace glm$/;"	n
glm	./glm/ext/matrix_float3x2.hpp	/^namespace glm$/;"	n
glm	./glm/ext/matrix_float3x2_precision.hpp	/^namespace glm$/;"	n
glm	./glm/ext/matrix_float3x3.hpp	/^namespace glm$/;"	n
glm	./glm/ext/matrix_float3x3_precision.hpp	/^namespace glm$/;"	n
glm	./glm/ext/matrix_float3x4.hpp	/^namespace glm$/;"	n
glm	./glm/ext/matrix_float3x4_precision.hpp	/^namespace glm$/;"	n
glm	./glm/ext/matrix_float4x2.hpp	/^namespace glm$/;"	n
glm	./glm/ext/matrix_float4x2_precision.hpp	/^namespace glm$/;"	n
glm	./glm/ext/matrix_float4x3.hpp	/^namespace glm$/;"	n
glm	./glm/ext/matrix_float4x3_precision.hpp	/^namespace glm$/;"	n
glm	./glm/ext/matrix_float4x4.hpp	/^namespace glm$/;"	n
glm	./glm/ext/matrix_float4x4_precision.hpp	/^namespace glm$/;"	n
glm	./glm/ext/matrix_int2x2.hpp	/^namespace glm$/;"	n
glm	./glm/ext/matrix_int2x2_sized.hpp	/^namespace glm$/;"	n
glm	./glm/ext/matrix_int2x3.hpp	/^namespace glm$/;"	n
glm	./glm/ext/matrix_int2x3_sized.hpp	/^namespace glm$/;"	n
glm	./glm/ext/matrix_int2x4.hpp	/^namespace glm$/;"	n
glm	./glm/ext/matrix_int2x4_sized.hpp	/^namespace glm$/;"	n
glm	./glm/ext/matrix_int3x2.hpp	/^namespace glm$/;"	n
glm	./glm/ext/matrix_int3x2_sized.hpp	/^namespace glm$/;"	n
glm	./glm/ext/matrix_int3x3.hpp	/^namespace glm$/;"	n
glm	./glm/ext/matrix_int3x3_sized.hpp	/^namespace glm$/;"	n
glm	./glm/ext/matrix_int3x4.hpp	/^namespace glm$/;"	n
glm	./glm/ext/matrix_int3x4_sized.hpp	/^namespace glm$/;"	n
glm	./glm/ext/matrix_int4x2.hpp	/^namespace glm$/;"	n
glm	./glm/ext/matrix_int4x2_sized.hpp	/^namespace glm$/;"	n
glm	./glm/ext/matrix_int4x3.hpp	/^namespace glm$/;"	n
glm	./glm/ext/matrix_int4x3_sized.hpp	/^namespace glm$/;"	n
glm	./glm/ext/matrix_int4x4.hpp	/^namespace glm$/;"	n
glm	./glm/ext/matrix_int4x4_sized.hpp	/^namespace glm$/;"	n
glm	./glm/ext/matrix_integer.hpp	/^namespace glm$/;"	n
glm	./glm/ext/matrix_integer.inl	/^namespace glm{$/;"	n	file:
glm	./glm/ext/matrix_projection.hpp	/^namespace glm$/;"	n
glm	./glm/ext/matrix_projection.inl	/^namespace glm$/;"	n	file:
glm	./glm/ext/matrix_relational.hpp	/^namespace glm$/;"	n
glm	./glm/ext/matrix_relational.inl	/^namespace glm$/;"	n	file:
glm	./glm/ext/matrix_transform.hpp	/^namespace glm$/;"	n
glm	./glm/ext/matrix_transform.inl	/^namespace glm$/;"	n	file:
glm	./glm/ext/matrix_uint2x2.hpp	/^namespace glm$/;"	n
glm	./glm/ext/matrix_uint2x2_sized.hpp	/^namespace glm$/;"	n
glm	./glm/ext/matrix_uint2x3.hpp	/^namespace glm$/;"	n
glm	./glm/ext/matrix_uint2x3_sized.hpp	/^namespace glm$/;"	n
glm	./glm/ext/matrix_uint2x4.hpp	/^namespace glm$/;"	n
glm	./glm/ext/matrix_uint2x4_sized.hpp	/^namespace glm$/;"	n
glm	./glm/ext/matrix_uint3x2.hpp	/^namespace glm$/;"	n
glm	./glm/ext/matrix_uint3x2_sized.hpp	/^namespace glm$/;"	n
glm	./glm/ext/matrix_uint3x3.hpp	/^namespace glm$/;"	n
glm	./glm/ext/matrix_uint3x3_sized.hpp	/^namespace glm$/;"	n
glm	./glm/ext/matrix_uint3x4.hpp	/^namespace glm$/;"	n
glm	./glm/ext/matrix_uint3x4_sized.hpp	/^namespace glm$/;"	n
glm	./glm/ext/matrix_uint4x2.hpp	/^namespace glm$/;"	n
glm	./glm/ext/matrix_uint4x2_sized.hpp	/^namespace glm$/;"	n
glm	./glm/ext/matrix_uint4x3.hpp	/^namespace glm$/;"	n
glm	./glm/ext/matrix_uint4x3_sized.hpp	/^namespace glm$/;"	n
glm	./glm/ext/matrix_uint4x4.hpp	/^namespace glm$/;"	n
glm	./glm/ext/matrix_uint4x4_sized.hpp	/^namespace glm$/;"	n
glm	./glm/ext/quaternion_common.hpp	/^namespace glm$/;"	n
glm	./glm/ext/quaternion_common.inl	/^namespace glm$/;"	n	file:
glm	./glm/ext/quaternion_common_simd.inl	/^namespace glm{$/;"	n	file:
glm	./glm/ext/quaternion_double.hpp	/^namespace glm$/;"	n
glm	./glm/ext/quaternion_double_precision.hpp	/^namespace glm$/;"	n
glm	./glm/ext/quaternion_exponential.hpp	/^namespace glm$/;"	n
glm	./glm/ext/quaternion_exponential.inl	/^namespace glm$/;"	n	file:
glm	./glm/ext/quaternion_float.hpp	/^namespace glm$/;"	n
glm	./glm/ext/quaternion_float_precision.hpp	/^namespace glm$/;"	n
glm	./glm/ext/quaternion_geometric.hpp	/^namespace glm$/;"	n
glm	./glm/ext/quaternion_geometric.inl	/^namespace glm$/;"	n	file:
glm	./glm/ext/quaternion_relational.hpp	/^namespace glm$/;"	n
glm	./glm/ext/quaternion_relational.inl	/^namespace glm$/;"	n	file:
glm	./glm/ext/quaternion_transform.hpp	/^namespace glm$/;"	n
glm	./glm/ext/quaternion_transform.inl	/^namespace glm$/;"	n	file:
glm	./glm/ext/quaternion_trigonometric.hpp	/^namespace glm$/;"	n
glm	./glm/ext/quaternion_trigonometric.inl	/^namespace glm$/;"	n	file:
glm	./glm/ext/scalar_common.hpp	/^namespace glm$/;"	n
glm	./glm/ext/scalar_common.inl	/^namespace glm$/;"	n	file:
glm	./glm/ext/scalar_constants.hpp	/^namespace glm$/;"	n
glm	./glm/ext/scalar_constants.inl	/^namespace glm$/;"	n	file:
glm	./glm/ext/scalar_int_sized.hpp	/^namespace glm{$/;"	n
glm	./glm/ext/scalar_integer.hpp	/^namespace glm$/;"	n
glm	./glm/ext/scalar_integer.inl	/^namespace glm{$/;"	n	file:
glm	./glm/ext/scalar_packing.hpp	/^namespace glm$/;"	n
glm	./glm/ext/scalar_reciprocal.hpp	/^namespace glm$/;"	n
glm	./glm/ext/scalar_reciprocal.inl	/^namespace glm$/;"	n	file:
glm	./glm/ext/scalar_relational.hpp	/^namespace glm$/;"	n
glm	./glm/ext/scalar_relational.inl	/^namespace glm$/;"	n	file:
glm	./glm/ext/scalar_uint_sized.hpp	/^namespace glm{$/;"	n
glm	./glm/ext/scalar_ulp.hpp	/^namespace glm$/;"	n
glm	./glm/ext/scalar_ulp.inl	/^namespace glm$/;"	n	file:
glm	./glm/ext/scalar_ulp.inl	/^namespace glm{$/;"	n	file:
glm	./glm/ext/vector_bool1.hpp	/^namespace glm$/;"	n
glm	./glm/ext/vector_bool1_precision.hpp	/^namespace glm$/;"	n
glm	./glm/ext/vector_bool2.hpp	/^namespace glm$/;"	n
glm	./glm/ext/vector_bool2_precision.hpp	/^namespace glm$/;"	n
glm	./glm/ext/vector_bool3.hpp	/^namespace glm$/;"	n
glm	./glm/ext/vector_bool3_precision.hpp	/^namespace glm$/;"	n
glm	./glm/ext/vector_bool4.hpp	/^namespace glm$/;"	n
glm	./glm/ext/vector_bool4_precision.hpp	/^namespace glm$/;"	n
glm	./glm/ext/vector_common.hpp	/^namespace glm$/;"	n
glm	./glm/ext/vector_common.inl	/^namespace glm$/;"	n	file:
glm	./glm/ext/vector_double1.hpp	/^namespace glm$/;"	n
glm	./glm/ext/vector_double1_precision.hpp	/^namespace glm$/;"	n
glm	./glm/ext/vector_double2.hpp	/^namespace glm$/;"	n
glm	./glm/ext/vector_double2_precision.hpp	/^namespace glm$/;"	n
glm	./glm/ext/vector_double3.hpp	/^namespace glm$/;"	n
glm	./glm/ext/vector_double3_precision.hpp	/^namespace glm$/;"	n
glm	./glm/ext/vector_double4.hpp	/^namespace glm$/;"	n
glm	./glm/ext/vector_double4_precision.hpp	/^namespace glm$/;"	n
glm	./glm/ext/vector_float1.hpp	/^namespace glm$/;"	n
glm	./glm/ext/vector_float1_precision.hpp	/^namespace glm$/;"	n
glm	./glm/ext/vector_float2.hpp	/^namespace glm$/;"	n
glm	./glm/ext/vector_float2_precision.hpp	/^namespace glm$/;"	n
glm	./glm/ext/vector_float3.hpp	/^namespace glm$/;"	n
glm	./glm/ext/vector_float3_precision.hpp	/^namespace glm$/;"	n
glm	./glm/ext/vector_float4.hpp	/^namespace glm$/;"	n
glm	./glm/ext/vector_float4_precision.hpp	/^namespace glm$/;"	n
glm	./glm/ext/vector_int1.hpp	/^namespace glm$/;"	n
glm	./glm/ext/vector_int1_sized.hpp	/^namespace glm$/;"	n
glm	./glm/ext/vector_int2.hpp	/^namespace glm$/;"	n
glm	./glm/ext/vector_int2_sized.hpp	/^namespace glm$/;"	n
glm	./glm/ext/vector_int3.hpp	/^namespace glm$/;"	n
glm	./glm/ext/vector_int3_sized.hpp	/^namespace glm$/;"	n
glm	./glm/ext/vector_int4.hpp	/^namespace glm$/;"	n
glm	./glm/ext/vector_int4_sized.hpp	/^namespace glm$/;"	n
glm	./glm/ext/vector_integer.hpp	/^namespace glm$/;"	n
glm	./glm/ext/vector_integer.inl	/^namespace glm$/;"	n	file:
glm	./glm/ext/vector_packing.hpp	/^namespace glm$/;"	n
glm	./glm/ext/vector_reciprocal.hpp	/^namespace glm$/;"	n
glm	./glm/ext/vector_reciprocal.inl	/^namespace glm$/;"	n	file:
glm	./glm/ext/vector_relational.hpp	/^namespace glm$/;"	n
glm	./glm/ext/vector_relational.inl	/^namespace glm$/;"	n	file:
glm	./glm/ext/vector_uint1.hpp	/^namespace glm$/;"	n
glm	./glm/ext/vector_uint1_sized.hpp	/^namespace glm$/;"	n
glm	./glm/ext/vector_uint2.hpp	/^namespace glm$/;"	n
glm	./glm/ext/vector_uint2_sized.hpp	/^namespace glm$/;"	n
glm	./glm/ext/vector_uint3.hpp	/^namespace glm$/;"	n
glm	./glm/ext/vector_uint3_sized.hpp	/^namespace glm$/;"	n
glm	./glm/ext/vector_uint4.hpp	/^namespace glm$/;"	n
glm	./glm/ext/vector_uint4_sized.hpp	/^namespace glm$/;"	n
glm	./glm/ext/vector_ulp.hpp	/^namespace glm$/;"	n
glm	./glm/ext/vector_ulp.inl	/^namespace glm$/;"	n	file:
glm	./glm/fwd.hpp	/^namespace glm$/;"	n
glm	./glm/geometric.hpp	/^namespace glm$/;"	n
glm	./glm/gtc/bitfield.hpp	/^namespace glm$/;"	n
glm	./glm/gtc/bitfield.inl	/^namespace glm{$/;"	n	file:
glm	./glm/gtc/color_space.hpp	/^namespace glm$/;"	n
glm	./glm/gtc/color_space.inl	/^namespace glm{$/;"	n	file:
glm	./glm/gtc/constants.hpp	/^namespace glm$/;"	n
glm	./glm/gtc/constants.inl	/^namespace glm$/;"	n	file:
glm	./glm/gtc/epsilon.hpp	/^namespace glm$/;"	n
glm	./glm/gtc/epsilon.inl	/^namespace glm$/;"	n	file:
glm	./glm/gtc/integer.hpp	/^namespace glm$/;"	n
glm	./glm/gtc/integer.inl	/^namespace glm{$/;"	n	file:
glm	./glm/gtc/matrix_access.hpp	/^namespace glm$/;"	n
glm	./glm/gtc/matrix_access.inl	/^namespace glm$/;"	n	file:
glm	./glm/gtc/matrix_integer.hpp	/^namespace glm$/;"	n
glm	./glm/gtc/matrix_inverse.hpp	/^namespace glm$/;"	n
glm	./glm/gtc/matrix_inverse.inl	/^namespace glm$/;"	n	file:
glm	./glm/gtc/noise.hpp	/^namespace glm$/;"	n
glm	./glm/gtc/noise.inl	/^namespace glm{$/;"	n	file:
glm	./glm/gtc/packing.hpp	/^namespace glm$/;"	n
glm	./glm/gtc/packing.inl	/^namespace glm{$/;"	n	file:
glm	./glm/gtc/quaternion.hpp	/^namespace glm$/;"	n
glm	./glm/gtc/quaternion.inl	/^namespace glm$/;"	n	file:
glm	./glm/gtc/random.hpp	/^namespace glm$/;"	n
glm	./glm/gtc/random.inl	/^namespace glm{$/;"	n	file:
glm	./glm/gtc/round.hpp	/^namespace glm$/;"	n
glm	./glm/gtc/round.inl	/^namespace glm{$/;"	n	file:
glm	./glm/gtc/type_aligned.hpp	/^namespace glm$/;"	n
glm	./glm/gtc/type_precision.hpp	/^namespace glm$/;"	n
glm	./glm/gtc/type_precision.inl	/^namespace glm$/;"	n	file:
glm	./glm/gtc/type_ptr.hpp	/^namespace glm$/;"	n
glm	./glm/gtc/type_ptr.inl	/^namespace glm$/;"	n	file:
glm	./glm/gtc/ulp.hpp	/^namespace glm$/;"	n
glm	./glm/gtc/ulp.inl	/^namespace glm$/;"	n	file:
glm	./glm/gtx/associated_min_max.hpp	/^namespace glm$/;"	n
glm	./glm/gtx/associated_min_max.inl	/^namespace glm{$/;"	n	file:
glm	./glm/gtx/bit.hpp	/^namespace glm$/;"	n
glm	./glm/gtx/bit.inl	/^namespace glm$/;"	n	file:
glm	./glm/gtx/closest_point.hpp	/^namespace glm$/;"	n
glm	./glm/gtx/closest_point.inl	/^namespace glm$/;"	n	file:
glm	./glm/gtx/color_encoding.hpp	/^namespace glm$/;"	n
glm	./glm/gtx/color_encoding.inl	/^namespace glm$/;"	n	file:
glm	./glm/gtx/color_space.hpp	/^namespace glm$/;"	n
glm	./glm/gtx/color_space.inl	/^namespace glm$/;"	n	file:
glm	./glm/gtx/color_space_YCoCg.hpp	/^namespace glm$/;"	n
glm	./glm/gtx/color_space_YCoCg.inl	/^namespace glm$/;"	n	file:
glm	./glm/gtx/common.hpp	/^namespace glm$/;"	n
glm	./glm/gtx/common.inl	/^namespace glm{$/;"	n	file:
glm	./glm/gtx/compatibility.hpp	/^namespace glm$/;"	n
glm	./glm/gtx/compatibility.inl	/^namespace glm$/;"	n	file:
glm	./glm/gtx/component_wise.hpp	/^namespace glm$/;"	n
glm	./glm/gtx/component_wise.inl	/^namespace glm{$/;"	n	file:
glm	./glm/gtx/dual_quaternion.hpp	/^namespace glm$/;"	n
glm	./glm/gtx/dual_quaternion.inl	/^namespace glm$/;"	n	file:
glm	./glm/gtx/easing.hpp	/^namespace glm{$/;"	n
glm	./glm/gtx/easing.inl	/^namespace glm{$/;"	n	file:
glm	./glm/gtx/euler_angles.hpp	/^namespace glm$/;"	n
glm	./glm/gtx/euler_angles.inl	/^namespace glm$/;"	n	file:
glm	./glm/gtx/extend.hpp	/^namespace glm$/;"	n
glm	./glm/gtx/extend.inl	/^namespace glm$/;"	n	file:
glm	./glm/gtx/extended_min_max.hpp	/^namespace glm$/;"	n
glm	./glm/gtx/extended_min_max.inl	/^namespace glm$/;"	n	file:
glm	./glm/gtx/exterior_product.hpp	/^namespace glm$/;"	n
glm	./glm/gtx/exterior_product.inl	/^namespace glm {$/;"	n	file:
glm	./glm/gtx/fast_exponential.hpp	/^namespace glm$/;"	n
glm	./glm/gtx/fast_exponential.inl	/^namespace glm$/;"	n	file:
glm	./glm/gtx/fast_square_root.hpp	/^namespace glm$/;"	n
glm	./glm/gtx/fast_square_root.inl	/^namespace glm$/;"	n	file:
glm	./glm/gtx/fast_trigonometry.hpp	/^namespace glm$/;"	n
glm	./glm/gtx/fast_trigonometry.inl	/^namespace glm{$/;"	n	file:
glm	./glm/gtx/float_notmalize.inl	/^namespace glm$/;"	n	file:
glm	./glm/gtx/functions.hpp	/^namespace glm$/;"	n
glm	./glm/gtx/functions.inl	/^namespace glm$/;"	n	file:
glm	./glm/gtx/gradient_paint.hpp	/^namespace glm$/;"	n
glm	./glm/gtx/gradient_paint.inl	/^namespace glm$/;"	n	file:
glm	./glm/gtx/handed_coordinate_space.hpp	/^namespace glm$/;"	n
glm	./glm/gtx/handed_coordinate_space.inl	/^namespace glm$/;"	n	file:
glm	./glm/gtx/hash.inl	/^namespace glm {$/;"	n	file:
glm	./glm/gtx/integer.hpp	/^namespace glm$/;"	n
glm	./glm/gtx/integer.inl	/^namespace glm$/;"	n	file:
glm	./glm/gtx/intersect.hpp	/^namespace glm$/;"	n
glm	./glm/gtx/intersect.inl	/^namespace glm$/;"	n	file:
glm	./glm/gtx/io.hpp	/^namespace glm$/;"	n
glm	./glm/gtx/io.inl	/^namespace glm{$/;"	n	file:
glm	./glm/gtx/log_base.hpp	/^namespace glm$/;"	n
glm	./glm/gtx/log_base.inl	/^namespace glm$/;"	n	file:
glm	./glm/gtx/matrix_cross_product.hpp	/^namespace glm$/;"	n
glm	./glm/gtx/matrix_cross_product.inl	/^namespace glm$/;"	n	file:
glm	./glm/gtx/matrix_decompose.hpp	/^namespace glm$/;"	n
glm	./glm/gtx/matrix_decompose.inl	/^namespace glm{$/;"	n	file:
glm	./glm/gtx/matrix_factorisation.hpp	/^namespace glm$/;"	n
glm	./glm/gtx/matrix_factorisation.inl	/^namespace glm$/;"	n	file:
glm	./glm/gtx/matrix_interpolation.hpp	/^namespace glm$/;"	n
glm	./glm/gtx/matrix_interpolation.inl	/^namespace glm$/;"	n	file:
glm	./glm/gtx/matrix_major_storage.hpp	/^namespace glm$/;"	n
glm	./glm/gtx/matrix_major_storage.inl	/^namespace glm$/;"	n	file:
glm	./glm/gtx/matrix_operation.hpp	/^namespace glm$/;"	n
glm	./glm/gtx/matrix_operation.inl	/^namespace glm$/;"	n	file:
glm	./glm/gtx/matrix_query.hpp	/^namespace glm$/;"	n
glm	./glm/gtx/matrix_query.inl	/^namespace glm$/;"	n	file:
glm	./glm/gtx/matrix_transform_2d.hpp	/^namespace glm$/;"	n
glm	./glm/gtx/matrix_transform_2d.inl	/^namespace glm$/;"	n	file:
glm	./glm/gtx/mixed_product.hpp	/^namespace glm$/;"	n
glm	./glm/gtx/mixed_product.inl	/^namespace glm$/;"	n	file:
glm	./glm/gtx/norm.hpp	/^namespace glm$/;"	n
glm	./glm/gtx/norm.inl	/^namespace glm{$/;"	n	file:
glm	./glm/gtx/normal.hpp	/^namespace glm$/;"	n
glm	./glm/gtx/normal.inl	/^namespace glm$/;"	n	file:
glm	./glm/gtx/normalize_dot.hpp	/^namespace glm$/;"	n
glm	./glm/gtx/normalize_dot.inl	/^namespace glm$/;"	n	file:
glm	./glm/gtx/number_precision.hpp	/^namespace glm{$/;"	n
glm	./glm/gtx/optimum_pow.hpp	/^namespace glm$/;"	n
glm	./glm/gtx/optimum_pow.inl	/^namespace glm$/;"	n	file:
glm	./glm/gtx/orthonormalize.hpp	/^namespace glm$/;"	n
glm	./glm/gtx/orthonormalize.inl	/^namespace glm$/;"	n	file:
glm	./glm/gtx/pca.hpp	/^namespace glm {$/;"	n
glm	./glm/gtx/pca.inl	/^namespace glm {$/;"	n	file:
glm	./glm/gtx/perpendicular.hpp	/^namespace glm$/;"	n
glm	./glm/gtx/perpendicular.inl	/^namespace glm$/;"	n	file:
glm	./glm/gtx/polar_coordinates.hpp	/^namespace glm$/;"	n
glm	./glm/gtx/polar_coordinates.inl	/^namespace glm$/;"	n	file:
glm	./glm/gtx/projection.hpp	/^namespace glm$/;"	n
glm	./glm/gtx/projection.inl	/^namespace glm$/;"	n	file:
glm	./glm/gtx/quaternion.hpp	/^namespace glm$/;"	n
glm	./glm/gtx/quaternion.inl	/^namespace glm$/;"	n	file:
glm	./glm/gtx/range.hpp	/^namespace glm$/;"	n
glm	./glm/gtx/raw_data.hpp	/^namespace glm$/;"	n
glm	./glm/gtx/rotate_normalized_axis.hpp	/^namespace glm$/;"	n
glm	./glm/gtx/rotate_normalized_axis.inl	/^namespace glm$/;"	n	file:
glm	./glm/gtx/rotate_vector.hpp	/^namespace glm$/;"	n
glm	./glm/gtx/rotate_vector.inl	/^namespace glm$/;"	n	file:
glm	./glm/gtx/scalar_multiplication.hpp	/^namespace glm$/;"	n
glm	./glm/gtx/scalar_relational.hpp	/^namespace glm$/;"	n
glm	./glm/gtx/scalar_relational.inl	/^namespace glm$/;"	n	file:
glm	./glm/gtx/spline.hpp	/^namespace glm$/;"	n
glm	./glm/gtx/spline.inl	/^namespace glm$/;"	n	file:
glm	./glm/gtx/std_based_type.hpp	/^namespace glm$/;"	n
glm	./glm/gtx/std_based_type.inl	/^namespace glm$/;"	n	file:
glm	./glm/gtx/string_cast.hpp	/^namespace glm$/;"	n
glm	./glm/gtx/string_cast.inl	/^namespace glm{$/;"	n	file:
glm	./glm/gtx/texture.hpp	/^namespace glm$/;"	n
glm	./glm/gtx/texture.inl	/^namespace glm$/;"	n	file:
glm	./glm/gtx/transform.hpp	/^namespace glm$/;"	n
glm	./glm/gtx/transform.inl	/^namespace glm$/;"	n	file:
glm	./glm/gtx/transform2.hpp	/^namespace glm$/;"	n
glm	./glm/gtx/transform2.inl	/^namespace glm$/;"	n	file:
glm	./glm/gtx/type_aligned.hpp	/^namespace glm$/;"	n
glm	./glm/gtx/type_aligned.inl	/^namespace glm$/;"	n	file:
glm	./glm/gtx/type_trait.hpp	/^namespace glm$/;"	n
glm	./glm/gtx/type_trait.inl	/^namespace glm$/;"	n	file:
glm	./glm/gtx/vec_swizzle.hpp	/^namespace glm {$/;"	n
glm	./glm/gtx/vector_angle.hpp	/^namespace glm$/;"	n
glm	./glm/gtx/vector_angle.inl	/^namespace glm$/;"	n	file:
glm	./glm/gtx/vector_query.hpp	/^namespace glm$/;"	n
glm	./glm/gtx/vector_query.inl	/^namespace glm{$/;"	n	file:
glm	./glm/gtx/wrap.hpp	/^namespace glm$/;"	n
glm	./glm/gtx/wrap.inl	/^namespace glm$/;"	n	file:
glm	./glm/integer.hpp	/^namespace glm$/;"	n
glm	./glm/matrix.hpp	/^namespace glm {$/;"	n
glm	./glm/packing.hpp	/^namespace glm$/;"	n
glm	./glm/simd/neon.h	/^namespace glm {$/;"	n
glm	./glm/trigonometric.hpp	/^namespace glm$/;"	n
glm	./glm/vector_relational.hpp	/^namespace glm$/;"	n
glm_dvec2	./glm/simd/platform.h	/^	typedef glm_f64vec2		glm_dvec2;$/;"	t	typeref:typename:glm_f64vec2
glm_dvec4	./glm/simd/platform.h	/^	typedef glm_f64vec4		glm_dvec4;$/;"	t	typeref:typename:glm_f64vec4
glm_f32vec4	./glm/simd/platform.h	/^	typedef __m128			glm_f32vec4;$/;"	t	typeref:typename:__m128
glm_f32vec4	./glm/simd/platform.h	/^	typedef float32x4_t			glm_f32vec4;$/;"	t	typeref:typename:float32x4_t
glm_f64vec2	./glm/simd/platform.h	/^	typedef __m128d			glm_f64vec2;$/;"	t	typeref:typename:__m128d
glm_f64vec4	./glm/simd/platform.h	/^	typedef __m256d			glm_f64vec4;$/;"	t	typeref:typename:__m256d
glm_i128_interleave	./glm/simd/integer.h	/^GLM_FUNC_QUALIFIER glm_uvec4 glm_i128_interleave(glm_uvec4 x)$/;"	f	typeref:typename:GLM_FUNC_QUALIFIER glm_uvec4
glm_i128_interleave2	./glm/simd/integer.h	/^GLM_FUNC_QUALIFIER glm_uvec4 glm_i128_interleave2(glm_uvec4 x, glm_uvec4 y)$/;"	f	typeref:typename:GLM_FUNC_QUALIFIER glm_uvec4
glm_i32vec4	./glm/simd/platform.h	/^	typedef __m128i			glm_i32vec4;$/;"	t	typeref:typename:__m128i
glm_i32vec4	./glm/simd/platform.h	/^	typedef int32x4_t			glm_i32vec4;$/;"	t	typeref:typename:int32x4_t
glm_i64vec2	./glm/simd/platform.h	/^	typedef __m128i			glm_i64vec2;$/;"	t	typeref:typename:__m128i
glm_i64vec4	./glm/simd/platform.h	/^	typedef __m256i			glm_i64vec4;$/;"	t	typeref:typename:__m256i
glm_ivec4	./glm/simd/platform.h	/^	typedef glm_i32vec4		glm_ivec4;$/;"	t	typeref:typename:glm_i32vec4
glm_ivec4_abs	./glm/simd/common.h	/^GLM_FUNC_QUALIFIER glm_ivec4 glm_ivec4_abs(glm_ivec4 x)$/;"	f	typeref:typename:GLM_FUNC_QUALIFIER glm_ivec4
glm_mat4_add	./glm/simd/matrix.h	/^GLM_FUNC_QUALIFIER void glm_mat4_add(glm_vec4 const in1[4], glm_vec4 const in2[4], glm_vec4 out[/;"	f	typeref:typename:GLM_FUNC_QUALIFIER void
glm_mat4_determinant	./glm/simd/matrix.h	/^GLM_FUNC_QUALIFIER glm_vec4 glm_mat4_determinant(glm_vec4 const m[4])$/;"	f	typeref:typename:GLM_FUNC_QUALIFIER glm_vec4
glm_mat4_determinant_highp	./glm/simd/matrix.h	/^GLM_FUNC_QUALIFIER glm_vec4 glm_mat4_determinant_highp(glm_vec4 const in[4])$/;"	f	typeref:typename:GLM_FUNC_QUALIFIER glm_vec4
glm_mat4_determinant_lowp	./glm/simd/matrix.h	/^GLM_FUNC_QUALIFIER glm_vec4 glm_mat4_determinant_lowp(glm_vec4 const m[4])$/;"	f	typeref:typename:GLM_FUNC_QUALIFIER glm_vec4
glm_mat4_inverse	./glm/simd/matrix.h	/^GLM_FUNC_QUALIFIER void glm_mat4_inverse(glm_vec4 const in[4], glm_vec4 out[4])$/;"	f	typeref:typename:GLM_FUNC_QUALIFIER void
glm_mat4_inverse_lowp	./glm/simd/matrix.h	/^GLM_FUNC_QUALIFIER void glm_mat4_inverse_lowp(glm_vec4 const in[4], glm_vec4 out[4])$/;"	f	typeref:typename:GLM_FUNC_QUALIFIER void
glm_mat4_matrixCompMult	./glm/simd/matrix.h	/^GLM_FUNC_QUALIFIER void glm_mat4_matrixCompMult(glm_vec4 const in1[4], glm_vec4 const in2[4], gl/;"	f	typeref:typename:GLM_FUNC_QUALIFIER void
glm_mat4_mul	./glm/simd/matrix.h	/^GLM_FUNC_QUALIFIER void glm_mat4_mul(glm_vec4 const in1[4], glm_vec4 const in2[4], glm_vec4 out[/;"	f	typeref:typename:GLM_FUNC_QUALIFIER void
glm_mat4_mul_vec4	./glm/simd/matrix.h	/^GLM_FUNC_QUALIFIER glm_vec4 glm_mat4_mul_vec4(glm_vec4 const m[4], glm_vec4 v)$/;"	f	typeref:typename:GLM_FUNC_QUALIFIER glm_vec4
glm_mat4_outerProduct	./glm/simd/matrix.h	/^GLM_FUNC_QUALIFIER void glm_mat4_outerProduct(__m128 const& c, __m128 const& r, __m128 out[4])$/;"	f	typeref:typename:GLM_FUNC_QUALIFIER void
glm_mat4_sub	./glm/simd/matrix.h	/^GLM_FUNC_QUALIFIER void glm_mat4_sub(glm_vec4 const in1[4], glm_vec4 const in2[4], glm_vec4 out[/;"	f	typeref:typename:GLM_FUNC_QUALIFIER void
glm_mat4_transpose	./glm/simd/matrix.h	/^GLM_FUNC_QUALIFIER void glm_mat4_transpose(glm_vec4 const in[4], glm_vec4 out[4])$/;"	f	typeref:typename:GLM_FUNC_QUALIFIER void
glm_u32vec4	./glm/simd/platform.h	/^	typedef __m128i			glm_u32vec4;$/;"	t	typeref:typename:__m128i
glm_u32vec4	./glm/simd/platform.h	/^	typedef uint32x4_t			glm_u32vec4;$/;"	t	typeref:typename:uint32x4_t
glm_u64vec2	./glm/simd/platform.h	/^	typedef __m128i			glm_u64vec2;$/;"	t	typeref:typename:__m128i
glm_u64vec4	./glm/simd/platform.h	/^	typedef __m256i			glm_u64vec4;$/;"	t	typeref:typename:__m256i
glm_uvec4	./glm/simd/platform.h	/^	typedef glm_u32vec4		glm_uvec4;$/;"	t	typeref:typename:glm_u32vec4
glm_vec1_add	./glm/simd/common.h	/^GLM_FUNC_QUALIFIER glm_f32vec4 glm_vec1_add(glm_f32vec4 a, glm_f32vec4 b)$/;"	f	typeref:typename:GLM_FUNC_QUALIFIER glm_f32vec4
glm_vec1_div	./glm/simd/common.h	/^GLM_FUNC_QUALIFIER glm_f32vec4 glm_vec1_div(glm_f32vec4 a, glm_f32vec4 b)$/;"	f	typeref:typename:GLM_FUNC_QUALIFIER glm_f32vec4
glm_vec1_dot	./glm/simd/geometric.h	/^GLM_FUNC_QUALIFIER glm_vec4 glm_vec1_dot(glm_vec4 v1, glm_vec4 v2)$/;"	f	typeref:typename:GLM_FUNC_QUALIFIER glm_vec4
glm_vec1_fma	./glm/simd/common.h	/^GLM_FUNC_QUALIFIER glm_f32vec4 glm_vec1_fma(glm_f32vec4 a, glm_f32vec4 b, glm_f32vec4 c)$/;"	f	typeref:typename:GLM_FUNC_QUALIFIER glm_f32vec4
glm_vec1_mul	./glm/simd/common.h	/^GLM_FUNC_QUALIFIER glm_f32vec4 glm_vec1_mul(glm_f32vec4 a, glm_f32vec4 b)$/;"	f	typeref:typename:GLM_FUNC_QUALIFIER glm_f32vec4
glm_vec1_sqrt_lowp	./glm/simd/exponential.h	/^GLM_FUNC_QUALIFIER glm_f32vec4 glm_vec1_sqrt_lowp(glm_f32vec4 x)$/;"	f	typeref:typename:GLM_FUNC_QUALIFIER glm_f32vec4
glm_vec1_sub	./glm/simd/common.h	/^GLM_FUNC_QUALIFIER glm_f32vec4 glm_vec1_sub(glm_f32vec4 a, glm_f32vec4 b)$/;"	f	typeref:typename:GLM_FUNC_QUALIFIER glm_f32vec4
glm_vec4	./glm/simd/platform.h	/^	typedef glm_f32vec4		glm_vec4;$/;"	t	typeref:typename:glm_f32vec4
glm_vec4_abs	./glm/simd/common.h	/^GLM_FUNC_QUALIFIER glm_f32vec4 glm_vec4_abs(glm_f32vec4 x)$/;"	f	typeref:typename:GLM_FUNC_QUALIFIER glm_f32vec4
glm_vec4_add	./glm/simd/common.h	/^GLM_FUNC_QUALIFIER glm_f32vec4 glm_vec4_add(glm_f32vec4 a, glm_f32vec4 b)$/;"	f	typeref:typename:GLM_FUNC_QUALIFIER glm_f32vec4
glm_vec4_ceil	./glm/simd/common.h	/^GLM_FUNC_QUALIFIER glm_vec4 glm_vec4_ceil(glm_vec4 x)$/;"	f	typeref:typename:GLM_FUNC_QUALIFIER glm_vec4
glm_vec4_clamp	./glm/simd/common.h	/^GLM_FUNC_QUALIFIER glm_vec4 glm_vec4_clamp(glm_vec4 v, glm_vec4 minVal, glm_vec4 maxVal)$/;"	f	typeref:typename:GLM_FUNC_QUALIFIER glm_vec4
glm_vec4_cross	./glm/simd/geometric.h	/^GLM_FUNC_QUALIFIER glm_vec4 glm_vec4_cross(glm_vec4 v1, glm_vec4 v2)$/;"	f	typeref:typename:GLM_FUNC_QUALIFIER glm_vec4
glm_vec4_distance	./glm/simd/geometric.h	/^GLM_FUNC_QUALIFIER glm_vec4 glm_vec4_distance(glm_vec4 p0, glm_vec4 p1)$/;"	f	typeref:typename:GLM_FUNC_QUALIFIER glm_vec4
glm_vec4_div	./glm/simd/common.h	/^GLM_FUNC_QUALIFIER glm_f32vec4 glm_vec4_div(glm_f32vec4 a, glm_f32vec4 b)$/;"	f	typeref:typename:GLM_FUNC_QUALIFIER glm_f32vec4
glm_vec4_div_lowp	./glm/simd/common.h	/^GLM_FUNC_QUALIFIER glm_f32vec4 glm_vec4_div_lowp(glm_f32vec4 a, glm_f32vec4 b)$/;"	f	typeref:typename:GLM_FUNC_QUALIFIER glm_f32vec4
glm_vec4_dot	./glm/simd/geometric.h	/^GLM_FUNC_QUALIFIER glm_vec4 glm_vec4_dot(glm_vec4 v1, glm_vec4 v2)$/;"	f	typeref:typename:GLM_FUNC_QUALIFIER glm_vec4
glm_vec4_faceforward	./glm/simd/geometric.h	/^GLM_FUNC_QUALIFIER glm_vec4 glm_vec4_faceforward(glm_vec4 N, glm_vec4 I, glm_vec4 Nref)$/;"	f	typeref:typename:GLM_FUNC_QUALIFIER glm_vec4
glm_vec4_floor	./glm/simd/common.h	/^GLM_FUNC_QUALIFIER glm_vec4 glm_vec4_floor(glm_vec4 x)$/;"	f	typeref:typename:GLM_FUNC_QUALIFIER glm_vec4
glm_vec4_fma	./glm/simd/common.h	/^GLM_FUNC_QUALIFIER glm_f32vec4 glm_vec4_fma(glm_f32vec4 a, glm_f32vec4 b, glm_f32vec4 c)$/;"	f	typeref:typename:GLM_FUNC_QUALIFIER glm_f32vec4
glm_vec4_fract	./glm/simd/common.h	/^GLM_FUNC_QUALIFIER glm_vec4 glm_vec4_fract(glm_vec4 x)$/;"	f	typeref:typename:GLM_FUNC_QUALIFIER glm_vec4
glm_vec4_inf	./glm/simd/common.h	/^GLM_FUNC_QUALIFIER glm_vec4 glm_vec4_inf(glm_vec4 x)$/;"	f	typeref:typename:GLM_FUNC_QUALIFIER glm_vec4
glm_vec4_length	./glm/simd/geometric.h	/^GLM_FUNC_QUALIFIER glm_vec4 glm_vec4_length(glm_vec4 x)$/;"	f	typeref:typename:GLM_FUNC_QUALIFIER glm_vec4
glm_vec4_mix	./glm/simd/common.h	/^GLM_FUNC_QUALIFIER glm_vec4 glm_vec4_mix(glm_vec4 v1, glm_vec4 v2, glm_vec4 a)$/;"	f	typeref:typename:GLM_FUNC_QUALIFIER glm_vec4
glm_vec4_mod	./glm/simd/common.h	/^GLM_FUNC_QUALIFIER glm_vec4 glm_vec4_mod(glm_vec4 x, glm_vec4 y)$/;"	f	typeref:typename:GLM_FUNC_QUALIFIER glm_vec4
glm_vec4_mul	./glm/simd/common.h	/^GLM_FUNC_QUALIFIER glm_f32vec4 glm_vec4_mul(glm_f32vec4 a, glm_f32vec4 b)$/;"	f	typeref:typename:GLM_FUNC_QUALIFIER glm_f32vec4
glm_vec4_mul_mat4	./glm/simd/matrix.h	/^GLM_FUNC_QUALIFIER __m128 glm_vec4_mul_mat4(glm_vec4 v, glm_vec4 const m[4])$/;"	f	typeref:typename:GLM_FUNC_QUALIFIER __m128
glm_vec4_nan	./glm/simd/common.h	/^GLM_FUNC_QUALIFIER glm_vec4 glm_vec4_nan(glm_vec4 x)$/;"	f	typeref:typename:GLM_FUNC_QUALIFIER glm_vec4
glm_vec4_normalize	./glm/simd/geometric.h	/^GLM_FUNC_QUALIFIER glm_vec4 glm_vec4_normalize(glm_vec4 v)$/;"	f	typeref:typename:GLM_FUNC_QUALIFIER glm_vec4
glm_vec4_reflect	./glm/simd/geometric.h	/^GLM_FUNC_QUALIFIER glm_vec4 glm_vec4_reflect(glm_vec4 I, glm_vec4 N)$/;"	f	typeref:typename:GLM_FUNC_QUALIFIER glm_vec4
glm_vec4_refract	./glm/simd/geometric.h	/^GLM_FUNC_QUALIFIER __m128 glm_vec4_refract(glm_vec4 I, glm_vec4 N, glm_vec4 eta)$/;"	f	typeref:typename:GLM_FUNC_QUALIFIER __m128
glm_vec4_round	./glm/simd/common.h	/^GLM_FUNC_QUALIFIER glm_vec4 glm_vec4_round(glm_vec4 x)$/;"	f	typeref:typename:GLM_FUNC_QUALIFIER glm_vec4
glm_vec4_roundEven	./glm/simd/common.h	/^GLM_FUNC_QUALIFIER glm_vec4 glm_vec4_roundEven(glm_vec4 x)$/;"	f	typeref:typename:GLM_FUNC_QUALIFIER glm_vec4
glm_vec4_sign	./glm/simd/common.h	/^GLM_FUNC_QUALIFIER glm_vec4 glm_vec4_sign(glm_vec4 x)$/;"	f	typeref:typename:GLM_FUNC_QUALIFIER glm_vec4
glm_vec4_smoothstep	./glm/simd/common.h	/^GLM_FUNC_QUALIFIER glm_vec4 glm_vec4_smoothstep(glm_vec4 edge0, glm_vec4 edge1, glm_vec4 x)$/;"	f	typeref:typename:GLM_FUNC_QUALIFIER glm_vec4
glm_vec4_sqrt_lowp	./glm/simd/exponential.h	/^GLM_FUNC_QUALIFIER glm_f32vec4 glm_vec4_sqrt_lowp(glm_f32vec4 x)$/;"	f	typeref:typename:GLM_FUNC_QUALIFIER glm_f32vec4
glm_vec4_step	./glm/simd/common.h	/^GLM_FUNC_QUALIFIER glm_vec4 glm_vec4_step(glm_vec4 edge, glm_vec4 x)$/;"	f	typeref:typename:GLM_FUNC_QUALIFIER glm_vec4
glm_vec4_sub	./glm/simd/common.h	/^GLM_FUNC_QUALIFIER glm_f32vec4 glm_vec4_sub(glm_f32vec4 a, glm_f32vec4 b)$/;"	f	typeref:typename:GLM_FUNC_QUALIFIER glm_f32vec4
glm_vec4_swizzle_xyzw	./glm/simd/common.h	/^GLM_FUNC_QUALIFIER glm_f32vec4 glm_vec4_swizzle_xyzw(glm_f32vec4 a)$/;"	f	typeref:typename:GLM_FUNC_QUALIFIER glm_f32vec4
glxpbufferclobber	./GL/glxew.h	/^  GLXPbufferClobberEvent glxpbufferclobber; $/;"	m	union:__GLXEvent	typeref:typename:GLXPbufferClobberEvent
golden_ratio	./glm/gtc/constants.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR genType golden_ratio()$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR genType
grad4	./glm/gtc/noise.inl	/^	GLM_FUNC_QUALIFIER vec<4, T, Q> grad4(T const& j, vec<4, T, Q> const& ip)$/;"	f	namespace:glm::detail	typeref:typename:GLM_FUNC_QUALIFIER vec<4,T,Q>
greaterThan	./glm/detail/func_vector_relational.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<L, bool, Q> greaterThan(vec<L, T, Q> const& x, vec<L, T, Q/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<L,bool,Q>
greaterThan	./glm/gtc/quaternion.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4, bool, Q> greaterThan(qua<T, Q> const& x, qua<T, Q> cons/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4,bool,Q>
greaterThan	./glm/gtx/scalar_relational.inl	/^	GLM_FUNC_QUALIFIER bool greaterThan$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER bool
greaterThanEqual	./glm/detail/func_vector_relational.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<L, bool, Q> greaterThanEqual(vec<L, T, Q> const& x, vec<L,/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<L,bool,Q>
greaterThanEqual	./glm/gtc/quaternion.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4, bool, Q> greaterThanEqual(qua<T, Q> const& x, qua<T, Q>/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4,bool,Q>
greaterThanEqual	./glm/gtx/scalar_relational.inl	/^	GLM_FUNC_QUALIFIER bool greaterThanEqual$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER bool
half2float	./glm/gtc/packing.inl	/^	GLM_FUNC_QUALIFIER glm::uint half2float(glm::uint h)$/;"	f	namespace:glm::detail	typeref:typename:GLM_FUNC_QUALIFIER glm::uint
half_pi	./glm/gtc/constants.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR genType half_pi()$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR genType
hash	./glm/gtx/hash.hpp	/^	struct hash<glm::mat<2, 2, T, Q> >$/;"	s	namespace:std
hash	./glm/gtx/hash.hpp	/^	struct hash<glm::mat<2, 3, T, Q> >$/;"	s	namespace:std
hash	./glm/gtx/hash.hpp	/^	struct hash<glm::mat<2, 4, T, Q> >$/;"	s	namespace:std
hash	./glm/gtx/hash.hpp	/^	struct hash<glm::mat<3, 2, T, Q> >$/;"	s	namespace:std
hash	./glm/gtx/hash.hpp	/^	struct hash<glm::mat<3, 3, T, Q> >$/;"	s	namespace:std
hash	./glm/gtx/hash.hpp	/^	struct hash<glm::mat<3, 4, T, Q> >$/;"	s	namespace:std
hash	./glm/gtx/hash.hpp	/^	struct hash<glm::mat<4, 2, T, Q> >$/;"	s	namespace:std
hash	./glm/gtx/hash.hpp	/^	struct hash<glm::mat<4, 3, T, Q> >$/;"	s	namespace:std
hash	./glm/gtx/hash.hpp	/^	struct hash<glm::mat<4, 4, T, Q> >$/;"	s	namespace:std
hash	./glm/gtx/hash.hpp	/^	struct hash<glm::qua<T, Q> >$/;"	s	namespace:std
hash	./glm/gtx/hash.hpp	/^	struct hash<glm::tdualquat<T, Q> >$/;"	s	namespace:std
hash	./glm/gtx/hash.hpp	/^	struct hash<glm::vec<1, T, Q> >$/;"	s	namespace:std
hash	./glm/gtx/hash.hpp	/^	struct hash<glm::vec<2, T, Q> >$/;"	s	namespace:std
hash	./glm/gtx/hash.hpp	/^	struct hash<glm::vec<3, T, Q> >$/;"	s	namespace:std
hash	./glm/gtx/hash.hpp	/^	struct hash<glm::vec<4, T, Q> >$/;"	s	namespace:std
hash_combine	./glm/gtx/hash.inl	/^	GLM_INLINE void hash_combine(size_t &seed, size_t hash)$/;"	f	namespace:glm::detail	typeref:typename:GLM_INLINE void
hdata	./glm/detail/type_half.hpp	/^	typedef short hdata;$/;"	t	namespace:glm::detail	typeref:typename:short
height	./GL/glxew.h	/^  int width, height; $/;"	m	struct:__anonb1a929810108	typeref:typename:int
height	./GL/glxew.h	/^typedef struct { int type; unsigned long serial; Bool send_event; Display *display; GLXDrawable /;"	m	struct:__anonb1a929810608	typeref:typename:int
hermite	./glm/gtx/spline.inl	/^	GLM_FUNC_QUALIFIER genType hermite$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genType
highestBitValue	./glm/gtx/bit.inl	/^	GLM_FUNC_QUALIFIER genIUType highestBitValue(genIUType Value)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genIUType
highestBitValue	./glm/gtx/bit.inl	/^	GLM_FUNC_QUALIFIER vec<L, T, Q> highestBitValue(vec<L, T, Q> const& v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<L,T,Q>
highp	./glm/detail/qualifier.hpp	/^		highp = packed_highp, \/\/\/< By default highp qualifier is also packed$/;"	e	enum:glm::qualifier
highp_bvec1	./glm/ext/vector_bool1_precision.hpp	/^	typedef vec<1, bool, highp>			highp_bvec1;$/;"	t	namespace:glm	typeref:typename:vec<1,bool,highp>
highp_bvec1	./glm/fwd.hpp	/^	typedef vec<1, bool, highp>		highp_bvec1;$/;"	t	namespace:glm	typeref:typename:vec<1,bool,highp>
highp_bvec2	./glm/ext/vector_bool2_precision.hpp	/^	typedef vec<2, bool, highp>		highp_bvec2;$/;"	t	namespace:glm	typeref:typename:vec<2,bool,highp>
highp_bvec2	./glm/fwd.hpp	/^	typedef vec<2, bool, highp>		highp_bvec2;$/;"	t	namespace:glm	typeref:typename:vec<2,bool,highp>
highp_bvec3	./glm/ext/vector_bool3_precision.hpp	/^	typedef vec<3, bool, highp>		highp_bvec3;$/;"	t	namespace:glm	typeref:typename:vec<3,bool,highp>
highp_bvec3	./glm/fwd.hpp	/^	typedef vec<3, bool, highp>		highp_bvec3;$/;"	t	namespace:glm	typeref:typename:vec<3,bool,highp>
highp_bvec4	./glm/ext/vector_bool4_precision.hpp	/^	typedef vec<4, bool, highp>		highp_bvec4;$/;"	t	namespace:glm	typeref:typename:vec<4,bool,highp>
highp_bvec4	./glm/fwd.hpp	/^	typedef vec<4, bool, highp>		highp_bvec4;$/;"	t	namespace:glm	typeref:typename:vec<4,bool,highp>
highp_ddualquat	./glm/gtx/dual_quaternion.hpp	/^	typedef tdualquat<double, highp>	highp_ddualquat;$/;"	t	namespace:glm	typeref:typename:tdualquat<double,highp>
highp_dmat2	./glm/ext/matrix_double2x2_precision.hpp	/^	typedef mat<2, 2, double, highp>	highp_dmat2;$/;"	t	namespace:glm	typeref:typename:mat<2,2,double,highp>
highp_dmat2	./glm/fwd.hpp	/^	typedef mat<2, 2, f64, highp>		highp_dmat2;$/;"	t	namespace:glm	typeref:typename:mat<2,2,f64,highp>
highp_dmat2x2	./glm/ext/matrix_double2x2_precision.hpp	/^	typedef mat<2, 2, double, highp>	highp_dmat2x2;$/;"	t	namespace:glm	typeref:typename:mat<2,2,double,highp>
highp_dmat2x2	./glm/fwd.hpp	/^	typedef mat<2, 2, double, highp>	highp_dmat2x2;$/;"	t	namespace:glm	typeref:typename:mat<2,2,double,highp>
highp_dmat2x3	./glm/ext/matrix_double2x3_precision.hpp	/^	typedef mat<2, 3, double, highp>	highp_dmat2x3;$/;"	t	namespace:glm	typeref:typename:mat<2,3,double,highp>
highp_dmat2x3	./glm/fwd.hpp	/^	typedef mat<2, 3, double, highp>	highp_dmat2x3;$/;"	t	namespace:glm	typeref:typename:mat<2,3,double,highp>
highp_dmat2x4	./glm/ext/matrix_double2x4_precision.hpp	/^	typedef mat<2, 4, double, highp>	highp_dmat2x4;$/;"	t	namespace:glm	typeref:typename:mat<2,4,double,highp>
highp_dmat2x4	./glm/fwd.hpp	/^	typedef mat<2, 4, double, highp>	highp_dmat2x4;$/;"	t	namespace:glm	typeref:typename:mat<2,4,double,highp>
highp_dmat3	./glm/ext/matrix_double3x3_precision.hpp	/^	typedef mat<3, 3, double, highp>	highp_dmat3;$/;"	t	namespace:glm	typeref:typename:mat<3,3,double,highp>
highp_dmat3	./glm/fwd.hpp	/^	typedef mat<3, 3, f64, highp>		highp_dmat3;$/;"	t	namespace:glm	typeref:typename:mat<3,3,f64,highp>
highp_dmat3x2	./glm/ext/matrix_double3x2_precision.hpp	/^	typedef mat<3, 2, double, highp>	highp_dmat3x2;$/;"	t	namespace:glm	typeref:typename:mat<3,2,double,highp>
highp_dmat3x2	./glm/fwd.hpp	/^	typedef mat<3, 2, double, highp>	highp_dmat3x2;$/;"	t	namespace:glm	typeref:typename:mat<3,2,double,highp>
highp_dmat3x3	./glm/ext/matrix_double3x3_precision.hpp	/^	typedef mat<3, 3, double, highp>	highp_dmat3x3;$/;"	t	namespace:glm	typeref:typename:mat<3,3,double,highp>
highp_dmat3x3	./glm/fwd.hpp	/^	typedef mat<3, 3, double, highp>	highp_dmat3x3;$/;"	t	namespace:glm	typeref:typename:mat<3,3,double,highp>
highp_dmat3x4	./glm/ext/matrix_double3x4_precision.hpp	/^	typedef mat<3, 4, double, highp>	highp_dmat3x4;$/;"	t	namespace:glm	typeref:typename:mat<3,4,double,highp>
highp_dmat3x4	./glm/fwd.hpp	/^	typedef mat<3, 4, double, highp>	highp_dmat3x4;$/;"	t	namespace:glm	typeref:typename:mat<3,4,double,highp>
highp_dmat4	./glm/ext/matrix_double4x4_precision.hpp	/^	typedef mat<4, 4, double, highp>	highp_dmat4;$/;"	t	namespace:glm	typeref:typename:mat<4,4,double,highp>
highp_dmat4	./glm/fwd.hpp	/^	typedef mat<4, 4, f64, highp>		highp_dmat4;$/;"	t	namespace:glm	typeref:typename:mat<4,4,f64,highp>
highp_dmat4x2	./glm/ext/matrix_double4x2_precision.hpp	/^	typedef mat<4, 2, double, highp>	highp_dmat4x2;$/;"	t	namespace:glm	typeref:typename:mat<4,2,double,highp>
highp_dmat4x2	./glm/fwd.hpp	/^	typedef mat<4, 2, double, highp>	highp_dmat4x2;$/;"	t	namespace:glm	typeref:typename:mat<4,2,double,highp>
highp_dmat4x3	./glm/ext/matrix_double4x3_precision.hpp	/^	typedef mat<4, 3, double, highp>	highp_dmat4x3;$/;"	t	namespace:glm	typeref:typename:mat<4,3,double,highp>
highp_dmat4x3	./glm/fwd.hpp	/^	typedef mat<4, 3, double, highp>	highp_dmat4x3;$/;"	t	namespace:glm	typeref:typename:mat<4,3,double,highp>
highp_dmat4x4	./glm/ext/matrix_double4x4_precision.hpp	/^	typedef mat<4, 4, double, highp>	highp_dmat4x4;$/;"	t	namespace:glm	typeref:typename:mat<4,4,double,highp>
highp_dmat4x4	./glm/fwd.hpp	/^	typedef mat<4, 4, double, highp>	highp_dmat4x4;$/;"	t	namespace:glm	typeref:typename:mat<4,4,double,highp>
highp_dquat	./glm/ext/quaternion_double_precision.hpp	/^	typedef qua<double, highp>		highp_dquat;$/;"	t	namespace:glm	typeref:typename:qua<double,highp>
highp_dquat	./glm/fwd.hpp	/^	typedef qua<double, highp>			highp_dquat;$/;"	t	namespace:glm	typeref:typename:qua<double,highp>
highp_dualquat	./glm/gtx/dual_quaternion.hpp	/^	typedef tdualquat<float, highp>		highp_dualquat;$/;"	t	namespace:glm	typeref:typename:tdualquat<float,highp>
highp_dvec1	./glm/ext/vector_double1_precision.hpp	/^	typedef vec<1, double, highp>		highp_dvec1;$/;"	t	namespace:glm	typeref:typename:vec<1,double,highp>
highp_dvec1	./glm/fwd.hpp	/^	typedef vec<1, f64, highp>			highp_dvec1;$/;"	t	namespace:glm	typeref:typename:vec<1,f64,highp>
highp_dvec2	./glm/ext/vector_double2_precision.hpp	/^	typedef vec<2, double, highp>		highp_dvec2;$/;"	t	namespace:glm	typeref:typename:vec<2,double,highp>
highp_dvec2	./glm/fwd.hpp	/^	typedef vec<2, f64, highp>			highp_dvec2;$/;"	t	namespace:glm	typeref:typename:vec<2,f64,highp>
highp_dvec3	./glm/ext/vector_double3_precision.hpp	/^	typedef vec<3, double, highp>		highp_dvec3;$/;"	t	namespace:glm	typeref:typename:vec<3,double,highp>
highp_dvec3	./glm/fwd.hpp	/^	typedef vec<3, f64, highp>			highp_dvec3;$/;"	t	namespace:glm	typeref:typename:vec<3,f64,highp>
highp_dvec4	./glm/ext/vector_double4_precision.hpp	/^	typedef vec<4, double, highp>		highp_dvec4;$/;"	t	namespace:glm	typeref:typename:vec<4,double,highp>
highp_dvec4	./glm/fwd.hpp	/^	typedef vec<4, f64, highp>			highp_dvec4;$/;"	t	namespace:glm	typeref:typename:vec<4,f64,highp>
highp_f32	./glm/fwd.hpp	/^	typedef float					highp_f32;$/;"	t	namespace:glm	typeref:typename:float
highp_f32	./glm/gtc/type_precision.hpp	/^	typedef float32 highp_f32;$/;"	t	namespace:glm	typeref:typename:float32
highp_f32mat2	./glm/fwd.hpp	/^	typedef mat<2, 2, f32, highp>		highp_f32mat2;$/;"	t	namespace:glm	typeref:typename:mat<2,2,f32,highp>
highp_f32mat2	./glm/gtc/type_precision.hpp	/^	typedef highp_f32mat2x2 highp_f32mat2;$/;"	t	namespace:glm	typeref:typename:highp_f32mat2x2
highp_f32mat2x2	./glm/fwd.hpp	/^	typedef mat<2, 2, f32, highp>		highp_f32mat2x2;$/;"	t	namespace:glm	typeref:typename:mat<2,2,f32,highp>
highp_f32mat2x2	./glm/gtc/type_precision.hpp	/^	typedef mat<2, 2, f32, highp> highp_f32mat2x2;$/;"	t	namespace:glm	typeref:typename:mat<2,2,f32,highp>
highp_f32mat2x3	./glm/fwd.hpp	/^	typedef mat<2, 3, f32, highp>		highp_f32mat2x3;$/;"	t	namespace:glm	typeref:typename:mat<2,3,f32,highp>
highp_f32mat2x3	./glm/gtc/type_precision.hpp	/^	typedef mat<2, 3, f32, highp> highp_f32mat2x3;$/;"	t	namespace:glm	typeref:typename:mat<2,3,f32,highp>
highp_f32mat2x4	./glm/fwd.hpp	/^	typedef mat<2, 4, f32, highp>		highp_f32mat2x4;$/;"	t	namespace:glm	typeref:typename:mat<2,4,f32,highp>
highp_f32mat2x4	./glm/gtc/type_precision.hpp	/^	typedef mat<2, 4, f32, highp> highp_f32mat2x4;$/;"	t	namespace:glm	typeref:typename:mat<2,4,f32,highp>
highp_f32mat3	./glm/fwd.hpp	/^	typedef mat<3, 3, f32, highp>		highp_f32mat3;$/;"	t	namespace:glm	typeref:typename:mat<3,3,f32,highp>
highp_f32mat3	./glm/gtc/type_precision.hpp	/^	typedef highp_f32mat3x3 highp_f32mat3;$/;"	t	namespace:glm	typeref:typename:highp_f32mat3x3
highp_f32mat3x2	./glm/fwd.hpp	/^	typedef mat<3, 2, f32, highp>		highp_f32mat3x2;$/;"	t	namespace:glm	typeref:typename:mat<3,2,f32,highp>
highp_f32mat3x2	./glm/gtc/type_precision.hpp	/^	typedef mat<3, 2, f32, highp> highp_f32mat3x2;$/;"	t	namespace:glm	typeref:typename:mat<3,2,f32,highp>
highp_f32mat3x3	./glm/fwd.hpp	/^	typedef mat<3, 3, f32, highp>		highp_f32mat3x3;$/;"	t	namespace:glm	typeref:typename:mat<3,3,f32,highp>
highp_f32mat3x3	./glm/gtc/type_precision.hpp	/^	typedef mat<3, 3, f32, highp> highp_f32mat3x3;$/;"	t	namespace:glm	typeref:typename:mat<3,3,f32,highp>
highp_f32mat3x4	./glm/fwd.hpp	/^	typedef mat<3, 4, f32, highp>		highp_f32mat3x4;$/;"	t	namespace:glm	typeref:typename:mat<3,4,f32,highp>
highp_f32mat3x4	./glm/gtc/type_precision.hpp	/^	typedef mat<3, 4, f32, highp> highp_f32mat3x4;$/;"	t	namespace:glm	typeref:typename:mat<3,4,f32,highp>
highp_f32mat4	./glm/fwd.hpp	/^	typedef mat<4, 4, f32, highp>		highp_f32mat4;$/;"	t	namespace:glm	typeref:typename:mat<4,4,f32,highp>
highp_f32mat4	./glm/gtc/type_precision.hpp	/^	typedef highp_f32mat4x4 highp_f32mat4;$/;"	t	namespace:glm	typeref:typename:highp_f32mat4x4
highp_f32mat4x2	./glm/fwd.hpp	/^	typedef mat<4, 2, f32, highp>		highp_f32mat4x2;$/;"	t	namespace:glm	typeref:typename:mat<4,2,f32,highp>
highp_f32mat4x2	./glm/gtc/type_precision.hpp	/^	typedef mat<4, 2, f32, highp> highp_f32mat4x2;$/;"	t	namespace:glm	typeref:typename:mat<4,2,f32,highp>
highp_f32mat4x3	./glm/fwd.hpp	/^	typedef mat<4, 3, f32, highp>		highp_f32mat4x3;$/;"	t	namespace:glm	typeref:typename:mat<4,3,f32,highp>
highp_f32mat4x3	./glm/gtc/type_precision.hpp	/^	typedef mat<4, 3, f32, highp> highp_f32mat4x3;$/;"	t	namespace:glm	typeref:typename:mat<4,3,f32,highp>
highp_f32mat4x4	./glm/fwd.hpp	/^	typedef mat<4, 4, f32, highp>		highp_f32mat4x4;$/;"	t	namespace:glm	typeref:typename:mat<4,4,f32,highp>
highp_f32mat4x4	./glm/gtc/type_precision.hpp	/^	typedef mat<4, 4, f32, highp> highp_f32mat4x4;$/;"	t	namespace:glm	typeref:typename:mat<4,4,f32,highp>
highp_f32quat	./glm/fwd.hpp	/^	typedef qua<f32, highp>				highp_f32quat;$/;"	t	namespace:glm	typeref:typename:qua<f32,highp>
highp_f32quat	./glm/gtc/type_precision.hpp	/^	typedef qua<f32, highp> highp_f32quat;$/;"	t	namespace:glm	typeref:typename:qua<f32,highp>
highp_f32vec1	./glm/fwd.hpp	/^	typedef vec<1, f32, highp>			highp_f32vec1;$/;"	t	namespace:glm	typeref:typename:vec<1,f32,highp>
highp_f32vec1	./glm/gtc/type_precision.hpp	/^	typedef vec<1, f32, highp> highp_f32vec1;$/;"	t	namespace:glm	typeref:typename:vec<1,f32,highp>
highp_f32vec2	./glm/fwd.hpp	/^	typedef vec<2, f32, highp>			highp_f32vec2;$/;"	t	namespace:glm	typeref:typename:vec<2,f32,highp>
highp_f32vec2	./glm/gtc/type_precision.hpp	/^	typedef vec<2, f32, highp> highp_f32vec2;$/;"	t	namespace:glm	typeref:typename:vec<2,f32,highp>
highp_f32vec3	./glm/fwd.hpp	/^	typedef vec<3, f32, highp>			highp_f32vec3;$/;"	t	namespace:glm	typeref:typename:vec<3,f32,highp>
highp_f32vec3	./glm/gtc/type_precision.hpp	/^	typedef vec<3, f32, highp> highp_f32vec3;$/;"	t	namespace:glm	typeref:typename:vec<3,f32,highp>
highp_f32vec4	./glm/fwd.hpp	/^	typedef vec<4, f32, highp>			highp_f32vec4;$/;"	t	namespace:glm	typeref:typename:vec<4,f32,highp>
highp_f32vec4	./glm/gtc/type_precision.hpp	/^	typedef vec<4, f32, highp> highp_f32vec4;$/;"	t	namespace:glm	typeref:typename:vec<4,f32,highp>
highp_f64	./glm/fwd.hpp	/^	typedef double					highp_f64;$/;"	t	namespace:glm	typeref:typename:double
highp_f64	./glm/gtc/type_precision.hpp	/^	typedef float64 highp_f64;$/;"	t	namespace:glm	typeref:typename:float64
highp_f64mat2	./glm/fwd.hpp	/^	typedef mat<2, 2, f64, highp>		highp_f64mat2;$/;"	t	namespace:glm	typeref:typename:mat<2,2,f64,highp>
highp_f64mat2	./glm/gtc/type_precision.hpp	/^	typedef highp_f64mat2x2 highp_f64mat2;$/;"	t	namespace:glm	typeref:typename:highp_f64mat2x2
highp_f64mat2x2	./glm/fwd.hpp	/^	typedef mat<2, 2, f64, highp>		highp_f64mat2x2;$/;"	t	namespace:glm	typeref:typename:mat<2,2,f64,highp>
highp_f64mat2x2	./glm/gtc/type_precision.hpp	/^	typedef mat<2, 2, f64, highp> highp_f64mat2x2;$/;"	t	namespace:glm	typeref:typename:mat<2,2,f64,highp>
highp_f64mat2x3	./glm/fwd.hpp	/^	typedef mat<2, 3, f64, highp>		highp_f64mat2x3;$/;"	t	namespace:glm	typeref:typename:mat<2,3,f64,highp>
highp_f64mat2x3	./glm/gtc/type_precision.hpp	/^	typedef mat<2, 3, f64, highp> highp_f64mat2x3;$/;"	t	namespace:glm	typeref:typename:mat<2,3,f64,highp>
highp_f64mat2x4	./glm/fwd.hpp	/^	typedef mat<2, 4, f64, highp>		highp_f64mat2x4;$/;"	t	namespace:glm	typeref:typename:mat<2,4,f64,highp>
highp_f64mat2x4	./glm/gtc/type_precision.hpp	/^	typedef mat<2, 4, f64, highp> highp_f64mat2x4;$/;"	t	namespace:glm	typeref:typename:mat<2,4,f64,highp>
highp_f64mat3	./glm/fwd.hpp	/^	typedef mat<3, 3, f64, highp>		highp_f64mat3;$/;"	t	namespace:glm	typeref:typename:mat<3,3,f64,highp>
highp_f64mat3	./glm/gtc/type_precision.hpp	/^	typedef highp_f64mat3x3 highp_f64mat3;$/;"	t	namespace:glm	typeref:typename:highp_f64mat3x3
highp_f64mat3x2	./glm/fwd.hpp	/^	typedef mat<3, 2, f64, highp>		highp_f64mat3x2;$/;"	t	namespace:glm	typeref:typename:mat<3,2,f64,highp>
highp_f64mat3x2	./glm/gtc/type_precision.hpp	/^	typedef mat<3, 2, f64, highp> highp_f64mat3x2;$/;"	t	namespace:glm	typeref:typename:mat<3,2,f64,highp>
highp_f64mat3x3	./glm/fwd.hpp	/^	typedef mat<3, 3, f64, highp>		highp_f64mat3x3;$/;"	t	namespace:glm	typeref:typename:mat<3,3,f64,highp>
highp_f64mat3x3	./glm/gtc/type_precision.hpp	/^	typedef mat<3, 3, f64, highp> highp_f64mat3x3;$/;"	t	namespace:glm	typeref:typename:mat<3,3,f64,highp>
highp_f64mat3x4	./glm/fwd.hpp	/^	typedef mat<3, 4, f64, highp>		highp_f64mat3x4;$/;"	t	namespace:glm	typeref:typename:mat<3,4,f64,highp>
highp_f64mat3x4	./glm/gtc/type_precision.hpp	/^	typedef mat<3, 4, f64, highp> highp_f64mat3x4;$/;"	t	namespace:glm	typeref:typename:mat<3,4,f64,highp>
highp_f64mat4	./glm/fwd.hpp	/^	typedef mat<4, 4, f64, highp>		highp_f64mat4;$/;"	t	namespace:glm	typeref:typename:mat<4,4,f64,highp>
highp_f64mat4	./glm/gtc/type_precision.hpp	/^	typedef highp_f64mat4x4 highp_f64mat4;$/;"	t	namespace:glm	typeref:typename:highp_f64mat4x4
highp_f64mat4x2	./glm/fwd.hpp	/^	typedef mat<4, 2, f64, highp>		highp_f64mat4x2;$/;"	t	namespace:glm	typeref:typename:mat<4,2,f64,highp>
highp_f64mat4x2	./glm/gtc/type_precision.hpp	/^	typedef mat<4, 2, f64, highp> highp_f64mat4x2;$/;"	t	namespace:glm	typeref:typename:mat<4,2,f64,highp>
highp_f64mat4x3	./glm/fwd.hpp	/^	typedef mat<4, 3, f64, highp>		highp_f64mat4x3;$/;"	t	namespace:glm	typeref:typename:mat<4,3,f64,highp>
highp_f64mat4x3	./glm/gtc/type_precision.hpp	/^	typedef mat<4, 3, f64, highp> highp_f64mat4x3;$/;"	t	namespace:glm	typeref:typename:mat<4,3,f64,highp>
highp_f64mat4x4	./glm/fwd.hpp	/^	typedef mat<4, 4, f64, highp>		highp_f64mat4x4;$/;"	t	namespace:glm	typeref:typename:mat<4,4,f64,highp>
highp_f64mat4x4	./glm/gtc/type_precision.hpp	/^	typedef mat<4, 4, f64, highp> highp_f64mat4x4;$/;"	t	namespace:glm	typeref:typename:mat<4,4,f64,highp>
highp_f64quat	./glm/fwd.hpp	/^	typedef qua<f64, highp>				highp_f64quat;$/;"	t	namespace:glm	typeref:typename:qua<f64,highp>
highp_f64quat	./glm/gtc/type_precision.hpp	/^	typedef qua<f64, highp> highp_f64quat;$/;"	t	namespace:glm	typeref:typename:qua<f64,highp>
highp_f64vec1	./glm/fwd.hpp	/^	typedef vec<1, f64, highp>			highp_f64vec1;$/;"	t	namespace:glm	typeref:typename:vec<1,f64,highp>
highp_f64vec1	./glm/gtc/type_precision.hpp	/^	typedef vec<1, f64, highp> highp_f64vec1;$/;"	t	namespace:glm	typeref:typename:vec<1,f64,highp>
highp_f64vec2	./glm/fwd.hpp	/^	typedef vec<2, f64, highp>			highp_f64vec2;$/;"	t	namespace:glm	typeref:typename:vec<2,f64,highp>
highp_f64vec2	./glm/gtc/type_precision.hpp	/^	typedef vec<2, f64, highp> highp_f64vec2;$/;"	t	namespace:glm	typeref:typename:vec<2,f64,highp>
highp_f64vec3	./glm/fwd.hpp	/^	typedef vec<3, f64, highp>			highp_f64vec3;$/;"	t	namespace:glm	typeref:typename:vec<3,f64,highp>
highp_f64vec3	./glm/gtc/type_precision.hpp	/^	typedef vec<3, f64, highp> highp_f64vec3;$/;"	t	namespace:glm	typeref:typename:vec<3,f64,highp>
highp_f64vec4	./glm/fwd.hpp	/^	typedef vec<4, f64, highp>			highp_f64vec4;$/;"	t	namespace:glm	typeref:typename:vec<4,f64,highp>
highp_f64vec4	./glm/gtc/type_precision.hpp	/^	typedef vec<4, f64, highp> highp_f64vec4;$/;"	t	namespace:glm	typeref:typename:vec<4,f64,highp>
highp_fdualquat	./glm/gtx/dual_quaternion.hpp	/^	typedef tdualquat<float, highp>		highp_fdualquat;$/;"	t	namespace:glm	typeref:typename:tdualquat<float,highp>
highp_float32	./glm/fwd.hpp	/^	typedef float					highp_float32;$/;"	t	namespace:glm	typeref:typename:float
highp_float32	./glm/gtc/type_precision.hpp	/^	typedef float32 highp_float32;$/;"	t	namespace:glm	typeref:typename:float32
highp_float32_t	./glm/fwd.hpp	/^	typedef float					highp_float32_t;$/;"	t	namespace:glm	typeref:typename:float
highp_float32_t	./glm/gtc/type_precision.hpp	/^	typedef float32 highp_float32_t;$/;"	t	namespace:glm	typeref:typename:float32
highp_float64	./glm/fwd.hpp	/^	typedef double					highp_float64;$/;"	t	namespace:glm	typeref:typename:double
highp_float64	./glm/gtc/type_precision.hpp	/^	typedef float64 highp_float64;$/;"	t	namespace:glm	typeref:typename:float64
highp_float64_t	./glm/fwd.hpp	/^	typedef double					highp_float64_t;$/;"	t	namespace:glm	typeref:typename:double
highp_float64_t	./glm/gtc/type_precision.hpp	/^	typedef float64 highp_float64_t;$/;"	t	namespace:glm	typeref:typename:float64
highp_fmat2	./glm/fwd.hpp	/^	typedef mat<2, 2, f32, highp>		highp_fmat2;$/;"	t	namespace:glm	typeref:typename:mat<2,2,f32,highp>
highp_fmat2	./glm/gtc/type_precision.hpp	/^	typedef highp_fmat2x2 highp_fmat2;$/;"	t	namespace:glm	typeref:typename:highp_fmat2x2
highp_fmat2x2	./glm/fwd.hpp	/^	typedef mat<2, 2, f32, highp>		highp_fmat2x2;$/;"	t	namespace:glm	typeref:typename:mat<2,2,f32,highp>
highp_fmat2x2	./glm/gtc/type_precision.hpp	/^	typedef mat<2, 2, f32, highp> highp_fmat2x2;$/;"	t	namespace:glm	typeref:typename:mat<2,2,f32,highp>
highp_fmat2x3	./glm/fwd.hpp	/^	typedef mat<2, 3, f32, highp>		highp_fmat2x3;$/;"	t	namespace:glm	typeref:typename:mat<2,3,f32,highp>
highp_fmat2x3	./glm/gtc/type_precision.hpp	/^	typedef mat<2, 3, f32, highp> highp_fmat2x3;$/;"	t	namespace:glm	typeref:typename:mat<2,3,f32,highp>
highp_fmat2x4	./glm/fwd.hpp	/^	typedef mat<2, 4, f32, highp>		highp_fmat2x4;$/;"	t	namespace:glm	typeref:typename:mat<2,4,f32,highp>
highp_fmat2x4	./glm/gtc/type_precision.hpp	/^	typedef mat<2, 4, f32, highp> highp_fmat2x4;$/;"	t	namespace:glm	typeref:typename:mat<2,4,f32,highp>
highp_fmat3	./glm/fwd.hpp	/^	typedef mat<3, 3, f32, highp>		highp_fmat3;$/;"	t	namespace:glm	typeref:typename:mat<3,3,f32,highp>
highp_fmat3	./glm/gtc/type_precision.hpp	/^	typedef highp_fmat3x3 highp_fmat3;$/;"	t	namespace:glm	typeref:typename:highp_fmat3x3
highp_fmat3x2	./glm/fwd.hpp	/^	typedef mat<3, 2, f32, highp>		highp_fmat3x2;$/;"	t	namespace:glm	typeref:typename:mat<3,2,f32,highp>
highp_fmat3x2	./glm/gtc/type_precision.hpp	/^	typedef mat<3, 2, f32, highp> highp_fmat3x2;$/;"	t	namespace:glm	typeref:typename:mat<3,2,f32,highp>
highp_fmat3x3	./glm/fwd.hpp	/^	typedef mat<3, 3, f32, highp>		highp_fmat3x3;$/;"	t	namespace:glm	typeref:typename:mat<3,3,f32,highp>
highp_fmat3x3	./glm/gtc/type_precision.hpp	/^	typedef mat<3, 3, f32, highp> highp_fmat3x3;$/;"	t	namespace:glm	typeref:typename:mat<3,3,f32,highp>
highp_fmat3x4	./glm/fwd.hpp	/^	typedef mat<3, 4, f32, highp>		highp_fmat3x4;$/;"	t	namespace:glm	typeref:typename:mat<3,4,f32,highp>
highp_fmat3x4	./glm/gtc/type_precision.hpp	/^	typedef mat<3, 4, f32, highp> highp_fmat3x4;$/;"	t	namespace:glm	typeref:typename:mat<3,4,f32,highp>
highp_fmat4	./glm/fwd.hpp	/^	typedef mat<4, 4, f32, highp>		highp_fmat4;$/;"	t	namespace:glm	typeref:typename:mat<4,4,f32,highp>
highp_fmat4	./glm/gtc/type_precision.hpp	/^	typedef highp_fmat4x4 highp_fmat4;$/;"	t	namespace:glm	typeref:typename:highp_fmat4x4
highp_fmat4x2	./glm/fwd.hpp	/^	typedef mat<4, 2, f32, highp>		highp_fmat4x2;$/;"	t	namespace:glm	typeref:typename:mat<4,2,f32,highp>
highp_fmat4x2	./glm/gtc/type_precision.hpp	/^	typedef mat<4, 2, f32, highp> highp_fmat4x2;$/;"	t	namespace:glm	typeref:typename:mat<4,2,f32,highp>
highp_fmat4x3	./glm/fwd.hpp	/^	typedef mat<4, 3, f32, highp>		highp_fmat4x3;$/;"	t	namespace:glm	typeref:typename:mat<4,3,f32,highp>
highp_fmat4x3	./glm/gtc/type_precision.hpp	/^	typedef mat<4, 3, f32, highp> highp_fmat4x3;$/;"	t	namespace:glm	typeref:typename:mat<4,3,f32,highp>
highp_fmat4x4	./glm/fwd.hpp	/^	typedef mat<4, 4, f32, highp>		highp_fmat4x4;$/;"	t	namespace:glm	typeref:typename:mat<4,4,f32,highp>
highp_fmat4x4	./glm/gtc/type_precision.hpp	/^	typedef mat<4, 4, f32, highp> highp_fmat4x4;$/;"	t	namespace:glm	typeref:typename:mat<4,4,f32,highp>
highp_fquat	./glm/fwd.hpp	/^	typedef qua<float, highp>			highp_fquat;$/;"	t	namespace:glm	typeref:typename:qua<float,highp>
highp_fvec1	./glm/fwd.hpp	/^	typedef vec<1, float, highp>		highp_fvec1;$/;"	t	namespace:glm	typeref:typename:vec<1,float,highp>
highp_fvec1	./glm/gtc/type_precision.hpp	/^	typedef vec<1, float, highp> highp_fvec1;$/;"	t	namespace:glm	typeref:typename:vec<1,float,highp>
highp_fvec2	./glm/fwd.hpp	/^	typedef vec<2, float, highp>		highp_fvec2;$/;"	t	namespace:glm	typeref:typename:vec<2,float,highp>
highp_fvec2	./glm/gtc/type_precision.hpp	/^	typedef vec<2, float, highp> highp_fvec2;$/;"	t	namespace:glm	typeref:typename:vec<2,float,highp>
highp_fvec3	./glm/fwd.hpp	/^	typedef vec<3, float, highp>		highp_fvec3;$/;"	t	namespace:glm	typeref:typename:vec<3,float,highp>
highp_fvec3	./glm/gtc/type_precision.hpp	/^	typedef vec<3, float, highp> highp_fvec3;$/;"	t	namespace:glm	typeref:typename:vec<3,float,highp>
highp_fvec4	./glm/fwd.hpp	/^	typedef vec<4, float, highp>		highp_fvec4;$/;"	t	namespace:glm	typeref:typename:vec<4,float,highp>
highp_fvec4	./glm/gtc/type_precision.hpp	/^	typedef vec<4, float, highp> highp_fvec4;$/;"	t	namespace:glm	typeref:typename:vec<4,float,highp>
highp_i16	./glm/fwd.hpp	/^	typedef int16					highp_i16;$/;"	t	namespace:glm	typeref:typename:int16
highp_i16	./glm/gtc/type_precision.hpp	/^	typedef detail::int16 highp_i16;$/;"	t	namespace:glm	typeref:typename:detail::int16
highp_i16mat2x2	./glm/fwd.hpp	/^	typedef mat<2, 2, int16, highp>		highp_i16mat2x2;$/;"	t	namespace:glm	typeref:typename:mat<2,2,int16,highp>
highp_i16mat2x3	./glm/fwd.hpp	/^	typedef mat<2, 3, int16, highp>		highp_i16mat2x3;$/;"	t	namespace:glm	typeref:typename:mat<2,3,int16,highp>
highp_i16mat2x4	./glm/fwd.hpp	/^	typedef mat<2, 4, int16, highp>		highp_i16mat2x4;$/;"	t	namespace:glm	typeref:typename:mat<2,4,int16,highp>
highp_i16mat3x2	./glm/fwd.hpp	/^	typedef mat<3, 2, int16, highp>		highp_i16mat3x2;$/;"	t	namespace:glm	typeref:typename:mat<3,2,int16,highp>
highp_i16mat3x3	./glm/fwd.hpp	/^	typedef mat<3, 3, int16, highp>		highp_i16mat3x3;$/;"	t	namespace:glm	typeref:typename:mat<3,3,int16,highp>
highp_i16mat3x4	./glm/fwd.hpp	/^	typedef mat<3, 4, int16, highp>		highp_i16mat3x4;$/;"	t	namespace:glm	typeref:typename:mat<3,4,int16,highp>
highp_i16mat4x2	./glm/fwd.hpp	/^	typedef mat<4, 2, int16, highp>		highp_i16mat4x2;$/;"	t	namespace:glm	typeref:typename:mat<4,2,int16,highp>
highp_i16mat4x3	./glm/fwd.hpp	/^	typedef mat<4, 3, int16, highp>		highp_i16mat4x3;$/;"	t	namespace:glm	typeref:typename:mat<4,3,int16,highp>
highp_i16mat4x4	./glm/fwd.hpp	/^	typedef mat<4, 4, int16, highp>		highp_i16mat4x4;$/;"	t	namespace:glm	typeref:typename:mat<4,4,int16,highp>
highp_i16vec1	./glm/fwd.hpp	/^	typedef vec<1, i16, highp>		highp_i16vec1;$/;"	t	namespace:glm	typeref:typename:vec<1,i16,highp>
highp_i16vec1	./glm/gtc/type_precision.hpp	/^	typedef vec<1, i16, highp>		highp_i16vec1;$/;"	t	namespace:glm	typeref:typename:vec<1,i16,highp>
highp_i16vec2	./glm/fwd.hpp	/^	typedef vec<2, i16, highp>		highp_i16vec2;$/;"	t	namespace:glm	typeref:typename:vec<2,i16,highp>
highp_i16vec2	./glm/gtc/type_precision.hpp	/^	typedef vec<2, i16, highp>		highp_i16vec2;$/;"	t	namespace:glm	typeref:typename:vec<2,i16,highp>
highp_i16vec3	./glm/fwd.hpp	/^	typedef vec<3, i16, highp>		highp_i16vec3;$/;"	t	namespace:glm	typeref:typename:vec<3,i16,highp>
highp_i16vec3	./glm/gtc/type_precision.hpp	/^	typedef vec<3, i16, highp>		highp_i16vec3;$/;"	t	namespace:glm	typeref:typename:vec<3,i16,highp>
highp_i16vec4	./glm/fwd.hpp	/^	typedef vec<4, i16, highp>		highp_i16vec4;$/;"	t	namespace:glm	typeref:typename:vec<4,i16,highp>
highp_i16vec4	./glm/gtc/type_precision.hpp	/^	typedef vec<4, i16, highp>		highp_i16vec4;$/;"	t	namespace:glm	typeref:typename:vec<4,i16,highp>
highp_i32	./glm/fwd.hpp	/^	typedef int32					highp_i32;$/;"	t	namespace:glm	typeref:typename:int32
highp_i32	./glm/gtc/type_precision.hpp	/^	typedef detail::int32 highp_i32;$/;"	t	namespace:glm	typeref:typename:detail::int32
highp_i32mat2x2	./glm/fwd.hpp	/^	typedef mat<2, 2, int32, highp>		highp_i32mat2x2;$/;"	t	namespace:glm	typeref:typename:mat<2,2,int32,highp>
highp_i32mat2x3	./glm/fwd.hpp	/^	typedef mat<2, 3, int32, highp>		highp_i32mat2x3;$/;"	t	namespace:glm	typeref:typename:mat<2,3,int32,highp>
highp_i32mat2x4	./glm/fwd.hpp	/^	typedef mat<2, 4, int32, highp>		highp_i32mat2x4;$/;"	t	namespace:glm	typeref:typename:mat<2,4,int32,highp>
highp_i32mat3x2	./glm/fwd.hpp	/^	typedef mat<3, 2, int32, highp>		highp_i32mat3x2;$/;"	t	namespace:glm	typeref:typename:mat<3,2,int32,highp>
highp_i32mat3x3	./glm/fwd.hpp	/^	typedef mat<3, 3, int32, highp>		highp_i32mat3x3;$/;"	t	namespace:glm	typeref:typename:mat<3,3,int32,highp>
highp_i32mat3x4	./glm/fwd.hpp	/^	typedef mat<3, 4, int32, highp>		highp_i32mat3x4;$/;"	t	namespace:glm	typeref:typename:mat<3,4,int32,highp>
highp_i32mat4x2	./glm/fwd.hpp	/^	typedef mat<4, 2, int32, highp>		highp_i32mat4x2;$/;"	t	namespace:glm	typeref:typename:mat<4,2,int32,highp>
highp_i32mat4x3	./glm/fwd.hpp	/^	typedef mat<4, 3, int32, highp>		highp_i32mat4x3;$/;"	t	namespace:glm	typeref:typename:mat<4,3,int32,highp>
highp_i32mat4x4	./glm/fwd.hpp	/^	typedef mat<4, 4, int32, highp>		highp_i32mat4x4;$/;"	t	namespace:glm	typeref:typename:mat<4,4,int32,highp>
highp_i32vec1	./glm/fwd.hpp	/^	typedef vec<1, i32, highp>		highp_i32vec1;$/;"	t	namespace:glm	typeref:typename:vec<1,i32,highp>
highp_i32vec1	./glm/gtc/type_precision.hpp	/^	typedef vec<1, i32, highp>		highp_i32vec1;$/;"	t	namespace:glm	typeref:typename:vec<1,i32,highp>
highp_i32vec2	./glm/fwd.hpp	/^	typedef vec<2, i32, highp>		highp_i32vec2;$/;"	t	namespace:glm	typeref:typename:vec<2,i32,highp>
highp_i32vec2	./glm/gtc/type_precision.hpp	/^	typedef vec<2, i32, highp>		highp_i32vec2;$/;"	t	namespace:glm	typeref:typename:vec<2,i32,highp>
highp_i32vec3	./glm/fwd.hpp	/^	typedef vec<3, i32, highp>		highp_i32vec3;$/;"	t	namespace:glm	typeref:typename:vec<3,i32,highp>
highp_i32vec3	./glm/gtc/type_precision.hpp	/^	typedef vec<3, i32, highp>		highp_i32vec3;$/;"	t	namespace:glm	typeref:typename:vec<3,i32,highp>
highp_i32vec4	./glm/fwd.hpp	/^	typedef vec<4, i32, highp>		highp_i32vec4;$/;"	t	namespace:glm	typeref:typename:vec<4,i32,highp>
highp_i32vec4	./glm/gtc/type_precision.hpp	/^	typedef vec<4, i32, highp>		highp_i32vec4;$/;"	t	namespace:glm	typeref:typename:vec<4,i32,highp>
highp_i64	./glm/fwd.hpp	/^	typedef int64					highp_i64;$/;"	t	namespace:glm	typeref:typename:int64
highp_i64	./glm/gtc/type_precision.hpp	/^	typedef detail::int64 highp_i64;$/;"	t	namespace:glm	typeref:typename:detail::int64
highp_i64mat2x2	./glm/fwd.hpp	/^	typedef mat<2, 2, int64, highp>		highp_i64mat2x2;$/;"	t	namespace:glm	typeref:typename:mat<2,2,int64,highp>
highp_i64mat2x3	./glm/fwd.hpp	/^	typedef mat<2, 3, int64, highp>		highp_i64mat2x3;$/;"	t	namespace:glm	typeref:typename:mat<2,3,int64,highp>
highp_i64mat2x4	./glm/fwd.hpp	/^	typedef mat<2, 4, int64, highp>		highp_i64mat2x4;$/;"	t	namespace:glm	typeref:typename:mat<2,4,int64,highp>
highp_i64mat3x2	./glm/fwd.hpp	/^	typedef mat<3, 2, int64, highp>		highp_i64mat3x2;$/;"	t	namespace:glm	typeref:typename:mat<3,2,int64,highp>
highp_i64mat3x3	./glm/fwd.hpp	/^	typedef mat<3, 3, int64, highp>		highp_i64mat3x3;$/;"	t	namespace:glm	typeref:typename:mat<3,3,int64,highp>
highp_i64mat3x4	./glm/fwd.hpp	/^	typedef mat<3, 4, int64, highp>		highp_i64mat3x4;$/;"	t	namespace:glm	typeref:typename:mat<3,4,int64,highp>
highp_i64mat4x2	./glm/fwd.hpp	/^	typedef mat<4, 2, int64, highp>		highp_i64mat4x2;$/;"	t	namespace:glm	typeref:typename:mat<4,2,int64,highp>
highp_i64mat4x3	./glm/fwd.hpp	/^	typedef mat<4, 3, int64, highp>		highp_i64mat4x3;$/;"	t	namespace:glm	typeref:typename:mat<4,3,int64,highp>
highp_i64mat4x4	./glm/fwd.hpp	/^	typedef mat<4, 4, int64, highp>		highp_i64mat4x4;$/;"	t	namespace:glm	typeref:typename:mat<4,4,int64,highp>
highp_i64vec1	./glm/fwd.hpp	/^	typedef vec<1, i64, highp>		highp_i64vec1;$/;"	t	namespace:glm	typeref:typename:vec<1,i64,highp>
highp_i64vec1	./glm/gtc/type_precision.hpp	/^	typedef vec<1, i64, highp>		highp_i64vec1;$/;"	t	namespace:glm	typeref:typename:vec<1,i64,highp>
highp_i64vec2	./glm/fwd.hpp	/^	typedef vec<2, i64, highp>		highp_i64vec2;$/;"	t	namespace:glm	typeref:typename:vec<2,i64,highp>
highp_i64vec2	./glm/gtc/type_precision.hpp	/^	typedef vec<2, i64, highp>		highp_i64vec2;$/;"	t	namespace:glm	typeref:typename:vec<2,i64,highp>
highp_i64vec3	./glm/fwd.hpp	/^	typedef vec<3, i64, highp>		highp_i64vec3;$/;"	t	namespace:glm	typeref:typename:vec<3,i64,highp>
highp_i64vec3	./glm/gtc/type_precision.hpp	/^	typedef vec<3, i64, highp>		highp_i64vec3;$/;"	t	namespace:glm	typeref:typename:vec<3,i64,highp>
highp_i64vec4	./glm/fwd.hpp	/^	typedef vec<4, i64, highp>		highp_i64vec4;$/;"	t	namespace:glm	typeref:typename:vec<4,i64,highp>
highp_i64vec4	./glm/gtc/type_precision.hpp	/^	typedef vec<4, i64, highp>		highp_i64vec4;$/;"	t	namespace:glm	typeref:typename:vec<4,i64,highp>
highp_i8	./glm/fwd.hpp	/^	typedef int8					highp_i8;$/;"	t	namespace:glm	typeref:typename:int8
highp_i8	./glm/gtc/type_precision.hpp	/^	typedef detail::int8 highp_i8;$/;"	t	namespace:glm	typeref:typename:detail::int8
highp_i8mat2x2	./glm/fwd.hpp	/^	typedef mat<2, 2, int8, highp>		highp_i8mat2x2;$/;"	t	namespace:glm	typeref:typename:mat<2,2,int8,highp>
highp_i8mat2x3	./glm/fwd.hpp	/^	typedef mat<2, 3, int8, highp>		highp_i8mat2x3;$/;"	t	namespace:glm	typeref:typename:mat<2,3,int8,highp>
highp_i8mat2x4	./glm/fwd.hpp	/^	typedef mat<2, 4, int8, highp>		highp_i8mat2x4;$/;"	t	namespace:glm	typeref:typename:mat<2,4,int8,highp>
highp_i8mat3x2	./glm/fwd.hpp	/^	typedef mat<3, 2, int8, highp>		highp_i8mat3x2;$/;"	t	namespace:glm	typeref:typename:mat<3,2,int8,highp>
highp_i8mat3x3	./glm/fwd.hpp	/^	typedef mat<3, 3, int8, highp>		highp_i8mat3x3;$/;"	t	namespace:glm	typeref:typename:mat<3,3,int8,highp>
highp_i8mat3x4	./glm/fwd.hpp	/^	typedef mat<3, 4, int8, highp>		highp_i8mat3x4;$/;"	t	namespace:glm	typeref:typename:mat<3,4,int8,highp>
highp_i8mat4x2	./glm/fwd.hpp	/^	typedef mat<4, 2, int8, highp>		highp_i8mat4x2;$/;"	t	namespace:glm	typeref:typename:mat<4,2,int8,highp>
highp_i8mat4x3	./glm/fwd.hpp	/^	typedef mat<4, 3, int8, highp>		highp_i8mat4x3;$/;"	t	namespace:glm	typeref:typename:mat<4,3,int8,highp>
highp_i8mat4x4	./glm/fwd.hpp	/^	typedef mat<4, 4, int8, highp>		highp_i8mat4x4;$/;"	t	namespace:glm	typeref:typename:mat<4,4,int8,highp>
highp_i8vec1	./glm/fwd.hpp	/^	typedef vec<1, i8, highp>		highp_i8vec1;$/;"	t	namespace:glm	typeref:typename:vec<1,i8,highp>
highp_i8vec1	./glm/gtc/type_precision.hpp	/^	typedef vec<1, i8, highp>		highp_i8vec1;$/;"	t	namespace:glm	typeref:typename:vec<1,i8,highp>
highp_i8vec2	./glm/fwd.hpp	/^	typedef vec<2, i8, highp>		highp_i8vec2;$/;"	t	namespace:glm	typeref:typename:vec<2,i8,highp>
highp_i8vec2	./glm/gtc/type_precision.hpp	/^	typedef vec<2, i8, highp>		highp_i8vec2;$/;"	t	namespace:glm	typeref:typename:vec<2,i8,highp>
highp_i8vec3	./glm/fwd.hpp	/^	typedef vec<3, i8, highp>		highp_i8vec3;$/;"	t	namespace:glm	typeref:typename:vec<3,i8,highp>
highp_i8vec3	./glm/gtc/type_precision.hpp	/^	typedef vec<3, i8, highp>		highp_i8vec3;$/;"	t	namespace:glm	typeref:typename:vec<3,i8,highp>
highp_i8vec4	./glm/fwd.hpp	/^	typedef vec<4, i8, highp>		highp_i8vec4;$/;"	t	namespace:glm	typeref:typename:vec<4,i8,highp>
highp_i8vec4	./glm/gtc/type_precision.hpp	/^	typedef vec<4, i8, highp>		highp_i8vec4;$/;"	t	namespace:glm	typeref:typename:vec<4,i8,highp>
highp_imat2	./glm/gtc/matrix_integer.hpp	/^	typedef mat<2, 2, int, highp>				highp_imat2;$/;"	t	namespace:glm	typeref:typename:mat<2,2,int,highp>
highp_imat2x2	./glm/fwd.hpp	/^	typedef mat<2, 2, int, highp>		highp_imat2x2;$/;"	t	namespace:glm	typeref:typename:mat<2,2,int,highp>
highp_imat2x2	./glm/gtc/matrix_integer.hpp	/^	typedef mat<2, 2, int, highp>				highp_imat2x2;$/;"	t	namespace:glm	typeref:typename:mat<2,2,int,highp>
highp_imat2x3	./glm/fwd.hpp	/^	typedef mat<2, 3, int, highp>		highp_imat2x3;$/;"	t	namespace:glm	typeref:typename:mat<2,3,int,highp>
highp_imat2x3	./glm/gtc/matrix_integer.hpp	/^	typedef mat<2, 3, int, highp>				highp_imat2x3;$/;"	t	namespace:glm	typeref:typename:mat<2,3,int,highp>
highp_imat2x4	./glm/fwd.hpp	/^	typedef mat<2, 4, int, highp>		highp_imat2x4;$/;"	t	namespace:glm	typeref:typename:mat<2,4,int,highp>
highp_imat2x4	./glm/gtc/matrix_integer.hpp	/^	typedef mat<2, 4, int, highp>				highp_imat2x4;$/;"	t	namespace:glm	typeref:typename:mat<2,4,int,highp>
highp_imat3	./glm/gtc/matrix_integer.hpp	/^	typedef mat<3, 3, int, highp>				highp_imat3;$/;"	t	namespace:glm	typeref:typename:mat<3,3,int,highp>
highp_imat3x2	./glm/fwd.hpp	/^	typedef mat<3, 2, int, highp>		highp_imat3x2;$/;"	t	namespace:glm	typeref:typename:mat<3,2,int,highp>
highp_imat3x2	./glm/gtc/matrix_integer.hpp	/^	typedef mat<3, 2, int, highp>				highp_imat3x2;$/;"	t	namespace:glm	typeref:typename:mat<3,2,int,highp>
highp_imat3x3	./glm/fwd.hpp	/^	typedef mat<3, 3, int, highp>		highp_imat3x3;$/;"	t	namespace:glm	typeref:typename:mat<3,3,int,highp>
highp_imat3x3	./glm/gtc/matrix_integer.hpp	/^	typedef mat<3, 3, int, highp>				highp_imat3x3;$/;"	t	namespace:glm	typeref:typename:mat<3,3,int,highp>
highp_imat3x4	./glm/fwd.hpp	/^	typedef mat<3, 4, int, highp>		highp_imat3x4;$/;"	t	namespace:glm	typeref:typename:mat<3,4,int,highp>
highp_imat3x4	./glm/gtc/matrix_integer.hpp	/^	typedef mat<3, 4, int, highp>				highp_imat3x4;$/;"	t	namespace:glm	typeref:typename:mat<3,4,int,highp>
highp_imat4	./glm/gtc/matrix_integer.hpp	/^	typedef mat<4, 4, int, highp>				highp_imat4;$/;"	t	namespace:glm	typeref:typename:mat<4,4,int,highp>
highp_imat4x2	./glm/fwd.hpp	/^	typedef mat<4, 2, int, highp>		highp_imat4x2;$/;"	t	namespace:glm	typeref:typename:mat<4,2,int,highp>
highp_imat4x2	./glm/gtc/matrix_integer.hpp	/^	typedef mat<4, 2, int, highp>				highp_imat4x2;$/;"	t	namespace:glm	typeref:typename:mat<4,2,int,highp>
highp_imat4x3	./glm/fwd.hpp	/^	typedef mat<4, 3, int, highp>		highp_imat4x3;$/;"	t	namespace:glm	typeref:typename:mat<4,3,int,highp>
highp_imat4x3	./glm/gtc/matrix_integer.hpp	/^	typedef mat<4, 3, int, highp>				highp_imat4x3;$/;"	t	namespace:glm	typeref:typename:mat<4,3,int,highp>
highp_imat4x4	./glm/fwd.hpp	/^	typedef mat<4, 4, int, highp>		highp_imat4x4;$/;"	t	namespace:glm	typeref:typename:mat<4,4,int,highp>
highp_imat4x4	./glm/gtc/matrix_integer.hpp	/^	typedef mat<4, 4, int, highp>				highp_imat4x4;$/;"	t	namespace:glm	typeref:typename:mat<4,4,int,highp>
highp_int16	./glm/fwd.hpp	/^	typedef int16					highp_int16;$/;"	t	namespace:glm	typeref:typename:int16
highp_int16	./glm/gtc/type_precision.hpp	/^	typedef detail::int16 highp_int16;$/;"	t	namespace:glm	typeref:typename:detail::int16
highp_int16_t	./glm/fwd.hpp	/^	typedef int16					highp_int16_t;$/;"	t	namespace:glm	typeref:typename:int16
highp_int16_t	./glm/gtc/type_precision.hpp	/^	typedef detail::int16 highp_int16_t;$/;"	t	namespace:glm	typeref:typename:detail::int16
highp_int32	./glm/fwd.hpp	/^	typedef int32					highp_int32;$/;"	t	namespace:glm	typeref:typename:int32
highp_int32	./glm/gtc/type_precision.hpp	/^	typedef detail::int32 highp_int32;$/;"	t	namespace:glm	typeref:typename:detail::int32
highp_int32_t	./glm/fwd.hpp	/^	typedef int32					highp_int32_t;$/;"	t	namespace:glm	typeref:typename:int32
highp_int32_t	./glm/gtc/type_precision.hpp	/^	typedef detail::int32 highp_int32_t;$/;"	t	namespace:glm	typeref:typename:detail::int32
highp_int64	./glm/fwd.hpp	/^	typedef int64					highp_int64;$/;"	t	namespace:glm	typeref:typename:int64
highp_int64	./glm/gtc/type_precision.hpp	/^	typedef detail::int64 highp_int64;$/;"	t	namespace:glm	typeref:typename:detail::int64
highp_int64_t	./glm/fwd.hpp	/^	typedef int64					highp_int64_t;$/;"	t	namespace:glm	typeref:typename:int64
highp_int64_t	./glm/gtc/type_precision.hpp	/^	typedef detail::int64 highp_int64_t;$/;"	t	namespace:glm	typeref:typename:detail::int64
highp_int8	./glm/fwd.hpp	/^	typedef int8					highp_int8;$/;"	t	namespace:glm	typeref:typename:int8
highp_int8	./glm/gtc/type_precision.hpp	/^	typedef detail::int8 highp_int8;$/;"	t	namespace:glm	typeref:typename:detail::int8
highp_int8_t	./glm/fwd.hpp	/^	typedef int8					highp_int8_t;$/;"	t	namespace:glm	typeref:typename:int8
highp_int8_t	./glm/gtc/type_precision.hpp	/^	typedef detail::int8 highp_int8_t;$/;"	t	namespace:glm	typeref:typename:detail::int8
highp_ivec1	./glm/fwd.hpp	/^	typedef vec<1, int, highp>		highp_ivec1;$/;"	t	namespace:glm	typeref:typename:vec<1,int,highp>
highp_ivec1	./glm/gtc/type_precision.hpp	/^	typedef vec<1, int, highp>		highp_ivec1;$/;"	t	namespace:glm	typeref:typename:vec<1,int,highp>
highp_ivec2	./glm/fwd.hpp	/^	typedef vec<2, int, highp>		highp_ivec2;$/;"	t	namespace:glm	typeref:typename:vec<2,int,highp>
highp_ivec2	./glm/gtc/type_precision.hpp	/^	typedef vec<2, int, highp>		highp_ivec2;$/;"	t	namespace:glm	typeref:typename:vec<2,int,highp>
highp_ivec3	./glm/fwd.hpp	/^	typedef vec<3, int, highp>		highp_ivec3;$/;"	t	namespace:glm	typeref:typename:vec<3,int,highp>
highp_ivec3	./glm/gtc/type_precision.hpp	/^	typedef vec<3, int, highp>		highp_ivec3;$/;"	t	namespace:glm	typeref:typename:vec<3,int,highp>
highp_ivec4	./glm/fwd.hpp	/^	typedef vec<4, int, highp>		highp_ivec4;$/;"	t	namespace:glm	typeref:typename:vec<4,int,highp>
highp_ivec4	./glm/gtc/type_precision.hpp	/^	typedef vec<4, int, highp>		highp_ivec4;$/;"	t	namespace:glm	typeref:typename:vec<4,int,highp>
highp_mat2	./glm/ext/matrix_float2x2_precision.hpp	/^	typedef mat<2, 2, float, highp>		highp_mat2;$/;"	t	namespace:glm	typeref:typename:mat<2,2,float,highp>
highp_mat2	./glm/fwd.hpp	/^	typedef mat<2, 2, f32, highp>		highp_mat2;$/;"	t	namespace:glm	typeref:typename:mat<2,2,f32,highp>
highp_mat2x2	./glm/ext/matrix_float2x2_precision.hpp	/^	typedef mat<2, 2, float, highp>		highp_mat2x2;$/;"	t	namespace:glm	typeref:typename:mat<2,2,float,highp>
highp_mat2x2	./glm/fwd.hpp	/^	typedef mat<2, 2, f32, highp>		highp_mat2x2;$/;"	t	namespace:glm	typeref:typename:mat<2,2,f32,highp>
highp_mat2x3	./glm/ext/matrix_float2x3_precision.hpp	/^	typedef mat<2, 3, float, highp>		highp_mat2x3;$/;"	t	namespace:glm	typeref:typename:mat<2,3,float,highp>
highp_mat2x3	./glm/fwd.hpp	/^	typedef mat<2, 3, f32, highp>		highp_mat2x3;$/;"	t	namespace:glm	typeref:typename:mat<2,3,f32,highp>
highp_mat2x4	./glm/ext/matrix_float2x4_precision.hpp	/^	typedef mat<2, 4, float, highp>		highp_mat2x4;$/;"	t	namespace:glm	typeref:typename:mat<2,4,float,highp>
highp_mat2x4	./glm/fwd.hpp	/^	typedef mat<2, 4, f32, highp>		highp_mat2x4;$/;"	t	namespace:glm	typeref:typename:mat<2,4,f32,highp>
highp_mat3	./glm/ext/matrix_float3x3_precision.hpp	/^	typedef mat<3, 3, float, highp>		highp_mat3;$/;"	t	namespace:glm	typeref:typename:mat<3,3,float,highp>
highp_mat3	./glm/fwd.hpp	/^	typedef mat<3, 3, f32, highp>		highp_mat3;$/;"	t	namespace:glm	typeref:typename:mat<3,3,f32,highp>
highp_mat3x2	./glm/ext/matrix_float3x2_precision.hpp	/^	typedef mat<3, 2, float, highp>		highp_mat3x2;$/;"	t	namespace:glm	typeref:typename:mat<3,2,float,highp>
highp_mat3x2	./glm/fwd.hpp	/^	typedef mat<3, 2, f32, highp>		highp_mat3x2;$/;"	t	namespace:glm	typeref:typename:mat<3,2,f32,highp>
highp_mat3x3	./glm/ext/matrix_float3x3_precision.hpp	/^	typedef mat<3, 3, float, highp>		highp_mat3x3;$/;"	t	namespace:glm	typeref:typename:mat<3,3,float,highp>
highp_mat3x3	./glm/fwd.hpp	/^	typedef mat<3, 3, f32, highp>		highp_mat3x3;$/;"	t	namespace:glm	typeref:typename:mat<3,3,f32,highp>
highp_mat3x4	./glm/ext/matrix_float3x4_precision.hpp	/^	typedef mat<3, 4, float, highp>		highp_mat3x4;$/;"	t	namespace:glm	typeref:typename:mat<3,4,float,highp>
highp_mat3x4	./glm/fwd.hpp	/^	typedef mat<3, 4, f32, highp>		highp_mat3x4;$/;"	t	namespace:glm	typeref:typename:mat<3,4,f32,highp>
highp_mat4	./glm/ext/matrix_float4x4_precision.hpp	/^	typedef mat<4, 4, float, highp>		highp_mat4;$/;"	t	namespace:glm	typeref:typename:mat<4,4,float,highp>
highp_mat4	./glm/fwd.hpp	/^	typedef mat<4, 4, f32, highp>		highp_mat4;$/;"	t	namespace:glm	typeref:typename:mat<4,4,f32,highp>
highp_mat4x2	./glm/ext/matrix_float4x2_precision.hpp	/^	typedef mat<4, 2, float, highp>		highp_mat4x2;$/;"	t	namespace:glm	typeref:typename:mat<4,2,float,highp>
highp_mat4x2	./glm/fwd.hpp	/^	typedef mat<4, 2, f32, highp>		highp_mat4x2;$/;"	t	namespace:glm	typeref:typename:mat<4,2,f32,highp>
highp_mat4x3	./glm/ext/matrix_float4x3_precision.hpp	/^	typedef mat<4, 3, float, highp>		highp_mat4x3;$/;"	t	namespace:glm	typeref:typename:mat<4,3,float,highp>
highp_mat4x3	./glm/fwd.hpp	/^	typedef mat<4, 3, f32, highp>		highp_mat4x3;$/;"	t	namespace:glm	typeref:typename:mat<4,3,f32,highp>
highp_mat4x4	./glm/ext/matrix_float4x4_precision.hpp	/^	typedef mat<4, 4, float, highp>		highp_mat4x4;$/;"	t	namespace:glm	typeref:typename:mat<4,4,float,highp>
highp_mat4x4	./glm/fwd.hpp	/^	typedef mat<4, 4, f32, highp>		highp_mat4x4;$/;"	t	namespace:glm	typeref:typename:mat<4,4,f32,highp>
highp_quat	./glm/ext/quaternion_float_precision.hpp	/^	typedef qua<float, highp>		highp_quat;$/;"	t	namespace:glm	typeref:typename:qua<float,highp>
highp_quat	./glm/fwd.hpp	/^	typedef qua<float, highp>			highp_quat;$/;"	t	namespace:glm	typeref:typename:qua<float,highp>
highp_u16	./glm/fwd.hpp	/^	typedef uint16					highp_u16;$/;"	t	namespace:glm	typeref:typename:uint16
highp_u16	./glm/gtc/type_precision.hpp	/^	typedef detail::uint16 highp_u16;$/;"	t	namespace:glm	typeref:typename:detail::uint16
highp_u16mat2x2	./glm/fwd.hpp	/^	typedef mat<2, 2, uint16, highp>	highp_u16mat2x2;$/;"	t	namespace:glm	typeref:typename:mat<2,2,uint16,highp>
highp_u16mat2x3	./glm/fwd.hpp	/^	typedef mat<2, 3, uint16, highp>	highp_u16mat2x3;$/;"	t	namespace:glm	typeref:typename:mat<2,3,uint16,highp>
highp_u16mat2x4	./glm/fwd.hpp	/^	typedef mat<2, 4, uint16, highp>	highp_u16mat2x4;$/;"	t	namespace:glm	typeref:typename:mat<2,4,uint16,highp>
highp_u16mat3x2	./glm/fwd.hpp	/^	typedef mat<3, 2, uint16, highp>	highp_u16mat3x2;$/;"	t	namespace:glm	typeref:typename:mat<3,2,uint16,highp>
highp_u16mat3x3	./glm/fwd.hpp	/^	typedef mat<3, 3, uint16, highp>	highp_u16mat3x3;$/;"	t	namespace:glm	typeref:typename:mat<3,3,uint16,highp>
highp_u16mat3x4	./glm/fwd.hpp	/^	typedef mat<3, 4, uint16, highp>	highp_u16mat3x4;$/;"	t	namespace:glm	typeref:typename:mat<3,4,uint16,highp>
highp_u16mat4x2	./glm/fwd.hpp	/^	typedef mat<4, 2, uint16, highp>	highp_u16mat4x2;$/;"	t	namespace:glm	typeref:typename:mat<4,2,uint16,highp>
highp_u16mat4x3	./glm/fwd.hpp	/^	typedef mat<4, 3, uint16, highp>	highp_u16mat4x3;$/;"	t	namespace:glm	typeref:typename:mat<4,3,uint16,highp>
highp_u16mat4x4	./glm/fwd.hpp	/^	typedef mat<4, 4, uint16, highp>	highp_u16mat4x4;$/;"	t	namespace:glm	typeref:typename:mat<4,4,uint16,highp>
highp_u16vec1	./glm/fwd.hpp	/^	typedef vec<1, u16, highp>		highp_u16vec1;$/;"	t	namespace:glm	typeref:typename:vec<1,u16,highp>
highp_u16vec1	./glm/gtc/type_precision.hpp	/^	typedef vec<1, u16, highp>		highp_u16vec1;$/;"	t	namespace:glm	typeref:typename:vec<1,u16,highp>
highp_u16vec2	./glm/fwd.hpp	/^	typedef vec<2, u16, highp>		highp_u16vec2;$/;"	t	namespace:glm	typeref:typename:vec<2,u16,highp>
highp_u16vec2	./glm/gtc/type_precision.hpp	/^	typedef vec<2, u16, highp>		highp_u16vec2;$/;"	t	namespace:glm	typeref:typename:vec<2,u16,highp>
highp_u16vec3	./glm/fwd.hpp	/^	typedef vec<3, u16, highp>		highp_u16vec3;$/;"	t	namespace:glm	typeref:typename:vec<3,u16,highp>
highp_u16vec3	./glm/gtc/type_precision.hpp	/^	typedef vec<3, u16, highp>		highp_u16vec3;$/;"	t	namespace:glm	typeref:typename:vec<3,u16,highp>
highp_u16vec4	./glm/fwd.hpp	/^	typedef vec<4, u16, highp>		highp_u16vec4;$/;"	t	namespace:glm	typeref:typename:vec<4,u16,highp>
highp_u16vec4	./glm/gtc/type_precision.hpp	/^	typedef vec<4, u16, highp>		highp_u16vec4;$/;"	t	namespace:glm	typeref:typename:vec<4,u16,highp>
highp_u32	./glm/fwd.hpp	/^	typedef uint32					highp_u32;$/;"	t	namespace:glm	typeref:typename:uint32
highp_u32	./glm/gtc/type_precision.hpp	/^	typedef detail::uint32 highp_u32;$/;"	t	namespace:glm	typeref:typename:detail::uint32
highp_u32mat2x2	./glm/fwd.hpp	/^	typedef mat<2, 2, uint32, highp>	highp_u32mat2x2;$/;"	t	namespace:glm	typeref:typename:mat<2,2,uint32,highp>
highp_u32mat2x3	./glm/fwd.hpp	/^	typedef mat<2, 3, uint32, highp>	highp_u32mat2x3;$/;"	t	namespace:glm	typeref:typename:mat<2,3,uint32,highp>
highp_u32mat2x4	./glm/fwd.hpp	/^	typedef mat<2, 4, uint32, highp>	highp_u32mat2x4;$/;"	t	namespace:glm	typeref:typename:mat<2,4,uint32,highp>
highp_u32mat3x2	./glm/fwd.hpp	/^	typedef mat<3, 2, uint32, highp>	highp_u32mat3x2;$/;"	t	namespace:glm	typeref:typename:mat<3,2,uint32,highp>
highp_u32mat3x3	./glm/fwd.hpp	/^	typedef mat<3, 3, uint32, highp>	highp_u32mat3x3;$/;"	t	namespace:glm	typeref:typename:mat<3,3,uint32,highp>
highp_u32mat3x4	./glm/fwd.hpp	/^	typedef mat<3, 4, uint32, highp>	highp_u32mat3x4;$/;"	t	namespace:glm	typeref:typename:mat<3,4,uint32,highp>
highp_u32mat4x2	./glm/fwd.hpp	/^	typedef mat<4, 2, uint32, highp>	highp_u32mat4x2;$/;"	t	namespace:glm	typeref:typename:mat<4,2,uint32,highp>
highp_u32mat4x3	./glm/fwd.hpp	/^	typedef mat<4, 3, uint32, highp>	highp_u32mat4x3;$/;"	t	namespace:glm	typeref:typename:mat<4,3,uint32,highp>
highp_u32mat4x4	./glm/fwd.hpp	/^	typedef mat<4, 4, uint32, highp>	highp_u32mat4x4;$/;"	t	namespace:glm	typeref:typename:mat<4,4,uint32,highp>
highp_u32vec1	./glm/fwd.hpp	/^	typedef vec<1, u32, highp>		highp_u32vec1;$/;"	t	namespace:glm	typeref:typename:vec<1,u32,highp>
highp_u32vec1	./glm/gtc/type_precision.hpp	/^	typedef vec<1, u32, highp>		highp_u32vec1;$/;"	t	namespace:glm	typeref:typename:vec<1,u32,highp>
highp_u32vec2	./glm/fwd.hpp	/^	typedef vec<2, u32, highp>		highp_u32vec2;$/;"	t	namespace:glm	typeref:typename:vec<2,u32,highp>
highp_u32vec2	./glm/gtc/type_precision.hpp	/^	typedef vec<2, u32, highp>		highp_u32vec2;$/;"	t	namespace:glm	typeref:typename:vec<2,u32,highp>
highp_u32vec3	./glm/fwd.hpp	/^	typedef vec<3, u32, highp>		highp_u32vec3;$/;"	t	namespace:glm	typeref:typename:vec<3,u32,highp>
highp_u32vec3	./glm/gtc/type_precision.hpp	/^	typedef vec<3, u32, highp>		highp_u32vec3;$/;"	t	namespace:glm	typeref:typename:vec<3,u32,highp>
highp_u32vec4	./glm/fwd.hpp	/^	typedef vec<4, u32, highp>		highp_u32vec4;$/;"	t	namespace:glm	typeref:typename:vec<4,u32,highp>
highp_u32vec4	./glm/gtc/type_precision.hpp	/^	typedef vec<4, u32, highp>		highp_u32vec4;$/;"	t	namespace:glm	typeref:typename:vec<4,u32,highp>
highp_u64	./glm/fwd.hpp	/^	typedef uint64					highp_u64;$/;"	t	namespace:glm	typeref:typename:uint64
highp_u64	./glm/gtc/type_precision.hpp	/^	typedef detail::uint64 highp_u64;$/;"	t	namespace:glm	typeref:typename:detail::uint64
highp_u64mat2x2	./glm/fwd.hpp	/^	typedef mat<2, 2, uint64, highp>	highp_u64mat2x2;$/;"	t	namespace:glm	typeref:typename:mat<2,2,uint64,highp>
highp_u64mat2x3	./glm/fwd.hpp	/^	typedef mat<2, 3, uint64, highp>	highp_u64mat2x3;$/;"	t	namespace:glm	typeref:typename:mat<2,3,uint64,highp>
highp_u64mat2x4	./glm/fwd.hpp	/^	typedef mat<2, 4, uint64, highp>	highp_u64mat2x4;$/;"	t	namespace:glm	typeref:typename:mat<2,4,uint64,highp>
highp_u64mat3x2	./glm/fwd.hpp	/^	typedef mat<3, 2, uint64, highp>	highp_u64mat3x2;$/;"	t	namespace:glm	typeref:typename:mat<3,2,uint64,highp>
highp_u64mat3x3	./glm/fwd.hpp	/^	typedef mat<3, 3, uint64, highp>	highp_u64mat3x3;$/;"	t	namespace:glm	typeref:typename:mat<3,3,uint64,highp>
highp_u64mat3x4	./glm/fwd.hpp	/^	typedef mat<3, 4, uint64, highp>	highp_u64mat3x4;$/;"	t	namespace:glm	typeref:typename:mat<3,4,uint64,highp>
highp_u64mat4x2	./glm/fwd.hpp	/^	typedef mat<4, 2, uint64, highp>	highp_u64mat4x2;$/;"	t	namespace:glm	typeref:typename:mat<4,2,uint64,highp>
highp_u64mat4x3	./glm/fwd.hpp	/^	typedef mat<4, 3, uint64, highp>	highp_u64mat4x3;$/;"	t	namespace:glm	typeref:typename:mat<4,3,uint64,highp>
highp_u64mat4x4	./glm/fwd.hpp	/^	typedef mat<4, 4, uint64, highp>	highp_u64mat4x4;$/;"	t	namespace:glm	typeref:typename:mat<4,4,uint64,highp>
highp_u64vec1	./glm/fwd.hpp	/^	typedef vec<1, u64, highp>		highp_u64vec1;$/;"	t	namespace:glm	typeref:typename:vec<1,u64,highp>
highp_u64vec1	./glm/gtc/type_precision.hpp	/^	typedef vec<1, u64, highp>		highp_u64vec1;$/;"	t	namespace:glm	typeref:typename:vec<1,u64,highp>
highp_u64vec2	./glm/fwd.hpp	/^	typedef vec<2, u64, highp>		highp_u64vec2;$/;"	t	namespace:glm	typeref:typename:vec<2,u64,highp>
highp_u64vec2	./glm/gtc/type_precision.hpp	/^	typedef vec<2, u64, highp>		highp_u64vec2;$/;"	t	namespace:glm	typeref:typename:vec<2,u64,highp>
highp_u64vec3	./glm/fwd.hpp	/^	typedef vec<3, u64, highp>		highp_u64vec3;$/;"	t	namespace:glm	typeref:typename:vec<3,u64,highp>
highp_u64vec3	./glm/gtc/type_precision.hpp	/^	typedef vec<3, u64, highp>		highp_u64vec3;$/;"	t	namespace:glm	typeref:typename:vec<3,u64,highp>
highp_u64vec4	./glm/fwd.hpp	/^	typedef vec<4, u64, highp>		highp_u64vec4;$/;"	t	namespace:glm	typeref:typename:vec<4,u64,highp>
highp_u64vec4	./glm/gtc/type_precision.hpp	/^	typedef vec<4, u64, highp>		highp_u64vec4;$/;"	t	namespace:glm	typeref:typename:vec<4,u64,highp>
highp_u8	./glm/fwd.hpp	/^	typedef uint8					highp_u8;$/;"	t	namespace:glm	typeref:typename:uint8
highp_u8	./glm/gtc/type_precision.hpp	/^	typedef detail::uint8 highp_u8;$/;"	t	namespace:glm	typeref:typename:detail::uint8
highp_u8mat2x2	./glm/fwd.hpp	/^	typedef mat<2, 2, uint8, highp>		highp_u8mat2x2;$/;"	t	namespace:glm	typeref:typename:mat<2,2,uint8,highp>
highp_u8mat2x3	./glm/fwd.hpp	/^	typedef mat<2, 3, uint8, highp>		highp_u8mat2x3;$/;"	t	namespace:glm	typeref:typename:mat<2,3,uint8,highp>
highp_u8mat2x4	./glm/fwd.hpp	/^	typedef mat<2, 4, uint8, highp>		highp_u8mat2x4;$/;"	t	namespace:glm	typeref:typename:mat<2,4,uint8,highp>
highp_u8mat3x2	./glm/fwd.hpp	/^	typedef mat<3, 2, uint8, highp>		highp_u8mat3x2;$/;"	t	namespace:glm	typeref:typename:mat<3,2,uint8,highp>
highp_u8mat3x3	./glm/fwd.hpp	/^	typedef mat<3, 3, uint8, highp>		highp_u8mat3x3;$/;"	t	namespace:glm	typeref:typename:mat<3,3,uint8,highp>
highp_u8mat3x4	./glm/fwd.hpp	/^	typedef mat<3, 4, uint8, highp>		highp_u8mat3x4;$/;"	t	namespace:glm	typeref:typename:mat<3,4,uint8,highp>
highp_u8mat4x2	./glm/fwd.hpp	/^	typedef mat<4, 2, uint8, highp>		highp_u8mat4x2;$/;"	t	namespace:glm	typeref:typename:mat<4,2,uint8,highp>
highp_u8mat4x3	./glm/fwd.hpp	/^	typedef mat<4, 3, uint8, highp>		highp_u8mat4x3;$/;"	t	namespace:glm	typeref:typename:mat<4,3,uint8,highp>
highp_u8mat4x4	./glm/fwd.hpp	/^	typedef mat<4, 4, uint8, highp>		highp_u8mat4x4;$/;"	t	namespace:glm	typeref:typename:mat<4,4,uint8,highp>
highp_u8vec1	./glm/fwd.hpp	/^	typedef vec<1, u8, highp>		highp_u8vec1;$/;"	t	namespace:glm	typeref:typename:vec<1,u8,highp>
highp_u8vec1	./glm/gtc/type_precision.hpp	/^	typedef vec<1, u8, highp>		highp_u8vec1;$/;"	t	namespace:glm	typeref:typename:vec<1,u8,highp>
highp_u8vec2	./glm/fwd.hpp	/^	typedef vec<2, u8, highp>		highp_u8vec2;$/;"	t	namespace:glm	typeref:typename:vec<2,u8,highp>
highp_u8vec2	./glm/gtc/type_precision.hpp	/^	typedef vec<2, u8, highp>		highp_u8vec2;$/;"	t	namespace:glm	typeref:typename:vec<2,u8,highp>
highp_u8vec3	./glm/fwd.hpp	/^	typedef vec<3, u8, highp>		highp_u8vec3;$/;"	t	namespace:glm	typeref:typename:vec<3,u8,highp>
highp_u8vec3	./glm/gtc/type_precision.hpp	/^	typedef vec<3, u8, highp>		highp_u8vec3;$/;"	t	namespace:glm	typeref:typename:vec<3,u8,highp>
highp_u8vec4	./glm/fwd.hpp	/^	typedef vec<4, u8, highp>		highp_u8vec4;$/;"	t	namespace:glm	typeref:typename:vec<4,u8,highp>
highp_u8vec4	./glm/gtc/type_precision.hpp	/^	typedef vec<4, u8, highp>		highp_u8vec4;$/;"	t	namespace:glm	typeref:typename:vec<4,u8,highp>
highp_uint16	./glm/fwd.hpp	/^	typedef uint16					highp_uint16;$/;"	t	namespace:glm	typeref:typename:uint16
highp_uint16	./glm/gtc/type_precision.hpp	/^	typedef detail::uint16 highp_uint16;$/;"	t	namespace:glm	typeref:typename:detail::uint16
highp_uint16_t	./glm/fwd.hpp	/^	typedef uint16					highp_uint16_t;$/;"	t	namespace:glm	typeref:typename:uint16
highp_uint16_t	./glm/gtc/type_precision.hpp	/^	typedef detail::uint16 highp_uint16_t;$/;"	t	namespace:glm	typeref:typename:detail::uint16
highp_uint32	./glm/fwd.hpp	/^	typedef uint32					highp_uint32;$/;"	t	namespace:glm	typeref:typename:uint32
highp_uint32	./glm/gtc/type_precision.hpp	/^	typedef detail::uint32 highp_uint32;$/;"	t	namespace:glm	typeref:typename:detail::uint32
highp_uint32_t	./glm/fwd.hpp	/^	typedef uint32					highp_uint32_t;$/;"	t	namespace:glm	typeref:typename:uint32
highp_uint32_t	./glm/gtc/type_precision.hpp	/^	typedef detail::uint32 highp_uint32_t;$/;"	t	namespace:glm	typeref:typename:detail::uint32
highp_uint64	./glm/fwd.hpp	/^	typedef uint64					highp_uint64;$/;"	t	namespace:glm	typeref:typename:uint64
highp_uint64	./glm/gtc/type_precision.hpp	/^	typedef detail::uint64 highp_uint64;$/;"	t	namespace:glm	typeref:typename:detail::uint64
highp_uint64_t	./glm/fwd.hpp	/^	typedef uint64					highp_uint64_t;$/;"	t	namespace:glm	typeref:typename:uint64
highp_uint64_t	./glm/gtc/type_precision.hpp	/^	typedef detail::uint64 highp_uint64_t;$/;"	t	namespace:glm	typeref:typename:detail::uint64
highp_uint8	./glm/fwd.hpp	/^	typedef uint8					highp_uint8;$/;"	t	namespace:glm	typeref:typename:uint8
highp_uint8	./glm/gtc/type_precision.hpp	/^	typedef detail::uint8 highp_uint8;$/;"	t	namespace:glm	typeref:typename:detail::uint8
highp_uint8_t	./glm/fwd.hpp	/^	typedef uint8					highp_uint8_t;$/;"	t	namespace:glm	typeref:typename:uint8
highp_uint8_t	./glm/gtc/type_precision.hpp	/^	typedef detail::uint8 highp_uint8_t;$/;"	t	namespace:glm	typeref:typename:detail::uint8
highp_umat2	./glm/gtc/matrix_integer.hpp	/^	typedef mat<2, 2, uint, highp>				highp_umat2;$/;"	t	namespace:glm	typeref:typename:mat<2,2,uint,highp>
highp_umat2x2	./glm/fwd.hpp	/^	typedef mat<2, 2, uint, highp>		highp_umat2x2;$/;"	t	namespace:glm	typeref:typename:mat<2,2,uint,highp>
highp_umat2x2	./glm/gtc/matrix_integer.hpp	/^	typedef mat<2, 2, uint, highp>				highp_umat2x2;$/;"	t	namespace:glm	typeref:typename:mat<2,2,uint,highp>
highp_umat2x3	./glm/fwd.hpp	/^	typedef mat<2, 3, uint, highp>		highp_umat2x3;$/;"	t	namespace:glm	typeref:typename:mat<2,3,uint,highp>
highp_umat2x3	./glm/gtc/matrix_integer.hpp	/^	typedef mat<2, 3, uint, highp>				highp_umat2x3;$/;"	t	namespace:glm	typeref:typename:mat<2,3,uint,highp>
highp_umat2x4	./glm/fwd.hpp	/^	typedef mat<2, 4, uint, highp>		highp_umat2x4;$/;"	t	namespace:glm	typeref:typename:mat<2,4,uint,highp>
highp_umat2x4	./glm/gtc/matrix_integer.hpp	/^	typedef mat<2, 4, uint, highp>				highp_umat2x4;$/;"	t	namespace:glm	typeref:typename:mat<2,4,uint,highp>
highp_umat3	./glm/gtc/matrix_integer.hpp	/^	typedef mat<3, 3, uint, highp>				highp_umat3;$/;"	t	namespace:glm	typeref:typename:mat<3,3,uint,highp>
highp_umat3x2	./glm/fwd.hpp	/^	typedef mat<3, 2, uint, highp>		highp_umat3x2;$/;"	t	namespace:glm	typeref:typename:mat<3,2,uint,highp>
highp_umat3x2	./glm/gtc/matrix_integer.hpp	/^	typedef mat<3, 2, uint, highp>				highp_umat3x2;$/;"	t	namespace:glm	typeref:typename:mat<3,2,uint,highp>
highp_umat3x3	./glm/fwd.hpp	/^	typedef mat<3, 3, uint, highp>		highp_umat3x3;$/;"	t	namespace:glm	typeref:typename:mat<3,3,uint,highp>
highp_umat3x3	./glm/gtc/matrix_integer.hpp	/^	typedef mat<3, 3, uint, highp>				highp_umat3x3;$/;"	t	namespace:glm	typeref:typename:mat<3,3,uint,highp>
highp_umat3x4	./glm/fwd.hpp	/^	typedef mat<3, 4, uint, highp>		highp_umat3x4;$/;"	t	namespace:glm	typeref:typename:mat<3,4,uint,highp>
highp_umat3x4	./glm/gtc/matrix_integer.hpp	/^	typedef mat<3, 4, uint, highp>				highp_umat3x4;$/;"	t	namespace:glm	typeref:typename:mat<3,4,uint,highp>
highp_umat4	./glm/gtc/matrix_integer.hpp	/^	typedef mat<4, 4, uint, highp>				highp_umat4;$/;"	t	namespace:glm	typeref:typename:mat<4,4,uint,highp>
highp_umat4x2	./glm/fwd.hpp	/^	typedef mat<4, 2, uint, highp>		highp_umat4x2;$/;"	t	namespace:glm	typeref:typename:mat<4,2,uint,highp>
highp_umat4x2	./glm/gtc/matrix_integer.hpp	/^	typedef mat<4, 2, uint, highp>				highp_umat4x2;$/;"	t	namespace:glm	typeref:typename:mat<4,2,uint,highp>
highp_umat4x3	./glm/fwd.hpp	/^	typedef mat<4, 3, uint, highp>		highp_umat4x3;$/;"	t	namespace:glm	typeref:typename:mat<4,3,uint,highp>
highp_umat4x3	./glm/gtc/matrix_integer.hpp	/^	typedef mat<4, 3, uint, highp>				highp_umat4x3;$/;"	t	namespace:glm	typeref:typename:mat<4,3,uint,highp>
highp_umat4x4	./glm/fwd.hpp	/^	typedef mat<4, 4, uint, highp>		highp_umat4x4;$/;"	t	namespace:glm	typeref:typename:mat<4,4,uint,highp>
highp_umat4x4	./glm/gtc/matrix_integer.hpp	/^	typedef mat<4, 4, uint, highp>				highp_umat4x4;$/;"	t	namespace:glm	typeref:typename:mat<4,4,uint,highp>
highp_uvec1	./glm/fwd.hpp	/^	typedef vec<1, uint, highp>		highp_uvec1;$/;"	t	namespace:glm	typeref:typename:vec<1,uint,highp>
highp_uvec1	./glm/gtc/type_precision.hpp	/^	typedef vec<1, uint, highp>		highp_uvec1;$/;"	t	namespace:glm	typeref:typename:vec<1,uint,highp>
highp_uvec2	./glm/fwd.hpp	/^	typedef vec<2, uint, highp>		highp_uvec2;$/;"	t	namespace:glm	typeref:typename:vec<2,uint,highp>
highp_uvec2	./glm/gtc/type_precision.hpp	/^	typedef vec<2, uint, highp>		highp_uvec2;$/;"	t	namespace:glm	typeref:typename:vec<2,uint,highp>
highp_uvec3	./glm/fwd.hpp	/^	typedef vec<3, uint, highp>		highp_uvec3;$/;"	t	namespace:glm	typeref:typename:vec<3,uint,highp>
highp_uvec3	./glm/gtc/type_precision.hpp	/^	typedef vec<3, uint, highp>		highp_uvec3;$/;"	t	namespace:glm	typeref:typename:vec<3,uint,highp>
highp_uvec4	./glm/fwd.hpp	/^	typedef vec<4, uint, highp>		highp_uvec4;$/;"	t	namespace:glm	typeref:typename:vec<4,uint,highp>
highp_uvec4	./glm/gtc/type_precision.hpp	/^	typedef vec<4, uint, highp>		highp_uvec4;$/;"	t	namespace:glm	typeref:typename:vec<4,uint,highp>
highp_vec1	./glm/ext/vector_float1_precision.hpp	/^	typedef vec<1, float, highp>		highp_vec1;$/;"	t	namespace:glm	typeref:typename:vec<1,float,highp>
highp_vec1	./glm/fwd.hpp	/^	typedef vec<1, float, highp>		highp_vec1;$/;"	t	namespace:glm	typeref:typename:vec<1,float,highp>
highp_vec2	./glm/ext/vector_float2_precision.hpp	/^	typedef vec<2, float, highp>		highp_vec2;$/;"	t	namespace:glm	typeref:typename:vec<2,float,highp>
highp_vec2	./glm/fwd.hpp	/^	typedef vec<2, float, highp>		highp_vec2;$/;"	t	namespace:glm	typeref:typename:vec<2,float,highp>
highp_vec3	./glm/ext/vector_float3_precision.hpp	/^	typedef vec<3, float, highp>		highp_vec3;$/;"	t	namespace:glm	typeref:typename:vec<3,float,highp>
highp_vec3	./glm/fwd.hpp	/^	typedef vec<3, float, highp>		highp_vec3;$/;"	t	namespace:glm	typeref:typename:vec<3,float,highp>
highp_vec4	./glm/ext/vector_float4_precision.hpp	/^	typedef vec<4, float, highp>		highp_vec4;$/;"	t	namespace:glm	typeref:typename:vec<4,float,highp>
highp_vec4	./glm/fwd.hpp	/^	typedef vec<4, float, highp>		highp_vec4;$/;"	t	namespace:glm	typeref:typename:vec<4,float,highp>
hsvColor	./glm/gtx/color_space.inl	/^	GLM_FUNC_QUALIFIER vec<3, T, Q> hsvColor(const vec<3, T, Q>& rgbColor)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<3,T,Q>
i	./glm/detail/type_float.hpp	/^		int_type i;$/;"	m	union:glm::detail::float_t	typeref:typename:int_type
i	./glm/detail/type_half.inl	/^		unsigned int i;$/;"	m	union:glm::detail::uif32	typeref:typename:unsigned int	file:
i	./glm/gtc/bitfield.inl	/^			int16 i;$/;"	m	union:glm::bitfieldInterleave::sign16	typeref:typename:int16	file:
i	./glm/gtc/bitfield.inl	/^			int32 i;$/;"	m	union:glm::bitfieldInterleave::sign16	typeref:typename:int32	file:
i	./glm/gtc/bitfield.inl	/^			int32 i;$/;"	m	union:glm::bitfieldInterleave::sign32	typeref:typename:int32	file:
i	./glm/gtc/bitfield.inl	/^			int64 i;$/;"	m	union:glm::bitfieldInterleave::sign64	typeref:typename:int64	file:
i	./glm/gtc/bitfield.inl	/^			int8 i;$/;"	m	union:glm::bitfieldInterleave::sign8	typeref:typename:int8	file:
i10i10i10i2	./glm/gtc/packing.inl	/^	union i10i10i10i2$/;"	u	namespace:glm::detail	file:
i16	./glm/fwd.hpp	/^	typedef int16					i16;$/;"	t	namespace:glm	typeref:typename:int16
i16	./glm/gtc/type_precision.hpp	/^	typedef detail::int16 i16;$/;"	t	namespace:glm	typeref:typename:detail::int16
i16mat2	./glm/ext/matrix_int2x2_sized.hpp	/^	typedef mat<2, 2, int16, defaultp>				i16mat2;$/;"	t	namespace:glm	typeref:typename:mat<2,2,int16,defaultp>
i16mat2x2	./glm/ext/matrix_int2x2_sized.hpp	/^	typedef mat<2, 2, int16, defaultp>				i16mat2x2;$/;"	t	namespace:glm	typeref:typename:mat<2,2,int16,defaultp>
i16mat2x2	./glm/fwd.hpp	/^	typedef mat<2, 2, int16, defaultp>	i16mat2x2;$/;"	t	namespace:glm	typeref:typename:mat<2,2,int16,defaultp>
i16mat2x3	./glm/ext/matrix_int2x3_sized.hpp	/^	typedef mat<2, 3, int16, defaultp>				i16mat2x3;$/;"	t	namespace:glm	typeref:typename:mat<2,3,int16,defaultp>
i16mat2x3	./glm/fwd.hpp	/^	typedef mat<2, 3, int16, defaultp>	i16mat2x3;$/;"	t	namespace:glm	typeref:typename:mat<2,3,int16,defaultp>
i16mat2x4	./glm/ext/matrix_int2x4_sized.hpp	/^	typedef mat<2, 4, int16, defaultp>				i16mat2x4;$/;"	t	namespace:glm	typeref:typename:mat<2,4,int16,defaultp>
i16mat2x4	./glm/fwd.hpp	/^	typedef mat<2, 4, int16, defaultp>	i16mat2x4;$/;"	t	namespace:glm	typeref:typename:mat<2,4,int16,defaultp>
i16mat3	./glm/ext/matrix_int3x3_sized.hpp	/^	typedef mat<3, 3, int16, defaultp>				i16mat3;$/;"	t	namespace:glm	typeref:typename:mat<3,3,int16,defaultp>
i16mat3x2	./glm/ext/matrix_int3x2_sized.hpp	/^	typedef mat<3, 2, int16, defaultp>				i16mat3x2;$/;"	t	namespace:glm	typeref:typename:mat<3,2,int16,defaultp>
i16mat3x2	./glm/fwd.hpp	/^	typedef mat<3, 2, int16, defaultp>	i16mat3x2;$/;"	t	namespace:glm	typeref:typename:mat<3,2,int16,defaultp>
i16mat3x3	./glm/ext/matrix_int3x3_sized.hpp	/^	typedef mat<3, 3, int16, defaultp>				i16mat3x3;$/;"	t	namespace:glm	typeref:typename:mat<3,3,int16,defaultp>
i16mat3x3	./glm/fwd.hpp	/^	typedef mat<3, 3, int16, defaultp>	i16mat3x3;$/;"	t	namespace:glm	typeref:typename:mat<3,3,int16,defaultp>
i16mat3x4	./glm/ext/matrix_int3x4_sized.hpp	/^	typedef mat<3, 4, int16, defaultp>				i16mat3x4;$/;"	t	namespace:glm	typeref:typename:mat<3,4,int16,defaultp>
i16mat3x4	./glm/fwd.hpp	/^	typedef mat<3, 4, int16, defaultp>	i16mat3x4;$/;"	t	namespace:glm	typeref:typename:mat<3,4,int16,defaultp>
i16mat4	./glm/ext/matrix_int4x4_sized.hpp	/^	typedef mat<4, 4, int16, defaultp>				i16mat4;$/;"	t	namespace:glm	typeref:typename:mat<4,4,int16,defaultp>
i16mat4x2	./glm/ext/matrix_int4x2_sized.hpp	/^	typedef mat<4, 2, int16, defaultp>				i16mat4x2;$/;"	t	namespace:glm	typeref:typename:mat<4,2,int16,defaultp>
i16mat4x2	./glm/fwd.hpp	/^	typedef mat<4, 2, int16, defaultp>	i16mat4x2;$/;"	t	namespace:glm	typeref:typename:mat<4,2,int16,defaultp>
i16mat4x3	./glm/ext/matrix_int4x3_sized.hpp	/^	typedef mat<4, 3, int16, defaultp>				i16mat4x3;$/;"	t	namespace:glm	typeref:typename:mat<4,3,int16,defaultp>
i16mat4x3	./glm/fwd.hpp	/^	typedef mat<4, 3, int16, defaultp>	i16mat4x3;$/;"	t	namespace:glm	typeref:typename:mat<4,3,int16,defaultp>
i16mat4x4	./glm/ext/matrix_int4x4_sized.hpp	/^	typedef mat<4, 4, int16, defaultp>				i16mat4x4;$/;"	t	namespace:glm	typeref:typename:mat<4,4,int16,defaultp>
i16mat4x4	./glm/fwd.hpp	/^	typedef mat<4, 4, int16, defaultp>	i16mat4x4;$/;"	t	namespace:glm	typeref:typename:mat<4,4,int16,defaultp>
i16vec1	./glm/ext/vector_int1_sized.hpp	/^	typedef vec<1, int16, defaultp>	i16vec1;$/;"	t	namespace:glm	typeref:typename:vec<1,int16,defaultp>
i16vec1	./glm/fwd.hpp	/^	typedef vec<1, i16, defaultp>	i16vec1;$/;"	t	namespace:glm	typeref:typename:vec<1,i16,defaultp>
i16vec2	./glm/ext/vector_int2_sized.hpp	/^	typedef vec<2, int16, defaultp>		i16vec2;$/;"	t	namespace:glm	typeref:typename:vec<2,int16,defaultp>
i16vec2	./glm/fwd.hpp	/^	typedef vec<2, i16, defaultp>	i16vec2;$/;"	t	namespace:glm	typeref:typename:vec<2,i16,defaultp>
i16vec3	./glm/ext/vector_int3_sized.hpp	/^	typedef vec<3, int16, defaultp>		i16vec3;$/;"	t	namespace:glm	typeref:typename:vec<3,int16,defaultp>
i16vec3	./glm/fwd.hpp	/^	typedef vec<3, i16, defaultp>	i16vec3;$/;"	t	namespace:glm	typeref:typename:vec<3,i16,defaultp>
i16vec4	./glm/ext/vector_int4_sized.hpp	/^	typedef vec<4, int16, defaultp>		i16vec4;$/;"	t	namespace:glm	typeref:typename:vec<4,int16,defaultp>
i16vec4	./glm/fwd.hpp	/^	typedef vec<4, i16, defaultp>	i16vec4;$/;"	t	namespace:glm	typeref:typename:vec<4,i16,defaultp>
i32	./glm/fwd.hpp	/^	typedef int32					i32;$/;"	t	namespace:glm	typeref:typename:int32
i32	./glm/gtc/type_precision.hpp	/^	typedef detail::int32 i32;$/;"	t	namespace:glm	typeref:typename:detail::int32
i32mat2	./glm/ext/matrix_int2x2_sized.hpp	/^	typedef mat<2, 2, int32, defaultp>				i32mat2;$/;"	t	namespace:glm	typeref:typename:mat<2,2,int32,defaultp>
i32mat2x2	./glm/ext/matrix_int2x2_sized.hpp	/^	typedef mat<2, 2, int32, defaultp>				i32mat2x2;$/;"	t	namespace:glm	typeref:typename:mat<2,2,int32,defaultp>
i32mat2x2	./glm/fwd.hpp	/^	typedef mat<2, 2, int32, defaultp>	i32mat2x2;$/;"	t	namespace:glm	typeref:typename:mat<2,2,int32,defaultp>
i32mat2x3	./glm/ext/matrix_int2x3_sized.hpp	/^	typedef mat<2, 3, int32, defaultp>				i32mat2x3;$/;"	t	namespace:glm	typeref:typename:mat<2,3,int32,defaultp>
i32mat2x3	./glm/fwd.hpp	/^	typedef mat<2, 3, int32, defaultp>	i32mat2x3;$/;"	t	namespace:glm	typeref:typename:mat<2,3,int32,defaultp>
i32mat2x4	./glm/ext/matrix_int2x4_sized.hpp	/^	typedef mat<2, 4, int32, defaultp>				i32mat2x4;$/;"	t	namespace:glm	typeref:typename:mat<2,4,int32,defaultp>
i32mat2x4	./glm/fwd.hpp	/^	typedef mat<2, 4, int32, defaultp>	i32mat2x4;$/;"	t	namespace:glm	typeref:typename:mat<2,4,int32,defaultp>
i32mat3	./glm/ext/matrix_int3x3_sized.hpp	/^	typedef mat<3, 3, int32, defaultp>				i32mat3;$/;"	t	namespace:glm	typeref:typename:mat<3,3,int32,defaultp>
i32mat3x2	./glm/ext/matrix_int3x2_sized.hpp	/^	typedef mat<3, 2, int32, defaultp>				i32mat3x2;$/;"	t	namespace:glm	typeref:typename:mat<3,2,int32,defaultp>
i32mat3x2	./glm/fwd.hpp	/^	typedef mat<3, 2, int32, defaultp>	i32mat3x2;$/;"	t	namespace:glm	typeref:typename:mat<3,2,int32,defaultp>
i32mat3x3	./glm/ext/matrix_int3x3_sized.hpp	/^	typedef mat<3, 3, int32, defaultp>				i32mat3x3;$/;"	t	namespace:glm	typeref:typename:mat<3,3,int32,defaultp>
i32mat3x3	./glm/fwd.hpp	/^	typedef mat<3, 3, int32, defaultp>	i32mat3x3;$/;"	t	namespace:glm	typeref:typename:mat<3,3,int32,defaultp>
i32mat3x4	./glm/ext/matrix_int3x4_sized.hpp	/^	typedef mat<3, 4, int32, defaultp>				i32mat3x4;$/;"	t	namespace:glm	typeref:typename:mat<3,4,int32,defaultp>
i32mat3x4	./glm/fwd.hpp	/^	typedef mat<3, 4, int32, defaultp>	i32mat3x4;$/;"	t	namespace:glm	typeref:typename:mat<3,4,int32,defaultp>
i32mat4	./glm/ext/matrix_int4x4_sized.hpp	/^	typedef mat<4, 4, int32, defaultp>				i32mat4;$/;"	t	namespace:glm	typeref:typename:mat<4,4,int32,defaultp>
i32mat4x2	./glm/ext/matrix_int4x2_sized.hpp	/^	typedef mat<4, 2, int32, defaultp>				i32mat4x2;$/;"	t	namespace:glm	typeref:typename:mat<4,2,int32,defaultp>
i32mat4x2	./glm/fwd.hpp	/^	typedef mat<4, 2, int32, defaultp>	i32mat4x2;$/;"	t	namespace:glm	typeref:typename:mat<4,2,int32,defaultp>
i32mat4x3	./glm/ext/matrix_int4x3_sized.hpp	/^	typedef mat<4, 3, int32, defaultp>				i32mat4x3;$/;"	t	namespace:glm	typeref:typename:mat<4,3,int32,defaultp>
i32mat4x3	./glm/fwd.hpp	/^	typedef mat<4, 3, int32, defaultp>	i32mat4x3;$/;"	t	namespace:glm	typeref:typename:mat<4,3,int32,defaultp>
i32mat4x4	./glm/ext/matrix_int4x4_sized.hpp	/^	typedef mat<4, 4, int32, defaultp>				i32mat4x4;$/;"	t	namespace:glm	typeref:typename:mat<4,4,int32,defaultp>
i32mat4x4	./glm/fwd.hpp	/^	typedef mat<4, 4, int32, defaultp>	i32mat4x4;$/;"	t	namespace:glm	typeref:typename:mat<4,4,int32,defaultp>
i32vec1	./glm/ext/vector_int1_sized.hpp	/^	typedef vec<1, int32, defaultp>	i32vec1;$/;"	t	namespace:glm	typeref:typename:vec<1,int32,defaultp>
i32vec1	./glm/fwd.hpp	/^	typedef vec<1, i32, defaultp>	i32vec1;$/;"	t	namespace:glm	typeref:typename:vec<1,i32,defaultp>
i32vec2	./glm/ext/vector_int2_sized.hpp	/^	typedef vec<2, int32, defaultp>		i32vec2;$/;"	t	namespace:glm	typeref:typename:vec<2,int32,defaultp>
i32vec2	./glm/fwd.hpp	/^	typedef vec<2, i32, defaultp>	i32vec2;$/;"	t	namespace:glm	typeref:typename:vec<2,i32,defaultp>
i32vec3	./glm/ext/vector_int3_sized.hpp	/^	typedef vec<3, int32, defaultp>		i32vec3;$/;"	t	namespace:glm	typeref:typename:vec<3,int32,defaultp>
i32vec3	./glm/fwd.hpp	/^	typedef vec<3, i32, defaultp>	i32vec3;$/;"	t	namespace:glm	typeref:typename:vec<3,i32,defaultp>
i32vec4	./glm/ext/vector_int4_sized.hpp	/^	typedef vec<4, int32, defaultp>		i32vec4;$/;"	t	namespace:glm	typeref:typename:vec<4,int32,defaultp>
i32vec4	./glm/fwd.hpp	/^	typedef vec<4, i32, defaultp>	i32vec4;$/;"	t	namespace:glm	typeref:typename:vec<4,i32,defaultp>
i64	./glm/fwd.hpp	/^	typedef int64					i64;$/;"	t	namespace:glm	typeref:typename:int64
i64	./glm/gtc/type_precision.hpp	/^	typedef detail::int64 i64;$/;"	t	namespace:glm	typeref:typename:detail::int64
i64mat2	./glm/ext/matrix_int2x2_sized.hpp	/^	typedef mat<2, 2, int64, defaultp>				i64mat2;$/;"	t	namespace:glm	typeref:typename:mat<2,2,int64,defaultp>
i64mat2x2	./glm/ext/matrix_int2x2_sized.hpp	/^	typedef mat<2, 2, int64, defaultp>				i64mat2x2;$/;"	t	namespace:glm	typeref:typename:mat<2,2,int64,defaultp>
i64mat2x2	./glm/fwd.hpp	/^	typedef mat<2, 2, int64, defaultp>	i64mat2x2;$/;"	t	namespace:glm	typeref:typename:mat<2,2,int64,defaultp>
i64mat2x3	./glm/ext/matrix_int2x3_sized.hpp	/^	typedef mat<2, 3, int64, defaultp>				i64mat2x3;$/;"	t	namespace:glm	typeref:typename:mat<2,3,int64,defaultp>
i64mat2x3	./glm/fwd.hpp	/^	typedef mat<2, 3, int64, defaultp>	i64mat2x3;$/;"	t	namespace:glm	typeref:typename:mat<2,3,int64,defaultp>
i64mat2x4	./glm/ext/matrix_int2x4_sized.hpp	/^	typedef mat<2, 4, int64, defaultp>				i64mat2x4;$/;"	t	namespace:glm	typeref:typename:mat<2,4,int64,defaultp>
i64mat2x4	./glm/fwd.hpp	/^	typedef mat<2, 4, int64, defaultp>	i64mat2x4;$/;"	t	namespace:glm	typeref:typename:mat<2,4,int64,defaultp>
i64mat3	./glm/ext/matrix_int3x3_sized.hpp	/^	typedef mat<3, 3, int64, defaultp>				i64mat3;$/;"	t	namespace:glm	typeref:typename:mat<3,3,int64,defaultp>
i64mat3x2	./glm/ext/matrix_int3x2_sized.hpp	/^	typedef mat<3, 2, int64, defaultp>				i64mat3x2;$/;"	t	namespace:glm	typeref:typename:mat<3,2,int64,defaultp>
i64mat3x2	./glm/fwd.hpp	/^	typedef mat<3, 2, int64, defaultp>	i64mat3x2;$/;"	t	namespace:glm	typeref:typename:mat<3,2,int64,defaultp>
i64mat3x3	./glm/ext/matrix_int3x3_sized.hpp	/^	typedef mat<3, 3, int64, defaultp>				i64mat3x3;$/;"	t	namespace:glm	typeref:typename:mat<3,3,int64,defaultp>
i64mat3x3	./glm/fwd.hpp	/^	typedef mat<3, 3, int64, defaultp>	i64mat3x3;$/;"	t	namespace:glm	typeref:typename:mat<3,3,int64,defaultp>
i64mat3x4	./glm/ext/matrix_int3x4_sized.hpp	/^	typedef mat<3, 4, int64, defaultp>				i64mat3x4;$/;"	t	namespace:glm	typeref:typename:mat<3,4,int64,defaultp>
i64mat3x4	./glm/fwd.hpp	/^	typedef mat<3, 4, int64, defaultp>	i64mat3x4;$/;"	t	namespace:glm	typeref:typename:mat<3,4,int64,defaultp>
i64mat4	./glm/ext/matrix_int4x4_sized.hpp	/^	typedef mat<4, 4, int64, defaultp>				i64mat4;$/;"	t	namespace:glm	typeref:typename:mat<4,4,int64,defaultp>
i64mat4x2	./glm/ext/matrix_int4x2_sized.hpp	/^	typedef mat<4, 2, int64, defaultp>				i64mat4x2;$/;"	t	namespace:glm	typeref:typename:mat<4,2,int64,defaultp>
i64mat4x2	./glm/fwd.hpp	/^	typedef mat<4, 2, int64, defaultp>	i64mat4x2;$/;"	t	namespace:glm	typeref:typename:mat<4,2,int64,defaultp>
i64mat4x3	./glm/ext/matrix_int4x3_sized.hpp	/^	typedef mat<4, 3, int64, defaultp>				i64mat4x3;$/;"	t	namespace:glm	typeref:typename:mat<4,3,int64,defaultp>
i64mat4x3	./glm/fwd.hpp	/^	typedef mat<4, 3, int64, defaultp>	i64mat4x3;$/;"	t	namespace:glm	typeref:typename:mat<4,3,int64,defaultp>
i64mat4x4	./glm/ext/matrix_int4x4_sized.hpp	/^	typedef mat<4, 4, int64, defaultp>				i64mat4x4;$/;"	t	namespace:glm	typeref:typename:mat<4,4,int64,defaultp>
i64mat4x4	./glm/fwd.hpp	/^	typedef mat<4, 4, int64, defaultp>	i64mat4x4;$/;"	t	namespace:glm	typeref:typename:mat<4,4,int64,defaultp>
i64vec1	./glm/ext/vector_int1_sized.hpp	/^	typedef vec<1, int64, defaultp>	i64vec1;$/;"	t	namespace:glm	typeref:typename:vec<1,int64,defaultp>
i64vec1	./glm/fwd.hpp	/^	typedef vec<1, i64, defaultp>	i64vec1;$/;"	t	namespace:glm	typeref:typename:vec<1,i64,defaultp>
i64vec2	./glm/ext/vector_int2_sized.hpp	/^	typedef vec<2, int64, defaultp>		i64vec2;$/;"	t	namespace:glm	typeref:typename:vec<2,int64,defaultp>
i64vec2	./glm/fwd.hpp	/^	typedef vec<2, i64, defaultp>	i64vec2;$/;"	t	namespace:glm	typeref:typename:vec<2,i64,defaultp>
i64vec3	./glm/ext/vector_int3_sized.hpp	/^	typedef vec<3, int64, defaultp>		i64vec3;$/;"	t	namespace:glm	typeref:typename:vec<3,int64,defaultp>
i64vec3	./glm/fwd.hpp	/^	typedef vec<3, i64, defaultp>	i64vec3;$/;"	t	namespace:glm	typeref:typename:vec<3,i64,defaultp>
i64vec4	./glm/ext/vector_int4_sized.hpp	/^	typedef vec<4, int64, defaultp>		i64vec4;$/;"	t	namespace:glm	typeref:typename:vec<4,int64,defaultp>
i64vec4	./glm/fwd.hpp	/^	typedef vec<4, i64, defaultp>	i64vec4;$/;"	t	namespace:glm	typeref:typename:vec<4,i64,defaultp>
i8	./glm/fwd.hpp	/^	typedef int8					i8;$/;"	t	namespace:glm	typeref:typename:int8
i8	./glm/gtc/type_precision.hpp	/^	typedef detail::int8 i8;$/;"	t	namespace:glm	typeref:typename:detail::int8
i8mat2	./glm/ext/matrix_int2x2_sized.hpp	/^	typedef mat<2, 2, int8, defaultp>				i8mat2;$/;"	t	namespace:glm	typeref:typename:mat<2,2,int8,defaultp>
i8mat2x2	./glm/ext/matrix_int2x2_sized.hpp	/^	typedef mat<2, 2, int8, defaultp>				i8mat2x2;$/;"	t	namespace:glm	typeref:typename:mat<2,2,int8,defaultp>
i8mat2x2	./glm/fwd.hpp	/^	typedef mat<2, 2, int8, defaultp>	i8mat2x2;$/;"	t	namespace:glm	typeref:typename:mat<2,2,int8,defaultp>
i8mat2x3	./glm/ext/matrix_int2x3_sized.hpp	/^	typedef mat<2, 3, int8, defaultp>				i8mat2x3;$/;"	t	namespace:glm	typeref:typename:mat<2,3,int8,defaultp>
i8mat2x3	./glm/fwd.hpp	/^	typedef mat<2, 3, int8, defaultp>	i8mat2x3;$/;"	t	namespace:glm	typeref:typename:mat<2,3,int8,defaultp>
i8mat2x4	./glm/ext/matrix_int2x4_sized.hpp	/^	typedef mat<2, 4, int8, defaultp>				i8mat2x4;$/;"	t	namespace:glm	typeref:typename:mat<2,4,int8,defaultp>
i8mat2x4	./glm/fwd.hpp	/^	typedef mat<2, 4, int8, defaultp>	i8mat2x4;$/;"	t	namespace:glm	typeref:typename:mat<2,4,int8,defaultp>
i8mat3	./glm/ext/matrix_int3x3_sized.hpp	/^	typedef mat<3, 3, int8, defaultp>				i8mat3;$/;"	t	namespace:glm	typeref:typename:mat<3,3,int8,defaultp>
i8mat3x2	./glm/ext/matrix_int3x2_sized.hpp	/^	typedef mat<3, 2, int8, defaultp>				i8mat3x2;$/;"	t	namespace:glm	typeref:typename:mat<3,2,int8,defaultp>
i8mat3x2	./glm/fwd.hpp	/^	typedef mat<3, 2, int8, defaultp>	i8mat3x2;$/;"	t	namespace:glm	typeref:typename:mat<3,2,int8,defaultp>
i8mat3x3	./glm/ext/matrix_int3x3_sized.hpp	/^	typedef mat<3, 3, int8, defaultp>				i8mat3x3;$/;"	t	namespace:glm	typeref:typename:mat<3,3,int8,defaultp>
i8mat3x3	./glm/fwd.hpp	/^	typedef mat<3, 3, int8, defaultp>	i8mat3x3;$/;"	t	namespace:glm	typeref:typename:mat<3,3,int8,defaultp>
i8mat3x4	./glm/ext/matrix_int3x4_sized.hpp	/^	typedef mat<3, 4, int8, defaultp>				i8mat3x4;$/;"	t	namespace:glm	typeref:typename:mat<3,4,int8,defaultp>
i8mat3x4	./glm/fwd.hpp	/^	typedef mat<3, 4, int8, defaultp>	i8mat3x4;$/;"	t	namespace:glm	typeref:typename:mat<3,4,int8,defaultp>
i8mat4	./glm/ext/matrix_int4x4_sized.hpp	/^	typedef mat<4, 4, int8, defaultp>				i8mat4;$/;"	t	namespace:glm	typeref:typename:mat<4,4,int8,defaultp>
i8mat4x2	./glm/ext/matrix_int4x2_sized.hpp	/^	typedef mat<4, 2, int8, defaultp>				i8mat4x2;$/;"	t	namespace:glm	typeref:typename:mat<4,2,int8,defaultp>
i8mat4x2	./glm/fwd.hpp	/^	typedef mat<4, 2, int8, defaultp>	i8mat4x2;$/;"	t	namespace:glm	typeref:typename:mat<4,2,int8,defaultp>
i8mat4x3	./glm/ext/matrix_int4x3_sized.hpp	/^	typedef mat<4, 3, int8, defaultp>				i8mat4x3;$/;"	t	namespace:glm	typeref:typename:mat<4,3,int8,defaultp>
i8mat4x3	./glm/fwd.hpp	/^	typedef mat<4, 3, int8, defaultp>	i8mat4x3;$/;"	t	namespace:glm	typeref:typename:mat<4,3,int8,defaultp>
i8mat4x4	./glm/ext/matrix_int4x4_sized.hpp	/^	typedef mat<4, 4, int8, defaultp>				i8mat4x4;$/;"	t	namespace:glm	typeref:typename:mat<4,4,int8,defaultp>
i8mat4x4	./glm/fwd.hpp	/^	typedef mat<4, 4, int8, defaultp>	i8mat4x4;$/;"	t	namespace:glm	typeref:typename:mat<4,4,int8,defaultp>
i8vec1	./glm/ext/vector_int1_sized.hpp	/^	typedef vec<1, int8, defaultp>	i8vec1;$/;"	t	namespace:glm	typeref:typename:vec<1,int8,defaultp>
i8vec1	./glm/fwd.hpp	/^	typedef vec<1, i8, defaultp>	i8vec1;$/;"	t	namespace:glm	typeref:typename:vec<1,i8,defaultp>
i8vec2	./glm/ext/vector_int2_sized.hpp	/^	typedef vec<2, int8, defaultp>		i8vec2;$/;"	t	namespace:glm	typeref:typename:vec<2,int8,defaultp>
i8vec2	./glm/fwd.hpp	/^	typedef vec<2, i8, defaultp>	i8vec2;$/;"	t	namespace:glm	typeref:typename:vec<2,i8,defaultp>
i8vec3	./glm/ext/vector_int3_sized.hpp	/^	typedef vec<3, int8, defaultp>		i8vec3;$/;"	t	namespace:glm	typeref:typename:vec<3,int8,defaultp>
i8vec3	./glm/fwd.hpp	/^	typedef vec<3, i8, defaultp>	i8vec3;$/;"	t	namespace:glm	typeref:typename:vec<3,i8,defaultp>
i8vec4	./glm/ext/vector_int4_sized.hpp	/^	typedef vec<4, int8, defaultp>		i8vec4;$/;"	t	namespace:glm	typeref:typename:vec<4,int8,defaultp>
i8vec4	./glm/fwd.hpp	/^	typedef vec<4, i8, defaultp>	i8vec4;$/;"	t	namespace:glm	typeref:typename:vec<4,i8,defaultp>
id	./glm/gtx/io.hpp	/^			static std::locale::id id;$/;"	m	class:glm::io::format_punct	typeref:typename:std::locale::id
id	./glm/gtx/io.inl	/^	template<typename CTy> std::locale::id format_punct<CTy>::id;$/;"	m	class:glm::io::format_punct<CTy>	typeref:typename:std::locale::id
identity	./glm/detail/qualifier.hpp	/^		GLM_FUNC_QUALIFIER GLM_CONSTEXPR static genType identity()$/;"	f	struct:glm::detail::init_gentype	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR genType
identity	./glm/ext/matrix_transform.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR genType identity()$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR genType
ieee_double_shape_type	./glm/ext/scalar_ulp.inl	/^} ieee_double_shape_type;$/;"	t	typeref:union:__anonb0ce8848020a	file:
ieee_float_shape_type	./glm/ext/scalar_ulp.inl	/^} ieee_float_shape_type;$/;"	t	typeref:union:__anonb0ce8848010a	file:
imat2	./glm/ext/matrix_int2x2.hpp	/^	typedef mat<2, 2, int, defaultp>	imat2;$/;"	t	namespace:glm	typeref:typename:mat<2,2,int,defaultp>
imat2	./glm/gtc/matrix_integer.hpp	/^	typedef mat<2, 2, int, defaultp>				imat2;$/;"	t	namespace:glm	typeref:typename:mat<2,2,int,defaultp>
imat2x2	./glm/ext/matrix_int2x2.hpp	/^	typedef mat<2, 2, int, defaultp>	imat2x2;$/;"	t	namespace:glm	typeref:typename:mat<2,2,int,defaultp>
imat2x2	./glm/fwd.hpp	/^	typedef mat<2, 2, int, defaultp>	imat2x2;$/;"	t	namespace:glm	typeref:typename:mat<2,2,int,defaultp>
imat2x2	./glm/gtc/matrix_integer.hpp	/^	typedef mat<2, 2, int, defaultp>				imat2x2;$/;"	t	namespace:glm	typeref:typename:mat<2,2,int,defaultp>
imat2x3	./glm/ext/matrix_int2x3.hpp	/^	typedef mat<2, 3, int, defaultp>	imat2x3;$/;"	t	namespace:glm	typeref:typename:mat<2,3,int,defaultp>
imat2x3	./glm/fwd.hpp	/^	typedef mat<2, 3, int, defaultp>	imat2x3;$/;"	t	namespace:glm	typeref:typename:mat<2,3,int,defaultp>
imat2x3	./glm/gtc/matrix_integer.hpp	/^	typedef mat<2, 3, int, defaultp>				imat2x3;$/;"	t	namespace:glm	typeref:typename:mat<2,3,int,defaultp>
imat2x4	./glm/ext/matrix_int2x4.hpp	/^	typedef mat<2, 4, int, defaultp>	imat2x4;$/;"	t	namespace:glm	typeref:typename:mat<2,4,int,defaultp>
imat2x4	./glm/fwd.hpp	/^	typedef mat<2, 4, int, defaultp>	imat2x4;$/;"	t	namespace:glm	typeref:typename:mat<2,4,int,defaultp>
imat2x4	./glm/gtc/matrix_integer.hpp	/^	typedef mat<2, 4, int, defaultp>				imat2x4;$/;"	t	namespace:glm	typeref:typename:mat<2,4,int,defaultp>
imat3	./glm/ext/matrix_int3x3.hpp	/^	typedef mat<3, 3, int, defaultp>	imat3;$/;"	t	namespace:glm	typeref:typename:mat<3,3,int,defaultp>
imat3	./glm/gtc/matrix_integer.hpp	/^	typedef mat<3, 3, int, defaultp>				imat3;$/;"	t	namespace:glm	typeref:typename:mat<3,3,int,defaultp>
imat3x2	./glm/ext/matrix_int3x2.hpp	/^	typedef mat<3, 2, int, defaultp>	imat3x2;$/;"	t	namespace:glm	typeref:typename:mat<3,2,int,defaultp>
imat3x2	./glm/fwd.hpp	/^	typedef mat<3, 2, int, defaultp>	imat3x2;$/;"	t	namespace:glm	typeref:typename:mat<3,2,int,defaultp>
imat3x2	./glm/gtc/matrix_integer.hpp	/^	typedef mat<3, 2, int, defaultp>				imat3x2;$/;"	t	namespace:glm	typeref:typename:mat<3,2,int,defaultp>
imat3x3	./glm/ext/matrix_int3x3.hpp	/^	typedef mat<3, 3, int, defaultp>	imat3x3;$/;"	t	namespace:glm	typeref:typename:mat<3,3,int,defaultp>
imat3x3	./glm/fwd.hpp	/^	typedef mat<3, 3, int, defaultp>	imat3x3;$/;"	t	namespace:glm	typeref:typename:mat<3,3,int,defaultp>
imat3x3	./glm/gtc/matrix_integer.hpp	/^	typedef mat<3, 3, int, defaultp>				imat3x3;$/;"	t	namespace:glm	typeref:typename:mat<3,3,int,defaultp>
imat3x4	./glm/ext/matrix_int3x4.hpp	/^	typedef mat<3, 4, int, defaultp>	imat3x4;$/;"	t	namespace:glm	typeref:typename:mat<3,4,int,defaultp>
imat3x4	./glm/fwd.hpp	/^	typedef mat<3, 4, int, defaultp>	imat3x4;$/;"	t	namespace:glm	typeref:typename:mat<3,4,int,defaultp>
imat3x4	./glm/gtc/matrix_integer.hpp	/^	typedef mat<3, 4, int, defaultp>				imat3x4;$/;"	t	namespace:glm	typeref:typename:mat<3,4,int,defaultp>
imat4	./glm/ext/matrix_int4x4.hpp	/^	typedef mat<4, 4, int, defaultp>	imat4;$/;"	t	namespace:glm	typeref:typename:mat<4,4,int,defaultp>
imat4	./glm/gtc/matrix_integer.hpp	/^	typedef mat<4, 4, int, defaultp>				imat4;$/;"	t	namespace:glm	typeref:typename:mat<4,4,int,defaultp>
imat4x2	./glm/ext/matrix_int4x2.hpp	/^	typedef mat<4, 2, int, defaultp>	imat4x2;$/;"	t	namespace:glm	typeref:typename:mat<4,2,int,defaultp>
imat4x2	./glm/fwd.hpp	/^	typedef mat<4, 2, int, defaultp>	imat4x2;$/;"	t	namespace:glm	typeref:typename:mat<4,2,int,defaultp>
imat4x2	./glm/gtc/matrix_integer.hpp	/^	typedef mat<4, 2, int, defaultp>				imat4x2;$/;"	t	namespace:glm	typeref:typename:mat<4,2,int,defaultp>
imat4x3	./glm/ext/matrix_int4x3.hpp	/^	typedef mat<4, 3, int, defaultp>	imat4x3;$/;"	t	namespace:glm	typeref:typename:mat<4,3,int,defaultp>
imat4x3	./glm/fwd.hpp	/^	typedef mat<4, 3, int, defaultp>	imat4x3;$/;"	t	namespace:glm	typeref:typename:mat<4,3,int,defaultp>
imat4x3	./glm/gtc/matrix_integer.hpp	/^	typedef mat<4, 3, int, defaultp>				imat4x3;$/;"	t	namespace:glm	typeref:typename:mat<4,3,int,defaultp>
imat4x4	./glm/ext/matrix_int4x4.hpp	/^	typedef mat<4, 4, int, defaultp>	imat4x4;$/;"	t	namespace:glm	typeref:typename:mat<4,4,int,defaultp>
imat4x4	./glm/fwd.hpp	/^	typedef mat<4, 4, int, defaultp>	imat4x4;$/;"	t	namespace:glm	typeref:typename:mat<4,4,int,defaultp>
imat4x4	./glm/gtc/matrix_integer.hpp	/^	typedef mat<4, 4, int, defaultp>				imat4x4;$/;"	t	namespace:glm	typeref:typename:mat<4,4,int,defaultp>
imulExtended	./glm/detail/func_integer.inl	/^	GLM_FUNC_QUALIFIER void imulExtended(int x, int y, int& msb, int& lsb)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER void
imulExtended	./glm/detail/func_integer.inl	/^	GLM_FUNC_QUALIFIER void imulExtended(vec<L, int, Q> const& x, vec<L, int, Q> const& y, vec<L, i/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER void
in	./glm/detail/func_common.inl	/^			float in;$/;"	m	union:glm::floatBitsToInt::__anon37df8f18010a	typeref:typename:float	file:
in	./glm/detail/func_common.inl	/^			float in;$/;"	m	union:glm::floatBitsToUint::__anon37df8f18020a	typeref:typename:float	file:
in	./glm/detail/func_common.inl	/^			int in;$/;"	m	union:glm::intBitsToFloat::__anon37df8f18030a	typeref:typename:int	file:
in	./glm/detail/func_common.inl	/^			uint in;$/;"	m	union:glm::uintBitsToFloat::__anon37df8f18040a	typeref:typename:uint	file:
in	./glm/detail/func_packing.inl	/^			double in;$/;"	m	union:glm::unpackDouble2x32::__anon919c3c0c0a0a	typeref:typename:double	file:
in	./glm/detail/func_packing.inl	/^			signed char in[4];$/;"	m	union:glm::packSnorm4x8::__anon919c3c0c070a	typeref:typename:signed char[4]	file:
in	./glm/detail/func_packing.inl	/^			signed short in[2];$/;"	m	union:glm::packHalf2x16::__anon919c3c0c0b0a	typeref:typename:signed short[2]	file:
in	./glm/detail/func_packing.inl	/^			signed short in[2];$/;"	m	union:glm::packSnorm2x16::__anon919c3c0c030a	typeref:typename:signed short[2]	file:
in	./glm/detail/func_packing.inl	/^			uint   in[2];$/;"	m	union:glm::packDouble2x32::__anon919c3c0c090a	typeref:typename:uint[2]	file:
in	./glm/detail/func_packing.inl	/^			uint in;$/;"	m	union:glm::unpackHalf2x16::__anon919c3c0c0c0a	typeref:typename:uint	file:
in	./glm/detail/func_packing.inl	/^			uint in;$/;"	m	union:glm::unpackSnorm2x16::__anon919c3c0c040a	typeref:typename:uint	file:
in	./glm/detail/func_packing.inl	/^			uint in;$/;"	m	union:glm::unpackSnorm4x8::__anon919c3c0c080a	typeref:typename:uint	file:
in	./glm/detail/func_packing.inl	/^			uint in;$/;"	m	union:glm::unpackUnorm2x16::__anon919c3c0c020a	typeref:typename:uint	file:
in	./glm/detail/func_packing.inl	/^			uint in;$/;"	m	union:glm::unpackUnorm4x8::__anon919c3c0c060a	typeref:typename:uint	file:
in	./glm/detail/func_packing.inl	/^			unsigned char in[4];$/;"	m	union:glm::packUnorm4x8::__anon919c3c0c050a	typeref:typename:unsigned char[4]	file:
in	./glm/detail/func_packing.inl	/^			unsigned short in[2];$/;"	m	union:glm::packUnorm2x16::__anon919c3c0c010a	typeref:typename:unsigned short[2]	file:
infinitePerspective	./glm/ext/matrix_clip_space.inl	/^	GLM_FUNC_QUALIFIER mat<4, 4, T, defaultp> infinitePerspective(T fovy, T aspect, T zNear)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER mat<4,4,T,defaultp>
infinitePerspectiveLH_NO	./glm/ext/matrix_clip_space.inl	/^	GLM_FUNC_QUALIFIER mat<4, 4, T, defaultp> infinitePerspectiveLH_NO(T fovy, T aspect, T zNear)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER mat<4,4,T,defaultp>
infinitePerspectiveLH_ZO	./glm/ext/matrix_clip_space.inl	/^	GLM_FUNC_QUALIFIER mat<4, 4, T, defaultp> infinitePerspectiveLH_ZO(T fovy, T aspect, T zNear)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER mat<4,4,T,defaultp>
infinitePerspectiveRH_NO	./glm/ext/matrix_clip_space.inl	/^	GLM_FUNC_QUALIFIER mat<4, 4, T, defaultp> infinitePerspectiveRH_NO(T fovy, T aspect, T zNear)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER mat<4,4,T,defaultp>
infinitePerspectiveRH_ZO	./glm/ext/matrix_clip_space.inl	/^	GLM_FUNC_QUALIFIER mat<4, 4, T, defaultp> infinitePerspectiveRH_ZO(T fovy, T aspect, T zNear)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER mat<4,4,T,defaultp>
info_arch	./glm/build/CMakeFiles/3.31.0-rc1/CompilerIdC/CMakeCCompilerId.c	/^char const* info_arch = "INFO" ":" "arch[" ARCHITECTURE_ID "]";$/;"	v	typeref:typename:char const *
info_arch	./glm/build/CMakeFiles/3.31.0-rc1/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^char const* info_arch = "INFO" ":" "arch[" ARCHITECTURE_ID "]";$/;"	v	typeref:typename:char const *
info_compiler	./glm/build/CMakeFiles/3.31.0-rc1/CompilerIdC/CMakeCCompilerId.c	/^char const* info_compiler = "INFO" ":" "compiler[" COMPILER_ID "]";$/;"	v	typeref:typename:char const *
info_compiler	./glm/build/CMakeFiles/3.31.0-rc1/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^char const* info_compiler = "INFO" ":" "compiler[" COMPILER_ID "]";$/;"	v	typeref:typename:char const *
info_cray	./glm/build/CMakeFiles/3.31.0-rc1/CompilerIdC/CMakeCCompilerId.c	/^char const *info_cray = "INFO" ":" "compiler_wrapper[CrayPrgEnv]";$/;"	v	typeref:typename:char const *
info_cray	./glm/build/CMakeFiles/3.31.0-rc1/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^char const *info_cray = "INFO" ":" "compiler_wrapper[CrayPrgEnv]";$/;"	v	typeref:typename:char const *
info_language_extensions_default	./glm/build/CMakeFiles/3.31.0-rc1/CompilerIdC/CMakeCCompilerId.c	/^const char* info_language_extensions_default = "INFO" ":" "extensions_default["$/;"	v	typeref:typename:const char *
info_language_extensions_default	./glm/build/CMakeFiles/3.31.0-rc1/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^const char* info_language_extensions_default = "INFO" ":" "extensions_default["$/;"	v	typeref:typename:const char *
info_language_standard_default	./glm/build/CMakeFiles/3.31.0-rc1/CompilerIdC/CMakeCCompilerId.c	/^const char* info_language_standard_default =$/;"	v	typeref:typename:const char *
info_language_standard_default	./glm/build/CMakeFiles/3.31.0-rc1/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^const char* info_language_standard_default = "INFO" ":" "standard_default["$/;"	v	typeref:typename:const char *
info_platform	./glm/build/CMakeFiles/3.31.0-rc1/CompilerIdC/CMakeCCompilerId.c	/^char const* info_platform = "INFO" ":" "platform[" PLATFORM_ID "]";$/;"	v	typeref:typename:char const *
info_platform	./glm/build/CMakeFiles/3.31.0-rc1/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^char const* info_platform = "INFO" ":" "platform[" PLATFORM_ID "]";$/;"	v	typeref:typename:char const *
info_simulate	./glm/build/CMakeFiles/3.31.0-rc1/CompilerIdC/CMakeCCompilerId.c	/^char const* info_simulate = "INFO" ":" "simulate[" SIMULATE_ID "]";$/;"	v	typeref:typename:char const *
info_simulate	./glm/build/CMakeFiles/3.31.0-rc1/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^char const* info_simulate = "INFO" ":" "simulate[" SIMULATE_ID "]";$/;"	v	typeref:typename:char const *
info_simulate_version	./glm/build/CMakeFiles/3.31.0-rc1/CompilerIdC/CMakeCCompilerId.c	/^char const info_simulate_version[] = {$/;"	v	typeref:typename:char const[]
info_simulate_version	./glm/build/CMakeFiles/3.31.0-rc1/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^char const info_simulate_version[] = {$/;"	v	typeref:typename:char const[]
info_version	./glm/build/CMakeFiles/3.31.0-rc1/CompilerIdC/CMakeCCompilerId.c	/^char const info_version[] = {$/;"	v	typeref:typename:char const[]
info_version	./glm/build/CMakeFiles/3.31.0-rc1/CompilerIdC/CMakeCCompilerId.c	/^char const* info_version = "INFO" ":" "compiler_version[" COMPILER_VERSION "]";$/;"	v	typeref:typename:char const *
info_version	./glm/build/CMakeFiles/3.31.0-rc1/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^char const info_version[] = {$/;"	v	typeref:typename:char const[]
info_version	./glm/build/CMakeFiles/3.31.0-rc1/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^char const* info_version = "INFO" ":" "compiler_version[" COMPILER_VERSION "]";$/;"	v	typeref:typename:char const *
info_version_internal	./glm/build/CMakeFiles/3.31.0-rc1/CompilerIdC/CMakeCCompilerId.c	/^char const info_version_internal[] = {$/;"	v	typeref:typename:char const[]
info_version_internal	./glm/build/CMakeFiles/3.31.0-rc1/CompilerIdC/CMakeCCompilerId.c	/^char const* info_version_internal = "INFO" ":" "compiler_version_internal[" COMPILER_VERSION_INT/;"	v	typeref:typename:char const *
info_version_internal	./glm/build/CMakeFiles/3.31.0-rc1/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^char const info_version_internal[] = {$/;"	v	typeref:typename:char const[]
info_version_internal	./glm/build/CMakeFiles/3.31.0-rc1/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^char const* info_version_internal = "INFO" ":" "compiler_version_internal[" COMPILER_VERSION_INT/;"	v	typeref:typename:char const *
init_gentype	./glm/detail/qualifier.hpp	/^	struct init_gentype$/;"	s	namespace:glm::detail
init_gentype	./glm/detail/qualifier.hpp	/^	struct init_gentype<genType, GENTYPE_MAT>$/;"	s	namespace:glm::detail
init_gentype	./glm/detail/qualifier.hpp	/^	struct init_gentype<genType, GENTYPE_QUAT>$/;"	s	namespace:glm::detail
int1	./glm/gtx/compatibility.hpp	/^	typedef int							int1;			\/\/!< \\brief integer vector with 1 component. (From GLM_GTX_compati/;"	t	namespace:glm	typeref:typename:int
int16	./glm/ext/scalar_int_sized.hpp	/^		typedef std::int16_t		int16;$/;"	t	namespace:glm::detail	typeref:typename:std::int16_t
int16	./glm/ext/scalar_int_sized.hpp	/^	typedef detail::int16		int16;$/;"	t	namespace:glm	typeref:typename:detail::int16
int16	./glm/fwd.hpp	/^	typedef std::int16_t			int16;$/;"	t	namespace:glm	typeref:typename:std::int16_t
int16_t	./glm/fwd.hpp	/^	typedef int16					int16_t;$/;"	t	namespace:glm	typeref:typename:int16
int16_t	./glm/gtc/type_precision.hpp	/^	typedef detail::int16 int16_t;$/;"	t	namespace:glm	typeref:typename:detail::int16
int1x1	./glm/gtx/compatibility.hpp	/^	typedef int							int1x1;			\/\/!< \\brief integer matrix with 1 component. (From GLM_GTX_compa/;"	t	namespace:glm	typeref:typename:int
int2	./glm/gtx/compatibility.hpp	/^	typedef vec<2, int, highp>			int2;			\/\/!< \\brief integer vector with 2 components. (From GLM/;"	t	namespace:glm	typeref:typename:vec<2,int,highp>
int2x2	./glm/gtx/compatibility.hpp	/^	typedef mat<2, 2, int, highp>		int2x2;			\/\/!< \\brief integer matrix with 2 x 2 components. (/;"	t	namespace:glm	typeref:typename:mat<2,2,int,highp>
int2x3	./glm/gtx/compatibility.hpp	/^	typedef mat<2, 3, int, highp>		int2x3;			\/\/!< \\brief integer matrix with 2 x 3 components. (/;"	t	namespace:glm	typeref:typename:mat<2,3,int,highp>
int2x4	./glm/gtx/compatibility.hpp	/^	typedef mat<2, 4, int, highp>		int2x4;			\/\/!< \\brief integer matrix with 2 x 4 components. (/;"	t	namespace:glm	typeref:typename:mat<2,4,int,highp>
int3	./glm/gtx/compatibility.hpp	/^	typedef vec<3, int, highp>			int3;			\/\/!< \\brief integer vector with 3 components. (From GLM/;"	t	namespace:glm	typeref:typename:vec<3,int,highp>
int32	./glm/ext/scalar_int_sized.hpp	/^		typedef std::int32_t		int32;$/;"	t	namespace:glm::detail	typeref:typename:std::int32_t
int32	./glm/ext/scalar_int_sized.hpp	/^	typedef detail::int32		int32;$/;"	t	namespace:glm	typeref:typename:detail::int32
int32	./glm/fwd.hpp	/^	typedef std::int32_t			int32;$/;"	t	namespace:glm	typeref:typename:std::int32_t
int32_t	./glm/fwd.hpp	/^	typedef int32					int32_t;$/;"	t	namespace:glm	typeref:typename:int32
int32_t	./glm/gtc/type_precision.hpp	/^	typedef detail::int32 int32_t;$/;"	t	namespace:glm	typeref:typename:detail::int32
int3x2	./glm/gtx/compatibility.hpp	/^	typedef mat<3, 2, int, highp>		int3x2;			\/\/!< \\brief integer matrix with 3 x 2 components. (/;"	t	namespace:glm	typeref:typename:mat<3,2,int,highp>
int3x3	./glm/gtx/compatibility.hpp	/^	typedef mat<3, 3, int, highp>		int3x3;			\/\/!< \\brief integer matrix with 3 x 3 components. (/;"	t	namespace:glm	typeref:typename:mat<3,3,int,highp>
int3x4	./glm/gtx/compatibility.hpp	/^	typedef mat<3, 4, int, highp>		int3x4;			\/\/!< \\brief integer matrix with 3 x 4 components. (/;"	t	namespace:glm	typeref:typename:mat<3,4,int,highp>
int4	./glm/gtx/compatibility.hpp	/^	typedef vec<4, int, highp>			int4;			\/\/!< \\brief integer vector with 4 components. (From GLM/;"	t	namespace:glm	typeref:typename:vec<4,int,highp>
int4x2	./glm/gtx/compatibility.hpp	/^	typedef mat<4, 2, int, highp>		int4x2;			\/\/!< \\brief integer matrix with 4 x 2 components. (/;"	t	namespace:glm	typeref:typename:mat<4,2,int,highp>
int4x3	./glm/gtx/compatibility.hpp	/^	typedef mat<4, 3, int, highp>		int4x3;			\/\/!< \\brief integer matrix with 4 x 3 components. (/;"	t	namespace:glm	typeref:typename:mat<4,3,int,highp>
int4x4	./glm/gtx/compatibility.hpp	/^	typedef mat<4, 4, int, highp>		int4x4;			\/\/!< \\brief integer matrix with 4 x 4 components. (/;"	t	namespace:glm	typeref:typename:mat<4,4,int,highp>
int64	./glm/detail/setup.hpp	/^		typedef std::int64_t						int64;$/;"	t	namespace:glm::detail	typeref:typename:std::int64_t
int64	./glm/ext/scalar_int_sized.hpp	/^	typedef detail::int64		int64;$/;"	t	namespace:glm	typeref:typename:detail::int64
int64	./glm/fwd.hpp	/^	typedef std::int64_t			int64;$/;"	t	namespace:glm	typeref:typename:std::int64_t
int64_t	./glm/fwd.hpp	/^	typedef int64					int64_t;$/;"	t	namespace:glm	typeref:typename:int64
int64_t	./glm/gtc/type_precision.hpp	/^	typedef detail::int64 int64_t;$/;"	t	namespace:glm	typeref:typename:detail::int64
int8	./glm/ext/scalar_int_sized.hpp	/^		typedef std::int8_t			int8;$/;"	t	namespace:glm::detail	typeref:typename:std::int8_t
int8	./glm/ext/scalar_int_sized.hpp	/^	typedef detail::int8		int8;$/;"	t	namespace:glm	typeref:typename:detail::int8
int8	./glm/fwd.hpp	/^	typedef std::int8_t				int8;$/;"	t	namespace:glm	typeref:typename:std::int8_t
int8_t	./glm/fwd.hpp	/^	typedef int8					int8_t;$/;"	t	namespace:glm	typeref:typename:int8
int8_t	./glm/gtc/type_precision.hpp	/^	typedef detail::int8 int8_t;$/;"	t	namespace:glm	typeref:typename:detail::int8
intBitsToFloat	./glm/detail/func_common.inl	/^	GLM_FUNC_QUALIFIER float intBitsToFloat(int v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER float
intBitsToFloat	./glm/detail/func_common.inl	/^	GLM_FUNC_QUALIFIER vec<L, float, Q> intBitsToFloat(vec<L, int, Q> const& v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<L,float,Q>
int_type	./glm/detail/type_float.hpp	/^		typedef detail::int64 int_type;$/;"	t	union:glm::detail::float_t	typeref:typename:detail::int64
int_type	./glm/detail/type_float.hpp	/^		typedef int int_type;$/;"	t	union:glm::detail::float_t	typeref:typename:int
intermediate	./glm/gtx/quaternion.inl	/^	GLM_FUNC_QUALIFIER qua<T, Q> intermediate$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER qua<T,Q>
interpolate	./glm/gtx/matrix_interpolation.inl	/^	GLM_FUNC_QUALIFIER mat<4, 4, T, Q> interpolate(mat<4, 4, T, Q> const& m1, mat<4, 4, T, Q> const/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER mat<4,4,T,Q>
intersectLineSphere	./glm/gtx/intersect.inl	/^	GLM_FUNC_QUALIFIER bool intersectLineSphere$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER bool
intersectLineTriangle	./glm/gtx/intersect.inl	/^	GLM_FUNC_QUALIFIER bool intersectLineTriangle$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER bool
intersectRayPlane	./glm/gtx/intersect.inl	/^	GLM_FUNC_QUALIFIER bool intersectRayPlane$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER bool
intersectRaySphere	./glm/gtx/intersect.inl	/^	GLM_FUNC_QUALIFIER bool intersectRaySphere$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER bool
intersectRayTriangle	./glm/gtx/intersect.inl	/^	GLM_FUNC_QUALIFIER bool intersectRayTriangle$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER bool
inverse	./glm/detail/func_matrix.inl	/^	GLM_FUNC_QUALIFIER mat<C, R, T, Q> inverse(mat<C, R, T, Q> const& m)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER mat<C,R,T,Q>
inverse	./glm/ext/quaternion_common.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR qua<T, Q> inverse(qua<T, Q> const& q)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR qua<T,Q>
inverse	./glm/gtx/dual_quaternion.inl	/^	GLM_FUNC_QUALIFIER tdualquat<T, Q> inverse(tdualquat<T, Q> const& q)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tdualquat<T,Q>
inverseTranspose	./glm/gtc/matrix_inverse.inl	/^	GLM_FUNC_QUALIFIER mat<2, 2, T, Q> inverseTranspose(mat<2, 2, T, Q> const& m)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER mat<2,2,T,Q>
inverseTranspose	./glm/gtc/matrix_inverse.inl	/^	GLM_FUNC_QUALIFIER mat<3, 3, T, Q> inverseTranspose(mat<3, 3, T, Q> const& m)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER mat<3,3,T,Q>
inverseTranspose	./glm/gtc/matrix_inverse.inl	/^	GLM_FUNC_QUALIFIER mat<4, 4, T, Q> inverseTranspose(mat<4, 4, T, Q> const& m)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER mat<4,4,T,Q>
inversesqrt	./glm/detail/func_exponential.inl	/^	GLM_FUNC_QUALIFIER genType inversesqrt(genType x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genType
inversesqrt	./glm/detail/func_exponential.inl	/^	GLM_FUNC_QUALIFIER vec<L, T, Q> inversesqrt(vec<L, T, Q> const& x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<L,T,Q>
io	./glm/gtx/io.hpp	/^	namespace io$/;"	n	namespace:glm
io	./glm/gtx/io.inl	/^namespace io$/;"	n	namespace:glm	file:
iround	./glm/ext/scalar_common.inl	/^	GLM_FUNC_QUALIFIER int iround(genType const& x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER int
iround	./glm/ext/vector_common.inl	/^	GLM_FUNC_QUALIFIER vec<L, int, Q> iround(vec<L, T, Q> const& x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<L,int,Q>
isCompNull	./glm/gtx/vector_query.inl	/^	GLM_FUNC_QUALIFIER vec<2, bool, Q> isCompNull(vec<2, T, Q> const& v, T const& epsilon)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<2,bool,Q>
isCompNull	./glm/gtx/vector_query.inl	/^	GLM_FUNC_QUALIFIER vec<3, bool, Q> isCompNull(vec<3, T, Q> const& v, T const& epsilon)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<3,bool,Q>
isCompNull	./glm/gtx/vector_query.inl	/^	GLM_FUNC_QUALIFIER vec<4, bool, Q> isCompNull(vec<4, T, Q> const& v, T const& epsilon)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<4,bool,Q>
isCompNull	./glm/gtx/vector_query.inl	/^	GLM_FUNC_QUALIFIER vec<L, bool, Q> isCompNull(vec<L, T, Q> const& v, T const& epsilon)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<L,bool,Q>
isIdentity	./glm/gtx/matrix_query.inl	/^	GLM_FUNC_QUALIFIER bool isIdentity(mat<C, R, T, Q> const& m, T const& epsilon)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER bool
isMultiple	./glm/ext/scalar_integer.inl	/^	GLM_FUNC_QUALIFIER bool isMultiple(genIUType Value, genIUType Multiple)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER bool
isMultiple	./glm/ext/vector_integer.inl	/^	GLM_FUNC_QUALIFIER vec<L, bool, Q> isMultiple(vec<L, T, Q> const& Value, T Multiple)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<L,bool,Q>
isMultiple	./glm/ext/vector_integer.inl	/^	GLM_FUNC_QUALIFIER vec<L, bool, Q> isMultiple(vec<L, T, Q> const& Value, vec<L, T, Q> const& Mu/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<L,bool,Q>
isNormalized	./glm/gtx/matrix_query.inl	/^	GLM_FUNC_QUALIFIER bool isNormalized(mat<2, 2, T, Q> const& m, T const& epsilon)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER bool
isNormalized	./glm/gtx/matrix_query.inl	/^	GLM_FUNC_QUALIFIER bool isNormalized(mat<3, 3, T, Q> const& m, T const& epsilon)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER bool
isNormalized	./glm/gtx/matrix_query.inl	/^	GLM_FUNC_QUALIFIER bool isNormalized(mat<4, 4, T, Q> const& m, T const& epsilon)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER bool
isNormalized	./glm/gtx/vector_query.inl	/^	GLM_FUNC_QUALIFIER bool isNormalized(vec<L, T, Q> const& v, T const& epsilon)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER bool
isNull	./glm/gtx/matrix_query.inl	/^	GLM_FUNC_QUALIFIER bool isNull(mat<2, 2, T, Q> const& m, T const& epsilon)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER bool
isNull	./glm/gtx/matrix_query.inl	/^	GLM_FUNC_QUALIFIER bool isNull(mat<3, 3, T, Q> const& m, T const& epsilon)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER bool
isNull	./glm/gtx/matrix_query.inl	/^	GLM_FUNC_QUALIFIER bool isNull(mat<4, 4, T, Q> const& m, T const& epsilon)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER bool
isNull	./glm/gtx/vector_query.inl	/^	GLM_FUNC_QUALIFIER bool isNull(vec<L, T, Q> const& v, T const& epsilon)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER bool
isOrthogonal	./glm/gtx/matrix_query.inl	/^	GLM_FUNC_QUALIFIER bool isOrthogonal(mat<C, R, T, Q> const& m, T const& epsilon)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER bool
isPowerOfTwo	./glm/ext/scalar_integer.inl	/^	GLM_FUNC_QUALIFIER bool isPowerOfTwo(genIUType Value)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER bool
isPowerOfTwo	./glm/ext/vector_integer.inl	/^	GLM_FUNC_QUALIFIER vec<L, bool, Q> isPowerOfTwo(vec<L, T, Q> const& Value)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<L,bool,Q>
is_aligned	./glm/detail/qualifier.hpp	/^		struct is_aligned<glm::aligned_highp>$/;"	s	namespace:glm::detail
is_aligned	./glm/detail/qualifier.hpp	/^		struct is_aligned<glm::aligned_lowp>$/;"	s	namespace:glm::detail
is_aligned	./glm/detail/qualifier.hpp	/^		struct is_aligned<glm::aligned_mediump>$/;"	s	namespace:glm::detail
is_aligned	./glm/detail/qualifier.hpp	/^	struct is_aligned$/;"	s	namespace:glm::detail
is_int	./glm/detail/setup.hpp	/^	struct is_int$/;"	s	namespace:glm::detail
is_int	./glm/detail/setup.hpp	/^	struct is_int<signed int>$/;"	s	namespace:glm::detail
is_int	./glm/detail/setup.hpp	/^	struct is_int<unsigned int>$/;"	s	namespace:glm::detail
is_int	./glm/ext/scalar_int_sized.hpp	/^	struct is_int<int16>$/;"	s	namespace:glm::detail
is_int	./glm/ext/scalar_int_sized.hpp	/^	struct is_int<int64>$/;"	s	namespace:glm::detail
is_int	./glm/ext/scalar_int_sized.hpp	/^	struct is_int<int8>$/;"	s	namespace:glm::detail
is_int	./glm/ext/scalar_uint_sized.hpp	/^	struct is_int<uint16>$/;"	s	namespace:glm::detail
is_int	./glm/ext/scalar_uint_sized.hpp	/^	struct is_int<uint64>$/;"	s	namespace:glm::detail
is_int	./glm/ext/scalar_uint_sized.hpp	/^	struct is_int<uint8>$/;"	s	namespace:glm::detail
is_mat	./glm/gtx/type_trait.hpp	/^		static bool const is_mat = false;$/;"	m	struct:glm::type	typeref:typename:bool const
is_mat	./glm/gtx/type_trait.hpp	/^		static bool const is_mat = true;$/;"	m	struct:glm::type	typeref:typename:bool const
is_mat	./glm/gtx/type_trait.inl	/^	bool const type<T>::is_mat;$/;"	m	class:glm::type<T>	typeref:typename:bool const
is_mat	./glm/gtx/type_trait.inl	/^	bool const type<mat<C, R, T, Q> >::is_mat;$/;"	m	class:glm::type<mat<C, R, T, Q> >	typeref:typename:bool const
is_mat	./glm/gtx/type_trait.inl	/^	bool const type<qua<T, Q> >::is_mat;$/;"	m	class:glm::type<qua<T, Q> >	typeref:typename:bool const
is_mat	./glm/gtx/type_trait.inl	/^	bool const type<tdualquat<T, Q> >::is_mat;$/;"	m	class:glm::type<tdualquat<T, Q> >	typeref:typename:bool const
is_mat	./glm/gtx/type_trait.inl	/^	bool const type<vec<L, T, Q> >::is_mat;$/;"	m	class:glm::type<vec<L, T, Q> >	typeref:typename:bool const
is_quat	./glm/gtx/type_trait.hpp	/^		static bool const is_quat = false;$/;"	m	struct:glm::type	typeref:typename:bool const
is_quat	./glm/gtx/type_trait.hpp	/^		static bool const is_quat = true;$/;"	m	struct:glm::type	typeref:typename:bool const
is_quat	./glm/gtx/type_trait.inl	/^	bool const type<T>::is_quat;$/;"	m	class:glm::type<T>	typeref:typename:bool const
is_quat	./glm/gtx/type_trait.inl	/^	bool const type<mat<C, R, T, Q> >::is_quat;$/;"	m	class:glm::type<mat<C, R, T, Q> >	typeref:typename:bool const
is_quat	./glm/gtx/type_trait.inl	/^	bool const type<qua<T, Q> >::is_quat;$/;"	m	class:glm::type<qua<T, Q> >	typeref:typename:bool const
is_quat	./glm/gtx/type_trait.inl	/^	bool const type<tdualquat<T, Q> >::is_quat;$/;"	m	class:glm::type<tdualquat<T, Q> >	typeref:typename:bool const
is_quat	./glm/gtx/type_trait.inl	/^	bool const type<vec<L, T, Q> >::is_quat;$/;"	m	class:glm::type<vec<L, T, Q> >	typeref:typename:bool const
is_vec	./glm/gtx/type_trait.hpp	/^		static bool const is_vec = false;$/;"	m	struct:glm::type	typeref:typename:bool const
is_vec	./glm/gtx/type_trait.hpp	/^		static bool const is_vec = true;$/;"	m	struct:glm::type	typeref:typename:bool const
is_vec	./glm/gtx/type_trait.inl	/^	bool const type<T>::is_vec;$/;"	m	class:glm::type<T>	typeref:typename:bool const
is_vec	./glm/gtx/type_trait.inl	/^	bool const type<mat<C, R, T, Q> >::is_vec;$/;"	m	class:glm::type<mat<C, R, T, Q> >	typeref:typename:bool const
is_vec	./glm/gtx/type_trait.inl	/^	bool const type<qua<T, Q> >::is_vec;$/;"	m	class:glm::type<qua<T, Q> >	typeref:typename:bool const
is_vec	./glm/gtx/type_trait.inl	/^	bool const type<tdualquat<T, Q> >::is_vec;$/;"	m	class:glm::type<tdualquat<T, Q> >	typeref:typename:bool const
is_vec	./glm/gtx/type_trait.inl	/^	bool const type<vec<L, T, Q> >::is_vec;$/;"	m	class:glm::type<vec<L, T, Q> >	typeref:typename:bool const
isdenormal	./glm/gtx/common.inl	/^	GLM_FUNC_QUALIFIER bool isdenormal(T const& x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER bool
isdenormal	./glm/gtx/common.inl	/^	GLM_FUNC_QUALIFIER typename vec<1, T, Q>::bool_type isdenormal$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER typename vec<1,T,Q>::bool_type
isdenormal	./glm/gtx/common.inl	/^	GLM_FUNC_QUALIFIER typename vec<2, T, Q>::bool_type isdenormal$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER typename vec<2,T,Q>::bool_type
isdenormal	./glm/gtx/common.inl	/^	GLM_FUNC_QUALIFIER typename vec<3, T, Q>::bool_type isdenormal$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER typename vec<3,T,Q>::bool_type
isdenormal	./glm/gtx/common.inl	/^	GLM_FUNC_QUALIFIER typename vec<4, T, Q>::bool_type isdenormal$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER typename vec<4,T,Q>::bool_type
isfinite	./glm/gtx/compatibility.inl	/^	GLM_FUNC_QUALIFIER bool isfinite($/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER bool
isfinite	./glm/gtx/compatibility.inl	/^	GLM_FUNC_QUALIFIER vec<1, bool, Q> isfinite($/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<1,bool,Q>
isfinite	./glm/gtx/compatibility.inl	/^	GLM_FUNC_QUALIFIER vec<2, bool, Q> isfinite($/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<2,bool,Q>
isfinite	./glm/gtx/compatibility.inl	/^	GLM_FUNC_QUALIFIER vec<3, bool, Q> isfinite($/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<3,bool,Q>
isfinite	./glm/gtx/compatibility.inl	/^	GLM_FUNC_QUALIFIER vec<4, bool, Q> isfinite($/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<4,bool,Q>
isinf	./glm/detail/func_common.inl	/^		GLM_FUNC_QUALIFIER bool isinf(genType x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER bool
isinf	./glm/detail/func_common.inl	/^	GLM_FUNC_QUALIFIER vec<L, bool, Q> isinf(vec<L, T, Q> const& v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<L,bool,Q>
isinf	./glm/ext/quaternion_common.inl	/^	GLM_FUNC_QUALIFIER vec<4, bool, Q> isinf(qua<T, Q> const& q)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<4,bool,Q>
isnan	./glm/detail/func_common.inl	/^		GLM_FUNC_QUALIFIER bool isnan(genType x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER bool
isnan	./glm/detail/func_common.inl	/^	GLM_FUNC_QUALIFIER vec<L, bool, Q> isnan(vec<L, T, Q> const& v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<L,bool,Q>
isnan	./glm/ext/quaternion_common.inl	/^	GLM_FUNC_QUALIFIER vec<4, bool, Q> isnan(qua<T, Q> const& q)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<4,bool,Q>
ivec1	./glm/ext/vector_int1.hpp	/^	typedef vec<1, int, defaultp>			ivec1;$/;"	t	namespace:glm	typeref:typename:vec<1,int,defaultp>
ivec1	./glm/fwd.hpp	/^	typedef vec<1, int, defaultp>	ivec1;$/;"	t	namespace:glm	typeref:typename:vec<1,int,defaultp>
ivec2	./glm/ext/vector_int2.hpp	/^	typedef vec<2, int, defaultp>		ivec2;$/;"	t	namespace:glm	typeref:typename:vec<2,int,defaultp>
ivec2	./glm/fwd.hpp	/^	typedef vec<2, int, defaultp>	ivec2;$/;"	t	namespace:glm	typeref:typename:vec<2,int,defaultp>
ivec3	./glm/ext/vector_int3.hpp	/^	typedef vec<3, int, defaultp>		ivec3;$/;"	t	namespace:glm	typeref:typename:vec<3,int,defaultp>
ivec3	./glm/fwd.hpp	/^	typedef vec<3, int, defaultp>	ivec3;$/;"	t	namespace:glm	typeref:typename:vec<3,int,defaultp>
ivec4	./glm/ext/vector_int4.hpp	/^	typedef vec<4, int, defaultp>		ivec4;$/;"	t	namespace:glm	typeref:typename:vec<4,int,defaultp>
ivec4	./glm/fwd.hpp	/^	typedef vec<4, int, defaultp>	ivec4;$/;"	t	namespace:glm	typeref:typename:vec<4,int,defaultp>
l1Norm	./glm/gtx/norm.inl	/^	GLM_FUNC_QUALIFIER T l1Norm(vec<3, T, Q> const& a, vec<3, T, Q> const& b)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER T
l1Norm	./glm/gtx/norm.inl	/^	GLM_FUNC_QUALIFIER T l1Norm(vec<3, T, Q> const& v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER T
l2Norm	./glm/gtx/norm.inl	/^	GLM_FUNC_QUALIFIER T l2Norm(vec<3, T, Q> const& a, vec<3, T, Q> const& b$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER T
l2Norm	./glm/gtx/norm.inl	/^	GLM_FUNC_QUALIFIER T l2Norm(vec<3, T, Q> const& v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER T
lMaxNorm	./glm/gtx/norm.inl	/^	GLM_FUNC_QUALIFIER T lMaxNorm(vec<3, T, Q> const& a, vec<3, T, Q> const& b)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER T
lMaxNorm	./glm/gtx/norm.inl	/^	GLM_FUNC_QUALIFIER T lMaxNorm(vec<3, T, Q> const& v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER T
ldexp	./glm/detail/func_common.inl	/^	GLM_FUNC_QUALIFIER genType ldexp(genType const& x, int const& exp)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genType
ldexp	./glm/detail/func_common.inl	/^	GLM_FUNC_QUALIFIER vec<L, T, Q> ldexp(vec<L, T, Q> const& v, vec<L, int, Q> const& exp)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<L,T,Q>
leftHanded	./glm/gtx/handed_coordinate_space.inl	/^	GLM_FUNC_QUALIFIER bool leftHanded$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER bool
length	./glm/detail/func_geometric.inl	/^	GLM_FUNC_QUALIFIER T length(vec<L, T, Q> const& v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER T
length	./glm/detail/func_geometric.inl	/^	GLM_FUNC_QUALIFIER genType length(genType x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genType
length	./glm/detail/type_mat2x2.hpp	/^		GLM_FUNC_DECL static GLM_CONSTEXPR length_type length() { return 2; }$/;"	f	struct:glm::mat	typeref:typename:GLM_FUNC_DECL GLM_CONSTEXPR length_type
length	./glm/detail/type_mat2x3.hpp	/^		GLM_FUNC_DECL static GLM_CONSTEXPR length_type length() { return 2; }$/;"	f	struct:glm::mat	typeref:typename:GLM_FUNC_DECL GLM_CONSTEXPR length_type
length	./glm/detail/type_mat2x4.hpp	/^		GLM_FUNC_DECL static GLM_CONSTEXPR length_type length() { return 2; }$/;"	f	struct:glm::mat	typeref:typename:GLM_FUNC_DECL GLM_CONSTEXPR length_type
length	./glm/detail/type_mat3x2.hpp	/^		GLM_FUNC_DECL static GLM_CONSTEXPR length_type length() { return 3; }$/;"	f	struct:glm::mat	typeref:typename:GLM_FUNC_DECL GLM_CONSTEXPR length_type
length	./glm/detail/type_mat3x3.hpp	/^		GLM_FUNC_DECL static GLM_CONSTEXPR length_type length() { return 3; }$/;"	f	struct:glm::mat	typeref:typename:GLM_FUNC_DECL GLM_CONSTEXPR length_type
length	./glm/detail/type_mat3x4.hpp	/^		GLM_FUNC_DECL static GLM_CONSTEXPR length_type length() { return 3; }$/;"	f	struct:glm::mat	typeref:typename:GLM_FUNC_DECL GLM_CONSTEXPR length_type
length	./glm/detail/type_mat4x2.hpp	/^		GLM_FUNC_DECL static GLM_CONSTEXPR length_type length() { return 4; }$/;"	f	struct:glm::mat	typeref:typename:GLM_FUNC_DECL GLM_CONSTEXPR length_type
length	./glm/detail/type_mat4x3.hpp	/^		GLM_FUNC_DECL static GLM_CONSTEXPR length_type length() { return 4; }$/;"	f	struct:glm::mat	typeref:typename:GLM_FUNC_DECL GLM_CONSTEXPR length_type
length	./glm/detail/type_mat4x4.hpp	/^		GLM_FUNC_DECL static GLM_CONSTEXPR length_type length(){return 4;}$/;"	f	struct:glm::mat	typeref:typename:GLM_FUNC_DECL GLM_CONSTEXPR length_type
length	./glm/detail/type_quat.hpp	/^		GLM_FUNC_DECL static GLM_CONSTEXPR length_type length(){return 4;}$/;"	f	struct:glm::qua	typeref:typename:GLM_FUNC_DECL GLM_CONSTEXPR length_type
length	./glm/detail/type_vec1.hpp	/^		GLM_FUNC_DECL static GLM_CONSTEXPR length_type length(){return 1;}$/;"	f	struct:glm::vec	typeref:typename:GLM_FUNC_DECL GLM_CONSTEXPR length_type
length	./glm/detail/type_vec2.hpp	/^		GLM_FUNC_DECL static GLM_CONSTEXPR length_type length(){return 2;}$/;"	f	struct:glm::vec	typeref:typename:GLM_FUNC_DECL GLM_CONSTEXPR length_type
length	./glm/detail/type_vec3.hpp	/^		GLM_FUNC_DECL static GLM_CONSTEXPR length_type length(){return 3;}$/;"	f	struct:glm::vec	typeref:typename:GLM_FUNC_DECL GLM_CONSTEXPR length_type
length	./glm/detail/type_vec4.hpp	/^		GLM_FUNC_DECL static GLM_CONSTEXPR length_type length(){return 4;}$/;"	f	struct:glm::vec	typeref:typename:GLM_FUNC_DECL GLM_CONSTEXPR length_type
length	./glm/ext/quaternion_geometric.inl	/^	GLM_FUNC_QUALIFIER T length(qua<T, Q> const& q)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER T
length	./glm/gtx/dual_quaternion.hpp	/^		GLM_FUNC_DECL static GLM_CONSTEXPR length_type length(){return 2;}$/;"	f	struct:glm::tdualquat	typeref:typename:GLM_FUNC_DECL GLM_CONSTEXPR length_type
length2	./glm/gtx/norm.inl	/^	GLM_FUNC_QUALIFIER T length2(vec<L, T, Q> const& v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER T
length2	./glm/gtx/norm.inl	/^	GLM_FUNC_QUALIFIER genType length2(genType x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genType
length2	./glm/gtx/quaternion.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR T length2(qua<T, Q> const& q)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR T
length_t	./glm/detail/setup.hpp	/^		typedef int length_t;$/;"	t	namespace:glm	typeref:typename:int
length_t	./glm/detail/setup.hpp	/^		typedef size_t length_t;$/;"	t	namespace:glm	typeref:typename:size_t
length_type	./glm/detail/type_mat2x2.hpp	/^		typedef length_t length_type;$/;"	t	struct:glm::mat	typeref:typename:length_t
length_type	./glm/detail/type_mat2x3.hpp	/^		typedef length_t length_type;$/;"	t	struct:glm::mat	typeref:typename:length_t
length_type	./glm/detail/type_mat2x4.hpp	/^		typedef length_t length_type;$/;"	t	struct:glm::mat	typeref:typename:length_t
length_type	./glm/detail/type_mat3x2.hpp	/^		typedef length_t length_type;$/;"	t	struct:glm::mat	typeref:typename:length_t
length_type	./glm/detail/type_mat3x3.hpp	/^		typedef length_t length_type;$/;"	t	struct:glm::mat	typeref:typename:length_t
length_type	./glm/detail/type_mat3x4.hpp	/^		typedef length_t length_type;$/;"	t	struct:glm::mat	typeref:typename:length_t
length_type	./glm/detail/type_mat4x2.hpp	/^		typedef length_t length_type;$/;"	t	struct:glm::mat	typeref:typename:length_t
length_type	./glm/detail/type_mat4x3.hpp	/^		typedef length_t length_type;$/;"	t	struct:glm::mat	typeref:typename:length_t
length_type	./glm/detail/type_mat4x4.hpp	/^		typedef length_t length_type;$/;"	t	struct:glm::mat	typeref:typename:length_t
length_type	./glm/detail/type_quat.hpp	/^		typedef length_t length_type;$/;"	t	struct:glm::qua	typeref:typename:length_t
length_type	./glm/detail/type_vec1.hpp	/^		typedef length_t length_type;$/;"	t	struct:glm::vec	typeref:typename:length_t
length_type	./glm/detail/type_vec2.hpp	/^		typedef length_t length_type;$/;"	t	struct:glm::vec	typeref:typename:length_t
length_type	./glm/detail/type_vec3.hpp	/^		typedef length_t length_type;$/;"	t	struct:glm::vec	typeref:typename:length_t
length_type	./glm/detail/type_vec4.hpp	/^		typedef length_t length_type;$/;"	t	struct:glm::vec	typeref:typename:length_t
length_type	./glm/gtx/dual_quaternion.hpp	/^		typedef length_t length_type;$/;"	t	struct:glm::tdualquat	typeref:typename:length_t
lerp	./glm/ext/quaternion_common.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR qua<T, Q> lerp(qua<T, Q> const& x, qua<T, Q> const& y, T a)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR qua<T,Q>
lerp	./glm/gtx/compatibility.hpp	/^	template<typename T, qualifier Q> GLM_FUNC_QUALIFIER vec<2, T, Q> lerp(const vec<2, T, Q>& x, c/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<2,T,Q>
lerp	./glm/gtx/compatibility.hpp	/^	template<typename T, qualifier Q> GLM_FUNC_QUALIFIER vec<3, T, Q> lerp(const vec<3, T, Q>& x, c/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<3,T,Q>
lerp	./glm/gtx/compatibility.hpp	/^	template<typename T, qualifier Q> GLM_FUNC_QUALIFIER vec<4, T, Q> lerp(const vec<4, T, Q>& x, c/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<4,T,Q>
lerp	./glm/gtx/compatibility.hpp	/^	template<typename T> GLM_FUNC_QUALIFIER T lerp(T x, T y, T a){return mix(x, y, a);}												/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER T
lerp	./glm/gtx/dual_quaternion.inl	/^	GLM_FUNC_QUALIFIER tdualquat<T, Q> lerp(tdualquat<T, Q> const& x, tdualquat<T, Q> const& y, T c/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tdualquat<T,Q>
lessThan	./glm/detail/func_vector_relational.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<L, bool, Q> lessThan(vec<L, T, Q> const& x, vec<L, T, Q> c/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<L,bool,Q>
lessThan	./glm/gtc/quaternion.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4, bool, Q> lessThan(qua<T, Q> const& x, qua<T, Q> const& /;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4,bool,Q>
lessThan	./glm/gtx/scalar_relational.inl	/^	GLM_FUNC_QUALIFIER bool lessThan$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER bool
lessThanEqual	./glm/detail/func_vector_relational.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<L, bool, Q> lessThanEqual(vec<L, T, Q> const& x, vec<L, T,/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<L,bool,Q>
lessThanEqual	./glm/gtc/quaternion.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4, bool, Q> lessThanEqual(qua<T, Q> const& x, qua<T, Q> co/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4,bool,Q>
lessThanEqual	./glm/gtx/scalar_relational.inl	/^	GLM_FUNC_QUALIFIER bool lessThanEqual$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER bool
levels	./glm/gtx/texture.inl	/^	inline T levels(T Extent)$/;"	f	namespace:glm	typeref:typename:T
levels	./glm/gtx/texture.inl	/^	inline T levels(vec<L, T, Q> const& Extent)$/;"	f	namespace:glm	typeref:typename:T
linearGradient	./glm/gtx/gradient_paint.inl	/^	GLM_FUNC_QUALIFIER T linearGradient$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER T
linearInterpolation	./glm/gtx/easing.inl	/^	GLM_FUNC_QUALIFIER genType linearInterpolation(genType const& a)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genType
linearRand	./glm/gtc/random.inl	/^	GLM_FUNC_QUALIFIER genType linearRand(genType Min, genType Max)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genType
linearRand	./glm/gtc/random.inl	/^	GLM_FUNC_QUALIFIER vec<L, T, Q> linearRand(vec<L, T, Q> const& Min, vec<L, T, Q> const& Max)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<L,T,Q>
literal	./glm/gtx/string_cast.inl	/^	struct literal$/;"	s	namespace:glm::detail	file:
literal	./glm/gtx/string_cast.inl	/^	struct literal<T, true>$/;"	s	namespace:glm::detail	file:
literal	./glm/gtx/string_cast.inl	/^	struct literal<int64_t, false>$/;"	s	namespace:glm::detail	file:
literal	./glm/gtx/string_cast.inl	/^	struct literal<uint64_t, false>$/;"	s	namespace:glm::detail	file:
ln_ln_two	./glm/gtc/constants.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR genType ln_ln_two()$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR genType
ln_ten	./glm/gtc/constants.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR genType ln_ten()$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR genType
ln_two	./glm/gtc/constants.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR genType ln_two()$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR genType
locale_	./glm/gtx/io.hpp	/^			locale_type     locale_;$/;"	m	class:glm::io::basic_state_saver	typeref:typename:locale_type
locale_type	./glm/gtx/io.hpp	/^			typedef ::std::locale const            locale_type;$/;"	t	class:glm::io::basic_state_saver	typeref:typename:::std::locale const
log	./glm/detail/func_exponential.inl	/^	GLM_FUNC_QUALIFIER vec<L, T, Q> log(vec<L, T, Q> const& x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<L,T,Q>
log	./glm/ext/quaternion_exponential.inl	/^	GLM_FUNC_QUALIFIER qua<T, Q> log(qua<T, Q> const& q)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER qua<T,Q>
log	./glm/gtx/log_base.inl	/^	GLM_FUNC_QUALIFIER genType log(genType const& x, genType const& base)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genType
log	./glm/gtx/log_base.inl	/^	GLM_FUNC_QUALIFIER vec<L, T, Q> log(vec<L, T, Q> const& x, vec<L, T, Q> const& base)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<L,T,Q>
log2	./glm/detail/func_exponential.inl	/^	GLM_FUNC_QUALIFIER genType log2(genType x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genType
log2	./glm/detail/func_exponential.inl	/^	GLM_FUNC_QUALIFIER vec<L, T, Q> log2(vec<L, T, Q> const& x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<L,T,Q>
lookAt	./glm/ext/matrix_transform.inl	/^	GLM_FUNC_QUALIFIER mat<4, 4, T, Q> lookAt(vec<3, T, Q> const& eye, vec<3, T, Q> const& center, /;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER mat<4,4,T,Q>
lookAtLH	./glm/ext/matrix_transform.inl	/^	GLM_FUNC_QUALIFIER mat<4, 4, T, Q> lookAtLH(vec<3, T, Q> const& eye, vec<3, T, Q> const& center/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER mat<4,4,T,Q>
lookAtRH	./glm/ext/matrix_transform.inl	/^	GLM_FUNC_QUALIFIER mat<4, 4, T, Q> lookAtRH(vec<3, T, Q> const& eye, vec<3, T, Q> const& center/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER mat<4,4,T,Q>
lowestBitValue	./glm/gtx/bit.inl	/^	GLM_FUNC_QUALIFIER genIUType lowestBitValue(genIUType Value)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genIUType
lowestBitValue	./glm/gtx/bit.inl	/^	GLM_FUNC_QUALIFIER vec<L, T, Q> lowestBitValue(vec<L, T, Q> const& v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<L,T,Q>
lowp	./glm/detail/qualifier.hpp	/^		lowp = packed_lowp, \/\/\/< By default lowp qualifier is also packed$/;"	e	enum:glm::qualifier
lowp_bvec1	./glm/ext/vector_bool1_precision.hpp	/^	typedef vec<1, bool, lowp>			lowp_bvec1;$/;"	t	namespace:glm	typeref:typename:vec<1,bool,lowp>
lowp_bvec1	./glm/fwd.hpp	/^	typedef vec<1, bool, lowp>		lowp_bvec1;$/;"	t	namespace:glm	typeref:typename:vec<1,bool,lowp>
lowp_bvec2	./glm/ext/vector_bool2_precision.hpp	/^	typedef vec<2, bool, lowp>		lowp_bvec2;$/;"	t	namespace:glm	typeref:typename:vec<2,bool,lowp>
lowp_bvec2	./glm/fwd.hpp	/^	typedef vec<2, bool, lowp>		lowp_bvec2;$/;"	t	namespace:glm	typeref:typename:vec<2,bool,lowp>
lowp_bvec3	./glm/ext/vector_bool3_precision.hpp	/^	typedef vec<3, bool, lowp>		lowp_bvec3;$/;"	t	namespace:glm	typeref:typename:vec<3,bool,lowp>
lowp_bvec3	./glm/fwd.hpp	/^	typedef vec<3, bool, lowp>		lowp_bvec3;$/;"	t	namespace:glm	typeref:typename:vec<3,bool,lowp>
lowp_bvec4	./glm/ext/vector_bool4_precision.hpp	/^	typedef vec<4, bool, lowp>		lowp_bvec4;$/;"	t	namespace:glm	typeref:typename:vec<4,bool,lowp>
lowp_bvec4	./glm/fwd.hpp	/^	typedef vec<4, bool, lowp>		lowp_bvec4;$/;"	t	namespace:glm	typeref:typename:vec<4,bool,lowp>
lowp_ddualquat	./glm/gtx/dual_quaternion.hpp	/^	typedef tdualquat<double, lowp>		lowp_ddualquat;$/;"	t	namespace:glm	typeref:typename:tdualquat<double,lowp>
lowp_dmat2	./glm/ext/matrix_double2x2_precision.hpp	/^	typedef mat<2, 2, double, lowp>		lowp_dmat2;$/;"	t	namespace:glm	typeref:typename:mat<2,2,double,lowp>
lowp_dmat2	./glm/fwd.hpp	/^	typedef mat<2, 2, f64, lowp>		lowp_dmat2;$/;"	t	namespace:glm	typeref:typename:mat<2,2,f64,lowp>
lowp_dmat2x2	./glm/ext/matrix_double2x2_precision.hpp	/^	typedef mat<2, 2, double, lowp>		lowp_dmat2x2;$/;"	t	namespace:glm	typeref:typename:mat<2,2,double,lowp>
lowp_dmat2x2	./glm/fwd.hpp	/^	typedef mat<2, 2, double, lowp>		lowp_dmat2x2;$/;"	t	namespace:glm	typeref:typename:mat<2,2,double,lowp>
lowp_dmat2x3	./glm/ext/matrix_double2x3_precision.hpp	/^	typedef mat<2, 3, double, lowp>		lowp_dmat2x3;$/;"	t	namespace:glm	typeref:typename:mat<2,3,double,lowp>
lowp_dmat2x3	./glm/fwd.hpp	/^	typedef mat<2, 3, double, lowp>		lowp_dmat2x3;$/;"	t	namespace:glm	typeref:typename:mat<2,3,double,lowp>
lowp_dmat2x4	./glm/ext/matrix_double2x4_precision.hpp	/^	typedef mat<2, 4, double, lowp>		lowp_dmat2x4;$/;"	t	namespace:glm	typeref:typename:mat<2,4,double,lowp>
lowp_dmat2x4	./glm/fwd.hpp	/^	typedef mat<2, 4, double, lowp>		lowp_dmat2x4;$/;"	t	namespace:glm	typeref:typename:mat<2,4,double,lowp>
lowp_dmat3	./glm/ext/matrix_double3x3_precision.hpp	/^	typedef mat<3, 3, double, lowp>		lowp_dmat3;$/;"	t	namespace:glm	typeref:typename:mat<3,3,double,lowp>
lowp_dmat3	./glm/fwd.hpp	/^	typedef mat<3, 3, f64, lowp>		lowp_dmat3;$/;"	t	namespace:glm	typeref:typename:mat<3,3,f64,lowp>
lowp_dmat3x2	./glm/ext/matrix_double3x2_precision.hpp	/^	typedef mat<3, 2, double, lowp>		lowp_dmat3x2;$/;"	t	namespace:glm	typeref:typename:mat<3,2,double,lowp>
lowp_dmat3x2	./glm/fwd.hpp	/^	typedef mat<3, 2, double, lowp>		lowp_dmat3x2;$/;"	t	namespace:glm	typeref:typename:mat<3,2,double,lowp>
lowp_dmat3x3	./glm/ext/matrix_double3x3_precision.hpp	/^	typedef mat<3, 3, double, lowp>		lowp_dmat3x3;$/;"	t	namespace:glm	typeref:typename:mat<3,3,double,lowp>
lowp_dmat3x3	./glm/fwd.hpp	/^	typedef mat<3, 3, double, lowp>		lowp_dmat3x3;$/;"	t	namespace:glm	typeref:typename:mat<3,3,double,lowp>
lowp_dmat3x4	./glm/ext/matrix_double3x4_precision.hpp	/^	typedef mat<3, 4, double, lowp>		lowp_dmat3x4;$/;"	t	namespace:glm	typeref:typename:mat<3,4,double,lowp>
lowp_dmat3x4	./glm/fwd.hpp	/^	typedef mat<3, 4, double, lowp>		lowp_dmat3x4;$/;"	t	namespace:glm	typeref:typename:mat<3,4,double,lowp>
lowp_dmat4	./glm/ext/matrix_double4x4_precision.hpp	/^	typedef mat<4, 4, double, lowp>		lowp_dmat4;$/;"	t	namespace:glm	typeref:typename:mat<4,4,double,lowp>
lowp_dmat4	./glm/fwd.hpp	/^	typedef mat<4, 4, f64, lowp>		lowp_dmat4;$/;"	t	namespace:glm	typeref:typename:mat<4,4,f64,lowp>
lowp_dmat4x2	./glm/ext/matrix_double4x2_precision.hpp	/^	typedef mat<4, 2, double, lowp>		lowp_dmat4x2;$/;"	t	namespace:glm	typeref:typename:mat<4,2,double,lowp>
lowp_dmat4x2	./glm/fwd.hpp	/^	typedef mat<4, 2, double, lowp>		lowp_dmat4x2;$/;"	t	namespace:glm	typeref:typename:mat<4,2,double,lowp>
lowp_dmat4x3	./glm/ext/matrix_double4x3_precision.hpp	/^	typedef mat<4, 3, double, lowp>		lowp_dmat4x3;$/;"	t	namespace:glm	typeref:typename:mat<4,3,double,lowp>
lowp_dmat4x3	./glm/fwd.hpp	/^	typedef mat<4, 3, double, lowp>		lowp_dmat4x3;$/;"	t	namespace:glm	typeref:typename:mat<4,3,double,lowp>
lowp_dmat4x4	./glm/ext/matrix_double4x4_precision.hpp	/^	typedef mat<4, 4, double, lowp>		lowp_dmat4x4;$/;"	t	namespace:glm	typeref:typename:mat<4,4,double,lowp>
lowp_dmat4x4	./glm/fwd.hpp	/^	typedef mat<4, 4, double, lowp>		lowp_dmat4x4;$/;"	t	namespace:glm	typeref:typename:mat<4,4,double,lowp>
lowp_dquat	./glm/ext/quaternion_double_precision.hpp	/^	typedef qua<double, lowp>		lowp_dquat;$/;"	t	namespace:glm	typeref:typename:qua<double,lowp>
lowp_dquat	./glm/fwd.hpp	/^	typedef qua<double, lowp>			lowp_dquat;$/;"	t	namespace:glm	typeref:typename:qua<double,lowp>
lowp_dualquat	./glm/gtx/dual_quaternion.hpp	/^	typedef tdualquat<float, lowp>		lowp_dualquat;$/;"	t	namespace:glm	typeref:typename:tdualquat<float,lowp>
lowp_dvec1	./glm/ext/vector_double1_precision.hpp	/^	typedef vec<1, double, lowp>		lowp_dvec1;$/;"	t	namespace:glm	typeref:typename:vec<1,double,lowp>
lowp_dvec1	./glm/fwd.hpp	/^	typedef vec<1, f64, lowp>			lowp_dvec1;$/;"	t	namespace:glm	typeref:typename:vec<1,f64,lowp>
lowp_dvec2	./glm/ext/vector_double2_precision.hpp	/^	typedef vec<2, double, lowp>		lowp_dvec2;$/;"	t	namespace:glm	typeref:typename:vec<2,double,lowp>
lowp_dvec2	./glm/fwd.hpp	/^	typedef vec<2, f64, lowp>			lowp_dvec2;$/;"	t	namespace:glm	typeref:typename:vec<2,f64,lowp>
lowp_dvec3	./glm/ext/vector_double3_precision.hpp	/^	typedef vec<3, double, lowp>		lowp_dvec3;$/;"	t	namespace:glm	typeref:typename:vec<3,double,lowp>
lowp_dvec3	./glm/fwd.hpp	/^	typedef vec<3, f64, lowp>			lowp_dvec3;$/;"	t	namespace:glm	typeref:typename:vec<3,f64,lowp>
lowp_dvec4	./glm/ext/vector_double4_precision.hpp	/^	typedef vec<4, double, lowp>		lowp_dvec4;$/;"	t	namespace:glm	typeref:typename:vec<4,double,lowp>
lowp_dvec4	./glm/fwd.hpp	/^	typedef vec<4, f64, lowp>			lowp_dvec4;$/;"	t	namespace:glm	typeref:typename:vec<4,f64,lowp>
lowp_f32	./glm/fwd.hpp	/^	typedef float					lowp_f32;$/;"	t	namespace:glm	typeref:typename:float
lowp_f32	./glm/gtc/type_precision.hpp	/^	typedef float32 lowp_f32;$/;"	t	namespace:glm	typeref:typename:float32
lowp_f32mat2	./glm/fwd.hpp	/^	typedef mat<2, 2, f32, lowp>		lowp_f32mat2;$/;"	t	namespace:glm	typeref:typename:mat<2,2,f32,lowp>
lowp_f32mat2	./glm/gtc/type_precision.hpp	/^	typedef lowp_f32mat2x2 lowp_f32mat2;$/;"	t	namespace:glm	typeref:typename:lowp_f32mat2x2
lowp_f32mat2x2	./glm/fwd.hpp	/^	typedef mat<2, 2, f32, lowp>		lowp_f32mat2x2;$/;"	t	namespace:glm	typeref:typename:mat<2,2,f32,lowp>
lowp_f32mat2x2	./glm/gtc/type_precision.hpp	/^	typedef mat<2, 2, f32, lowp> lowp_f32mat2x2;$/;"	t	namespace:glm	typeref:typename:mat<2,2,f32,lowp>
lowp_f32mat2x3	./glm/fwd.hpp	/^	typedef mat<2, 3, f32, lowp>		lowp_f32mat2x3;$/;"	t	namespace:glm	typeref:typename:mat<2,3,f32,lowp>
lowp_f32mat2x3	./glm/gtc/type_precision.hpp	/^	typedef mat<2, 3, f32, lowp> lowp_f32mat2x3;$/;"	t	namespace:glm	typeref:typename:mat<2,3,f32,lowp>
lowp_f32mat2x4	./glm/fwd.hpp	/^	typedef mat<2, 4, f32, lowp>		lowp_f32mat2x4;$/;"	t	namespace:glm	typeref:typename:mat<2,4,f32,lowp>
lowp_f32mat2x4	./glm/gtc/type_precision.hpp	/^	typedef mat<2, 4, f32, lowp> lowp_f32mat2x4;$/;"	t	namespace:glm	typeref:typename:mat<2,4,f32,lowp>
lowp_f32mat3	./glm/fwd.hpp	/^	typedef mat<3, 3, f32, lowp>		lowp_f32mat3;$/;"	t	namespace:glm	typeref:typename:mat<3,3,f32,lowp>
lowp_f32mat3	./glm/gtc/type_precision.hpp	/^	typedef lowp_f32mat3x3 lowp_f32mat3;$/;"	t	namespace:glm	typeref:typename:lowp_f32mat3x3
lowp_f32mat3x2	./glm/fwd.hpp	/^	typedef mat<3, 2, f32, lowp>		lowp_f32mat3x2;$/;"	t	namespace:glm	typeref:typename:mat<3,2,f32,lowp>
lowp_f32mat3x2	./glm/gtc/type_precision.hpp	/^	typedef mat<3, 2, f32, lowp> lowp_f32mat3x2;$/;"	t	namespace:glm	typeref:typename:mat<3,2,f32,lowp>
lowp_f32mat3x3	./glm/fwd.hpp	/^	typedef mat<3, 3, f32, lowp>		lowp_f32mat3x3;$/;"	t	namespace:glm	typeref:typename:mat<3,3,f32,lowp>
lowp_f32mat3x3	./glm/gtc/type_precision.hpp	/^	typedef mat<3, 3, f32, lowp> lowp_f32mat3x3;$/;"	t	namespace:glm	typeref:typename:mat<3,3,f32,lowp>
lowp_f32mat3x4	./glm/fwd.hpp	/^	typedef mat<3, 4, f32, lowp>		lowp_f32mat3x4;$/;"	t	namespace:glm	typeref:typename:mat<3,4,f32,lowp>
lowp_f32mat3x4	./glm/gtc/type_precision.hpp	/^	typedef mat<3, 4, f32, lowp> lowp_f32mat3x4;$/;"	t	namespace:glm	typeref:typename:mat<3,4,f32,lowp>
lowp_f32mat4	./glm/fwd.hpp	/^	typedef mat<4, 4, f32, lowp>		lowp_f32mat4;$/;"	t	namespace:glm	typeref:typename:mat<4,4,f32,lowp>
lowp_f32mat4	./glm/gtc/type_precision.hpp	/^	typedef lowp_f32mat4x4 lowp_f32mat4;$/;"	t	namespace:glm	typeref:typename:lowp_f32mat4x4
lowp_f32mat4x2	./glm/fwd.hpp	/^	typedef mat<4, 2, f32, lowp>		lowp_f32mat4x2;$/;"	t	namespace:glm	typeref:typename:mat<4,2,f32,lowp>
lowp_f32mat4x2	./glm/gtc/type_precision.hpp	/^	typedef mat<4, 2, f32, lowp> lowp_f32mat4x2;$/;"	t	namespace:glm	typeref:typename:mat<4,2,f32,lowp>
lowp_f32mat4x3	./glm/fwd.hpp	/^	typedef mat<4, 3, f32, lowp>		lowp_f32mat4x3;$/;"	t	namespace:glm	typeref:typename:mat<4,3,f32,lowp>
lowp_f32mat4x3	./glm/gtc/type_precision.hpp	/^	typedef mat<4, 3, f32, lowp> lowp_f32mat4x3;$/;"	t	namespace:glm	typeref:typename:mat<4,3,f32,lowp>
lowp_f32mat4x4	./glm/fwd.hpp	/^	typedef mat<4, 4, f32, lowp>		lowp_f32mat4x4;$/;"	t	namespace:glm	typeref:typename:mat<4,4,f32,lowp>
lowp_f32mat4x4	./glm/gtc/type_precision.hpp	/^	typedef mat<4, 4, f32, lowp> lowp_f32mat4x4;$/;"	t	namespace:glm	typeref:typename:mat<4,4,f32,lowp>
lowp_f32quat	./glm/fwd.hpp	/^	typedef qua<f32, lowp>				lowp_f32quat;$/;"	t	namespace:glm	typeref:typename:qua<f32,lowp>
lowp_f32quat	./glm/gtc/type_precision.hpp	/^	typedef qua<f32, lowp> lowp_f32quat;$/;"	t	namespace:glm	typeref:typename:qua<f32,lowp>
lowp_f32vec1	./glm/fwd.hpp	/^	typedef vec<1, f32, lowp>			lowp_f32vec1;$/;"	t	namespace:glm	typeref:typename:vec<1,f32,lowp>
lowp_f32vec1	./glm/gtc/type_precision.hpp	/^	typedef vec<1, f32, lowp> lowp_f32vec1;$/;"	t	namespace:glm	typeref:typename:vec<1,f32,lowp>
lowp_f32vec2	./glm/fwd.hpp	/^	typedef vec<2, f32, lowp>			lowp_f32vec2;$/;"	t	namespace:glm	typeref:typename:vec<2,f32,lowp>
lowp_f32vec2	./glm/gtc/type_precision.hpp	/^	typedef vec<2, f32, lowp> lowp_f32vec2;$/;"	t	namespace:glm	typeref:typename:vec<2,f32,lowp>
lowp_f32vec3	./glm/fwd.hpp	/^	typedef vec<3, f32, lowp>			lowp_f32vec3;$/;"	t	namespace:glm	typeref:typename:vec<3,f32,lowp>
lowp_f32vec3	./glm/gtc/type_precision.hpp	/^	typedef vec<3, f32, lowp> lowp_f32vec3;$/;"	t	namespace:glm	typeref:typename:vec<3,f32,lowp>
lowp_f32vec4	./glm/fwd.hpp	/^	typedef vec<4, f32, lowp>			lowp_f32vec4;$/;"	t	namespace:glm	typeref:typename:vec<4,f32,lowp>
lowp_f32vec4	./glm/gtc/type_precision.hpp	/^	typedef vec<4, f32, lowp> lowp_f32vec4;$/;"	t	namespace:glm	typeref:typename:vec<4,f32,lowp>
lowp_f64	./glm/fwd.hpp	/^	typedef double					lowp_f64;$/;"	t	namespace:glm	typeref:typename:double
lowp_f64	./glm/gtc/type_precision.hpp	/^	typedef float64 lowp_f64;$/;"	t	namespace:glm	typeref:typename:float64
lowp_f64mat2	./glm/fwd.hpp	/^	typedef mat<2, 2, f64, lowp>		lowp_f64mat2;$/;"	t	namespace:glm	typeref:typename:mat<2,2,f64,lowp>
lowp_f64mat2	./glm/gtc/type_precision.hpp	/^	typedef lowp_f64mat2x2 lowp_f64mat2;$/;"	t	namespace:glm	typeref:typename:lowp_f64mat2x2
lowp_f64mat2x2	./glm/fwd.hpp	/^	typedef mat<2, 2, f64, lowp>		lowp_f64mat2x2;$/;"	t	namespace:glm	typeref:typename:mat<2,2,f64,lowp>
lowp_f64mat2x2	./glm/gtc/type_precision.hpp	/^	typedef mat<2, 2, f64, lowp> lowp_f64mat2x2;$/;"	t	namespace:glm	typeref:typename:mat<2,2,f64,lowp>
lowp_f64mat2x3	./glm/fwd.hpp	/^	typedef mat<2, 3, f64, lowp>		lowp_f64mat2x3;$/;"	t	namespace:glm	typeref:typename:mat<2,3,f64,lowp>
lowp_f64mat2x3	./glm/gtc/type_precision.hpp	/^	typedef mat<2, 3, f64, lowp> lowp_f64mat2x3;$/;"	t	namespace:glm	typeref:typename:mat<2,3,f64,lowp>
lowp_f64mat2x4	./glm/fwd.hpp	/^	typedef mat<2, 4, f64, lowp>		lowp_f64mat2x4;$/;"	t	namespace:glm	typeref:typename:mat<2,4,f64,lowp>
lowp_f64mat2x4	./glm/gtc/type_precision.hpp	/^	typedef mat<2, 4, f64, lowp> lowp_f64mat2x4;$/;"	t	namespace:glm	typeref:typename:mat<2,4,f64,lowp>
lowp_f64mat3	./glm/fwd.hpp	/^	typedef mat<3, 3, f64, lowp>		lowp_f64mat3;$/;"	t	namespace:glm	typeref:typename:mat<3,3,f64,lowp>
lowp_f64mat3	./glm/gtc/type_precision.hpp	/^	typedef lowp_f64mat3x3 lowp_f64mat3;$/;"	t	namespace:glm	typeref:typename:lowp_f64mat3x3
lowp_f64mat3x2	./glm/fwd.hpp	/^	typedef mat<3, 2, f64, lowp>		lowp_f64mat3x2;$/;"	t	namespace:glm	typeref:typename:mat<3,2,f64,lowp>
lowp_f64mat3x2	./glm/gtc/type_precision.hpp	/^	typedef mat<3, 2, f64, lowp> lowp_f64mat3x2;$/;"	t	namespace:glm	typeref:typename:mat<3,2,f64,lowp>
lowp_f64mat3x3	./glm/fwd.hpp	/^	typedef mat<3, 3, f64, lowp>		lowp_f64mat3x3;$/;"	t	namespace:glm	typeref:typename:mat<3,3,f64,lowp>
lowp_f64mat3x3	./glm/gtc/type_precision.hpp	/^	typedef mat<3, 3, f64, lowp> lowp_f64mat3x3;$/;"	t	namespace:glm	typeref:typename:mat<3,3,f64,lowp>
lowp_f64mat3x4	./glm/fwd.hpp	/^	typedef mat<3, 4, f64, lowp>		lowp_f64mat3x4;$/;"	t	namespace:glm	typeref:typename:mat<3,4,f64,lowp>
lowp_f64mat3x4	./glm/gtc/type_precision.hpp	/^	typedef mat<3, 4, f64, lowp> lowp_f64mat3x4;$/;"	t	namespace:glm	typeref:typename:mat<3,4,f64,lowp>
lowp_f64mat4	./glm/fwd.hpp	/^	typedef mat<4, 4, f64, lowp>		lowp_f64mat4;$/;"	t	namespace:glm	typeref:typename:mat<4,4,f64,lowp>
lowp_f64mat4	./glm/gtc/type_precision.hpp	/^	typedef lowp_f64mat4x4 lowp_f64mat4;$/;"	t	namespace:glm	typeref:typename:lowp_f64mat4x4
lowp_f64mat4x2	./glm/fwd.hpp	/^	typedef mat<4, 2, f64, lowp>		lowp_f64mat4x2;$/;"	t	namespace:glm	typeref:typename:mat<4,2,f64,lowp>
lowp_f64mat4x2	./glm/gtc/type_precision.hpp	/^	typedef mat<4, 2, f64, lowp> lowp_f64mat4x2;$/;"	t	namespace:glm	typeref:typename:mat<4,2,f64,lowp>
lowp_f64mat4x3	./glm/fwd.hpp	/^	typedef mat<4, 3, f64, lowp>		lowp_f64mat4x3;$/;"	t	namespace:glm	typeref:typename:mat<4,3,f64,lowp>
lowp_f64mat4x3	./glm/gtc/type_precision.hpp	/^	typedef mat<4, 3, f64, lowp> lowp_f64mat4x3;$/;"	t	namespace:glm	typeref:typename:mat<4,3,f64,lowp>
lowp_f64mat4x4	./glm/fwd.hpp	/^	typedef mat<4, 4, f64, lowp>		lowp_f64mat4x4;$/;"	t	namespace:glm	typeref:typename:mat<4,4,f64,lowp>
lowp_f64mat4x4	./glm/gtc/type_precision.hpp	/^	typedef mat<4, 4, f64, lowp> lowp_f64mat4x4;$/;"	t	namespace:glm	typeref:typename:mat<4,4,f64,lowp>
lowp_f64quat	./glm/fwd.hpp	/^	typedef qua<f64, lowp>				lowp_f64quat;$/;"	t	namespace:glm	typeref:typename:qua<f64,lowp>
lowp_f64quat	./glm/gtc/type_precision.hpp	/^	typedef qua<f64, lowp> lowp_f64quat;$/;"	t	namespace:glm	typeref:typename:qua<f64,lowp>
lowp_f64vec1	./glm/fwd.hpp	/^	typedef vec<1, f64, lowp>			lowp_f64vec1;$/;"	t	namespace:glm	typeref:typename:vec<1,f64,lowp>
lowp_f64vec1	./glm/gtc/type_precision.hpp	/^	typedef vec<1, f64, lowp> lowp_f64vec1;$/;"	t	namespace:glm	typeref:typename:vec<1,f64,lowp>
lowp_f64vec2	./glm/fwd.hpp	/^	typedef vec<2, f64, lowp>			lowp_f64vec2;$/;"	t	namespace:glm	typeref:typename:vec<2,f64,lowp>
lowp_f64vec2	./glm/gtc/type_precision.hpp	/^	typedef vec<2, f64, lowp> lowp_f64vec2;$/;"	t	namespace:glm	typeref:typename:vec<2,f64,lowp>
lowp_f64vec3	./glm/fwd.hpp	/^	typedef vec<3, f64, lowp>			lowp_f64vec3;$/;"	t	namespace:glm	typeref:typename:vec<3,f64,lowp>
lowp_f64vec3	./glm/gtc/type_precision.hpp	/^	typedef vec<3, f64, lowp> lowp_f64vec3;$/;"	t	namespace:glm	typeref:typename:vec<3,f64,lowp>
lowp_f64vec4	./glm/fwd.hpp	/^	typedef vec<4, f64, lowp>			lowp_f64vec4;$/;"	t	namespace:glm	typeref:typename:vec<4,f64,lowp>
lowp_f64vec4	./glm/gtc/type_precision.hpp	/^	typedef vec<4, f64, lowp> lowp_f64vec4;$/;"	t	namespace:glm	typeref:typename:vec<4,f64,lowp>
lowp_fdualquat	./glm/gtx/dual_quaternion.hpp	/^	typedef tdualquat<float, lowp>		lowp_fdualquat;$/;"	t	namespace:glm	typeref:typename:tdualquat<float,lowp>
lowp_float32	./glm/fwd.hpp	/^	typedef float					lowp_float32;$/;"	t	namespace:glm	typeref:typename:float
lowp_float32	./glm/gtc/type_precision.hpp	/^	typedef float32 lowp_float32;$/;"	t	namespace:glm	typeref:typename:float32
lowp_float32_t	./glm/fwd.hpp	/^	typedef float					lowp_float32_t;$/;"	t	namespace:glm	typeref:typename:float
lowp_float32_t	./glm/gtc/type_precision.hpp	/^	typedef float32 lowp_float32_t;$/;"	t	namespace:glm	typeref:typename:float32
lowp_float64	./glm/fwd.hpp	/^	typedef double					lowp_float64;$/;"	t	namespace:glm	typeref:typename:double
lowp_float64	./glm/gtc/type_precision.hpp	/^	typedef float64 lowp_float64;$/;"	t	namespace:glm	typeref:typename:float64
lowp_float64_t	./glm/fwd.hpp	/^	typedef double					lowp_float64_t;$/;"	t	namespace:glm	typeref:typename:double
lowp_float64_t	./glm/gtc/type_precision.hpp	/^	typedef float64 lowp_float64_t;$/;"	t	namespace:glm	typeref:typename:float64
lowp_fmat2	./glm/fwd.hpp	/^	typedef mat<2, 2, f32, lowp>		lowp_fmat2;$/;"	t	namespace:glm	typeref:typename:mat<2,2,f32,lowp>
lowp_fmat2	./glm/gtc/type_precision.hpp	/^	typedef lowp_fmat2x2 lowp_fmat2;$/;"	t	namespace:glm	typeref:typename:lowp_fmat2x2
lowp_fmat2x2	./glm/fwd.hpp	/^	typedef mat<2, 2, f32, lowp>		lowp_fmat2x2;$/;"	t	namespace:glm	typeref:typename:mat<2,2,f32,lowp>
lowp_fmat2x2	./glm/gtc/type_precision.hpp	/^	typedef mat<2, 2, f32, lowp> lowp_fmat2x2;$/;"	t	namespace:glm	typeref:typename:mat<2,2,f32,lowp>
lowp_fmat2x3	./glm/fwd.hpp	/^	typedef mat<2, 3, f32, lowp>		lowp_fmat2x3;$/;"	t	namespace:glm	typeref:typename:mat<2,3,f32,lowp>
lowp_fmat2x3	./glm/gtc/type_precision.hpp	/^	typedef mat<2, 3, f32, lowp> lowp_fmat2x3;$/;"	t	namespace:glm	typeref:typename:mat<2,3,f32,lowp>
lowp_fmat2x4	./glm/fwd.hpp	/^	typedef mat<2, 4, f32, lowp>		lowp_fmat2x4;$/;"	t	namespace:glm	typeref:typename:mat<2,4,f32,lowp>
lowp_fmat2x4	./glm/gtc/type_precision.hpp	/^	typedef mat<2, 4, f32, lowp> lowp_fmat2x4;$/;"	t	namespace:glm	typeref:typename:mat<2,4,f32,lowp>
lowp_fmat3	./glm/fwd.hpp	/^	typedef mat<3, 3, f32, lowp>		lowp_fmat3;$/;"	t	namespace:glm	typeref:typename:mat<3,3,f32,lowp>
lowp_fmat3	./glm/gtc/type_precision.hpp	/^	typedef lowp_fmat3x3 lowp_fmat3;$/;"	t	namespace:glm	typeref:typename:lowp_fmat3x3
lowp_fmat3x2	./glm/fwd.hpp	/^	typedef mat<3, 2, f32, lowp>		lowp_fmat3x2;$/;"	t	namespace:glm	typeref:typename:mat<3,2,f32,lowp>
lowp_fmat3x2	./glm/gtc/type_precision.hpp	/^	typedef mat<3, 2, f32, lowp> lowp_fmat3x2;$/;"	t	namespace:glm	typeref:typename:mat<3,2,f32,lowp>
lowp_fmat3x3	./glm/fwd.hpp	/^	typedef mat<3, 3, f32, lowp>		lowp_fmat3x3;$/;"	t	namespace:glm	typeref:typename:mat<3,3,f32,lowp>
lowp_fmat3x3	./glm/gtc/type_precision.hpp	/^	typedef mat<3, 3, f32, lowp> lowp_fmat3x3;$/;"	t	namespace:glm	typeref:typename:mat<3,3,f32,lowp>
lowp_fmat3x4	./glm/fwd.hpp	/^	typedef mat<3, 4, f32, lowp>		lowp_fmat3x4;$/;"	t	namespace:glm	typeref:typename:mat<3,4,f32,lowp>
lowp_fmat3x4	./glm/gtc/type_precision.hpp	/^	typedef mat<3, 4, f32, lowp> lowp_fmat3x4;$/;"	t	namespace:glm	typeref:typename:mat<3,4,f32,lowp>
lowp_fmat4	./glm/fwd.hpp	/^	typedef mat<4, 4, f32, lowp>		lowp_fmat4;$/;"	t	namespace:glm	typeref:typename:mat<4,4,f32,lowp>
lowp_fmat4	./glm/gtc/type_precision.hpp	/^	typedef lowp_fmat4x4 lowp_fmat4;$/;"	t	namespace:glm	typeref:typename:lowp_fmat4x4
lowp_fmat4x2	./glm/fwd.hpp	/^	typedef mat<4, 2, f32, lowp>		lowp_fmat4x2;$/;"	t	namespace:glm	typeref:typename:mat<4,2,f32,lowp>
lowp_fmat4x2	./glm/gtc/type_precision.hpp	/^	typedef mat<4, 2, f32, lowp> lowp_fmat4x2;$/;"	t	namespace:glm	typeref:typename:mat<4,2,f32,lowp>
lowp_fmat4x3	./glm/fwd.hpp	/^	typedef mat<4, 3, f32, lowp>		lowp_fmat4x3;$/;"	t	namespace:glm	typeref:typename:mat<4,3,f32,lowp>
lowp_fmat4x3	./glm/gtc/type_precision.hpp	/^	typedef mat<4, 3, f32, lowp> lowp_fmat4x3;$/;"	t	namespace:glm	typeref:typename:mat<4,3,f32,lowp>
lowp_fmat4x4	./glm/fwd.hpp	/^	typedef mat<4, 4, f32, lowp>		lowp_fmat4x4;$/;"	t	namespace:glm	typeref:typename:mat<4,4,f32,lowp>
lowp_fmat4x4	./glm/gtc/type_precision.hpp	/^	typedef mat<4, 4, f32, lowp> lowp_fmat4x4;$/;"	t	namespace:glm	typeref:typename:mat<4,4,f32,lowp>
lowp_fquat	./glm/fwd.hpp	/^	typedef qua<float, lowp>			lowp_fquat;$/;"	t	namespace:glm	typeref:typename:qua<float,lowp>
lowp_fvec1	./glm/fwd.hpp	/^	typedef vec<1, float, lowp>			lowp_fvec1;$/;"	t	namespace:glm	typeref:typename:vec<1,float,lowp>
lowp_fvec1	./glm/gtc/type_precision.hpp	/^	typedef vec<1, float, lowp> lowp_fvec1;$/;"	t	namespace:glm	typeref:typename:vec<1,float,lowp>
lowp_fvec2	./glm/fwd.hpp	/^	typedef vec<2, float, lowp>			lowp_fvec2;$/;"	t	namespace:glm	typeref:typename:vec<2,float,lowp>
lowp_fvec2	./glm/gtc/type_precision.hpp	/^	typedef vec<2, float, lowp> lowp_fvec2;$/;"	t	namespace:glm	typeref:typename:vec<2,float,lowp>
lowp_fvec3	./glm/fwd.hpp	/^	typedef vec<3, float, lowp>			lowp_fvec3;$/;"	t	namespace:glm	typeref:typename:vec<3,float,lowp>
lowp_fvec3	./glm/gtc/type_precision.hpp	/^	typedef vec<3, float, lowp> lowp_fvec3;$/;"	t	namespace:glm	typeref:typename:vec<3,float,lowp>
lowp_fvec4	./glm/fwd.hpp	/^	typedef vec<4, float, lowp>			lowp_fvec4;$/;"	t	namespace:glm	typeref:typename:vec<4,float,lowp>
lowp_fvec4	./glm/gtc/type_precision.hpp	/^	typedef vec<4, float, lowp> lowp_fvec4;$/;"	t	namespace:glm	typeref:typename:vec<4,float,lowp>
lowp_i16	./glm/fwd.hpp	/^	typedef int16					lowp_i16;$/;"	t	namespace:glm	typeref:typename:int16
lowp_i16	./glm/gtc/type_precision.hpp	/^	typedef detail::int16 lowp_i16;$/;"	t	namespace:glm	typeref:typename:detail::int16
lowp_i16mat2x2	./glm/fwd.hpp	/^	typedef mat<2, 2, int16, lowp>		lowp_i16mat2x2;$/;"	t	namespace:glm	typeref:typename:mat<2,2,int16,lowp>
lowp_i16mat2x3	./glm/fwd.hpp	/^	typedef mat<2, 3, int16, lowp>		lowp_i16mat2x3;$/;"	t	namespace:glm	typeref:typename:mat<2,3,int16,lowp>
lowp_i16mat2x4	./glm/fwd.hpp	/^	typedef mat<2, 4, int16, lowp>		lowp_i16mat2x4;$/;"	t	namespace:glm	typeref:typename:mat<2,4,int16,lowp>
lowp_i16mat3x2	./glm/fwd.hpp	/^	typedef mat<3, 2, int16, lowp>		lowp_i16mat3x2;$/;"	t	namespace:glm	typeref:typename:mat<3,2,int16,lowp>
lowp_i16mat3x3	./glm/fwd.hpp	/^	typedef mat<3, 3, int16, lowp>		lowp_i16mat3x3;$/;"	t	namespace:glm	typeref:typename:mat<3,3,int16,lowp>
lowp_i16mat3x4	./glm/fwd.hpp	/^	typedef mat<3, 4, int16, lowp>		lowp_i16mat3x4;$/;"	t	namespace:glm	typeref:typename:mat<3,4,int16,lowp>
lowp_i16mat4x2	./glm/fwd.hpp	/^	typedef mat<4, 2, int16, lowp>		lowp_i16mat4x2;$/;"	t	namespace:glm	typeref:typename:mat<4,2,int16,lowp>
lowp_i16mat4x3	./glm/fwd.hpp	/^	typedef mat<4, 3, int16, lowp>		lowp_i16mat4x3;$/;"	t	namespace:glm	typeref:typename:mat<4,3,int16,lowp>
lowp_i16mat4x4	./glm/fwd.hpp	/^	typedef mat<4, 4, int16, lowp>		lowp_i16mat4x4;$/;"	t	namespace:glm	typeref:typename:mat<4,4,int16,lowp>
lowp_i16vec1	./glm/fwd.hpp	/^	typedef vec<1, i16, lowp>		lowp_i16vec1;$/;"	t	namespace:glm	typeref:typename:vec<1,i16,lowp>
lowp_i16vec1	./glm/gtc/type_precision.hpp	/^	typedef vec<1, i16, lowp>		lowp_i16vec1;$/;"	t	namespace:glm	typeref:typename:vec<1,i16,lowp>
lowp_i16vec2	./glm/fwd.hpp	/^	typedef vec<2, i16, lowp>		lowp_i16vec2;$/;"	t	namespace:glm	typeref:typename:vec<2,i16,lowp>
lowp_i16vec2	./glm/gtc/type_precision.hpp	/^	typedef vec<2, i16, lowp>		lowp_i16vec2;$/;"	t	namespace:glm	typeref:typename:vec<2,i16,lowp>
lowp_i16vec3	./glm/fwd.hpp	/^	typedef vec<3, i16, lowp>		lowp_i16vec3;$/;"	t	namespace:glm	typeref:typename:vec<3,i16,lowp>
lowp_i16vec3	./glm/gtc/type_precision.hpp	/^	typedef vec<3, i16, lowp>		lowp_i16vec3;$/;"	t	namespace:glm	typeref:typename:vec<3,i16,lowp>
lowp_i16vec4	./glm/fwd.hpp	/^	typedef vec<4, i16, lowp>		lowp_i16vec4;$/;"	t	namespace:glm	typeref:typename:vec<4,i16,lowp>
lowp_i16vec4	./glm/gtc/type_precision.hpp	/^	typedef vec<4, i16, lowp>		lowp_i16vec4;$/;"	t	namespace:glm	typeref:typename:vec<4,i16,lowp>
lowp_i32	./glm/fwd.hpp	/^	typedef int32					lowp_i32;$/;"	t	namespace:glm	typeref:typename:int32
lowp_i32	./glm/gtc/type_precision.hpp	/^	typedef detail::int32 lowp_i32;$/;"	t	namespace:glm	typeref:typename:detail::int32
lowp_i32mat2x2	./glm/fwd.hpp	/^	typedef mat<2, 2, int32, lowp>		lowp_i32mat2x2;$/;"	t	namespace:glm	typeref:typename:mat<2,2,int32,lowp>
lowp_i32mat2x3	./glm/fwd.hpp	/^	typedef mat<2, 3, int32, lowp>		lowp_i32mat2x3;$/;"	t	namespace:glm	typeref:typename:mat<2,3,int32,lowp>
lowp_i32mat2x4	./glm/fwd.hpp	/^	typedef mat<2, 4, int32, lowp>		lowp_i32mat2x4;$/;"	t	namespace:glm	typeref:typename:mat<2,4,int32,lowp>
lowp_i32mat3x2	./glm/fwd.hpp	/^	typedef mat<3, 2, int32, lowp>		lowp_i32mat3x2;$/;"	t	namespace:glm	typeref:typename:mat<3,2,int32,lowp>
lowp_i32mat3x3	./glm/fwd.hpp	/^	typedef mat<3, 3, int32, lowp>		lowp_i32mat3x3;$/;"	t	namespace:glm	typeref:typename:mat<3,3,int32,lowp>
lowp_i32mat3x4	./glm/fwd.hpp	/^	typedef mat<3, 4, int32, lowp>		lowp_i32mat3x4;$/;"	t	namespace:glm	typeref:typename:mat<3,4,int32,lowp>
lowp_i32mat4x2	./glm/fwd.hpp	/^	typedef mat<4, 2, int32, lowp>		lowp_i32mat4x2;$/;"	t	namespace:glm	typeref:typename:mat<4,2,int32,lowp>
lowp_i32mat4x3	./glm/fwd.hpp	/^	typedef mat<4, 3, int32, lowp>		lowp_i32mat4x3;$/;"	t	namespace:glm	typeref:typename:mat<4,3,int32,lowp>
lowp_i32mat4x4	./glm/fwd.hpp	/^	typedef mat<4, 4, int32, lowp>		lowp_i32mat4x4;$/;"	t	namespace:glm	typeref:typename:mat<4,4,int32,lowp>
lowp_i32vec1	./glm/fwd.hpp	/^	typedef vec<1, i32, lowp>		lowp_i32vec1;$/;"	t	namespace:glm	typeref:typename:vec<1,i32,lowp>
lowp_i32vec1	./glm/gtc/type_precision.hpp	/^	typedef vec<1, i32, lowp>		lowp_i32vec1;$/;"	t	namespace:glm	typeref:typename:vec<1,i32,lowp>
lowp_i32vec2	./glm/fwd.hpp	/^	typedef vec<2, i32, lowp>		lowp_i32vec2;$/;"	t	namespace:glm	typeref:typename:vec<2,i32,lowp>
lowp_i32vec2	./glm/gtc/type_precision.hpp	/^	typedef vec<2, i32, lowp>		lowp_i32vec2;$/;"	t	namespace:glm	typeref:typename:vec<2,i32,lowp>
lowp_i32vec3	./glm/fwd.hpp	/^	typedef vec<3, i32, lowp>		lowp_i32vec3;$/;"	t	namespace:glm	typeref:typename:vec<3,i32,lowp>
lowp_i32vec3	./glm/gtc/type_precision.hpp	/^	typedef vec<3, i32, lowp>		lowp_i32vec3;$/;"	t	namespace:glm	typeref:typename:vec<3,i32,lowp>
lowp_i32vec4	./glm/fwd.hpp	/^	typedef vec<4, i32, lowp>		lowp_i32vec4;$/;"	t	namespace:glm	typeref:typename:vec<4,i32,lowp>
lowp_i32vec4	./glm/gtc/type_precision.hpp	/^	typedef vec<4, i32, lowp>		lowp_i32vec4;$/;"	t	namespace:glm	typeref:typename:vec<4,i32,lowp>
lowp_i64	./glm/fwd.hpp	/^	typedef int64					lowp_i64;$/;"	t	namespace:glm	typeref:typename:int64
lowp_i64	./glm/gtc/type_precision.hpp	/^	typedef detail::int64 lowp_i64;$/;"	t	namespace:glm	typeref:typename:detail::int64
lowp_i64mat2x2	./glm/fwd.hpp	/^	typedef mat<2, 2, int64, lowp>		lowp_i64mat2x2;$/;"	t	namespace:glm	typeref:typename:mat<2,2,int64,lowp>
lowp_i64mat2x3	./glm/fwd.hpp	/^	typedef mat<2, 3, int64, lowp>		lowp_i64mat2x3;$/;"	t	namespace:glm	typeref:typename:mat<2,3,int64,lowp>
lowp_i64mat2x4	./glm/fwd.hpp	/^	typedef mat<2, 4, int64, lowp>		lowp_i64mat2x4;$/;"	t	namespace:glm	typeref:typename:mat<2,4,int64,lowp>
lowp_i64mat3x2	./glm/fwd.hpp	/^	typedef mat<3, 2, int64, lowp>		lowp_i64mat3x2;$/;"	t	namespace:glm	typeref:typename:mat<3,2,int64,lowp>
lowp_i64mat3x3	./glm/fwd.hpp	/^	typedef mat<3, 3, int64, lowp>		lowp_i64mat3x3;$/;"	t	namespace:glm	typeref:typename:mat<3,3,int64,lowp>
lowp_i64mat3x4	./glm/fwd.hpp	/^	typedef mat<3, 4, int64, lowp>		lowp_i64mat3x4;$/;"	t	namespace:glm	typeref:typename:mat<3,4,int64,lowp>
lowp_i64mat4x2	./glm/fwd.hpp	/^	typedef mat<4, 2, int64, lowp>		lowp_i64mat4x2;$/;"	t	namespace:glm	typeref:typename:mat<4,2,int64,lowp>
lowp_i64mat4x3	./glm/fwd.hpp	/^	typedef mat<4, 3, int64, lowp>		lowp_i64mat4x3;$/;"	t	namespace:glm	typeref:typename:mat<4,3,int64,lowp>
lowp_i64mat4x4	./glm/fwd.hpp	/^	typedef mat<4, 4, int64, lowp>		lowp_i64mat4x4;$/;"	t	namespace:glm	typeref:typename:mat<4,4,int64,lowp>
lowp_i64vec1	./glm/fwd.hpp	/^	typedef vec<1, i64, lowp>		lowp_i64vec1;$/;"	t	namespace:glm	typeref:typename:vec<1,i64,lowp>
lowp_i64vec1	./glm/gtc/type_precision.hpp	/^	typedef vec<1, i64, lowp>		lowp_i64vec1;$/;"	t	namespace:glm	typeref:typename:vec<1,i64,lowp>
lowp_i64vec2	./glm/fwd.hpp	/^	typedef vec<2, i64, lowp>		lowp_i64vec2;$/;"	t	namespace:glm	typeref:typename:vec<2,i64,lowp>
lowp_i64vec2	./glm/gtc/type_precision.hpp	/^	typedef vec<2, i64, lowp>		lowp_i64vec2;$/;"	t	namespace:glm	typeref:typename:vec<2,i64,lowp>
lowp_i64vec3	./glm/fwd.hpp	/^	typedef vec<3, i64, lowp>		lowp_i64vec3;$/;"	t	namespace:glm	typeref:typename:vec<3,i64,lowp>
lowp_i64vec3	./glm/gtc/type_precision.hpp	/^	typedef vec<3, i64, lowp>		lowp_i64vec3;$/;"	t	namespace:glm	typeref:typename:vec<3,i64,lowp>
lowp_i64vec4	./glm/fwd.hpp	/^	typedef vec<4, i64, lowp>		lowp_i64vec4;$/;"	t	namespace:glm	typeref:typename:vec<4,i64,lowp>
lowp_i64vec4	./glm/gtc/type_precision.hpp	/^	typedef vec<4, i64, lowp>		lowp_i64vec4;$/;"	t	namespace:glm	typeref:typename:vec<4,i64,lowp>
lowp_i8	./glm/fwd.hpp	/^	typedef int8					lowp_i8;$/;"	t	namespace:glm	typeref:typename:int8
lowp_i8	./glm/gtc/type_precision.hpp	/^	typedef detail::int8 lowp_i8;$/;"	t	namespace:glm	typeref:typename:detail::int8
lowp_i8mat2x2	./glm/fwd.hpp	/^	typedef mat<2, 2, int8, lowp>		lowp_i8mat2x2;$/;"	t	namespace:glm	typeref:typename:mat<2,2,int8,lowp>
lowp_i8mat2x3	./glm/fwd.hpp	/^	typedef mat<2, 3, int8, lowp>		lowp_i8mat2x3;$/;"	t	namespace:glm	typeref:typename:mat<2,3,int8,lowp>
lowp_i8mat2x4	./glm/fwd.hpp	/^	typedef mat<2, 4, int8, lowp>		lowp_i8mat2x4;$/;"	t	namespace:glm	typeref:typename:mat<2,4,int8,lowp>
lowp_i8mat3x2	./glm/fwd.hpp	/^	typedef mat<3, 2, int8, lowp>		lowp_i8mat3x2;$/;"	t	namespace:glm	typeref:typename:mat<3,2,int8,lowp>
lowp_i8mat3x3	./glm/fwd.hpp	/^	typedef mat<3, 3, int8, lowp>		lowp_i8mat3x3;$/;"	t	namespace:glm	typeref:typename:mat<3,3,int8,lowp>
lowp_i8mat3x4	./glm/fwd.hpp	/^	typedef mat<3, 4, int8, lowp>		lowp_i8mat3x4;$/;"	t	namespace:glm	typeref:typename:mat<3,4,int8,lowp>
lowp_i8mat4x2	./glm/fwd.hpp	/^	typedef mat<4, 2, int8, lowp>		lowp_i8mat4x2;$/;"	t	namespace:glm	typeref:typename:mat<4,2,int8,lowp>
lowp_i8mat4x3	./glm/fwd.hpp	/^	typedef mat<4, 3, int8, lowp>		lowp_i8mat4x3;$/;"	t	namespace:glm	typeref:typename:mat<4,3,int8,lowp>
lowp_i8mat4x4	./glm/fwd.hpp	/^	typedef mat<4, 4, int8, lowp>		lowp_i8mat4x4;$/;"	t	namespace:glm	typeref:typename:mat<4,4,int8,lowp>
lowp_i8vec1	./glm/fwd.hpp	/^	typedef vec<1, i8, lowp>		lowp_i8vec1;$/;"	t	namespace:glm	typeref:typename:vec<1,i8,lowp>
lowp_i8vec1	./glm/gtc/type_precision.hpp	/^	typedef vec<1, i8, lowp>		lowp_i8vec1;$/;"	t	namespace:glm	typeref:typename:vec<1,i8,lowp>
lowp_i8vec2	./glm/fwd.hpp	/^	typedef vec<2, i8, lowp>		lowp_i8vec2;$/;"	t	namespace:glm	typeref:typename:vec<2,i8,lowp>
lowp_i8vec2	./glm/gtc/type_precision.hpp	/^	typedef vec<2, i8, lowp>		lowp_i8vec2;$/;"	t	namespace:glm	typeref:typename:vec<2,i8,lowp>
lowp_i8vec3	./glm/fwd.hpp	/^	typedef vec<3, i8, lowp>		lowp_i8vec3;$/;"	t	namespace:glm	typeref:typename:vec<3,i8,lowp>
lowp_i8vec3	./glm/gtc/type_precision.hpp	/^	typedef vec<3, i8, lowp>		lowp_i8vec3;$/;"	t	namespace:glm	typeref:typename:vec<3,i8,lowp>
lowp_i8vec4	./glm/fwd.hpp	/^	typedef vec<4, i8, lowp>		lowp_i8vec4;$/;"	t	namespace:glm	typeref:typename:vec<4,i8,lowp>
lowp_i8vec4	./glm/gtc/type_precision.hpp	/^	typedef vec<4, i8, lowp>		lowp_i8vec4;$/;"	t	namespace:glm	typeref:typename:vec<4,i8,lowp>
lowp_imat2	./glm/gtc/matrix_integer.hpp	/^	typedef mat<2, 2, int, lowp>				lowp_imat2;$/;"	t	namespace:glm	typeref:typename:mat<2,2,int,lowp>
lowp_imat2x2	./glm/fwd.hpp	/^	typedef mat<2, 2, int, lowp>		lowp_imat2x2;$/;"	t	namespace:glm	typeref:typename:mat<2,2,int,lowp>
lowp_imat2x2	./glm/gtc/matrix_integer.hpp	/^	typedef mat<2, 2, int, lowp>				lowp_imat2x2;$/;"	t	namespace:glm	typeref:typename:mat<2,2,int,lowp>
lowp_imat2x3	./glm/fwd.hpp	/^	typedef mat<2, 3, int, lowp>		lowp_imat2x3;$/;"	t	namespace:glm	typeref:typename:mat<2,3,int,lowp>
lowp_imat2x3	./glm/gtc/matrix_integer.hpp	/^	typedef mat<2, 3, int, lowp>				lowp_imat2x3;$/;"	t	namespace:glm	typeref:typename:mat<2,3,int,lowp>
lowp_imat2x4	./glm/fwd.hpp	/^	typedef mat<2, 4, int, lowp>		lowp_imat2x4;$/;"	t	namespace:glm	typeref:typename:mat<2,4,int,lowp>
lowp_imat2x4	./glm/gtc/matrix_integer.hpp	/^	typedef mat<2, 4, int, lowp>				lowp_imat2x4;$/;"	t	namespace:glm	typeref:typename:mat<2,4,int,lowp>
lowp_imat3	./glm/gtc/matrix_integer.hpp	/^	typedef mat<3, 3, int, lowp>				lowp_imat3;$/;"	t	namespace:glm	typeref:typename:mat<3,3,int,lowp>
lowp_imat3x2	./glm/fwd.hpp	/^	typedef mat<3, 2, int, lowp>		lowp_imat3x2;$/;"	t	namespace:glm	typeref:typename:mat<3,2,int,lowp>
lowp_imat3x2	./glm/gtc/matrix_integer.hpp	/^	typedef mat<3, 2, int, lowp>				lowp_imat3x2;$/;"	t	namespace:glm	typeref:typename:mat<3,2,int,lowp>
lowp_imat3x3	./glm/fwd.hpp	/^	typedef mat<3, 3, int, lowp>		lowp_imat3x3;$/;"	t	namespace:glm	typeref:typename:mat<3,3,int,lowp>
lowp_imat3x3	./glm/gtc/matrix_integer.hpp	/^	typedef mat<3, 3, int, lowp>				lowp_imat3x3;$/;"	t	namespace:glm	typeref:typename:mat<3,3,int,lowp>
lowp_imat3x4	./glm/fwd.hpp	/^	typedef mat<3, 4, int, lowp>		lowp_imat3x4;$/;"	t	namespace:glm	typeref:typename:mat<3,4,int,lowp>
lowp_imat3x4	./glm/gtc/matrix_integer.hpp	/^	typedef mat<3, 4, int, lowp>				lowp_imat3x4;$/;"	t	namespace:glm	typeref:typename:mat<3,4,int,lowp>
lowp_imat4	./glm/gtc/matrix_integer.hpp	/^	typedef mat<4, 4, int, lowp>				lowp_imat4;$/;"	t	namespace:glm	typeref:typename:mat<4,4,int,lowp>
lowp_imat4x2	./glm/fwd.hpp	/^	typedef mat<4, 2, int, lowp>		lowp_imat4x2;$/;"	t	namespace:glm	typeref:typename:mat<4,2,int,lowp>
lowp_imat4x2	./glm/gtc/matrix_integer.hpp	/^	typedef mat<4, 2, int, lowp>				lowp_imat4x2;$/;"	t	namespace:glm	typeref:typename:mat<4,2,int,lowp>
lowp_imat4x3	./glm/fwd.hpp	/^	typedef mat<4, 3, int, lowp>		lowp_imat4x3;$/;"	t	namespace:glm	typeref:typename:mat<4,3,int,lowp>
lowp_imat4x3	./glm/gtc/matrix_integer.hpp	/^	typedef mat<4, 3, int, lowp>				lowp_imat4x3;$/;"	t	namespace:glm	typeref:typename:mat<4,3,int,lowp>
lowp_imat4x4	./glm/fwd.hpp	/^	typedef mat<4, 4, int, lowp>		lowp_imat4x4;$/;"	t	namespace:glm	typeref:typename:mat<4,4,int,lowp>
lowp_imat4x4	./glm/gtc/matrix_integer.hpp	/^	typedef mat<4, 4, int, lowp>				lowp_imat4x4;$/;"	t	namespace:glm	typeref:typename:mat<4,4,int,lowp>
lowp_int16	./glm/fwd.hpp	/^	typedef int16					lowp_int16;$/;"	t	namespace:glm	typeref:typename:int16
lowp_int16	./glm/gtc/type_precision.hpp	/^	typedef detail::int16 lowp_int16;$/;"	t	namespace:glm	typeref:typename:detail::int16
lowp_int16_t	./glm/fwd.hpp	/^	typedef int16					lowp_int16_t;$/;"	t	namespace:glm	typeref:typename:int16
lowp_int16_t	./glm/gtc/type_precision.hpp	/^	typedef detail::int16 lowp_int16_t;$/;"	t	namespace:glm	typeref:typename:detail::int16
lowp_int32	./glm/fwd.hpp	/^	typedef int32					lowp_int32;$/;"	t	namespace:glm	typeref:typename:int32
lowp_int32	./glm/gtc/type_precision.hpp	/^	typedef detail::int32 lowp_int32;$/;"	t	namespace:glm	typeref:typename:detail::int32
lowp_int32_t	./glm/fwd.hpp	/^	typedef int32					lowp_int32_t;$/;"	t	namespace:glm	typeref:typename:int32
lowp_int32_t	./glm/gtc/type_precision.hpp	/^	typedef detail::int32 lowp_int32_t;$/;"	t	namespace:glm	typeref:typename:detail::int32
lowp_int64	./glm/fwd.hpp	/^	typedef int64					lowp_int64;$/;"	t	namespace:glm	typeref:typename:int64
lowp_int64	./glm/gtc/type_precision.hpp	/^	typedef detail::int64 lowp_int64;$/;"	t	namespace:glm	typeref:typename:detail::int64
lowp_int64_t	./glm/fwd.hpp	/^	typedef int64					lowp_int64_t;$/;"	t	namespace:glm	typeref:typename:int64
lowp_int64_t	./glm/gtc/type_precision.hpp	/^	typedef detail::int64 lowp_int64_t;$/;"	t	namespace:glm	typeref:typename:detail::int64
lowp_int8	./glm/fwd.hpp	/^	typedef int8					lowp_int8;$/;"	t	namespace:glm	typeref:typename:int8
lowp_int8	./glm/gtc/type_precision.hpp	/^	typedef detail::int8 lowp_int8;$/;"	t	namespace:glm	typeref:typename:detail::int8
lowp_int8_t	./glm/fwd.hpp	/^	typedef int8					lowp_int8_t;$/;"	t	namespace:glm	typeref:typename:int8
lowp_int8_t	./glm/gtc/type_precision.hpp	/^	typedef detail::int8 lowp_int8_t;$/;"	t	namespace:glm	typeref:typename:detail::int8
lowp_ivec1	./glm/fwd.hpp	/^	typedef vec<1, int, lowp>		lowp_ivec1;$/;"	t	namespace:glm	typeref:typename:vec<1,int,lowp>
lowp_ivec1	./glm/gtc/type_precision.hpp	/^	typedef vec<1, int, lowp>		lowp_ivec1;$/;"	t	namespace:glm	typeref:typename:vec<1,int,lowp>
lowp_ivec2	./glm/fwd.hpp	/^	typedef vec<2, int, lowp>		lowp_ivec2;$/;"	t	namespace:glm	typeref:typename:vec<2,int,lowp>
lowp_ivec2	./glm/gtc/type_precision.hpp	/^	typedef vec<2, int, lowp>		lowp_ivec2;$/;"	t	namespace:glm	typeref:typename:vec<2,int,lowp>
lowp_ivec3	./glm/fwd.hpp	/^	typedef vec<3, int, lowp>		lowp_ivec3;$/;"	t	namespace:glm	typeref:typename:vec<3,int,lowp>
lowp_ivec3	./glm/gtc/type_precision.hpp	/^	typedef vec<3, int, lowp>		lowp_ivec3;$/;"	t	namespace:glm	typeref:typename:vec<3,int,lowp>
lowp_ivec4	./glm/fwd.hpp	/^	typedef vec<4, int, lowp>		lowp_ivec4;$/;"	t	namespace:glm	typeref:typename:vec<4,int,lowp>
lowp_ivec4	./glm/gtc/type_precision.hpp	/^	typedef vec<4, int, lowp>		lowp_ivec4;$/;"	t	namespace:glm	typeref:typename:vec<4,int,lowp>
lowp_mat2	./glm/ext/matrix_float2x2_precision.hpp	/^	typedef mat<2, 2, float, lowp>		lowp_mat2;$/;"	t	namespace:glm	typeref:typename:mat<2,2,float,lowp>
lowp_mat2	./glm/fwd.hpp	/^	typedef mat<2, 2, f32, lowp>		lowp_mat2;$/;"	t	namespace:glm	typeref:typename:mat<2,2,f32,lowp>
lowp_mat2x2	./glm/ext/matrix_float2x2_precision.hpp	/^	typedef mat<2, 2, float, lowp>		lowp_mat2x2;$/;"	t	namespace:glm	typeref:typename:mat<2,2,float,lowp>
lowp_mat2x2	./glm/fwd.hpp	/^	typedef mat<2, 2, f32, lowp>		lowp_mat2x2;$/;"	t	namespace:glm	typeref:typename:mat<2,2,f32,lowp>
lowp_mat2x3	./glm/ext/matrix_float2x3_precision.hpp	/^	typedef mat<2, 3, float, lowp>		lowp_mat2x3;$/;"	t	namespace:glm	typeref:typename:mat<2,3,float,lowp>
lowp_mat2x3	./glm/fwd.hpp	/^	typedef mat<2, 3, f32, lowp>		lowp_mat2x3;$/;"	t	namespace:glm	typeref:typename:mat<2,3,f32,lowp>
lowp_mat2x4	./glm/ext/matrix_float2x4_precision.hpp	/^	typedef mat<2, 4, float, lowp>		lowp_mat2x4;$/;"	t	namespace:glm	typeref:typename:mat<2,4,float,lowp>
lowp_mat2x4	./glm/fwd.hpp	/^	typedef mat<2, 4, f32, lowp>		lowp_mat2x4;$/;"	t	namespace:glm	typeref:typename:mat<2,4,f32,lowp>
lowp_mat3	./glm/ext/matrix_float3x3_precision.hpp	/^	typedef mat<3, 3, float, lowp>		lowp_mat3;$/;"	t	namespace:glm	typeref:typename:mat<3,3,float,lowp>
lowp_mat3	./glm/fwd.hpp	/^	typedef mat<3, 3, f32, lowp>		lowp_mat3;$/;"	t	namespace:glm	typeref:typename:mat<3,3,f32,lowp>
lowp_mat3x2	./glm/ext/matrix_float3x2_precision.hpp	/^	typedef mat<3, 2, float, lowp>		lowp_mat3x2;$/;"	t	namespace:glm	typeref:typename:mat<3,2,float,lowp>
lowp_mat3x2	./glm/fwd.hpp	/^	typedef mat<3, 2, f32, lowp>		lowp_mat3x2;$/;"	t	namespace:glm	typeref:typename:mat<3,2,f32,lowp>
lowp_mat3x3	./glm/ext/matrix_float3x3_precision.hpp	/^	typedef mat<3, 3, float, lowp>		lowp_mat3x3;$/;"	t	namespace:glm	typeref:typename:mat<3,3,float,lowp>
lowp_mat3x3	./glm/fwd.hpp	/^	typedef mat<3, 3, f32, lowp>		lowp_mat3x3;$/;"	t	namespace:glm	typeref:typename:mat<3,3,f32,lowp>
lowp_mat3x4	./glm/ext/matrix_float3x4_precision.hpp	/^	typedef mat<3, 4, float, lowp>		lowp_mat3x4;$/;"	t	namespace:glm	typeref:typename:mat<3,4,float,lowp>
lowp_mat3x4	./glm/fwd.hpp	/^	typedef mat<3, 4, f32, lowp>		lowp_mat3x4;$/;"	t	namespace:glm	typeref:typename:mat<3,4,f32,lowp>
lowp_mat4	./glm/ext/matrix_float4x4_precision.hpp	/^	typedef mat<4, 4, float, lowp>		lowp_mat4;$/;"	t	namespace:glm	typeref:typename:mat<4,4,float,lowp>
lowp_mat4	./glm/fwd.hpp	/^	typedef mat<4, 4, f32, lowp>		lowp_mat4;$/;"	t	namespace:glm	typeref:typename:mat<4,4,f32,lowp>
lowp_mat4x2	./glm/ext/matrix_float4x2_precision.hpp	/^	typedef mat<4, 2, float, lowp>		lowp_mat4x2;$/;"	t	namespace:glm	typeref:typename:mat<4,2,float,lowp>
lowp_mat4x2	./glm/fwd.hpp	/^	typedef mat<4, 2, f32, lowp>		lowp_mat4x2;$/;"	t	namespace:glm	typeref:typename:mat<4,2,f32,lowp>
lowp_mat4x3	./glm/ext/matrix_float4x3_precision.hpp	/^	typedef mat<4, 3, float, lowp>		lowp_mat4x3;$/;"	t	namespace:glm	typeref:typename:mat<4,3,float,lowp>
lowp_mat4x3	./glm/fwd.hpp	/^	typedef mat<4, 3, f32, lowp>		lowp_mat4x3;$/;"	t	namespace:glm	typeref:typename:mat<4,3,f32,lowp>
lowp_mat4x4	./glm/ext/matrix_float4x4_precision.hpp	/^	typedef mat<4, 4, float, lowp>		lowp_mat4x4;$/;"	t	namespace:glm	typeref:typename:mat<4,4,float,lowp>
lowp_mat4x4	./glm/fwd.hpp	/^	typedef mat<4, 4, f32, lowp>		lowp_mat4x4;$/;"	t	namespace:glm	typeref:typename:mat<4,4,f32,lowp>
lowp_quat	./glm/ext/quaternion_float_precision.hpp	/^	typedef qua<float, lowp>		lowp_quat;$/;"	t	namespace:glm	typeref:typename:qua<float,lowp>
lowp_quat	./glm/fwd.hpp	/^	typedef qua<float, lowp>			lowp_quat;$/;"	t	namespace:glm	typeref:typename:qua<float,lowp>
lowp_u16	./glm/fwd.hpp	/^	typedef uint16					lowp_u16;$/;"	t	namespace:glm	typeref:typename:uint16
lowp_u16	./glm/gtc/type_precision.hpp	/^	typedef detail::uint16 lowp_u16;$/;"	t	namespace:glm	typeref:typename:detail::uint16
lowp_u16mat2x2	./glm/fwd.hpp	/^	typedef mat<2, 2, uint16, lowp>		lowp_u16mat2x2;$/;"	t	namespace:glm	typeref:typename:mat<2,2,uint16,lowp>
lowp_u16mat2x3	./glm/fwd.hpp	/^	typedef mat<2, 3, uint16, lowp>		lowp_u16mat2x3;$/;"	t	namespace:glm	typeref:typename:mat<2,3,uint16,lowp>
lowp_u16mat2x4	./glm/fwd.hpp	/^	typedef mat<2, 4, uint16, lowp>		lowp_u16mat2x4;$/;"	t	namespace:glm	typeref:typename:mat<2,4,uint16,lowp>
lowp_u16mat3x2	./glm/fwd.hpp	/^	typedef mat<3, 2, uint16, lowp>		lowp_u16mat3x2;$/;"	t	namespace:glm	typeref:typename:mat<3,2,uint16,lowp>
lowp_u16mat3x3	./glm/fwd.hpp	/^	typedef mat<3, 3, uint16, lowp>		lowp_u16mat3x3;$/;"	t	namespace:glm	typeref:typename:mat<3,3,uint16,lowp>
lowp_u16mat3x4	./glm/fwd.hpp	/^	typedef mat<3, 4, uint16, lowp>		lowp_u16mat3x4;$/;"	t	namespace:glm	typeref:typename:mat<3,4,uint16,lowp>
lowp_u16mat4x2	./glm/fwd.hpp	/^	typedef mat<4, 2, uint16, lowp>		lowp_u16mat4x2;$/;"	t	namespace:glm	typeref:typename:mat<4,2,uint16,lowp>
lowp_u16mat4x3	./glm/fwd.hpp	/^	typedef mat<4, 3, uint16, lowp>		lowp_u16mat4x3;$/;"	t	namespace:glm	typeref:typename:mat<4,3,uint16,lowp>
lowp_u16mat4x4	./glm/fwd.hpp	/^	typedef mat<4, 4, uint16, lowp>		lowp_u16mat4x4;$/;"	t	namespace:glm	typeref:typename:mat<4,4,uint16,lowp>
lowp_u16vec1	./glm/fwd.hpp	/^	typedef vec<1, u16, lowp>		lowp_u16vec1;$/;"	t	namespace:glm	typeref:typename:vec<1,u16,lowp>
lowp_u16vec1	./glm/gtc/type_precision.hpp	/^	typedef vec<1, u16, lowp>		lowp_u16vec1;$/;"	t	namespace:glm	typeref:typename:vec<1,u16,lowp>
lowp_u16vec2	./glm/fwd.hpp	/^	typedef vec<2, u16, lowp>		lowp_u16vec2;$/;"	t	namespace:glm	typeref:typename:vec<2,u16,lowp>
lowp_u16vec2	./glm/gtc/type_precision.hpp	/^	typedef vec<2, u16, lowp>		lowp_u16vec2;$/;"	t	namespace:glm	typeref:typename:vec<2,u16,lowp>
lowp_u16vec3	./glm/fwd.hpp	/^	typedef vec<3, u16, lowp>		lowp_u16vec3;$/;"	t	namespace:glm	typeref:typename:vec<3,u16,lowp>
lowp_u16vec3	./glm/gtc/type_precision.hpp	/^	typedef vec<3, u16, lowp>		lowp_u16vec3;$/;"	t	namespace:glm	typeref:typename:vec<3,u16,lowp>
lowp_u16vec4	./glm/fwd.hpp	/^	typedef vec<4, u16, lowp>		lowp_u16vec4;$/;"	t	namespace:glm	typeref:typename:vec<4,u16,lowp>
lowp_u16vec4	./glm/gtc/type_precision.hpp	/^	typedef vec<4, u16, lowp>		lowp_u16vec4;$/;"	t	namespace:glm	typeref:typename:vec<4,u16,lowp>
lowp_u32	./glm/fwd.hpp	/^	typedef uint32					lowp_u32;$/;"	t	namespace:glm	typeref:typename:uint32
lowp_u32	./glm/gtc/type_precision.hpp	/^	typedef detail::uint32 lowp_u32;$/;"	t	namespace:glm	typeref:typename:detail::uint32
lowp_u32mat2x2	./glm/fwd.hpp	/^	typedef mat<2, 2, uint32, lowp>		lowp_u32mat2x2;$/;"	t	namespace:glm	typeref:typename:mat<2,2,uint32,lowp>
lowp_u32mat2x3	./glm/fwd.hpp	/^	typedef mat<2, 3, uint32, lowp>		lowp_u32mat2x3;$/;"	t	namespace:glm	typeref:typename:mat<2,3,uint32,lowp>
lowp_u32mat2x4	./glm/fwd.hpp	/^	typedef mat<2, 4, uint32, lowp>		lowp_u32mat2x4;$/;"	t	namespace:glm	typeref:typename:mat<2,4,uint32,lowp>
lowp_u32mat3x2	./glm/fwd.hpp	/^	typedef mat<3, 2, uint32, lowp>		lowp_u32mat3x2;$/;"	t	namespace:glm	typeref:typename:mat<3,2,uint32,lowp>
lowp_u32mat3x3	./glm/fwd.hpp	/^	typedef mat<3, 3, uint32, lowp>		lowp_u32mat3x3;$/;"	t	namespace:glm	typeref:typename:mat<3,3,uint32,lowp>
lowp_u32mat3x4	./glm/fwd.hpp	/^	typedef mat<3, 4, uint32, lowp>		lowp_u32mat3x4;$/;"	t	namespace:glm	typeref:typename:mat<3,4,uint32,lowp>
lowp_u32mat4x2	./glm/fwd.hpp	/^	typedef mat<4, 2, uint32, lowp>		lowp_u32mat4x2;$/;"	t	namespace:glm	typeref:typename:mat<4,2,uint32,lowp>
lowp_u32mat4x3	./glm/fwd.hpp	/^	typedef mat<4, 3, uint32, lowp>		lowp_u32mat4x3;$/;"	t	namespace:glm	typeref:typename:mat<4,3,uint32,lowp>
lowp_u32mat4x4	./glm/fwd.hpp	/^	typedef mat<4, 4, uint32, lowp>		lowp_u32mat4x4;$/;"	t	namespace:glm	typeref:typename:mat<4,4,uint32,lowp>
lowp_u32vec1	./glm/fwd.hpp	/^	typedef vec<1, u32, lowp>		lowp_u32vec1;$/;"	t	namespace:glm	typeref:typename:vec<1,u32,lowp>
lowp_u32vec1	./glm/gtc/type_precision.hpp	/^	typedef vec<1, u32, lowp>		lowp_u32vec1;$/;"	t	namespace:glm	typeref:typename:vec<1,u32,lowp>
lowp_u32vec2	./glm/fwd.hpp	/^	typedef vec<2, u32, lowp>		lowp_u32vec2;$/;"	t	namespace:glm	typeref:typename:vec<2,u32,lowp>
lowp_u32vec2	./glm/gtc/type_precision.hpp	/^	typedef vec<2, u32, lowp>		lowp_u32vec2;$/;"	t	namespace:glm	typeref:typename:vec<2,u32,lowp>
lowp_u32vec3	./glm/fwd.hpp	/^	typedef vec<3, u32, lowp>		lowp_u32vec3;$/;"	t	namespace:glm	typeref:typename:vec<3,u32,lowp>
lowp_u32vec3	./glm/gtc/type_precision.hpp	/^	typedef vec<3, u32, lowp>		lowp_u32vec3;$/;"	t	namespace:glm	typeref:typename:vec<3,u32,lowp>
lowp_u32vec4	./glm/fwd.hpp	/^	typedef vec<4, u32, lowp>		lowp_u32vec4;$/;"	t	namespace:glm	typeref:typename:vec<4,u32,lowp>
lowp_u32vec4	./glm/gtc/type_precision.hpp	/^	typedef vec<4, u32, lowp>		lowp_u32vec4;$/;"	t	namespace:glm	typeref:typename:vec<4,u32,lowp>
lowp_u64	./glm/fwd.hpp	/^	typedef uint64					lowp_u64;$/;"	t	namespace:glm	typeref:typename:uint64
lowp_u64	./glm/gtc/type_precision.hpp	/^	typedef detail::uint64 lowp_u64;$/;"	t	namespace:glm	typeref:typename:detail::uint64
lowp_u64mat2x2	./glm/fwd.hpp	/^	typedef mat<2, 2, uint64, lowp>		lowp_u64mat2x2;$/;"	t	namespace:glm	typeref:typename:mat<2,2,uint64,lowp>
lowp_u64mat2x3	./glm/fwd.hpp	/^	typedef mat<2, 3, uint64, lowp>		lowp_u64mat2x3;$/;"	t	namespace:glm	typeref:typename:mat<2,3,uint64,lowp>
lowp_u64mat2x4	./glm/fwd.hpp	/^	typedef mat<2, 4, uint64, lowp>		lowp_u64mat2x4;$/;"	t	namespace:glm	typeref:typename:mat<2,4,uint64,lowp>
lowp_u64mat3x2	./glm/fwd.hpp	/^	typedef mat<3, 2, uint64, lowp>		lowp_u64mat3x2;$/;"	t	namespace:glm	typeref:typename:mat<3,2,uint64,lowp>
lowp_u64mat3x3	./glm/fwd.hpp	/^	typedef mat<3, 3, uint64, lowp>		lowp_u64mat3x3;$/;"	t	namespace:glm	typeref:typename:mat<3,3,uint64,lowp>
lowp_u64mat3x4	./glm/fwd.hpp	/^	typedef mat<3, 4, uint64, lowp>		lowp_u64mat3x4;$/;"	t	namespace:glm	typeref:typename:mat<3,4,uint64,lowp>
lowp_u64mat4x2	./glm/fwd.hpp	/^	typedef mat<4, 2, uint64, lowp>		lowp_u64mat4x2;$/;"	t	namespace:glm	typeref:typename:mat<4,2,uint64,lowp>
lowp_u64mat4x3	./glm/fwd.hpp	/^	typedef mat<4, 3, uint64, lowp>		lowp_u64mat4x3;$/;"	t	namespace:glm	typeref:typename:mat<4,3,uint64,lowp>
lowp_u64mat4x4	./glm/fwd.hpp	/^	typedef mat<4, 4, uint64, lowp>		lowp_u64mat4x4;$/;"	t	namespace:glm	typeref:typename:mat<4,4,uint64,lowp>
lowp_u64vec1	./glm/fwd.hpp	/^	typedef vec<1, u64, lowp>		lowp_u64vec1;$/;"	t	namespace:glm	typeref:typename:vec<1,u64,lowp>
lowp_u64vec1	./glm/gtc/type_precision.hpp	/^	typedef vec<1, u64, lowp>		lowp_u64vec1;$/;"	t	namespace:glm	typeref:typename:vec<1,u64,lowp>
lowp_u64vec2	./glm/fwd.hpp	/^	typedef vec<2, u64, lowp>		lowp_u64vec2;$/;"	t	namespace:glm	typeref:typename:vec<2,u64,lowp>
lowp_u64vec2	./glm/gtc/type_precision.hpp	/^	typedef vec<2, u64, lowp>		lowp_u64vec2;$/;"	t	namespace:glm	typeref:typename:vec<2,u64,lowp>
lowp_u64vec3	./glm/fwd.hpp	/^	typedef vec<3, u64, lowp>		lowp_u64vec3;$/;"	t	namespace:glm	typeref:typename:vec<3,u64,lowp>
lowp_u64vec3	./glm/gtc/type_precision.hpp	/^	typedef vec<3, u64, lowp>		lowp_u64vec3;$/;"	t	namespace:glm	typeref:typename:vec<3,u64,lowp>
lowp_u64vec4	./glm/fwd.hpp	/^	typedef vec<4, u64, lowp>		lowp_u64vec4;$/;"	t	namespace:glm	typeref:typename:vec<4,u64,lowp>
lowp_u64vec4	./glm/gtc/type_precision.hpp	/^	typedef vec<4, u64, lowp>		lowp_u64vec4;$/;"	t	namespace:glm	typeref:typename:vec<4,u64,lowp>
lowp_u8	./glm/fwd.hpp	/^	typedef uint8					lowp_u8;$/;"	t	namespace:glm	typeref:typename:uint8
lowp_u8	./glm/gtc/type_precision.hpp	/^	typedef detail::uint8 lowp_u8;$/;"	t	namespace:glm	typeref:typename:detail::uint8
lowp_u8mat2x2	./glm/fwd.hpp	/^	typedef mat<2, 2, uint8, lowp>		lowp_u8mat2x2;$/;"	t	namespace:glm	typeref:typename:mat<2,2,uint8,lowp>
lowp_u8mat2x3	./glm/fwd.hpp	/^	typedef mat<2, 3, uint8, lowp>		lowp_u8mat2x3;$/;"	t	namespace:glm	typeref:typename:mat<2,3,uint8,lowp>
lowp_u8mat2x4	./glm/fwd.hpp	/^	typedef mat<2, 4, uint8, lowp>		lowp_u8mat2x4;$/;"	t	namespace:glm	typeref:typename:mat<2,4,uint8,lowp>
lowp_u8mat3x2	./glm/fwd.hpp	/^	typedef mat<3, 2, uint8, lowp>		lowp_u8mat3x2;$/;"	t	namespace:glm	typeref:typename:mat<3,2,uint8,lowp>
lowp_u8mat3x3	./glm/fwd.hpp	/^	typedef mat<3, 3, uint8, lowp>		lowp_u8mat3x3;$/;"	t	namespace:glm	typeref:typename:mat<3,3,uint8,lowp>
lowp_u8mat3x4	./glm/fwd.hpp	/^	typedef mat<3, 4, uint8, lowp>		lowp_u8mat3x4;$/;"	t	namespace:glm	typeref:typename:mat<3,4,uint8,lowp>
lowp_u8mat4x2	./glm/fwd.hpp	/^	typedef mat<4, 2, uint8, lowp>		lowp_u8mat4x2;$/;"	t	namespace:glm	typeref:typename:mat<4,2,uint8,lowp>
lowp_u8mat4x3	./glm/fwd.hpp	/^	typedef mat<4, 3, uint8, lowp>		lowp_u8mat4x3;$/;"	t	namespace:glm	typeref:typename:mat<4,3,uint8,lowp>
lowp_u8mat4x4	./glm/fwd.hpp	/^	typedef mat<4, 4, uint8, lowp>		lowp_u8mat4x4;$/;"	t	namespace:glm	typeref:typename:mat<4,4,uint8,lowp>
lowp_u8vec1	./glm/fwd.hpp	/^	typedef vec<1, u8, lowp>		lowp_u8vec1;$/;"	t	namespace:glm	typeref:typename:vec<1,u8,lowp>
lowp_u8vec1	./glm/gtc/type_precision.hpp	/^	typedef vec<1, u8, lowp>		lowp_u8vec1;$/;"	t	namespace:glm	typeref:typename:vec<1,u8,lowp>
lowp_u8vec2	./glm/fwd.hpp	/^	typedef vec<2, u8, lowp>		lowp_u8vec2;$/;"	t	namespace:glm	typeref:typename:vec<2,u8,lowp>
lowp_u8vec2	./glm/gtc/type_precision.hpp	/^	typedef vec<2, u8, lowp>		lowp_u8vec2;$/;"	t	namespace:glm	typeref:typename:vec<2,u8,lowp>
lowp_u8vec3	./glm/fwd.hpp	/^	typedef vec<3, u8, lowp>		lowp_u8vec3;$/;"	t	namespace:glm	typeref:typename:vec<3,u8,lowp>
lowp_u8vec3	./glm/gtc/type_precision.hpp	/^	typedef vec<3, u8, lowp>		lowp_u8vec3;$/;"	t	namespace:glm	typeref:typename:vec<3,u8,lowp>
lowp_u8vec4	./glm/fwd.hpp	/^	typedef vec<4, u8, lowp>		lowp_u8vec4;$/;"	t	namespace:glm	typeref:typename:vec<4,u8,lowp>
lowp_u8vec4	./glm/gtc/type_precision.hpp	/^	typedef vec<4, u8, lowp>		lowp_u8vec4;$/;"	t	namespace:glm	typeref:typename:vec<4,u8,lowp>
lowp_uint16	./glm/fwd.hpp	/^	typedef uint16					lowp_uint16;$/;"	t	namespace:glm	typeref:typename:uint16
lowp_uint16	./glm/gtc/type_precision.hpp	/^	typedef detail::uint16 lowp_uint16;$/;"	t	namespace:glm	typeref:typename:detail::uint16
lowp_uint16_t	./glm/fwd.hpp	/^	typedef uint16					lowp_uint16_t;$/;"	t	namespace:glm	typeref:typename:uint16
lowp_uint16_t	./glm/gtc/type_precision.hpp	/^	typedef detail::uint16 lowp_uint16_t;$/;"	t	namespace:glm	typeref:typename:detail::uint16
lowp_uint32	./glm/fwd.hpp	/^	typedef uint32					lowp_uint32;$/;"	t	namespace:glm	typeref:typename:uint32
lowp_uint32	./glm/gtc/type_precision.hpp	/^	typedef detail::uint32 lowp_uint32;$/;"	t	namespace:glm	typeref:typename:detail::uint32
lowp_uint32_t	./glm/fwd.hpp	/^	typedef uint32					lowp_uint32_t;$/;"	t	namespace:glm	typeref:typename:uint32
lowp_uint32_t	./glm/gtc/type_precision.hpp	/^	typedef detail::uint32 lowp_uint32_t;$/;"	t	namespace:glm	typeref:typename:detail::uint32
lowp_uint64	./glm/fwd.hpp	/^	typedef uint64					lowp_uint64;$/;"	t	namespace:glm	typeref:typename:uint64
lowp_uint64	./glm/gtc/type_precision.hpp	/^	typedef detail::uint64 lowp_uint64;$/;"	t	namespace:glm	typeref:typename:detail::uint64
lowp_uint64_t	./glm/fwd.hpp	/^	typedef uint64					lowp_uint64_t;$/;"	t	namespace:glm	typeref:typename:uint64
lowp_uint64_t	./glm/gtc/type_precision.hpp	/^	typedef detail::uint64 lowp_uint64_t;$/;"	t	namespace:glm	typeref:typename:detail::uint64
lowp_uint8	./glm/fwd.hpp	/^	typedef uint8					lowp_uint8;$/;"	t	namespace:glm	typeref:typename:uint8
lowp_uint8	./glm/gtc/type_precision.hpp	/^	typedef detail::uint8 lowp_uint8;$/;"	t	namespace:glm	typeref:typename:detail::uint8
lowp_uint8_t	./glm/fwd.hpp	/^	typedef uint8					lowp_uint8_t;$/;"	t	namespace:glm	typeref:typename:uint8
lowp_uint8_t	./glm/gtc/type_precision.hpp	/^	typedef detail::uint8 lowp_uint8_t;$/;"	t	namespace:glm	typeref:typename:detail::uint8
lowp_umat2	./glm/gtc/matrix_integer.hpp	/^	typedef mat<2, 2, uint, lowp>				lowp_umat2;$/;"	t	namespace:glm	typeref:typename:mat<2,2,uint,lowp>
lowp_umat2x2	./glm/fwd.hpp	/^	typedef mat<2, 2, uint, lowp>		lowp_umat2x2;$/;"	t	namespace:glm	typeref:typename:mat<2,2,uint,lowp>
lowp_umat2x2	./glm/gtc/matrix_integer.hpp	/^	typedef mat<2, 2, uint, lowp>				lowp_umat2x2;$/;"	t	namespace:glm	typeref:typename:mat<2,2,uint,lowp>
lowp_umat2x3	./glm/fwd.hpp	/^	typedef mat<2, 3, uint, lowp>		lowp_umat2x3;$/;"	t	namespace:glm	typeref:typename:mat<2,3,uint,lowp>
lowp_umat2x3	./glm/gtc/matrix_integer.hpp	/^	typedef mat<2, 3, uint, lowp>				lowp_umat2x3;$/;"	t	namespace:glm	typeref:typename:mat<2,3,uint,lowp>
lowp_umat2x4	./glm/fwd.hpp	/^	typedef mat<2, 4, uint, lowp>		lowp_umat2x4;$/;"	t	namespace:glm	typeref:typename:mat<2,4,uint,lowp>
lowp_umat2x4	./glm/gtc/matrix_integer.hpp	/^	typedef mat<2, 4, uint, lowp>				lowp_umat2x4;$/;"	t	namespace:glm	typeref:typename:mat<2,4,uint,lowp>
lowp_umat3	./glm/gtc/matrix_integer.hpp	/^	typedef mat<3, 3, uint, lowp>				lowp_umat3;$/;"	t	namespace:glm	typeref:typename:mat<3,3,uint,lowp>
lowp_umat3x2	./glm/fwd.hpp	/^	typedef mat<3, 2, uint, lowp>		lowp_umat3x2;$/;"	t	namespace:glm	typeref:typename:mat<3,2,uint,lowp>
lowp_umat3x2	./glm/gtc/matrix_integer.hpp	/^	typedef mat<3, 2, uint, lowp>				lowp_umat3x2;$/;"	t	namespace:glm	typeref:typename:mat<3,2,uint,lowp>
lowp_umat3x3	./glm/fwd.hpp	/^	typedef mat<3, 3, uint, lowp>		lowp_umat3x3;$/;"	t	namespace:glm	typeref:typename:mat<3,3,uint,lowp>
lowp_umat3x3	./glm/gtc/matrix_integer.hpp	/^	typedef mat<3, 3, uint, lowp>				lowp_umat3x3;$/;"	t	namespace:glm	typeref:typename:mat<3,3,uint,lowp>
lowp_umat3x4	./glm/fwd.hpp	/^	typedef mat<3, 4, uint, lowp>		lowp_umat3x4;$/;"	t	namespace:glm	typeref:typename:mat<3,4,uint,lowp>
lowp_umat3x4	./glm/gtc/matrix_integer.hpp	/^	typedef mat<3, 4, uint, lowp>				lowp_umat3x4;$/;"	t	namespace:glm	typeref:typename:mat<3,4,uint,lowp>
lowp_umat4	./glm/gtc/matrix_integer.hpp	/^	typedef mat<4, 4, uint, lowp>				lowp_umat4;$/;"	t	namespace:glm	typeref:typename:mat<4,4,uint,lowp>
lowp_umat4x2	./glm/fwd.hpp	/^	typedef mat<4, 2, uint, lowp>		lowp_umat4x2;$/;"	t	namespace:glm	typeref:typename:mat<4,2,uint,lowp>
lowp_umat4x2	./glm/gtc/matrix_integer.hpp	/^	typedef mat<4, 2, uint, lowp>				lowp_umat4x2;$/;"	t	namespace:glm	typeref:typename:mat<4,2,uint,lowp>
lowp_umat4x3	./glm/fwd.hpp	/^	typedef mat<4, 3, uint, lowp>		lowp_umat4x3;$/;"	t	namespace:glm	typeref:typename:mat<4,3,uint,lowp>
lowp_umat4x3	./glm/gtc/matrix_integer.hpp	/^	typedef mat<4, 3, uint, lowp>				lowp_umat4x3;$/;"	t	namespace:glm	typeref:typename:mat<4,3,uint,lowp>
lowp_umat4x4	./glm/fwd.hpp	/^	typedef mat<4, 4, uint, lowp>		lowp_umat4x4;$/;"	t	namespace:glm	typeref:typename:mat<4,4,uint,lowp>
lowp_umat4x4	./glm/gtc/matrix_integer.hpp	/^	typedef mat<4, 4, uint, lowp>				lowp_umat4x4;$/;"	t	namespace:glm	typeref:typename:mat<4,4,uint,lowp>
lowp_uvec1	./glm/fwd.hpp	/^	typedef vec<1, uint, lowp>		lowp_uvec1;$/;"	t	namespace:glm	typeref:typename:vec<1,uint,lowp>
lowp_uvec1	./glm/gtc/type_precision.hpp	/^	typedef vec<1, uint, lowp>		lowp_uvec1;$/;"	t	namespace:glm	typeref:typename:vec<1,uint,lowp>
lowp_uvec2	./glm/fwd.hpp	/^	typedef vec<2, uint, lowp>		lowp_uvec2;$/;"	t	namespace:glm	typeref:typename:vec<2,uint,lowp>
lowp_uvec2	./glm/gtc/type_precision.hpp	/^	typedef vec<2, uint, lowp>		lowp_uvec2;$/;"	t	namespace:glm	typeref:typename:vec<2,uint,lowp>
lowp_uvec3	./glm/fwd.hpp	/^	typedef vec<3, uint, lowp>		lowp_uvec3;$/;"	t	namespace:glm	typeref:typename:vec<3,uint,lowp>
lowp_uvec3	./glm/gtc/type_precision.hpp	/^	typedef vec<3, uint, lowp>		lowp_uvec3;$/;"	t	namespace:glm	typeref:typename:vec<3,uint,lowp>
lowp_uvec4	./glm/fwd.hpp	/^	typedef vec<4, uint, lowp>		lowp_uvec4;$/;"	t	namespace:glm	typeref:typename:vec<4,uint,lowp>
lowp_uvec4	./glm/gtc/type_precision.hpp	/^	typedef vec<4, uint, lowp>		lowp_uvec4;$/;"	t	namespace:glm	typeref:typename:vec<4,uint,lowp>
lowp_vec1	./glm/ext/vector_float1_precision.hpp	/^	typedef vec<1, float, lowp>			lowp_vec1;$/;"	t	namespace:glm	typeref:typename:vec<1,float,lowp>
lowp_vec1	./glm/fwd.hpp	/^	typedef vec<1, float, lowp>			lowp_vec1;$/;"	t	namespace:glm	typeref:typename:vec<1,float,lowp>
lowp_vec2	./glm/ext/vector_float2_precision.hpp	/^	typedef vec<2, float, lowp>			lowp_vec2;$/;"	t	namespace:glm	typeref:typename:vec<2,float,lowp>
lowp_vec2	./glm/fwd.hpp	/^	typedef vec<2, float, lowp>			lowp_vec2;$/;"	t	namespace:glm	typeref:typename:vec<2,float,lowp>
lowp_vec3	./glm/ext/vector_float3_precision.hpp	/^	typedef vec<3, float, lowp>			lowp_vec3;$/;"	t	namespace:glm	typeref:typename:vec<3,float,lowp>
lowp_vec3	./glm/fwd.hpp	/^	typedef vec<3, float, lowp>			lowp_vec3;$/;"	t	namespace:glm	typeref:typename:vec<3,float,lowp>
lowp_vec4	./glm/ext/vector_float4_precision.hpp	/^	typedef vec<4, float, lowp>			lowp_vec4;$/;"	t	namespace:glm	typeref:typename:vec<4,float,lowp>
lowp_vec4	./glm/fwd.hpp	/^	typedef vec<4, float, lowp>			lowp_vec4;$/;"	t	namespace:glm	typeref:typename:vec<4,float,lowp>
lsw	./glm/ext/scalar_ulp.inl	/^		int lsw;$/;"	m	struct:__anonb0ce8848020a::__anonb0ce88480308	typeref:typename:int	file:
luminosity	./glm/gtx/color_space.inl	/^	GLM_FUNC_QUALIFIER T luminosity(const vec<3, T, Q>& color)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER T
lxNorm	./glm/gtx/norm.inl	/^	GLM_FUNC_QUALIFIER T lxNorm(vec<3, T, Q> const& v, unsigned int Depth)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER T
lxNorm	./glm/gtx/norm.inl	/^	GLM_FUNC_QUALIFIER T lxNorm(vec<3, T, Q> const& x, vec<3, T, Q> const& y, unsigned int Depth)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER T
madd_lane	./glm/simd/neon.h	/^		static inline float32x4_t madd_lane(float32x4_t acc, float32x4_t v, float32x4_t vlane, int lan/;"	f	namespace:glm::neon	typeref:typename:float32x4_t
main	./glm/build/CMakeFiles/3.31.0-rc1/CompilerIdC/CMakeCCompilerId.c	/^int main(argc, argv) int argc; char *argv[];$/;"	f
main	./glm/build/CMakeFiles/3.31.0-rc1/CompilerIdC/CMakeCCompilerId.c	/^void main() {}$/;"	f	typeref:typename:void
main	./glm/build/CMakeFiles/3.31.0-rc1/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^int main(int argc, char* argv[])$/;"	f	typeref:typename:int
main	main.cpp	/^int main()$/;"	f	typeref:typename:int
make_mat2	./glm/gtc/type_ptr.inl	/^	GLM_FUNC_QUALIFIER mat<2, 2, T, defaultp> make_mat2(T const *const ptr)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER mat<2,2,T,defaultp>
make_mat2x2	./glm/gtc/type_ptr.inl	/^	GLM_FUNC_QUALIFIER mat<2, 2, T, defaultp> make_mat2x2(T const *const ptr)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER mat<2,2,T,defaultp>
make_mat2x3	./glm/gtc/type_ptr.inl	/^	GLM_FUNC_QUALIFIER mat<2, 3, T, defaultp> make_mat2x3(T const *const ptr)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER mat<2,3,T,defaultp>
make_mat2x4	./glm/gtc/type_ptr.inl	/^	GLM_FUNC_QUALIFIER mat<2, 4, T, defaultp> make_mat2x4(T const *const ptr)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER mat<2,4,T,defaultp>
make_mat3	./glm/gtc/type_ptr.inl	/^	GLM_FUNC_QUALIFIER mat<3, 3, T, defaultp> make_mat3(T const *const ptr)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER mat<3,3,T,defaultp>
make_mat3x2	./glm/gtc/type_ptr.inl	/^	GLM_FUNC_QUALIFIER mat<3, 2, T, defaultp> make_mat3x2(T const *const ptr)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER mat<3,2,T,defaultp>
make_mat3x3	./glm/gtc/type_ptr.inl	/^	GLM_FUNC_QUALIFIER mat<3, 3, T, defaultp> make_mat3x3(T const *const ptr)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER mat<3,3,T,defaultp>
make_mat3x4	./glm/gtc/type_ptr.inl	/^	GLM_FUNC_QUALIFIER mat<3, 4, T, defaultp> make_mat3x4(T const *const ptr)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER mat<3,4,T,defaultp>
make_mat4	./glm/gtc/type_ptr.inl	/^	GLM_FUNC_QUALIFIER mat<4, 4, T, defaultp> make_mat4(T const *const ptr)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER mat<4,4,T,defaultp>
make_mat4x2	./glm/gtc/type_ptr.inl	/^	GLM_FUNC_QUALIFIER mat<4, 2, T, defaultp> make_mat4x2(T const *const ptr)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER mat<4,2,T,defaultp>
make_mat4x3	./glm/gtc/type_ptr.inl	/^	GLM_FUNC_QUALIFIER mat<4, 3, T, defaultp> make_mat4x3(T const *const ptr)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER mat<4,3,T,defaultp>
make_mat4x4	./glm/gtc/type_ptr.inl	/^	GLM_FUNC_QUALIFIER mat<4, 4, T, defaultp> make_mat4x4(T const *const ptr)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER mat<4,4,T,defaultp>
make_quat	./glm/gtc/type_ptr.inl	/^	GLM_FUNC_QUALIFIER qua<T, defaultp> make_quat(T const *const ptr)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER qua<T,defaultp>
make_unsigned	./glm/detail/setup.hpp	/^	struct make_unsigned$/;"	s	namespace:glm::detail
make_unsigned	./glm/detail/setup.hpp	/^	struct make_unsigned<char>$/;"	s	namespace:glm::detail
make_unsigned	./glm/detail/setup.hpp	/^	struct make_unsigned<int64>$/;"	s	namespace:glm::detail
make_unsigned	./glm/detail/setup.hpp	/^	struct make_unsigned<int>$/;"	s	namespace:glm::detail
make_unsigned	./glm/detail/setup.hpp	/^	struct make_unsigned<long>$/;"	s	namespace:glm::detail
make_unsigned	./glm/detail/setup.hpp	/^	struct make_unsigned<short>$/;"	s	namespace:glm::detail
make_unsigned	./glm/detail/setup.hpp	/^	struct make_unsigned<signed char>$/;"	s	namespace:glm::detail
make_unsigned	./glm/detail/setup.hpp	/^	struct make_unsigned<uint64>$/;"	s	namespace:glm::detail
make_unsigned	./glm/detail/setup.hpp	/^	struct make_unsigned<unsigned char>$/;"	s	namespace:glm::detail
make_unsigned	./glm/detail/setup.hpp	/^	struct make_unsigned<unsigned int>$/;"	s	namespace:glm::detail
make_unsigned	./glm/detail/setup.hpp	/^	struct make_unsigned<unsigned long>$/;"	s	namespace:glm::detail
make_unsigned	./glm/detail/setup.hpp	/^	struct make_unsigned<unsigned short>$/;"	s	namespace:glm::detail
make_vec1	./glm/gtc/type_ptr.inl	/^	GLM_FUNC_DECL vec<1, T, Q> make_vec1(vec<1, T, Q> const& v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_DECL vec<1,T,Q>
make_vec1	./glm/gtc/type_ptr.inl	/^	GLM_FUNC_DECL vec<1, T, Q> make_vec1(vec<2, T, Q> const& v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_DECL vec<1,T,Q>
make_vec1	./glm/gtc/type_ptr.inl	/^	GLM_FUNC_DECL vec<1, T, Q> make_vec1(vec<3, T, Q> const& v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_DECL vec<1,T,Q>
make_vec1	./glm/gtc/type_ptr.inl	/^	GLM_FUNC_DECL vec<1, T, Q> make_vec1(vec<4, T, Q> const& v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_DECL vec<1,T,Q>
make_vec2	./glm/gtc/type_ptr.inl	/^	GLM_FUNC_DECL vec<2, T, Q> make_vec2(vec<1, T, Q> const& v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_DECL vec<2,T,Q>
make_vec2	./glm/gtc/type_ptr.inl	/^	GLM_FUNC_DECL vec<2, T, Q> make_vec2(vec<2, T, Q> const& v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_DECL vec<2,T,Q>
make_vec2	./glm/gtc/type_ptr.inl	/^	GLM_FUNC_DECL vec<2, T, Q> make_vec2(vec<3, T, Q> const& v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_DECL vec<2,T,Q>
make_vec2	./glm/gtc/type_ptr.inl	/^	GLM_FUNC_DECL vec<2, T, Q> make_vec2(vec<4, T, Q> const& v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_DECL vec<2,T,Q>
make_vec2	./glm/gtc/type_ptr.inl	/^	GLM_FUNC_QUALIFIER vec<2, T, defaultp> make_vec2(T const *const ptr)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<2,T,defaultp>
make_vec3	./glm/gtc/type_ptr.inl	/^	GLM_FUNC_DECL vec<3, T, Q> make_vec3(vec<1, T, Q> const& v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_DECL vec<3,T,Q>
make_vec3	./glm/gtc/type_ptr.inl	/^	GLM_FUNC_DECL vec<3, T, Q> make_vec3(vec<2, T, Q> const& v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_DECL vec<3,T,Q>
make_vec3	./glm/gtc/type_ptr.inl	/^	GLM_FUNC_DECL vec<3, T, Q> make_vec3(vec<3, T, Q> const& v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_DECL vec<3,T,Q>
make_vec3	./glm/gtc/type_ptr.inl	/^	GLM_FUNC_DECL vec<3, T, Q> make_vec3(vec<4, T, Q> const& v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_DECL vec<3,T,Q>
make_vec3	./glm/gtc/type_ptr.inl	/^	GLM_FUNC_QUALIFIER vec<3, T, defaultp> make_vec3(T const *const ptr)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<3,T,defaultp>
make_vec4	./glm/gtc/type_ptr.inl	/^	GLM_FUNC_DECL vec<4, T, Q> make_vec4(vec<1, T, Q> const& v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_DECL vec<4,T,Q>
make_vec4	./glm/gtc/type_ptr.inl	/^	GLM_FUNC_DECL vec<4, T, Q> make_vec4(vec<2, T, Q> const& v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_DECL vec<4,T,Q>
make_vec4	./glm/gtc/type_ptr.inl	/^	GLM_FUNC_DECL vec<4, T, Q> make_vec4(vec<3, T, Q> const& v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_DECL vec<4,T,Q>
make_vec4	./glm/gtc/type_ptr.inl	/^	GLM_FUNC_DECL vec<4, T, Q> make_vec4(vec<4, T, Q> const& v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_DECL vec<4,T,Q>
make_vec4	./glm/gtc/type_ptr.inl	/^	GLM_FUNC_QUALIFIER vec<4, T, defaultp> make_vec4(T const *const ptr)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<4,T,defaultp>
mantissa	./glm/detail/type_float.hpp	/^		GLM_CONSTEXPR int_type mantissa() const { return i & ((1 << 23) - 1); }$/;"	f	union:glm::detail::float_t	typeref:typename:GLM_CONSTEXPR int_type
mantissa	./glm/detail/type_float.hpp	/^		GLM_CONSTEXPR int_type mantissa() const { return i & ((int_type(1) << 52) - 1); }$/;"	f	union:glm::detail::float_t	typeref:typename:GLM_CONSTEXPR int_type
mask	./GL/glxew.h	/^typedef struct { int type; unsigned long serial; Bool send_event; Display *display; GLXDrawable /;"	m	struct:__anonb1a929810608	typeref:typename:unsigned int
mask	./glm/detail/func_integer.inl	/^	GLM_FUNC_QUALIFIER T mask(T Bits)$/;"	f	namespace:glm::detail	typeref:typename:GLM_FUNC_QUALIFIER T
mask	./glm/gtc/bitfield.inl	/^	GLM_FUNC_QUALIFIER genIUType mask(genIUType Bits)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genIUType
mask	./glm/gtc/bitfield.inl	/^	GLM_FUNC_QUALIFIER vec<L, T, Q> mask(vec<L, T, Q> const& v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<L,T,Q>
mat	./glm/detail/glm.cpp	/^template struct mat<2, 2, float32, highp>;$/;"	v	namespace:glm	typeref:meta:struct
mat	./glm/detail/glm.cpp	/^template struct mat<2, 2, float32, lowp>;$/;"	v	namespace:glm	typeref:meta:struct
mat	./glm/detail/glm.cpp	/^template struct mat<2, 2, float32, mediump>;$/;"	v	namespace:glm	typeref:meta:struct
mat	./glm/detail/glm.cpp	/^template struct mat<2, 2, float64, highp>;$/;"	v	namespace:glm	typeref:meta:struct
mat	./glm/detail/glm.cpp	/^template struct mat<2, 2, float64, lowp>;$/;"	v	namespace:glm	typeref:meta:struct
mat	./glm/detail/glm.cpp	/^template struct mat<2, 2, float64, mediump>;$/;"	v	namespace:glm	typeref:meta:struct
mat	./glm/detail/glm.cpp	/^template struct mat<2, 3, float32, highp>;$/;"	v	namespace:glm	typeref:meta:struct
mat	./glm/detail/glm.cpp	/^template struct mat<2, 3, float32, lowp>;$/;"	v	namespace:glm	typeref:meta:struct
mat	./glm/detail/glm.cpp	/^template struct mat<2, 3, float32, mediump>;$/;"	v	namespace:glm	typeref:meta:struct
mat	./glm/detail/glm.cpp	/^template struct mat<2, 3, float64, highp>;$/;"	v	namespace:glm	typeref:meta:struct
mat	./glm/detail/glm.cpp	/^template struct mat<2, 3, float64, lowp>;$/;"	v	namespace:glm	typeref:meta:struct
mat	./glm/detail/glm.cpp	/^template struct mat<2, 3, float64, mediump>;$/;"	v	namespace:glm	typeref:meta:struct
mat	./glm/detail/glm.cpp	/^template struct mat<2, 4, float32, highp>;$/;"	v	namespace:glm	typeref:meta:struct
mat	./glm/detail/glm.cpp	/^template struct mat<2, 4, float32, lowp>;$/;"	v	namespace:glm	typeref:meta:struct
mat	./glm/detail/glm.cpp	/^template struct mat<2, 4, float32, mediump>;$/;"	v	namespace:glm	typeref:meta:struct
mat	./glm/detail/glm.cpp	/^template struct mat<2, 4, float64, highp>;$/;"	v	namespace:glm	typeref:meta:struct
mat	./glm/detail/glm.cpp	/^template struct mat<2, 4, float64, lowp>;$/;"	v	namespace:glm	typeref:meta:struct
mat	./glm/detail/glm.cpp	/^template struct mat<2, 4, float64, mediump>;$/;"	v	namespace:glm	typeref:meta:struct
mat	./glm/detail/glm.cpp	/^template struct mat<3, 2, float32, highp>;$/;"	v	namespace:glm	typeref:meta:struct
mat	./glm/detail/glm.cpp	/^template struct mat<3, 2, float32, lowp>;$/;"	v	namespace:glm	typeref:meta:struct
mat	./glm/detail/glm.cpp	/^template struct mat<3, 2, float32, mediump>;$/;"	v	namespace:glm	typeref:meta:struct
mat	./glm/detail/glm.cpp	/^template struct mat<3, 2, float64, highp>;$/;"	v	namespace:glm	typeref:meta:struct
mat	./glm/detail/glm.cpp	/^template struct mat<3, 2, float64, lowp>;$/;"	v	namespace:glm	typeref:meta:struct
mat	./glm/detail/glm.cpp	/^template struct mat<3, 2, float64, mediump>;$/;"	v	namespace:glm	typeref:meta:struct
mat	./glm/detail/glm.cpp	/^template struct mat<3, 3, float32, highp>;$/;"	v	namespace:glm	typeref:meta:struct
mat	./glm/detail/glm.cpp	/^template struct mat<3, 3, float32, lowp>;$/;"	v	namespace:glm	typeref:meta:struct
mat	./glm/detail/glm.cpp	/^template struct mat<3, 3, float32, mediump>;$/;"	v	namespace:glm	typeref:meta:struct
mat	./glm/detail/glm.cpp	/^template struct mat<3, 3, float64, highp>;$/;"	v	namespace:glm	typeref:meta:struct
mat	./glm/detail/glm.cpp	/^template struct mat<3, 3, float64, lowp>;$/;"	v	namespace:glm	typeref:meta:struct
mat	./glm/detail/glm.cpp	/^template struct mat<3, 3, float64, mediump>;$/;"	v	namespace:glm	typeref:meta:struct
mat	./glm/detail/glm.cpp	/^template struct mat<3, 4, float32, highp>;$/;"	v	namespace:glm	typeref:meta:struct
mat	./glm/detail/glm.cpp	/^template struct mat<3, 4, float32, lowp>;$/;"	v	namespace:glm	typeref:meta:struct
mat	./glm/detail/glm.cpp	/^template struct mat<3, 4, float32, mediump>;$/;"	v	namespace:glm	typeref:meta:struct
mat	./glm/detail/glm.cpp	/^template struct mat<3, 4, float64, highp>;$/;"	v	namespace:glm	typeref:meta:struct
mat	./glm/detail/glm.cpp	/^template struct mat<3, 4, float64, lowp>;$/;"	v	namespace:glm	typeref:meta:struct
mat	./glm/detail/glm.cpp	/^template struct mat<3, 4, float64, mediump>;$/;"	v	namespace:glm	typeref:meta:struct
mat	./glm/detail/glm.cpp	/^template struct mat<4, 2, float32, highp>;$/;"	v	namespace:glm	typeref:meta:struct
mat	./glm/detail/glm.cpp	/^template struct mat<4, 2, float32, lowp>;$/;"	v	namespace:glm	typeref:meta:struct
mat	./glm/detail/glm.cpp	/^template struct mat<4, 2, float32, mediump>;$/;"	v	namespace:glm	typeref:meta:struct
mat	./glm/detail/glm.cpp	/^template struct mat<4, 2, float64, highp>;$/;"	v	namespace:glm	typeref:meta:struct
mat	./glm/detail/glm.cpp	/^template struct mat<4, 2, float64, lowp>;$/;"	v	namespace:glm	typeref:meta:struct
mat	./glm/detail/glm.cpp	/^template struct mat<4, 2, float64, mediump>;$/;"	v	namespace:glm	typeref:meta:struct
mat	./glm/detail/glm.cpp	/^template struct mat<4, 3, float32, highp>;$/;"	v	namespace:glm	typeref:meta:struct
mat	./glm/detail/glm.cpp	/^template struct mat<4, 3, float32, lowp>;$/;"	v	namespace:glm	typeref:meta:struct
mat	./glm/detail/glm.cpp	/^template struct mat<4, 3, float32, mediump>;$/;"	v	namespace:glm	typeref:meta:struct
mat	./glm/detail/glm.cpp	/^template struct mat<4, 3, float64, highp>;$/;"	v	namespace:glm	typeref:meta:struct
mat	./glm/detail/glm.cpp	/^template struct mat<4, 3, float64, lowp>;$/;"	v	namespace:glm	typeref:meta:struct
mat	./glm/detail/glm.cpp	/^template struct mat<4, 3, float64, mediump>;$/;"	v	namespace:glm	typeref:meta:struct
mat	./glm/detail/glm.cpp	/^template struct mat<4, 4, float32, highp>;$/;"	v	namespace:glm	typeref:meta:struct
mat	./glm/detail/glm.cpp	/^template struct mat<4, 4, float32, lowp>;$/;"	v	namespace:glm	typeref:meta:struct
mat	./glm/detail/glm.cpp	/^template struct mat<4, 4, float32, mediump>;$/;"	v	namespace:glm	typeref:meta:struct
mat	./glm/detail/glm.cpp	/^template struct mat<4, 4, float64, highp>;$/;"	v	namespace:glm	typeref:meta:struct
mat	./glm/detail/glm.cpp	/^template struct mat<4, 4, float64, lowp>;$/;"	v	namespace:glm	typeref:meta:struct
mat	./glm/detail/glm.cpp	/^template struct mat<4, 4, float64, mediump>;$/;"	v	namespace:glm	typeref:meta:struct
mat	./glm/detail/type_mat2x2.hpp	/^	struct mat<2, 2, T, Q>$/;"	s	namespace:glm
mat	./glm/detail/type_mat2x2.inl	/^		GLM_DEFAULTED_DEFAULT_CTOR_QUALIFIER GLM_CONSTEXPR mat<2, 2, T, Q>::mat()$/;"	f	class:glm::mat	typeref:typename:GLM_DEFAULTED_DEFAULT_CTOR_QUALIFIER GLM_CONSTEXPR
mat	./glm/detail/type_mat2x2.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<2, 2, T, Q>::mat$/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
mat	./glm/detail/type_mat2x2.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<2, 2, T, Q>::mat(T scalar)$/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
mat	./glm/detail/type_mat2x2.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<2, 2, T, Q>::mat(col_type const& v0, col_type const& v1)$/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
mat	./glm/detail/type_mat2x2.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<2, 2, T, Q>::mat(mat<2, 2, T, P> const& m)$/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
mat	./glm/detail/type_mat2x2.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<2, 2, T, Q>::mat(mat<2, 2, U, P> const& m)$/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
mat	./glm/detail/type_mat2x2.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<2, 2, T, Q>::mat(mat<2, 3, T, Q> const& m)$/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
mat	./glm/detail/type_mat2x2.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<2, 2, T, Q>::mat(mat<2, 4, T, Q> const& m)$/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
mat	./glm/detail/type_mat2x2.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<2, 2, T, Q>::mat(mat<3, 2, T, Q> const& m)$/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
mat	./glm/detail/type_mat2x2.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<2, 2, T, Q>::mat(mat<3, 3, T, Q> const& m)$/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
mat	./glm/detail/type_mat2x2.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<2, 2, T, Q>::mat(mat<3, 4, T, Q> const& m)$/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
mat	./glm/detail/type_mat2x2.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<2, 2, T, Q>::mat(mat<4, 2, T, Q> const& m)$/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
mat	./glm/detail/type_mat2x2.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<2, 2, T, Q>::mat(mat<4, 3, T, Q> const& m)$/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
mat	./glm/detail/type_mat2x2.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<2, 2, T, Q>::mat(mat<4, 4, T, Q> const& m)$/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
mat	./glm/detail/type_mat2x2.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<2, 2, T, Q>::mat(vec<2, V1, Q> const& v1, vec<2, V2, Q> co/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
mat	./glm/detail/type_mat2x3.hpp	/^	struct mat<2, 3, T, Q>$/;"	s	namespace:glm
mat	./glm/detail/type_mat2x3.inl	/^		GLM_DEFAULTED_DEFAULT_CTOR_QUALIFIER GLM_CONSTEXPR mat<2, 3, T, Q>::mat()$/;"	f	class:glm::mat	typeref:typename:GLM_DEFAULTED_DEFAULT_CTOR_QUALIFIER GLM_CONSTEXPR
mat	./glm/detail/type_mat2x3.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR  mat<2, 3, T, Q>::mat(mat<3, 3, T, Q> const& m)$/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
mat	./glm/detail/type_mat2x3.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<2, 3, T, Q>::mat$/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
mat	./glm/detail/type_mat2x3.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<2, 3, T, Q>::mat(T scalar)$/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
mat	./glm/detail/type_mat2x3.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<2, 3, T, Q>::mat(col_type const& v0, col_type const& v1)$/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
mat	./glm/detail/type_mat2x3.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<2, 3, T, Q>::mat(mat<2, 2, T, Q> const& m)$/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
mat	./glm/detail/type_mat2x3.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<2, 3, T, Q>::mat(mat<2, 3, T, P> const& m)$/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
mat	./glm/detail/type_mat2x3.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<2, 3, T, Q>::mat(mat<2, 3, U, P> const& m)$/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
mat	./glm/detail/type_mat2x3.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<2, 3, T, Q>::mat(mat<2, 4, T, Q> const& m)$/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
mat	./glm/detail/type_mat2x3.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<2, 3, T, Q>::mat(mat<3, 2, T, Q> const& m)$/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
mat	./glm/detail/type_mat2x3.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<2, 3, T, Q>::mat(mat<3, 4, T, Q> const& m)$/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
mat	./glm/detail/type_mat2x3.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<2, 3, T, Q>::mat(mat<4, 2, T, Q> const& m)$/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
mat	./glm/detail/type_mat2x3.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<2, 3, T, Q>::mat(mat<4, 3, T, Q> const& m)$/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
mat	./glm/detail/type_mat2x3.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<2, 3, T, Q>::mat(mat<4, 4, T, Q> const& m)$/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
mat	./glm/detail/type_mat2x3.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<2, 3, T, Q>::mat(vec<3, V1, Q> const& v1, vec<3, V2, Q> co/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
mat	./glm/detail/type_mat2x4.hpp	/^	struct mat<2, 4, T, Q>$/;"	s	namespace:glm
mat	./glm/detail/type_mat2x4.inl	/^		GLM_DEFAULTED_DEFAULT_CTOR_QUALIFIER GLM_CONSTEXPR mat<2, 4, T, Q>::mat()$/;"	f	class:glm::mat	typeref:typename:GLM_DEFAULTED_DEFAULT_CTOR_QUALIFIER GLM_CONSTEXPR
mat	./glm/detail/type_mat2x4.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<2, 4, T, Q>::mat$/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
mat	./glm/detail/type_mat2x4.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<2, 4, T, Q>::mat(T s)$/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
mat	./glm/detail/type_mat2x4.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<2, 4, T, Q>::mat(col_type const& v0, col_type const& v1)$/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
mat	./glm/detail/type_mat2x4.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<2, 4, T, Q>::mat(mat<2, 2, T, Q> const& m)$/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
mat	./glm/detail/type_mat2x4.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<2, 4, T, Q>::mat(mat<2, 3, T, Q> const& m)$/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
mat	./glm/detail/type_mat2x4.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<2, 4, T, Q>::mat(mat<2, 4, T, P> const& m)$/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
mat	./glm/detail/type_mat2x4.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<2, 4, T, Q>::mat(mat<2, 4, U, P> const& m)$/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
mat	./glm/detail/type_mat2x4.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<2, 4, T, Q>::mat(mat<3, 2, T, Q> const& m)$/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
mat	./glm/detail/type_mat2x4.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<2, 4, T, Q>::mat(mat<3, 3, T, Q> const& m)$/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
mat	./glm/detail/type_mat2x4.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<2, 4, T, Q>::mat(mat<3, 4, T, Q> const& m)$/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
mat	./glm/detail/type_mat2x4.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<2, 4, T, Q>::mat(mat<4, 2, T, Q> const& m)$/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
mat	./glm/detail/type_mat2x4.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<2, 4, T, Q>::mat(mat<4, 3, T, Q> const& m)$/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
mat	./glm/detail/type_mat2x4.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<2, 4, T, Q>::mat(mat<4, 4, T, Q> const& m)$/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
mat	./glm/detail/type_mat2x4.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<2, 4, T, Q>::mat(vec<4, V1, Q> const& v1, vec<4, V2, Q> co/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
mat	./glm/detail/type_mat3x2.hpp	/^	struct mat<3, 2, T, Q>$/;"	s	namespace:glm
mat	./glm/detail/type_mat3x2.inl	/^		GLM_DEFAULTED_DEFAULT_CTOR_QUALIFIER GLM_CONSTEXPR mat<3, 2, T, Q>::mat()$/;"	f	class:glm::mat	typeref:typename:GLM_DEFAULTED_DEFAULT_CTOR_QUALIFIER GLM_CONSTEXPR
mat	./glm/detail/type_mat3x2.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<3, 2, T, Q>::mat$/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
mat	./glm/detail/type_mat3x2.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<3, 2, T, Q>::mat(T s)$/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
mat	./glm/detail/type_mat3x2.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<3, 2, T, Q>::mat(col_type const& v0, col_type const& v1, c/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
mat	./glm/detail/type_mat3x2.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<3, 2, T, Q>::mat(mat<2, 2, T, Q> const& m)$/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
mat	./glm/detail/type_mat3x2.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<3, 2, T, Q>::mat(mat<2, 3, T, Q> const& m)$/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
mat	./glm/detail/type_mat3x2.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<3, 2, T, Q>::mat(mat<2, 4, T, Q> const& m)$/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
mat	./glm/detail/type_mat3x2.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<3, 2, T, Q>::mat(mat<3, 2, T, P> const& m)$/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
mat	./glm/detail/type_mat3x2.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<3, 2, T, Q>::mat(mat<3, 2, U, P> const& m)$/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
mat	./glm/detail/type_mat3x2.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<3, 2, T, Q>::mat(mat<3, 3, T, Q> const& m)$/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
mat	./glm/detail/type_mat3x2.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<3, 2, T, Q>::mat(mat<3, 4, T, Q> const& m)$/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
mat	./glm/detail/type_mat3x2.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<3, 2, T, Q>::mat(mat<4, 2, T, Q> const& m)$/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
mat	./glm/detail/type_mat3x2.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<3, 2, T, Q>::mat(mat<4, 3, T, Q> const& m)$/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
mat	./glm/detail/type_mat3x2.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<3, 2, T, Q>::mat(mat<4, 4, T, Q> const& m)$/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
mat	./glm/detail/type_mat3x2.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<3, 2, T, Q>::mat(vec<2, V0, Q> const& v0, vec<2, V1, Q> co/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
mat	./glm/detail/type_mat3x3.hpp	/^	struct mat<3, 3, T, Q>$/;"	s	namespace:glm
mat	./glm/detail/type_mat3x3.inl	/^		GLM_DEFAULTED_DEFAULT_CTOR_QUALIFIER GLM_CONSTEXPR mat<3, 3, T, Q>::mat()$/;"	f	class:glm::mat	typeref:typename:GLM_DEFAULTED_DEFAULT_CTOR_QUALIFIER GLM_CONSTEXPR
mat	./glm/detail/type_mat3x3.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<3, 3, T, Q>::mat$/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
mat	./glm/detail/type_mat3x3.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<3, 3, T, Q>::mat(T s)$/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
mat	./glm/detail/type_mat3x3.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<3, 3, T, Q>::mat(col_type const& v0, col_type const& v1, c/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
mat	./glm/detail/type_mat3x3.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<3, 3, T, Q>::mat(mat<2, 2, T, Q> const& m)$/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
mat	./glm/detail/type_mat3x3.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<3, 3, T, Q>::mat(mat<2, 3, T, Q> const& m)$/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
mat	./glm/detail/type_mat3x3.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<3, 3, T, Q>::mat(mat<2, 4, T, Q> const& m)$/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
mat	./glm/detail/type_mat3x3.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<3, 3, T, Q>::mat(mat<3, 2, T, Q> const& m)$/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
mat	./glm/detail/type_mat3x3.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<3, 3, T, Q>::mat(mat<3, 3, T, P> const& m)$/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
mat	./glm/detail/type_mat3x3.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<3, 3, T, Q>::mat(mat<3, 3, U, P> const& m)$/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
mat	./glm/detail/type_mat3x3.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<3, 3, T, Q>::mat(mat<3, 4, T, Q> const& m)$/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
mat	./glm/detail/type_mat3x3.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<3, 3, T, Q>::mat(mat<4, 2, T, Q> const& m)$/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
mat	./glm/detail/type_mat3x3.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<3, 3, T, Q>::mat(mat<4, 3, T, Q> const& m)$/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
mat	./glm/detail/type_mat3x3.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<3, 3, T, Q>::mat(mat<4, 4, T, Q> const& m)$/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
mat	./glm/detail/type_mat3x3.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<3, 3, T, Q>::mat(vec<3, V1, Q> const& v1, vec<3, V2, Q> co/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
mat	./glm/detail/type_mat3x4.hpp	/^	struct mat<3, 4, T, Q>$/;"	s	namespace:glm
mat	./glm/detail/type_mat3x4.inl	/^		GLM_DEFAULTED_DEFAULT_CTOR_QUALIFIER GLM_CONSTEXPR mat<3, 4, T, Q>::mat()$/;"	f	class:glm::mat	typeref:typename:GLM_DEFAULTED_DEFAULT_CTOR_QUALIFIER GLM_CONSTEXPR
mat	./glm/detail/type_mat3x4.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<3, 4, T, Q>::mat$/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
mat	./glm/detail/type_mat3x4.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<3, 4, T, Q>::mat(T s)$/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
mat	./glm/detail/type_mat3x4.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<3, 4, T, Q>::mat(col_type const& v0, col_type const& v1, c/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
mat	./glm/detail/type_mat3x4.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<3, 4, T, Q>::mat(mat<2, 2, T, Q> const& m)$/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
mat	./glm/detail/type_mat3x4.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<3, 4, T, Q>::mat(mat<2, 3, T, Q> const& m)$/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
mat	./glm/detail/type_mat3x4.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<3, 4, T, Q>::mat(mat<2, 4, T, Q> const& m)$/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
mat	./glm/detail/type_mat3x4.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<3, 4, T, Q>::mat(mat<3, 2, T, Q> const& m)$/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
mat	./glm/detail/type_mat3x4.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<3, 4, T, Q>::mat(mat<3, 3, T, Q> const& m)$/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
mat	./glm/detail/type_mat3x4.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<3, 4, T, Q>::mat(mat<3, 4, T, P> const& m)$/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
mat	./glm/detail/type_mat3x4.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<3, 4, T, Q>::mat(mat<3, 4, U, P> const& m)$/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
mat	./glm/detail/type_mat3x4.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<3, 4, T, Q>::mat(mat<4, 2, T, Q> const& m)$/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
mat	./glm/detail/type_mat3x4.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<3, 4, T, Q>::mat(mat<4, 3, T, Q> const& m)$/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
mat	./glm/detail/type_mat3x4.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<3, 4, T, Q>::mat(mat<4, 4, T, Q> const& m)$/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
mat	./glm/detail/type_mat3x4.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<3, 4, T, Q>::mat(vec<4, V1, Q> const& v0, vec<4, V2, Q> co/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
mat	./glm/detail/type_mat4x2.hpp	/^	struct mat<4, 2, T, Q>$/;"	s	namespace:glm
mat	./glm/detail/type_mat4x2.inl	/^		GLM_DEFAULTED_DEFAULT_CTOR_QUALIFIER GLM_CONSTEXPR mat<4, 2, T, Q>::mat()$/;"	f	class:glm::mat	typeref:typename:GLM_DEFAULTED_DEFAULT_CTOR_QUALIFIER GLM_CONSTEXPR
mat	./glm/detail/type_mat4x2.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<4, 2, T, Q>::mat$/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
mat	./glm/detail/type_mat4x2.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<4, 2, T, Q>::mat(T s)$/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
mat	./glm/detail/type_mat4x2.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<4, 2, T, Q>::mat(col_type const& v0, col_type const& v1, c/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
mat	./glm/detail/type_mat4x2.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<4, 2, T, Q>::mat(mat<2, 2, T, Q> const& m)$/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
mat	./glm/detail/type_mat4x2.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<4, 2, T, Q>::mat(mat<2, 3, T, Q> const& m)$/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
mat	./glm/detail/type_mat4x2.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<4, 2, T, Q>::mat(mat<2, 4, T, Q> const& m)$/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
mat	./glm/detail/type_mat4x2.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<4, 2, T, Q>::mat(mat<3, 2, T, Q> const& m)$/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
mat	./glm/detail/type_mat4x2.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<4, 2, T, Q>::mat(mat<3, 3, T, Q> const& m)$/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
mat	./glm/detail/type_mat4x2.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<4, 2, T, Q>::mat(mat<3, 4, T, Q> const& m)$/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
mat	./glm/detail/type_mat4x2.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<4, 2, T, Q>::mat(mat<4, 2, T, P> const& m)$/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
mat	./glm/detail/type_mat4x2.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<4, 2, T, Q>::mat(mat<4, 2, U, P> const& m)$/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
mat	./glm/detail/type_mat4x2.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<4, 2, T, Q>::mat(mat<4, 3, T, Q> const& m)$/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
mat	./glm/detail/type_mat4x2.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<4, 2, T, Q>::mat(mat<4, 4, T, Q> const& m)$/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
mat	./glm/detail/type_mat4x2.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<4, 2, T, Q>::mat(vec<2, V0, Q> const& v0, vec<2, V1, Q> co/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
mat	./glm/detail/type_mat4x3.hpp	/^	struct mat<4, 3, T, Q>$/;"	s	namespace:glm
mat	./glm/detail/type_mat4x3.inl	/^		GLM_DEFAULTED_DEFAULT_CTOR_QUALIFIER GLM_CONSTEXPR mat<4, 3, T, Q>::mat()$/;"	f	class:glm::mat	typeref:typename:GLM_DEFAULTED_DEFAULT_CTOR_QUALIFIER GLM_CONSTEXPR
mat	./glm/detail/type_mat4x3.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<4, 3, T, Q>::mat$/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
mat	./glm/detail/type_mat4x3.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<4, 3, T, Q>::mat(T s)$/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
mat	./glm/detail/type_mat4x3.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<4, 3, T, Q>::mat(col_type const& v0, col_type const& v1, c/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
mat	./glm/detail/type_mat4x3.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<4, 3, T, Q>::mat(mat<2, 2, T, Q> const& m)$/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
mat	./glm/detail/type_mat4x3.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<4, 3, T, Q>::mat(mat<2, 3, T, Q> const& m)$/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
mat	./glm/detail/type_mat4x3.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<4, 3, T, Q>::mat(mat<2, 4, T, Q> const& m)$/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
mat	./glm/detail/type_mat4x3.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<4, 3, T, Q>::mat(mat<3, 2, T, Q> const& m)$/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
mat	./glm/detail/type_mat4x3.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<4, 3, T, Q>::mat(mat<3, 3, T, Q> const& m)$/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
mat	./glm/detail/type_mat4x3.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<4, 3, T, Q>::mat(mat<3, 4, T, Q> const& m)$/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
mat	./glm/detail/type_mat4x3.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<4, 3, T, Q>::mat(mat<4, 2, T, Q> const& m)$/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
mat	./glm/detail/type_mat4x3.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<4, 3, T, Q>::mat(mat<4, 3, T, P> const& m)$/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
mat	./glm/detail/type_mat4x3.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<4, 3, T, Q>::mat(mat<4, 3, U, P> const& m)$/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
mat	./glm/detail/type_mat4x3.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<4, 3, T, Q>::mat(mat<4, 4, T, Q> const& m)$/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
mat	./glm/detail/type_mat4x3.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<4, 3, T, Q>::mat(vec<3, V1, Q> const& v1, vec<3, V2, Q> co/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
mat	./glm/detail/type_mat4x4.hpp	/^	struct mat<4, 4, T, Q>$/;"	s	namespace:glm
mat	./glm/detail/type_mat4x4.inl	/^		GLM_DEFAULTED_DEFAULT_CTOR_QUALIFIER GLM_CONSTEXPR mat<4, 4, T, Q>::mat()$/;"	f	class:glm::mat	typeref:typename:GLM_DEFAULTED_DEFAULT_CTOR_QUALIFIER GLM_CONSTEXPR
mat	./glm/detail/type_mat4x4.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<4, 4, T, Q>::mat$/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
mat	./glm/detail/type_mat4x4.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<4, 4, T, Q>::mat(T s)$/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
mat	./glm/detail/type_mat4x4.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<4, 4, T, Q>::mat(col_type const& v0, col_type const& v1, c/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
mat	./glm/detail/type_mat4x4.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<4, 4, T, Q>::mat(mat<2, 2, T, Q> const& m)$/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
mat	./glm/detail/type_mat4x4.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<4, 4, T, Q>::mat(mat<2, 3, T, Q> const& m)$/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
mat	./glm/detail/type_mat4x4.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<4, 4, T, Q>::mat(mat<2, 4, T, Q> const& m)$/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
mat	./glm/detail/type_mat4x4.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<4, 4, T, Q>::mat(mat<3, 2, T, Q> const& m)$/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
mat	./glm/detail/type_mat4x4.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<4, 4, T, Q>::mat(mat<3, 3, T, Q> const& m)$/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
mat	./glm/detail/type_mat4x4.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<4, 4, T, Q>::mat(mat<3, 4, T, Q> const& m)$/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
mat	./glm/detail/type_mat4x4.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<4, 4, T, Q>::mat(mat<4, 2, T, Q> const& m)$/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
mat	./glm/detail/type_mat4x4.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<4, 4, T, Q>::mat(mat<4, 3, T, Q> const& m)$/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
mat	./glm/detail/type_mat4x4.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<4, 4, T, Q>::mat(mat<4, 4, T, P> const& m)$/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
mat	./glm/detail/type_mat4x4.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<4, 4, T, Q>::mat(mat<4, 4, U, P> const& m)$/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
mat	./glm/detail/type_mat4x4.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<4, 4, T, Q>::mat(vec<4, V1, Q> const& v1, vec<4, V2, Q> co/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
mat2	./glm/ext/matrix_float2x2.hpp	/^	typedef mat<2, 2, float, defaultp>		mat2;$/;"	t	namespace:glm	typeref:typename:mat<2,2,float,defaultp>
mat2	./glm/fwd.hpp	/^	typedef mat<2, 2, f32, defaultp>	mat2;$/;"	t	namespace:glm	typeref:typename:mat<2,2,f32,defaultp>
mat2x2	./glm/ext/matrix_float2x2.hpp	/^	typedef mat<2, 2, float, defaultp>		mat2x2;$/;"	t	namespace:glm	typeref:typename:mat<2,2,float,defaultp>
mat2x2	./glm/fwd.hpp	/^	typedef mat<2, 2, f32, defaultp>	mat2x2;$/;"	t	namespace:glm	typeref:typename:mat<2,2,f32,defaultp>
mat2x3	./glm/ext/matrix_float2x3.hpp	/^	typedef mat<2, 3, float, defaultp>		mat2x3;$/;"	t	namespace:glm	typeref:typename:mat<2,3,float,defaultp>
mat2x3	./glm/fwd.hpp	/^	typedef mat<2, 3, f32, defaultp>	mat2x3;$/;"	t	namespace:glm	typeref:typename:mat<2,3,f32,defaultp>
mat2x4	./glm/ext/matrix_float2x4.hpp	/^	typedef mat<2, 4, float, defaultp>		mat2x4;$/;"	t	namespace:glm	typeref:typename:mat<2,4,float,defaultp>
mat2x4	./glm/fwd.hpp	/^	typedef mat<2, 4, f32, defaultp>	mat2x4;$/;"	t	namespace:glm	typeref:typename:mat<2,4,f32,defaultp>
mat2x4_cast	./glm/gtx/dual_quaternion.inl	/^	GLM_FUNC_QUALIFIER mat<2, 4, T, Q> mat2x4_cast(tdualquat<T, Q> const& x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER mat<2,4,T,Q>
mat3	./glm/ext/matrix_float3x3.hpp	/^	typedef mat<3, 3, float, defaultp>			mat3;$/;"	t	namespace:glm	typeref:typename:mat<3,3,float,defaultp>
mat3	./glm/fwd.hpp	/^	typedef mat<3, 3, f32, defaultp>	mat3;$/;"	t	namespace:glm	typeref:typename:mat<3,3,f32,defaultp>
mat3_cast	./glm/gtc/quaternion.inl	/^	GLM_FUNC_QUALIFIER mat<3, 3, T, Q> mat3_cast(qua<T, Q> const& q)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER mat<3,3,T,Q>
mat3x2	./glm/ext/matrix_float3x2.hpp	/^	typedef mat<3, 2, float, defaultp>			mat3x2;$/;"	t	namespace:glm	typeref:typename:mat<3,2,float,defaultp>
mat3x2	./glm/fwd.hpp	/^	typedef mat<3, 2, f32, defaultp>	mat3x2;$/;"	t	namespace:glm	typeref:typename:mat<3,2,f32,defaultp>
mat3x3	./glm/ext/matrix_float3x3.hpp	/^	typedef mat<3, 3, float, defaultp>			mat3x3;$/;"	t	namespace:glm	typeref:typename:mat<3,3,float,defaultp>
mat3x3	./glm/fwd.hpp	/^	typedef mat<3, 3, f32, defaultp>	mat3x3;$/;"	t	namespace:glm	typeref:typename:mat<3,3,f32,defaultp>
mat3x4	./glm/ext/matrix_float3x4.hpp	/^	typedef mat<3, 4, float, defaultp>			mat3x4;$/;"	t	namespace:glm	typeref:typename:mat<3,4,float,defaultp>
mat3x4	./glm/fwd.hpp	/^	typedef mat<3, 4, f32, defaultp>	mat3x4;$/;"	t	namespace:glm	typeref:typename:mat<3,4,f32,defaultp>
mat3x4_cast	./glm/gtx/dual_quaternion.inl	/^	GLM_FUNC_QUALIFIER mat<3, 4, T, Q> mat3x4_cast(tdualquat<T, Q> const& x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER mat<3,4,T,Q>
mat4	./glm/ext/matrix_float4x4.hpp	/^	typedef mat<4, 4, float, defaultp>			mat4;$/;"	t	namespace:glm	typeref:typename:mat<4,4,float,defaultp>
mat4	./glm/fwd.hpp	/^	typedef mat<4, 4, f32, defaultp>	mat4;$/;"	t	namespace:glm	typeref:typename:mat<4,4,f32,defaultp>
mat4_cast	./glm/gtc/quaternion.inl	/^	GLM_FUNC_QUALIFIER mat<4, 4, T, Q> mat4_cast(qua<T, Q> const& q)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER mat<4,4,T,Q>
mat4x2	./glm/ext/matrix_float4x2.hpp	/^	typedef mat<4, 2, float, defaultp>			mat4x2;$/;"	t	namespace:glm	typeref:typename:mat<4,2,float,defaultp>
mat4x2	./glm/fwd.hpp	/^	typedef mat<4, 2, f32, defaultp>	mat4x2;$/;"	t	namespace:glm	typeref:typename:mat<4,2,f32,defaultp>
mat4x3	./glm/ext/matrix_float4x3.hpp	/^	typedef mat<4, 3, float, defaultp>			mat4x3;$/;"	t	namespace:glm	typeref:typename:mat<4,3,float,defaultp>
mat4x3	./glm/fwd.hpp	/^	typedef mat<4, 3, f32, defaultp>	mat4x3;$/;"	t	namespace:glm	typeref:typename:mat<4,3,f32,defaultp>
mat4x4	./glm/ext/matrix_float4x4.hpp	/^	typedef mat<4, 4, float, defaultp>			mat4x4;$/;"	t	namespace:glm	typeref:typename:mat<4,4,float,defaultp>
mat4x4	./glm/fwd.hpp	/^	typedef mat<4, 4, f32, defaultp>	mat4x4;$/;"	t	namespace:glm	typeref:typename:mat<4,4,f32,defaultp>
matrixCompMult	./glm/detail/func_matrix.inl	/^	GLM_FUNC_QUALIFIER mat<C, R, T, Q> matrixCompMult(mat<C, R, T, Q> const& x, mat<C, R, T, Q> con/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER mat<C,R,T,Q>
matrixCross3	./glm/gtx/matrix_cross_product.inl	/^	GLM_FUNC_QUALIFIER mat<3, 3, T, Q> matrixCross3$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER mat<3,3,T,Q>
matrixCross4	./glm/gtx/matrix_cross_product.inl	/^	GLM_FUNC_QUALIFIER mat<4, 4, T, Q> matrixCross4$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER mat<4,4,T,Q>
matrix_functor_1	./glm/ext/_matrix_vectorize.hpp	/^		struct matrix_functor_1 {$/;"	s	namespace:glm::detail
matrix_functor_1	./glm/ext/_matrix_vectorize.hpp	/^		struct matrix_functor_1<mat, 2, 2, Ret, T, Q> {$/;"	s	namespace:glm::detail
matrix_functor_1	./glm/ext/_matrix_vectorize.hpp	/^		struct matrix_functor_1<mat, 2, 3, Ret, T, Q> {$/;"	s	namespace:glm::detail
matrix_functor_1	./glm/ext/_matrix_vectorize.hpp	/^		struct matrix_functor_1<mat, 2, 4, Ret, T, Q> {$/;"	s	namespace:glm::detail
matrix_functor_1	./glm/ext/_matrix_vectorize.hpp	/^		struct matrix_functor_1<mat, 3, 2, Ret, T, Q> {$/;"	s	namespace:glm::detail
matrix_functor_1	./glm/ext/_matrix_vectorize.hpp	/^		struct matrix_functor_1<mat, 3, 3, Ret, T, Q> {$/;"	s	namespace:glm::detail
matrix_functor_1	./glm/ext/_matrix_vectorize.hpp	/^		struct matrix_functor_1<mat, 3, 4, Ret, T, Q> {$/;"	s	namespace:glm::detail
matrix_functor_1	./glm/ext/_matrix_vectorize.hpp	/^		struct matrix_functor_1<mat, 4, 2, Ret, T, Q> {$/;"	s	namespace:glm::detail
matrix_functor_1	./glm/ext/_matrix_vectorize.hpp	/^		struct matrix_functor_1<mat, 4, 3, Ret, T, Q> {$/;"	s	namespace:glm::detail
matrix_functor_1	./glm/ext/_matrix_vectorize.hpp	/^		struct matrix_functor_1<mat, 4, 4, Ret, T, Q> {$/;"	s	namespace:glm::detail
max	./glm/detail/func_common.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR genType max(genType x, genType y)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR genType
max	./glm/detail/func_common.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<L, T, Q> max(vec<L, T, Q> const& a, T b)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<L,T,Q>
max	./glm/detail/func_common.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<L, T, Q> max(vec<L, T, Q> const& a, vec<L, T, Q> const& b)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<L,T,Q>
max	./glm/ext/scalar_common.inl	/^	GLM_FUNC_QUALIFIER T max(T a, T b, T c)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER T
max	./glm/ext/scalar_common.inl	/^	GLM_FUNC_QUALIFIER T max(T a, T b, T c, T d)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER T
max	./glm/ext/vector_common.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<L, T, Q> max(vec<L, T, Q> const& x, vec<L, T, Q> const& y,/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<L,T,Q>
max	./glm/gtx/extended_min_max.inl	/^	GLM_FUNC_QUALIFIER C<T> max$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER C<T>
max	./glm/gtx/extended_min_max.inl	/^	GLM_FUNC_QUALIFIER T max$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER T
max	./glm/gtx/extended_min_max.inl	/^	GLM_FUNC_QUALIFIER T max($/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER T
maxHeight	./GL/glxew.h	/^  int maxHeight; $/;"	m	struct:__anonb1a929810308	typeref:typename:int
maxWidth	./GL/glxew.h	/^  int maxWidth; $/;"	m	struct:__anonb1a929810308	typeref:typename:int
mediump	./glm/detail/qualifier.hpp	/^		mediump = packed_mediump, \/\/\/< By default mediump qualifier is also packed$/;"	e	enum:glm::qualifier
mediump_bvec1	./glm/ext/vector_bool1_precision.hpp	/^	typedef vec<1, bool, mediump>		mediump_bvec1;$/;"	t	namespace:glm	typeref:typename:vec<1,bool,mediump>
mediump_bvec1	./glm/fwd.hpp	/^	typedef vec<1, bool, mediump>	mediump_bvec1;$/;"	t	namespace:glm	typeref:typename:vec<1,bool,mediump>
mediump_bvec2	./glm/ext/vector_bool2_precision.hpp	/^	typedef vec<2, bool, mediump>	mediump_bvec2;$/;"	t	namespace:glm	typeref:typename:vec<2,bool,mediump>
mediump_bvec2	./glm/fwd.hpp	/^	typedef vec<2, bool, mediump>	mediump_bvec2;$/;"	t	namespace:glm	typeref:typename:vec<2,bool,mediump>
mediump_bvec3	./glm/ext/vector_bool3_precision.hpp	/^	typedef vec<3, bool, mediump>	mediump_bvec3;$/;"	t	namespace:glm	typeref:typename:vec<3,bool,mediump>
mediump_bvec3	./glm/fwd.hpp	/^	typedef vec<3, bool, mediump>	mediump_bvec3;$/;"	t	namespace:glm	typeref:typename:vec<3,bool,mediump>
mediump_bvec4	./glm/ext/vector_bool4_precision.hpp	/^	typedef vec<4, bool, mediump>	mediump_bvec4;$/;"	t	namespace:glm	typeref:typename:vec<4,bool,mediump>
mediump_bvec4	./glm/fwd.hpp	/^	typedef vec<4, bool, mediump>	mediump_bvec4;$/;"	t	namespace:glm	typeref:typename:vec<4,bool,mediump>
mediump_ddualquat	./glm/gtx/dual_quaternion.hpp	/^	typedef tdualquat<double, mediump>	mediump_ddualquat;$/;"	t	namespace:glm	typeref:typename:tdualquat<double,mediump>
mediump_dmat2	./glm/ext/matrix_double2x2_precision.hpp	/^	typedef mat<2, 2, double, mediump>	mediump_dmat2;$/;"	t	namespace:glm	typeref:typename:mat<2,2,double,mediump>
mediump_dmat2	./glm/fwd.hpp	/^	typedef mat<2, 2, f64, mediump>		mediump_dmat2;$/;"	t	namespace:glm	typeref:typename:mat<2,2,f64,mediump>
mediump_dmat2x2	./glm/ext/matrix_double2x2_precision.hpp	/^	typedef mat<2, 2, double, mediump>	mediump_dmat2x2;$/;"	t	namespace:glm	typeref:typename:mat<2,2,double,mediump>
mediump_dmat2x2	./glm/fwd.hpp	/^	typedef mat<2, 2, double, mediump>	mediump_dmat2x2;$/;"	t	namespace:glm	typeref:typename:mat<2,2,double,mediump>
mediump_dmat2x3	./glm/ext/matrix_double2x3_precision.hpp	/^	typedef mat<2, 3, double, mediump>	mediump_dmat2x3;$/;"	t	namespace:glm	typeref:typename:mat<2,3,double,mediump>
mediump_dmat2x3	./glm/fwd.hpp	/^	typedef mat<2, 3, double, mediump>	mediump_dmat2x3;$/;"	t	namespace:glm	typeref:typename:mat<2,3,double,mediump>
mediump_dmat2x4	./glm/ext/matrix_double2x4_precision.hpp	/^	typedef mat<2, 4, double, mediump>	mediump_dmat2x4;$/;"	t	namespace:glm	typeref:typename:mat<2,4,double,mediump>
mediump_dmat2x4	./glm/fwd.hpp	/^	typedef mat<2, 4, double, mediump>	mediump_dmat2x4;$/;"	t	namespace:glm	typeref:typename:mat<2,4,double,mediump>
mediump_dmat3	./glm/ext/matrix_double3x3_precision.hpp	/^	typedef mat<3, 3, double, mediump>	mediump_dmat3;$/;"	t	namespace:glm	typeref:typename:mat<3,3,double,mediump>
mediump_dmat3	./glm/fwd.hpp	/^	typedef mat<3, 3, f64, mediump>		mediump_dmat3;$/;"	t	namespace:glm	typeref:typename:mat<3,3,f64,mediump>
mediump_dmat3x2	./glm/ext/matrix_double3x2_precision.hpp	/^	typedef mat<3, 2, double, mediump>	mediump_dmat3x2;$/;"	t	namespace:glm	typeref:typename:mat<3,2,double,mediump>
mediump_dmat3x2	./glm/fwd.hpp	/^	typedef mat<3, 2, double, mediump>	mediump_dmat3x2;$/;"	t	namespace:glm	typeref:typename:mat<3,2,double,mediump>
mediump_dmat3x3	./glm/ext/matrix_double3x3_precision.hpp	/^	typedef mat<3, 3, double, mediump>	mediump_dmat3x3;$/;"	t	namespace:glm	typeref:typename:mat<3,3,double,mediump>
mediump_dmat3x3	./glm/fwd.hpp	/^	typedef mat<3, 3, double, mediump>	mediump_dmat3x3;$/;"	t	namespace:glm	typeref:typename:mat<3,3,double,mediump>
mediump_dmat3x4	./glm/ext/matrix_double3x4_precision.hpp	/^	typedef mat<3, 4, double, mediump>	mediump_dmat3x4;$/;"	t	namespace:glm	typeref:typename:mat<3,4,double,mediump>
mediump_dmat3x4	./glm/fwd.hpp	/^	typedef mat<3, 4, double, mediump>	mediump_dmat3x4;$/;"	t	namespace:glm	typeref:typename:mat<3,4,double,mediump>
mediump_dmat4	./glm/ext/matrix_double4x4_precision.hpp	/^	typedef mat<4, 4, double, mediump>	mediump_dmat4;$/;"	t	namespace:glm	typeref:typename:mat<4,4,double,mediump>
mediump_dmat4	./glm/fwd.hpp	/^	typedef mat<4, 4, f64, mediump>		mediump_dmat4;$/;"	t	namespace:glm	typeref:typename:mat<4,4,f64,mediump>
mediump_dmat4x2	./glm/ext/matrix_double4x2_precision.hpp	/^	typedef mat<4, 2, double, mediump>	mediump_dmat4x2;$/;"	t	namespace:glm	typeref:typename:mat<4,2,double,mediump>
mediump_dmat4x2	./glm/fwd.hpp	/^	typedef mat<4, 2, double, mediump>	mediump_dmat4x2;$/;"	t	namespace:glm	typeref:typename:mat<4,2,double,mediump>
mediump_dmat4x3	./glm/ext/matrix_double4x3_precision.hpp	/^	typedef mat<4, 3, double, mediump>	mediump_dmat4x3;$/;"	t	namespace:glm	typeref:typename:mat<4,3,double,mediump>
mediump_dmat4x3	./glm/fwd.hpp	/^	typedef mat<4, 3, double, mediump>	mediump_dmat4x3;$/;"	t	namespace:glm	typeref:typename:mat<4,3,double,mediump>
mediump_dmat4x4	./glm/ext/matrix_double4x4_precision.hpp	/^	typedef mat<4, 4, double, mediump>	mediump_dmat4x4;$/;"	t	namespace:glm	typeref:typename:mat<4,4,double,mediump>
mediump_dmat4x4	./glm/fwd.hpp	/^	typedef mat<4, 4, double, mediump>	mediump_dmat4x4;$/;"	t	namespace:glm	typeref:typename:mat<4,4,double,mediump>
mediump_dquat	./glm/ext/quaternion_double_precision.hpp	/^	typedef qua<double, mediump>	mediump_dquat;$/;"	t	namespace:glm	typeref:typename:qua<double,mediump>
mediump_dquat	./glm/fwd.hpp	/^	typedef qua<double, mediump>		mediump_dquat;$/;"	t	namespace:glm	typeref:typename:qua<double,mediump>
mediump_dualquat	./glm/gtx/dual_quaternion.hpp	/^	typedef tdualquat<float, mediump>	mediump_dualquat;$/;"	t	namespace:glm	typeref:typename:tdualquat<float,mediump>
mediump_dvec1	./glm/ext/vector_double1_precision.hpp	/^	typedef vec<1, double, mediump>		mediump_dvec1;$/;"	t	namespace:glm	typeref:typename:vec<1,double,mediump>
mediump_dvec1	./glm/fwd.hpp	/^	typedef vec<1, f64, mediump>		mediump_dvec1;$/;"	t	namespace:glm	typeref:typename:vec<1,f64,mediump>
mediump_dvec2	./glm/ext/vector_double2_precision.hpp	/^	typedef vec<2, double, mediump>		mediump_dvec2;$/;"	t	namespace:glm	typeref:typename:vec<2,double,mediump>
mediump_dvec2	./glm/fwd.hpp	/^	typedef vec<2, f64, mediump>		mediump_dvec2;$/;"	t	namespace:glm	typeref:typename:vec<2,f64,mediump>
mediump_dvec3	./glm/ext/vector_double3_precision.hpp	/^	typedef vec<3, double, mediump>		mediump_dvec3;$/;"	t	namespace:glm	typeref:typename:vec<3,double,mediump>
mediump_dvec3	./glm/fwd.hpp	/^	typedef vec<3, f64, mediump>		mediump_dvec3;$/;"	t	namespace:glm	typeref:typename:vec<3,f64,mediump>
mediump_dvec4	./glm/ext/vector_double4_precision.hpp	/^	typedef vec<4, double, mediump>		mediump_dvec4;$/;"	t	namespace:glm	typeref:typename:vec<4,double,mediump>
mediump_dvec4	./glm/fwd.hpp	/^	typedef vec<4, f64, mediump>		mediump_dvec4;$/;"	t	namespace:glm	typeref:typename:vec<4,f64,mediump>
mediump_f32	./glm/fwd.hpp	/^	typedef float					mediump_f32;$/;"	t	namespace:glm	typeref:typename:float
mediump_f32	./glm/gtc/type_precision.hpp	/^	typedef float32 mediump_f32;$/;"	t	namespace:glm	typeref:typename:float32
mediump_f32mat2	./glm/fwd.hpp	/^	typedef mat<2, 2, f32, mediump>		mediump_f32mat2;$/;"	t	namespace:glm	typeref:typename:mat<2,2,f32,mediump>
mediump_f32mat2	./glm/gtc/type_precision.hpp	/^	typedef mediump_f32mat2x2 mediump_f32mat2;$/;"	t	namespace:glm	typeref:typename:mediump_f32mat2x2
mediump_f32mat2x2	./glm/fwd.hpp	/^	typedef mat<2, 2, f32, mediump>		mediump_f32mat2x2;$/;"	t	namespace:glm	typeref:typename:mat<2,2,f32,mediump>
mediump_f32mat2x2	./glm/gtc/type_precision.hpp	/^	typedef mat<2, 2, f32, mediump> mediump_f32mat2x2;$/;"	t	namespace:glm	typeref:typename:mat<2,2,f32,mediump>
mediump_f32mat2x3	./glm/fwd.hpp	/^	typedef mat<2, 3, f32, mediump>		mediump_f32mat2x3;$/;"	t	namespace:glm	typeref:typename:mat<2,3,f32,mediump>
mediump_f32mat2x3	./glm/gtc/type_precision.hpp	/^	typedef mat<2, 3, f32, mediump> mediump_f32mat2x3;$/;"	t	namespace:glm	typeref:typename:mat<2,3,f32,mediump>
mediump_f32mat2x4	./glm/fwd.hpp	/^	typedef mat<2, 4, f32, mediump>		mediump_f32mat2x4;$/;"	t	namespace:glm	typeref:typename:mat<2,4,f32,mediump>
mediump_f32mat2x4	./glm/gtc/type_precision.hpp	/^	typedef mat<2, 4, f32, mediump> mediump_f32mat2x4;$/;"	t	namespace:glm	typeref:typename:mat<2,4,f32,mediump>
mediump_f32mat3	./glm/fwd.hpp	/^	typedef mat<3, 3, f32, mediump>		mediump_f32mat3;$/;"	t	namespace:glm	typeref:typename:mat<3,3,f32,mediump>
mediump_f32mat3	./glm/gtc/type_precision.hpp	/^	typedef mediump_f32mat3x3 mediump_f32mat3;$/;"	t	namespace:glm	typeref:typename:mediump_f32mat3x3
mediump_f32mat3x2	./glm/fwd.hpp	/^	typedef mat<3, 2, f32, mediump>		mediump_f32mat3x2;$/;"	t	namespace:glm	typeref:typename:mat<3,2,f32,mediump>
mediump_f32mat3x2	./glm/gtc/type_precision.hpp	/^	typedef mat<3, 2, f32, mediump> mediump_f32mat3x2;$/;"	t	namespace:glm	typeref:typename:mat<3,2,f32,mediump>
mediump_f32mat3x3	./glm/fwd.hpp	/^	typedef mat<3, 3, f32, mediump>		mediump_f32mat3x3;$/;"	t	namespace:glm	typeref:typename:mat<3,3,f32,mediump>
mediump_f32mat3x3	./glm/gtc/type_precision.hpp	/^	typedef mat<3, 3, f32, mediump> mediump_f32mat3x3;$/;"	t	namespace:glm	typeref:typename:mat<3,3,f32,mediump>
mediump_f32mat3x4	./glm/fwd.hpp	/^	typedef mat<3, 4, f32, mediump>		mediump_f32mat3x4;$/;"	t	namespace:glm	typeref:typename:mat<3,4,f32,mediump>
mediump_f32mat3x4	./glm/gtc/type_precision.hpp	/^	typedef mat<3, 4, f32, mediump> mediump_f32mat3x4;$/;"	t	namespace:glm	typeref:typename:mat<3,4,f32,mediump>
mediump_f32mat4	./glm/fwd.hpp	/^	typedef mat<4, 4, f32, mediump>		mediump_f32mat4;$/;"	t	namespace:glm	typeref:typename:mat<4,4,f32,mediump>
mediump_f32mat4	./glm/gtc/type_precision.hpp	/^	typedef mediump_f32mat4x4 mediump_f32mat4;$/;"	t	namespace:glm	typeref:typename:mediump_f32mat4x4
mediump_f32mat4x2	./glm/fwd.hpp	/^	typedef mat<4, 2, f32, mediump>		mediump_f32mat4x2;$/;"	t	namespace:glm	typeref:typename:mat<4,2,f32,mediump>
mediump_f32mat4x2	./glm/gtc/type_precision.hpp	/^	typedef mat<4, 2, f32, mediump> mediump_f32mat4x2;$/;"	t	namespace:glm	typeref:typename:mat<4,2,f32,mediump>
mediump_f32mat4x3	./glm/fwd.hpp	/^	typedef mat<4, 3, f32, mediump>		mediump_f32mat4x3;$/;"	t	namespace:glm	typeref:typename:mat<4,3,f32,mediump>
mediump_f32mat4x3	./glm/gtc/type_precision.hpp	/^	typedef mat<4, 3, f32, mediump> mediump_f32mat4x3;$/;"	t	namespace:glm	typeref:typename:mat<4,3,f32,mediump>
mediump_f32mat4x4	./glm/fwd.hpp	/^	typedef mat<4, 4, f32, mediump>		mediump_f32mat4x4;$/;"	t	namespace:glm	typeref:typename:mat<4,4,f32,mediump>
mediump_f32mat4x4	./glm/gtc/type_precision.hpp	/^	typedef mat<4, 4, f32, mediump> mediump_f32mat4x4;$/;"	t	namespace:glm	typeref:typename:mat<4,4,f32,mediump>
mediump_f32quat	./glm/fwd.hpp	/^	typedef qua<f32, mediump>			mediump_f32quat;$/;"	t	namespace:glm	typeref:typename:qua<f32,mediump>
mediump_f32quat	./glm/gtc/type_precision.hpp	/^	typedef qua<f32, mediump> mediump_f32quat;$/;"	t	namespace:glm	typeref:typename:qua<f32,mediump>
mediump_f32vec1	./glm/fwd.hpp	/^	typedef vec<1, f32, mediump>		mediump_f32vec1;$/;"	t	namespace:glm	typeref:typename:vec<1,f32,mediump>
mediump_f32vec1	./glm/gtc/type_precision.hpp	/^	typedef vec<1, f32, mediump> mediump_f32vec1;$/;"	t	namespace:glm	typeref:typename:vec<1,f32,mediump>
mediump_f32vec2	./glm/fwd.hpp	/^	typedef vec<2, f32, mediump>		mediump_f32vec2;$/;"	t	namespace:glm	typeref:typename:vec<2,f32,mediump>
mediump_f32vec2	./glm/gtc/type_precision.hpp	/^	typedef vec<2, f32, mediump> mediump_f32vec2;$/;"	t	namespace:glm	typeref:typename:vec<2,f32,mediump>
mediump_f32vec3	./glm/fwd.hpp	/^	typedef vec<3, f32, mediump>		mediump_f32vec3;$/;"	t	namespace:glm	typeref:typename:vec<3,f32,mediump>
mediump_f32vec3	./glm/gtc/type_precision.hpp	/^	typedef vec<3, f32, mediump> mediump_f32vec3;$/;"	t	namespace:glm	typeref:typename:vec<3,f32,mediump>
mediump_f32vec4	./glm/fwd.hpp	/^	typedef vec<4, f32, mediump>		mediump_f32vec4;$/;"	t	namespace:glm	typeref:typename:vec<4,f32,mediump>
mediump_f32vec4	./glm/gtc/type_precision.hpp	/^	typedef vec<4, f32, mediump> mediump_f32vec4;$/;"	t	namespace:glm	typeref:typename:vec<4,f32,mediump>
mediump_f64	./glm/fwd.hpp	/^	typedef double					mediump_f64;$/;"	t	namespace:glm	typeref:typename:double
mediump_f64	./glm/gtc/type_precision.hpp	/^	typedef float64 mediump_f64;$/;"	t	namespace:glm	typeref:typename:float64
mediump_f64mat2	./glm/fwd.hpp	/^	typedef mat<2, 2, f64, mediump>		mediump_f64mat2;$/;"	t	namespace:glm	typeref:typename:mat<2,2,f64,mediump>
mediump_f64mat2	./glm/gtc/type_precision.hpp	/^	typedef mediump_f64mat2x2 mediump_f64mat2;$/;"	t	namespace:glm	typeref:typename:mediump_f64mat2x2
mediump_f64mat2x2	./glm/fwd.hpp	/^	typedef mat<2, 2, f64, mediump>		mediump_f64mat2x2;$/;"	t	namespace:glm	typeref:typename:mat<2,2,f64,mediump>
mediump_f64mat2x2	./glm/gtc/type_precision.hpp	/^	typedef mat<2, 2, f64, mediump> mediump_f64mat2x2;$/;"	t	namespace:glm	typeref:typename:mat<2,2,f64,mediump>
mediump_f64mat2x3	./glm/fwd.hpp	/^	typedef mat<2, 3, f64, mediump>		mediump_f64mat2x3;$/;"	t	namespace:glm	typeref:typename:mat<2,3,f64,mediump>
mediump_f64mat2x3	./glm/gtc/type_precision.hpp	/^	typedef mat<2, 3, f64, mediump> mediump_f64mat2x3;$/;"	t	namespace:glm	typeref:typename:mat<2,3,f64,mediump>
mediump_f64mat2x4	./glm/fwd.hpp	/^	typedef mat<2, 4, f64, mediump>		mediump_f64mat2x4;$/;"	t	namespace:glm	typeref:typename:mat<2,4,f64,mediump>
mediump_f64mat2x4	./glm/gtc/type_precision.hpp	/^	typedef mat<2, 4, f64, mediump> mediump_f64mat2x4;$/;"	t	namespace:glm	typeref:typename:mat<2,4,f64,mediump>
mediump_f64mat3	./glm/fwd.hpp	/^	typedef mat<3, 3, f64, mediump>		mediump_f64mat3;$/;"	t	namespace:glm	typeref:typename:mat<3,3,f64,mediump>
mediump_f64mat3	./glm/gtc/type_precision.hpp	/^	typedef mediump_f64mat3x3 mediump_f64mat3;$/;"	t	namespace:glm	typeref:typename:mediump_f64mat3x3
mediump_f64mat3x2	./glm/fwd.hpp	/^	typedef mat<3, 2, f64, mediump>		mediump_f64mat3x2;$/;"	t	namespace:glm	typeref:typename:mat<3,2,f64,mediump>
mediump_f64mat3x2	./glm/gtc/type_precision.hpp	/^	typedef mat<3, 2, f64, mediump> mediump_f64mat3x2;$/;"	t	namespace:glm	typeref:typename:mat<3,2,f64,mediump>
mediump_f64mat3x3	./glm/fwd.hpp	/^	typedef mat<3, 3, f64, mediump>		mediump_f64mat3x3;$/;"	t	namespace:glm	typeref:typename:mat<3,3,f64,mediump>
mediump_f64mat3x3	./glm/gtc/type_precision.hpp	/^	typedef mat<3, 3, f64, mediump> mediump_f64mat3x3;$/;"	t	namespace:glm	typeref:typename:mat<3,3,f64,mediump>
mediump_f64mat3x4	./glm/fwd.hpp	/^	typedef mat<3, 4, f64, mediump>		mediump_f64mat3x4;$/;"	t	namespace:glm	typeref:typename:mat<3,4,f64,mediump>
mediump_f64mat3x4	./glm/gtc/type_precision.hpp	/^	typedef mat<3, 4, f64, mediump> mediump_f64mat3x4;$/;"	t	namespace:glm	typeref:typename:mat<3,4,f64,mediump>
mediump_f64mat4	./glm/fwd.hpp	/^	typedef mat<4, 4, f64, mediump>		mediump_f64mat4;$/;"	t	namespace:glm	typeref:typename:mat<4,4,f64,mediump>
mediump_f64mat4	./glm/gtc/type_precision.hpp	/^	typedef mediump_f64mat4x4 mediump_f64mat4;$/;"	t	namespace:glm	typeref:typename:mediump_f64mat4x4
mediump_f64mat4x2	./glm/fwd.hpp	/^	typedef mat<4, 2, f64, mediump>		mediump_f64mat4x2;$/;"	t	namespace:glm	typeref:typename:mat<4,2,f64,mediump>
mediump_f64mat4x2	./glm/gtc/type_precision.hpp	/^	typedef mat<4, 2, f64, mediump> mediump_f64mat4x2;$/;"	t	namespace:glm	typeref:typename:mat<4,2,f64,mediump>
mediump_f64mat4x3	./glm/fwd.hpp	/^	typedef mat<4, 3, f64, mediump>		mediump_f64mat4x3;$/;"	t	namespace:glm	typeref:typename:mat<4,3,f64,mediump>
mediump_f64mat4x3	./glm/gtc/type_precision.hpp	/^	typedef mat<4, 3, f64, mediump> mediump_f64mat4x3;$/;"	t	namespace:glm	typeref:typename:mat<4,3,f64,mediump>
mediump_f64mat4x4	./glm/fwd.hpp	/^	typedef mat<4, 4, f64, mediump>		mediump_f64mat4x4;$/;"	t	namespace:glm	typeref:typename:mat<4,4,f64,mediump>
mediump_f64mat4x4	./glm/gtc/type_precision.hpp	/^	typedef mat<4, 4, f64, mediump> mediump_f64mat4x4;$/;"	t	namespace:glm	typeref:typename:mat<4,4,f64,mediump>
mediump_f64quat	./glm/fwd.hpp	/^	typedef qua<f64, mediump>			mediump_f64quat;$/;"	t	namespace:glm	typeref:typename:qua<f64,mediump>
mediump_f64quat	./glm/gtc/type_precision.hpp	/^	typedef qua<f64, mediump> mediump_f64quat;$/;"	t	namespace:glm	typeref:typename:qua<f64,mediump>
mediump_f64vec1	./glm/fwd.hpp	/^	typedef vec<1, f64, mediump>		mediump_f64vec1;$/;"	t	namespace:glm	typeref:typename:vec<1,f64,mediump>
mediump_f64vec1	./glm/gtc/type_precision.hpp	/^	typedef vec<1, f64, mediump> mediump_f64vec1;$/;"	t	namespace:glm	typeref:typename:vec<1,f64,mediump>
mediump_f64vec2	./glm/fwd.hpp	/^	typedef vec<2, f64, mediump>		mediump_f64vec2;$/;"	t	namespace:glm	typeref:typename:vec<2,f64,mediump>
mediump_f64vec2	./glm/gtc/type_precision.hpp	/^	typedef vec<2, f64, mediump> mediump_f64vec2;$/;"	t	namespace:glm	typeref:typename:vec<2,f64,mediump>
mediump_f64vec3	./glm/fwd.hpp	/^	typedef vec<3, f64, mediump>		mediump_f64vec3;$/;"	t	namespace:glm	typeref:typename:vec<3,f64,mediump>
mediump_f64vec3	./glm/gtc/type_precision.hpp	/^	typedef vec<3, f64, mediump> mediump_f64vec3;$/;"	t	namespace:glm	typeref:typename:vec<3,f64,mediump>
mediump_f64vec4	./glm/fwd.hpp	/^	typedef vec<4, f64, mediump>		mediump_f64vec4;$/;"	t	namespace:glm	typeref:typename:vec<4,f64,mediump>
mediump_f64vec4	./glm/gtc/type_precision.hpp	/^	typedef vec<4, f64, mediump> mediump_f64vec4;$/;"	t	namespace:glm	typeref:typename:vec<4,f64,mediump>
mediump_fdualquat	./glm/gtx/dual_quaternion.hpp	/^	typedef tdualquat<float, mediump>	mediump_fdualquat;$/;"	t	namespace:glm	typeref:typename:tdualquat<float,mediump>
mediump_float32	./glm/fwd.hpp	/^	typedef float					mediump_float32;$/;"	t	namespace:glm	typeref:typename:float
mediump_float32	./glm/gtc/type_precision.hpp	/^	typedef float32 mediump_float32;$/;"	t	namespace:glm	typeref:typename:float32
mediump_float32_t	./glm/fwd.hpp	/^	typedef float					mediump_float32_t;$/;"	t	namespace:glm	typeref:typename:float
mediump_float32_t	./glm/gtc/type_precision.hpp	/^	typedef float32 mediump_float32_t;$/;"	t	namespace:glm	typeref:typename:float32
mediump_float64	./glm/fwd.hpp	/^	typedef double					mediump_float64;$/;"	t	namespace:glm	typeref:typename:double
mediump_float64	./glm/gtc/type_precision.hpp	/^	typedef float64 mediump_float64;$/;"	t	namespace:glm	typeref:typename:float64
mediump_float64_t	./glm/fwd.hpp	/^	typedef double					mediump_float64_t;$/;"	t	namespace:glm	typeref:typename:double
mediump_float64_t	./glm/gtc/type_precision.hpp	/^	typedef float64 mediump_float64_t;$/;"	t	namespace:glm	typeref:typename:float64
mediump_fmat2	./glm/fwd.hpp	/^	typedef mat<2, 2, f32, mediump>		mediump_fmat2;$/;"	t	namespace:glm	typeref:typename:mat<2,2,f32,mediump>
mediump_fmat2	./glm/gtc/type_precision.hpp	/^	typedef mediump_fmat2x2 mediump_fmat2;$/;"	t	namespace:glm	typeref:typename:mediump_fmat2x2
mediump_fmat2x2	./glm/fwd.hpp	/^	typedef mat<2, 2, f32, mediump>		mediump_fmat2x2;$/;"	t	namespace:glm	typeref:typename:mat<2,2,f32,mediump>
mediump_fmat2x2	./glm/gtc/type_precision.hpp	/^	typedef mat<2, 2, f32, mediump> mediump_fmat2x2;$/;"	t	namespace:glm	typeref:typename:mat<2,2,f32,mediump>
mediump_fmat2x3	./glm/fwd.hpp	/^	typedef mat<2, 3, f32, mediump>		mediump_fmat2x3;$/;"	t	namespace:glm	typeref:typename:mat<2,3,f32,mediump>
mediump_fmat2x3	./glm/gtc/type_precision.hpp	/^	typedef mat<2, 3, f32, mediump> mediump_fmat2x3;$/;"	t	namespace:glm	typeref:typename:mat<2,3,f32,mediump>
mediump_fmat2x4	./glm/fwd.hpp	/^	typedef mat<2, 4, f32, mediump>		mediump_fmat2x4;$/;"	t	namespace:glm	typeref:typename:mat<2,4,f32,mediump>
mediump_fmat2x4	./glm/gtc/type_precision.hpp	/^	typedef mat<2, 4, f32, mediump> mediump_fmat2x4;$/;"	t	namespace:glm	typeref:typename:mat<2,4,f32,mediump>
mediump_fmat3	./glm/fwd.hpp	/^	typedef mat<3, 3, f32, mediump>		mediump_fmat3;$/;"	t	namespace:glm	typeref:typename:mat<3,3,f32,mediump>
mediump_fmat3	./glm/gtc/type_precision.hpp	/^	typedef mediump_fmat3x3 mediump_fmat3;$/;"	t	namespace:glm	typeref:typename:mediump_fmat3x3
mediump_fmat3x2	./glm/fwd.hpp	/^	typedef mat<3, 2, f32, mediump>		mediump_fmat3x2;$/;"	t	namespace:glm	typeref:typename:mat<3,2,f32,mediump>
mediump_fmat3x2	./glm/gtc/type_precision.hpp	/^	typedef mat<3, 2, f32, mediump> mediump_fmat3x2;$/;"	t	namespace:glm	typeref:typename:mat<3,2,f32,mediump>
mediump_fmat3x3	./glm/fwd.hpp	/^	typedef mat<3, 3, f32, mediump>		mediump_fmat3x3;$/;"	t	namespace:glm	typeref:typename:mat<3,3,f32,mediump>
mediump_fmat3x3	./glm/gtc/type_precision.hpp	/^	typedef mat<3, 3, f32, mediump> mediump_fmat3x3;$/;"	t	namespace:glm	typeref:typename:mat<3,3,f32,mediump>
mediump_fmat3x4	./glm/fwd.hpp	/^	typedef mat<3, 4, f32, mediump>		mediump_fmat3x4;$/;"	t	namespace:glm	typeref:typename:mat<3,4,f32,mediump>
mediump_fmat3x4	./glm/gtc/type_precision.hpp	/^	typedef mat<3, 4, f32, mediump> mediump_fmat3x4;$/;"	t	namespace:glm	typeref:typename:mat<3,4,f32,mediump>
mediump_fmat4	./glm/fwd.hpp	/^	typedef mat<4, 4, f32, mediump>		mediump_fmat4;$/;"	t	namespace:glm	typeref:typename:mat<4,4,f32,mediump>
mediump_fmat4	./glm/gtc/type_precision.hpp	/^	typedef mediump_fmat4x4 mediump_fmat4;$/;"	t	namespace:glm	typeref:typename:mediump_fmat4x4
mediump_fmat4x2	./glm/fwd.hpp	/^	typedef mat<4, 2, f32, mediump>		mediump_fmat4x2;$/;"	t	namespace:glm	typeref:typename:mat<4,2,f32,mediump>
mediump_fmat4x2	./glm/gtc/type_precision.hpp	/^	typedef mat<4, 2, f32, mediump> mediump_fmat4x2;$/;"	t	namespace:glm	typeref:typename:mat<4,2,f32,mediump>
mediump_fmat4x3	./glm/fwd.hpp	/^	typedef mat<4, 3, f32, mediump>		mediump_fmat4x3;$/;"	t	namespace:glm	typeref:typename:mat<4,3,f32,mediump>
mediump_fmat4x3	./glm/gtc/type_precision.hpp	/^	typedef mat<4, 3, f32, mediump> mediump_fmat4x3;$/;"	t	namespace:glm	typeref:typename:mat<4,3,f32,mediump>
mediump_fmat4x4	./glm/fwd.hpp	/^	typedef mat<4, 4, f32, mediump>		mediump_fmat4x4;$/;"	t	namespace:glm	typeref:typename:mat<4,4,f32,mediump>
mediump_fmat4x4	./glm/gtc/type_precision.hpp	/^	typedef mat<4, 4, f32, mediump> mediump_fmat4x4;$/;"	t	namespace:glm	typeref:typename:mat<4,4,f32,mediump>
mediump_fquat	./glm/fwd.hpp	/^	typedef qua<float, mediump>			mediump_fquat;$/;"	t	namespace:glm	typeref:typename:qua<float,mediump>
mediump_fvec1	./glm/fwd.hpp	/^	typedef vec<1, float, mediump>		mediump_fvec1;$/;"	t	namespace:glm	typeref:typename:vec<1,float,mediump>
mediump_fvec1	./glm/gtc/type_precision.hpp	/^	typedef vec<1, float, mediump> mediump_fvec1;$/;"	t	namespace:glm	typeref:typename:vec<1,float,mediump>
mediump_fvec2	./glm/fwd.hpp	/^	typedef vec<2, float, mediump>		mediump_fvec2;$/;"	t	namespace:glm	typeref:typename:vec<2,float,mediump>
mediump_fvec2	./glm/gtc/type_precision.hpp	/^	typedef vec<2, float, mediump> mediump_fvec2;$/;"	t	namespace:glm	typeref:typename:vec<2,float,mediump>
mediump_fvec3	./glm/fwd.hpp	/^	typedef vec<3, float, mediump>		mediump_fvec3;$/;"	t	namespace:glm	typeref:typename:vec<3,float,mediump>
mediump_fvec3	./glm/gtc/type_precision.hpp	/^	typedef vec<3, float, mediump> mediump_fvec3;$/;"	t	namespace:glm	typeref:typename:vec<3,float,mediump>
mediump_fvec4	./glm/fwd.hpp	/^	typedef vec<4, float, mediump>		mediump_fvec4;$/;"	t	namespace:glm	typeref:typename:vec<4,float,mediump>
mediump_fvec4	./glm/gtc/type_precision.hpp	/^	typedef vec<4, float, mediump> mediump_fvec4;$/;"	t	namespace:glm	typeref:typename:vec<4,float,mediump>
mediump_i16	./glm/fwd.hpp	/^	typedef int16					mediump_i16;$/;"	t	namespace:glm	typeref:typename:int16
mediump_i16	./glm/gtc/type_precision.hpp	/^	typedef detail::int16 mediump_i16;$/;"	t	namespace:glm	typeref:typename:detail::int16
mediump_i16mat2x2	./glm/fwd.hpp	/^	typedef mat<2, 2, int16, mediump>	mediump_i16mat2x2;$/;"	t	namespace:glm	typeref:typename:mat<2,2,int16,mediump>
mediump_i16mat2x3	./glm/fwd.hpp	/^	typedef mat<2, 3, int16, mediump>	mediump_i16mat2x3;$/;"	t	namespace:glm	typeref:typename:mat<2,3,int16,mediump>
mediump_i16mat2x4	./glm/fwd.hpp	/^	typedef mat<2, 4, int16, mediump>	mediump_i16mat2x4;$/;"	t	namespace:glm	typeref:typename:mat<2,4,int16,mediump>
mediump_i16mat3x2	./glm/fwd.hpp	/^	typedef mat<3, 2, int16, mediump>	mediump_i16mat3x2;$/;"	t	namespace:glm	typeref:typename:mat<3,2,int16,mediump>
mediump_i16mat3x3	./glm/fwd.hpp	/^	typedef mat<3, 3, int16, mediump>	mediump_i16mat3x3;$/;"	t	namespace:glm	typeref:typename:mat<3,3,int16,mediump>
mediump_i16mat3x4	./glm/fwd.hpp	/^	typedef mat<3, 4, int16, mediump>	mediump_i16mat3x4;$/;"	t	namespace:glm	typeref:typename:mat<3,4,int16,mediump>
mediump_i16mat4x2	./glm/fwd.hpp	/^	typedef mat<4, 2, int16, mediump>	mediump_i16mat4x2;$/;"	t	namespace:glm	typeref:typename:mat<4,2,int16,mediump>
mediump_i16mat4x3	./glm/fwd.hpp	/^	typedef mat<4, 3, int16, mediump>	mediump_i16mat4x3;$/;"	t	namespace:glm	typeref:typename:mat<4,3,int16,mediump>
mediump_i16mat4x4	./glm/fwd.hpp	/^	typedef mat<4, 4, int16, mediump>	mediump_i16mat4x4;$/;"	t	namespace:glm	typeref:typename:mat<4,4,int16,mediump>
mediump_i16vec1	./glm/fwd.hpp	/^	typedef vec<1, i16, mediump>	mediump_i16vec1;$/;"	t	namespace:glm	typeref:typename:vec<1,i16,mediump>
mediump_i16vec1	./glm/gtc/type_precision.hpp	/^	typedef vec<1, i16, mediump>	mediump_i16vec1;$/;"	t	namespace:glm	typeref:typename:vec<1,i16,mediump>
mediump_i16vec2	./glm/fwd.hpp	/^	typedef vec<2, i16, mediump>	mediump_i16vec2;$/;"	t	namespace:glm	typeref:typename:vec<2,i16,mediump>
mediump_i16vec2	./glm/gtc/type_precision.hpp	/^	typedef vec<2, i16, mediump>	mediump_i16vec2;$/;"	t	namespace:glm	typeref:typename:vec<2,i16,mediump>
mediump_i16vec3	./glm/fwd.hpp	/^	typedef vec<3, i16, mediump>	mediump_i16vec3;$/;"	t	namespace:glm	typeref:typename:vec<3,i16,mediump>
mediump_i16vec3	./glm/gtc/type_precision.hpp	/^	typedef vec<3, i16, mediump>	mediump_i16vec3;$/;"	t	namespace:glm	typeref:typename:vec<3,i16,mediump>
mediump_i16vec4	./glm/fwd.hpp	/^	typedef vec<4, i16, mediump>	mediump_i16vec4;$/;"	t	namespace:glm	typeref:typename:vec<4,i16,mediump>
mediump_i16vec4	./glm/gtc/type_precision.hpp	/^	typedef vec<4, i16, mediump>	mediump_i16vec4;$/;"	t	namespace:glm	typeref:typename:vec<4,i16,mediump>
mediump_i32	./glm/fwd.hpp	/^	typedef int32					mediump_i32;$/;"	t	namespace:glm	typeref:typename:int32
mediump_i32	./glm/gtc/type_precision.hpp	/^	typedef detail::int32 mediump_i32;$/;"	t	namespace:glm	typeref:typename:detail::int32
mediump_i32mat2x2	./glm/fwd.hpp	/^	typedef mat<2, 2, int32, mediump>	mediump_i32mat2x2;$/;"	t	namespace:glm	typeref:typename:mat<2,2,int32,mediump>
mediump_i32mat2x3	./glm/fwd.hpp	/^	typedef mat<2, 3, int32, mediump>	mediump_i32mat2x3;$/;"	t	namespace:glm	typeref:typename:mat<2,3,int32,mediump>
mediump_i32mat2x4	./glm/fwd.hpp	/^	typedef mat<2, 4, int32, mediump>	mediump_i32mat2x4;$/;"	t	namespace:glm	typeref:typename:mat<2,4,int32,mediump>
mediump_i32mat3x2	./glm/fwd.hpp	/^	typedef mat<3, 2, int32, mediump>	mediump_i32mat3x2;$/;"	t	namespace:glm	typeref:typename:mat<3,2,int32,mediump>
mediump_i32mat3x3	./glm/fwd.hpp	/^	typedef mat<3, 3, int32, mediump>	mediump_i32mat3x3;$/;"	t	namespace:glm	typeref:typename:mat<3,3,int32,mediump>
mediump_i32mat3x4	./glm/fwd.hpp	/^	typedef mat<3, 4, int32, mediump>	mediump_i32mat3x4;$/;"	t	namespace:glm	typeref:typename:mat<3,4,int32,mediump>
mediump_i32mat4x2	./glm/fwd.hpp	/^	typedef mat<4, 2, int32, mediump>	mediump_i32mat4x2;$/;"	t	namespace:glm	typeref:typename:mat<4,2,int32,mediump>
mediump_i32mat4x3	./glm/fwd.hpp	/^	typedef mat<4, 3, int32, mediump>	mediump_i32mat4x3;$/;"	t	namespace:glm	typeref:typename:mat<4,3,int32,mediump>
mediump_i32mat4x4	./glm/fwd.hpp	/^	typedef mat<4, 4, int32, mediump>	mediump_i32mat4x4;$/;"	t	namespace:glm	typeref:typename:mat<4,4,int32,mediump>
mediump_i32vec1	./glm/fwd.hpp	/^	typedef vec<1, i32, mediump>	mediump_i32vec1;$/;"	t	namespace:glm	typeref:typename:vec<1,i32,mediump>
mediump_i32vec1	./glm/gtc/type_precision.hpp	/^	typedef vec<1, i32, mediump>	mediump_i32vec1;$/;"	t	namespace:glm	typeref:typename:vec<1,i32,mediump>
mediump_i32vec2	./glm/fwd.hpp	/^	typedef vec<2, i32, mediump>	mediump_i32vec2;$/;"	t	namespace:glm	typeref:typename:vec<2,i32,mediump>
mediump_i32vec2	./glm/gtc/type_precision.hpp	/^	typedef vec<2, i32, mediump>	mediump_i32vec2;$/;"	t	namespace:glm	typeref:typename:vec<2,i32,mediump>
mediump_i32vec3	./glm/fwd.hpp	/^	typedef vec<3, i32, mediump>	mediump_i32vec3;$/;"	t	namespace:glm	typeref:typename:vec<3,i32,mediump>
mediump_i32vec3	./glm/gtc/type_precision.hpp	/^	typedef vec<3, i32, mediump>	mediump_i32vec3;$/;"	t	namespace:glm	typeref:typename:vec<3,i32,mediump>
mediump_i32vec4	./glm/fwd.hpp	/^	typedef vec<4, i32, mediump>	mediump_i32vec4;$/;"	t	namespace:glm	typeref:typename:vec<4,i32,mediump>
mediump_i32vec4	./glm/gtc/type_precision.hpp	/^	typedef vec<4, i32, mediump>	mediump_i32vec4;$/;"	t	namespace:glm	typeref:typename:vec<4,i32,mediump>
mediump_i64	./glm/fwd.hpp	/^	typedef int64					mediump_i64;$/;"	t	namespace:glm	typeref:typename:int64
mediump_i64	./glm/gtc/type_precision.hpp	/^	typedef detail::int64 mediump_i64;$/;"	t	namespace:glm	typeref:typename:detail::int64
mediump_i64mat2x2	./glm/fwd.hpp	/^	typedef mat<2, 2, int64, mediump>	mediump_i64mat2x2;$/;"	t	namespace:glm	typeref:typename:mat<2,2,int64,mediump>
mediump_i64mat2x3	./glm/fwd.hpp	/^	typedef mat<2, 3, int64, mediump>	mediump_i64mat2x3;$/;"	t	namespace:glm	typeref:typename:mat<2,3,int64,mediump>
mediump_i64mat2x4	./glm/fwd.hpp	/^	typedef mat<2, 4, int64, mediump>	mediump_i64mat2x4;$/;"	t	namespace:glm	typeref:typename:mat<2,4,int64,mediump>
mediump_i64mat3x2	./glm/fwd.hpp	/^	typedef mat<3, 2, int64, mediump>	mediump_i64mat3x2;$/;"	t	namespace:glm	typeref:typename:mat<3,2,int64,mediump>
mediump_i64mat3x3	./glm/fwd.hpp	/^	typedef mat<3, 3, int64, mediump>	mediump_i64mat3x3;$/;"	t	namespace:glm	typeref:typename:mat<3,3,int64,mediump>
mediump_i64mat3x4	./glm/fwd.hpp	/^	typedef mat<3, 4, int64, mediump>	mediump_i64mat3x4;$/;"	t	namespace:glm	typeref:typename:mat<3,4,int64,mediump>
mediump_i64mat4x2	./glm/fwd.hpp	/^	typedef mat<4, 2, int64, mediump>	mediump_i64mat4x2;$/;"	t	namespace:glm	typeref:typename:mat<4,2,int64,mediump>
mediump_i64mat4x3	./glm/fwd.hpp	/^	typedef mat<4, 3, int64, mediump>	mediump_i64mat4x3;$/;"	t	namespace:glm	typeref:typename:mat<4,3,int64,mediump>
mediump_i64mat4x4	./glm/fwd.hpp	/^	typedef mat<4, 4, int64, mediump>	mediump_i64mat4x4;$/;"	t	namespace:glm	typeref:typename:mat<4,4,int64,mediump>
mediump_i64vec1	./glm/fwd.hpp	/^	typedef vec<1, i64, mediump>	mediump_i64vec1;$/;"	t	namespace:glm	typeref:typename:vec<1,i64,mediump>
mediump_i64vec1	./glm/gtc/type_precision.hpp	/^	typedef vec<1, i64, mediump>	mediump_i64vec1;$/;"	t	namespace:glm	typeref:typename:vec<1,i64,mediump>
mediump_i64vec2	./glm/fwd.hpp	/^	typedef vec<2, i64, mediump>	mediump_i64vec2;$/;"	t	namespace:glm	typeref:typename:vec<2,i64,mediump>
mediump_i64vec2	./glm/gtc/type_precision.hpp	/^	typedef vec<2, i64, mediump>	mediump_i64vec2;$/;"	t	namespace:glm	typeref:typename:vec<2,i64,mediump>
mediump_i64vec3	./glm/fwd.hpp	/^	typedef vec<3, i64, mediump>	mediump_i64vec3;$/;"	t	namespace:glm	typeref:typename:vec<3,i64,mediump>
mediump_i64vec3	./glm/gtc/type_precision.hpp	/^	typedef vec<3, i64, mediump>	mediump_i64vec3;$/;"	t	namespace:glm	typeref:typename:vec<3,i64,mediump>
mediump_i64vec4	./glm/fwd.hpp	/^	typedef vec<4, i64, mediump>	mediump_i64vec4;$/;"	t	namespace:glm	typeref:typename:vec<4,i64,mediump>
mediump_i64vec4	./glm/gtc/type_precision.hpp	/^	typedef vec<4, i64, mediump>	mediump_i64vec4;$/;"	t	namespace:glm	typeref:typename:vec<4,i64,mediump>
mediump_i8	./glm/fwd.hpp	/^	typedef int8					mediump_i8;$/;"	t	namespace:glm	typeref:typename:int8
mediump_i8	./glm/gtc/type_precision.hpp	/^	typedef detail::int8 mediump_i8;$/;"	t	namespace:glm	typeref:typename:detail::int8
mediump_i8mat2x2	./glm/fwd.hpp	/^	typedef mat<2, 2, int8, mediump>	mediump_i8mat2x2;$/;"	t	namespace:glm	typeref:typename:mat<2,2,int8,mediump>
mediump_i8mat2x3	./glm/fwd.hpp	/^	typedef mat<2, 3, int8, mediump>	mediump_i8mat2x3;$/;"	t	namespace:glm	typeref:typename:mat<2,3,int8,mediump>
mediump_i8mat2x4	./glm/fwd.hpp	/^	typedef mat<2, 4, int8, mediump>	mediump_i8mat2x4;$/;"	t	namespace:glm	typeref:typename:mat<2,4,int8,mediump>
mediump_i8mat3x2	./glm/fwd.hpp	/^	typedef mat<3, 2, int8, mediump>	mediump_i8mat3x2;$/;"	t	namespace:glm	typeref:typename:mat<3,2,int8,mediump>
mediump_i8mat3x3	./glm/fwd.hpp	/^	typedef mat<3, 3, int8, mediump>	mediump_i8mat3x3;$/;"	t	namespace:glm	typeref:typename:mat<3,3,int8,mediump>
mediump_i8mat3x4	./glm/fwd.hpp	/^	typedef mat<3, 4, int8, mediump>	mediump_i8mat3x4;$/;"	t	namespace:glm	typeref:typename:mat<3,4,int8,mediump>
mediump_i8mat4x2	./glm/fwd.hpp	/^	typedef mat<4, 2, int8, mediump>	mediump_i8mat4x2;$/;"	t	namespace:glm	typeref:typename:mat<4,2,int8,mediump>
mediump_i8mat4x3	./glm/fwd.hpp	/^	typedef mat<4, 3, int8, mediump>	mediump_i8mat4x3;$/;"	t	namespace:glm	typeref:typename:mat<4,3,int8,mediump>
mediump_i8mat4x4	./glm/fwd.hpp	/^	typedef mat<4, 4, int8, mediump>	mediump_i8mat4x4;$/;"	t	namespace:glm	typeref:typename:mat<4,4,int8,mediump>
mediump_i8vec1	./glm/fwd.hpp	/^	typedef vec<1, i8, mediump>		mediump_i8vec1;$/;"	t	namespace:glm	typeref:typename:vec<1,i8,mediump>
mediump_i8vec1	./glm/gtc/type_precision.hpp	/^	typedef vec<1, i8, mediump>		mediump_i8vec1;$/;"	t	namespace:glm	typeref:typename:vec<1,i8,mediump>
mediump_i8vec2	./glm/fwd.hpp	/^	typedef vec<2, i8, mediump>		mediump_i8vec2;$/;"	t	namespace:glm	typeref:typename:vec<2,i8,mediump>
mediump_i8vec2	./glm/gtc/type_precision.hpp	/^	typedef vec<2, i8, mediump>		mediump_i8vec2;$/;"	t	namespace:glm	typeref:typename:vec<2,i8,mediump>
mediump_i8vec3	./glm/fwd.hpp	/^	typedef vec<3, i8, mediump>		mediump_i8vec3;$/;"	t	namespace:glm	typeref:typename:vec<3,i8,mediump>
mediump_i8vec3	./glm/gtc/type_precision.hpp	/^	typedef vec<3, i8, mediump>		mediump_i8vec3;$/;"	t	namespace:glm	typeref:typename:vec<3,i8,mediump>
mediump_i8vec4	./glm/fwd.hpp	/^	typedef vec<4, i8, mediump>		mediump_i8vec4;$/;"	t	namespace:glm	typeref:typename:vec<4,i8,mediump>
mediump_i8vec4	./glm/gtc/type_precision.hpp	/^	typedef vec<4, i8, mediump>		mediump_i8vec4;$/;"	t	namespace:glm	typeref:typename:vec<4,i8,mediump>
mediump_imat2	./glm/gtc/matrix_integer.hpp	/^	typedef mat<2, 2, int, mediump>			mediump_imat2;$/;"	t	namespace:glm	typeref:typename:mat<2,2,int,mediump>
mediump_imat2x2	./glm/fwd.hpp	/^	typedef mat<2, 2, int, mediump>		mediump_imat2x2;$/;"	t	namespace:glm	typeref:typename:mat<2,2,int,mediump>
mediump_imat2x2	./glm/gtc/matrix_integer.hpp	/^	typedef mat<2, 2, int, mediump>			mediump_imat2x2;$/;"	t	namespace:glm	typeref:typename:mat<2,2,int,mediump>
mediump_imat2x3	./glm/fwd.hpp	/^	typedef mat<2, 3, int, mediump>		mediump_imat2x3;$/;"	t	namespace:glm	typeref:typename:mat<2,3,int,mediump>
mediump_imat2x3	./glm/gtc/matrix_integer.hpp	/^	typedef mat<2, 3, int, mediump>			mediump_imat2x3;$/;"	t	namespace:glm	typeref:typename:mat<2,3,int,mediump>
mediump_imat2x4	./glm/fwd.hpp	/^	typedef mat<2, 4, int, mediump>		mediump_imat2x4;$/;"	t	namespace:glm	typeref:typename:mat<2,4,int,mediump>
mediump_imat2x4	./glm/gtc/matrix_integer.hpp	/^	typedef mat<2, 4, int, mediump>			mediump_imat2x4;$/;"	t	namespace:glm	typeref:typename:mat<2,4,int,mediump>
mediump_imat3	./glm/gtc/matrix_integer.hpp	/^	typedef mat<3, 3, int, mediump>			mediump_imat3;$/;"	t	namespace:glm	typeref:typename:mat<3,3,int,mediump>
mediump_imat3x2	./glm/fwd.hpp	/^	typedef mat<3, 2, int, mediump>		mediump_imat3x2;$/;"	t	namespace:glm	typeref:typename:mat<3,2,int,mediump>
mediump_imat3x2	./glm/gtc/matrix_integer.hpp	/^	typedef mat<3, 2, int, mediump>			mediump_imat3x2;$/;"	t	namespace:glm	typeref:typename:mat<3,2,int,mediump>
mediump_imat3x3	./glm/fwd.hpp	/^	typedef mat<3, 3, int, mediump>		mediump_imat3x3;$/;"	t	namespace:glm	typeref:typename:mat<3,3,int,mediump>
mediump_imat3x3	./glm/gtc/matrix_integer.hpp	/^	typedef mat<3, 3, int, mediump>			mediump_imat3x3;$/;"	t	namespace:glm	typeref:typename:mat<3,3,int,mediump>
mediump_imat3x4	./glm/fwd.hpp	/^	typedef mat<3, 4, int, mediump>		mediump_imat3x4;$/;"	t	namespace:glm	typeref:typename:mat<3,4,int,mediump>
mediump_imat3x4	./glm/gtc/matrix_integer.hpp	/^	typedef mat<3, 4, int, mediump>			mediump_imat3x4;$/;"	t	namespace:glm	typeref:typename:mat<3,4,int,mediump>
mediump_imat4	./glm/gtc/matrix_integer.hpp	/^	typedef mat<4, 4, int, mediump>			mediump_imat4;$/;"	t	namespace:glm	typeref:typename:mat<4,4,int,mediump>
mediump_imat4x2	./glm/fwd.hpp	/^	typedef mat<4, 2, int, mediump>		mediump_imat4x2;$/;"	t	namespace:glm	typeref:typename:mat<4,2,int,mediump>
mediump_imat4x2	./glm/gtc/matrix_integer.hpp	/^	typedef mat<4, 2, int, mediump>			mediump_imat4x2;$/;"	t	namespace:glm	typeref:typename:mat<4,2,int,mediump>
mediump_imat4x3	./glm/fwd.hpp	/^	typedef mat<4, 3, int, mediump>		mediump_imat4x3;$/;"	t	namespace:glm	typeref:typename:mat<4,3,int,mediump>
mediump_imat4x3	./glm/gtc/matrix_integer.hpp	/^	typedef mat<4, 3, int, mediump>			mediump_imat4x3;$/;"	t	namespace:glm	typeref:typename:mat<4,3,int,mediump>
mediump_imat4x4	./glm/fwd.hpp	/^	typedef mat<4, 4, int, mediump>		mediump_imat4x4;$/;"	t	namespace:glm	typeref:typename:mat<4,4,int,mediump>
mediump_imat4x4	./glm/gtc/matrix_integer.hpp	/^	typedef mat<4, 4, int, mediump>			mediump_imat4x4;$/;"	t	namespace:glm	typeref:typename:mat<4,4,int,mediump>
mediump_int16	./glm/fwd.hpp	/^	typedef int16					mediump_int16;$/;"	t	namespace:glm	typeref:typename:int16
mediump_int16	./glm/gtc/type_precision.hpp	/^	typedef detail::int16 mediump_int16;$/;"	t	namespace:glm	typeref:typename:detail::int16
mediump_int16_t	./glm/fwd.hpp	/^	typedef int16					mediump_int16_t;$/;"	t	namespace:glm	typeref:typename:int16
mediump_int16_t	./glm/gtc/type_precision.hpp	/^	typedef detail::int16 mediump_int16_t;$/;"	t	namespace:glm	typeref:typename:detail::int16
mediump_int32	./glm/fwd.hpp	/^	typedef int32					mediump_int32;$/;"	t	namespace:glm	typeref:typename:int32
mediump_int32	./glm/gtc/type_precision.hpp	/^	typedef detail::int32 mediump_int32;$/;"	t	namespace:glm	typeref:typename:detail::int32
mediump_int32_t	./glm/fwd.hpp	/^	typedef int32					mediump_int32_t;$/;"	t	namespace:glm	typeref:typename:int32
mediump_int32_t	./glm/gtc/type_precision.hpp	/^	typedef detail::int32 mediump_int32_t;$/;"	t	namespace:glm	typeref:typename:detail::int32
mediump_int64	./glm/fwd.hpp	/^	typedef int64					mediump_int64;$/;"	t	namespace:glm	typeref:typename:int64
mediump_int64	./glm/gtc/type_precision.hpp	/^	typedef detail::int64 mediump_int64;$/;"	t	namespace:glm	typeref:typename:detail::int64
mediump_int64_t	./glm/fwd.hpp	/^	typedef int64					mediump_int64_t;$/;"	t	namespace:glm	typeref:typename:int64
mediump_int64_t	./glm/gtc/type_precision.hpp	/^	typedef detail::int64 mediump_int64_t;$/;"	t	namespace:glm	typeref:typename:detail::int64
mediump_int8	./glm/fwd.hpp	/^	typedef int8					mediump_int8;$/;"	t	namespace:glm	typeref:typename:int8
mediump_int8	./glm/gtc/type_precision.hpp	/^	typedef detail::int8 mediump_int8;$/;"	t	namespace:glm	typeref:typename:detail::int8
mediump_int8_t	./glm/fwd.hpp	/^	typedef int8					mediump_int8_t;$/;"	t	namespace:glm	typeref:typename:int8
mediump_int8_t	./glm/gtc/type_precision.hpp	/^	typedef detail::int8 mediump_int8_t;$/;"	t	namespace:glm	typeref:typename:detail::int8
mediump_ivec1	./glm/fwd.hpp	/^	typedef vec<1, int, mediump>	mediump_ivec1;$/;"	t	namespace:glm	typeref:typename:vec<1,int,mediump>
mediump_ivec1	./glm/gtc/type_precision.hpp	/^	typedef vec<1, int, mediump>	mediump_ivec1;$/;"	t	namespace:glm	typeref:typename:vec<1,int,mediump>
mediump_ivec2	./glm/fwd.hpp	/^	typedef vec<2, int, mediump>	mediump_ivec2;$/;"	t	namespace:glm	typeref:typename:vec<2,int,mediump>
mediump_ivec2	./glm/gtc/type_precision.hpp	/^	typedef vec<2, int, mediump>	mediump_ivec2;$/;"	t	namespace:glm	typeref:typename:vec<2,int,mediump>
mediump_ivec3	./glm/fwd.hpp	/^	typedef vec<3, int, mediump>	mediump_ivec3;$/;"	t	namespace:glm	typeref:typename:vec<3,int,mediump>
mediump_ivec3	./glm/gtc/type_precision.hpp	/^	typedef vec<3, int, mediump>	mediump_ivec3;$/;"	t	namespace:glm	typeref:typename:vec<3,int,mediump>
mediump_ivec4	./glm/fwd.hpp	/^	typedef vec<4, int, mediump>	mediump_ivec4;$/;"	t	namespace:glm	typeref:typename:vec<4,int,mediump>
mediump_ivec4	./glm/gtc/type_precision.hpp	/^	typedef vec<4, int, mediump>	mediump_ivec4;$/;"	t	namespace:glm	typeref:typename:vec<4,int,mediump>
mediump_mat2	./glm/ext/matrix_float2x2_precision.hpp	/^	typedef mat<2, 2, float, mediump>	mediump_mat2;$/;"	t	namespace:glm	typeref:typename:mat<2,2,float,mediump>
mediump_mat2	./glm/fwd.hpp	/^	typedef mat<2, 2, f32, mediump>		mediump_mat2;$/;"	t	namespace:glm	typeref:typename:mat<2,2,f32,mediump>
mediump_mat2x2	./glm/ext/matrix_float2x2_precision.hpp	/^	typedef mat<2, 2, float, mediump>	mediump_mat2x2;$/;"	t	namespace:glm	typeref:typename:mat<2,2,float,mediump>
mediump_mat2x2	./glm/fwd.hpp	/^	typedef mat<2, 2, f32, mediump>		mediump_mat2x2;$/;"	t	namespace:glm	typeref:typename:mat<2,2,f32,mediump>
mediump_mat2x3	./glm/ext/matrix_float2x3_precision.hpp	/^	typedef mat<2, 3, float, mediump>	mediump_mat2x3;$/;"	t	namespace:glm	typeref:typename:mat<2,3,float,mediump>
mediump_mat2x3	./glm/fwd.hpp	/^	typedef mat<2, 3, f32, mediump>		mediump_mat2x3;$/;"	t	namespace:glm	typeref:typename:mat<2,3,f32,mediump>
mediump_mat2x4	./glm/ext/matrix_float2x4_precision.hpp	/^	typedef mat<2, 4, float, mediump>	mediump_mat2x4;$/;"	t	namespace:glm	typeref:typename:mat<2,4,float,mediump>
mediump_mat2x4	./glm/fwd.hpp	/^	typedef mat<2, 4, f32, mediump>		mediump_mat2x4;$/;"	t	namespace:glm	typeref:typename:mat<2,4,f32,mediump>
mediump_mat3	./glm/ext/matrix_float3x3_precision.hpp	/^	typedef mat<3, 3, float, mediump>	mediump_mat3;$/;"	t	namespace:glm	typeref:typename:mat<3,3,float,mediump>
mediump_mat3	./glm/fwd.hpp	/^	typedef mat<3, 3, f32, mediump>		mediump_mat3;$/;"	t	namespace:glm	typeref:typename:mat<3,3,f32,mediump>
mediump_mat3x2	./glm/ext/matrix_float3x2_precision.hpp	/^	typedef mat<3, 2, float, mediump>	mediump_mat3x2;$/;"	t	namespace:glm	typeref:typename:mat<3,2,float,mediump>
mediump_mat3x2	./glm/fwd.hpp	/^	typedef mat<3, 2, f32, mediump>		mediump_mat3x2;$/;"	t	namespace:glm	typeref:typename:mat<3,2,f32,mediump>
mediump_mat3x3	./glm/ext/matrix_float3x3_precision.hpp	/^	typedef mat<3, 3, float, mediump>	mediump_mat3x3;$/;"	t	namespace:glm	typeref:typename:mat<3,3,float,mediump>
mediump_mat3x3	./glm/fwd.hpp	/^	typedef mat<3, 3, f32, mediump>		mediump_mat3x3;$/;"	t	namespace:glm	typeref:typename:mat<3,3,f32,mediump>
mediump_mat3x4	./glm/ext/matrix_float3x4_precision.hpp	/^	typedef mat<3, 4, float, mediump>	mediump_mat3x4;$/;"	t	namespace:glm	typeref:typename:mat<3,4,float,mediump>
mediump_mat3x4	./glm/fwd.hpp	/^	typedef mat<3, 4, f32, mediump>		mediump_mat3x4;$/;"	t	namespace:glm	typeref:typename:mat<3,4,f32,mediump>
mediump_mat4	./glm/ext/matrix_float4x4_precision.hpp	/^	typedef mat<4, 4, float, mediump>	mediump_mat4;$/;"	t	namespace:glm	typeref:typename:mat<4,4,float,mediump>
mediump_mat4	./glm/fwd.hpp	/^	typedef mat<4, 4, f32, mediump>		mediump_mat4;$/;"	t	namespace:glm	typeref:typename:mat<4,4,f32,mediump>
mediump_mat4x2	./glm/ext/matrix_float4x2_precision.hpp	/^	typedef mat<4, 2, float, mediump>	mediump_mat4x2;$/;"	t	namespace:glm	typeref:typename:mat<4,2,float,mediump>
mediump_mat4x2	./glm/fwd.hpp	/^	typedef mat<4, 2, f32, mediump>		mediump_mat4x2;$/;"	t	namespace:glm	typeref:typename:mat<4,2,f32,mediump>
mediump_mat4x3	./glm/ext/matrix_float4x3_precision.hpp	/^	typedef mat<4, 3, float, mediump>	mediump_mat4x3;$/;"	t	namespace:glm	typeref:typename:mat<4,3,float,mediump>
mediump_mat4x3	./glm/fwd.hpp	/^	typedef mat<4, 3, f32, mediump>		mediump_mat4x3;$/;"	t	namespace:glm	typeref:typename:mat<4,3,f32,mediump>
mediump_mat4x4	./glm/ext/matrix_float4x4_precision.hpp	/^	typedef mat<4, 4, float, mediump>	mediump_mat4x4;$/;"	t	namespace:glm	typeref:typename:mat<4,4,float,mediump>
mediump_mat4x4	./glm/fwd.hpp	/^	typedef mat<4, 4, f32, mediump>		mediump_mat4x4;$/;"	t	namespace:glm	typeref:typename:mat<4,4,f32,mediump>
mediump_quat	./glm/ext/quaternion_float_precision.hpp	/^	typedef qua<float, mediump>		mediump_quat;$/;"	t	namespace:glm	typeref:typename:qua<float,mediump>
mediump_quat	./glm/fwd.hpp	/^	typedef qua<float, mediump>			mediump_quat;$/;"	t	namespace:glm	typeref:typename:qua<float,mediump>
mediump_u16	./glm/fwd.hpp	/^	typedef uint16					mediump_u16;$/;"	t	namespace:glm	typeref:typename:uint16
mediump_u16	./glm/gtc/type_precision.hpp	/^	typedef detail::uint16 mediump_u16;$/;"	t	namespace:glm	typeref:typename:detail::uint16
mediump_u16mat2x2	./glm/fwd.hpp	/^	typedef mat<2, 2, uint16, mediump>	mediump_u16mat2x2;$/;"	t	namespace:glm	typeref:typename:mat<2,2,uint16,mediump>
mediump_u16mat2x3	./glm/fwd.hpp	/^	typedef mat<2, 3, uint16, mediump>	mediump_u16mat2x3;$/;"	t	namespace:glm	typeref:typename:mat<2,3,uint16,mediump>
mediump_u16mat2x4	./glm/fwd.hpp	/^	typedef mat<2, 4, uint16, mediump>	mediump_u16mat2x4;$/;"	t	namespace:glm	typeref:typename:mat<2,4,uint16,mediump>
mediump_u16mat3x2	./glm/fwd.hpp	/^	typedef mat<3, 2, uint16, mediump>	mediump_u16mat3x2;$/;"	t	namespace:glm	typeref:typename:mat<3,2,uint16,mediump>
mediump_u16mat3x3	./glm/fwd.hpp	/^	typedef mat<3, 3, uint16, mediump>	mediump_u16mat3x3;$/;"	t	namespace:glm	typeref:typename:mat<3,3,uint16,mediump>
mediump_u16mat3x4	./glm/fwd.hpp	/^	typedef mat<3, 4, uint16, mediump>	mediump_u16mat3x4;$/;"	t	namespace:glm	typeref:typename:mat<3,4,uint16,mediump>
mediump_u16mat4x2	./glm/fwd.hpp	/^	typedef mat<4, 2, uint16, mediump>	mediump_u16mat4x2;$/;"	t	namespace:glm	typeref:typename:mat<4,2,uint16,mediump>
mediump_u16mat4x3	./glm/fwd.hpp	/^	typedef mat<4, 3, uint16, mediump>	mediump_u16mat4x3;$/;"	t	namespace:glm	typeref:typename:mat<4,3,uint16,mediump>
mediump_u16mat4x4	./glm/fwd.hpp	/^	typedef mat<4, 4, uint16, mediump>	mediump_u16mat4x4;$/;"	t	namespace:glm	typeref:typename:mat<4,4,uint16,mediump>
mediump_u16vec1	./glm/fwd.hpp	/^	typedef vec<1, u16, mediump>	mediump_u16vec1;$/;"	t	namespace:glm	typeref:typename:vec<1,u16,mediump>
mediump_u16vec1	./glm/gtc/type_precision.hpp	/^	typedef vec<1, u16, mediump>	mediump_u16vec1;$/;"	t	namespace:glm	typeref:typename:vec<1,u16,mediump>
mediump_u16vec2	./glm/fwd.hpp	/^	typedef vec<2, u16, mediump>	mediump_u16vec2;$/;"	t	namespace:glm	typeref:typename:vec<2,u16,mediump>
mediump_u16vec2	./glm/gtc/type_precision.hpp	/^	typedef vec<2, u16, mediump>	mediump_u16vec2;$/;"	t	namespace:glm	typeref:typename:vec<2,u16,mediump>
mediump_u16vec3	./glm/fwd.hpp	/^	typedef vec<3, u16, mediump>	mediump_u16vec3;$/;"	t	namespace:glm	typeref:typename:vec<3,u16,mediump>
mediump_u16vec3	./glm/gtc/type_precision.hpp	/^	typedef vec<3, u16, mediump>	mediump_u16vec3;$/;"	t	namespace:glm	typeref:typename:vec<3,u16,mediump>
mediump_u16vec4	./glm/fwd.hpp	/^	typedef vec<4, u16, mediump>	mediump_u16vec4;$/;"	t	namespace:glm	typeref:typename:vec<4,u16,mediump>
mediump_u16vec4	./glm/gtc/type_precision.hpp	/^	typedef vec<4, u16, mediump>	mediump_u16vec4;$/;"	t	namespace:glm	typeref:typename:vec<4,u16,mediump>
mediump_u32	./glm/fwd.hpp	/^	typedef uint32					mediump_u32;$/;"	t	namespace:glm	typeref:typename:uint32
mediump_u32	./glm/gtc/type_precision.hpp	/^	typedef detail::uint32 mediump_u32;$/;"	t	namespace:glm	typeref:typename:detail::uint32
mediump_u32mat2x2	./glm/fwd.hpp	/^	typedef mat<2, 2, uint32, mediump>	mediump_u32mat2x2;$/;"	t	namespace:glm	typeref:typename:mat<2,2,uint32,mediump>
mediump_u32mat2x3	./glm/fwd.hpp	/^	typedef mat<2, 3, uint32, mediump>	mediump_u32mat2x3;$/;"	t	namespace:glm	typeref:typename:mat<2,3,uint32,mediump>
mediump_u32mat2x4	./glm/fwd.hpp	/^	typedef mat<2, 4, uint32, mediump>	mediump_u32mat2x4;$/;"	t	namespace:glm	typeref:typename:mat<2,4,uint32,mediump>
mediump_u32mat3x2	./glm/fwd.hpp	/^	typedef mat<3, 2, uint32, mediump>	mediump_u32mat3x2;$/;"	t	namespace:glm	typeref:typename:mat<3,2,uint32,mediump>
mediump_u32mat3x3	./glm/fwd.hpp	/^	typedef mat<3, 3, uint32, mediump>	mediump_u32mat3x3;$/;"	t	namespace:glm	typeref:typename:mat<3,3,uint32,mediump>
mediump_u32mat3x4	./glm/fwd.hpp	/^	typedef mat<3, 4, uint32, mediump>	mediump_u32mat3x4;$/;"	t	namespace:glm	typeref:typename:mat<3,4,uint32,mediump>
mediump_u32mat4x2	./glm/fwd.hpp	/^	typedef mat<4, 2, uint32, mediump>	mediump_u32mat4x2;$/;"	t	namespace:glm	typeref:typename:mat<4,2,uint32,mediump>
mediump_u32mat4x3	./glm/fwd.hpp	/^	typedef mat<4, 3, uint32, mediump>	mediump_u32mat4x3;$/;"	t	namespace:glm	typeref:typename:mat<4,3,uint32,mediump>
mediump_u32mat4x4	./glm/fwd.hpp	/^	typedef mat<4, 4, uint32, mediump>	mediump_u32mat4x4;$/;"	t	namespace:glm	typeref:typename:mat<4,4,uint32,mediump>
mediump_u32vec1	./glm/fwd.hpp	/^	typedef vec<1, u32, mediump>	mediump_u32vec1;$/;"	t	namespace:glm	typeref:typename:vec<1,u32,mediump>
mediump_u32vec1	./glm/gtc/type_precision.hpp	/^	typedef vec<1, u32, mediump>	mediump_u32vec1;$/;"	t	namespace:glm	typeref:typename:vec<1,u32,mediump>
mediump_u32vec2	./glm/fwd.hpp	/^	typedef vec<2, u32, mediump>	mediump_u32vec2;$/;"	t	namespace:glm	typeref:typename:vec<2,u32,mediump>
mediump_u32vec2	./glm/gtc/type_precision.hpp	/^	typedef vec<2, u32, mediump>	mediump_u32vec2;$/;"	t	namespace:glm	typeref:typename:vec<2,u32,mediump>
mediump_u32vec3	./glm/fwd.hpp	/^	typedef vec<3, u32, mediump>	mediump_u32vec3;$/;"	t	namespace:glm	typeref:typename:vec<3,u32,mediump>
mediump_u32vec3	./glm/gtc/type_precision.hpp	/^	typedef vec<3, u32, mediump>	mediump_u32vec3;$/;"	t	namespace:glm	typeref:typename:vec<3,u32,mediump>
mediump_u32vec4	./glm/fwd.hpp	/^	typedef vec<4, u32, mediump>	mediump_u32vec4;$/;"	t	namespace:glm	typeref:typename:vec<4,u32,mediump>
mediump_u32vec4	./glm/gtc/type_precision.hpp	/^	typedef vec<4, u32, mediump>	mediump_u32vec4;$/;"	t	namespace:glm	typeref:typename:vec<4,u32,mediump>
mediump_u64	./glm/fwd.hpp	/^	typedef uint64					mediump_u64;$/;"	t	namespace:glm	typeref:typename:uint64
mediump_u64	./glm/gtc/type_precision.hpp	/^	typedef detail::uint64 mediump_u64;$/;"	t	namespace:glm	typeref:typename:detail::uint64
mediump_u64mat2x2	./glm/fwd.hpp	/^	typedef mat<2, 2, uint64, mediump>	mediump_u64mat2x2;$/;"	t	namespace:glm	typeref:typename:mat<2,2,uint64,mediump>
mediump_u64mat2x3	./glm/fwd.hpp	/^	typedef mat<2, 3, uint64, mediump>	mediump_u64mat2x3;$/;"	t	namespace:glm	typeref:typename:mat<2,3,uint64,mediump>
mediump_u64mat2x4	./glm/fwd.hpp	/^	typedef mat<2, 4, uint64, mediump>	mediump_u64mat2x4;$/;"	t	namespace:glm	typeref:typename:mat<2,4,uint64,mediump>
mediump_u64mat3x2	./glm/fwd.hpp	/^	typedef mat<3, 2, uint64, mediump>	mediump_u64mat3x2;$/;"	t	namespace:glm	typeref:typename:mat<3,2,uint64,mediump>
mediump_u64mat3x3	./glm/fwd.hpp	/^	typedef mat<3, 3, uint64, mediump>	mediump_u64mat3x3;$/;"	t	namespace:glm	typeref:typename:mat<3,3,uint64,mediump>
mediump_u64mat3x4	./glm/fwd.hpp	/^	typedef mat<3, 4, uint64, mediump>	mediump_u64mat3x4;$/;"	t	namespace:glm	typeref:typename:mat<3,4,uint64,mediump>
mediump_u64mat4x2	./glm/fwd.hpp	/^	typedef mat<4, 2, uint64, mediump>	mediump_u64mat4x2;$/;"	t	namespace:glm	typeref:typename:mat<4,2,uint64,mediump>
mediump_u64mat4x3	./glm/fwd.hpp	/^	typedef mat<4, 3, uint64, mediump>	mediump_u64mat4x3;$/;"	t	namespace:glm	typeref:typename:mat<4,3,uint64,mediump>
mediump_u64mat4x4	./glm/fwd.hpp	/^	typedef mat<4, 4, uint64, mediump>	mediump_u64mat4x4;$/;"	t	namespace:glm	typeref:typename:mat<4,4,uint64,mediump>
mediump_u64vec1	./glm/fwd.hpp	/^	typedef vec<1, u64, mediump>	mediump_u64vec1;$/;"	t	namespace:glm	typeref:typename:vec<1,u64,mediump>
mediump_u64vec1	./glm/gtc/type_precision.hpp	/^	typedef vec<1, u64, mediump>	mediump_u64vec1;$/;"	t	namespace:glm	typeref:typename:vec<1,u64,mediump>
mediump_u64vec2	./glm/fwd.hpp	/^	typedef vec<2, u64, mediump>	mediump_u64vec2;$/;"	t	namespace:glm	typeref:typename:vec<2,u64,mediump>
mediump_u64vec2	./glm/gtc/type_precision.hpp	/^	typedef vec<2, u64, mediump>	mediump_u64vec2;$/;"	t	namespace:glm	typeref:typename:vec<2,u64,mediump>
mediump_u64vec3	./glm/fwd.hpp	/^	typedef vec<3, u64, mediump>	mediump_u64vec3;$/;"	t	namespace:glm	typeref:typename:vec<3,u64,mediump>
mediump_u64vec3	./glm/gtc/type_precision.hpp	/^	typedef vec<3, u64, mediump>	mediump_u64vec3;$/;"	t	namespace:glm	typeref:typename:vec<3,u64,mediump>
mediump_u64vec4	./glm/fwd.hpp	/^	typedef vec<4, u64, mediump>	mediump_u64vec4;$/;"	t	namespace:glm	typeref:typename:vec<4,u64,mediump>
mediump_u64vec4	./glm/gtc/type_precision.hpp	/^	typedef vec<4, u64, mediump>	mediump_u64vec4;$/;"	t	namespace:glm	typeref:typename:vec<4,u64,mediump>
mediump_u8	./glm/fwd.hpp	/^	typedef uint8					mediump_u8;$/;"	t	namespace:glm	typeref:typename:uint8
mediump_u8	./glm/gtc/type_precision.hpp	/^	typedef detail::uint8 mediump_u8;$/;"	t	namespace:glm	typeref:typename:detail::uint8
mediump_u8mat2x2	./glm/fwd.hpp	/^	typedef mat<2, 2, uint8, mediump>	mediump_u8mat2x2;$/;"	t	namespace:glm	typeref:typename:mat<2,2,uint8,mediump>
mediump_u8mat2x3	./glm/fwd.hpp	/^	typedef mat<2, 3, uint8, mediump>	mediump_u8mat2x3;$/;"	t	namespace:glm	typeref:typename:mat<2,3,uint8,mediump>
mediump_u8mat2x4	./glm/fwd.hpp	/^	typedef mat<2, 4, uint8, mediump>	mediump_u8mat2x4;$/;"	t	namespace:glm	typeref:typename:mat<2,4,uint8,mediump>
mediump_u8mat3x2	./glm/fwd.hpp	/^	typedef mat<3, 2, uint8, mediump>	mediump_u8mat3x2;$/;"	t	namespace:glm	typeref:typename:mat<3,2,uint8,mediump>
mediump_u8mat3x3	./glm/fwd.hpp	/^	typedef mat<3, 3, uint8, mediump>	mediump_u8mat3x3;$/;"	t	namespace:glm	typeref:typename:mat<3,3,uint8,mediump>
mediump_u8mat3x4	./glm/fwd.hpp	/^	typedef mat<3, 4, uint8, mediump>	mediump_u8mat3x4;$/;"	t	namespace:glm	typeref:typename:mat<3,4,uint8,mediump>
mediump_u8mat4x2	./glm/fwd.hpp	/^	typedef mat<4, 2, uint8, mediump>	mediump_u8mat4x2;$/;"	t	namespace:glm	typeref:typename:mat<4,2,uint8,mediump>
mediump_u8mat4x3	./glm/fwd.hpp	/^	typedef mat<4, 3, uint8, mediump>	mediump_u8mat4x3;$/;"	t	namespace:glm	typeref:typename:mat<4,3,uint8,mediump>
mediump_u8mat4x4	./glm/fwd.hpp	/^	typedef mat<4, 4, uint8, mediump>	mediump_u8mat4x4;$/;"	t	namespace:glm	typeref:typename:mat<4,4,uint8,mediump>
mediump_u8vec1	./glm/fwd.hpp	/^	typedef vec<1, u8, mediump>		mediump_u8vec1;$/;"	t	namespace:glm	typeref:typename:vec<1,u8,mediump>
mediump_u8vec1	./glm/gtc/type_precision.hpp	/^	typedef vec<1, u8, mediump>		mediump_u8vec1;$/;"	t	namespace:glm	typeref:typename:vec<1,u8,mediump>
mediump_u8vec2	./glm/fwd.hpp	/^	typedef vec<2, u8, mediump>		mediump_u8vec2;$/;"	t	namespace:glm	typeref:typename:vec<2,u8,mediump>
mediump_u8vec2	./glm/gtc/type_precision.hpp	/^	typedef vec<2, u8, mediump>		mediump_u8vec2;$/;"	t	namespace:glm	typeref:typename:vec<2,u8,mediump>
mediump_u8vec3	./glm/fwd.hpp	/^	typedef vec<3, u8, mediump>		mediump_u8vec3;$/;"	t	namespace:glm	typeref:typename:vec<3,u8,mediump>
mediump_u8vec3	./glm/gtc/type_precision.hpp	/^	typedef vec<3, u8, mediump>		mediump_u8vec3;$/;"	t	namespace:glm	typeref:typename:vec<3,u8,mediump>
mediump_u8vec4	./glm/fwd.hpp	/^	typedef vec<4, u8, mediump>		mediump_u8vec4;$/;"	t	namespace:glm	typeref:typename:vec<4,u8,mediump>
mediump_u8vec4	./glm/gtc/type_precision.hpp	/^	typedef vec<4, u8, mediump>		mediump_u8vec4;$/;"	t	namespace:glm	typeref:typename:vec<4,u8,mediump>
mediump_uint16	./glm/fwd.hpp	/^	typedef uint16					mediump_uint16;$/;"	t	namespace:glm	typeref:typename:uint16
mediump_uint16	./glm/gtc/type_precision.hpp	/^	typedef detail::uint16 mediump_uint16;$/;"	t	namespace:glm	typeref:typename:detail::uint16
mediump_uint16_t	./glm/fwd.hpp	/^	typedef uint16					mediump_uint16_t;$/;"	t	namespace:glm	typeref:typename:uint16
mediump_uint16_t	./glm/gtc/type_precision.hpp	/^	typedef detail::uint16 mediump_uint16_t;$/;"	t	namespace:glm	typeref:typename:detail::uint16
mediump_uint32	./glm/fwd.hpp	/^	typedef uint32					mediump_uint32;$/;"	t	namespace:glm	typeref:typename:uint32
mediump_uint32	./glm/gtc/type_precision.hpp	/^	typedef detail::uint32 mediump_uint32;$/;"	t	namespace:glm	typeref:typename:detail::uint32
mediump_uint32_t	./glm/fwd.hpp	/^	typedef uint32					mediump_uint32_t;$/;"	t	namespace:glm	typeref:typename:uint32
mediump_uint32_t	./glm/gtc/type_precision.hpp	/^	typedef detail::uint32 mediump_uint32_t;$/;"	t	namespace:glm	typeref:typename:detail::uint32
mediump_uint64	./glm/fwd.hpp	/^	typedef uint64					mediump_uint64;$/;"	t	namespace:glm	typeref:typename:uint64
mediump_uint64	./glm/gtc/type_precision.hpp	/^	typedef detail::uint64 mediump_uint64;$/;"	t	namespace:glm	typeref:typename:detail::uint64
mediump_uint64_t	./glm/fwd.hpp	/^	typedef uint64					mediump_uint64_t;$/;"	t	namespace:glm	typeref:typename:uint64
mediump_uint64_t	./glm/gtc/type_precision.hpp	/^	typedef detail::uint64 mediump_uint64_t;$/;"	t	namespace:glm	typeref:typename:detail::uint64
mediump_uint8	./glm/fwd.hpp	/^	typedef uint8					mediump_uint8;$/;"	t	namespace:glm	typeref:typename:uint8
mediump_uint8	./glm/gtc/type_precision.hpp	/^	typedef detail::uint8 mediump_uint8;$/;"	t	namespace:glm	typeref:typename:detail::uint8
mediump_uint8_t	./glm/fwd.hpp	/^	typedef uint8					mediump_uint8_t;$/;"	t	namespace:glm	typeref:typename:uint8
mediump_uint8_t	./glm/gtc/type_precision.hpp	/^	typedef detail::uint8 mediump_uint8_t;$/;"	t	namespace:glm	typeref:typename:detail::uint8
mediump_umat2	./glm/gtc/matrix_integer.hpp	/^	typedef mat<2, 2, uint, mediump>			mediump_umat2;$/;"	t	namespace:glm	typeref:typename:mat<2,2,uint,mediump>
mediump_umat2x2	./glm/fwd.hpp	/^	typedef mat<2, 2, uint, mediump>	mediump_umat2x2;$/;"	t	namespace:glm	typeref:typename:mat<2,2,uint,mediump>
mediump_umat2x2	./glm/gtc/matrix_integer.hpp	/^	typedef mat<2, 2, uint, mediump>			mediump_umat2x2;$/;"	t	namespace:glm	typeref:typename:mat<2,2,uint,mediump>
mediump_umat2x3	./glm/fwd.hpp	/^	typedef mat<2, 3, uint, mediump>	mediump_umat2x3;$/;"	t	namespace:glm	typeref:typename:mat<2,3,uint,mediump>
mediump_umat2x3	./glm/gtc/matrix_integer.hpp	/^	typedef mat<2, 3, uint, mediump>			mediump_umat2x3;$/;"	t	namespace:glm	typeref:typename:mat<2,3,uint,mediump>
mediump_umat2x4	./glm/fwd.hpp	/^	typedef mat<2, 4, uint, mediump>	mediump_umat2x4;$/;"	t	namespace:glm	typeref:typename:mat<2,4,uint,mediump>
mediump_umat2x4	./glm/gtc/matrix_integer.hpp	/^	typedef mat<2, 4, uint, mediump>			mediump_umat2x4;$/;"	t	namespace:glm	typeref:typename:mat<2,4,uint,mediump>
mediump_umat3	./glm/gtc/matrix_integer.hpp	/^	typedef mat<3, 3, uint, mediump>			mediump_umat3;$/;"	t	namespace:glm	typeref:typename:mat<3,3,uint,mediump>
mediump_umat3x2	./glm/fwd.hpp	/^	typedef mat<3, 2, uint, mediump>	mediump_umat3x2;$/;"	t	namespace:glm	typeref:typename:mat<3,2,uint,mediump>
mediump_umat3x2	./glm/gtc/matrix_integer.hpp	/^	typedef mat<3, 2, uint, mediump>			mediump_umat3x2;$/;"	t	namespace:glm	typeref:typename:mat<3,2,uint,mediump>
mediump_umat3x3	./glm/fwd.hpp	/^	typedef mat<3, 3, uint, mediump>	mediump_umat3x3;$/;"	t	namespace:glm	typeref:typename:mat<3,3,uint,mediump>
mediump_umat3x3	./glm/gtc/matrix_integer.hpp	/^	typedef mat<3, 3, uint, mediump>			mediump_umat3x3;$/;"	t	namespace:glm	typeref:typename:mat<3,3,uint,mediump>
mediump_umat3x4	./glm/fwd.hpp	/^	typedef mat<3, 4, uint, mediump>	mediump_umat3x4;$/;"	t	namespace:glm	typeref:typename:mat<3,4,uint,mediump>
mediump_umat3x4	./glm/gtc/matrix_integer.hpp	/^	typedef mat<3, 4, uint, mediump>			mediump_umat3x4;$/;"	t	namespace:glm	typeref:typename:mat<3,4,uint,mediump>
mediump_umat4	./glm/gtc/matrix_integer.hpp	/^	typedef mat<4, 4, uint, mediump>			mediump_umat4;$/;"	t	namespace:glm	typeref:typename:mat<4,4,uint,mediump>
mediump_umat4x2	./glm/fwd.hpp	/^	typedef mat<4, 2, uint, mediump>	mediump_umat4x2;$/;"	t	namespace:glm	typeref:typename:mat<4,2,uint,mediump>
mediump_umat4x2	./glm/gtc/matrix_integer.hpp	/^	typedef mat<4, 2, uint, mediump>			mediump_umat4x2;$/;"	t	namespace:glm	typeref:typename:mat<4,2,uint,mediump>
mediump_umat4x3	./glm/fwd.hpp	/^	typedef mat<4, 3, uint, mediump>	mediump_umat4x3;$/;"	t	namespace:glm	typeref:typename:mat<4,3,uint,mediump>
mediump_umat4x3	./glm/gtc/matrix_integer.hpp	/^	typedef mat<4, 3, uint, mediump>			mediump_umat4x3;$/;"	t	namespace:glm	typeref:typename:mat<4,3,uint,mediump>
mediump_umat4x4	./glm/fwd.hpp	/^	typedef mat<4, 4, uint, mediump>	mediump_umat4x4;$/;"	t	namespace:glm	typeref:typename:mat<4,4,uint,mediump>
mediump_umat4x4	./glm/gtc/matrix_integer.hpp	/^	typedef mat<4, 4, uint, mediump>			mediump_umat4x4;$/;"	t	namespace:glm	typeref:typename:mat<4,4,uint,mediump>
mediump_uvec1	./glm/fwd.hpp	/^	typedef vec<1, uint, mediump>	mediump_uvec1;$/;"	t	namespace:glm	typeref:typename:vec<1,uint,mediump>
mediump_uvec1	./glm/gtc/type_precision.hpp	/^	typedef vec<1, uint, mediump>	mediump_uvec1;$/;"	t	namespace:glm	typeref:typename:vec<1,uint,mediump>
mediump_uvec2	./glm/fwd.hpp	/^	typedef vec<2, uint, mediump>	mediump_uvec2;$/;"	t	namespace:glm	typeref:typename:vec<2,uint,mediump>
mediump_uvec2	./glm/gtc/type_precision.hpp	/^	typedef vec<2, uint, mediump>	mediump_uvec2;$/;"	t	namespace:glm	typeref:typename:vec<2,uint,mediump>
mediump_uvec3	./glm/fwd.hpp	/^	typedef vec<3, uint, mediump>	mediump_uvec3;$/;"	t	namespace:glm	typeref:typename:vec<3,uint,mediump>
mediump_uvec3	./glm/gtc/type_precision.hpp	/^	typedef vec<3, uint, mediump>	mediump_uvec3;$/;"	t	namespace:glm	typeref:typename:vec<3,uint,mediump>
mediump_uvec4	./glm/fwd.hpp	/^	typedef vec<4, uint, mediump>	mediump_uvec4;$/;"	t	namespace:glm	typeref:typename:vec<4,uint,mediump>
mediump_uvec4	./glm/gtc/type_precision.hpp	/^	typedef vec<4, uint, mediump>	mediump_uvec4;$/;"	t	namespace:glm	typeref:typename:vec<4,uint,mediump>
mediump_vec1	./glm/ext/vector_float1_precision.hpp	/^	typedef vec<1, float, mediump>		mediump_vec1;$/;"	t	namespace:glm	typeref:typename:vec<1,float,mediump>
mediump_vec1	./glm/fwd.hpp	/^	typedef vec<1, float, mediump>		mediump_vec1;$/;"	t	namespace:glm	typeref:typename:vec<1,float,mediump>
mediump_vec2	./glm/ext/vector_float2_precision.hpp	/^	typedef vec<2, float, mediump>		mediump_vec2;$/;"	t	namespace:glm	typeref:typename:vec<2,float,mediump>
mediump_vec2	./glm/fwd.hpp	/^	typedef vec<2, float, mediump>		mediump_vec2;$/;"	t	namespace:glm	typeref:typename:vec<2,float,mediump>
mediump_vec3	./glm/ext/vector_float3_precision.hpp	/^	typedef vec<3, float, mediump>		mediump_vec3;$/;"	t	namespace:glm	typeref:typename:vec<3,float,mediump>
mediump_vec3	./glm/fwd.hpp	/^	typedef vec<3, float, mediump>		mediump_vec3;$/;"	t	namespace:glm	typeref:typename:vec<3,float,mediump>
mediump_vec4	./glm/ext/vector_float4_precision.hpp	/^	typedef vec<4, float, mediump>		mediump_vec4;$/;"	t	namespace:glm	typeref:typename:vec<4,float,mediump>
mediump_vec4	./glm/fwd.hpp	/^	typedef vec<4, float, mediump>		mediump_vec4;$/;"	t	namespace:glm	typeref:typename:vec<4,float,mediump>
min	./glm/detail/func_common.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR genType min(genType x, genType y)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR genType
min	./glm/detail/func_common.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<L, T, Q> min(vec<L, T, Q> const& a, T b)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<L,T,Q>
min	./glm/detail/func_common.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<L, T, Q> min(vec<L, T, Q> const& a, vec<L, T, Q> const& b)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<L,T,Q>
min	./glm/ext/scalar_common.inl	/^	GLM_FUNC_QUALIFIER T min(T a, T b, T c)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER T
min	./glm/ext/scalar_common.inl	/^	GLM_FUNC_QUALIFIER T min(T a, T b, T c, T d)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER T
min	./glm/ext/vector_common.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<L, T, Q> min(vec<L, T, Q> const& x, vec<L, T, Q> const& y,/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<L,T,Q>
min	./glm/gtx/extended_min_max.inl	/^	GLM_FUNC_QUALIFIER C<T> min$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER C<T>
min	./glm/gtx/extended_min_max.inl	/^	GLM_FUNC_QUALIFIER T min$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER T
min	./glm/gtx/extended_min_max.inl	/^	GLM_FUNC_QUALIFIER T min($/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER T
mirrorClamp	./glm/ext/scalar_common.inl	/^	GLM_FUNC_QUALIFIER genType mirrorClamp(genType const& Texcoord)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genType
mirrorClamp	./glm/ext/vector_common.inl	/^	GLM_FUNC_QUALIFIER vec<L, T, Q> mirrorClamp(vec<L, T, Q> const& Texcoord)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<L,T,Q>
mirrorRepeat	./glm/ext/scalar_common.inl	/^	GLM_FUNC_QUALIFIER genType mirrorRepeat(genType const& Texcoord)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genType
mirrorRepeat	./glm/ext/vector_common.inl	/^	GLM_FUNC_QUALIFIER vec<L, T, Q> mirrorRepeat(vec<L, T, Q> const& Texcoord)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<L,T,Q>
mix	./glm/detail/func_common.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR genTypeT mix(genTypeT x, genTypeT y, genTypeU a)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR genTypeT
mix	./glm/detail/func_common.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<L, T, Q> mix(vec<L, T, Q> const& x, vec<L, T, Q> const& y,/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<L,T,Q>
mix	./glm/ext/matrix_common.inl	/^	GLM_FUNC_QUALIFIER mat<C, R, T, Q> mix(mat<C, R, T, Q> const& x, mat<C, R, T, Q> const& y, U a)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER mat<C,R,T,Q>
mix	./glm/ext/matrix_common.inl	/^	GLM_FUNC_QUALIFIER mat<C, R, T, Q> mix(mat<C, R, T, Q> const& x, mat<C, R, T, Q> const& y, mat</;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER mat<C,R,T,Q>
mix	./glm/ext/quaternion_common.inl	/^	GLM_FUNC_QUALIFIER qua<T, Q> mix(qua<T, Q> const& x, qua<T, Q> const& y, T a)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER qua<T,Q>
mixedProduct	./glm/gtx/mixed_product.inl	/^	GLM_FUNC_QUALIFIER T mixedProduct$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER T
mod	./glm/detail/func_common.inl	/^	GLM_FUNC_QUALIFIER genType mod(genType x, genType y)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genType
mod	./glm/detail/func_common.inl	/^	GLM_FUNC_QUALIFIER vec<L, T, Q> mod(vec<L, T, Q> const& x, T y)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<L,T,Q>
mod	./glm/detail/func_common.inl	/^	GLM_FUNC_QUALIFIER vec<L, T, Q> mod(vec<L, T, Q> const& x, vec<L, T, Q> const& y)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<L,T,Q>
mod	./glm/gtx/integer.inl	/^	GLM_FUNC_QUALIFIER int mod(int x, int y)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER int
mod	./glm/gtx/integer.inl	/^	GLM_FUNC_QUALIFIER uint mod(uint x, uint y)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER uint
mod289	./glm/detail/_noise.hpp	/^	GLM_FUNC_QUALIFIER T mod289(T const& x)$/;"	f	namespace:glm::detail	typeref:typename:GLM_FUNC_QUALIFIER T
modf	./glm/detail/func_common.inl	/^	GLM_FUNC_QUALIFIER genType modf(genType x, genType & i)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genType
modf	./glm/detail/func_common.inl	/^	GLM_FUNC_QUALIFIER vec<1, T, Q> modf(vec<1, T, Q> const& x, vec<1, T, Q> & i)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<1,T,Q>
modf	./glm/detail/func_common.inl	/^	GLM_FUNC_QUALIFIER vec<2, T, Q> modf(vec<2, T, Q> const& x, vec<2, T, Q> & i)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<2,T,Q>
modf	./glm/detail/func_common.inl	/^	GLM_FUNC_QUALIFIER vec<3, T, Q> modf(vec<3, T, Q> const& x, vec<3, T, Q> & i)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<3,T,Q>
modf	./glm/detail/func_common.inl	/^	GLM_FUNC_QUALIFIER vec<4, T, Q> modf(vec<4, T, Q> const& x, vec<4, T, Q> & i)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<4,T,Q>
msw	./glm/ext/scalar_ulp.inl	/^		int msw;$/;"	m	struct:__anonb0ce8848020a::__anonb0ce88480308	typeref:typename:int	file:
mul_lane	./glm/simd/neon.h	/^		static inline float32x4_t mul_lane(float32x4_t v, float32x4_t vlane, int lane) {$/;"	f	namespace:glm::neon	typeref:typename:float32x4_t
negative	./glm/detail/type_float.hpp	/^		GLM_CONSTEXPR bool negative() const { return i < 0; }$/;"	f	union:glm::detail::float_t	typeref:typename:GLM_CONSTEXPR bool
neon	./glm/simd/neon.h	/^	namespace neon {$/;"	n	namespace:glm
networkId	./GL/glxew.h	/^  int  networkId; $/;"	m	struct:__anonb1a929810208	typeref:typename:int
newline	./glm/gtx/io.hpp	/^			char_type  newline;$/;"	m	class:glm::io::format_punct	typeref:typename:char_type
nextFloat	./glm/ext/scalar_ulp.inl	/^	GLM_FUNC_QUALIFIER T nextFloat(T x, int ULPs)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER T
nextFloat	./glm/ext/scalar_ulp.inl	/^	GLM_FUNC_QUALIFIER double nextFloat(double x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER double
nextFloat	./glm/ext/scalar_ulp.inl	/^	GLM_FUNC_QUALIFIER float nextFloat(float x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER float
nextFloat	./glm/ext/vector_ulp.inl	/^	GLM_FUNC_QUALIFIER vec<L, T, Q> nextFloat(vec<L, T, Q> const& x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<L,T,Q>
nextFloat	./glm/ext/vector_ulp.inl	/^	GLM_FUNC_QUALIFIER vec<L, T, Q> nextFloat(vec<L, T, Q> const& x, int ULPs)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<L,T,Q>
nextFloat	./glm/ext/vector_ulp.inl	/^	GLM_FUNC_QUALIFIER vec<L, T, Q> nextFloat(vec<L, T, Q> const& x, vec<L, int, Q> const& ULPs)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<L,T,Q>
nextMultiple	./glm/ext/scalar_integer.inl	/^	GLM_FUNC_QUALIFIER genIUType nextMultiple(genIUType Source, genIUType Multiple)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genIUType
nextMultiple	./glm/ext/vector_integer.inl	/^	GLM_FUNC_QUALIFIER vec<L, T, Q> nextMultiple(vec<L, T, Q> const& Source, T Multiple)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<L,T,Q>
nextMultiple	./glm/ext/vector_integer.inl	/^	GLM_FUNC_QUALIFIER vec<L, T, Q> nextMultiple(vec<L, T, Q> const& Source, vec<L, T, Q> const& Mu/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<L,T,Q>
nextPowerOfTwo	./glm/ext/scalar_integer.inl	/^	GLM_FUNC_QUALIFIER genIUType nextPowerOfTwo(genIUType value)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genIUType
nextPowerOfTwo	./glm/ext/vector_integer.inl	/^	GLM_FUNC_QUALIFIER vec<L, T, Q> nextPowerOfTwo(vec<L, T, Q> const& v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<L,T,Q>
next_float	./glm/gtc/ulp.inl	/^	GLM_FUNC_QUALIFIER T next_float(T x, int ULPs)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER T
next_float	./glm/gtc/ulp.inl	/^	GLM_FUNC_QUALIFIER double next_float(double x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER double
next_float	./glm/gtc/ulp.inl	/^	GLM_FUNC_QUALIFIER float next_float(float x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER float
next_float	./glm/gtc/ulp.inl	/^	GLM_FUNC_QUALIFIER vec<L, T, Q> next_float(vec<L, T, Q> const& x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<L,T,Q>
next_float	./glm/gtc/ulp.inl	/^	GLM_FUNC_QUALIFIER vec<L, T, Q> next_float(vec<L, T, Q> const& x, int ULPs)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<L,T,Q>
next_float	./glm/gtc/ulp.inl	/^	GLM_FUNC_QUALIFIER vec<L, T, Q> next_float(vec<L, T, Q> const& x, vec<L, int, Q> const& ULPs)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<L,T,Q>
nextafter	./glm/ext/scalar_ulp.inl	/^	GLM_FUNC_QUALIFIER double nextafter(double x, double y)$/;"	f	namespace:glm::detail	typeref:typename:GLM_FUNC_QUALIFIER double
nextafterf	./glm/ext/scalar_ulp.inl	/^	GLM_FUNC_QUALIFIER float nextafterf(float x, float y)$/;"	f	namespace:glm::detail	typeref:typename:GLM_FUNC_QUALIFIER float
nlz	./glm/gtx/integer.inl	/^	GLM_FUNC_QUALIFIER unsigned int nlz(unsigned int x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER unsigned int
normalize	./glm/detail/func_geometric.inl	/^	GLM_FUNC_QUALIFIER vec<L, T, Q> normalize(vec<L, T, Q> const& x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<L,T,Q>
normalize	./glm/ext/quaternion_geometric.inl	/^	GLM_FUNC_QUALIFIER qua<T, Q> normalize(qua<T, Q> const& q)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER qua<T,Q>
normalize	./glm/gtx/dual_quaternion.inl	/^	GLM_FUNC_QUALIFIER tdualquat<T, Q> normalize(tdualquat<T, Q> const& q)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tdualquat<T,Q>
normalizeDot	./glm/gtx/normalize_dot.inl	/^	GLM_FUNC_QUALIFIER T normalizeDot(vec<L, T, Q> const& x, vec<L, T, Q> const& y)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER T
notEqual	./glm/detail/func_vector_relational.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<L, bool, Q> notEqual(vec<L, T, Q> const& x, vec<L, T, Q> c/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<L,bool,Q>
notEqual	./glm/ext/matrix_relational.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<C, bool, Q> notEqual(mat<C, R, T, Q> const& a, mat<C, R, T/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<C,bool,Q>
notEqual	./glm/ext/quaternion_relational.inl	/^	GLM_FUNC_QUALIFIER vec<4, bool, Q> notEqual(qua<T, Q> const& x, qua<T, Q> const& y)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<4,bool,Q>
notEqual	./glm/ext/quaternion_relational.inl	/^	GLM_FUNC_QUALIFIER vec<4, bool, Q> notEqual(qua<T, Q> const& x, qua<T, Q> const& y, T epsilon)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<4,bool,Q>
notEqual	./glm/ext/scalar_relational.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR bool notEqual(genType const& x, genType const& y, genType cons/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR bool
notEqual	./glm/ext/scalar_relational.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR bool notEqual(genType const& x, genType const& y, int ULPs)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR bool
notEqual	./glm/ext/vector_relational.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<L, bool, Q> notEqual(vec<L, T, Q> const& x, vec<L, T, Q> c/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<L,bool,Q>
notEqual	./glm/gtx/scalar_relational.inl	/^	GLM_FUNC_QUALIFIER bool notEqual$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER bool
not_	./glm/detail/func_vector_relational.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<L, bool, Q> not_(vec<L, bool, Q> const& v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<L,bool,Q>
not_	./glm/gtx/scalar_relational.inl	/^	GLM_FUNC_QUALIFIER bool not_$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER bool
one	./glm/gtc/constants.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR genType one()$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR genType
one_over_pi	./glm/gtc/constants.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR genType one_over_pi()$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR genType
one_over_root_two	./glm/gtc/constants.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR genType one_over_root_two()$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR genType
one_over_two_pi	./glm/gtc/constants.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR genType one_over_two_pi()$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR genType
ones32	./glm/gtx/integer.inl	/^	GLM_FUNC_QUALIFIER unsigned int ones32(unsigned int x)$/;"	f	namespace:glm::detail	typeref:typename:GLM_FUNC_QUALIFIER unsigned int
op_div	./glm/detail/_swizzle.hpp	/^		struct op_div$/;"	s	struct:glm::detail::_swizzle_base2
op_equal	./glm/detail/_swizzle.hpp	/^		struct op_equal$/;"	s	struct:glm::detail::_swizzle_base2
op_minus	./glm/detail/_swizzle.hpp	/^		struct op_minus$/;"	s	struct:glm::detail::_swizzle_base2
op_mul	./glm/detail/_swizzle.hpp	/^		struct op_mul$/;"	s	struct:glm::detail::_swizzle_base2
op_plus	./glm/detail/_swizzle.hpp	/^		struct op_plus$/;"	s	struct:glm::detail::_swizzle_base2
openBounded	./glm/gtx/common.inl	/^	GLM_FUNC_QUALIFIER vec<L, bool, Q> openBounded(vec<L, T, Q> const& Value, vec<L, T, Q> const& M/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<L,bool,Q>
operator !=	./glm/detail/type_mat2x2.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR bool operator!=(mat<2, 2, T, Q> const& m1, mat<2, 2, T, Q> con/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR bool
operator !=	./glm/detail/type_mat2x3.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR bool operator!=(mat<2, 3, T, Q> const& m1, mat<2, 3, T, Q> con/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR bool
operator !=	./glm/detail/type_mat2x4.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR bool operator!=(mat<2, 4, T, Q> const& m1, mat<2, 4, T, Q> con/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR bool
operator !=	./glm/detail/type_mat3x2.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR bool operator!=(mat<3, 2, T, Q> const& m1, mat<3, 2, T, Q> con/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR bool
operator !=	./glm/detail/type_mat3x3.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR bool operator!=(mat<3, 3, T, Q> const& m1, mat<3, 3, T, Q> con/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR bool
operator !=	./glm/detail/type_mat3x4.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR bool operator!=(mat<3, 4, T, Q> const& m1, mat<3, 4, T, Q> con/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR bool
operator !=	./glm/detail/type_mat4x2.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR bool operator!=(mat<4, 2, T, Q> const& m1, mat<4, 2, T, Q> con/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR bool
operator !=	./glm/detail/type_mat4x3.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR bool operator!=(mat<4, 3, T, Q> const& m1, mat<4, 3, T, Q> con/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR bool
operator !=	./glm/detail/type_mat4x4.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR bool operator!=(mat<4, 4, T, Q> const& m1, mat<4, 4, T, Q> con/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR bool
operator !=	./glm/detail/type_quat.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR bool operator!=(qua<T, Q> const& q1, qua<T, Q> const& q2)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR bool
operator !=	./glm/detail/type_vec1.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR bool operator!=(vec<1, T, Q> const& v1, vec<1, T, Q> const& v2/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR bool
operator !=	./glm/detail/type_vec2.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR bool operator!=(vec<2, T, Q> const& v1, vec<2, T, Q> const& v2/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR bool
operator !=	./glm/detail/type_vec3.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR bool operator!=(vec<3, T, Q> const& v1, vec<3, T, Q> const& v2/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR bool
operator !=	./glm/detail/type_vec4.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR bool operator!=(vec<4, T, Q> const& v1, vec<4, T, Q> const& v2/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR bool
operator !=	./glm/gtx/dual_quaternion.inl	/^	GLM_FUNC_QUALIFIER bool operator!=(tdualquat<T, Q> const& q1, tdualquat<T, Q> const& q2)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER bool
operator %	./glm/detail/type_vec1.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<1, T, Q> operator%(T scalar, vec<1, T, Q> const& v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<1,T,Q>
operator %	./glm/detail/type_vec1.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<1, T, Q> operator%(vec<1, T, Q> const& v, T scalar)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<1,T,Q>
operator %	./glm/detail/type_vec1.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<1, T, Q> operator%(vec<1, T, Q> const& v1, vec<1, T, Q> co/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<1,T,Q>
operator %	./glm/detail/type_vec2.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<2, T, Q> operator%(T scalar, vec<2, T, Q> const& v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<2,T,Q>
operator %	./glm/detail/type_vec2.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<2, T, Q> operator%(vec<1, T, Q> const& v1, vec<2, T, Q> co/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<2,T,Q>
operator %	./glm/detail/type_vec2.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<2, T, Q> operator%(vec<2, T, Q> const& v, T scalar)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<2,T,Q>
operator %	./glm/detail/type_vec2.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<2, T, Q> operator%(vec<2, T, Q> const& v1, vec<1, T, Q> co/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<2,T,Q>
operator %	./glm/detail/type_vec2.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<2, T, Q> operator%(vec<2, T, Q> const& v1, vec<2, T, Q> co/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<2,T,Q>
operator %	./glm/detail/type_vec3.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<3, T, Q> operator%(T scalar, vec<3, T, Q> const& v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<3,T,Q>
operator %	./glm/detail/type_vec3.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<3, T, Q> operator%(vec<1, T, Q> const& scalar, vec<3, T, Q/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<3,T,Q>
operator %	./glm/detail/type_vec3.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<3, T, Q> operator%(vec<3, T, Q> const& v, T scalar)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<3,T,Q>
operator %	./glm/detail/type_vec3.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<3, T, Q> operator%(vec<3, T, Q> const& v, vec<1, T, Q> con/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<3,T,Q>
operator %	./glm/detail/type_vec3.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<3, T, Q> operator%(vec<3, T, Q> const& v1, vec<3, T, Q> co/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<3,T,Q>
operator %	./glm/detail/type_vec4.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4, T, Q> operator%(T scalar, vec<4, T, Q> const& v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4,T,Q>
operator %	./glm/detail/type_vec4.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4, T, Q> operator%(vec<1, T, Q> const& scalar, vec<4, T, Q/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4,T,Q>
operator %	./glm/detail/type_vec4.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4, T, Q> operator%(vec<4, T, Q> const& v, T scalar)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4,T,Q>
operator %	./glm/detail/type_vec4.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4, T, Q> operator%(vec<4, T, Q> const& v1, vec<1, T, Q> co/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4,T,Q>
operator %	./glm/detail/type_vec4.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4, T, Q> operator%(vec<4, T, Q> const& v1, vec<4, T, Q> co/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4,T,Q>
operator %=	./glm/detail/type_vec1.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<1, T, Q> & vec<1, T, Q>::operator%=(U scalar)$/;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<1,T,Q> &
operator %=	./glm/detail/type_vec1.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<1, T, Q> & vec<1, T, Q>::operator%=(vec<1, U, Q> const& v)$/;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<1,T,Q> &
operator %=	./glm/detail/type_vec2.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<2, T, Q> & vec<2, T, Q>::operator%=(U scalar)$/;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<2,T,Q> &
operator %=	./glm/detail/type_vec2.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<2, T, Q> & vec<2, T, Q>::operator%=(vec<1, U, Q> const& v)$/;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<2,T,Q> &
operator %=	./glm/detail/type_vec2.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<2, T, Q> & vec<2, T, Q>::operator%=(vec<2, U, Q> const& v)$/;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<2,T,Q> &
operator %=	./glm/detail/type_vec3.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<3, T, Q> & vec<3, T, Q>::operator%=(U scalar)$/;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<3,T,Q> &
operator %=	./glm/detail/type_vec3.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<3, T, Q> & vec<3, T, Q>::operator%=(vec<1, U, Q> const& v)$/;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<3,T,Q> &
operator %=	./glm/detail/type_vec3.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<3, T, Q> & vec<3, T, Q>::operator%=(vec<3, U, Q> const& v)$/;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<3,T,Q> &
operator %=	./glm/detail/type_vec4.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4, T, Q> & vec<4, T, Q>::operator%=(U scalar)$/;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4,T,Q> &
operator %=	./glm/detail/type_vec4.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4, T, Q> & vec<4, T, Q>::operator%=(vec<1, U, Q> const& v)$/;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4,T,Q> &
operator %=	./glm/detail/type_vec4.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4, T, Q> & vec<4, T, Q>::operator%=(vec<4, U, Q> const& v)$/;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4,T,Q> &
operator &	./glm/detail/type_vec1.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<1, T, Q> operator&(T scalar, vec<1, T, Q> const& v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<1,T,Q>
operator &	./glm/detail/type_vec1.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<1, T, Q> operator&(vec<1, T, Q> const& v, T scalar)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<1,T,Q>
operator &	./glm/detail/type_vec1.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<1, T, Q> operator&(vec<1, T, Q> const& v1, vec<1, T, Q> co/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<1,T,Q>
operator &	./glm/detail/type_vec2.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<2, T, Q> operator&(T scalar, vec<2, T, Q> const& v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<2,T,Q>
operator &	./glm/detail/type_vec2.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<2, T, Q> operator&(vec<1, T, Q> const& v1, vec<2, T, Q> co/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<2,T,Q>
operator &	./glm/detail/type_vec2.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<2, T, Q> operator&(vec<2, T, Q> const& v, T scalar)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<2,T,Q>
operator &	./glm/detail/type_vec2.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<2, T, Q> operator&(vec<2, T, Q> const& v1, vec<1, T, Q> co/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<2,T,Q>
operator &	./glm/detail/type_vec2.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<2, T, Q> operator&(vec<2, T, Q> const& v1, vec<2, T, Q> co/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<2,T,Q>
operator &	./glm/detail/type_vec3.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<3, T, Q> operator&(T scalar, vec<3, T, Q> const& v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<3,T,Q>
operator &	./glm/detail/type_vec3.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<3, T, Q> operator&(vec<1, T, Q> const& scalar, vec<3, T, Q/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<3,T,Q>
operator &	./glm/detail/type_vec3.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<3, T, Q> operator&(vec<3, T, Q> const& v, T scalar)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<3,T,Q>
operator &	./glm/detail/type_vec3.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<3, T, Q> operator&(vec<3, T, Q> const& v, vec<1, T, Q> con/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<3,T,Q>
operator &	./glm/detail/type_vec3.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<3, T, Q> operator&(vec<3, T, Q> const& v1, vec<3, T, Q> co/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<3,T,Q>
operator &	./glm/detail/type_vec4.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4, T, Q> operator&(T scalar, vec<4, T, Q> const& v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4,T,Q>
operator &	./glm/detail/type_vec4.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4, T, Q> operator&(vec<1, T, Q> const& v1, vec<4, T, Q> co/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4,T,Q>
operator &	./glm/detail/type_vec4.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4, T, Q> operator&(vec<4, T, Q> const& v, T scalar)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4,T,Q>
operator &	./glm/detail/type_vec4.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4, T, Q> operator&(vec<4, T, Q> const& v, vec<1, T, Q> con/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4,T,Q>
operator &	./glm/detail/type_vec4.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4, T, Q> operator&(vec<4, T, Q> const& v1, vec<4, T, Q> co/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4,T,Q>
operator &&	./glm/detail/type_vec1.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<1, bool, Q> operator&&(vec<1, bool, Q> const& v1, vec<1, b/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<1,bool,Q>
operator &&	./glm/detail/type_vec2.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<2, bool, Q> operator&&(vec<2, bool, Q> const& v1, vec<2, b/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<2,bool,Q>
operator &&	./glm/detail/type_vec3.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<3, bool, Q> operator&&(vec<3, bool, Q> const& v1, vec<3, b/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<3,bool,Q>
operator &&	./glm/detail/type_vec4.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4, bool, Q> operator&&(vec<4, bool, Q> const& v1, vec<4, b/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4,bool,Q>
operator &=	./glm/detail/type_vec1.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<1, T, Q> & vec<1, T, Q>::operator&=(U scalar)$/;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<1,T,Q> &
operator &=	./glm/detail/type_vec1.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<1, T, Q> & vec<1, T, Q>::operator&=(vec<1, U, Q> const& v)$/;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<1,T,Q> &
operator &=	./glm/detail/type_vec2.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<2, T, Q> & vec<2, T, Q>::operator&=(U scalar)$/;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<2,T,Q> &
operator &=	./glm/detail/type_vec2.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<2, T, Q> & vec<2, T, Q>::operator&=(vec<1, U, Q> const& v)$/;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<2,T,Q> &
operator &=	./glm/detail/type_vec2.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<2, T, Q> & vec<2, T, Q>::operator&=(vec<2, U, Q> const& v)$/;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<2,T,Q> &
operator &=	./glm/detail/type_vec3.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<3, T, Q> & vec<3, T, Q>::operator&=(U scalar)$/;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<3,T,Q> &
operator &=	./glm/detail/type_vec3.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<3, T, Q> & vec<3, T, Q>::operator&=(vec<1, U, Q> const& v)$/;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<3,T,Q> &
operator &=	./glm/detail/type_vec3.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<3, T, Q> & vec<3, T, Q>::operator&=(vec<3, U, Q> const& v)$/;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<3,T,Q> &
operator &=	./glm/detail/type_vec4.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4, T, Q> & vec<4, T, Q>::operator&=(U scalar)$/;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4,T,Q> &
operator &=	./glm/detail/type_vec4.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4, T, Q> & vec<4, T, Q>::operator&=(vec<1, U, Q> const& v)$/;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4,T,Q> &
operator &=	./glm/detail/type_vec4.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4, T, Q> & vec<4, T, Q>::operator&=(vec<4, U, Q> const& v)$/;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4,T,Q> &
operator ()	./glm/detail/_swizzle.hpp	/^		GLM_FUNC_QUALIFIER vec<2, T, Q> operator ()()  const { return vec<2, T, Q>(this->elem(E0), thi/;"	f	struct:glm::detail::_swizzle_base1	typeref:typename:GLM_FUNC_QUALIFIER vec<2,T,Q>
operator ()	./glm/detail/_swizzle.hpp	/^		GLM_FUNC_QUALIFIER vec<3, T, Q> operator ()()  const { return vec<3, T, Q>(this->elem(E0), thi/;"	f	struct:glm::detail::_swizzle_base1	typeref:typename:GLM_FUNC_QUALIFIER vec<3,T,Q>
operator ()	./glm/detail/_swizzle.hpp	/^		GLM_FUNC_QUALIFIER vec<4, T, Q> operator ()()  const { return vec<4, T, Q>(this->elem(E0), thi/;"	f	struct:glm::detail::_swizzle_base1	typeref:typename:GLM_FUNC_QUALIFIER vec<4,T,Q>
operator ()	./glm/detail/type_vec4_simd.inl	/^			GLM_FUNC_QUALIFIER vec<4, float, Q> operator ()()  const$/;"	f	struct:glm::detail::_swizzle_base1	typeref:typename:GLM_FUNC_QUALIFIER vec<4,float,Q>	file:
operator ()	./glm/detail/type_vec4_simd.inl	/^			GLM_FUNC_QUALIFIER vec<4, int, Q> operator ()()  const$/;"	f	struct:glm::detail::_swizzle_base1	typeref:typename:GLM_FUNC_QUALIFIER vec<4,int,Q>	file:
operator ()	./glm/detail/type_vec4_simd.inl	/^			GLM_FUNC_QUALIFIER vec<4, uint, Q> operator ()()  const$/;"	f	struct:glm::detail::_swizzle_base1	typeref:typename:GLM_FUNC_QUALIFIER vec<4,uint,Q>	file:
operator ()	./glm/gtx/hash.inl	/^	GLM_FUNC_QUALIFIER size_t hash<glm::mat<2, 2, T, Q> >::operator()(glm::mat<2, 2, T, Q> const& m/;"	f	class:std::hash::mat	typeref:typename:GLM_FUNC_QUALIFIER size_t
operator ()	./glm/gtx/hash.inl	/^	GLM_FUNC_QUALIFIER size_t hash<glm::mat<2, 3, T, Q> >::operator()(glm::mat<2, 3, T, Q> const& m/;"	f	class:std::hash::mat	typeref:typename:GLM_FUNC_QUALIFIER size_t
operator ()	./glm/gtx/hash.inl	/^	GLM_FUNC_QUALIFIER size_t hash<glm::mat<2, 4, T, Q> >::operator()(glm::mat<2, 4, T, Q> const& m/;"	f	class:std::hash::mat	typeref:typename:GLM_FUNC_QUALIFIER size_t
operator ()	./glm/gtx/hash.inl	/^	GLM_FUNC_QUALIFIER size_t hash<glm::mat<3, 2, T, Q> >::operator()(glm::mat<3, 2, T, Q> const& m/;"	f	class:std::hash::mat	typeref:typename:GLM_FUNC_QUALIFIER size_t
operator ()	./glm/gtx/hash.inl	/^	GLM_FUNC_QUALIFIER size_t hash<glm::mat<3, 3, T, Q> >::operator()(glm::mat<3, 3, T, Q> const& m/;"	f	class:std::hash::mat	typeref:typename:GLM_FUNC_QUALIFIER size_t
operator ()	./glm/gtx/hash.inl	/^	GLM_FUNC_QUALIFIER size_t hash<glm::mat<3, 4, T, Q> >::operator()(glm::mat<3, 4, T, Q> const& m/;"	f	class:std::hash::mat	typeref:typename:GLM_FUNC_QUALIFIER size_t
operator ()	./glm/gtx/hash.inl	/^	GLM_FUNC_QUALIFIER size_t hash<glm::mat<4, 2, T,Q> >::operator()(glm::mat<4, 2, T,Q> const& m) /;"	f	class:std::hash::mat	typeref:typename:GLM_FUNC_QUALIFIER size_t
operator ()	./glm/gtx/hash.inl	/^	GLM_FUNC_QUALIFIER size_t hash<glm::mat<4, 3, T,Q> >::operator()(glm::mat<4, 3, T,Q> const& m) /;"	f	class:std::hash::mat	typeref:typename:GLM_FUNC_QUALIFIER size_t
operator ()	./glm/gtx/hash.inl	/^	GLM_FUNC_QUALIFIER size_t hash<glm::mat<4, 4, T,Q> >::operator()(glm::mat<4, 4, T, Q> const& m)/;"	f	class:std::hash::mat	typeref:typename:GLM_FUNC_QUALIFIER size_t
operator ()	./glm/gtx/hash.inl	/^	GLM_FUNC_QUALIFIER size_t hash<glm::qua<T, Q> >::operator()(glm::qua<T,Q> const& q) const GLM_N/;"	f	class:std::hash::qua	typeref:typename:GLM_FUNC_QUALIFIER size_t
operator ()	./glm/gtx/hash.inl	/^	GLM_FUNC_QUALIFIER size_t hash<glm::tdualquat<T, Q> >::operator()(glm::tdualquat<T, Q> const& q/;"	f	class:std::hash::tdualquat	typeref:typename:GLM_FUNC_QUALIFIER size_t
operator ()	./glm/gtx/hash.inl	/^	GLM_FUNC_QUALIFIER size_t hash<glm::vec<1, T, Q> >::operator()(glm::vec<1, T, Q> const& v) cons/;"	f	class:std::hash::vec	typeref:typename:GLM_FUNC_QUALIFIER size_t
operator ()	./glm/gtx/hash.inl	/^	GLM_FUNC_QUALIFIER size_t hash<glm::vec<2, T, Q> >::operator()(glm::vec<2, T, Q> const& v) cons/;"	f	class:std::hash::vec	typeref:typename:GLM_FUNC_QUALIFIER size_t
operator ()	./glm/gtx/hash.inl	/^	GLM_FUNC_QUALIFIER size_t hash<glm::vec<3, T, Q> >::operator()(glm::vec<3, T, Q> const& v) cons/;"	f	class:std::hash::vec	typeref:typename:GLM_FUNC_QUALIFIER size_t
operator ()	./glm/gtx/hash.inl	/^	GLM_FUNC_QUALIFIER size_t hash<glm::vec<4, T, Q> >::operator()(glm::vec<4, T, Q> const& v) cons/;"	f	class:std::hash::vec	typeref:typename:GLM_FUNC_QUALIFIER size_t
operator () 	./glm/detail/_swizzle.hpp	/^			GLM_FUNC_QUALIFIER void operator() (T& e, T& t) const{ e *= t; }$/;"	f	struct:glm::detail::_swizzle_base2::op_mul	typeref:typename:GLM_FUNC_QUALIFIER void
operator () 	./glm/detail/_swizzle.hpp	/^			GLM_FUNC_QUALIFIER void operator() (T& e, T& t) const{ e += t; }$/;"	f	struct:glm::detail::_swizzle_base2::op_plus	typeref:typename:GLM_FUNC_QUALIFIER void
operator () 	./glm/detail/_swizzle.hpp	/^			GLM_FUNC_QUALIFIER void operator() (T& e, T& t) const{ e -= t; }$/;"	f	struct:glm::detail::_swizzle_base2::op_minus	typeref:typename:GLM_FUNC_QUALIFIER void
operator () 	./glm/detail/_swizzle.hpp	/^			GLM_FUNC_QUALIFIER void operator() (T& e, T& t) const{ e = t; }$/;"	f	struct:glm::detail::_swizzle_base2::op_equal	typeref:typename:GLM_FUNC_QUALIFIER void
operator () 	./glm/detail/_swizzle.hpp	/^			GLM_FUNC_QUALIFIER void operator() (T& e, T& t) const{ e \/= t; }$/;"	f	struct:glm::detail::_swizzle_base2::op_div	typeref:typename:GLM_FUNC_QUALIFIER void
operator *	./glm/detail/func_matrix_simd.inl	/^	operator*(mat<4, 4, float, Q> const & m1, mat<4, 4, float, Q> const & m2)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER typename std::enable_if<detail::is_aligned<Q>::value,mat<4,4,float,Q>>::type
operator *	./glm/detail/type_mat2x2.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<2, 2, T, Q> operator*(T scalar, mat<2, 2, T, Q> const& m)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<2,2,T,Q>
operator *	./glm/detail/type_mat2x2.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<2, 2, T, Q> operator*(mat<2, 2, T, Q> const& m, T scalar)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<2,2,T,Q>
operator *	./glm/detail/type_mat2x2.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<2, 2, T, Q> operator*(mat<2, 2, T, Q> const& m1, mat<2, 2,/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<2,2,T,Q>
operator *	./glm/detail/type_mat2x2.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<3, 2, T, Q> operator*(mat<2, 2, T, Q> const& m1, mat<3, 2,/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<3,2,T,Q>
operator *	./glm/detail/type_mat2x2.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<4, 2, T, Q> operator*(mat<2, 2, T, Q> const& m1, mat<4, 2,/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<4,2,T,Q>
operator *	./glm/detail/type_mat2x2.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR typename mat<2, 2, T, Q>::col_type operator*$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR typename mat<2,2,T,Q>::col_type
operator *	./glm/detail/type_mat2x2.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR typename mat<2, 2, T, Q>::row_type operator*$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR typename mat<2,2,T,Q>::row_type
operator *	./glm/detail/type_mat2x3.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<2, 3, T, Q> operator*(T scalar, mat<2, 3, T, Q> const& m)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<2,3,T,Q>
operator *	./glm/detail/type_mat2x3.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<2, 3, T, Q> operator*(mat<2, 3, T, Q> const& m, T scalar)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<2,3,T,Q>
operator *	./glm/detail/type_mat2x3.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<2, 3, T, Q> operator*(mat<2, 3, T, Q> const& m1, mat<2, 2,/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<2,3,T,Q>
operator *	./glm/detail/type_mat2x3.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<3, 3, T, Q> operator*(mat<2, 3, T, Q> const& m1, mat<3, 2,/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<3,3,T,Q>
operator *	./glm/detail/type_mat2x3.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<4, 3, T, Q> operator*(mat<2, 3, T, Q> const& m1, mat<4, 2,/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<4,3,T,Q>
operator *	./glm/detail/type_mat2x3.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR typename mat<2, 3, T, Q>::col_type operator*$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR typename mat<2,3,T,Q>::col_type
operator *	./glm/detail/type_mat2x3.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR typename mat<2, 3, T, Q>::row_type operator*$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR typename mat<2,3,T,Q>::row_type
operator *	./glm/detail/type_mat2x4.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<2, 4, T, Q> operator*(T scalar, mat<2, 4, T, Q> const& m)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<2,4,T,Q>
operator *	./glm/detail/type_mat2x4.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<2, 4, T, Q> operator*(mat<2, 4, T, Q> const& m, T scalar)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<2,4,T,Q>
operator *	./glm/detail/type_mat2x4.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<2, 4, T, Q> operator*(mat<2, 4, T, Q> const& m1, mat<2, 2,/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<2,4,T,Q>
operator *	./glm/detail/type_mat2x4.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<3, 4, T, Q> operator*(mat<2, 4, T, Q> const& m1, mat<3, 2,/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<3,4,T,Q>
operator *	./glm/detail/type_mat2x4.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<4, 4, T, Q> operator*(mat<2, 4, T, Q> const& m1, mat<4, 2,/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<4,4,T,Q>
operator *	./glm/detail/type_mat2x4.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR typename mat<2, 4, T, Q>::col_type operator*(mat<2, 4, T, Q> c/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR typename mat<2,4,T,Q>::col_type
operator *	./glm/detail/type_mat2x4.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR typename mat<2, 4, T, Q>::row_type operator*(typename mat<2, 4/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR typename mat<2,4,T,Q>::row_type
operator *	./glm/detail/type_mat3x2.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<2, 2, T, Q> operator*(mat<3, 2, T, Q> const& m1, mat<2, 3,/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<2,2,T,Q>
operator *	./glm/detail/type_mat3x2.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<3, 2, T, Q> operator*(T scalar, mat<3, 2, T, Q> const& m)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<3,2,T,Q>
operator *	./glm/detail/type_mat3x2.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<3, 2, T, Q> operator*(mat<3, 2, T, Q> const& m, T scalar)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<3,2,T,Q>
operator *	./glm/detail/type_mat3x2.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<3, 2, T, Q> operator*(mat<3, 2, T, Q> const& m1, mat<3, 3,/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<3,2,T,Q>
operator *	./glm/detail/type_mat3x2.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<4, 2, T, Q> operator*(mat<3, 2, T, Q> const& m1, mat<4, 3,/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<4,2,T,Q>
operator *	./glm/detail/type_mat3x2.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR typename mat<3, 2, T, Q>::col_type operator*(mat<3, 2, T, Q> c/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR typename mat<3,2,T,Q>::col_type
operator *	./glm/detail/type_mat3x2.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR typename mat<3, 2, T, Q>::row_type operator*(typename mat<3, 2/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR typename mat<3,2,T,Q>::row_type
operator *	./glm/detail/type_mat3x3.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<2, 3, T, Q> operator*(mat<3, 3, T, Q> const& m1, mat<2, 3,/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<2,3,T,Q>
operator *	./glm/detail/type_mat3x3.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<3, 3, T, Q> operator*(T scalar, mat<3, 3, T, Q> const& m)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<3,3,T,Q>
operator *	./glm/detail/type_mat3x3.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<3, 3, T, Q> operator*(mat<3, 3, T, Q> const& m, T scalar)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<3,3,T,Q>
operator *	./glm/detail/type_mat3x3.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<3, 3, T, Q> operator*(mat<3, 3, T, Q> const& m1, mat<3, 3,/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<3,3,T,Q>
operator *	./glm/detail/type_mat3x3.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<4, 3, T, Q> operator*(mat<3, 3, T, Q> const& m1, mat<4, 3,/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<4,3,T,Q>
operator *	./glm/detail/type_mat3x3.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR typename mat<3, 3, T, Q>::col_type operator*(mat<3, 3, T, Q> c/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR typename mat<3,3,T,Q>::col_type
operator *	./glm/detail/type_mat3x3.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR typename mat<3, 3, T, Q>::row_type operator*(typename mat<3, 3/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR typename mat<3,3,T,Q>::row_type
operator *	./glm/detail/type_mat3x4.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<2, 4, T, Q> operator*(mat<3, 4, T, Q> const& m1, mat<2, 3,/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<2,4,T,Q>
operator *	./glm/detail/type_mat3x4.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<3, 4, T, Q> operator*(T scalar, mat<3, 4, T, Q> const& m)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<3,4,T,Q>
operator *	./glm/detail/type_mat3x4.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<3, 4, T, Q> operator*(mat<3, 4, T, Q> const& m, T scalar)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<3,4,T,Q>
operator *	./glm/detail/type_mat3x4.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<3, 4, T, Q> operator*(mat<3, 4, T, Q> const& m1, mat<3, 3,/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<3,4,T,Q>
operator *	./glm/detail/type_mat3x4.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<4, 4, T, Q> operator*(mat<3, 4, T, Q> const& m1, mat<4, 3,/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<4,4,T,Q>
operator *	./glm/detail/type_mat3x4.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR typename mat<3, 4, T, Q>::col_type operator*$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR typename mat<3,4,T,Q>::col_type
operator *	./glm/detail/type_mat3x4.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR typename mat<3, 4, T, Q>::row_type operator*$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR typename mat<3,4,T,Q>::row_type
operator *	./glm/detail/type_mat4x2.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<2, 2, T, Q> operator*(mat<4, 2, T, Q> const& m1, mat<2, 4,/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<2,2,T,Q>
operator *	./glm/detail/type_mat4x2.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<3, 2, T, Q> operator*(mat<4, 2, T, Q> const& m1, mat<3, 4,/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<3,2,T,Q>
operator *	./glm/detail/type_mat4x2.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<4, 2, T, Q> operator*(T scalar, mat<4, 2, T, Q> const& m)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<4,2,T,Q>
operator *	./glm/detail/type_mat4x2.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<4, 2, T, Q> operator*(mat<4, 2, T, Q> const& m, T scalar)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<4,2,T,Q>
operator *	./glm/detail/type_mat4x2.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<4, 2, T, Q> operator*(mat<4, 2, T, Q> const& m1, mat<4, 4,/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<4,2,T,Q>
operator *	./glm/detail/type_mat4x2.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR typename mat<4, 2, T, Q>::col_type operator*(mat<4, 2, T, Q> c/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR typename mat<4,2,T,Q>::col_type
operator *	./glm/detail/type_mat4x2.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR typename mat<4, 2, T, Q>::row_type operator*(typename mat<4, 2/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR typename mat<4,2,T,Q>::row_type
operator *	./glm/detail/type_mat4x3.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<2, 3, T, Q> operator*(mat<4, 3, T, Q> const& m1, mat<2, 4,/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<2,3,T,Q>
operator *	./glm/detail/type_mat4x3.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<3, 3, T, Q> operator*(mat<4, 3, T, Q> const& m1, mat<3, 4,/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<3,3,T,Q>
operator *	./glm/detail/type_mat4x3.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<4, 3, T, Q> operator*(T scalar, mat<4, 3, T, Q> const& m)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<4,3,T,Q>
operator *	./glm/detail/type_mat4x3.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<4, 3, T, Q> operator*(mat<4, 3, T, Q> const& m, T scalar)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<4,3,T,Q>
operator *	./glm/detail/type_mat4x3.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<4, 3, T, Q> operator*(mat<4, 3, T, Q> const& m1, mat<4, 4,/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<4,3,T,Q>
operator *	./glm/detail/type_mat4x3.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR typename mat<4, 3, T, Q>::col_type operator*$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR typename mat<4,3,T,Q>::col_type
operator *	./glm/detail/type_mat4x3.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR typename mat<4, 3, T, Q>::row_type operator*$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR typename mat<4,3,T,Q>::row_type
operator *	./glm/detail/type_mat4x4.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<2, 4, T, Q> operator*(mat<4, 4, T, Q> const& m1, mat<2, 4,/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<2,4,T,Q>
operator *	./glm/detail/type_mat4x4.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<3, 4, T, Q> operator*(mat<4, 4, T, Q> const& m1, mat<3, 4,/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<3,4,T,Q>
operator *	./glm/detail/type_mat4x4.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<4, 4, T, Q> operator*(T scalar, mat<4, 4, T, Q> const& m)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<4,4,T,Q>
operator *	./glm/detail/type_mat4x4.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<4, 4, T, Q> operator*(mat<4, 4, T, Q> const& m, T scalar)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<4,4,T,Q>
operator *	./glm/detail/type_mat4x4.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<4, 4, T, Q> operator*(mat<4, 4, T, Q> const& m1, mat<4, 4,/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<4,4,T,Q>
operator *	./glm/detail/type_mat4x4.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR typename mat<4, 4, T, Q>::col_type operator*$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR typename mat<4,4,T,Q>::col_type
operator *	./glm/detail/type_mat4x4.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR typename mat<4, 4, T, Q>::row_type operator*$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR typename mat<4,4,T,Q>::row_type
operator *	./glm/detail/type_quat.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR qua<T, Q> operator*(T const& s, qua<T, Q> const& q)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR qua<T,Q>
operator *	./glm/detail/type_quat.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR qua<T, Q> operator*(qua<T, Q> const& q, T const& s)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR qua<T,Q>
operator *	./glm/detail/type_quat.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR qua<T, Q> operator*(qua<T, Q> const& q, qua<T, Q> const& p)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR qua<T,Q>
operator *	./glm/detail/type_quat.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<3, T, Q> operator*(qua<T, Q> const& q, vec<3, T, Q> const&/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<3,T,Q>
operator *	./glm/detail/type_quat.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<3, T, Q> operator*(vec<3, T, Q> const& v, qua<T, Q> const&/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<3,T,Q>
operator *	./glm/detail/type_quat.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4, T, Q> operator*(qua<T, Q> const& q, vec<4, T, Q> const&/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4,T,Q>
operator *	./glm/detail/type_quat.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4, T, Q> operator*(vec<4, T, Q> const& v, qua<T, Q> const&/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4,T,Q>
operator *	./glm/detail/type_vec1.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<1, T, Q> operator*(T scalar, vec<1, T, Q> const& v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<1,T,Q>
operator *	./glm/detail/type_vec1.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<1, T, Q> operator*(vec<1, T, Q> const& v, T scalar)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<1,T,Q>
operator *	./glm/detail/type_vec1.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<1, T, Q> operator*(vec<1, T, Q> const& v1, vec<1, T, Q> co/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<1,T,Q>
operator *	./glm/detail/type_vec2.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<2, T, Q> operator*(T scalar, vec<2, T, Q> const& v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<2,T,Q>
operator *	./glm/detail/type_vec2.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<2, T, Q> operator*(vec<1, T, Q> const& v1, vec<2, T, Q> co/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<2,T,Q>
operator *	./glm/detail/type_vec2.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<2, T, Q> operator*(vec<2, T, Q> const& v, T scalar)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<2,T,Q>
operator *	./glm/detail/type_vec2.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<2, T, Q> operator*(vec<2, T, Q> const& v1, vec<1, T, Q> co/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<2,T,Q>
operator *	./glm/detail/type_vec2.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<2, T, Q> operator*(vec<2, T, Q> const& v1, vec<2, T, Q> co/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<2,T,Q>
operator *	./glm/detail/type_vec3.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<3, T, Q> operator*(T scalar, vec<3, T, Q> const& v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<3,T,Q>
operator *	./glm/detail/type_vec3.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<3, T, Q> operator*(vec<1, T, Q> const& scalar, vec<3, T, Q/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<3,T,Q>
operator *	./glm/detail/type_vec3.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<3, T, Q> operator*(vec<3, T, Q> const& v, T scalar)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<3,T,Q>
operator *	./glm/detail/type_vec3.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<3, T, Q> operator*(vec<3, T, Q> const& v, vec<1, T, Q> con/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<3,T,Q>
operator *	./glm/detail/type_vec3.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<3, T, Q> operator*(vec<3, T, Q> const& v1, vec<3, T, Q> co/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<3,T,Q>
operator *	./glm/detail/type_vec4.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4, T, Q> operator*(T scalar, vec<4, T, Q> const& v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4,T,Q>
operator *	./glm/detail/type_vec4.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4, T, Q> operator*(vec<1, T, Q> const& v1, vec<4, T, Q> co/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4,T,Q>
operator *	./glm/detail/type_vec4.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4, T, Q> operator*(vec<4, T, Q> const& v, T scalar)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4,T,Q>
operator *	./glm/detail/type_vec4.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4, T, Q> operator*(vec<4, T, Q> const& v1, vec<1, T, Q> co/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4,T,Q>
operator *	./glm/detail/type_vec4.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4, T, Q> operator*(vec<4, T, Q> const& v1, vec<4, T, Q> co/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4,T,Q>
operator *	./glm/gtx/dual_quaternion.inl	/^	GLM_FUNC_QUALIFIER tdualquat<T, Q> operator*(T const& s, tdualquat<T, Q> const& q)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tdualquat<T,Q>
operator *	./glm/gtx/dual_quaternion.inl	/^	GLM_FUNC_QUALIFIER tdualquat<T, Q> operator*(tdualquat<T, Q> const& p, tdualquat<T, Q> const& o/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tdualquat<T,Q>
operator *	./glm/gtx/dual_quaternion.inl	/^	GLM_FUNC_QUALIFIER tdualquat<T, Q> operator*(tdualquat<T, Q> const& q, T const& s)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tdualquat<T,Q>
operator *	./glm/gtx/dual_quaternion.inl	/^	GLM_FUNC_QUALIFIER vec<3, T, Q> operator*(tdualquat<T, Q> const& q, vec<3, T, Q> const& v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<3,T,Q>
operator *	./glm/gtx/dual_quaternion.inl	/^	GLM_FUNC_QUALIFIER vec<3, T, Q> operator*(vec<3, T, Q> const& v,	tdualquat<T, Q> const& q)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<3,T,Q>
operator *	./glm/gtx/dual_quaternion.inl	/^	GLM_FUNC_QUALIFIER vec<4, T, Q> operator*(tdualquat<T, Q> const& q, vec<4, T, Q> const& v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<4,T,Q>
operator *	./glm/gtx/dual_quaternion.inl	/^	GLM_FUNC_QUALIFIER vec<4, T, Q> operator*(vec<4, T, Q> const& v,	tdualquat<T, Q> const& q)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<4,T,Q>
operator *=	./glm/detail/_swizzle.hpp	/^		GLM_FUNC_QUALIFIER void operator *= (vec<N, T, Q> const& that)$/;"	f	struct:glm::detail::_swizzle_base2	typeref:typename:GLM_FUNC_QUALIFIER void
operator *=	./glm/detail/type_mat2x2.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<2, 2, T, Q>& mat<2, 2, T, Q>::operator*=(U scalar)$/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<2,2,T,Q> &
operator *=	./glm/detail/type_mat2x2.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<2, 2, T, Q>& mat<2, 2, T, Q>::operator*=(mat<2, 2, U, Q> c/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<2,2,T,Q> &
operator *=	./glm/detail/type_mat2x3.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<2, 3, T, Q>& mat<2, 3, T, Q>::operator*=(U s)$/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<2,3,T,Q> &
operator *=	./glm/detail/type_mat2x4.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<2, 4, T, Q>& mat<2, 4, T, Q>::operator*=(U s)$/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<2,4,T,Q> &
operator *=	./glm/detail/type_mat3x2.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<3, 2, T, Q>& mat<3, 2, T, Q>::operator*=(U s)$/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<3,2,T,Q> &
operator *=	./glm/detail/type_mat3x3.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<3, 3, T, Q> & mat<3, 3, T, Q>::operator*=(U s)$/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<3,3,T,Q> &
operator *=	./glm/detail/type_mat3x3.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<3, 3, T, Q> & mat<3, 3, T, Q>::operator*=(mat<3, 3, U, Q> /;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<3,3,T,Q> &
operator *=	./glm/detail/type_mat3x4.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<3, 4, T, Q>& mat<3, 4, T, Q>::operator*=(U s)$/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<3,4,T,Q> &
operator *=	./glm/detail/type_mat4x2.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<4, 2, T, Q> & mat<4, 2, T, Q>::operator*=(U s)$/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<4,2,T,Q> &
operator *=	./glm/detail/type_mat4x3.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<4, 3, T, Q> & mat<4, 3, T, Q>::operator*=(U s)$/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<4,3,T,Q> &
operator *=	./glm/detail/type_mat4x4.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<4, 4, T, Q> & mat<4, 4, T, Q>::operator*=(U s)$/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<4,4,T,Q> &
operator *=	./glm/detail/type_mat4x4.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<4, 4, T, Q> & mat<4, 4, T, Q>::operator*=(mat<4, 4, U, Q> /;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<4,4,T,Q> &
operator *=	./glm/detail/type_quat.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR qua<T, Q> & qua<T, Q>::operator*=(U s)$/;"	f	class:glm::qua	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR qua<T,Q> &
operator *=	./glm/detail/type_quat.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR qua<T, Q> & qua<T, Q>::operator*=(qua<U, Q> const& r)$/;"	f	class:glm::qua	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR qua<T,Q> &
operator *=	./glm/detail/type_vec1.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<1, T, Q> & vec<1, T, Q>::operator*=(U scalar)$/;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<1,T,Q> &
operator *=	./glm/detail/type_vec1.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<1, T, Q> & vec<1, T, Q>::operator*=(vec<1, U, Q> const& v)$/;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<1,T,Q> &
operator *=	./glm/detail/type_vec2.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<2, T, Q> & vec<2, T, Q>::operator*=(U scalar)$/;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<2,T,Q> &
operator *=	./glm/detail/type_vec2.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<2, T, Q> & vec<2, T, Q>::operator*=(vec<1, U, Q> const& v)$/;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<2,T,Q> &
operator *=	./glm/detail/type_vec2.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<2, T, Q> & vec<2, T, Q>::operator*=(vec<2, U, Q> const& v)$/;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<2,T,Q> &
operator *=	./glm/detail/type_vec3.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<3, T, Q> & vec<3, T, Q>::operator*=(U scalar)$/;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<3,T,Q> &
operator *=	./glm/detail/type_vec3.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<3, T, Q> & vec<3, T, Q>::operator*=(vec<1, U, Q> const& v)$/;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<3,T,Q> &
operator *=	./glm/detail/type_vec3.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<3, T, Q> & vec<3, T, Q>::operator*=(vec<3, U, Q> const& v)$/;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<3,T,Q> &
operator *=	./glm/detail/type_vec4.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4, T, Q> & vec<4, T, Q>::operator*=(U scalar)$/;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4,T,Q> &
operator *=	./glm/detail/type_vec4.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4, T, Q> & vec<4, T, Q>::operator*=(vec<1, U, Q> const& v)$/;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4,T,Q> &
operator *=	./glm/detail/type_vec4.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4, T, Q> & vec<4, T, Q>::operator*=(vec<4, U, Q> const& v)$/;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4,T,Q> &
operator *=	./glm/gtx/dual_quaternion.inl	/^	GLM_FUNC_QUALIFIER tdualquat<T, Q> & tdualquat<T, Q>::operator*=(U s)$/;"	f	class:glm::tdualquat	typeref:typename:GLM_FUNC_QUALIFIER tdualquat<T,Q> &
operator +	./glm/detail/type_mat2x2.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<2, 2, T, Q> operator+(T scalar, mat<2, 2, T, Q> const& m)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<2,2,T,Q>
operator +	./glm/detail/type_mat2x2.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<2, 2, T, Q> operator+(mat<2, 2, T, Q> const& m)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<2,2,T,Q>
operator +	./glm/detail/type_mat2x2.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<2, 2, T, Q> operator+(mat<2, 2, T, Q> const& m, T scalar)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<2,2,T,Q>
operator +	./glm/detail/type_mat2x2.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<2, 2, T, Q> operator+(mat<2, 2, T, Q> const& m1, mat<2, 2,/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<2,2,T,Q>
operator +	./glm/detail/type_mat2x3.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<2, 3, T, Q> operator+(mat<2, 3, T, Q> const& m)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<2,3,T,Q>
operator +	./glm/detail/type_mat2x3.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<2, 3, T, Q> operator+(mat<2, 3, T, Q> const& m, T scalar)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<2,3,T,Q>
operator +	./glm/detail/type_mat2x3.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<2, 3, T, Q> operator+(mat<2, 3, T, Q> const& m1, mat<2, 3,/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<2,3,T,Q>
operator +	./glm/detail/type_mat2x4.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<2, 4, T, Q> operator+(mat<2, 4, T, Q> const& m)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<2,4,T,Q>
operator +	./glm/detail/type_mat2x4.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<2, 4, T, Q> operator+(mat<2, 4, T, Q> const& m, T scalar)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<2,4,T,Q>
operator +	./glm/detail/type_mat2x4.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<2, 4, T, Q> operator+(mat<2, 4, T, Q> const& m1, mat<2, 4,/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<2,4,T,Q>
operator +	./glm/detail/type_mat3x2.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<3, 2, T, Q> operator+(mat<3, 2, T, Q> const& m)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<3,2,T,Q>
operator +	./glm/detail/type_mat3x2.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<3, 2, T, Q> operator+(mat<3, 2, T, Q> const& m, T scalar)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<3,2,T,Q>
operator +	./glm/detail/type_mat3x2.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<3, 2, T, Q> operator+(mat<3, 2, T, Q> const& m1, mat<3, 2,/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<3,2,T,Q>
operator +	./glm/detail/type_mat3x3.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<3, 3, T, Q> operator+(T scalar, mat<3, 3, T, Q> const& m)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<3,3,T,Q>
operator +	./glm/detail/type_mat3x3.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<3, 3, T, Q> operator+(mat<3, 3, T, Q> const& m)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<3,3,T,Q>
operator +	./glm/detail/type_mat3x3.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<3, 3, T, Q> operator+(mat<3, 3, T, Q> const& m, T scalar)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<3,3,T,Q>
operator +	./glm/detail/type_mat3x3.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<3, 3, T, Q> operator+(mat<3, 3, T, Q> const& m1, mat<3, 3,/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<3,3,T,Q>
operator +	./glm/detail/type_mat3x4.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<3, 4, T, Q> operator+(mat<3, 4, T, Q> const& m)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<3,4,T,Q>
operator +	./glm/detail/type_mat3x4.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<3, 4, T, Q> operator+(mat<3, 4, T, Q> const& m, T scalar)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<3,4,T,Q>
operator +	./glm/detail/type_mat3x4.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<3, 4, T, Q> operator+(mat<3, 4, T, Q> const& m1, mat<3, 4,/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<3,4,T,Q>
operator +	./glm/detail/type_mat4x2.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<4, 2, T, Q> operator+(mat<4, 2, T, Q> const& m)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<4,2,T,Q>
operator +	./glm/detail/type_mat4x2.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<4, 2, T, Q> operator+(mat<4, 2, T, Q> const& m, T scalar)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<4,2,T,Q>
operator +	./glm/detail/type_mat4x2.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<4, 2, T, Q> operator+(mat<4, 2, T, Q> const& m1, mat<4, 2,/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<4,2,T,Q>
operator +	./glm/detail/type_mat4x3.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<4, 3, T, Q> operator+(mat<4, 3, T, Q> const& m)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<4,3,T,Q>
operator +	./glm/detail/type_mat4x3.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<4, 3, T, Q> operator+(mat<4, 3, T, Q> const& m, T scalar)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<4,3,T,Q>
operator +	./glm/detail/type_mat4x3.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<4, 3, T, Q> operator+(mat<4, 3, T, Q> const& m1, mat<4, 3,/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<4,3,T,Q>
operator +	./glm/detail/type_mat4x4.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<4, 4, T, Q> operator+(T scalar, mat<4, 4, T, Q> const& m)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<4,4,T,Q>
operator +	./glm/detail/type_mat4x4.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<4, 4, T, Q> operator+(mat<4, 4, T, Q> const& m)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<4,4,T,Q>
operator +	./glm/detail/type_mat4x4.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<4, 4, T, Q> operator+(mat<4, 4, T, Q> const& m, T scalar)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<4,4,T,Q>
operator +	./glm/detail/type_mat4x4.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<4, 4, T, Q> operator+(mat<4, 4, T, Q> const& m1, mat<4, 4,/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<4,4,T,Q>
operator +	./glm/detail/type_quat.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR qua<T, Q> operator+(qua<T, Q> const& q)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR qua<T,Q>
operator +	./glm/detail/type_quat.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR qua<T, Q> operator+(qua<T, Q> const& q, qua<T, Q> const& p)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR qua<T,Q>
operator +	./glm/detail/type_vec1.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<1, T, Q> operator+(T scalar, vec<1, T, Q> const& v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<1,T,Q>
operator +	./glm/detail/type_vec1.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<1, T, Q> operator+(vec<1, T, Q> const& v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<1,T,Q>
operator +	./glm/detail/type_vec1.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<1, T, Q> operator+(vec<1, T, Q> const& v, T scalar)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<1,T,Q>
operator +	./glm/detail/type_vec1.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<1, T, Q> operator+(vec<1, T, Q> const& v1, vec<1, T, Q> co/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<1,T,Q>
operator +	./glm/detail/type_vec2.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<2, T, Q> operator+(T scalar, vec<2, T, Q> const& v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<2,T,Q>
operator +	./glm/detail/type_vec2.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<2, T, Q> operator+(vec<1, T, Q> const& v1, vec<2, T, Q> co/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<2,T,Q>
operator +	./glm/detail/type_vec2.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<2, T, Q> operator+(vec<2, T, Q> const& v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<2,T,Q>
operator +	./glm/detail/type_vec2.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<2, T, Q> operator+(vec<2, T, Q> const& v, T scalar)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<2,T,Q>
operator +	./glm/detail/type_vec2.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<2, T, Q> operator+(vec<2, T, Q> const& v1, vec<1, T, Q> co/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<2,T,Q>
operator +	./glm/detail/type_vec2.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<2, T, Q> operator+(vec<2, T, Q> const& v1, vec<2, T, Q> co/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<2,T,Q>
operator +	./glm/detail/type_vec3.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<3, T, Q> operator+(T scalar, vec<3, T, Q> const& v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<3,T,Q>
operator +	./glm/detail/type_vec3.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<3, T, Q> operator+(vec<1, T, Q> const& scalar, vec<3, T, Q/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<3,T,Q>
operator +	./glm/detail/type_vec3.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<3, T, Q> operator+(vec<3, T, Q> const& v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<3,T,Q>
operator +	./glm/detail/type_vec3.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<3, T, Q> operator+(vec<3, T, Q> const& v, T scalar)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<3,T,Q>
operator +	./glm/detail/type_vec3.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<3, T, Q> operator+(vec<3, T, Q> const& v, vec<1, T, Q> con/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<3,T,Q>
operator +	./glm/detail/type_vec3.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<3, T, Q> operator+(vec<3, T, Q> const& v1, vec<3, T, Q> co/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<3,T,Q>
operator +	./glm/detail/type_vec4.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4, T, Q> operator+(T scalar, vec<4, T, Q> const& v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4,T,Q>
operator +	./glm/detail/type_vec4.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4, T, Q> operator+(vec<1, T, Q> const& v1, vec<4, T, Q> co/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4,T,Q>
operator +	./glm/detail/type_vec4.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4, T, Q> operator+(vec<4, T, Q> const& v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4,T,Q>
operator +	./glm/detail/type_vec4.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4, T, Q> operator+(vec<4, T, Q> const& v, T scalar)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4,T,Q>
operator +	./glm/detail/type_vec4.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4, T, Q> operator+(vec<4, T, Q> const& v1, vec<1, T, Q> co/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4,T,Q>
operator +	./glm/detail/type_vec4.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4, T, Q> operator+(vec<4, T, Q> const& v1, vec<4, T, Q> co/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4,T,Q>
operator +	./glm/gtx/dual_quaternion.inl	/^	GLM_FUNC_QUALIFIER tdualquat<T, Q> operator+(tdualquat<T, Q> const& q)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tdualquat<T,Q>
operator +	./glm/gtx/dual_quaternion.inl	/^	GLM_FUNC_QUALIFIER tdualquat<T, Q> operator+(tdualquat<T, Q> const& q, tdualquat<T, Q> const& p/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tdualquat<T,Q>
operator ++	./glm/detail/type_mat2x2.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<2, 2, T, Q> mat<2, 2, T, Q>::operator++(int)$/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<2,2,T,Q>
operator ++	./glm/detail/type_mat2x2.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<2, 2, T, Q>& mat<2, 2, T, Q>::operator++()$/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<2,2,T,Q> &
operator ++	./glm/detail/type_mat2x3.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<2, 3, T, Q> & mat<2, 3, T, Q>::operator++()$/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<2,3,T,Q> &
operator ++	./glm/detail/type_mat2x3.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<2, 3, T, Q> mat<2, 3, T, Q>::operator++(int)$/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<2,3,T,Q>
operator ++	./glm/detail/type_mat2x4.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<2, 4, T, Q> mat<2, 4, T, Q>::operator++(int)$/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<2,4,T,Q>
operator ++	./glm/detail/type_mat2x4.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<2, 4, T, Q>& mat<2, 4, T, Q>::operator++()$/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<2,4,T,Q> &
operator ++	./glm/detail/type_mat3x2.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<3, 2, T, Q> mat<3, 2, T, Q>::operator++(int)$/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<3,2,T,Q>
operator ++	./glm/detail/type_mat3x2.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<3, 2, T, Q>& mat<3, 2, T, Q>::operator++()$/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<3,2,T,Q> &
operator ++	./glm/detail/type_mat3x3.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<3, 3, T, Q> & mat<3, 3, T, Q>::operator++()$/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<3,3,T,Q> &
operator ++	./glm/detail/type_mat3x3.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<3, 3, T, Q> mat<3, 3, T, Q>::operator++(int)$/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<3,3,T,Q>
operator ++	./glm/detail/type_mat3x4.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<3, 4, T, Q> mat<3, 4, T, Q>::operator++(int)$/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<3,4,T,Q>
operator ++	./glm/detail/type_mat3x4.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<3, 4, T, Q>& mat<3, 4, T, Q>::operator++()$/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<3,4,T,Q> &
operator ++	./glm/detail/type_mat4x2.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<4, 2, T, Q> & mat<4, 2, T, Q>::operator++()$/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<4,2,T,Q> &
operator ++	./glm/detail/type_mat4x2.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<4, 2, T, Q> mat<4, 2, T, Q>::operator++(int)$/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<4,2,T,Q>
operator ++	./glm/detail/type_mat4x3.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<4, 3, T, Q> & mat<4, 3, T, Q>::operator++()$/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<4,3,T,Q> &
operator ++	./glm/detail/type_mat4x3.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<4, 3, T, Q> mat<4, 3, T, Q>::operator++(int)$/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<4,3,T,Q>
operator ++	./glm/detail/type_mat4x4.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<4, 4, T, Q> & mat<4, 4, T, Q>::operator++()$/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<4,4,T,Q> &
operator ++	./glm/detail/type_mat4x4.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<4, 4, T, Q> mat<4, 4, T, Q>::operator++(int)$/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<4,4,T,Q>
operator ++	./glm/detail/type_vec1.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<1, T, Q> & vec<1, T, Q>::operator++()$/;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<1,T,Q> &
operator ++	./glm/detail/type_vec1.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<1, T, Q> vec<1, T, Q>::operator++(int)$/;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<1,T,Q>
operator ++	./glm/detail/type_vec2.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<2, T, Q> & vec<2, T, Q>::operator++()$/;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<2,T,Q> &
operator ++	./glm/detail/type_vec2.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<2, T, Q> vec<2, T, Q>::operator++(int)$/;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<2,T,Q>
operator ++	./glm/detail/type_vec3.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<3, T, Q> & vec<3, T, Q>::operator++()$/;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<3,T,Q> &
operator ++	./glm/detail/type_vec3.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<3, T, Q> vec<3, T, Q>::operator++(int)$/;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<3,T,Q>
operator ++	./glm/detail/type_vec4.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4, T, Q> & vec<4, T, Q>::operator++()$/;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4,T,Q> &
operator ++	./glm/detail/type_vec4.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4, T, Q> vec<4, T, Q>::operator++(int)$/;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4,T,Q>
operator +=	./glm/detail/_swizzle.hpp	/^		GLM_FUNC_QUALIFIER void operator += (vec<N, T, Q> const& that)$/;"	f	struct:glm::detail::_swizzle_base2	typeref:typename:GLM_FUNC_QUALIFIER void
operator +=	./glm/detail/type_mat2x2.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<2, 2, T, Q>& mat<2, 2, T, Q>::operator+=(U scalar)$/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<2,2,T,Q> &
operator +=	./glm/detail/type_mat2x2.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<2, 2, T, Q>& mat<2, 2, T, Q>::operator+=(mat<2, 2, U, Q> c/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<2,2,T,Q> &
operator +=	./glm/detail/type_mat2x3.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<2, 3, T, Q> & mat<2, 3, T, Q>::operator+=(U s)$/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<2,3,T,Q> &
operator +=	./glm/detail/type_mat2x3.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<2, 3, T, Q>& mat<2, 3, T, Q>::operator+=(mat<2, 3, U, Q> c/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<2,3,T,Q> &
operator +=	./glm/detail/type_mat2x4.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<2, 4, T, Q>& mat<2, 4, T, Q>::operator+=(U s)$/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<2,4,T,Q> &
operator +=	./glm/detail/type_mat2x4.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<2, 4, T, Q>& mat<2, 4, T, Q>::operator+=(mat<2, 4, U, Q> c/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<2,4,T,Q> &
operator +=	./glm/detail/type_mat3x2.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<3, 2, T, Q>& mat<3, 2, T, Q>::operator+=(U s)$/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<3,2,T,Q> &
operator +=	./glm/detail/type_mat3x2.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<3, 2, T, Q>& mat<3, 2, T, Q>::operator+=(mat<3, 2, U, Q> c/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<3,2,T,Q> &
operator +=	./glm/detail/type_mat3x3.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<3, 3, T, Q> & mat<3, 3, T, Q>::operator+=(U s)$/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<3,3,T,Q> &
operator +=	./glm/detail/type_mat3x3.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<3, 3, T, Q> & mat<3, 3, T, Q>::operator+=(mat<3, 3, U, Q> /;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<3,3,T,Q> &
operator +=	./glm/detail/type_mat3x4.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<3, 4, T, Q>& mat<3, 4, T, Q>::operator+=(U s)$/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<3,4,T,Q> &
operator +=	./glm/detail/type_mat3x4.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<3, 4, T, Q>& mat<3, 4, T, Q>::operator+=(mat<3, 4, U, Q> c/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<3,4,T,Q> &
operator +=	./glm/detail/type_mat4x2.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<4, 2, T, Q> & mat<4, 2, T, Q>::operator+=(U s)$/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<4,2,T,Q> &
operator +=	./glm/detail/type_mat4x2.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<4, 2, T, Q> & mat<4, 2, T, Q>::operator+=(mat<4, 2, U, Q> /;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<4,2,T,Q> &
operator +=	./glm/detail/type_mat4x3.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<4, 3, T, Q> & mat<4, 3, T, Q>::operator+=(U s)$/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<4,3,T,Q> &
operator +=	./glm/detail/type_mat4x3.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<4, 3, T, Q> & mat<4, 3, T, Q>::operator+=(mat<4, 3, U, Q> /;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<4,3,T,Q> &
operator +=	./glm/detail/type_mat4x4.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<4, 4, T, Q>& mat<4, 4, T, Q>::operator+=(U s)$/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<4,4,T,Q> &
operator +=	./glm/detail/type_mat4x4.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<4, 4, T, Q>& mat<4, 4, T, Q>::operator+=(mat<4, 4, U, Q> c/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<4,4,T,Q> &
operator +=	./glm/detail/type_quat.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR qua<T, Q> & qua<T, Q>::operator+=(qua<U, Q> const& q)$/;"	f	class:glm::qua	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR qua<T,Q> &
operator +=	./glm/detail/type_vec1.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<1, T, Q> & vec<1, T, Q>::operator+=(U scalar)$/;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<1,T,Q> &
operator +=	./glm/detail/type_vec1.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<1, T, Q> & vec<1, T, Q>::operator+=(vec<1, U, Q> const& v)$/;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<1,T,Q> &
operator +=	./glm/detail/type_vec2.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<2, T, Q> & vec<2, T, Q>::operator+=(U scalar)$/;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<2,T,Q> &
operator +=	./glm/detail/type_vec2.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<2, T, Q> & vec<2, T, Q>::operator+=(vec<1, U, Q> const& v)$/;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<2,T,Q> &
operator +=	./glm/detail/type_vec2.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<2, T, Q> & vec<2, T, Q>::operator+=(vec<2, U, Q> const& v)$/;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<2,T,Q> &
operator +=	./glm/detail/type_vec3.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<3, T, Q> & vec<3, T, Q>::operator+=(U scalar)$/;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<3,T,Q> &
operator +=	./glm/detail/type_vec3.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<3, T, Q> & vec<3, T, Q>::operator+=(vec<1, U, Q> const& v)$/;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<3,T,Q> &
operator +=	./glm/detail/type_vec3.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<3, T, Q> & vec<3, T, Q>::operator+=(vec<3, U, Q> const& v)$/;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<3,T,Q> &
operator +=	./glm/detail/type_vec4.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4, T, Q> & vec<4, T, Q>::operator+=(U scalar)$/;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4,T,Q> &
operator +=	./glm/detail/type_vec4.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4, T, Q> & vec<4, T, Q>::operator+=(vec<1, U, Q> const& v)$/;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4,T,Q> &
operator +=	./glm/detail/type_vec4.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4, T, Q> & vec<4, T, Q>::operator+=(vec<4, U, Q> const& v)$/;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4,T,Q> &
operator -	./glm/detail/type_mat2x2.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<2, 2, T, Q> operator-(T scalar, mat<2, 2, T, Q> const& m)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<2,2,T,Q>
operator -	./glm/detail/type_mat2x2.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<2, 2, T, Q> operator-(mat<2, 2, T, Q> const& m)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<2,2,T,Q>
operator -	./glm/detail/type_mat2x2.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<2, 2, T, Q> operator-(mat<2, 2, T, Q> const& m, T scalar)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<2,2,T,Q>
operator -	./glm/detail/type_mat2x2.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<2, 2, T, Q> operator-(mat<2, 2, T, Q> const& m1, mat<2, 2,/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<2,2,T,Q>
operator -	./glm/detail/type_mat2x3.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<2, 3, T, Q> operator-(mat<2, 3, T, Q> const& m)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<2,3,T,Q>
operator -	./glm/detail/type_mat2x3.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<2, 3, T, Q> operator-(mat<2, 3, T, Q> const& m, T scalar)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<2,3,T,Q>
operator -	./glm/detail/type_mat2x3.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<2, 3, T, Q> operator-(mat<2, 3, T, Q> const& m1, mat<2, 3,/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<2,3,T,Q>
operator -	./glm/detail/type_mat2x4.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<2, 4, T, Q> operator-(mat<2, 4, T, Q> const& m)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<2,4,T,Q>
operator -	./glm/detail/type_mat2x4.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<2, 4, T, Q> operator-(mat<2, 4, T, Q> const& m, T scalar)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<2,4,T,Q>
operator -	./glm/detail/type_mat2x4.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<2, 4, T, Q> operator-(mat<2, 4, T, Q> const& m1, mat<2, 4,/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<2,4,T,Q>
operator -	./glm/detail/type_mat3x2.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<3, 2, T, Q> operator-(mat<3, 2, T, Q> const& m)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<3,2,T,Q>
operator -	./glm/detail/type_mat3x2.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<3, 2, T, Q> operator-(mat<3, 2, T, Q> const& m, T scalar)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<3,2,T,Q>
operator -	./glm/detail/type_mat3x2.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<3, 2, T, Q> operator-(mat<3, 2, T, Q> const& m1, mat<3, 2,/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<3,2,T,Q>
operator -	./glm/detail/type_mat3x3.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<3, 3, T, Q> operator-(T scalar, mat<3, 3, T, Q> const& m)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<3,3,T,Q>
operator -	./glm/detail/type_mat3x3.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<3, 3, T, Q> operator-(mat<3, 3, T, Q> const& m)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<3,3,T,Q>
operator -	./glm/detail/type_mat3x3.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<3, 3, T, Q> operator-(mat<3, 3, T, Q> const& m, T scalar)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<3,3,T,Q>
operator -	./glm/detail/type_mat3x3.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<3, 3, T, Q> operator-(mat<3, 3, T, Q> const& m1, mat<3, 3,/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<3,3,T,Q>
operator -	./glm/detail/type_mat3x4.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<3, 4, T, Q> operator-(mat<3, 4, T, Q> const& m)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<3,4,T,Q>
operator -	./glm/detail/type_mat3x4.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<3, 4, T, Q> operator-(mat<3, 4, T, Q> const& m,	T scalar)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<3,4,T,Q>
operator -	./glm/detail/type_mat3x4.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<3, 4, T, Q> operator-(mat<3, 4, T, Q> const& m1, mat<3, 4,/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<3,4,T,Q>
operator -	./glm/detail/type_mat4x2.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<4, 2, T, Q> operator-(mat<4, 2, T, Q> const& m)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<4,2,T,Q>
operator -	./glm/detail/type_mat4x2.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<4, 2, T, Q> operator-(mat<4, 2, T, Q> const& m, T scalar)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<4,2,T,Q>
operator -	./glm/detail/type_mat4x2.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<4, 2, T, Q> operator-(mat<4, 2, T, Q> const& m1, mat<4, 2,/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<4,2,T,Q>
operator -	./glm/detail/type_mat4x3.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<4, 3, T, Q> operator-(mat<4, 3, T, Q> const& m)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<4,3,T,Q>
operator -	./glm/detail/type_mat4x3.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<4, 3, T, Q> operator-(mat<4, 3, T, Q> const& m, T scalar)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<4,3,T,Q>
operator -	./glm/detail/type_mat4x3.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<4, 3, T, Q> operator-(mat<4, 3, T, Q> const& m1, mat<4, 3,/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<4,3,T,Q>
operator -	./glm/detail/type_mat4x4.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<4, 4, T, Q> operator-(T scalar, mat<4, 4, T, Q> const& m)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<4,4,T,Q>
operator -	./glm/detail/type_mat4x4.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<4, 4, T, Q> operator-(mat<4, 4, T, Q> const& m)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<4,4,T,Q>
operator -	./glm/detail/type_mat4x4.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<4, 4, T, Q> operator-(mat<4, 4, T, Q> const& m, T scalar)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<4,4,T,Q>
operator -	./glm/detail/type_mat4x4.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<4, 4, T, Q> operator-(mat<4, 4, T, Q> const& m1, mat<4, 4,/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<4,4,T,Q>
operator -	./glm/detail/type_quat.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR qua<T, Q> operator-(qua<T, Q> const& q)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR qua<T,Q>
operator -	./glm/detail/type_quat.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR qua<T, Q> operator-(qua<T, Q> const& q, qua<T, Q> const& p)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR qua<T,Q>
operator -	./glm/detail/type_vec1.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<1, T, Q> operator-(T scalar, vec<1, T, Q> const& v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<1,T,Q>
operator -	./glm/detail/type_vec1.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<1, T, Q> operator-(vec<1, T, Q> const& v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<1,T,Q>
operator -	./glm/detail/type_vec1.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<1, T, Q> operator-(vec<1, T, Q> const& v, T scalar)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<1,T,Q>
operator -	./glm/detail/type_vec1.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<1, T, Q> operator-(vec<1, T, Q> const& v1, vec<1, T, Q> co/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<1,T,Q>
operator -	./glm/detail/type_vec2.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<2, T, Q> operator-(T scalar, vec<2, T, Q> const& v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<2,T,Q>
operator -	./glm/detail/type_vec2.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<2, T, Q> operator-(vec<1, T, Q> const& v1, vec<2, T, Q> co/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<2,T,Q>
operator -	./glm/detail/type_vec2.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<2, T, Q> operator-(vec<2, T, Q> const& v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<2,T,Q>
operator -	./glm/detail/type_vec2.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<2, T, Q> operator-(vec<2, T, Q> const& v, T scalar)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<2,T,Q>
operator -	./glm/detail/type_vec2.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<2, T, Q> operator-(vec<2, T, Q> const& v1, vec<1, T, Q> co/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<2,T,Q>
operator -	./glm/detail/type_vec2.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<2, T, Q> operator-(vec<2, T, Q> const& v1, vec<2, T, Q> co/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<2,T,Q>
operator -	./glm/detail/type_vec3.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<3, T, Q> operator-(T scalar, vec<3, T, Q> const& v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<3,T,Q>
operator -	./glm/detail/type_vec3.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<3, T, Q> operator-(vec<1, T, Q> const& scalar, vec<3, T, Q/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<3,T,Q>
operator -	./glm/detail/type_vec3.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<3, T, Q> operator-(vec<3, T, Q> const& v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<3,T,Q>
operator -	./glm/detail/type_vec3.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<3, T, Q> operator-(vec<3, T, Q> const& v, T scalar)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<3,T,Q>
operator -	./glm/detail/type_vec3.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<3, T, Q> operator-(vec<3, T, Q> const& v, vec<1, T, Q> con/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<3,T,Q>
operator -	./glm/detail/type_vec3.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<3, T, Q> operator-(vec<3, T, Q> const& v1, vec<3, T, Q> co/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<3,T,Q>
operator -	./glm/detail/type_vec4.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4, T, Q> operator-(T scalar, vec<4, T, Q> const& v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4,T,Q>
operator -	./glm/detail/type_vec4.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4, T, Q> operator-(vec<1, T, Q> const& v1, vec<4, T, Q> co/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4,T,Q>
operator -	./glm/detail/type_vec4.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4, T, Q> operator-(vec<4, T, Q> const& v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4,T,Q>
operator -	./glm/detail/type_vec4.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4, T, Q> operator-(vec<4, T, Q> const& v, T scalar)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4,T,Q>
operator -	./glm/detail/type_vec4.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4, T, Q> operator-(vec<4, T, Q> const& v1, vec<1, T, Q> co/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4,T,Q>
operator -	./glm/detail/type_vec4.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4, T, Q> operator-(vec<4, T, Q> const& v1, vec<4, T, Q> co/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4,T,Q>
operator -	./glm/gtx/dual_quaternion.inl	/^	GLM_FUNC_QUALIFIER tdualquat<T, Q> operator-(tdualquat<T, Q> const& q)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tdualquat<T,Q>
operator --	./glm/detail/type_mat2x2.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<2, 2, T, Q> mat<2, 2, T, Q>::operator--(int)$/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<2,2,T,Q>
operator --	./glm/detail/type_mat2x2.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<2, 2, T, Q>& mat<2, 2, T, Q>::operator--()$/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<2,2,T,Q> &
operator --	./glm/detail/type_mat2x3.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<2, 3, T, Q> & mat<2, 3, T, Q>::operator--()$/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<2,3,T,Q> &
operator --	./glm/detail/type_mat2x3.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<2, 3, T, Q> mat<2, 3, T, Q>::operator--(int)$/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<2,3,T,Q>
operator --	./glm/detail/type_mat2x4.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<2, 4, T, Q> mat<2, 4, T, Q>::operator--(int)$/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<2,4,T,Q>
operator --	./glm/detail/type_mat2x4.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<2, 4, T, Q>& mat<2, 4, T, Q>::operator--()$/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<2,4,T,Q> &
operator --	./glm/detail/type_mat3x2.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<3, 2, T, Q> mat<3, 2, T, Q>::operator--(int)$/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<3,2,T,Q>
operator --	./glm/detail/type_mat3x2.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<3, 2, T, Q>& mat<3, 2, T, Q>::operator--()$/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<3,2,T,Q> &
operator --	./glm/detail/type_mat3x3.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<3, 3, T, Q> & mat<3, 3, T, Q>::operator--()$/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<3,3,T,Q> &
operator --	./glm/detail/type_mat3x3.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<3, 3, T, Q> mat<3, 3, T, Q>::operator--(int)$/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<3,3,T,Q>
operator --	./glm/detail/type_mat3x4.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<3, 4, T, Q> mat<3, 4, T, Q>::operator--(int)$/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<3,4,T,Q>
operator --	./glm/detail/type_mat3x4.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<3, 4, T, Q>& mat<3, 4, T, Q>::operator--()$/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<3,4,T,Q> &
operator --	./glm/detail/type_mat4x2.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<4, 2, T, Q> & mat<4, 2, T, Q>::operator--()$/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<4,2,T,Q> &
operator --	./glm/detail/type_mat4x2.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<4, 2, T, Q> mat<4, 2, T, Q>::operator--(int)$/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<4,2,T,Q>
operator --	./glm/detail/type_mat4x3.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<4, 3, T, Q> & mat<4, 3, T, Q>::operator--()$/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<4,3,T,Q> &
operator --	./glm/detail/type_mat4x3.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<4, 3, T, Q> mat<4, 3, T, Q>::operator--(int)$/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<4,3,T,Q>
operator --	./glm/detail/type_mat4x4.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<4, 4, T, Q> & mat<4, 4, T, Q>::operator--()$/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<4,4,T,Q> &
operator --	./glm/detail/type_mat4x4.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<4, 4, T, Q> mat<4, 4, T, Q>::operator--(int)$/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<4,4,T,Q>
operator --	./glm/detail/type_vec1.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<1, T, Q> & vec<1, T, Q>::operator--()$/;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<1,T,Q> &
operator --	./glm/detail/type_vec1.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<1, T, Q> vec<1, T, Q>::operator--(int)$/;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<1,T,Q>
operator --	./glm/detail/type_vec2.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<2, T, Q> & vec<2, T, Q>::operator--()$/;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<2,T,Q> &
operator --	./glm/detail/type_vec2.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<2, T, Q> vec<2, T, Q>::operator--(int)$/;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<2,T,Q>
operator --	./glm/detail/type_vec3.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<3, T, Q> & vec<3, T, Q>::operator--()$/;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<3,T,Q> &
operator --	./glm/detail/type_vec3.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<3, T, Q> vec<3, T, Q>::operator--(int)$/;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<3,T,Q>
operator --	./glm/detail/type_vec4.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4, T, Q> & vec<4, T, Q>::operator--()$/;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4,T,Q> &
operator --	./glm/detail/type_vec4.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4, T, Q> vec<4, T, Q>::operator--(int)$/;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4,T,Q>
operator -=	./glm/detail/_swizzle.hpp	/^		GLM_FUNC_QUALIFIER void operator -= (vec<N, T, Q> const& that)$/;"	f	struct:glm::detail::_swizzle_base2	typeref:typename:GLM_FUNC_QUALIFIER void
operator -=	./glm/detail/type_mat2x2.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<2, 2, T, Q>& mat<2, 2, T, Q>::operator-=(U scalar)$/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<2,2,T,Q> &
operator -=	./glm/detail/type_mat2x2.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<2, 2, T, Q>& mat<2, 2, T, Q>::operator-=(mat<2, 2, U, Q> c/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<2,2,T,Q> &
operator -=	./glm/detail/type_mat2x3.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<2, 3, T, Q>& mat<2, 3, T, Q>::operator-=(U s)$/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<2,3,T,Q> &
operator -=	./glm/detail/type_mat2x3.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<2, 3, T, Q>& mat<2, 3, T, Q>::operator-=(mat<2, 3, U, Q> c/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<2,3,T,Q> &
operator -=	./glm/detail/type_mat2x4.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<2, 4, T, Q>& mat<2, 4, T, Q>::operator-=(U s)$/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<2,4,T,Q> &
operator -=	./glm/detail/type_mat2x4.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<2, 4, T, Q>& mat<2, 4, T, Q>::operator-=(mat<2, 4, U, Q> c/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<2,4,T,Q> &
operator -=	./glm/detail/type_mat3x2.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<3, 2, T, Q>& mat<3, 2, T, Q>::operator-=(U s)$/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<3,2,T,Q> &
operator -=	./glm/detail/type_mat3x2.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<3, 2, T, Q>& mat<3, 2, T, Q>::operator-=(mat<3, 2, U, Q> c/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<3,2,T,Q> &
operator -=	./glm/detail/type_mat3x3.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<3, 3, T, Q> & mat<3, 3, T, Q>::operator-=(U s)$/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<3,3,T,Q> &
operator -=	./glm/detail/type_mat3x3.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<3, 3, T, Q> & mat<3, 3, T, Q>::operator-=(mat<3, 3, U, Q> /;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<3,3,T,Q> &
operator -=	./glm/detail/type_mat3x4.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<3, 4, T, Q>& mat<3, 4, T, Q>::operator-=(U s)$/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<3,4,T,Q> &
operator -=	./glm/detail/type_mat3x4.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<3, 4, T, Q>& mat<3, 4, T, Q>::operator-=(mat<3, 4, U, Q> c/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<3,4,T,Q> &
operator -=	./glm/detail/type_mat4x2.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<4, 2, T, Q> & mat<4, 2, T, Q>::operator-=(U s)$/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<4,2,T,Q> &
operator -=	./glm/detail/type_mat4x2.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<4, 2, T, Q> & mat<4, 2, T, Q>::operator-=(mat<4, 2, U, Q> /;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<4,2,T,Q> &
operator -=	./glm/detail/type_mat4x3.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<4, 3, T, Q> & mat<4, 3, T, Q>::operator-=(U s)$/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<4,3,T,Q> &
operator -=	./glm/detail/type_mat4x3.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<4, 3, T, Q> & mat<4, 3, T, Q>::operator-=(mat<4, 3, U, Q> /;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<4,3,T,Q> &
operator -=	./glm/detail/type_mat4x4.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<4, 4, T, Q> & mat<4, 4, T, Q>::operator-=(U s)$/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<4,4,T,Q> &
operator -=	./glm/detail/type_mat4x4.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<4, 4, T, Q> & mat<4, 4, T, Q>::operator-=(mat<4, 4, U, Q> /;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<4,4,T,Q> &
operator -=	./glm/detail/type_quat.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR qua<T, Q> & qua<T, Q>::operator-=(qua<U, Q> const& q)$/;"	f	class:glm::qua	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR qua<T,Q> &
operator -=	./glm/detail/type_vec1.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<1, T, Q> & vec<1, T, Q>::operator-=(U scalar)$/;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<1,T,Q> &
operator -=	./glm/detail/type_vec1.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<1, T, Q> & vec<1, T, Q>::operator-=(vec<1, U, Q> const& v)$/;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<1,T,Q> &
operator -=	./glm/detail/type_vec2.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<2, T, Q> & vec<2, T, Q>::operator-=(U scalar)$/;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<2,T,Q> &
operator -=	./glm/detail/type_vec2.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<2, T, Q> & vec<2, T, Q>::operator-=(vec<1, U, Q> const& v)$/;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<2,T,Q> &
operator -=	./glm/detail/type_vec2.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<2, T, Q> & vec<2, T, Q>::operator-=(vec<2, U, Q> const& v)$/;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<2,T,Q> &
operator -=	./glm/detail/type_vec3.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<3, T, Q> & vec<3, T, Q>::operator-=(U scalar)$/;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<3,T,Q> &
operator -=	./glm/detail/type_vec3.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<3, T, Q> & vec<3, T, Q>::operator-=(vec<1, U, Q> const& v)$/;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<3,T,Q> &
operator -=	./glm/detail/type_vec3.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<3, T, Q> & vec<3, T, Q>::operator-=(vec<3, U, Q> const& v)$/;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<3,T,Q> &
operator -=	./glm/detail/type_vec4.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4, T, Q> & vec<4, T, Q>::operator-=(U scalar)$/;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4,T,Q> &
operator -=	./glm/detail/type_vec4.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4, T, Q> & vec<4, T, Q>::operator-=(vec<1, U, Q> const& v)$/;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4,T,Q> &
operator -=	./glm/detail/type_vec4.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4, T, Q> & vec<4, T, Q>::operator-=(vec<4, U, Q> const& v)$/;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4,T,Q> &
operator /	./glm/detail/type_mat2x2.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<2, 2, T, Q> operator\/(T scalar, mat<2, 2, T, Q> const& m)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<2,2,T,Q>
operator /	./glm/detail/type_mat2x2.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<2, 2, T, Q> operator\/(mat<2, 2, T, Q> const& m, T scalar)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<2,2,T,Q>
operator /	./glm/detail/type_mat2x2.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<2, 2, T, Q> operator\/(mat<2, 2, T, Q> const& m1, mat<2, 2/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<2,2,T,Q>
operator /	./glm/detail/type_mat2x2.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR typename mat<2, 2, T, Q>::col_type operator\/(mat<2, 2, T, Q> /;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR typename mat<2,2,T,Q>::col_type
operator /	./glm/detail/type_mat2x2.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR typename mat<2, 2, T, Q>::row_type operator\/(typename mat<2, /;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR typename mat<2,2,T,Q>::row_type
operator /	./glm/detail/type_mat2x3.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<2, 3, T, Q> operator\/(T scalar, mat<2, 3, T, Q> const& m)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<2,3,T,Q>
operator /	./glm/detail/type_mat2x3.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<2, 3, T, Q> operator\/(mat<2, 3, T, Q> const& m, T scalar)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<2,3,T,Q>
operator /	./glm/detail/type_mat2x4.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<2, 4, T, Q> operator\/(T scalar, mat<2, 4, T, Q> const& m)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<2,4,T,Q>
operator /	./glm/detail/type_mat2x4.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<2, 4, T, Q> operator\/(mat<2, 4, T, Q> const& m, T scalar)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<2,4,T,Q>
operator /	./glm/detail/type_mat3x2.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<3, 2, T, Q> operator\/(T scalar, mat<3, 2, T, Q> const& m)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<3,2,T,Q>
operator /	./glm/detail/type_mat3x2.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<3, 2, T, Q> operator\/(mat<3, 2, T, Q> const& m, T scalar)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<3,2,T,Q>
operator /	./glm/detail/type_mat3x3.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<3, 3, T, Q> operator\/(T scalar, mat<3, 3, T, Q> const& m)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<3,3,T,Q>
operator /	./glm/detail/type_mat3x3.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<3, 3, T, Q> operator\/(mat<3, 3, T, Q> const& m,	T scalar)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<3,3,T,Q>
operator /	./glm/detail/type_mat3x3.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<3, 3, T, Q> operator\/(mat<3, 3, T, Q> const& m1, mat<3, 3/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<3,3,T,Q>
operator /	./glm/detail/type_mat3x3.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR typename mat<3, 3, T, Q>::col_type operator\/(mat<3, 3, T, Q> /;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR typename mat<3,3,T,Q>::col_type
operator /	./glm/detail/type_mat3x3.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR typename mat<3, 3, T, Q>::row_type operator\/(typename mat<3, /;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR typename mat<3,3,T,Q>::row_type
operator /	./glm/detail/type_mat3x4.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<3, 4, T, Q> operator\/(T scalar, mat<3, 4, T, Q> const& m)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<3,4,T,Q>
operator /	./glm/detail/type_mat3x4.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<3, 4, T, Q> operator\/(mat<3, 4, T, Q> const& m,	T scalar)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<3,4,T,Q>
operator /	./glm/detail/type_mat4x2.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<4, 2, T, Q> operator\/(T scalar, mat<4, 2, T, Q> const& m)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<4,2,T,Q>
operator /	./glm/detail/type_mat4x2.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<4, 2, T, Q> operator\/(mat<4, 2, T, Q> const& m, T scalar)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<4,2,T,Q>
operator /	./glm/detail/type_mat4x3.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<4, 3, T, Q> operator\/(T scalar, mat<4, 3, T, Q> const& m)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<4,3,T,Q>
operator /	./glm/detail/type_mat4x3.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<4, 3, T, Q> operator\/(mat<4, 3, T, Q> const& m, T scalar)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<4,3,T,Q>
operator /	./glm/detail/type_mat4x4.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<4, 4, T, Q> operator\/(T scalar,	mat<4, 4, T, Q> const& m)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<4,4,T,Q>
operator /	./glm/detail/type_mat4x4.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<4, 4, T, Q> operator\/(mat<4, 4, T, Q> const& m, T scalar)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<4,4,T,Q>
operator /	./glm/detail/type_mat4x4.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<4, 4, T, Q> operator\/(mat<4, 4, T, Q> const& m1, mat<4, 4/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<4,4,T,Q>
operator /	./glm/detail/type_mat4x4.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR typename mat<4, 4, T, Q>::col_type operator\/(mat<4, 4, T, Q> /;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR typename mat<4,4,T,Q>::col_type
operator /	./glm/detail/type_mat4x4.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR typename mat<4, 4, T, Q>::row_type operator\/(typename mat<4, /;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR typename mat<4,4,T,Q>::row_type
operator /	./glm/detail/type_quat.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR qua<T, Q> operator\/(qua<T, Q> const& q, T const& s)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR qua<T,Q>
operator /	./glm/detail/type_vec1.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<1, T, Q> operator\/(T scalar, vec<1, T, Q> const& v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<1,T,Q>
operator /	./glm/detail/type_vec1.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<1, T, Q> operator\/(vec<1, T, Q> const& v, T scalar)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<1,T,Q>
operator /	./glm/detail/type_vec1.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<1, T, Q> operator\/(vec<1, T, Q> const& v1, vec<1, T, Q> c/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<1,T,Q>
operator /	./glm/detail/type_vec2.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<2, T, Q> operator\/(T scalar, vec<2, T, Q> const& v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<2,T,Q>
operator /	./glm/detail/type_vec2.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<2, T, Q> operator\/(vec<1, T, Q> const& v1, vec<2, T, Q> c/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<2,T,Q>
operator /	./glm/detail/type_vec2.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<2, T, Q> operator\/(vec<2, T, Q> const& v, T scalar)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<2,T,Q>
operator /	./glm/detail/type_vec2.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<2, T, Q> operator\/(vec<2, T, Q> const& v1, vec<1, T, Q> c/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<2,T,Q>
operator /	./glm/detail/type_vec2.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<2, T, Q> operator\/(vec<2, T, Q> const& v1, vec<2, T, Q> c/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<2,T,Q>
operator /	./glm/detail/type_vec3.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<3, T, Q> operator\/(T scalar, vec<3, T, Q> const& v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<3,T,Q>
operator /	./glm/detail/type_vec3.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<3, T, Q> operator\/(vec<1, T, Q> const& scalar, vec<3, T, /;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<3,T,Q>
operator /	./glm/detail/type_vec3.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<3, T, Q> operator\/(vec<3, T, Q> const& v, T scalar)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<3,T,Q>
operator /	./glm/detail/type_vec3.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<3, T, Q> operator\/(vec<3, T, Q> const& v, vec<1, T, Q> co/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<3,T,Q>
operator /	./glm/detail/type_vec3.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<3, T, Q> operator\/(vec<3, T, Q> const& v1, vec<3, T, Q> c/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<3,T,Q>
operator /	./glm/detail/type_vec4.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4, T, Q> operator\/(T scalar, vec<4, T, Q> const& v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4,T,Q>
operator /	./glm/detail/type_vec4.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4, T, Q> operator\/(vec<1, T, Q> const& v1, vec<4, T, Q> c/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4,T,Q>
operator /	./glm/detail/type_vec4.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4, T, Q> operator\/(vec<4, T, Q> const& v, T scalar)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4,T,Q>
operator /	./glm/detail/type_vec4.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4, T, Q> operator\/(vec<4, T, Q> const& v1, vec<1, T, Q> c/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4,T,Q>
operator /	./glm/detail/type_vec4.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4, T, Q> operator\/(vec<4, T, Q> const& v1, vec<4, T, Q> c/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4,T,Q>
operator /	./glm/gtx/dual_quaternion.inl	/^	GLM_FUNC_QUALIFIER tdualquat<T, Q> operator\/(tdualquat<T, Q> const& q,	T const& s)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER tdualquat<T,Q>
operator /=	./glm/detail/_swizzle.hpp	/^		GLM_FUNC_QUALIFIER void operator \/= (vec<N, T, Q> const& that)$/;"	f	struct:glm::detail::_swizzle_base2	typeref:typename:GLM_FUNC_QUALIFIER void
operator /=	./glm/detail/type_mat2x2.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<2, 2, T, Q>& mat<2, 2, T, Q>::operator\/=(U scalar)$/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<2,2,T,Q> &
operator /=	./glm/detail/type_mat2x2.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<2, 2, T, Q>& mat<2, 2, T, Q>::operator\/=(mat<2, 2, U, Q> /;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<2,2,T,Q> &
operator /=	./glm/detail/type_mat2x3.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<2, 3, T, Q> & mat<2, 3, T, Q>::operator\/=(U s)$/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<2,3,T,Q> &
operator /=	./glm/detail/type_mat2x4.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<2, 4, T, Q> & mat<2, 4, T, Q>::operator\/=(U s)$/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<2,4,T,Q> &
operator /=	./glm/detail/type_mat3x2.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<3, 2, T, Q> & mat<3, 2, T, Q>::operator\/=(U s)$/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<3,2,T,Q> &
operator /=	./glm/detail/type_mat3x3.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<3, 3, T, Q> & mat<3, 3, T, Q>::operator\/=(U s)$/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<3,3,T,Q> &
operator /=	./glm/detail/type_mat3x3.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<3, 3, T, Q> & mat<3, 3, T, Q>::operator\/=(mat<3, 3, U, Q>/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<3,3,T,Q> &
operator /=	./glm/detail/type_mat3x4.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<3, 4, T, Q> & mat<3, 4, T, Q>::operator\/=(U s)$/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<3,4,T,Q> &
operator /=	./glm/detail/type_mat4x2.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<4, 2, T, Q> & mat<4, 2, T, Q>::operator\/=(U s)$/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<4,2,T,Q> &
operator /=	./glm/detail/type_mat4x3.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<4, 3, T, Q> & mat<4, 3, T, Q>::operator\/=(U s)$/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<4,3,T,Q> &
operator /=	./glm/detail/type_mat4x4.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<4, 4, T, Q> & mat<4, 4, T, Q>::operator\/=(U s)$/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<4,4,T,Q> &
operator /=	./glm/detail/type_mat4x4.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<4, 4, T, Q> & mat<4, 4, T, Q>::operator\/=(mat<4, 4, U, Q>/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<4,4,T,Q> &
operator /=	./glm/detail/type_quat.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR qua<T, Q> & qua<T, Q>::operator\/=(U s)$/;"	f	class:glm::qua	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR qua<T,Q> &
operator /=	./glm/detail/type_vec1.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<1, T, Q> & vec<1, T, Q>::operator\/=(U scalar)$/;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<1,T,Q> &
operator /=	./glm/detail/type_vec1.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<1, T, Q> & vec<1, T, Q>::operator\/=(vec<1, U, Q> const& v/;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<1,T,Q> &
operator /=	./glm/detail/type_vec2.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<2, T, Q> & vec<2, T, Q>::operator\/=(U scalar)$/;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<2,T,Q> &
operator /=	./glm/detail/type_vec2.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<2, T, Q> & vec<2, T, Q>::operator\/=(vec<1, U, Q> const& v/;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<2,T,Q> &
operator /=	./glm/detail/type_vec2.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<2, T, Q> & vec<2, T, Q>::operator\/=(vec<2, U, Q> const& v/;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<2,T,Q> &
operator /=	./glm/detail/type_vec3.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<3, T, Q> & vec<3, T, Q>::operator\/=(U v)$/;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<3,T,Q> &
operator /=	./glm/detail/type_vec3.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<3, T, Q> & vec<3, T, Q>::operator\/=(vec<1, U, Q> const& v/;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<3,T,Q> &
operator /=	./glm/detail/type_vec3.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<3, T, Q> & vec<3, T, Q>::operator\/=(vec<3, U, Q> const& v/;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<3,T,Q> &
operator /=	./glm/detail/type_vec4.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4, T, Q> & vec<4, T, Q>::operator\/=(U scalar)$/;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4,T,Q> &
operator /=	./glm/detail/type_vec4.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4, T, Q> & vec<4, T, Q>::operator\/=(vec<1, U, Q> const& v/;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4,T,Q> &
operator /=	./glm/detail/type_vec4.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4, T, Q> & vec<4, T, Q>::operator\/=(vec<4, U, Q> const& v/;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4,T,Q> &
operator /=	./glm/gtx/dual_quaternion.inl	/^	GLM_FUNC_QUALIFIER tdualquat<T, Q> & tdualquat<T, Q>::operator\/=(U s)$/;"	f	class:glm::tdualquat	typeref:typename:GLM_FUNC_QUALIFIER tdualquat<T,Q> &
operator <<	./glm/detail/type_vec1.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<1, T, Q> operator<<(T scalar, vec<1, T, Q> const& v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<1,T,Q>
operator <<	./glm/detail/type_vec1.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<1, T, Q> operator<<(vec<1, T, Q> const& v, T scalar)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<1,T,Q>
operator <<	./glm/detail/type_vec1.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<1, T, Q> operator<<(vec<1, T, Q> const& v1, vec<1, T, Q> c/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<1,T,Q>
operator <<	./glm/detail/type_vec2.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<2, T, Q> operator<<(T scalar, vec<2, T, Q> const& v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<2,T,Q>
operator <<	./glm/detail/type_vec2.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<2, T, Q> operator<<(vec<1, T, Q> const& v1, vec<2, T, Q> c/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<2,T,Q>
operator <<	./glm/detail/type_vec2.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<2, T, Q> operator<<(vec<2, T, Q> const& v, T scalar)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<2,T,Q>
operator <<	./glm/detail/type_vec2.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<2, T, Q> operator<<(vec<2, T, Q> const& v1, vec<1, T, Q> c/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<2,T,Q>
operator <<	./glm/detail/type_vec2.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<2, T, Q> operator<<(vec<2, T, Q> const& v1, vec<2, T, Q> c/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<2,T,Q>
operator <<	./glm/detail/type_vec3.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<3, T, Q> operator<<(T scalar, vec<3, T, Q> const& v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<3,T,Q>
operator <<	./glm/detail/type_vec3.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<3, T, Q> operator<<(vec<1, T, Q> const& scalar, vec<3, T, /;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<3,T,Q>
operator <<	./glm/detail/type_vec3.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<3, T, Q> operator<<(vec<3, T, Q> const& v, T scalar)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<3,T,Q>
operator <<	./glm/detail/type_vec3.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<3, T, Q> operator<<(vec<3, T, Q> const& v, vec<1, T, Q> co/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<3,T,Q>
operator <<	./glm/detail/type_vec3.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<3, T, Q> operator<<(vec<3, T, Q> const& v1, vec<3, T, Q> c/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<3,T,Q>
operator <<	./glm/detail/type_vec4.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4, T, Q> operator<<(T scalar, vec<4, T, Q> const& v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4,T,Q>
operator <<	./glm/detail/type_vec4.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4, T, Q> operator<<(vec<1, T, Q> const& v1, vec<4, T, Q> c/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4,T,Q>
operator <<	./glm/detail/type_vec4.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4, T, Q> operator<<(vec<4, T, Q> const& v, T scalar)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4,T,Q>
operator <<	./glm/detail/type_vec4.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4, T, Q> operator<<(vec<4, T, Q> const& v1, vec<1, T, Q> c/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4,T,Q>
operator <<	./glm/detail/type_vec4.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4, T, Q> operator<<(vec<4, T, Q> const& v1, vec<4, T, Q> c/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4,T,Q>
operator <<	./glm/gtx/io.inl	/^	GLM_FUNC_QUALIFIER  std::basic_ostream<CTy, CTr>& operator<<(std::basic_ostream<CTy, CTr>& os, /;"	f	namespace:glm::io	typeref:typename:GLM_FUNC_QUALIFIER std::basic_ostream<CTy,CTr> &
operator <<	./glm/gtx/io.inl	/^	GLM_FUNC_QUALIFIER std::basic_ostream<CTy, CTr>& operator<<($/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER std::basic_ostream<CTy,CTr> &
operator <<	./glm/gtx/io.inl	/^	GLM_FUNC_QUALIFIER std::basic_ostream<CTy, CTr>& operator<<(std::basic_ostream<CTy, CTr>& os, o/;"	f	namespace:glm::io	typeref:typename:GLM_FUNC_QUALIFIER std::basic_ostream<CTy,CTr> &
operator <<	./glm/gtx/io.inl	/^	GLM_FUNC_QUALIFIER std::basic_ostream<CTy, CTr>& operator<<(std::basic_ostream<CTy, CTr>& os, p/;"	f	namespace:glm::io	typeref:typename:GLM_FUNC_QUALIFIER std::basic_ostream<CTy,CTr> &
operator <<	./glm/gtx/io.inl	/^	GLM_FUNC_QUALIFIER std::basic_ostream<CTy, CTr>& operator<<(std::basic_ostream<CTy, CTr>& os, w/;"	f	namespace:glm::io	typeref:typename:GLM_FUNC_QUALIFIER std::basic_ostream<CTy,CTr> &
operator <<	./glm/gtx/io.inl	/^	GLM_FUNC_QUALIFIER std::basic_ostream<CTy,CTr> & operator<<(std::basic_ostream<CTy,CTr>& os, ma/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER std::basic_ostream<CTy,CTr> &
operator <<	./glm/gtx/io.inl	/^	GLM_FUNC_QUALIFIER std::basic_ostream<CTy,CTr>& operator<<(std::basic_ostream<CTy,CTr>& os, mat/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER std::basic_ostream<CTy,CTr> &
operator <<	./glm/gtx/io.inl	/^	GLM_FUNC_QUALIFIER std::basic_ostream<CTy,CTr>& operator<<(std::basic_ostream<CTy,CTr>& os, qua/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER std::basic_ostream<CTy,CTr> &
operator <<	./glm/gtx/io.inl	/^	GLM_FUNC_QUALIFIER std::basic_ostream<CTy,CTr>& operator<<(std::basic_ostream<CTy,CTr>& os, vec/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER std::basic_ostream<CTy,CTr> &
operator <<=	./glm/detail/type_vec1.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<1, T, Q> & vec<1, T, Q>::operator<<=(U scalar)$/;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<1,T,Q> &
operator <<=	./glm/detail/type_vec1.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<1, T, Q> & vec<1, T, Q>::operator<<=(vec<1, U, Q> const& v/;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<1,T,Q> &
operator <<=	./glm/detail/type_vec2.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<2, T, Q> & vec<2, T, Q>::operator<<=(U scalar)$/;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<2,T,Q> &
operator <<=	./glm/detail/type_vec2.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<2, T, Q> & vec<2, T, Q>::operator<<=(vec<1, U, Q> const& v/;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<2,T,Q> &
operator <<=	./glm/detail/type_vec2.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<2, T, Q> & vec<2, T, Q>::operator<<=(vec<2, U, Q> const& v/;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<2,T,Q> &
operator <<=	./glm/detail/type_vec3.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<3, T, Q> & vec<3, T, Q>::operator<<=(U scalar)$/;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<3,T,Q> &
operator <<=	./glm/detail/type_vec3.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<3, T, Q> & vec<3, T, Q>::operator<<=(vec<1, U, Q> const& v/;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<3,T,Q> &
operator <<=	./glm/detail/type_vec3.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<3, T, Q> & vec<3, T, Q>::operator<<=(vec<3, U, Q> const& v/;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<3,T,Q> &
operator <<=	./glm/detail/type_vec4.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4, T, Q> & vec<4, T, Q>::operator<<=(U scalar)$/;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4,T,Q> &
operator <<=	./glm/detail/type_vec4.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4, T, Q> & vec<4, T, Q>::operator<<=(vec<1, U, Q> const& v/;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4,T,Q> &
operator <<=	./glm/detail/type_vec4.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4, T, Q> & vec<4, T, Q>::operator<<=(vec<4, U, Q> const& v/;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4,T,Q> &
operator =	./glm/detail/_swizzle.hpp	/^		GLM_FUNC_QUALIFIER _swizzle_base2& operator= (Stub const&) { return *this; }$/;"	f	struct:glm::detail::_swizzle_base2	typeref:typename:GLM_FUNC_QUALIFIER _swizzle_base2 &
operator =	./glm/detail/_swizzle.hpp	/^		GLM_FUNC_QUALIFIER _swizzle_base2& operator= (const T& t)$/;"	f	struct:glm::detail::_swizzle_base2	typeref:typename:GLM_FUNC_QUALIFIER _swizzle_base2 &
operator =	./glm/detail/_swizzle.hpp	/^		GLM_FUNC_QUALIFIER _swizzle_base2& operator= (vec<N, T, Q> const& that)$/;"	f	struct:glm::detail::_swizzle_base2	typeref:typename:GLM_FUNC_QUALIFIER _swizzle_base2 &
operator =	./glm/detail/type_float.hpp	/^		GLM_CONSTEXPR float_t& operator=(float_t const& x)$/;"	f	union:glm::detail::float_t	typeref:typename:GLM_CONSTEXPR float_t &
operator =	./glm/detail/type_mat2x2.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<2, 2, T, Q>& mat<2, 2, T, Q>::operator=(mat<2, 2, U, Q> co/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<2,2,T,Q> &
operator =	./glm/detail/type_mat2x3.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<2, 3, T, Q>& mat<2, 3, T, Q>::operator=(mat<2, 3, U, Q> co/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<2,3,T,Q> &
operator =	./glm/detail/type_mat2x4.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<2, 4, T, Q>& mat<2, 4, T, Q>::operator=(mat<2, 4, U, Q> co/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<2,4,T,Q> &
operator =	./glm/detail/type_mat3x2.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<3, 2, T, Q>& mat<3, 2, T, Q>::operator=(mat<3, 2, U, Q> co/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<3,2,T,Q> &
operator =	./glm/detail/type_mat3x3.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<3, 3, T, Q> & mat<3, 3, T, Q>::operator=(mat<3, 3, U, Q> c/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<3,3,T,Q> &
operator =	./glm/detail/type_mat3x4.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<3, 4, T, Q>& mat<3, 4, T, Q>::operator=(mat<3, 4, U, Q> co/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<3,4,T,Q> &
operator =	./glm/detail/type_mat4x2.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<4, 2, T, Q>& mat<4, 2, T, Q>::operator=(mat<4, 2, U, Q> co/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<4,2,T,Q> &
operator =	./glm/detail/type_mat4x3.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<4, 3, T, Q>& mat<4, 3, T, Q>::operator=(mat<4, 3, U, Q> co/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<4,3,T,Q> &
operator =	./glm/detail/type_mat4x4.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<4, 4, T, Q>& mat<4, 4, T, Q>::operator=(mat<4, 4, U, Q> co/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<4,4,T,Q> &
operator =	./glm/detail/type_quat.inl	/^		GLM_DEFAULTED_FUNC_QUALIFIER GLM_CONSTEXPR qua<T, Q> & qua<T, Q>::operator=(qua<T, Q> const& q/;"	f	class:glm::qua	typeref:typename:GLM_DEFAULTED_FUNC_QUALIFIER GLM_CONSTEXPR qua<T,Q> &
operator =	./glm/detail/type_quat.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR qua<T, Q> & qua<T, Q>::operator=(qua<U, Q> const& q)$/;"	f	class:glm::qua	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR qua<T,Q> &
operator =	./glm/detail/type_vec1.inl	/^		GLM_DEFAULTED_FUNC_QUALIFIER GLM_CONSTEXPR vec<1, T, Q> & vec<1, T, Q>::operator=(vec<1, T, Q>/;"	f	class:glm::vec	typeref:typename:GLM_DEFAULTED_FUNC_QUALIFIER GLM_CONSTEXPR vec<1,T,Q> &
operator =	./glm/detail/type_vec1.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<1, T, Q> & vec<1, T, Q>::operator=(vec<1, U, Q> const& v)$/;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<1,T,Q> &
operator =	./glm/detail/type_vec2.inl	/^		GLM_DEFAULTED_FUNC_QUALIFIER GLM_CONSTEXPR vec<2, T, Q> & vec<2, T, Q>::operator=(vec<2, T, Q>/;"	f	class:glm::vec	typeref:typename:GLM_DEFAULTED_FUNC_QUALIFIER GLM_CONSTEXPR vec<2,T,Q> &
operator =	./glm/detail/type_vec2.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<2, T, Q> & vec<2, T, Q>::operator=(vec<2, U, Q> const& v)$/;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<2,T,Q> &
operator =	./glm/detail/type_vec3.inl	/^		GLM_DEFAULTED_FUNC_QUALIFIER GLM_CONSTEXPR vec<3, T, Q>& vec<3, T, Q>::operator=(vec<3, T, Q> /;"	f	class:glm::vec	typeref:typename:GLM_DEFAULTED_FUNC_QUALIFIER GLM_CONSTEXPR vec<3,T,Q> &
operator =	./glm/detail/type_vec3.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<3, T, Q>& vec<3, T, Q>::operator=(vec<3, U, Q> const& v)$/;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<3,T,Q> &
operator =	./glm/detail/type_vec4.inl	/^		GLM_DEFAULTED_FUNC_QUALIFIER GLM_CONSTEXPR vec<4, T, Q>& vec<4, T, Q>::operator=(vec<4, T, Q> /;"	f	class:glm::vec	typeref:typename:GLM_DEFAULTED_FUNC_QUALIFIER GLM_CONSTEXPR vec<4,T,Q> &
operator =	./glm/detail/type_vec4.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4, T, Q>& vec<4, T, Q>::operator=(vec<4, U, Q> const& v)$/;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4,T,Q> &
operator =	./glm/gtx/dual_quaternion.inl	/^		GLM_DEFAULTED_FUNC_QUALIFIER tdualquat<T, Q> & tdualquat<T, Q>::operator=(tdualquat<T, Q> cons/;"	f	class:glm::tdualquat	typeref:typename:GLM_DEFAULTED_FUNC_QUALIFIER tdualquat<T,Q> &
operator =	./glm/gtx/dual_quaternion.inl	/^	GLM_FUNC_QUALIFIER tdualquat<T, Q> & tdualquat<T, Q>::operator=(tdualquat<U, Q> const& q)$/;"	f	class:glm::tdualquat	typeref:typename:GLM_FUNC_QUALIFIER tdualquat<T,Q> &
operator ==	./glm/detail/type_mat2x2.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR bool operator==(mat<2, 2, T, Q> const& m1, mat<2, 2, T, Q> con/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR bool
operator ==	./glm/detail/type_mat2x3.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR bool operator==(mat<2, 3, T, Q> const& m1, mat<2, 3, T, Q> con/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR bool
operator ==	./glm/detail/type_mat2x4.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR bool operator==(mat<2, 4, T, Q> const& m1, mat<2, 4, T, Q> con/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR bool
operator ==	./glm/detail/type_mat3x2.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR bool operator==(mat<3, 2, T, Q> const& m1, mat<3, 2, T, Q> con/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR bool
operator ==	./glm/detail/type_mat3x3.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR bool operator==(mat<3, 3, T, Q> const& m1, mat<3, 3, T, Q> con/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR bool
operator ==	./glm/detail/type_mat3x4.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR bool operator==(mat<3, 4, T, Q> const& m1, mat<3, 4, T, Q> con/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR bool
operator ==	./glm/detail/type_mat4x2.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR bool operator==(mat<4, 2, T, Q> const& m1, mat<4, 2, T, Q> con/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR bool
operator ==	./glm/detail/type_mat4x3.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR bool operator==(mat<4, 3, T, Q> const& m1, mat<4, 3, T, Q> con/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR bool
operator ==	./glm/detail/type_mat4x4.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR bool operator==(mat<4, 4, T, Q> const& m1, mat<4, 4, T, Q> con/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR bool
operator ==	./glm/detail/type_quat.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR bool operator==(qua<T, Q> const& q1, qua<T, Q> const& q2)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR bool
operator ==	./glm/detail/type_vec1.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR bool operator==(vec<1, T, Q> const& v1, vec<1, T, Q> const& v2/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR bool
operator ==	./glm/detail/type_vec2.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR bool operator==(vec<2, T, Q> const& v1, vec<2, T, Q> const& v2/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR bool
operator ==	./glm/detail/type_vec3.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR bool operator==(vec<3, T, Q> const& v1, vec<3, T, Q> const& v2/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR bool
operator ==	./glm/detail/type_vec4.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR bool operator==(vec<4, T, Q> const& v1, vec<4, T, Q> const& v2/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR bool
operator ==	./glm/gtx/dual_quaternion.inl	/^	GLM_FUNC_QUALIFIER bool operator==(tdualquat<T, Q> const& q1, tdualquat<T, Q> const& q2)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER bool
operator >>	./glm/detail/type_vec1.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<1, T, Q> operator>>(T scalar, vec<1, T, Q> const& v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<1,T,Q>
operator >>	./glm/detail/type_vec1.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<1, T, Q> operator>>(vec<1, T, Q> const& v, T scalar)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<1,T,Q>
operator >>	./glm/detail/type_vec1.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<1, T, Q> operator>>(vec<1, T, Q> const& v1, vec<1, T, Q> c/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<1,T,Q>
operator >>	./glm/detail/type_vec2.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<2, T, Q> operator>>(T scalar, vec<2, T, Q> const& v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<2,T,Q>
operator >>	./glm/detail/type_vec2.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<2, T, Q> operator>>(vec<1, T, Q> const& v1, vec<2, T, Q> c/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<2,T,Q>
operator >>	./glm/detail/type_vec2.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<2, T, Q> operator>>(vec<2, T, Q> const& v, T scalar)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<2,T,Q>
operator >>	./glm/detail/type_vec2.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<2, T, Q> operator>>(vec<2, T, Q> const& v1, vec<1, T, Q> c/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<2,T,Q>
operator >>	./glm/detail/type_vec2.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<2, T, Q> operator>>(vec<2, T, Q> const& v1, vec<2, T, Q> c/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<2,T,Q>
operator >>	./glm/detail/type_vec3.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<3, T, Q> operator>>(T scalar, vec<3, T, Q> const& v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<3,T,Q>
operator >>	./glm/detail/type_vec3.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<3, T, Q> operator>>(vec<1, T, Q> const& scalar, vec<3, T, /;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<3,T,Q>
operator >>	./glm/detail/type_vec3.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<3, T, Q> operator>>(vec<3, T, Q> const& v, T scalar)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<3,T,Q>
operator >>	./glm/detail/type_vec3.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<3, T, Q> operator>>(vec<3, T, Q> const& v, vec<1, T, Q> co/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<3,T,Q>
operator >>	./glm/detail/type_vec3.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<3, T, Q> operator>>(vec<3, T, Q> const& v1, vec<3, T, Q> c/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<3,T,Q>
operator >>	./glm/detail/type_vec4.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4, T, Q> operator>>(T scalar, vec<4, T, Q> const& v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4,T,Q>
operator >>	./glm/detail/type_vec4.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4, T, Q> operator>>(vec<1, T, Q> const& v1, vec<4, T, Q> c/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4,T,Q>
operator >>	./glm/detail/type_vec4.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4, T, Q> operator>>(vec<4, T, Q> const& v, T scalar)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4,T,Q>
operator >>	./glm/detail/type_vec4.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4, T, Q> operator>>(vec<4, T, Q> const& v1, vec<1, T, Q> c/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4,T,Q>
operator >>	./glm/detail/type_vec4.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4, T, Q> operator>>(vec<4, T, Q> const& v1, vec<4, T, Q> c/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4,T,Q>
operator >>=	./glm/detail/type_vec1.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<1, T, Q> & vec<1, T, Q>::operator>>=(U scalar)$/;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<1,T,Q> &
operator >>=	./glm/detail/type_vec1.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<1, T, Q> & vec<1, T, Q>::operator>>=(vec<1, U, Q> const& v/;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<1,T,Q> &
operator >>=	./glm/detail/type_vec2.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<2, T, Q> & vec<2, T, Q>::operator>>=(U scalar)$/;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<2,T,Q> &
operator >>=	./glm/detail/type_vec2.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<2, T, Q> & vec<2, T, Q>::operator>>=(vec<1, U, Q> const& v/;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<2,T,Q> &
operator >>=	./glm/detail/type_vec2.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<2, T, Q> & vec<2, T, Q>::operator>>=(vec<2, U, Q> const& v/;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<2,T,Q> &
operator >>=	./glm/detail/type_vec3.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<3, T, Q> & vec<3, T, Q>::operator>>=(U scalar)$/;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<3,T,Q> &
operator >>=	./glm/detail/type_vec3.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<3, T, Q> & vec<3, T, Q>::operator>>=(vec<1, U, Q> const& v/;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<3,T,Q> &
operator >>=	./glm/detail/type_vec3.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<3, T, Q> & vec<3, T, Q>::operator>>=(vec<3, U, Q> const& v/;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<3,T,Q> &
operator >>=	./glm/detail/type_vec4.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4, T, Q> & vec<4, T, Q>::operator>>=(U scalar)$/;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4,T,Q> &
operator >>=	./glm/detail/type_vec4.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4, T, Q> & vec<4, T, Q>::operator>>=(vec<1, U, Q> const& v/;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4,T,Q> &
operator >>=	./glm/detail/type_vec4.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4, T, Q> & vec<4, T, Q>::operator>>=(vec<4, U, Q> const& v/;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4,T,Q> &
operator []	./glm/detail/_swizzle.hpp	/^		GLM_FUNC_QUALIFIER T operator[](int i) const$/;"	f	struct:glm::detail::_swizzle_base2	typeref:typename:GLM_FUNC_QUALIFIER T
operator []	./glm/detail/_swizzle.hpp	/^		GLM_FUNC_QUALIFIER T& operator[](int i)$/;"	f	struct:glm::detail::_swizzle_base2	typeref:typename:GLM_FUNC_QUALIFIER T &
operator []	./glm/detail/type_mat2x2.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR typename mat<2, 2, T, Q>::col_type const& mat<2, 2, T, Q>::ope/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR typename mat<2,2,T,Q>::col_type const &
operator []	./glm/detail/type_mat2x2.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR typename mat<2, 2, T, Q>::col_type& mat<2, 2, T, Q>::operator[/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR typename mat<2,2,T,Q>::col_type &
operator []	./glm/detail/type_mat2x3.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR typename mat<2, 3, T, Q>::col_type & mat<2, 3, T, Q>::operator/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR typename mat<2,3,T,Q>::col_type &
operator []	./glm/detail/type_mat2x3.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR typename mat<2, 3, T, Q>::col_type const& mat<2, 3, T, Q>::ope/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR typename mat<2,3,T,Q>::col_type const &
operator []	./glm/detail/type_mat2x4.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR typename mat<2, 4, T, Q>::col_type & mat<2, 4, T, Q>::operator/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR typename mat<2,4,T,Q>::col_type &
operator []	./glm/detail/type_mat2x4.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR typename mat<2, 4, T, Q>::col_type const& mat<2, 4, T, Q>::ope/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR typename mat<2,4,T,Q>::col_type const &
operator []	./glm/detail/type_mat3x2.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR typename mat<3, 2, T, Q>::col_type & mat<3, 2, T, Q>::operator/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR typename mat<3,2,T,Q>::col_type &
operator []	./glm/detail/type_mat3x2.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR typename mat<3, 2, T, Q>::col_type const& mat<3, 2, T, Q>::ope/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR typename mat<3,2,T,Q>::col_type const &
operator []	./glm/detail/type_mat3x3.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR typename mat<3, 3, T, Q>::col_type & mat<3, 3, T, Q>::operator/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR typename mat<3,3,T,Q>::col_type &
operator []	./glm/detail/type_mat3x3.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR typename mat<3, 3, T, Q>::col_type const& mat<3, 3, T, Q>::ope/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR typename mat<3,3,T,Q>::col_type const &
operator []	./glm/detail/type_mat3x4.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR typename mat<3, 4, T, Q>::col_type & mat<3, 4, T, Q>::operator/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR typename mat<3,4,T,Q>::col_type &
operator []	./glm/detail/type_mat3x4.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR typename mat<3, 4, T, Q>::col_type const& mat<3, 4, T, Q>::ope/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR typename mat<3,4,T,Q>::col_type const &
operator []	./glm/detail/type_mat4x2.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR typename mat<4, 2, T, Q>::col_type & mat<4, 2, T, Q>::operator/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR typename mat<4,2,T,Q>::col_type &
operator []	./glm/detail/type_mat4x2.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR typename mat<4, 2, T, Q>::col_type const& mat<4, 2, T, Q>::ope/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR typename mat<4,2,T,Q>::col_type const &
operator []	./glm/detail/type_mat4x3.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR typename mat<4, 3, T, Q>::col_type & mat<4, 3, T, Q>::operator/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR typename mat<4,3,T,Q>::col_type &
operator []	./glm/detail/type_mat4x3.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR typename mat<4, 3, T, Q>::col_type const& mat<4, 3, T, Q>::ope/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR typename mat<4,3,T,Q>::col_type const &
operator []	./glm/detail/type_mat4x4.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR typename mat<4, 4, T, Q>::col_type & mat<4, 4, T, Q>::operator/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR typename mat<4,4,T,Q>::col_type &
operator []	./glm/detail/type_mat4x4.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR typename mat<4, 4, T, Q>::col_type const& mat<4, 4, T, Q>::ope/;"	f	class:glm::mat	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR typename mat<4,4,T,Q>::col_type const &
operator []	./glm/detail/type_quat.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR T & qua<T, Q>::operator[](typename qua<T, Q>::length_type i)$/;"	f	class:glm::qua	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR T &
operator []	./glm/detail/type_quat.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR T const& qua<T, Q>::operator[](typename qua<T, Q>::length_type/;"	f	class:glm::qua	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR T const &
operator []	./glm/detail/type_vec1.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR T & vec<1, T, Q>::operator[](typename vec<1, T, Q>::length_typ/;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR T &
operator []	./glm/detail/type_vec1.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR T const& vec<1, T, Q>::operator[](typename vec<1, T, Q>::lengt/;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR T const &
operator []	./glm/detail/type_vec2.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR T & vec<2, T, Q>::operator[](typename vec<2, T, Q>::length_typ/;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR T &
operator []	./glm/detail/type_vec2.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR T const& vec<2, T, Q>::operator[](typename vec<2, T, Q>::lengt/;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR T const &
operator []	./glm/detail/type_vec3.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR T & vec<3, T, Q>::operator[](typename vec<3, T, Q>::length_typ/;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR T &
operator []	./glm/detail/type_vec3.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR T const& vec<3, T, Q>::operator[](typename vec<3, T, Q>::lengt/;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR T const &
operator []	./glm/detail/type_vec4.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR T const& vec<4, T, Q>::operator[](typename vec<4, T, Q>::lengt/;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR T const &
operator []	./glm/detail/type_vec4.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR T& vec<4, T, Q>::operator[](typename vec<4, T, Q>::length_type/;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR T &
operator []	./glm/gtx/dual_quaternion.inl	/^	GLM_FUNC_QUALIFIER typename tdualquat<T, Q>::part_type & tdualquat<T, Q>::operator[](typename t/;"	f	class:glm::tdualquat	typeref:typename:GLM_FUNC_QUALIFIER typename tdualquat<T,Q>::part_type &
operator []	./glm/gtx/dual_quaternion.inl	/^	GLM_FUNC_QUALIFIER typename tdualquat<T, Q>::part_type const& tdualquat<T, Q>::operator[](typen/;"	f	class:glm::tdualquat	typeref:typename:GLM_FUNC_QUALIFIER typename tdualquat<T,Q>::part_type const &
operator [] 	./glm/detail/_swizzle.hpp	/^		GLM_FUNC_QUALIFIER T operator[]  (int i) const$/;"	f	struct:glm::detail::_swizzle_base2	typeref:typename:GLM_FUNC_QUALIFIER T
operator ^	./glm/detail/type_vec1.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<1, T, Q> operator^(T scalar, vec<1, T, Q> const& v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<1,T,Q>
operator ^	./glm/detail/type_vec1.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<1, T, Q> operator^(vec<1, T, Q> const& v, T scalar)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<1,T,Q>
operator ^	./glm/detail/type_vec1.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<1, T, Q> operator^(vec<1, T, Q> const& v1, vec<1, T, Q> co/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<1,T,Q>
operator ^	./glm/detail/type_vec2.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<2, T, Q> operator^(T scalar, vec<2, T, Q> const& v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<2,T,Q>
operator ^	./glm/detail/type_vec2.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<2, T, Q> operator^(vec<1, T, Q> const& v1, vec<2, T, Q> co/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<2,T,Q>
operator ^	./glm/detail/type_vec2.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<2, T, Q> operator^(vec<2, T, Q> const& v, T scalar)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<2,T,Q>
operator ^	./glm/detail/type_vec2.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<2, T, Q> operator^(vec<2, T, Q> const& v1, vec<1, T, Q> co/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<2,T,Q>
operator ^	./glm/detail/type_vec2.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<2, T, Q> operator^(vec<2, T, Q> const& v1, vec<2, T, Q> co/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<2,T,Q>
operator ^	./glm/detail/type_vec3.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<3, T, Q> operator^(T scalar, vec<3, T, Q> const& v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<3,T,Q>
operator ^	./glm/detail/type_vec3.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<3, T, Q> operator^(vec<1, T, Q> const& scalar, vec<3, T, Q/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<3,T,Q>
operator ^	./glm/detail/type_vec3.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<3, T, Q> operator^(vec<3, T, Q> const& v, T scalar)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<3,T,Q>
operator ^	./glm/detail/type_vec3.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<3, T, Q> operator^(vec<3, T, Q> const& v, vec<1, T, Q> con/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<3,T,Q>
operator ^	./glm/detail/type_vec3.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<3, T, Q> operator^(vec<3, T, Q> const& v1, vec<3, T, Q> co/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<3,T,Q>
operator ^	./glm/detail/type_vec4.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4, T, Q> operator^(T scalar, vec<4, T, Q> const& v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4,T,Q>
operator ^	./glm/detail/type_vec4.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4, T, Q> operator^(vec<1, T, Q> const& v1, vec<4, T, Q> co/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4,T,Q>
operator ^	./glm/detail/type_vec4.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4, T, Q> operator^(vec<4, T, Q> const& v, T scalar)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4,T,Q>
operator ^	./glm/detail/type_vec4.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4, T, Q> operator^(vec<4, T, Q> const& v1, vec<1, T, Q> co/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4,T,Q>
operator ^	./glm/detail/type_vec4.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4, T, Q> operator^(vec<4, T, Q> const& v1, vec<4, T, Q> co/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4,T,Q>
operator ^=	./glm/detail/type_vec1.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<1, T, Q> & vec<1, T, Q>::operator^=(U scalar)$/;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<1,T,Q> &
operator ^=	./glm/detail/type_vec1.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<1, T, Q> & vec<1, T, Q>::operator^=(vec<1, U, Q> const& v)$/;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<1,T,Q> &
operator ^=	./glm/detail/type_vec2.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<2, T, Q> & vec<2, T, Q>::operator^=(U scalar)$/;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<2,T,Q> &
operator ^=	./glm/detail/type_vec2.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<2, T, Q> & vec<2, T, Q>::operator^=(vec<1, U, Q> const& v)$/;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<2,T,Q> &
operator ^=	./glm/detail/type_vec2.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<2, T, Q> & vec<2, T, Q>::operator^=(vec<2, U, Q> const& v)$/;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<2,T,Q> &
operator ^=	./glm/detail/type_vec3.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<3, T, Q> & vec<3, T, Q>::operator^=(U scalar)$/;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<3,T,Q> &
operator ^=	./glm/detail/type_vec3.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<3, T, Q> & vec<3, T, Q>::operator^=(vec<1, U, Q> const& v)$/;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<3,T,Q> &
operator ^=	./glm/detail/type_vec3.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<3, T, Q> & vec<3, T, Q>::operator^=(vec<3, U, Q> const& v)$/;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<3,T,Q> &
operator ^=	./glm/detail/type_vec4.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4, T, Q> & vec<4, T, Q>::operator^=(U scalar)$/;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4,T,Q> &
operator ^=	./glm/detail/type_vec4.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4, T, Q> & vec<4, T, Q>::operator^=(vec<1, U, Q> const& v)$/;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4,T,Q> &
operator ^=	./glm/detail/type_vec4.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4, T, Q> & vec<4, T, Q>::operator^=(vec<4, U, Q> const& v)$/;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4,T,Q> &
operator mat<3,3,T,Q>	./glm/detail/type_quat.inl	/^	GLM_FUNC_QUALIFIER qua<T, Q>::operator mat<3, 3, T, Q>() const$/;"	f	class:glm::qua	typeref:typename:GLM_FUNC_QUALIFIER
operator mat<4,4,T,Q>	./glm/detail/type_quat.inl	/^	GLM_FUNC_QUALIFIER qua<T, Q>::operator mat<4, 4, T, Q>() const$/;"	f	class:glm::qua	typeref:typename:GLM_FUNC_QUALIFIER
operator vec<N,T,Q>	./glm/detail/_swizzle.hpp	/^		GLM_FUNC_QUALIFIER operator vec<N, T, Q> () const { return (*this)(); }$/;"	f	struct:glm::detail::_swizzle	typeref:typename:GLM_FUNC_QUALIFIER
operator |	./glm/detail/type_vec1.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<1, T, Q> operator|(T scalar, vec<1, T, Q> const& v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<1,T,Q>
operator |	./glm/detail/type_vec1.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<1, T, Q> operator|(vec<1, T, Q> const& v, T scalar)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<1,T,Q>
operator |	./glm/detail/type_vec1.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<1, T, Q> operator|(vec<1, T, Q> const& v1, vec<1, T, Q> co/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<1,T,Q>
operator |	./glm/detail/type_vec2.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<2, T, Q> operator|(T scalar, vec<2, T, Q> const& v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<2,T,Q>
operator |	./glm/detail/type_vec2.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<2, T, Q> operator|(vec<1, T, Q> const& v1, vec<2, T, Q> co/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<2,T,Q>
operator |	./glm/detail/type_vec2.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<2, T, Q> operator|(vec<2, T, Q> const& v, T scalar)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<2,T,Q>
operator |	./glm/detail/type_vec2.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<2, T, Q> operator|(vec<2, T, Q> const& v1, vec<1, T, Q> co/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<2,T,Q>
operator |	./glm/detail/type_vec2.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<2, T, Q> operator|(vec<2, T, Q> const& v1, vec<2, T, Q> co/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<2,T,Q>
operator |	./glm/detail/type_vec3.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<3, T, Q> operator|(T scalar, vec<3, T, Q> const& v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<3,T,Q>
operator |	./glm/detail/type_vec3.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<3, T, Q> operator|(vec<1, T, Q> const& scalar, vec<3, T, Q/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<3,T,Q>
operator |	./glm/detail/type_vec3.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<3, T, Q> operator|(vec<3, T, Q> const& v, T scalar)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<3,T,Q>
operator |	./glm/detail/type_vec3.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<3, T, Q> operator|(vec<3, T, Q> const& v, vec<1, T, Q> con/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<3,T,Q>
operator |	./glm/detail/type_vec3.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<3, T, Q> operator|(vec<3, T, Q> const& v1, vec<3, T, Q> co/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<3,T,Q>
operator |	./glm/detail/type_vec4.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4, T, Q> operator|(T scalar, vec<4, T, Q> const& v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4,T,Q>
operator |	./glm/detail/type_vec4.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4, T, Q> operator|(vec<1, T, Q> const& v1, vec<4, T, Q> co/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4,T,Q>
operator |	./glm/detail/type_vec4.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4, T, Q> operator|(vec<4, T, Q> const& v, T scalar)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4,T,Q>
operator |	./glm/detail/type_vec4.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4, T, Q> operator|(vec<4, T, Q> const& v1, vec<1, T, Q> co/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4,T,Q>
operator |	./glm/detail/type_vec4.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4, T, Q> operator|(vec<4, T, Q> const& v1, vec<4, T, Q> co/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4,T,Q>
operator |=	./glm/detail/type_vec1.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<1, T, Q> & vec<1, T, Q>::operator|=(U scalar)$/;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<1,T,Q> &
operator |=	./glm/detail/type_vec1.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<1, T, Q> & vec<1, T, Q>::operator|=(vec<1, U, Q> const& v)$/;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<1,T,Q> &
operator |=	./glm/detail/type_vec2.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<2, T, Q> & vec<2, T, Q>::operator|=(U scalar)$/;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<2,T,Q> &
operator |=	./glm/detail/type_vec2.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<2, T, Q> & vec<2, T, Q>::operator|=(vec<1, U, Q> const& v)$/;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<2,T,Q> &
operator |=	./glm/detail/type_vec2.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<2, T, Q> & vec<2, T, Q>::operator|=(vec<2, U, Q> const& v)$/;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<2,T,Q> &
operator |=	./glm/detail/type_vec3.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<3, T, Q> & vec<3, T, Q>::operator|=(U scalar)$/;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<3,T,Q> &
operator |=	./glm/detail/type_vec3.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<3, T, Q> & vec<3, T, Q>::operator|=(vec<1, U, Q> const& v)$/;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<3,T,Q> &
operator |=	./glm/detail/type_vec3.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<3, T, Q> & vec<3, T, Q>::operator|=(vec<3, U, Q> const& v)$/;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<3,T,Q> &
operator |=	./glm/detail/type_vec4.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4, T, Q> & vec<4, T, Q>::operator|=(U scalar)$/;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4,T,Q> &
operator |=	./glm/detail/type_vec4.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4, T, Q> & vec<4, T, Q>::operator|=(vec<1, U, Q> const& v)$/;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4,T,Q> &
operator |=	./glm/detail/type_vec4.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4, T, Q> & vec<4, T, Q>::operator|=(vec<4, U, Q> const& v)$/;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4,T,Q> &
operator ||	./glm/detail/type_vec1.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<1, bool, Q> operator||(vec<1, bool, Q> const& v1, vec<1, b/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<1,bool,Q>
operator ||	./glm/detail/type_vec2.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<2, bool, Q> operator||(vec<2, bool, Q> const& v1, vec<2, b/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<2,bool,Q>
operator ||	./glm/detail/type_vec3.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<3, bool, Q> operator||(vec<3, bool, Q> const& v1, vec<3, b/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<3,bool,Q>
operator ||	./glm/detail/type_vec4.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4, bool, Q> operator||(vec<4, bool, Q> const& v1, vec<4, b/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4,bool,Q>
operator ~	./glm/detail/type_vec1.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<1, T, Q> operator~(vec<1, T, Q> const& v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<1,T,Q>
operator ~	./glm/detail/type_vec2.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<2, T, Q> operator~(vec<2, T, Q> const& v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<2,T,Q>
operator ~	./glm/detail/type_vec3.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<3, T, Q> operator~(vec<3, T, Q> const& v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<3,T,Q>
operator ~	./glm/detail/type_vec4.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4, T, Q> operator~(vec<4, T, Q> const& v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4,T,Q>
order	./glm/gtx/io.hpp	/^			order_type order;$/;"	m	class:glm::io::format_punct	typeref:typename:order_type
order	./glm/gtx/io.hpp	/^		struct order$/;"	s	namespace:glm::io
order	./glm/gtx/io.inl	/^	GLM_FUNC_QUALIFIER order::order(order_type a)$/;"	f	class:glm::io::order	typeref:typename:GLM_FUNC_QUALIFIER
order_type	./glm/gtx/io.hpp	/^		enum order_type { column_major, row_major};$/;"	g	namespace:glm::io
orientate2	./glm/gtx/euler_angles.inl	/^	GLM_FUNC_QUALIFIER mat<2, 2, T, defaultp> orientate2$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER mat<2,2,T,defaultp>
orientate3	./glm/gtx/euler_angles.inl	/^	GLM_FUNC_QUALIFIER mat<3, 3, T, Q> orientate3$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER mat<3,3,T,Q>
orientate3	./glm/gtx/euler_angles.inl	/^	GLM_FUNC_QUALIFIER mat<3, 3, T, defaultp> orientate3$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER mat<3,3,T,defaultp>
orientate4	./glm/gtx/euler_angles.inl	/^	GLM_FUNC_QUALIFIER mat<4, 4, T, Q> orientate4$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER mat<4,4,T,Q>
orientation	./glm/gtx/rotate_vector.inl	/^	GLM_FUNC_QUALIFIER mat<4, 4, T, Q> orientation$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER mat<4,4,T,Q>
orientedAngle	./glm/gtx/vector_angle.inl	/^	GLM_FUNC_QUALIFIER T orientedAngle(vec<2, T, Q> const& x, vec<2, T, Q> const& y)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER T
orientedAngle	./glm/gtx/vector_angle.inl	/^	GLM_FUNC_QUALIFIER T orientedAngle(vec<3, T, Q> const& x, vec<3, T, Q> const& y, vec<3, T, Q> c/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER T
ortho	./glm/ext/matrix_clip_space.inl	/^	GLM_FUNC_QUALIFIER mat<4, 4, T, defaultp> ortho(T left, T right, T bottom, T top)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER mat<4,4,T,defaultp>
ortho	./glm/ext/matrix_clip_space.inl	/^	GLM_FUNC_QUALIFIER mat<4, 4, T, defaultp> ortho(T left, T right, T bottom, T top, T zNear, T zF/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER mat<4,4,T,defaultp>
orthoLH	./glm/ext/matrix_clip_space.inl	/^	GLM_FUNC_QUALIFIER mat<4, 4, T, defaultp> orthoLH(T left, T right, T bottom, T top, T zNear, T /;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER mat<4,4,T,defaultp>
orthoLH_NO	./glm/ext/matrix_clip_space.inl	/^	GLM_FUNC_QUALIFIER mat<4, 4, T, defaultp> orthoLH_NO(T left, T right, T bottom, T top, T zNear,/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER mat<4,4,T,defaultp>
orthoLH_ZO	./glm/ext/matrix_clip_space.inl	/^	GLM_FUNC_QUALIFIER mat<4, 4, T, defaultp> orthoLH_ZO(T left, T right, T bottom, T top, T zNear,/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER mat<4,4,T,defaultp>
orthoNO	./glm/ext/matrix_clip_space.inl	/^	GLM_FUNC_QUALIFIER mat<4, 4, T, defaultp> orthoNO(T left, T right, T bottom, T top, T zNear, T /;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER mat<4,4,T,defaultp>
orthoRH	./glm/ext/matrix_clip_space.inl	/^	GLM_FUNC_QUALIFIER mat<4, 4, T, defaultp> orthoRH(T left, T right, T bottom, T top, T zNear, T /;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER mat<4,4,T,defaultp>
orthoRH_NO	./glm/ext/matrix_clip_space.inl	/^	GLM_FUNC_QUALIFIER mat<4, 4, T, defaultp> orthoRH_NO(T left, T right, T bottom, T top, T zNear,/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER mat<4,4,T,defaultp>
orthoRH_ZO	./glm/ext/matrix_clip_space.inl	/^	GLM_FUNC_QUALIFIER mat<4, 4, T, defaultp> orthoRH_ZO(T left, T right, T bottom, T top, T zNear,/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER mat<4,4,T,defaultp>
orthoZO	./glm/ext/matrix_clip_space.inl	/^	GLM_FUNC_QUALIFIER mat<4, 4, T, defaultp> orthoZO(T left, T right, T bottom, T top, T zNear, T /;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER mat<4,4,T,defaultp>
orthonormalize	./glm/gtx/orthonormalize.inl	/^	GLM_FUNC_QUALIFIER mat<3, 3, T, Q> orthonormalize(mat<3, 3, T, Q> const& m)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER mat<3,3,T,Q>
orthonormalize	./glm/gtx/orthonormalize.inl	/^	GLM_FUNC_QUALIFIER vec<3, T, Q> orthonormalize(vec<3, T, Q> const& x, vec<3, T, Q> const& y)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<3,T,Q>
out	./glm/detail/func_common.inl	/^			float out;$/;"	m	union:glm::intBitsToFloat::__anon37df8f18030a	typeref:typename:float	file:
out	./glm/detail/func_common.inl	/^			float out;$/;"	m	union:glm::uintBitsToFloat::__anon37df8f18040a	typeref:typename:float	file:
out	./glm/detail/func_common.inl	/^			int out;$/;"	m	union:glm::floatBitsToInt::__anon37df8f18010a	typeref:typename:int	file:
out	./glm/detail/func_common.inl	/^			uint out;$/;"	m	union:glm::floatBitsToUint::__anon37df8f18020a	typeref:typename:uint	file:
out	./glm/detail/func_packing.inl	/^			double out;$/;"	m	union:glm::packDouble2x32::__anon919c3c0c090a	typeref:typename:double	file:
out	./glm/detail/func_packing.inl	/^			signed char out[4];$/;"	m	union:glm::unpackSnorm4x8::__anon919c3c0c080a	typeref:typename:signed char[4]	file:
out	./glm/detail/func_packing.inl	/^			signed short out[2];$/;"	m	union:glm::unpackHalf2x16::__anon919c3c0c0c0a	typeref:typename:signed short[2]	file:
out	./glm/detail/func_packing.inl	/^			signed short out[2];$/;"	m	union:glm::unpackSnorm2x16::__anon919c3c0c040a	typeref:typename:signed short[2]	file:
out	./glm/detail/func_packing.inl	/^			uint   out[2];$/;"	m	union:glm::unpackDouble2x32::__anon919c3c0c0a0a	typeref:typename:uint[2]	file:
out	./glm/detail/func_packing.inl	/^			uint out;$/;"	m	union:glm::packHalf2x16::__anon919c3c0c0b0a	typeref:typename:uint	file:
out	./glm/detail/func_packing.inl	/^			uint out;$/;"	m	union:glm::packSnorm2x16::__anon919c3c0c030a	typeref:typename:uint	file:
out	./glm/detail/func_packing.inl	/^			uint out;$/;"	m	union:glm::packSnorm4x8::__anon919c3c0c070a	typeref:typename:uint	file:
out	./glm/detail/func_packing.inl	/^			uint out;$/;"	m	union:glm::packUnorm2x16::__anon919c3c0c010a	typeref:typename:uint	file:
out	./glm/detail/func_packing.inl	/^			uint out;$/;"	m	union:glm::packUnorm4x8::__anon919c3c0c050a	typeref:typename:uint	file:
out	./glm/detail/func_packing.inl	/^			unsigned char out[4];$/;"	m	union:glm::unpackUnorm4x8::__anon919c3c0c060a	typeref:typename:unsigned char[4]	file:
out	./glm/detail/func_packing.inl	/^			unsigned short out[2];$/;"	m	union:glm::unpackUnorm2x16::__anon919c3c0c020a	typeref:typename:unsigned short[2]	file:
outerProduct	./glm/detail/func_matrix.inl	/^	GLM_FUNC_QUALIFIER typename detail::outerProduct_trait<DA, DB, T, Q>::type outerProduct(vec<DA,/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER typename detail::outerProduct_trait<DA,DB,T,Q>::type
outerProduct	./glm/detail/func_matrix_simd.inl	/^	GLM_FUNC_QUALIFIER mat<4, 4, float, aligned_highp> outerProduct<4, 4, float, aligned_highp>(vec/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER mat<4,4,float,aligned_highp>
outerProduct	./glm/detail/func_matrix_simd.inl	/^	GLM_FUNC_QUALIFIER mat<4, 4, float, aligned_lowp> outerProduct<4, 4, float, aligned_lowp>(vec<4/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER mat<4,4,float,aligned_lowp>
outerProduct	./glm/detail/func_matrix_simd.inl	/^	GLM_FUNC_QUALIFIER mat<4, 4, float, aligned_mediump> outerProduct<4, 4, float, aligned_mediump>/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER mat<4,4,float,aligned_mediump>
outerProduct_trait	./glm/matrix.hpp	/^	struct outerProduct_trait<2, 2, T, Q>$/;"	s	namespace:glm::detail
outerProduct_trait	./glm/matrix.hpp	/^	struct outerProduct_trait<2, 3, T, Q>$/;"	s	namespace:glm::detail
outerProduct_trait	./glm/matrix.hpp	/^	struct outerProduct_trait<2, 4, T, Q>$/;"	s	namespace:glm::detail
outerProduct_trait	./glm/matrix.hpp	/^	struct outerProduct_trait<3, 2, T, Q>$/;"	s	namespace:glm::detail
outerProduct_trait	./glm/matrix.hpp	/^	struct outerProduct_trait<3, 3, T, Q>$/;"	s	namespace:glm::detail
outerProduct_trait	./glm/matrix.hpp	/^	struct outerProduct_trait<3, 4, T, Q>$/;"	s	namespace:glm::detail
outerProduct_trait	./glm/matrix.hpp	/^	struct outerProduct_trait<4, 2, T, Q>$/;"	s	namespace:glm::detail
outerProduct_trait	./glm/matrix.hpp	/^	struct outerProduct_trait<4, 3, T, Q>$/;"	s	namespace:glm::detail
outerProduct_trait	./glm/matrix.hpp	/^	struct outerProduct_trait<4, 4, T, Q>$/;"	s	namespace:glm::detail
outerProduct_trait	./glm/matrix.hpp	/^	struct outerProduct_trait{};$/;"	s	namespace:glm::detail
overflow	./glm/detail/type_half.inl	/^	GLM_FUNC_QUALIFIER float overflow()$/;"	f	namespace:glm::detail	typeref:typename:GLM_FUNC_QUALIFIER float
pack	./glm/gtc/packing.inl	/^		GLM_FUNC_QUALIFIER static vec<1, uint16, Q> pack(vec<1, float, Q> const& v)$/;"	f	struct:glm::detail::compute_half	typeref:typename:GLM_FUNC_QUALIFIER vec<1,uint16,Q>	file:
pack	./glm/gtc/packing.inl	/^		GLM_FUNC_QUALIFIER static vec<2, uint16, Q> pack(vec<2, float, Q> const& v)$/;"	f	struct:glm::detail::compute_half	typeref:typename:GLM_FUNC_QUALIFIER vec<2,uint16,Q>	file:
pack	./glm/gtc/packing.inl	/^		GLM_FUNC_QUALIFIER static vec<3, uint16, Q> pack(vec<3, float, Q> const& v)$/;"	f	struct:glm::detail::compute_half	typeref:typename:GLM_FUNC_QUALIFIER vec<3,uint16,Q>	file:
pack	./glm/gtc/packing.inl	/^		GLM_FUNC_QUALIFIER static vec<4, uint16, Q> pack(vec<4, float, Q> const& v)$/;"	f	struct:glm::detail::compute_half	typeref:typename:GLM_FUNC_QUALIFIER vec<4,uint16,Q>	file:
pack	./glm/gtc/packing.inl	/^		uint16 pack;$/;"	m	union:glm::detail::u4u4u4u4	typeref:typename:uint16	file:
pack	./glm/gtc/packing.inl	/^		uint16 pack;$/;"	m	union:glm::detail::u5u5u5u1	typeref:typename:uint16	file:
pack	./glm/gtc/packing.inl	/^		uint16 pack;$/;"	m	union:glm::detail::u5u6u5	typeref:typename:uint16	file:
pack	./glm/gtc/packing.inl	/^		uint32 pack;$/;"	m	union:glm::detail::i10i10i10i2	typeref:typename:uint32	file:
pack	./glm/gtc/packing.inl	/^		uint32 pack;$/;"	m	union:glm::detail::u10u10u10u2	typeref:typename:uint32	file:
pack	./glm/gtc/packing.inl	/^		uint32 pack;$/;"	m	union:glm::detail::u9u9u9e5	typeref:typename:uint32	file:
pack	./glm/gtc/packing.inl	/^		uint8 pack;$/;"	m	union:glm::detail::u3u3u2	typeref:typename:uint8	file:
pack	./glm/gtc/packing.inl	/^		uint8 pack;$/;"	m	union:glm::detail::u4u4	typeref:typename:uint8	file:
packDouble2x32	./glm/detail/func_packing.inl	/^	GLM_FUNC_QUALIFIER double packDouble2x32(uvec2 const& v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER double
packF2x11_1x10	./glm/gtc/packing.inl	/^	GLM_FUNC_QUALIFIER uint32 packF2x11_1x10(vec3 const& v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER uint32
packF3x9_E1x5	./glm/gtc/packing.inl	/^	GLM_FUNC_QUALIFIER uint32 packF3x9_E1x5(vec3 const& v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER uint32
packHalf	./glm/gtc/packing.inl	/^	GLM_FUNC_QUALIFIER vec<L, uint16, Q> packHalf(vec<L, float, Q> const& v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<L,uint16,Q>
packHalf1x16	./glm/gtc/packing.inl	/^	GLM_FUNC_QUALIFIER uint16 packHalf1x16(float v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER uint16
packHalf2x16	./glm/detail/func_packing.inl	/^	GLM_FUNC_QUALIFIER uint packHalf2x16(vec2 const& v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER uint
packHalf4x16	./glm/gtc/packing.inl	/^	GLM_FUNC_QUALIFIER uint64 packHalf4x16(glm::vec4 const& v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER uint64
packI3x10_1x2	./glm/gtc/packing.inl	/^	GLM_FUNC_QUALIFIER uint32 packI3x10_1x2(ivec4 const& v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER uint32
packInt2x16	./glm/gtc/packing.inl	/^	GLM_FUNC_QUALIFIER int packInt2x16(i16vec2 const& v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER int
packInt2x32	./glm/gtc/packing.inl	/^	GLM_FUNC_QUALIFIER int64 packInt2x32(i32vec2 const& v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER int64
packInt2x8	./glm/gtc/packing.inl	/^	GLM_FUNC_QUALIFIER int16 packInt2x8(i8vec2 const& v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER int16
packInt4x16	./glm/gtc/packing.inl	/^	GLM_FUNC_QUALIFIER int64 packInt4x16(i16vec4 const& v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER int64
packInt4x8	./glm/gtc/packing.inl	/^	GLM_FUNC_QUALIFIER int32 packInt4x8(i8vec4 const& v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER int32
packRGBM	./glm/gtc/packing.inl	/^	GLM_FUNC_QUALIFIER vec<4, T, Q> packRGBM(vec<3, T, Q> const& rgb)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<4,T,Q>
packSnorm	./glm/gtc/packing.inl	/^	GLM_FUNC_QUALIFIER vec<L, intType, Q> packSnorm(vec<L, floatType, Q> const& v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<L,intType,Q>
packSnorm1x16	./glm/gtc/packing.inl	/^	GLM_FUNC_QUALIFIER uint16 packSnorm1x16(float v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER uint16
packSnorm1x8	./glm/gtc/packing.inl	/^	GLM_FUNC_QUALIFIER uint8 packSnorm1x8(float v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER uint8
packSnorm2x16	./glm/detail/func_packing.inl	/^	GLM_FUNC_QUALIFIER uint packSnorm2x16(vec2 const& v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER uint
packSnorm2x8	./glm/gtc/packing.inl	/^	GLM_FUNC_QUALIFIER uint16 packSnorm2x8(vec2 const& v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER uint16
packSnorm3x10_1x2	./glm/gtc/packing.inl	/^	GLM_FUNC_QUALIFIER uint32 packSnorm3x10_1x2(vec4 const& v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER uint32
packSnorm4x16	./glm/gtc/packing.inl	/^	GLM_FUNC_QUALIFIER uint64 packSnorm4x16(vec4 const& v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER uint64
packSnorm4x8	./glm/detail/func_packing.inl	/^	GLM_FUNC_QUALIFIER uint packSnorm4x8(vec4 const& v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER uint
packU3x10_1x2	./glm/gtc/packing.inl	/^	GLM_FUNC_QUALIFIER uint32 packU3x10_1x2(uvec4 const& v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER uint32
packUint2x16	./glm/gtc/packing.inl	/^	GLM_FUNC_QUALIFIER uint packUint2x16(u16vec2 const& v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER uint
packUint2x32	./glm/gtc/packing.inl	/^	GLM_FUNC_QUALIFIER uint64 packUint2x32(u32vec2 const& v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER uint64
packUint2x8	./glm/gtc/packing.inl	/^	GLM_FUNC_QUALIFIER uint16 packUint2x8(u8vec2 const& v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER uint16
packUint4x16	./glm/gtc/packing.inl	/^	GLM_FUNC_QUALIFIER uint64 packUint4x16(u16vec4 const& v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER uint64
packUint4x8	./glm/gtc/packing.inl	/^	GLM_FUNC_QUALIFIER uint32 packUint4x8(u8vec4 const& v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER uint32
packUnorm	./glm/gtc/packing.inl	/^	GLM_FUNC_QUALIFIER vec<L, uintType, Q> packUnorm(vec<L, floatType, Q> const& v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<L,uintType,Q>
packUnorm1x16	./glm/gtc/packing.inl	/^	GLM_FUNC_QUALIFIER uint16 packUnorm1x16(float s)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER uint16
packUnorm1x5_1x6_1x5	./glm/gtc/packing.inl	/^	GLM_FUNC_QUALIFIER uint16 packUnorm1x5_1x6_1x5(vec3 const& v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER uint16
packUnorm1x8	./glm/gtc/packing.inl	/^	GLM_FUNC_QUALIFIER uint8 packUnorm1x8(float v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER uint8
packUnorm2x16	./glm/detail/func_packing.inl	/^	GLM_FUNC_QUALIFIER uint packUnorm2x16(vec2 const& v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER uint
packUnorm2x3_1x2	./glm/gtc/packing.inl	/^	GLM_FUNC_QUALIFIER uint8 packUnorm2x3_1x2(vec3 const& v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER uint8
packUnorm2x4	./glm/gtc/packing.inl	/^	GLM_FUNC_QUALIFIER uint8 packUnorm2x4(vec2 const& v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER uint8
packUnorm2x8	./glm/gtc/packing.inl	/^	GLM_FUNC_QUALIFIER uint16 packUnorm2x8(vec2 const& v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER uint16
packUnorm3x10_1x2	./glm/gtc/packing.inl	/^	GLM_FUNC_QUALIFIER uint32 packUnorm3x10_1x2(vec4 const& v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER uint32
packUnorm3x5_1x1	./glm/gtc/packing.inl	/^	GLM_FUNC_QUALIFIER uint16 packUnorm3x5_1x1(vec4 const& v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER uint16
packUnorm4x16	./glm/gtc/packing.inl	/^	GLM_FUNC_QUALIFIER uint64 packUnorm4x16(vec4 const& v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER uint64
packUnorm4x4	./glm/gtc/packing.inl	/^	GLM_FUNC_QUALIFIER uint16 packUnorm4x4(vec4 const& v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER uint16
packUnorm4x8	./glm/detail/func_packing.inl	/^	GLM_FUNC_QUALIFIER uint packUnorm4x8(vec4 const& v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER uint
packed	./glm/detail/qualifier.hpp	/^		packed = packed_highp, \/\/\/< By default packed qualifier is also high precision$/;"	e	enum:glm::qualifier
packed10ToFloat	./glm/gtc/packing.inl	/^	GLM_FUNC_QUALIFIER glm::uint32 packed10ToFloat(glm::uint32 p)$/;"	f	namespace:glm::detail	typeref:typename:GLM_FUNC_QUALIFIER glm::uint32
packed10bitToFloat	./glm/gtc/packing.inl	/^	GLM_FUNC_QUALIFIER float packed10bitToFloat(glm::uint x)$/;"	f	namespace:glm::detail	typeref:typename:GLM_FUNC_QUALIFIER float
packed11ToFloat	./glm/gtc/packing.inl	/^	GLM_FUNC_QUALIFIER glm::uint32 packed11ToFloat(glm::uint32 p)$/;"	f	namespace:glm::detail	typeref:typename:GLM_FUNC_QUALIFIER glm::uint32
packed11bitToFloat	./glm/gtc/packing.inl	/^	GLM_FUNC_QUALIFIER float packed11bitToFloat(glm::uint x)$/;"	f	namespace:glm::detail	typeref:typename:GLM_FUNC_QUALIFIER float
packed_bvec1	./glm/gtc/type_aligned.hpp	/^	typedef packed_highp_bvec1			packed_bvec1;$/;"	t	namespace:glm	typeref:typename:packed_highp_bvec1
packed_bvec2	./glm/gtc/type_aligned.hpp	/^	typedef packed_highp_bvec2			packed_bvec2;$/;"	t	namespace:glm	typeref:typename:packed_highp_bvec2
packed_bvec3	./glm/gtc/type_aligned.hpp	/^	typedef packed_highp_bvec3			packed_bvec3;$/;"	t	namespace:glm	typeref:typename:packed_highp_bvec3
packed_bvec4	./glm/gtc/type_aligned.hpp	/^	typedef packed_highp_bvec4			packed_bvec4;$/;"	t	namespace:glm	typeref:typename:packed_highp_bvec4
packed_dmat2	./glm/gtc/type_aligned.hpp	/^	typedef packed_highp_dmat2			packed_dmat2;$/;"	t	namespace:glm	typeref:typename:packed_highp_dmat2
packed_dmat2	./glm/gtc/type_aligned.hpp	/^	typedef packed_lowp_dmat2			packed_dmat2;$/;"	t	namespace:glm	typeref:typename:packed_lowp_dmat2
packed_dmat2	./glm/gtc/type_aligned.hpp	/^	typedef packed_mediump_dmat2		packed_dmat2;$/;"	t	namespace:glm	typeref:typename:packed_mediump_dmat2
packed_dmat2x2	./glm/gtc/type_aligned.hpp	/^	typedef packed_highp_dmat2x2		packed_dmat2x2;$/;"	t	namespace:glm	typeref:typename:packed_highp_dmat2x2
packed_dmat2x2	./glm/gtc/type_aligned.hpp	/^	typedef packed_lowp_dmat2x2			packed_dmat2x2;$/;"	t	namespace:glm	typeref:typename:packed_lowp_dmat2x2
packed_dmat2x2	./glm/gtc/type_aligned.hpp	/^	typedef packed_mediump_dmat2x2		packed_dmat2x2;$/;"	t	namespace:glm	typeref:typename:packed_mediump_dmat2x2
packed_dmat2x3	./glm/gtc/type_aligned.hpp	/^	typedef packed_highp_dmat2x3		packed_dmat2x3;$/;"	t	namespace:glm	typeref:typename:packed_highp_dmat2x3
packed_dmat2x3	./glm/gtc/type_aligned.hpp	/^	typedef packed_lowp_dmat2x3			packed_dmat2x3;$/;"	t	namespace:glm	typeref:typename:packed_lowp_dmat2x3
packed_dmat2x3	./glm/gtc/type_aligned.hpp	/^	typedef packed_mediump_dmat2x3		packed_dmat2x3;$/;"	t	namespace:glm	typeref:typename:packed_mediump_dmat2x3
packed_dmat2x4	./glm/gtc/type_aligned.hpp	/^	typedef packed_highp_dmat2x4		packed_dmat2x4;$/;"	t	namespace:glm	typeref:typename:packed_highp_dmat2x4
packed_dmat2x4	./glm/gtc/type_aligned.hpp	/^	typedef packed_lowp_dmat2x4			packed_dmat2x4;$/;"	t	namespace:glm	typeref:typename:packed_lowp_dmat2x4
packed_dmat2x4	./glm/gtc/type_aligned.hpp	/^	typedef packed_mediump_dmat2x4		packed_dmat2x4;$/;"	t	namespace:glm	typeref:typename:packed_mediump_dmat2x4
packed_dmat3	./glm/gtc/type_aligned.hpp	/^	typedef packed_highp_dmat3			packed_dmat3;$/;"	t	namespace:glm	typeref:typename:packed_highp_dmat3
packed_dmat3	./glm/gtc/type_aligned.hpp	/^	typedef packed_lowp_dmat3			packed_dmat3;$/;"	t	namespace:glm	typeref:typename:packed_lowp_dmat3
packed_dmat3	./glm/gtc/type_aligned.hpp	/^	typedef packed_mediump_dmat3		packed_dmat3;$/;"	t	namespace:glm	typeref:typename:packed_mediump_dmat3
packed_dmat3x2	./glm/gtc/type_aligned.hpp	/^	typedef packed_highp_dmat3x2		packed_dmat3x2;$/;"	t	namespace:glm	typeref:typename:packed_highp_dmat3x2
packed_dmat3x2	./glm/gtc/type_aligned.hpp	/^	typedef packed_lowp_dmat3x2			packed_dmat3x2;$/;"	t	namespace:glm	typeref:typename:packed_lowp_dmat3x2
packed_dmat3x2	./glm/gtc/type_aligned.hpp	/^	typedef packed_mediump_dmat3x2		packed_dmat3x2;$/;"	t	namespace:glm	typeref:typename:packed_mediump_dmat3x2
packed_dmat3x3	./glm/gtc/type_aligned.hpp	/^	typedef packed_highp_dmat3x3		packed_dmat3x3;$/;"	t	namespace:glm	typeref:typename:packed_highp_dmat3x3
packed_dmat3x3	./glm/gtc/type_aligned.hpp	/^	typedef packed_lowp_dmat3x3			packed_dmat3x3;$/;"	t	namespace:glm	typeref:typename:packed_lowp_dmat3x3
packed_dmat3x3	./glm/gtc/type_aligned.hpp	/^	typedef packed_mediump_dmat3x3		packed_dmat3x3;$/;"	t	namespace:glm	typeref:typename:packed_mediump_dmat3x3
packed_dmat3x4	./glm/gtc/type_aligned.hpp	/^	typedef packed_highp_dmat3x4		packed_dmat3x4;$/;"	t	namespace:glm	typeref:typename:packed_highp_dmat3x4
packed_dmat3x4	./glm/gtc/type_aligned.hpp	/^	typedef packed_lowp_dmat3x4			packed_dmat3x4;$/;"	t	namespace:glm	typeref:typename:packed_lowp_dmat3x4
packed_dmat3x4	./glm/gtc/type_aligned.hpp	/^	typedef packed_mediump_dmat3x4		packed_dmat3x4;$/;"	t	namespace:glm	typeref:typename:packed_mediump_dmat3x4
packed_dmat4	./glm/gtc/type_aligned.hpp	/^	typedef packed_highp_dmat4			packed_dmat4;$/;"	t	namespace:glm	typeref:typename:packed_highp_dmat4
packed_dmat4	./glm/gtc/type_aligned.hpp	/^	typedef packed_lowp_dmat4			packed_dmat4;$/;"	t	namespace:glm	typeref:typename:packed_lowp_dmat4
packed_dmat4	./glm/gtc/type_aligned.hpp	/^	typedef packed_mediump_dmat4		packed_dmat4;$/;"	t	namespace:glm	typeref:typename:packed_mediump_dmat4
packed_dmat4x2	./glm/gtc/type_aligned.hpp	/^	typedef packed_highp_dmat4x2		packed_dmat4x2;$/;"	t	namespace:glm	typeref:typename:packed_highp_dmat4x2
packed_dmat4x2	./glm/gtc/type_aligned.hpp	/^	typedef packed_lowp_dmat4x2			packed_dmat4x2;$/;"	t	namespace:glm	typeref:typename:packed_lowp_dmat4x2
packed_dmat4x2	./glm/gtc/type_aligned.hpp	/^	typedef packed_mediump_dmat4x2		packed_dmat4x2;$/;"	t	namespace:glm	typeref:typename:packed_mediump_dmat4x2
packed_dmat4x3	./glm/gtc/type_aligned.hpp	/^	typedef packed_highp_dmat4x3		packed_dmat4x3;$/;"	t	namespace:glm	typeref:typename:packed_highp_dmat4x3
packed_dmat4x3	./glm/gtc/type_aligned.hpp	/^	typedef packed_lowp_dmat4x3			packed_dmat4x3;$/;"	t	namespace:glm	typeref:typename:packed_lowp_dmat4x3
packed_dmat4x3	./glm/gtc/type_aligned.hpp	/^	typedef packed_mediump_dmat4x3		packed_dmat4x3;$/;"	t	namespace:glm	typeref:typename:packed_mediump_dmat4x3
packed_dmat4x4	./glm/gtc/type_aligned.hpp	/^	typedef packed_highp_dmat4x4		packed_dmat4x4;$/;"	t	namespace:glm	typeref:typename:packed_highp_dmat4x4
packed_dmat4x4	./glm/gtc/type_aligned.hpp	/^	typedef packed_lowp_dmat4x4			packed_dmat4x4;$/;"	t	namespace:glm	typeref:typename:packed_lowp_dmat4x4
packed_dmat4x4	./glm/gtc/type_aligned.hpp	/^	typedef packed_mediump_dmat4x4		packed_dmat4x4;$/;"	t	namespace:glm	typeref:typename:packed_mediump_dmat4x4
packed_dvec1	./glm/gtc/type_aligned.hpp	/^	typedef packed_highp_dvec1			packed_dvec1;$/;"	t	namespace:glm	typeref:typename:packed_highp_dvec1
packed_dvec1	./glm/gtc/type_aligned.hpp	/^	typedef packed_lowp_dvec1			packed_dvec1;$/;"	t	namespace:glm	typeref:typename:packed_lowp_dvec1
packed_dvec1	./glm/gtc/type_aligned.hpp	/^	typedef packed_mediump_dvec1		packed_dvec1;$/;"	t	namespace:glm	typeref:typename:packed_mediump_dvec1
packed_dvec2	./glm/gtc/type_aligned.hpp	/^	typedef packed_highp_dvec2			packed_dvec2;$/;"	t	namespace:glm	typeref:typename:packed_highp_dvec2
packed_dvec2	./glm/gtc/type_aligned.hpp	/^	typedef packed_lowp_dvec2			packed_dvec2;$/;"	t	namespace:glm	typeref:typename:packed_lowp_dvec2
packed_dvec2	./glm/gtc/type_aligned.hpp	/^	typedef packed_mediump_dvec2		packed_dvec2;$/;"	t	namespace:glm	typeref:typename:packed_mediump_dvec2
packed_dvec3	./glm/gtc/type_aligned.hpp	/^	typedef packed_highp_dvec3			packed_dvec3;$/;"	t	namespace:glm	typeref:typename:packed_highp_dvec3
packed_dvec3	./glm/gtc/type_aligned.hpp	/^	typedef packed_lowp_dvec3			packed_dvec3;$/;"	t	namespace:glm	typeref:typename:packed_lowp_dvec3
packed_dvec3	./glm/gtc/type_aligned.hpp	/^	typedef packed_mediump_dvec3		packed_dvec3;$/;"	t	namespace:glm	typeref:typename:packed_mediump_dvec3
packed_dvec4	./glm/gtc/type_aligned.hpp	/^	typedef packed_highp_dvec4			packed_dvec4;$/;"	t	namespace:glm	typeref:typename:packed_highp_dvec4
packed_dvec4	./glm/gtc/type_aligned.hpp	/^	typedef packed_lowp_dvec4			packed_dvec4;$/;"	t	namespace:glm	typeref:typename:packed_lowp_dvec4
packed_dvec4	./glm/gtc/type_aligned.hpp	/^	typedef packed_mediump_dvec4		packed_dvec4;$/;"	t	namespace:glm	typeref:typename:packed_mediump_dvec4
packed_highp	./glm/detail/qualifier.hpp	/^		packed_highp, \/\/\/< Typed data is tightly packed in memory and operations are executed with /;"	e	enum:glm::qualifier
packed_highp_bvec1	./glm/gtc/type_aligned.hpp	/^	typedef vec<1, bool, packed_highp>		packed_highp_bvec1;$/;"	t	namespace:glm	typeref:typename:vec<1,bool,packed_highp>
packed_highp_bvec2	./glm/gtc/type_aligned.hpp	/^	typedef vec<2, bool, packed_highp>		packed_highp_bvec2;$/;"	t	namespace:glm	typeref:typename:vec<2,bool,packed_highp>
packed_highp_bvec3	./glm/gtc/type_aligned.hpp	/^	typedef vec<3, bool, packed_highp>		packed_highp_bvec3;$/;"	t	namespace:glm	typeref:typename:vec<3,bool,packed_highp>
packed_highp_bvec4	./glm/gtc/type_aligned.hpp	/^	typedef vec<4, bool, packed_highp>		packed_highp_bvec4;$/;"	t	namespace:glm	typeref:typename:vec<4,bool,packed_highp>
packed_highp_dmat2	./glm/gtc/type_aligned.hpp	/^	typedef mat<2, 2, double, packed_highp>		packed_highp_dmat2;$/;"	t	namespace:glm	typeref:typename:mat<2,2,double,packed_highp>
packed_highp_dmat2x2	./glm/gtc/type_aligned.hpp	/^	typedef mat<2, 2, double, packed_highp>		packed_highp_dmat2x2;$/;"	t	namespace:glm	typeref:typename:mat<2,2,double,packed_highp>
packed_highp_dmat2x3	./glm/gtc/type_aligned.hpp	/^	typedef mat<2, 3, double, packed_highp>		packed_highp_dmat2x3;$/;"	t	namespace:glm	typeref:typename:mat<2,3,double,packed_highp>
packed_highp_dmat2x4	./glm/gtc/type_aligned.hpp	/^	typedef mat<2, 4, double, packed_highp>		packed_highp_dmat2x4;$/;"	t	namespace:glm	typeref:typename:mat<2,4,double,packed_highp>
packed_highp_dmat3	./glm/gtc/type_aligned.hpp	/^	typedef mat<3, 3, double, packed_highp>		packed_highp_dmat3;$/;"	t	namespace:glm	typeref:typename:mat<3,3,double,packed_highp>
packed_highp_dmat3x2	./glm/gtc/type_aligned.hpp	/^	typedef mat<3, 2, double, packed_highp>		packed_highp_dmat3x2;$/;"	t	namespace:glm	typeref:typename:mat<3,2,double,packed_highp>
packed_highp_dmat3x3	./glm/gtc/type_aligned.hpp	/^	typedef mat<3, 3, double, packed_highp>		packed_highp_dmat3x3;$/;"	t	namespace:glm	typeref:typename:mat<3,3,double,packed_highp>
packed_highp_dmat3x4	./glm/gtc/type_aligned.hpp	/^	typedef mat<3, 4, double, packed_highp>		packed_highp_dmat3x4;$/;"	t	namespace:glm	typeref:typename:mat<3,4,double,packed_highp>
packed_highp_dmat4	./glm/gtc/type_aligned.hpp	/^	typedef mat<4, 4, double, packed_highp>		packed_highp_dmat4;$/;"	t	namespace:glm	typeref:typename:mat<4,4,double,packed_highp>
packed_highp_dmat4x2	./glm/gtc/type_aligned.hpp	/^	typedef mat<4, 2, double, packed_highp>		packed_highp_dmat4x2;$/;"	t	namespace:glm	typeref:typename:mat<4,2,double,packed_highp>
packed_highp_dmat4x3	./glm/gtc/type_aligned.hpp	/^	typedef mat<4, 3, double, packed_highp>		packed_highp_dmat4x3;$/;"	t	namespace:glm	typeref:typename:mat<4,3,double,packed_highp>
packed_highp_dmat4x4	./glm/gtc/type_aligned.hpp	/^	typedef mat<4, 4, double, packed_highp>		packed_highp_dmat4x4;$/;"	t	namespace:glm	typeref:typename:mat<4,4,double,packed_highp>
packed_highp_dvec1	./glm/gtc/type_aligned.hpp	/^	typedef vec<1, double, packed_highp>	packed_highp_dvec1;$/;"	t	namespace:glm	typeref:typename:vec<1,double,packed_highp>
packed_highp_dvec2	./glm/gtc/type_aligned.hpp	/^	typedef vec<2, double, packed_highp>	packed_highp_dvec2;$/;"	t	namespace:glm	typeref:typename:vec<2,double,packed_highp>
packed_highp_dvec3	./glm/gtc/type_aligned.hpp	/^	typedef vec<3, double, packed_highp>	packed_highp_dvec3;$/;"	t	namespace:glm	typeref:typename:vec<3,double,packed_highp>
packed_highp_dvec4	./glm/gtc/type_aligned.hpp	/^	typedef vec<4, double, packed_highp>	packed_highp_dvec4;$/;"	t	namespace:glm	typeref:typename:vec<4,double,packed_highp>
packed_highp_ivec1	./glm/gtc/type_aligned.hpp	/^	typedef vec<1, int, packed_highp>		packed_highp_ivec1;$/;"	t	namespace:glm	typeref:typename:vec<1,int,packed_highp>
packed_highp_ivec2	./glm/gtc/type_aligned.hpp	/^	typedef vec<2, int, packed_highp>		packed_highp_ivec2;$/;"	t	namespace:glm	typeref:typename:vec<2,int,packed_highp>
packed_highp_ivec3	./glm/gtc/type_aligned.hpp	/^	typedef vec<3, int, packed_highp>		packed_highp_ivec3;$/;"	t	namespace:glm	typeref:typename:vec<3,int,packed_highp>
packed_highp_ivec4	./glm/gtc/type_aligned.hpp	/^	typedef vec<4, int, packed_highp>		packed_highp_ivec4;$/;"	t	namespace:glm	typeref:typename:vec<4,int,packed_highp>
packed_highp_mat2	./glm/gtc/type_aligned.hpp	/^	typedef mat<2, 2, float, packed_highp>		packed_highp_mat2;$/;"	t	namespace:glm	typeref:typename:mat<2,2,float,packed_highp>
packed_highp_mat2x2	./glm/gtc/type_aligned.hpp	/^	typedef mat<2, 2, float, packed_highp>		packed_highp_mat2x2;$/;"	t	namespace:glm	typeref:typename:mat<2,2,float,packed_highp>
packed_highp_mat2x3	./glm/gtc/type_aligned.hpp	/^	typedef mat<2, 3, float, packed_highp>		packed_highp_mat2x3;$/;"	t	namespace:glm	typeref:typename:mat<2,3,float,packed_highp>
packed_highp_mat2x4	./glm/gtc/type_aligned.hpp	/^	typedef mat<2, 4, float, packed_highp>		packed_highp_mat2x4;$/;"	t	namespace:glm	typeref:typename:mat<2,4,float,packed_highp>
packed_highp_mat3	./glm/gtc/type_aligned.hpp	/^	typedef mat<3, 3, float, packed_highp>		packed_highp_mat3;$/;"	t	namespace:glm	typeref:typename:mat<3,3,float,packed_highp>
packed_highp_mat3x2	./glm/gtc/type_aligned.hpp	/^	typedef mat<3, 2, float, packed_highp>		packed_highp_mat3x2;$/;"	t	namespace:glm	typeref:typename:mat<3,2,float,packed_highp>
packed_highp_mat3x3	./glm/gtc/type_aligned.hpp	/^	typedef mat<3, 3, float, packed_highp>		packed_highp_mat3x3;$/;"	t	namespace:glm	typeref:typename:mat<3,3,float,packed_highp>
packed_highp_mat3x4	./glm/gtc/type_aligned.hpp	/^	typedef mat<3, 4, float, packed_highp>		packed_highp_mat3x4;$/;"	t	namespace:glm	typeref:typename:mat<3,4,float,packed_highp>
packed_highp_mat4	./glm/gtc/type_aligned.hpp	/^	typedef mat<4, 4, float, packed_highp>		packed_highp_mat4;$/;"	t	namespace:glm	typeref:typename:mat<4,4,float,packed_highp>
packed_highp_mat4x2	./glm/gtc/type_aligned.hpp	/^	typedef mat<4, 2, float, packed_highp>		packed_highp_mat4x2;$/;"	t	namespace:glm	typeref:typename:mat<4,2,float,packed_highp>
packed_highp_mat4x3	./glm/gtc/type_aligned.hpp	/^	typedef mat<4, 3, float, packed_highp>		packed_highp_mat4x3;$/;"	t	namespace:glm	typeref:typename:mat<4,3,float,packed_highp>
packed_highp_mat4x4	./glm/gtc/type_aligned.hpp	/^	typedef mat<4, 4, float, packed_highp>		packed_highp_mat4x4;$/;"	t	namespace:glm	typeref:typename:mat<4,4,float,packed_highp>
packed_highp_uvec1	./glm/gtc/type_aligned.hpp	/^	typedef vec<1, uint, packed_highp>		packed_highp_uvec1;$/;"	t	namespace:glm	typeref:typename:vec<1,uint,packed_highp>
packed_highp_uvec2	./glm/gtc/type_aligned.hpp	/^	typedef vec<2, uint, packed_highp>		packed_highp_uvec2;$/;"	t	namespace:glm	typeref:typename:vec<2,uint,packed_highp>
packed_highp_uvec3	./glm/gtc/type_aligned.hpp	/^	typedef vec<3, uint, packed_highp>		packed_highp_uvec3;$/;"	t	namespace:glm	typeref:typename:vec<3,uint,packed_highp>
packed_highp_uvec4	./glm/gtc/type_aligned.hpp	/^	typedef vec<4, uint, packed_highp>		packed_highp_uvec4;$/;"	t	namespace:glm	typeref:typename:vec<4,uint,packed_highp>
packed_highp_vec1	./glm/gtc/type_aligned.hpp	/^	typedef vec<1, float, packed_highp>		packed_highp_vec1;$/;"	t	namespace:glm	typeref:typename:vec<1,float,packed_highp>
packed_highp_vec2	./glm/gtc/type_aligned.hpp	/^	typedef vec<2, float, packed_highp>		packed_highp_vec2;$/;"	t	namespace:glm	typeref:typename:vec<2,float,packed_highp>
packed_highp_vec3	./glm/gtc/type_aligned.hpp	/^	typedef vec<3, float, packed_highp>		packed_highp_vec3;$/;"	t	namespace:glm	typeref:typename:vec<3,float,packed_highp>
packed_highp_vec4	./glm/gtc/type_aligned.hpp	/^	typedef vec<4, float, packed_highp>		packed_highp_vec4;$/;"	t	namespace:glm	typeref:typename:vec<4,float,packed_highp>
packed_ivec1	./glm/gtc/type_aligned.hpp	/^	typedef packed_highp_ivec1			packed_ivec1;$/;"	t	namespace:glm	typeref:typename:packed_highp_ivec1
packed_ivec2	./glm/gtc/type_aligned.hpp	/^	typedef packed_highp_ivec2			packed_ivec2;$/;"	t	namespace:glm	typeref:typename:packed_highp_ivec2
packed_ivec3	./glm/gtc/type_aligned.hpp	/^	typedef packed_highp_ivec3			packed_ivec3;$/;"	t	namespace:glm	typeref:typename:packed_highp_ivec3
packed_ivec4	./glm/gtc/type_aligned.hpp	/^	typedef packed_highp_ivec4			packed_ivec4;$/;"	t	namespace:glm	typeref:typename:packed_highp_ivec4
packed_lowp	./glm/detail/qualifier.hpp	/^		packed_lowp, \/\/\/< Typed data is tightly packed in memory  and operations are executed with /;"	e	enum:glm::qualifier
packed_lowp_bvec1	./glm/gtc/type_aligned.hpp	/^	typedef vec<1, bool, packed_lowp>		packed_lowp_bvec1;$/;"	t	namespace:glm	typeref:typename:vec<1,bool,packed_lowp>
packed_lowp_bvec2	./glm/gtc/type_aligned.hpp	/^	typedef vec<2, bool, packed_lowp>		packed_lowp_bvec2;$/;"	t	namespace:glm	typeref:typename:vec<2,bool,packed_lowp>
packed_lowp_bvec3	./glm/gtc/type_aligned.hpp	/^	typedef vec<3, bool, packed_lowp>		packed_lowp_bvec3;$/;"	t	namespace:glm	typeref:typename:vec<3,bool,packed_lowp>
packed_lowp_bvec4	./glm/gtc/type_aligned.hpp	/^	typedef vec<4, bool, packed_lowp>		packed_lowp_bvec4;$/;"	t	namespace:glm	typeref:typename:vec<4,bool,packed_lowp>
packed_lowp_dmat2	./glm/gtc/type_aligned.hpp	/^	typedef mat<2, 2, double, packed_lowp>		packed_lowp_dmat2;$/;"	t	namespace:glm	typeref:typename:mat<2,2,double,packed_lowp>
packed_lowp_dmat2x2	./glm/gtc/type_aligned.hpp	/^	typedef mat<2, 2, double, packed_lowp>		packed_lowp_dmat2x2;$/;"	t	namespace:glm	typeref:typename:mat<2,2,double,packed_lowp>
packed_lowp_dmat2x3	./glm/gtc/type_aligned.hpp	/^	typedef mat<2, 3, double, packed_lowp>		packed_lowp_dmat2x3;$/;"	t	namespace:glm	typeref:typename:mat<2,3,double,packed_lowp>
packed_lowp_dmat2x4	./glm/gtc/type_aligned.hpp	/^	typedef mat<2, 4, double, packed_lowp>		packed_lowp_dmat2x4;$/;"	t	namespace:glm	typeref:typename:mat<2,4,double,packed_lowp>
packed_lowp_dmat3	./glm/gtc/type_aligned.hpp	/^	typedef mat<3, 3, double, packed_lowp>		packed_lowp_dmat3;$/;"	t	namespace:glm	typeref:typename:mat<3,3,double,packed_lowp>
packed_lowp_dmat3x2	./glm/gtc/type_aligned.hpp	/^	typedef mat<3, 2, double, packed_lowp>		packed_lowp_dmat3x2;$/;"	t	namespace:glm	typeref:typename:mat<3,2,double,packed_lowp>
packed_lowp_dmat3x3	./glm/gtc/type_aligned.hpp	/^	typedef mat<3, 3, double, packed_lowp>		packed_lowp_dmat3x3;$/;"	t	namespace:glm	typeref:typename:mat<3,3,double,packed_lowp>
packed_lowp_dmat3x4	./glm/gtc/type_aligned.hpp	/^	typedef mat<3, 4, double, packed_lowp>		packed_lowp_dmat3x4;$/;"	t	namespace:glm	typeref:typename:mat<3,4,double,packed_lowp>
packed_lowp_dmat4	./glm/gtc/type_aligned.hpp	/^	typedef mat<4, 4, double, packed_lowp>		packed_lowp_dmat4;$/;"	t	namespace:glm	typeref:typename:mat<4,4,double,packed_lowp>
packed_lowp_dmat4x2	./glm/gtc/type_aligned.hpp	/^	typedef mat<4, 2, double, packed_lowp>		packed_lowp_dmat4x2;$/;"	t	namespace:glm	typeref:typename:mat<4,2,double,packed_lowp>
packed_lowp_dmat4x3	./glm/gtc/type_aligned.hpp	/^	typedef mat<4, 3, double, packed_lowp>		packed_lowp_dmat4x3;$/;"	t	namespace:glm	typeref:typename:mat<4,3,double,packed_lowp>
packed_lowp_dmat4x4	./glm/gtc/type_aligned.hpp	/^	typedef mat<4, 4, double, packed_lowp>		packed_lowp_dmat4x4;$/;"	t	namespace:glm	typeref:typename:mat<4,4,double,packed_lowp>
packed_lowp_dvec1	./glm/gtc/type_aligned.hpp	/^	typedef vec<1, double, packed_lowp>		packed_lowp_dvec1;$/;"	t	namespace:glm	typeref:typename:vec<1,double,packed_lowp>
packed_lowp_dvec2	./glm/gtc/type_aligned.hpp	/^	typedef vec<2, double, packed_lowp>		packed_lowp_dvec2;$/;"	t	namespace:glm	typeref:typename:vec<2,double,packed_lowp>
packed_lowp_dvec3	./glm/gtc/type_aligned.hpp	/^	typedef vec<3, double, packed_lowp>		packed_lowp_dvec3;$/;"	t	namespace:glm	typeref:typename:vec<3,double,packed_lowp>
packed_lowp_dvec4	./glm/gtc/type_aligned.hpp	/^	typedef vec<4, double, packed_lowp>		packed_lowp_dvec4;$/;"	t	namespace:glm	typeref:typename:vec<4,double,packed_lowp>
packed_lowp_ivec1	./glm/gtc/type_aligned.hpp	/^	typedef vec<1, int, packed_lowp>		packed_lowp_ivec1;$/;"	t	namespace:glm	typeref:typename:vec<1,int,packed_lowp>
packed_lowp_ivec2	./glm/gtc/type_aligned.hpp	/^	typedef vec<2, int, packed_lowp>		packed_lowp_ivec2;$/;"	t	namespace:glm	typeref:typename:vec<2,int,packed_lowp>
packed_lowp_ivec3	./glm/gtc/type_aligned.hpp	/^	typedef vec<3, int, packed_lowp>		packed_lowp_ivec3;$/;"	t	namespace:glm	typeref:typename:vec<3,int,packed_lowp>
packed_lowp_ivec4	./glm/gtc/type_aligned.hpp	/^	typedef vec<4, int, packed_lowp>		packed_lowp_ivec4;$/;"	t	namespace:glm	typeref:typename:vec<4,int,packed_lowp>
packed_lowp_mat2	./glm/gtc/type_aligned.hpp	/^	typedef mat<2, 2, float, packed_lowp>		packed_lowp_mat2;$/;"	t	namespace:glm	typeref:typename:mat<2,2,float,packed_lowp>
packed_lowp_mat2x2	./glm/gtc/type_aligned.hpp	/^	typedef mat<2, 2, float, packed_lowp>		packed_lowp_mat2x2;$/;"	t	namespace:glm	typeref:typename:mat<2,2,float,packed_lowp>
packed_lowp_mat2x3	./glm/gtc/type_aligned.hpp	/^	typedef mat<2, 3, float, packed_lowp>		packed_lowp_mat2x3;$/;"	t	namespace:glm	typeref:typename:mat<2,3,float,packed_lowp>
packed_lowp_mat2x4	./glm/gtc/type_aligned.hpp	/^	typedef mat<2, 4, float, packed_lowp>		packed_lowp_mat2x4;$/;"	t	namespace:glm	typeref:typename:mat<2,4,float,packed_lowp>
packed_lowp_mat3	./glm/gtc/type_aligned.hpp	/^	typedef mat<3, 3, float, packed_lowp>		packed_lowp_mat3;$/;"	t	namespace:glm	typeref:typename:mat<3,3,float,packed_lowp>
packed_lowp_mat3x2	./glm/gtc/type_aligned.hpp	/^	typedef mat<3, 2, float, packed_lowp>		packed_lowp_mat3x2;$/;"	t	namespace:glm	typeref:typename:mat<3,2,float,packed_lowp>
packed_lowp_mat3x3	./glm/gtc/type_aligned.hpp	/^	typedef mat<3, 3, float, packed_lowp>		packed_lowp_mat3x3;$/;"	t	namespace:glm	typeref:typename:mat<3,3,float,packed_lowp>
packed_lowp_mat3x4	./glm/gtc/type_aligned.hpp	/^	typedef mat<3, 4, float, packed_lowp>		packed_lowp_mat3x4;$/;"	t	namespace:glm	typeref:typename:mat<3,4,float,packed_lowp>
packed_lowp_mat4	./glm/gtc/type_aligned.hpp	/^	typedef mat<4, 4, float, packed_lowp>		packed_lowp_mat4;$/;"	t	namespace:glm	typeref:typename:mat<4,4,float,packed_lowp>
packed_lowp_mat4x2	./glm/gtc/type_aligned.hpp	/^	typedef mat<4, 2, float, packed_lowp>		packed_lowp_mat4x2;$/;"	t	namespace:glm	typeref:typename:mat<4,2,float,packed_lowp>
packed_lowp_mat4x3	./glm/gtc/type_aligned.hpp	/^	typedef mat<4, 3, float, packed_lowp>		packed_lowp_mat4x3;$/;"	t	namespace:glm	typeref:typename:mat<4,3,float,packed_lowp>
packed_lowp_mat4x4	./glm/gtc/type_aligned.hpp	/^	typedef mat<4, 4, float, packed_lowp>		packed_lowp_mat4x4;$/;"	t	namespace:glm	typeref:typename:mat<4,4,float,packed_lowp>
packed_lowp_uvec1	./glm/gtc/type_aligned.hpp	/^	typedef vec<1, uint, packed_lowp>		packed_lowp_uvec1;$/;"	t	namespace:glm	typeref:typename:vec<1,uint,packed_lowp>
packed_lowp_uvec2	./glm/gtc/type_aligned.hpp	/^	typedef vec<2, uint, packed_lowp>		packed_lowp_uvec2;$/;"	t	namespace:glm	typeref:typename:vec<2,uint,packed_lowp>
packed_lowp_uvec3	./glm/gtc/type_aligned.hpp	/^	typedef vec<3, uint, packed_lowp>		packed_lowp_uvec3;$/;"	t	namespace:glm	typeref:typename:vec<3,uint,packed_lowp>
packed_lowp_uvec4	./glm/gtc/type_aligned.hpp	/^	typedef vec<4, uint, packed_lowp>		packed_lowp_uvec4;$/;"	t	namespace:glm	typeref:typename:vec<4,uint,packed_lowp>
packed_lowp_vec1	./glm/gtc/type_aligned.hpp	/^	typedef vec<1, float, packed_lowp>		packed_lowp_vec1;$/;"	t	namespace:glm	typeref:typename:vec<1,float,packed_lowp>
packed_lowp_vec2	./glm/gtc/type_aligned.hpp	/^	typedef vec<2, float, packed_lowp>		packed_lowp_vec2;$/;"	t	namespace:glm	typeref:typename:vec<2,float,packed_lowp>
packed_lowp_vec3	./glm/gtc/type_aligned.hpp	/^	typedef vec<3, float, packed_lowp>		packed_lowp_vec3;$/;"	t	namespace:glm	typeref:typename:vec<3,float,packed_lowp>
packed_lowp_vec4	./glm/gtc/type_aligned.hpp	/^	typedef vec<4, float, packed_lowp>		packed_lowp_vec4;$/;"	t	namespace:glm	typeref:typename:vec<4,float,packed_lowp>
packed_mat2	./glm/gtc/type_aligned.hpp	/^	typedef packed_highp_mat2			packed_mat2;$/;"	t	namespace:glm	typeref:typename:packed_highp_mat2
packed_mat2	./glm/gtc/type_aligned.hpp	/^	typedef packed_lowp_mat2			packed_mat2;$/;"	t	namespace:glm	typeref:typename:packed_lowp_mat2
packed_mat2	./glm/gtc/type_aligned.hpp	/^	typedef packed_mediump_mat2			packed_mat2;$/;"	t	namespace:glm	typeref:typename:packed_mediump_mat2
packed_mat2x2	./glm/gtc/type_aligned.hpp	/^	typedef packed_highp_mat2x2			packed_mat2x2;$/;"	t	namespace:glm	typeref:typename:packed_highp_mat2x2
packed_mat2x2	./glm/gtc/type_aligned.hpp	/^	typedef packed_lowp_mat2x2			packed_mat2x2;$/;"	t	namespace:glm	typeref:typename:packed_lowp_mat2x2
packed_mat2x2	./glm/gtc/type_aligned.hpp	/^	typedef packed_mediump_mat2x2		packed_mat2x2;$/;"	t	namespace:glm	typeref:typename:packed_mediump_mat2x2
packed_mat2x3	./glm/gtc/type_aligned.hpp	/^	typedef packed_highp_mat2x3			packed_mat2x3;$/;"	t	namespace:glm	typeref:typename:packed_highp_mat2x3
packed_mat2x3	./glm/gtc/type_aligned.hpp	/^	typedef packed_lowp_mat2x3			packed_mat2x3;$/;"	t	namespace:glm	typeref:typename:packed_lowp_mat2x3
packed_mat2x3	./glm/gtc/type_aligned.hpp	/^	typedef packed_mediump_mat2x3		packed_mat2x3;$/;"	t	namespace:glm	typeref:typename:packed_mediump_mat2x3
packed_mat2x4	./glm/gtc/type_aligned.hpp	/^	typedef packed_highp_mat2x4			packed_mat2x4;$/;"	t	namespace:glm	typeref:typename:packed_highp_mat2x4
packed_mat2x4	./glm/gtc/type_aligned.hpp	/^	typedef packed_lowp_mat2x4			packed_mat2x4;$/;"	t	namespace:glm	typeref:typename:packed_lowp_mat2x4
packed_mat2x4	./glm/gtc/type_aligned.hpp	/^	typedef packed_mediump_mat2x4		packed_mat2x4;$/;"	t	namespace:glm	typeref:typename:packed_mediump_mat2x4
packed_mat3	./glm/gtc/type_aligned.hpp	/^	typedef packed_highp_mat3			packed_mat3;$/;"	t	namespace:glm	typeref:typename:packed_highp_mat3
packed_mat3	./glm/gtc/type_aligned.hpp	/^	typedef packed_lowp_mat3			packed_mat3;$/;"	t	namespace:glm	typeref:typename:packed_lowp_mat3
packed_mat3	./glm/gtc/type_aligned.hpp	/^	typedef packed_mediump_mat3			packed_mat3;$/;"	t	namespace:glm	typeref:typename:packed_mediump_mat3
packed_mat3x2	./glm/gtc/type_aligned.hpp	/^	typedef packed_highp_mat3x2			packed_mat3x2;$/;"	t	namespace:glm	typeref:typename:packed_highp_mat3x2
packed_mat3x2	./glm/gtc/type_aligned.hpp	/^	typedef packed_lowp_mat3x2			packed_mat3x2;$/;"	t	namespace:glm	typeref:typename:packed_lowp_mat3x2
packed_mat3x2	./glm/gtc/type_aligned.hpp	/^	typedef packed_mediump_mat3x2		packed_mat3x2;$/;"	t	namespace:glm	typeref:typename:packed_mediump_mat3x2
packed_mat3x3	./glm/gtc/type_aligned.hpp	/^	typedef packed_highp_mat3x3			packed_mat3x3;$/;"	t	namespace:glm	typeref:typename:packed_highp_mat3x3
packed_mat3x3	./glm/gtc/type_aligned.hpp	/^	typedef packed_lowp_mat3x3			packed_mat3x3;$/;"	t	namespace:glm	typeref:typename:packed_lowp_mat3x3
packed_mat3x3	./glm/gtc/type_aligned.hpp	/^	typedef packed_mediump_mat3x3		packed_mat3x3;$/;"	t	namespace:glm	typeref:typename:packed_mediump_mat3x3
packed_mat3x4	./glm/gtc/type_aligned.hpp	/^	typedef packed_highp_mat3x4			packed_mat3x4;$/;"	t	namespace:glm	typeref:typename:packed_highp_mat3x4
packed_mat3x4	./glm/gtc/type_aligned.hpp	/^	typedef packed_lowp_mat3x4			packed_mat3x4;$/;"	t	namespace:glm	typeref:typename:packed_lowp_mat3x4
packed_mat3x4	./glm/gtc/type_aligned.hpp	/^	typedef packed_mediump_mat3x4		packed_mat3x4;$/;"	t	namespace:glm	typeref:typename:packed_mediump_mat3x4
packed_mat4	./glm/gtc/type_aligned.hpp	/^	typedef packed_highp_mat4			packed_mat4;$/;"	t	namespace:glm	typeref:typename:packed_highp_mat4
packed_mat4	./glm/gtc/type_aligned.hpp	/^	typedef packed_lowp_mat4			packed_mat4;$/;"	t	namespace:glm	typeref:typename:packed_lowp_mat4
packed_mat4	./glm/gtc/type_aligned.hpp	/^	typedef packed_mediump_mat4			packed_mat4;$/;"	t	namespace:glm	typeref:typename:packed_mediump_mat4
packed_mat4x2	./glm/gtc/type_aligned.hpp	/^	typedef packed_highp_mat4x2			packed_mat4x2;$/;"	t	namespace:glm	typeref:typename:packed_highp_mat4x2
packed_mat4x2	./glm/gtc/type_aligned.hpp	/^	typedef packed_lowp_mat4x2			packed_mat4x2;$/;"	t	namespace:glm	typeref:typename:packed_lowp_mat4x2
packed_mat4x2	./glm/gtc/type_aligned.hpp	/^	typedef packed_mediump_mat4x2		packed_mat4x2;$/;"	t	namespace:glm	typeref:typename:packed_mediump_mat4x2
packed_mat4x3	./glm/gtc/type_aligned.hpp	/^	typedef packed_highp_mat4x3			packed_mat4x3;$/;"	t	namespace:glm	typeref:typename:packed_highp_mat4x3
packed_mat4x3	./glm/gtc/type_aligned.hpp	/^	typedef packed_lowp_mat4x3			packed_mat4x3;$/;"	t	namespace:glm	typeref:typename:packed_lowp_mat4x3
packed_mat4x3	./glm/gtc/type_aligned.hpp	/^	typedef packed_mediump_mat4x3		packed_mat4x3;$/;"	t	namespace:glm	typeref:typename:packed_mediump_mat4x3
packed_mat4x4	./glm/gtc/type_aligned.hpp	/^	typedef packed_highp_mat4x4			packed_mat4x4;$/;"	t	namespace:glm	typeref:typename:packed_highp_mat4x4
packed_mat4x4	./glm/gtc/type_aligned.hpp	/^	typedef packed_lowp_mat4x4			packed_mat4x4;$/;"	t	namespace:glm	typeref:typename:packed_lowp_mat4x4
packed_mat4x4	./glm/gtc/type_aligned.hpp	/^	typedef packed_mediump_mat4x4		packed_mat4x4;$/;"	t	namespace:glm	typeref:typename:packed_mediump_mat4x4
packed_mediump	./glm/detail/qualifier.hpp	/^		packed_mediump, \/\/\/< Typed data is tightly packed in memory  and operations are executed wi/;"	e	enum:glm::qualifier
packed_mediump_bvec1	./glm/gtc/type_aligned.hpp	/^	typedef vec<1, bool, packed_mediump>	packed_mediump_bvec1;$/;"	t	namespace:glm	typeref:typename:vec<1,bool,packed_mediump>
packed_mediump_bvec2	./glm/gtc/type_aligned.hpp	/^	typedef vec<2, bool, packed_mediump>	packed_mediump_bvec2;$/;"	t	namespace:glm	typeref:typename:vec<2,bool,packed_mediump>
packed_mediump_bvec3	./glm/gtc/type_aligned.hpp	/^	typedef vec<3, bool, packed_mediump>	packed_mediump_bvec3;$/;"	t	namespace:glm	typeref:typename:vec<3,bool,packed_mediump>
packed_mediump_bvec4	./glm/gtc/type_aligned.hpp	/^	typedef vec<4, bool, packed_mediump>	packed_mediump_bvec4;$/;"	t	namespace:glm	typeref:typename:vec<4,bool,packed_mediump>
packed_mediump_dmat2	./glm/gtc/type_aligned.hpp	/^	typedef mat<2, 2, double, packed_mediump>	packed_mediump_dmat2;$/;"	t	namespace:glm	typeref:typename:mat<2,2,double,packed_mediump>
packed_mediump_dmat2x2	./glm/gtc/type_aligned.hpp	/^	typedef mat<2, 2, double, packed_mediump>	packed_mediump_dmat2x2;$/;"	t	namespace:glm	typeref:typename:mat<2,2,double,packed_mediump>
packed_mediump_dmat2x3	./glm/gtc/type_aligned.hpp	/^	typedef mat<2, 3, double, packed_mediump>	packed_mediump_dmat2x3;$/;"	t	namespace:glm	typeref:typename:mat<2,3,double,packed_mediump>
packed_mediump_dmat2x4	./glm/gtc/type_aligned.hpp	/^	typedef mat<2, 4, double, packed_mediump>	packed_mediump_dmat2x4;$/;"	t	namespace:glm	typeref:typename:mat<2,4,double,packed_mediump>
packed_mediump_dmat3	./glm/gtc/type_aligned.hpp	/^	typedef mat<3, 3, double, packed_mediump>	packed_mediump_dmat3;$/;"	t	namespace:glm	typeref:typename:mat<3,3,double,packed_mediump>
packed_mediump_dmat3x2	./glm/gtc/type_aligned.hpp	/^	typedef mat<3, 2, double, packed_mediump>	packed_mediump_dmat3x2;$/;"	t	namespace:glm	typeref:typename:mat<3,2,double,packed_mediump>
packed_mediump_dmat3x3	./glm/gtc/type_aligned.hpp	/^	typedef mat<3, 3, double, packed_mediump>	packed_mediump_dmat3x3;$/;"	t	namespace:glm	typeref:typename:mat<3,3,double,packed_mediump>
packed_mediump_dmat3x4	./glm/gtc/type_aligned.hpp	/^	typedef mat<3, 4, double, packed_mediump>	packed_mediump_dmat3x4;$/;"	t	namespace:glm	typeref:typename:mat<3,4,double,packed_mediump>
packed_mediump_dmat4	./glm/gtc/type_aligned.hpp	/^	typedef mat<4, 4, double, packed_mediump>	packed_mediump_dmat4;$/;"	t	namespace:glm	typeref:typename:mat<4,4,double,packed_mediump>
packed_mediump_dmat4x2	./glm/gtc/type_aligned.hpp	/^	typedef mat<4, 2, double, packed_mediump>	packed_mediump_dmat4x2;$/;"	t	namespace:glm	typeref:typename:mat<4,2,double,packed_mediump>
packed_mediump_dmat4x3	./glm/gtc/type_aligned.hpp	/^	typedef mat<4, 3, double, packed_mediump>	packed_mediump_dmat4x3;$/;"	t	namespace:glm	typeref:typename:mat<4,3,double,packed_mediump>
packed_mediump_dmat4x4	./glm/gtc/type_aligned.hpp	/^	typedef mat<4, 4, double, packed_mediump>	packed_mediump_dmat4x4;$/;"	t	namespace:glm	typeref:typename:mat<4,4,double,packed_mediump>
packed_mediump_dvec1	./glm/gtc/type_aligned.hpp	/^	typedef vec<1, double, packed_mediump>	packed_mediump_dvec1;$/;"	t	namespace:glm	typeref:typename:vec<1,double,packed_mediump>
packed_mediump_dvec2	./glm/gtc/type_aligned.hpp	/^	typedef vec<2, double, packed_mediump>	packed_mediump_dvec2;$/;"	t	namespace:glm	typeref:typename:vec<2,double,packed_mediump>
packed_mediump_dvec3	./glm/gtc/type_aligned.hpp	/^	typedef vec<3, double, packed_mediump>	packed_mediump_dvec3;$/;"	t	namespace:glm	typeref:typename:vec<3,double,packed_mediump>
packed_mediump_dvec4	./glm/gtc/type_aligned.hpp	/^	typedef vec<4, double, packed_mediump>	packed_mediump_dvec4;$/;"	t	namespace:glm	typeref:typename:vec<4,double,packed_mediump>
packed_mediump_ivec1	./glm/gtc/type_aligned.hpp	/^	typedef vec<1, int, packed_mediump>		packed_mediump_ivec1;$/;"	t	namespace:glm	typeref:typename:vec<1,int,packed_mediump>
packed_mediump_ivec2	./glm/gtc/type_aligned.hpp	/^	typedef vec<2, int, packed_mediump>		packed_mediump_ivec2;$/;"	t	namespace:glm	typeref:typename:vec<2,int,packed_mediump>
packed_mediump_ivec3	./glm/gtc/type_aligned.hpp	/^	typedef vec<3, int, packed_mediump>		packed_mediump_ivec3;$/;"	t	namespace:glm	typeref:typename:vec<3,int,packed_mediump>
packed_mediump_ivec4	./glm/gtc/type_aligned.hpp	/^	typedef vec<4, int, packed_mediump>		packed_mediump_ivec4;$/;"	t	namespace:glm	typeref:typename:vec<4,int,packed_mediump>
packed_mediump_mat2	./glm/gtc/type_aligned.hpp	/^	typedef mat<2, 2, float, packed_mediump>	packed_mediump_mat2;$/;"	t	namespace:glm	typeref:typename:mat<2,2,float,packed_mediump>
packed_mediump_mat2x2	./glm/gtc/type_aligned.hpp	/^	typedef mat<2, 2, float, packed_mediump>	packed_mediump_mat2x2;$/;"	t	namespace:glm	typeref:typename:mat<2,2,float,packed_mediump>
packed_mediump_mat2x3	./glm/gtc/type_aligned.hpp	/^	typedef mat<2, 3, float, packed_mediump>	packed_mediump_mat2x3;$/;"	t	namespace:glm	typeref:typename:mat<2,3,float,packed_mediump>
packed_mediump_mat2x4	./glm/gtc/type_aligned.hpp	/^	typedef mat<2, 4, float, packed_mediump>	packed_mediump_mat2x4;$/;"	t	namespace:glm	typeref:typename:mat<2,4,float,packed_mediump>
packed_mediump_mat3	./glm/gtc/type_aligned.hpp	/^	typedef mat<3, 3, float, packed_mediump>	packed_mediump_mat3;$/;"	t	namespace:glm	typeref:typename:mat<3,3,float,packed_mediump>
packed_mediump_mat3x2	./glm/gtc/type_aligned.hpp	/^	typedef mat<3, 2, float, packed_mediump>	packed_mediump_mat3x2;$/;"	t	namespace:glm	typeref:typename:mat<3,2,float,packed_mediump>
packed_mediump_mat3x3	./glm/gtc/type_aligned.hpp	/^	typedef mat<3, 3, float, packed_mediump>	packed_mediump_mat3x3;$/;"	t	namespace:glm	typeref:typename:mat<3,3,float,packed_mediump>
packed_mediump_mat3x4	./glm/gtc/type_aligned.hpp	/^	typedef mat<3, 4, float, packed_mediump>	packed_mediump_mat3x4;$/;"	t	namespace:glm	typeref:typename:mat<3,4,float,packed_mediump>
packed_mediump_mat4	./glm/gtc/type_aligned.hpp	/^	typedef mat<4, 4, float, packed_mediump>	packed_mediump_mat4;$/;"	t	namespace:glm	typeref:typename:mat<4,4,float,packed_mediump>
packed_mediump_mat4x2	./glm/gtc/type_aligned.hpp	/^	typedef mat<4, 2, float, packed_mediump>	packed_mediump_mat4x2;$/;"	t	namespace:glm	typeref:typename:mat<4,2,float,packed_mediump>
packed_mediump_mat4x3	./glm/gtc/type_aligned.hpp	/^	typedef mat<4, 3, float, packed_mediump>	packed_mediump_mat4x3;$/;"	t	namespace:glm	typeref:typename:mat<4,3,float,packed_mediump>
packed_mediump_mat4x4	./glm/gtc/type_aligned.hpp	/^	typedef mat<4, 4, float, packed_mediump>	packed_mediump_mat4x4;$/;"	t	namespace:glm	typeref:typename:mat<4,4,float,packed_mediump>
packed_mediump_uvec1	./glm/gtc/type_aligned.hpp	/^	typedef vec<1, uint, packed_mediump>	packed_mediump_uvec1;$/;"	t	namespace:glm	typeref:typename:vec<1,uint,packed_mediump>
packed_mediump_uvec2	./glm/gtc/type_aligned.hpp	/^	typedef vec<2, uint, packed_mediump>	packed_mediump_uvec2;$/;"	t	namespace:glm	typeref:typename:vec<2,uint,packed_mediump>
packed_mediump_uvec3	./glm/gtc/type_aligned.hpp	/^	typedef vec<3, uint, packed_mediump>	packed_mediump_uvec3;$/;"	t	namespace:glm	typeref:typename:vec<3,uint,packed_mediump>
packed_mediump_uvec4	./glm/gtc/type_aligned.hpp	/^	typedef vec<4, uint, packed_mediump>	packed_mediump_uvec4;$/;"	t	namespace:glm	typeref:typename:vec<4,uint,packed_mediump>
packed_mediump_vec1	./glm/gtc/type_aligned.hpp	/^	typedef vec<1, float, packed_mediump>	packed_mediump_vec1;$/;"	t	namespace:glm	typeref:typename:vec<1,float,packed_mediump>
packed_mediump_vec2	./glm/gtc/type_aligned.hpp	/^	typedef vec<2, float, packed_mediump>	packed_mediump_vec2;$/;"	t	namespace:glm	typeref:typename:vec<2,float,packed_mediump>
packed_mediump_vec3	./glm/gtc/type_aligned.hpp	/^	typedef vec<3, float, packed_mediump>	packed_mediump_vec3;$/;"	t	namespace:glm	typeref:typename:vec<3,float,packed_mediump>
packed_mediump_vec4	./glm/gtc/type_aligned.hpp	/^	typedef vec<4, float, packed_mediump>	packed_mediump_vec4;$/;"	t	namespace:glm	typeref:typename:vec<4,float,packed_mediump>
packed_uvec1	./glm/gtc/type_aligned.hpp	/^	typedef packed_highp_uvec1			packed_uvec1;$/;"	t	namespace:glm	typeref:typename:packed_highp_uvec1
packed_uvec2	./glm/gtc/type_aligned.hpp	/^	typedef packed_highp_uvec2			packed_uvec2;$/;"	t	namespace:glm	typeref:typename:packed_highp_uvec2
packed_uvec3	./glm/gtc/type_aligned.hpp	/^	typedef packed_highp_uvec3			packed_uvec3;$/;"	t	namespace:glm	typeref:typename:packed_highp_uvec3
packed_uvec4	./glm/gtc/type_aligned.hpp	/^	typedef packed_highp_uvec4			packed_uvec4;$/;"	t	namespace:glm	typeref:typename:packed_highp_uvec4
packed_vec1	./glm/gtc/type_aligned.hpp	/^	typedef packed_highp_vec1			packed_vec1;$/;"	t	namespace:glm	typeref:typename:packed_highp_vec1
packed_vec1	./glm/gtc/type_aligned.hpp	/^	typedef packed_lowp_vec1			packed_vec1;$/;"	t	namespace:glm	typeref:typename:packed_lowp_vec1
packed_vec1	./glm/gtc/type_aligned.hpp	/^	typedef packed_mediump_vec1			packed_vec1;$/;"	t	namespace:glm	typeref:typename:packed_mediump_vec1
packed_vec2	./glm/gtc/type_aligned.hpp	/^	typedef packed_highp_vec2			packed_vec2;$/;"	t	namespace:glm	typeref:typename:packed_highp_vec2
packed_vec2	./glm/gtc/type_aligned.hpp	/^	typedef packed_lowp_vec2			packed_vec2;$/;"	t	namespace:glm	typeref:typename:packed_lowp_vec2
packed_vec2	./glm/gtc/type_aligned.hpp	/^	typedef packed_mediump_vec2			packed_vec2;$/;"	t	namespace:glm	typeref:typename:packed_mediump_vec2
packed_vec3	./glm/gtc/type_aligned.hpp	/^	typedef packed_highp_vec3			packed_vec3;$/;"	t	namespace:glm	typeref:typename:packed_highp_vec3
packed_vec3	./glm/gtc/type_aligned.hpp	/^	typedef packed_lowp_vec3			packed_vec3;$/;"	t	namespace:glm	typeref:typename:packed_lowp_vec3
packed_vec3	./glm/gtc/type_aligned.hpp	/^	typedef packed_mediump_vec3			packed_vec3;$/;"	t	namespace:glm	typeref:typename:packed_mediump_vec3
packed_vec4	./glm/gtc/type_aligned.hpp	/^	typedef packed_highp_vec4			packed_vec4;$/;"	t	namespace:glm	typeref:typename:packed_highp_vec4
packed_vec4	./glm/gtc/type_aligned.hpp	/^	typedef packed_lowp_vec4			packed_vec4;$/;"	t	namespace:glm	typeref:typename:packed_lowp_vec4
packed_vec4	./glm/gtc/type_aligned.hpp	/^	typedef packed_mediump_vec4			packed_vec4;$/;"	t	namespace:glm	typeref:typename:packed_mediump_vec4
pad	./GL/glxew.h	/^  long pad[24]; $/;"	m	union:__GLXEvent	typeref:typename:long[24]
part_type	./glm/gtx/dual_quaternion.hpp	/^		typedef qua<T, Q> part_type;$/;"	t	struct:glm::tdualquat	typeref:typename:qua<T,Q>
participationType	./GL/glxew.h	/^  unsigned int participationType; $/;"	m	struct:__anonb1a929810408	typeref:typename:unsigned int
parts	./glm/ext/scalar_ulp.inl	/^	} parts;$/;"	m	union:__anonb0ce8848020a	typeref:struct:__anonb0ce8848020a::__anonb0ce88480308	file:
perlin	./glm/gtc/noise.inl	/^	GLM_FUNC_QUALIFIER T perlin(vec<2, T, Q> const& Position)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER T
perlin	./glm/gtc/noise.inl	/^	GLM_FUNC_QUALIFIER T perlin(vec<2, T, Q> const& Position, vec<2, T, Q> const& rep)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER T
perlin	./glm/gtc/noise.inl	/^	GLM_FUNC_QUALIFIER T perlin(vec<3, T, Q> const& Position)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER T
perlin	./glm/gtc/noise.inl	/^	GLM_FUNC_QUALIFIER T perlin(vec<3, T, Q> const& Position, vec<3, T, Q> const& rep)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER T
perlin	./glm/gtc/noise.inl	/^	GLM_FUNC_QUALIFIER T perlin(vec<4, T, Q> const& Position)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER T
perlin	./glm/gtc/noise.inl	/^	GLM_FUNC_QUALIFIER T perlin(vec<4, T, Q> const& Position, vec<4, T, Q> const& rep)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER T
permute	./glm/detail/_noise.hpp	/^	GLM_FUNC_QUALIFIER T permute(T const& x)$/;"	f	namespace:glm::detail	typeref:typename:GLM_FUNC_QUALIFIER T
permute	./glm/detail/_noise.hpp	/^	GLM_FUNC_QUALIFIER vec<2, T, Q> permute(vec<2, T, Q> const& x)$/;"	f	namespace:glm::detail	typeref:typename:GLM_FUNC_QUALIFIER vec<2,T,Q>
permute	./glm/detail/_noise.hpp	/^	GLM_FUNC_QUALIFIER vec<3, T, Q> permute(vec<3, T, Q> const& x)$/;"	f	namespace:glm::detail	typeref:typename:GLM_FUNC_QUALIFIER vec<3,T,Q>
permute	./glm/detail/_noise.hpp	/^	GLM_FUNC_QUALIFIER vec<4, T, Q> permute(vec<4, T, Q> const& x)$/;"	f	namespace:glm::detail	typeref:typename:GLM_FUNC_QUALIFIER vec<4,T,Q>
perp	./glm/gtx/perpendicular.inl	/^	GLM_FUNC_QUALIFIER genType perp(genType const& x, genType const& Normal)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genType
perspective	./glm/ext/matrix_clip_space.inl	/^	GLM_FUNC_QUALIFIER mat<4, 4, T, defaultp> perspective(T fovy, T aspect, T zNear, T zFar)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER mat<4,4,T,defaultp>
perspectiveFov	./glm/ext/matrix_clip_space.inl	/^	GLM_FUNC_QUALIFIER mat<4, 4, T, defaultp> perspectiveFov(T fov, T width, T height, T zNear, T z/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER mat<4,4,T,defaultp>
perspectiveFovLH	./glm/ext/matrix_clip_space.inl	/^	GLM_FUNC_QUALIFIER mat<4, 4, T, defaultp> perspectiveFovLH(T fov, T width, T height, T zNear, T/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER mat<4,4,T,defaultp>
perspectiveFovLH_NO	./glm/ext/matrix_clip_space.inl	/^	GLM_FUNC_QUALIFIER mat<4, 4, T, defaultp> perspectiveFovLH_NO(T fov, T width, T height, T zNear/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER mat<4,4,T,defaultp>
perspectiveFovLH_ZO	./glm/ext/matrix_clip_space.inl	/^	GLM_FUNC_QUALIFIER mat<4, 4, T, defaultp> perspectiveFovLH_ZO(T fov, T width, T height, T zNear/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER mat<4,4,T,defaultp>
perspectiveFovNO	./glm/ext/matrix_clip_space.inl	/^	GLM_FUNC_QUALIFIER mat<4, 4, T, defaultp> perspectiveFovNO(T fov, T width, T height, T zNear, T/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER mat<4,4,T,defaultp>
perspectiveFovRH	./glm/ext/matrix_clip_space.inl	/^	GLM_FUNC_QUALIFIER mat<4, 4, T, defaultp> perspectiveFovRH(T fov, T width, T height, T zNear, T/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER mat<4,4,T,defaultp>
perspectiveFovRH_NO	./glm/ext/matrix_clip_space.inl	/^	GLM_FUNC_QUALIFIER mat<4, 4, T, defaultp> perspectiveFovRH_NO(T fov, T width, T height, T zNear/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER mat<4,4,T,defaultp>
perspectiveFovRH_ZO	./glm/ext/matrix_clip_space.inl	/^	GLM_FUNC_QUALIFIER mat<4, 4, T, defaultp> perspectiveFovRH_ZO(T fov, T width, T height, T zNear/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER mat<4,4,T,defaultp>
perspectiveFovZO	./glm/ext/matrix_clip_space.inl	/^	GLM_FUNC_QUALIFIER mat<4, 4, T, defaultp> perspectiveFovZO(T fov, T width, T height, T zNear, T/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER mat<4,4,T,defaultp>
perspectiveLH	./glm/ext/matrix_clip_space.inl	/^	GLM_FUNC_QUALIFIER mat<4, 4, T, defaultp> perspectiveLH(T fovy, T aspect, T zNear, T zFar)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER mat<4,4,T,defaultp>
perspectiveLH_NO	./glm/ext/matrix_clip_space.inl	/^	GLM_FUNC_QUALIFIER mat<4, 4, T, defaultp> perspectiveLH_NO(T fovy, T aspect, T zNear, T zFar)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER mat<4,4,T,defaultp>
perspectiveLH_ZO	./glm/ext/matrix_clip_space.inl	/^	GLM_FUNC_QUALIFIER mat<4, 4, T, defaultp> perspectiveLH_ZO(T fovy, T aspect, T zNear, T zFar)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER mat<4,4,T,defaultp>
perspectiveNO	./glm/ext/matrix_clip_space.inl	/^	GLM_FUNC_QUALIFIER mat<4, 4, T, defaultp> perspectiveNO(T fovy, T aspect, T zNear, T zFar)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER mat<4,4,T,defaultp>
perspectiveRH	./glm/ext/matrix_clip_space.inl	/^	GLM_FUNC_QUALIFIER mat<4, 4, T, defaultp> perspectiveRH(T fovy, T aspect, T zNear, T zFar)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER mat<4,4,T,defaultp>
perspectiveRH_NO	./glm/ext/matrix_clip_space.inl	/^	GLM_FUNC_QUALIFIER mat<4, 4, T, defaultp> perspectiveRH_NO(T fovy, T aspect, T zNear, T zFar)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER mat<4,4,T,defaultp>
perspectiveRH_ZO	./glm/ext/matrix_clip_space.inl	/^	GLM_FUNC_QUALIFIER mat<4, 4, T, defaultp> perspectiveRH_ZO(T fovy, T aspect, T zNear, T zFar)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER mat<4,4,T,defaultp>
perspectiveZO	./glm/ext/matrix_clip_space.inl	/^	GLM_FUNC_QUALIFIER mat<4, 4, T, defaultp> perspectiveZO(T fovy, T aspect, T zNear, T zFar)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER mat<4,4,T,defaultp>
pi	./glm/ext/scalar_constants.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR genType pi()$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR genType
pickMatrix	./glm/ext/matrix_projection.inl	/^	GLM_FUNC_QUALIFIER mat<4, 4, T, Q> pickMatrix(vec<2, T, Q> const& center, vec<2, T, Q> const& d/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER mat<4,4,T,Q>
pipeName	./GL/glxew.h	/^  char pipeName[GLX_HYPERPIPE_PIPE_NAME_LENGTH_SGIX]; $/;"	m	struct:__anonb1a929810208	typeref:typename:char[]
pipeName	./GL/glxew.h	/^  char pipeName[GLX_HYPERPIPE_PIPE_NAME_LENGTH_SGIX]; $/;"	m	struct:__anonb1a929810308	typeref:typename:char[]
pipeName	./GL/glxew.h	/^  char pipeName[GLX_HYPERPIPE_PIPE_NAME_LENGTH_SGIX]; $/;"	m	struct:__anonb1a929810408	typeref:typename:char[]
pipeName	./GL/glxew.h	/^  char pipeName[GLX_HYPERPIPE_PIPE_NAME_LENGTH_SGIX]; $/;"	m	struct:__anonb1a929810508	typeref:typename:char[]
pitch	./glm/gtc/quaternion.inl	/^	GLM_FUNC_QUALIFIER T pitch(qua<T, Q> const& q)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER T
polar	./glm/gtx/polar_coordinates.inl	/^	GLM_FUNC_QUALIFIER vec<3, T, Q> polar$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<3,T,Q>
pow	./glm/detail/func_exponential.inl	/^	GLM_FUNC_QUALIFIER vec<L, T, Q> pow(vec<L, T, Q> const& base, vec<L, T, Q> const& exponent)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<L,T,Q>
pow	./glm/ext/quaternion_exponential.inl	/^	GLM_FUNC_QUALIFIER qua<T, Q> pow(qua<T, Q> const& x, T y)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER qua<T,Q>
pow	./glm/gtx/integer.inl	/^	GLM_FUNC_QUALIFIER int pow(int x, uint y)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER int
pow	./glm/gtx/integer.inl	/^	GLM_FUNC_QUALIFIER uint pow(uint x, uint y)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER uint
pow2	./glm/gtx/optimum_pow.inl	/^	GLM_FUNC_QUALIFIER genType pow2(genType const& x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genType
pow3	./glm/gtx/optimum_pow.inl	/^	GLM_FUNC_QUALIFIER genType pow3(genType const& x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genType
pow4	./glm/gtx/optimum_pow.inl	/^	GLM_FUNC_QUALIFIER genType pow4(genType const& x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genType
powerOfTwoAbove	./glm/gtx/bit.inl	/^	GLM_FUNC_QUALIFIER genType powerOfTwoAbove(genType value)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genType
powerOfTwoAbove	./glm/gtx/bit.inl	/^	GLM_FUNC_QUALIFIER vec<L, T, Q> powerOfTwoAbove(vec<L, T, Q> const& v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<L,T,Q>
powerOfTwoBelow	./glm/gtx/bit.inl	/^	GLM_FUNC_QUALIFIER genType powerOfTwoBelow(genType value)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genType
powerOfTwoBelow	./glm/gtx/bit.inl	/^	GLM_FUNC_QUALIFIER vec<L, T, Q> powerOfTwoBelow(vec<L, T, Q> const& v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<L,T,Q>
powerOfTwoNearest	./glm/gtx/bit.inl	/^	GLM_FUNC_QUALIFIER genType powerOfTwoNearest(genType value)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genType
powerOfTwoNearest	./glm/gtx/bit.inl	/^	GLM_FUNC_QUALIFIER vec<L, T, Q> powerOfTwoNearest(vec<L, T, Q> const& v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<L,T,Q>
precision	./glm/detail/qualifier.hpp	/^	typedef qualifier precision;$/;"	t	namespace:glm	typeref:typename:qualifier
precision	./glm/gtx/io.hpp	/^			unsigned   precision;$/;"	m	class:glm::io::format_punct	typeref:typename:unsigned
precision	./glm/gtx/io.hpp	/^		struct precision$/;"	s	namespace:glm::io
precision	./glm/gtx/io.inl	/^	GLM_FUNC_QUALIFIER precision::precision(unsigned a)$/;"	f	class:glm::io::precision	typeref:typename:GLM_FUNC_QUALIFIER
precision_	./glm/gtx/io.hpp	/^			streamsize_type precision_;$/;"	m	class:glm::io::basic_state_saver	typeref:typename:streamsize_type
prefix	./glm/gtx/string_cast.inl	/^	struct prefix<bool>$/;"	s	namespace:glm::detail	file:
prefix	./glm/gtx/string_cast.inl	/^	struct prefix<double>$/;"	s	namespace:glm::detail	file:
prefix	./glm/gtx/string_cast.inl	/^	struct prefix<float>$/;"	s	namespace:glm::detail	file:
prefix	./glm/gtx/string_cast.inl	/^	struct prefix<int16_t>$/;"	s	namespace:glm::detail	file:
prefix	./glm/gtx/string_cast.inl	/^	struct prefix<int32_t>$/;"	s	namespace:glm::detail	file:
prefix	./glm/gtx/string_cast.inl	/^	struct prefix<int64_t>$/;"	s	namespace:glm::detail	file:
prefix	./glm/gtx/string_cast.inl	/^	struct prefix<int8_t>$/;"	s	namespace:glm::detail	file:
prefix	./glm/gtx/string_cast.inl	/^	struct prefix<uint16_t>$/;"	s	namespace:glm::detail	file:
prefix	./glm/gtx/string_cast.inl	/^	struct prefix<uint32_t>$/;"	s	namespace:glm::detail	file:
prefix	./glm/gtx/string_cast.inl	/^	struct prefix<uint64_t>$/;"	s	namespace:glm::detail	file:
prefix	./glm/gtx/string_cast.inl	/^	struct prefix<uint8_t>$/;"	s	namespace:glm::detail	file:
prefix	./glm/gtx/string_cast.inl	/^	struct prefix{};$/;"	s	namespace:glm::detail	file:
prevFloat	./glm/ext/scalar_ulp.inl	/^	GLM_FUNC_QUALIFIER T prevFloat(T x, int ULPs)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER T
prevFloat	./glm/ext/scalar_ulp.inl	/^	GLM_FUNC_QUALIFIER double prevFloat(double x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER double
prevFloat	./glm/ext/scalar_ulp.inl	/^	GLM_FUNC_QUALIFIER float prevFloat(float x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER float
prevFloat	./glm/ext/vector_ulp.inl	/^	GLM_FUNC_QUALIFIER vec<L, T, Q> prevFloat(vec<L, T, Q> const& x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<L,T,Q>
prevFloat	./glm/ext/vector_ulp.inl	/^	GLM_FUNC_QUALIFIER vec<L, T, Q> prevFloat(vec<L, T, Q> const& x, int ULPs)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<L,T,Q>
prevFloat	./glm/ext/vector_ulp.inl	/^	GLM_FUNC_QUALIFIER vec<L, T, Q> prevFloat(vec<L, T, Q> const& x, vec<L, int, Q> const& ULPs)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<L,T,Q>
prevMultiple	./glm/ext/scalar_integer.inl	/^	GLM_FUNC_QUALIFIER genIUType prevMultiple(genIUType Source, genIUType Multiple)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genIUType
prevMultiple	./glm/ext/vector_integer.inl	/^	GLM_FUNC_QUALIFIER vec<L, T, Q> prevMultiple(vec<L, T, Q> const& Source, T Multiple)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<L,T,Q>
prevMultiple	./glm/ext/vector_integer.inl	/^	GLM_FUNC_QUALIFIER vec<L, T, Q> prevMultiple(vec<L, T, Q> const& Source, vec<L, T, Q> const& Mu/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<L,T,Q>
prevPowerOfTwo	./glm/ext/scalar_integer.inl	/^	GLM_FUNC_QUALIFIER genIUType prevPowerOfTwo(genIUType value)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genIUType
prevPowerOfTwo	./glm/ext/vector_integer.inl	/^	GLM_FUNC_QUALIFIER vec<L, T, Q> prevPowerOfTwo(vec<L, T, Q> const& v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<L,T,Q>
prev_float	./glm/gtc/ulp.inl	/^	GLM_FUNC_QUALIFIER T prev_float(T x, int ULPs)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER T
prev_float	./glm/gtc/ulp.inl	/^	GLM_FUNC_QUALIFIER double prev_float(double x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER double
prev_float	./glm/gtc/ulp.inl	/^	GLM_FUNC_QUALIFIER float prev_float(float x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER float
prev_float	./glm/gtc/ulp.inl	/^	GLM_FUNC_QUALIFIER vec<L, T, Q> prev_float(vec<L, T, Q> const& x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<L,T,Q>
prev_float	./glm/gtc/ulp.inl	/^	GLM_FUNC_QUALIFIER vec<L, T, Q> prev_float(vec<L, T, Q> const& x, int ULPs)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<L,T,Q>
prev_float	./glm/gtc/ulp.inl	/^	GLM_FUNC_QUALIFIER vec<L, T, Q> prev_float(vec<L, T, Q> const& x, vec<L, int, Q> const& ULPs)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<L,T,Q>
print_matrix_on	./glm/gtx/io.inl	/^	GLM_FUNC_QUALIFIER std::basic_ostream<CTy, CTr>& print_matrix_on(std::basic_ostream<CTy, CTr>& /;"	f	namespace:glm::detail	typeref:typename:GLM_FUNC_QUALIFIER std::basic_ostream<CTy,CTr> &
print_matrix_pair_on	./glm/gtx/io.inl	/^	GLM_FUNC_QUALIFIER std::basic_ostream<CTy, CTr>& print_matrix_pair_on(std::basic_ostream<CTy, C/;"	f	namespace:glm::detail	typeref:typename:GLM_FUNC_QUALIFIER std::basic_ostream<CTy,CTr> &
print_vector_on	./glm/gtx/io.inl	/^	print_vector_on(std::basic_ostream<CTy, CTr>& os, V const& a)$/;"	f	namespace:glm::detail	typeref:typename:GLM_FUNC_QUALIFIER std::basic_ostream<CTy,CTr> &
proj	./glm/gtx/projection.inl	/^	GLM_FUNC_QUALIFIER genType proj(genType const& x, genType const& Normal)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genType
proj2D	./glm/gtx/transform2.inl	/^	GLM_FUNC_QUALIFIER mat<3, 3, T, Q> proj2D($/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER mat<3,3,T,Q>
proj3D	./glm/gtx/transform2.inl	/^	GLM_FUNC_QUALIFIER mat<4, 4, T, Q> proj3D($/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER mat<4,4,T,Q>
project	./glm/ext/matrix_projection.inl	/^	GLM_FUNC_QUALIFIER vec<3, T, Q> project(vec<3, T, Q> const& obj, mat<4, 4, T, Q> const& model, /;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<3,T,Q>
projectNO	./glm/ext/matrix_projection.inl	/^	GLM_FUNC_QUALIFIER vec<3, T, Q> projectNO(vec<3, T, Q> const& obj, mat<4, 4, T, Q> const& model/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<3,T,Q>
projectZO	./glm/ext/matrix_projection.inl	/^	GLM_FUNC_QUALIFIER vec<3, T, Q> projectZO(vec<3, T, Q> const& obj, mat<4, 4, T, Q> const& model/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<3,T,Q>
ptrdiff_t	./GL/glew.h	/^typedef _W64 int ptrdiff_t;$/;"	t	typeref:typename:_W64 int
ptrdiff_t	./GL/glew.h	/^typedef __int64 ptrdiff_t;$/;"	t	typeref:typename:__int64
pythag	./glm/gtx/pca.inl	/^		GLM_FUNC_QUALIFIER static T pythag(T const& a, T const& b) {$/;"	f	namespace:glm::_internal_	typeref:typename:GLM_FUNC_QUALIFIER T	file:
qnxnto	./glm/build/CMakeFiles/3.31.0-rc1/CompilerIdC/CMakeCCompilerId.c	/^char const* qnxnto = "INFO" ":" "qnxnto[]";$/;"	v	typeref:typename:char const *
qnxnto	./glm/build/CMakeFiles/3.31.0-rc1/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^char const* qnxnto = "INFO" ":" "qnxnto[]";$/;"	v	typeref:typename:char const *
qr_decompose	./glm/gtx/matrix_factorisation.inl	/^	GLM_FUNC_QUALIFIER void qr_decompose(mat<C, R, T, Q> const& in, mat<(C < R ? C : R), R, T, Q>& /;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER void
qua	./glm/detail/glm.cpp	/^template struct qua<float32, highp>;$/;"	v	namespace:glm	typeref:meta:struct
qua	./glm/detail/glm.cpp	/^template struct qua<float32, lowp>;$/;"	v	namespace:glm	typeref:meta:struct
qua	./glm/detail/glm.cpp	/^template struct qua<float32, mediump>;$/;"	v	namespace:glm	typeref:meta:struct
qua	./glm/detail/glm.cpp	/^template struct qua<float64, highp>;$/;"	v	namespace:glm	typeref:meta:struct
qua	./glm/detail/glm.cpp	/^template struct qua<float64, lowp>;$/;"	v	namespace:glm	typeref:meta:struct
qua	./glm/detail/glm.cpp	/^template struct qua<float64, mediump>;$/;"	v	namespace:glm	typeref:meta:struct
qua	./glm/detail/type_quat.hpp	/^	struct qua$/;"	s	namespace:glm
qua	./glm/detail/type_quat.inl	/^		GLM_DEFAULTED_DEFAULT_CTOR_QUALIFIER GLM_CONSTEXPR qua<T, Q>::qua()$/;"	f	class:glm::qua	typeref:typename:GLM_DEFAULTED_DEFAULT_CTOR_QUALIFIER GLM_CONSTEXPR
qua	./glm/detail/type_quat.inl	/^		GLM_DEFAULTED_FUNC_QUALIFIER GLM_CONSTEXPR qua<T, Q>::qua(qua<T, Q> const& q)$/;"	f	class:glm::qua	typeref:typename:GLM_DEFAULTED_FUNC_QUALIFIER GLM_CONSTEXPR
qua	./glm/detail/type_quat.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR qua<T, Q>::qua(T _x, T _y, T _z, T _w)$/;"	f	class:glm::qua	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
qua	./glm/detail/type_quat.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR qua<T, Q>::qua(T s, vec<3, T, Q> const& v)$/;"	f	class:glm::qua	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
qua	./glm/detail/type_quat.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR qua<T, Q>::qua(mat<3, 3, T, Q> const& m)$/;"	f	class:glm::qua	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
qua	./glm/detail/type_quat.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR qua<T, Q>::qua(mat<4, 4, T, Q> const& m)$/;"	f	class:glm::qua	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
qua	./glm/detail/type_quat.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR qua<T, Q>::qua(qua<T, P> const& q)$/;"	f	class:glm::qua	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
qua	./glm/detail/type_quat.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR qua<T, Q>::qua(qua<U, P> const& q)$/;"	f	class:glm::qua	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
qua	./glm/detail/type_quat.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR qua<T, Q>::qua(vec<3, T, Q> const& eulerAngle)$/;"	f	class:glm::qua	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
qua	./glm/detail/type_quat.inl	/^	GLM_FUNC_QUALIFIER qua<T, Q>::qua(vec<3, T, Q> const& u, vec<3, T, Q> const& v)$/;"	f	class:glm::qua	typeref:typename:GLM_FUNC_QUALIFIER
quadraticEaseIn	./glm/gtx/easing.inl	/^	GLM_FUNC_QUALIFIER genType quadraticEaseIn(genType const& a)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genType
quadraticEaseInOut	./glm/gtx/easing.inl	/^	GLM_FUNC_QUALIFIER genType quadraticEaseInOut(genType const& a)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genType
quadraticEaseOut	./glm/gtx/easing.inl	/^	GLM_FUNC_QUALIFIER genType quadraticEaseOut(genType const& a)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genType
qualifier	./glm/detail/qualifier.hpp	/^	enum qualifier$/;"	g	namespace:glm
quarter_pi	./glm/gtc/constants.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR genType quarter_pi()$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR genType
quarticEaseIn	./glm/gtx/easing.inl	/^	GLM_FUNC_QUALIFIER genType quarticEaseIn(genType const& a)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genType
quarticEaseInOut	./glm/gtx/easing.inl	/^	GLM_FUNC_QUALIFIER genType quarticEaseInOut(genType const& a)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genType
quarticEaseOut	./glm/gtx/easing.inl	/^	GLM_FUNC_QUALIFIER genType quarticEaseOut(genType const& a)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genType
quat	./glm/ext/quaternion_float.hpp	/^	typedef qua<float, defaultp>		quat;$/;"	t	namespace:glm	typeref:typename:qua<float,defaultp>
quat	./glm/fwd.hpp	/^	typedef qua<float, defaultp>		quat;$/;"	t	namespace:glm	typeref:typename:qua<float,defaultp>
quatLookAt	./glm/gtc/quaternion.inl	/^	GLM_FUNC_QUALIFIER qua<T, Q> quatLookAt(vec<3, T, Q> const& direction, vec<3, T, Q> const& up)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER qua<T,Q>
quatLookAtLH	./glm/gtc/quaternion.inl	/^	GLM_FUNC_QUALIFIER qua<T, Q> quatLookAtLH(vec<3, T, Q> const& direction, vec<3, T, Q> const& up/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER qua<T,Q>
quatLookAtRH	./glm/gtc/quaternion.inl	/^	GLM_FUNC_QUALIFIER qua<T, Q> quatLookAtRH(vec<3, T, Q> const& direction, vec<3, T, Q> const& up/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER qua<T,Q>
quat_cast	./glm/gtc/quaternion.inl	/^	GLM_FUNC_QUALIFIER qua<T, Q> quat_cast(mat<3, 3, T, Q> const& m)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER qua<T,Q>
quat_cast	./glm/gtc/quaternion.inl	/^	GLM_FUNC_QUALIFIER qua<T, Q> quat_cast(mat<4, 4, T, Q> const& m4)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER qua<T,Q>
quat_identity	./glm/gtx/quaternion.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR qua<T, Q> quat_identity()$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR qua<T,Q>
quinticEaseIn	./glm/gtx/easing.inl	/^	GLM_FUNC_QUALIFIER genType quinticEaseIn(genType const& a)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genType
quinticEaseInOut	./glm/gtx/easing.inl	/^	GLM_FUNC_QUALIFIER genType quinticEaseInOut(genType const& a)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genType
quinticEaseOut	./glm/gtx/easing.inl	/^	GLM_FUNC_QUALIFIER genType quinticEaseOut(genType const& a)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genType
qword	./glm/gtx/raw_data.hpp	/^	typedef detail::uint64		qword;$/;"	t	namespace:glm	typeref:typename:detail::uint64
r	./glm/detail/type_vec1.hpp	/^				T r;$/;"	m	union:glm::vec::__anon119f3359010a	typeref:typename:T
r	./glm/detail/type_vec1.hpp	/^			union {T x, r, s;};$/;"	m	union:glm::vec::__anon119f3359020a	typeref:typename:T
radialGradient	./glm/gtx/gradient_paint.inl	/^	GLM_FUNC_QUALIFIER T radialGradient$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER T
radians	./glm/detail/func_trigonometric.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR genType radians(genType degrees)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR genType
radians	./glm/detail/func_trigonometric.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<L, T, Q> radians(vec<L, T, Q> const& v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<L,T,Q>
rcVirtualScreen	./GL/wglew.h	/^  RECT rcVirtualScreen; $/;"	m	struct:_GPU_DEVICE	typeref:typename:RECT
real	./glm/gtx/dual_quaternion.hpp	/^		qua<T, Q> real, dual;$/;"	m	struct:glm::tdualquat	typeref:typename:qua<T,Q>
recompose	./glm/gtx/matrix_decompose.inl	/^	GLM_FUNC_DECL mat<4, 4, T, Q> recompose($/;"	f	namespace:glm	typeref:typename:GLM_FUNC_DECL mat<4,4,T,Q>
reflect	./glm/detail/func_geometric.inl	/^	GLM_FUNC_QUALIFIER genType reflect(genType const& I, genType const& N)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genType
reflect	./glm/detail/func_geometric.inl	/^	GLM_FUNC_QUALIFIER vec<L, T, Q> reflect(vec<L, T, Q> const& I, vec<L, T, Q> const& N)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<L,T,Q>
reflect2D	./glm/gtx/transform2.inl	/^	GLM_FUNC_QUALIFIER mat<3, 3, T, Q> reflect2D(mat<3, 3, T, Q> const& m, vec<3, T, Q> const& norm/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER mat<3,3,T,Q>
reflect3D	./glm/gtx/transform2.inl	/^	GLM_FUNC_QUALIFIER mat<4, 4, T, Q> reflect3D(mat<4, 4, T, Q> const& m, vec<3, T, Q> const& norm/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER mat<4,4,T,Q>
refract	./glm/detail/func_geometric.inl	/^	GLM_FUNC_QUALIFIER genType refract(genType const& I, genType const& N, genType eta)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genType
refract	./glm/detail/func_geometric.inl	/^	GLM_FUNC_QUALIFIER vec<L, T, Q> refract(vec<L, T, Q> const& I, vec<L, T, Q> const& N, T eta)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<L,T,Q>
repeat	./glm/ext/scalar_common.inl	/^	GLM_FUNC_QUALIFIER genType repeat(genType const& Texcoord)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genType
repeat	./glm/ext/vector_common.inl	/^	GLM_FUNC_QUALIFIER vec<L, T, Q> repeat(vec<L, T, Q> const& Texcoord)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<L,T,Q>
return_type_scalar_multiplication	./glm/gtx/scalar_multiplication.hpp	/^	using return_type_scalar_multiplication = typename std::enable_if<$/;"	t	namespace:glm	typeref:typename:std::enable_if<!std::is_same<T,float>::value && std::is_arithmetic<T>::value,Vec>::type
rgb2YCoCg	./glm/gtx/color_space_YCoCg.inl	/^	GLM_FUNC_QUALIFIER vec<3, T, Q> rgb2YCoCg$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<3,T,Q>
rgb2YCoCgR	./glm/gtx/color_space_YCoCg.inl	/^		static GLM_FUNC_QUALIFIER vec<3, T, Q> rgb2YCoCgR$/;"	f	class:glm::compute_YCoCgR	typeref:typename:GLM_FUNC_QUALIFIER vec<3,T,Q>	file:
rgb2YCoCgR	./glm/gtx/color_space_YCoCg.inl	/^	GLM_FUNC_QUALIFIER vec<3, T, Q> rgb2YCoCgR$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<3,T,Q>
rgbColor	./glm/gtx/color_space.inl	/^	GLM_FUNC_QUALIFIER vec<3, T, Q> rgbColor(const vec<3, T, Q>& hsvColor)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<3,T,Q>
rightHanded	./glm/gtx/handed_coordinate_space.inl	/^	GLM_FUNC_QUALIFIER bool rightHanded$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER bool
roll	./glm/gtc/quaternion.inl	/^	GLM_FUNC_QUALIFIER T roll(qua<T, Q> const& q)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER T
root_five	./glm/gtc/constants.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR genType root_five()$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR genType
root_half_pi	./glm/gtc/constants.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR genType root_half_pi()$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR genType
root_ln_four	./glm/gtc/constants.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR genType root_ln_four()$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR genType
root_pi	./glm/gtc/constants.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR genType root_pi()$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR genType
root_three	./glm/gtc/constants.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR genType root_three()$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR genType
root_two	./glm/gtc/constants.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR genType root_two()$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR genType
root_two_pi	./glm/gtc/constants.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR genType root_two_pi()$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR genType
rotate	./glm/ext/matrix_transform.inl	/^	GLM_FUNC_QUALIFIER mat<4, 4, T, Q> rotate(mat<4, 4, T, Q> const& m, T angle, vec<3, T, Q> const/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER mat<4,4,T,Q>
rotate	./glm/ext/quaternion_transform.inl	/^	GLM_FUNC_QUALIFIER qua<T, Q> rotate(qua<T, Q> const& q, T const& angle, vec<3, T, Q> const& v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER qua<T,Q>
rotate	./glm/gtx/matrix_transform_2d.inl	/^	GLM_FUNC_QUALIFIER mat<3, 3, T, Q> rotate($/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER mat<3,3,T,Q>
rotate	./glm/gtx/quaternion.inl	/^	GLM_FUNC_QUALIFIER vec<3, T, Q> rotate(qua<T, Q> const& q, vec<3, T, Q> const& v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<3,T,Q>
rotate	./glm/gtx/quaternion.inl	/^	GLM_FUNC_QUALIFIER vec<4, T, Q> rotate(qua<T, Q> const& q, vec<4, T, Q> const& v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<4,T,Q>
rotate	./glm/gtx/rotate_vector.inl	/^	GLM_FUNC_QUALIFIER vec<2, T, Q> rotate$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<2,T,Q>
rotate	./glm/gtx/rotate_vector.inl	/^	GLM_FUNC_QUALIFIER vec<3, T, Q> rotate$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<3,T,Q>
rotate	./glm/gtx/rotate_vector.inl	/^	GLM_FUNC_QUALIFIER vec<4, T, Q> rotate$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<4,T,Q>
rotate	./glm/gtx/transform.inl	/^	GLM_FUNC_QUALIFIER mat<4, 4, T, Q> rotate(T angle, vec<3, T, Q> const& v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER mat<4,4,T,Q>
rotateNormalizedAxis	./glm/gtx/rotate_normalized_axis.inl	/^	GLM_FUNC_QUALIFIER mat<4, 4, T, Q> rotateNormalizedAxis$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER mat<4,4,T,Q>
rotateNormalizedAxis	./glm/gtx/rotate_normalized_axis.inl	/^	GLM_FUNC_QUALIFIER qua<T, Q> rotateNormalizedAxis$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER qua<T,Q>
rotateX	./glm/gtx/rotate_vector.inl	/^	GLM_FUNC_QUALIFIER vec<3, T, Q> rotateX$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<3,T,Q>
rotateX	./glm/gtx/rotate_vector.inl	/^	GLM_FUNC_QUALIFIER vec<4, T, Q> rotateX$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<4,T,Q>
rotateY	./glm/gtx/rotate_vector.inl	/^	GLM_FUNC_QUALIFIER vec<3, T, Q> rotateY$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<3,T,Q>
rotateY	./glm/gtx/rotate_vector.inl	/^	GLM_FUNC_QUALIFIER vec<4, T, Q> rotateY$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<4,T,Q>
rotateZ	./glm/gtx/rotate_vector.inl	/^	GLM_FUNC_QUALIFIER vec<3, T, Q> rotateZ$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<3,T,Q>
rotateZ	./glm/gtx/rotate_vector.inl	/^	GLM_FUNC_QUALIFIER vec<4, T, Q> rotateZ$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<4,T,Q>
rotate_slow	./glm/ext/matrix_transform.inl	/^	GLM_FUNC_QUALIFIER mat<4, 4, T, Q> rotate_slow(mat<4, 4, T, Q> const& m, T angle, vec<3, T, Q> /;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER mat<4,4,T,Q>
rotation	./glm/gtx/quaternion.inl	/^	GLM_FUNC_QUALIFIER qua<T, Q> rotation(vec<3, T, Q> const& orig, vec<3, T, Q> const& dest)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER qua<T,Q>
round	./glm/detail/func_common.inl	/^		GLM_FUNC_QUALIFIER genType round(genType x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genType
round	./glm/detail/func_common.inl	/^	GLM_FUNC_QUALIFIER vec<L, T, Q> round(vec<L, T, Q> const& x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<L,T,Q>
roundEven	./glm/detail/func_common.inl	/^	GLM_FUNC_QUALIFIER genType roundEven(genType x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genType
roundEven	./glm/detail/func_common.inl	/^	GLM_FUNC_QUALIFIER vec<L, T, Q> roundEven(vec<L, T, Q> const& x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<L,T,Q>
roundMultiple	./glm/gtc/round.inl	/^	GLM_FUNC_QUALIFIER genType roundMultiple(genType Source, genType Multiple)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genType
roundMultiple	./glm/gtc/round.inl	/^	GLM_FUNC_QUALIFIER vec<L, T, Q> roundMultiple(vec<L, T, Q> const& Source, vec<L, T, Q> const& M/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<L,T,Q>
roundPowerOfTwo	./glm/gtc/round.inl	/^	GLM_FUNC_QUALIFIER genIUType roundPowerOfTwo(genIUType value)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genIUType
roundPowerOfTwo	./glm/gtc/round.inl	/^	GLM_FUNC_QUALIFIER vec<L, T, Q> roundPowerOfTwo(vec<L, T, Q> const& v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<L,T,Q>
row	./glm/gtc/matrix_access.inl	/^	GLM_FUNC_QUALIFIER genType row$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genType
row	./glm/gtc/matrix_access.inl	/^	GLM_FUNC_QUALIFIER typename genType::row_type row$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER typename genType::row_type
rowMajor2	./glm/gtx/matrix_major_storage.inl	/^	GLM_FUNC_QUALIFIER mat<2, 2, T, Q> rowMajor2$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER mat<2,2,T,Q>
rowMajor2	./glm/gtx/matrix_major_storage.inl	/^	GLM_FUNC_QUALIFIER mat<2, 2, T, Q> rowMajor2($/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER mat<2,2,T,Q>
rowMajor3	./glm/gtx/matrix_major_storage.inl	/^	GLM_FUNC_QUALIFIER mat<3, 3, T, Q> rowMajor3($/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER mat<3,3,T,Q>
rowMajor4	./glm/gtx/matrix_major_storage.inl	/^	GLM_FUNC_QUALIFIER mat<4, 4, T, Q> rowMajor4($/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER mat<4,4,T,Q>
row_major	./glm/gtx/io.hpp	/^		enum order_type { column_major, row_major};$/;"	e	enum:glm::io::order_type
row_type	./glm/detail/type_mat2x2.hpp	/^		typedef vec<2, T, Q> row_type;$/;"	t	struct:glm::mat	typeref:typename:vec<2,T,Q>
row_type	./glm/detail/type_mat2x3.hpp	/^		typedef vec<2, T, Q> row_type;$/;"	t	struct:glm::mat	typeref:typename:vec<2,T,Q>
row_type	./glm/detail/type_mat2x4.hpp	/^		typedef vec<2, T, Q> row_type;$/;"	t	struct:glm::mat	typeref:typename:vec<2,T,Q>
row_type	./glm/detail/type_mat3x2.hpp	/^		typedef vec<3, T, Q> row_type;$/;"	t	struct:glm::mat	typeref:typename:vec<3,T,Q>
row_type	./glm/detail/type_mat3x3.hpp	/^		typedef vec<3, T, Q> row_type;$/;"	t	struct:glm::mat	typeref:typename:vec<3,T,Q>
row_type	./glm/detail/type_mat3x4.hpp	/^		typedef vec<3, T, Q> row_type;$/;"	t	struct:glm::mat	typeref:typename:vec<3,T,Q>
row_type	./glm/detail/type_mat4x2.hpp	/^		typedef vec<4, T, Q> row_type;$/;"	t	struct:glm::mat	typeref:typename:vec<4,T,Q>
row_type	./glm/detail/type_mat4x3.hpp	/^		typedef vec<4, T, Q> row_type;$/;"	t	struct:glm::mat	typeref:typename:vec<4,T,Q>
row_type	./glm/detail/type_mat4x4.hpp	/^		typedef vec<4, T, Q> row_type;$/;"	t	struct:glm::mat	typeref:typename:vec<4,T,Q>
rows	./glm/gtx/type_trait.hpp	/^		static length_t const rows = 0;$/;"	m	struct:glm::type	typeref:typename:length_t const
rows	./glm/gtx/type_trait.hpp	/^		static length_t const rows = R;$/;"	m	struct:glm::type	typeref:typename:length_t const
rows	./glm/gtx/type_trait.inl	/^	length_t const type<T>::rows;$/;"	m	class:glm::type<T>	typeref:typename:length_t const
rows	./glm/gtx/type_trait.inl	/^	length_t const type<mat<C, R, T, Q> >::rows;$/;"	m	class:glm::type<mat<C, R, T, Q> >	typeref:typename:length_t const
rq_decompose	./glm/gtx/matrix_factorisation.inl	/^	GLM_FUNC_QUALIFIER void rq_decompose(mat<C, R, T, Q> const& in, mat<(C < R ? C : R), R, T, Q>& /;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER void
s	./glm/detail/type_vec1.hpp	/^				T s;$/;"	m	union:glm::vec::__anon119f3359010a	typeref:typename:T
s	./glm/detail/type_vec1.hpp	/^			union {T x, r, s;};$/;"	m	union:glm::vec::__anon119f3359020a	typeref:typename:T
saturate	./glm/gtx/compatibility.hpp	/^	template<typename T, qualifier Q> GLM_FUNC_QUALIFIER vec<2, T, Q> saturate(const vec<2, T, Q>& /;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<2,T,Q>
saturate	./glm/gtx/compatibility.hpp	/^	template<typename T, qualifier Q> GLM_FUNC_QUALIFIER vec<3, T, Q> saturate(const vec<3, T, Q>& /;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<3,T,Q>
saturate	./glm/gtx/compatibility.hpp	/^	template<typename T, qualifier Q> GLM_FUNC_QUALIFIER vec<4, T, Q> saturate(const vec<4, T, Q>& /;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<4,T,Q>
saturate	./glm/gtx/compatibility.hpp	/^	template<typename T> GLM_FUNC_QUALIFIER T saturate(T x){return clamp(x, T(0), T(1));}										/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER T
saturation	./glm/gtx/color_space.inl	/^	GLM_FUNC_QUALIFIER mat<4, 4, T, defaultp> saturation(T const s)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER mat<4,4,T,defaultp>
saturation	./glm/gtx/color_space.inl	/^	GLM_FUNC_QUALIFIER vec<3, T, Q> saturation(const T s, const vec<3, T, Q>& color)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<3,T,Q>
saturation	./glm/gtx/color_space.inl	/^	GLM_FUNC_QUALIFIER vec<4, T, Q> saturation(const T s, const vec<4, T, Q>& color)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<4,T,Q>
scale	./glm/ext/matrix_transform.inl	/^	GLM_FUNC_QUALIFIER mat<4, 4, T, Q> scale(mat<4, 4, T, Q> const& m, vec<3, T, Q> const& v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER mat<4,4,T,Q>
scale	./glm/gtx/matrix_decompose.inl	/^	GLM_FUNC_QUALIFIER vec<3, T, Q> scale(vec<3, T, Q> const& v, T desiredLength)$/;"	f	namespace:glm::detail	typeref:typename:GLM_FUNC_QUALIFIER vec<3,T,Q>
scale	./glm/gtx/matrix_transform_2d.inl	/^	GLM_FUNC_QUALIFIER mat<3, 3, T, Q> scale($/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER mat<3,3,T,Q>
scale	./glm/gtx/transform.inl	/^	GLM_FUNC_QUALIFIER mat<4, 4, T, Q> scale(vec<3, T, Q> const& v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER mat<4,4,T,Q>
scaleBias	./glm/gtx/transform2.inl	/^	GLM_FUNC_QUALIFIER mat<4, 4, T, Q> scaleBias(T scale, T bias)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER mat<4,4,T,Q>
scaleBias	./glm/gtx/transform2.inl	/^	GLM_FUNC_QUALIFIER mat<4, 4, T, Q> scaleBias(mat<4, 4, T, Q> const& m, T scale, T bias)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER mat<4,4,T,Q>
scale_slow	./glm/ext/matrix_transform.inl	/^	GLM_FUNC_QUALIFIER mat<4, 4, T, Q> scale_slow(mat<4, 4, T, Q> const& m, vec<3, T, Q> const& v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER mat<4,4,T,Q>
sec	./glm/ext/scalar_reciprocal.inl	/^	GLM_FUNC_QUALIFIER genType sec(genType angle)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genType
sec	./glm/ext/vector_reciprocal.inl	/^	GLM_FUNC_QUALIFIER vec<L, T, Q> sec(vec<L, T, Q> const& x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<L,T,Q>
sech	./glm/ext/scalar_reciprocal.inl	/^	GLM_FUNC_QUALIFIER genType sech(genType angle)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genType
sech	./glm/ext/vector_reciprocal.inl	/^	GLM_FUNC_QUALIFIER vec<L, T, Q> sech(vec<L, T, Q> const& x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<L,T,Q>
send_event	./GL/glxew.h	/^  Bool send_event; $/;"	m	struct:__anonb1a929810108	typeref:typename:Bool
send_event	./GL/glxew.h	/^typedef struct { int type; unsigned long serial; Bool send_event; Display *display; GLXDrawable /;"	m	struct:__anonb1a929810608	typeref:typename:Bool
separator	./glm/gtx/io.hpp	/^			char_type  separator;$/;"	m	class:glm::io::format_punct	typeref:typename:char_type
serial	./GL/glxew.h	/^  unsigned long serial; $/;"	m	struct:__anonb1a929810108	typeref:typename:unsigned long
serial	./GL/glxew.h	/^typedef struct { int type; unsigned long serial; Bool send_event; Display *display; GLXDrawable /;"	m	struct:__anonb1a929810608	typeref:typename:unsigned long
shear	./glm/ext/matrix_transform.inl	/^    GLM_FUNC_QUALIFIER mat<4, 4, T, Q> shear(mat<4, 4, T, Q> const &m, vec<3, T, Q> const& p, ve/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER mat<4,4,T,Q>
shearX	./glm/gtx/matrix_transform_2d.inl	/^	GLM_FUNC_QUALIFIER mat<3, 3, T, Q> shearX($/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER mat<3,3,T,Q>
shearX2D	./glm/gtx/transform2.inl	/^	GLM_FUNC_QUALIFIER mat<3, 3, T, Q> shearX2D(mat<3, 3, T, Q> const& m, T s)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER mat<3,3,T,Q>
shearX3D	./glm/gtx/transform2.inl	/^	GLM_FUNC_QUALIFIER mat<4, 4, T, Q> shearX3D(mat<4, 4, T, Q> const& m, T s, T t)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER mat<4,4,T,Q>
shearY	./glm/gtx/matrix_transform_2d.inl	/^	GLM_FUNC_QUALIFIER mat<3, 3, T, Q> shearY($/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER mat<3,3,T,Q>
shearY2D	./glm/gtx/transform2.inl	/^	GLM_FUNC_QUALIFIER mat<3, 3, T, Q> shearY2D(mat<3, 3, T, Q> const& m, T s)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER mat<3,3,T,Q>
shearY3D	./glm/gtx/transform2.inl	/^	GLM_FUNC_QUALIFIER mat<4, 4, T, Q> shearY3D(mat<4, 4, T, Q> const& m, T s, T t)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER mat<4,4,T,Q>
shearZ3D	./glm/gtx/transform2.inl	/^	GLM_FUNC_QUALIFIER mat<4, 4, T, Q> shearZ3D(mat<4, 4, T, Q> const& m, T s, T t)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER mat<4,4,T,Q>
shear_slow	./glm/ext/matrix_transform.inl	/^    GLM_FUNC_QUALIFIER mat<4, 4, T, Q> shear_slow(mat<4, 4, T, Q> const &m, vec<3, T, Q> const& /;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER mat<4,4,T,Q>
shortMix	./glm/gtx/quaternion.inl	/^	GLM_FUNC_QUALIFIER qua<T, Q> shortMix(qua<T, Q> const& x, qua<T, Q> const& y, T const& a)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER qua<T,Q>
sign	./glm/detail/func_common.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR genFIType sign(genFIType x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR genFIType
sign	./glm/detail/func_common.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<L, T, Q> sign(vec<L, T, Q> const& x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<L,T,Q>
sign16	./glm/gtc/bitfield.inl	/^		union sign16$/;"	u	function:glm::bitfieldInterleave	file:
sign32	./glm/gtc/bitfield.inl	/^		union sign32$/;"	u	function:glm::bitfieldInterleave	file:
sign64	./glm/gtc/bitfield.inl	/^		union sign64$/;"	u	function:glm::bitfieldInterleave	file:
sign8	./glm/gtc/bitfield.inl	/^		union sign8$/;"	u	function:glm::bitfieldInterleave	file:
simplex	./glm/gtc/noise.inl	/^	GLM_FUNC_QUALIFIER T simplex(glm::vec<2, T, Q> const& v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER T
simplex	./glm/gtc/noise.inl	/^	GLM_FUNC_QUALIFIER T simplex(vec<3, T, Q> const& v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER T
simplex	./glm/gtc/noise.inl	/^	GLM_FUNC_QUALIFIER T simplex(vec<4, T, Q> const& v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER T
sin	./glm/detail/func_trigonometric.inl	/^	GLM_FUNC_QUALIFIER vec<L, T, Q> sin(vec<L, T, Q> const& v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<L,T,Q>
sineEaseIn	./glm/gtx/easing.inl	/^	GLM_FUNC_QUALIFIER genType sineEaseIn(genType const& a)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genType
sineEaseInOut	./glm/gtx/easing.inl	/^	GLM_FUNC_QUALIFIER genType sineEaseInOut(genType const& a)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genType
sineEaseOut	./glm/gtx/easing.inl	/^	GLM_FUNC_QUALIFIER genType sineEaseOut(genType const& a)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genType
sinh	./glm/detail/func_trigonometric.inl	/^	GLM_FUNC_QUALIFIER vec<L, T, Q> sinh(vec<L, T, Q> const& v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<L,T,Q>
sint	./glm/gtx/integer.hpp	/^	typedef signed int					sint;$/;"	t	namespace:glm	typeref:typename:signed int
size1	./glm/gtx/std_based_type.hpp	/^	typedef vec<1, std::size_t, defaultp>		size1;$/;"	t	namespace:glm	typeref:typename:vec<1,std::size_t,defaultp>
size1_t	./glm/gtx/std_based_type.hpp	/^	typedef vec<1, std::size_t, defaultp>		size1_t;$/;"	t	namespace:glm	typeref:typename:vec<1,std::size_t,defaultp>
size2	./glm/gtx/std_based_type.hpp	/^	typedef vec<2, std::size_t, defaultp>		size2;$/;"	t	namespace:glm	typeref:typename:vec<2,std::size_t,defaultp>
size2_t	./glm/gtx/std_based_type.hpp	/^	typedef vec<2, std::size_t, defaultp>		size2_t;$/;"	t	namespace:glm	typeref:typename:vec<2,std::size_t,defaultp>
size3	./glm/gtx/std_based_type.hpp	/^	typedef vec<3, std::size_t, defaultp>		size3;$/;"	t	namespace:glm	typeref:typename:vec<3,std::size_t,defaultp>
size3_t	./glm/gtx/std_based_type.hpp	/^	typedef vec<3, std::size_t, defaultp>		size3_t;$/;"	t	namespace:glm	typeref:typename:vec<3,std::size_t,defaultp>
size4	./glm/gtx/std_based_type.hpp	/^	typedef vec<4, std::size_t, defaultp>		size4;$/;"	t	namespace:glm	typeref:typename:vec<4,std::size_t,defaultp>
size4_t	./glm/gtx/std_based_type.hpp	/^	typedef vec<4, std::size_t, defaultp>		size4_t;$/;"	t	namespace:glm	typeref:typename:vec<4,std::size_t,defaultp>
slerp	./glm/ext/quaternion_common.inl	/^	GLM_FUNC_QUALIFIER qua<T, Q> slerp(qua<T, Q> const& x, qua<T, Q> const& y, T a)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER qua<T,Q>
slerp	./glm/ext/quaternion_common.inl	/^    GLM_FUNC_QUALIFIER qua<T, Q> slerp(qua<T, Q> const& x, qua<T, Q> const& y, T a, S k)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER qua<T,Q>
slerp	./glm/gtx/rotate_vector.inl	/^	GLM_FUNC_QUALIFIER vec<3, T, Q> slerp$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<3,T,Q>
smoothstep	./glm/detail/func_common.inl	/^	GLM_FUNC_QUALIFIER genType smoothstep(genType edge0, genType edge1, genType x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genType
smoothstep	./glm/detail/func_common.inl	/^	GLM_FUNC_QUALIFIER vec<L, T, Q> smoothstep(T edge0, T edge1, vec<L, T, Q> const& x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<L,T,Q>
smoothstep	./glm/detail/func_common.inl	/^	GLM_FUNC_QUALIFIER vec<L, T, Q> smoothstep(vec<L, T, Q> const& edge0, vec<L, T, Q> const& edge1/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<L,T,Q>
sortEigenvalues	./glm/gtx/pca.inl	/^	GLM_FUNC_QUALIFIER void sortEigenvalues(vec<2, T, Q>& eigenvalues, mat<2, 2, T, Q>& eigenvector/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER void
sortEigenvalues	./glm/gtx/pca.inl	/^	GLM_FUNC_QUALIFIER void sortEigenvalues(vec<3, T, Q>& eigenvalues, mat<3, 3, T, Q>& eigenvector/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER void
sortEigenvalues	./glm/gtx/pca.inl	/^	GLM_FUNC_QUALIFIER void sortEigenvalues(vec<4, T, Q>& eigenvalues, mat<4, 4, T, Q>& eigenvector/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER void
space	./glm/gtx/io.hpp	/^			char_type  space;$/;"	m	class:glm::io::format_punct	typeref:typename:char_type
sphericalRand	./glm/gtc/random.inl	/^	GLM_FUNC_QUALIFIER vec<3, T, defaultp> sphericalRand(T Radius)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<3,T,defaultp>
sqrt	./glm/detail/func_exponential.inl	/^	GLM_FUNC_QUALIFIER vec<L, T, Q> sqrt(vec<L, T, Q> const& x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<L,T,Q>
sqrt	./glm/ext/quaternion_exponential.inl	/^	GLM_FUNC_QUALIFIER qua<T, Q> sqrt(qua<T, Q> const& x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER qua<T,Q>
sqrt	./glm/gtx/integer.inl	/^	GLM_FUNC_QUALIFIER int sqrt(int x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER int
sqrt	./glm/gtx/integer.inl	/^	GLM_FUNC_QUALIFIER uint sqrt(uint x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER uint
squad	./glm/gtx/quaternion.inl	/^	GLM_FUNC_QUALIFIER qua<T, Q> squad$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER qua<T,Q>
srcHeight	./GL/glxew.h	/^  int srcHeight; $/;"	m	struct:__anonb1a929810508	typeref:typename:int
srcWidth	./GL/glxew.h	/^  int srcWidth; $/;"	m	struct:__anonb1a929810508	typeref:typename:int
srcXOrigin	./GL/glxew.h	/^  int srcXOrigin; $/;"	m	struct:__anonb1a929810508	typeref:typename:int
srcYOrigin	./GL/glxew.h	/^  int srcYOrigin; $/;"	m	struct:__anonb1a929810508	typeref:typename:int
state_	./glm/gtx/io.hpp	/^			state_type&     state_;$/;"	m	class:glm::io::basic_state_saver	typeref:typename:state_type &
state_saver	./glm/gtx/io.hpp	/^		typedef basic_state_saver<char>     state_saver;$/;"	t	namespace:glm::io	typeref:typename:basic_state_saver<char>
state_type	./glm/gtx/io.hpp	/^			typedef ::std::basic_ios<CTy,CTr>      state_type;$/;"	t	class:glm::io::basic_state_saver	typeref:typename:::std::basic_ios<CTy,CTr>
std	./glm/gtx/hash.hpp	/^namespace std$/;"	n
std	./glm/gtx/hash.inl	/^namespace std$/;"	n	file:
step	./glm/detail/func_common.inl	/^	GLM_FUNC_QUALIFIER genType step(genType edge, genType x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genType
step	./glm/detail/func_common.inl	/^	GLM_FUNC_QUALIFIER vec<L, T, Q> step(T edge, vec<L, T, Q> const& x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<L,T,Q>
step	./glm/detail/func_common.inl	/^	GLM_FUNC_QUALIFIER vec<L, T, Q> step(vec<L, T, Q> const& edge, vec<L, T, Q> const& x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<L,T,Q>
storage	./glm/detail/qualifier.hpp	/^		struct storage<3, T, true>$/;"	s	namespace:glm::detail
storage	./glm/detail/qualifier.hpp	/^		struct storage<L, T, true>$/;"	s	namespace:glm::detail
storage	./glm/detail/qualifier.hpp	/^	struct storage$/;"	s	namespace:glm::detail
storage	./glm/detail/qualifier.hpp	/^	struct storage<2, detail::int64, true>$/;"	s	namespace:glm::detail
storage	./glm/detail/qualifier.hpp	/^	struct storage<2, detail::uint64, true>$/;"	s	namespace:glm::detail
storage	./glm/detail/qualifier.hpp	/^	struct storage<2, double, true>$/;"	s	namespace:glm::detail
storage	./glm/detail/qualifier.hpp	/^	struct storage<4, detail::int64, true>$/;"	s	namespace:glm::detail
storage	./glm/detail/qualifier.hpp	/^	struct storage<4, detail::uint64, true>$/;"	s	namespace:glm::detail
storage	./glm/detail/qualifier.hpp	/^	struct storage<4, double, true>$/;"	s	namespace:glm::detail
storage	./glm/detail/qualifier.hpp	/^	struct storage<4, float, true>$/;"	s	namespace:glm::detail
storage	./glm/detail/qualifier.hpp	/^	struct storage<4, int, true>$/;"	s	namespace:glm::detail
storage	./glm/detail/qualifier.hpp	/^	struct storage<4, unsigned int, true>$/;"	s	namespace:glm::detail
streamsize_type	./glm/gtx/io.hpp	/^			typedef ::std::streamsize              streamsize_type;$/;"	t	class:glm::io::basic_state_saver	typeref:typename:::std::streamsize
tan	./glm/detail/func_trigonometric.inl	/^	GLM_FUNC_QUALIFIER vec<L, T, Q> tan(vec<L, T, Q> const& v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<L,T,Q>
tanh	./glm/detail/func_trigonometric.inl	/^	GLM_FUNC_QUALIFIER vec<L, T, Q> tanh(vec<L, T, Q> const& v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<L,T,Q>
tau	./glm/gtc/constants.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR genType tau()$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR genType
taylorCos	./glm/gtx/fast_trigonometry.inl	/^	GLM_FUNC_QUALIFIER vec<L, T, Q> taylorCos(vec<L, T, Q> const& x)$/;"	f	namespace:glm::detail	typeref:typename:GLM_FUNC_QUALIFIER vec<L,T,Q>
taylorInvSqrt	./glm/detail/_noise.hpp	/^	GLM_FUNC_QUALIFIER T taylorInvSqrt(T const& r)$/;"	f	namespace:glm::detail	typeref:typename:GLM_FUNC_QUALIFIER T
taylorInvSqrt	./glm/detail/_noise.hpp	/^	GLM_FUNC_QUALIFIER vec<2, T, Q> taylorInvSqrt(vec<2, T, Q> const& r)$/;"	f	namespace:glm::detail	typeref:typename:GLM_FUNC_QUALIFIER vec<2,T,Q>
taylorInvSqrt	./glm/detail/_noise.hpp	/^	GLM_FUNC_QUALIFIER vec<3, T, Q> taylorInvSqrt(vec<3, T, Q> const& r)$/;"	f	namespace:glm::detail	typeref:typename:GLM_FUNC_QUALIFIER vec<3,T,Q>
taylorInvSqrt	./glm/detail/_noise.hpp	/^	GLM_FUNC_QUALIFIER vec<4, T, Q> taylorInvSqrt(vec<4, T, Q> const& r)$/;"	f	namespace:glm::detail	typeref:typename:GLM_FUNC_QUALIFIER vec<4,T,Q>
tdualquat	./glm/detail/glm.cpp	/^template struct tdualquat<float32, highp>;$/;"	v	namespace:glm	typeref:meta:struct
tdualquat	./glm/detail/glm.cpp	/^template struct tdualquat<float32, lowp>;$/;"	v	namespace:glm	typeref:meta:struct
tdualquat	./glm/detail/glm.cpp	/^template struct tdualquat<float32, mediump>;$/;"	v	namespace:glm	typeref:meta:struct
tdualquat	./glm/detail/glm.cpp	/^template struct tdualquat<float64, highp>;$/;"	v	namespace:glm	typeref:meta:struct
tdualquat	./glm/detail/glm.cpp	/^template struct tdualquat<float64, lowp>;$/;"	v	namespace:glm	typeref:meta:struct
tdualquat	./glm/detail/glm.cpp	/^template struct tdualquat<float64, mediump>;$/;"	v	namespace:glm	typeref:meta:struct
tdualquat	./glm/gtx/dual_quaternion.hpp	/^	struct tdualquat$/;"	s	namespace:glm
tdualquat	./glm/gtx/dual_quaternion.inl	/^		GLM_DEFAULTED_FUNC_QUALIFIER GLM_CONSTEXPR tdualquat<T, Q>::tdualquat()$/;"	f	class:glm::tdualquat	typeref:typename:GLM_DEFAULTED_FUNC_QUALIFIER GLM_CONSTEXPR
tdualquat	./glm/gtx/dual_quaternion.inl	/^		GLM_DEFAULTED_FUNC_QUALIFIER GLM_CONSTEXPR tdualquat<T, Q>::tdualquat(tdualquat<T, Q> const& d/;"	f	class:glm::tdualquat	typeref:typename:GLM_DEFAULTED_FUNC_QUALIFIER GLM_CONSTEXPR
tdualquat	./glm/gtx/dual_quaternion.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR tdualquat<T, Q>::tdualquat(mat<2, 4, T, Q> const& m)$/;"	f	class:glm::tdualquat	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
tdualquat	./glm/gtx/dual_quaternion.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR tdualquat<T, Q>::tdualquat(mat<3, 4, T, Q> const& m)$/;"	f	class:glm::tdualquat	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
tdualquat	./glm/gtx/dual_quaternion.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR tdualquat<T, Q>::tdualquat(qua<T, Q> const& q, vec<3, T, Q> co/;"	f	class:glm::tdualquat	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
tdualquat	./glm/gtx/dual_quaternion.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR tdualquat<T, Q>::tdualquat(qua<T, Q> const& r)$/;"	f	class:glm::tdualquat	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
tdualquat	./glm/gtx/dual_quaternion.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR tdualquat<T, Q>::tdualquat(qua<T, Q> const& r, qua<T, Q> const/;"	f	class:glm::tdualquat	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
tdualquat	./glm/gtx/dual_quaternion.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR tdualquat<T, Q>::tdualquat(tdualquat<T, P> const& d)$/;"	f	class:glm::tdualquat	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
tdualquat	./glm/gtx/dual_quaternion.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR tdualquat<T, Q>::tdualquat(tdualquat<U, P> const& q)$/;"	f	class:glm::tdualquat	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
test	./glm/detail/setup.hpp	/^		enum test {value = 0};$/;"	g	struct:glm::detail::is_int
test	./glm/detail/setup.hpp	/^		enum test {value = ~0};$/;"	g	struct:glm::detail::is_int
test	./glm/ext/scalar_int_sized.hpp	/^		enum test {value = ~0};$/;"	g	struct:glm::detail::is_int
test	./glm/ext/scalar_uint_sized.hpp	/^		enum test {value = ~0};$/;"	g	struct:glm::detail::is_int
third	./glm/gtc/constants.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR genType third()$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR genType
three_over_two_pi	./glm/gtc/constants.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR genType three_over_two_pi()$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR genType
timeSlice	./GL/glxew.h	/^  int timeSlice; $/;"	m	struct:__anonb1a929810408	typeref:typename:int
tmat2x2	./glm/detail/qualifier.hpp	/^		template <typename T, qualifier Q = defaultp> using tmat2x2 = mat<2, 2, T, Q>;$/;"	t	namespace:glm	typeref:typename:mat<2,2,T,Q>
tmat2x3	./glm/detail/qualifier.hpp	/^		template <typename T, qualifier Q = defaultp> using tmat2x3 = mat<2, 3, T, Q>;$/;"	t	namespace:glm	typeref:typename:mat<2,3,T,Q>
tmat2x4	./glm/detail/qualifier.hpp	/^		template <typename T, qualifier Q = defaultp> using tmat2x4 = mat<2, 4, T, Q>;$/;"	t	namespace:glm	typeref:typename:mat<2,4,T,Q>
tmat3x2	./glm/detail/qualifier.hpp	/^		template <typename T, qualifier Q = defaultp> using tmat3x2 = mat<3, 2, T, Q>;$/;"	t	namespace:glm	typeref:typename:mat<3,2,T,Q>
tmat3x3	./glm/detail/qualifier.hpp	/^		template <typename T, qualifier Q = defaultp> using tmat3x3 = mat<3, 3, T, Q>;$/;"	t	namespace:glm	typeref:typename:mat<3,3,T,Q>
tmat3x4	./glm/detail/qualifier.hpp	/^		template <typename T, qualifier Q = defaultp> using tmat3x4 = mat<3, 4, T, Q>;$/;"	t	namespace:glm	typeref:typename:mat<3,4,T,Q>
tmat4x2	./glm/detail/qualifier.hpp	/^		template <typename T, qualifier Q = defaultp> using tmat4x2 = mat<4, 2, T, Q>;$/;"	t	namespace:glm	typeref:typename:mat<4,2,T,Q>
tmat4x3	./glm/detail/qualifier.hpp	/^		template <typename T, qualifier Q = defaultp> using tmat4x3 = mat<4, 3, T, Q>;$/;"	t	namespace:glm	typeref:typename:mat<4,3,T,Q>
tmat4x4	./glm/detail/qualifier.hpp	/^		template <typename T, qualifier Q = defaultp> using tmat4x4 = mat<4, 4, T, Q>;$/;"	t	namespace:glm	typeref:typename:mat<4,4,T,Q>
toFloat16	./glm/detail/type_half.inl	/^	GLM_FUNC_QUALIFIER hdata toFloat16(float const& f)$/;"	f	namespace:glm::detail	typeref:typename:GLM_FUNC_QUALIFIER hdata
toFloat32	./glm/detail/type_half.inl	/^	GLM_FUNC_QUALIFIER float toFloat32(hdata value)$/;"	f	namespace:glm::detail	typeref:typename:GLM_FUNC_QUALIFIER float
toMat3	./glm/gtx/quaternion.hpp	/^	GLM_FUNC_QUALIFIER mat<3, 3, T, Q> toMat3($/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER mat<3,3,T,Q>
toMat4	./glm/gtx/quaternion.hpp	/^	GLM_FUNC_QUALIFIER mat<4, 4, T, Q> toMat4($/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER mat<4,4,T,Q>
toQuat	./glm/gtx/quaternion.hpp	/^	GLM_FUNC_QUALIFIER qua<T, Q> toQuat($/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER qua<T,Q>
to_string	./glm/gtx/string_cast.inl	/^GLM_FUNC_QUALIFIER std::string to_string(matType const& x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER std::string
tquat	./glm/detail/qualifier.hpp	/^		template <typename T, qualifier Q = defaultp> using tquat = qua<T, Q>;$/;"	t	namespace:glm	typeref:typename:qua<T,Q>
transferSign	./glm/gtx/pca.inl	/^		GLM_FUNC_QUALIFIER static T transferSign(T const& v, T const& s)$/;"	f	namespace:glm::_internal_	typeref:typename:GLM_FUNC_QUALIFIER T	file:
translate	./glm/ext/matrix_transform.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<4, 4, T, Q> translate(mat<4, 4, T, Q> const& m, vec<3, T, /;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR mat<4,4,T,Q>
translate	./glm/gtx/matrix_transform_2d.inl	/^	GLM_FUNC_QUALIFIER mat<3, 3, T, Q> translate($/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER mat<3,3,T,Q>
translate	./glm/gtx/transform.inl	/^	GLM_FUNC_QUALIFIER mat<4, 4, T, Q> translate(vec<3, T, Q> const& v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER mat<4,4,T,Q>
transpose	./glm/detail/func_matrix.inl	/^	GLM_FUNC_QUALIFIER typename mat<C, R, T, Q>::transpose_type transpose(mat<C, R, T, Q> const& m)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER typename mat<C,R,T,Q>::transpose_type
transpose_type	./glm/detail/type_mat2x2.hpp	/^		typedef mat<2, 2, T, Q> transpose_type;$/;"	t	struct:glm::mat	typeref:typename:mat<2,2,T,Q>
transpose_type	./glm/detail/type_mat2x3.hpp	/^		typedef mat<3, 2, T, Q> transpose_type;$/;"	t	struct:glm::mat	typeref:typename:mat<3,2,T,Q>
transpose_type	./glm/detail/type_mat2x4.hpp	/^		typedef mat<4, 2, T, Q> transpose_type;$/;"	t	struct:glm::mat	typeref:typename:mat<4,2,T,Q>
transpose_type	./glm/detail/type_mat3x2.hpp	/^		typedef mat<2, 3, T, Q> transpose_type;$/;"	t	struct:glm::mat	typeref:typename:mat<2,3,T,Q>
transpose_type	./glm/detail/type_mat3x3.hpp	/^		typedef mat<3, 3, T, Q> transpose_type;$/;"	t	struct:glm::mat	typeref:typename:mat<3,3,T,Q>
transpose_type	./glm/detail/type_mat3x4.hpp	/^		typedef mat<4, 3, T, Q> transpose_type;$/;"	t	struct:glm::mat	typeref:typename:mat<4,3,T,Q>
transpose_type	./glm/detail/type_mat4x2.hpp	/^		typedef mat<2, 4, T, Q> transpose_type;$/;"	t	struct:glm::mat	typeref:typename:mat<2,4,T,Q>
transpose_type	./glm/detail/type_mat4x3.hpp	/^		typedef mat<3, 4, T, Q> transpose_type;$/;"	t	struct:glm::mat	typeref:typename:mat<3,4,T,Q>
transpose_type	./glm/detail/type_mat4x4.hpp	/^		typedef mat<4, 4, T, Q> transpose_type;$/;"	t	struct:glm::mat	typeref:typename:mat<4,4,T,Q>
triangleNormal	./glm/gtx/normal.inl	/^	GLM_FUNC_QUALIFIER vec<3, T, Q> triangleNormal$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<3,T,Q>
trunc	./glm/detail/func_common.inl	/^		GLM_FUNC_QUALIFIER genType trunc(genType x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER genType
trunc	./glm/detail/func_common.inl	/^	GLM_FUNC_QUALIFIER vec<L, T, Q> trunc(vec<L, T, Q> const& x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<L,T,Q>
tvec1	./glm/detail/qualifier.hpp	/^		template <typename T, qualifier Q = defaultp> using tvec1 = vec<1, T, Q>;$/;"	t	namespace:glm	typeref:typename:vec<1,T,Q>
tvec2	./glm/detail/qualifier.hpp	/^		template <typename T, qualifier Q = defaultp> using tvec2 = vec<2, T, Q>;$/;"	t	namespace:glm	typeref:typename:vec<2,T,Q>
tvec3	./glm/detail/qualifier.hpp	/^		template <typename T, qualifier Q = defaultp> using tvec3 = vec<3, T, Q>;$/;"	t	namespace:glm	typeref:typename:vec<3,T,Q>
tvec4	./glm/detail/qualifier.hpp	/^		template <typename T, qualifier Q = defaultp> using tvec4 = vec<4, T, Q>;$/;"	t	namespace:glm	typeref:typename:vec<4,T,Q>
tweakedInfinitePerspective	./glm/ext/matrix_clip_space.inl	/^	GLM_FUNC_QUALIFIER mat<4, 4, T, defaultp> tweakedInfinitePerspective(T fovy, T aspect, T zNear)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER mat<4,4,T,defaultp>
tweakedInfinitePerspective	./glm/ext/matrix_clip_space.inl	/^	GLM_FUNC_QUALIFIER mat<4, 4, T, defaultp> tweakedInfinitePerspective(T fovy, T aspect, T zNear,/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER mat<4,4,T,defaultp>
two_over_pi	./glm/gtc/constants.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR genType two_over_pi()$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR genType
two_over_root_pi	./glm/gtc/constants.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR genType two_over_root_pi()$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR genType
two_pi	./glm/gtc/constants.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR genType two_pi()$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR genType
two_thirds	./glm/gtc/constants.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR genType two_thirds()$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR genType
type	./GL/glxew.h	/^typedef struct { int type; unsigned long serial; Bool send_event; Display *display; GLXDrawable /;"	m	struct:__anonb1a929810608	typeref:typename:int
type	./glm/detail/qualifier.hpp	/^			typedef struct alignas(4 * sizeof(T)) type {$/;"	s	struct:glm::detail::storage
type	./glm/detail/qualifier.hpp	/^			typedef struct alignas(L * sizeof(T)) type {$/;"	s	struct:glm::detail::storage
type	./glm/detail/qualifier.hpp	/^			} type;$/;"	t	struct:glm::detail::storage	typeref:struct:glm::detail::storage::type
type	./glm/detail/qualifier.hpp	/^		typedef glm_f32vec4 type;$/;"	t	struct:glm::detail::storage	typeref:typename:glm_f32vec4
type	./glm/detail/qualifier.hpp	/^		typedef glm_f64vec2 type;$/;"	t	struct:glm::detail::storage	typeref:typename:glm_f64vec2
type	./glm/detail/qualifier.hpp	/^		typedef glm_f64vec4 type;$/;"	t	struct:glm::detail::storage	typeref:typename:glm_f64vec4
type	./glm/detail/qualifier.hpp	/^		typedef glm_i32vec4 type;$/;"	t	struct:glm::detail::storage	typeref:typename:glm_i32vec4
type	./glm/detail/qualifier.hpp	/^		typedef glm_i64vec2 type;$/;"	t	struct:glm::detail::storage	typeref:typename:glm_i64vec2
type	./glm/detail/qualifier.hpp	/^		typedef glm_i64vec4 type;$/;"	t	struct:glm::detail::storage	typeref:typename:glm_i64vec4
type	./glm/detail/qualifier.hpp	/^		typedef glm_u32vec4 type;$/;"	t	struct:glm::detail::storage	typeref:typename:glm_u32vec4
type	./glm/detail/qualifier.hpp	/^		typedef glm_u64vec2 type;$/;"	t	struct:glm::detail::storage	typeref:typename:glm_u64vec2
type	./glm/detail/qualifier.hpp	/^		typedef glm_u64vec4 type;$/;"	t	struct:glm::detail::storage	typeref:typename:glm_u64vec4
type	./glm/detail/qualifier.hpp	/^		typedef struct type {$/;"	s	struct:glm::detail::storage
type	./glm/detail/qualifier.hpp	/^		} type;$/;"	t	struct:glm::detail::storage	typeref:struct:glm::detail::storage::type
type	./glm/detail/setup.hpp	/^		typedef uint64 type;$/;"	t	struct:glm::detail::make_unsigned	typeref:typename:uint64
type	./glm/detail/setup.hpp	/^		typedef unsigned char type;$/;"	t	struct:glm::detail::make_unsigned	typeref:typename:unsigned char
type	./glm/detail/setup.hpp	/^		typedef unsigned int type;$/;"	t	struct:glm::detail::make_unsigned	typeref:typename:unsigned int
type	./glm/detail/setup.hpp	/^		typedef unsigned long type;$/;"	t	struct:glm::detail::make_unsigned	typeref:typename:unsigned long
type	./glm/detail/setup.hpp	/^		typedef unsigned short type;$/;"	t	struct:glm::detail::make_unsigned	typeref:typename:unsigned short
type	./glm/detail/type_mat2x2.hpp	/^		typedef mat<2, 2, T, Q> type;$/;"	t	struct:glm::mat	typeref:typename:mat<2,2,T,Q>
type	./glm/detail/type_mat2x3.hpp	/^		typedef mat<2, 3, T, Q> type;$/;"	t	struct:glm::mat	typeref:typename:mat<2,3,T,Q>
type	./glm/detail/type_mat2x4.hpp	/^		typedef mat<2, 4, T, Q> type;$/;"	t	struct:glm::mat	typeref:typename:mat<2,4,T,Q>
type	./glm/detail/type_mat3x2.hpp	/^		typedef mat<3, 2, T, Q> type;$/;"	t	struct:glm::mat	typeref:typename:mat<3,2,T,Q>
type	./glm/detail/type_mat3x3.hpp	/^		typedef mat<3, 3, T, Q> type;$/;"	t	struct:glm::mat	typeref:typename:mat<3,3,T,Q>
type	./glm/detail/type_mat3x4.hpp	/^		typedef mat<3, 4, T, Q> type;$/;"	t	struct:glm::mat	typeref:typename:mat<3,4,T,Q>
type	./glm/detail/type_mat4x2.hpp	/^		typedef mat<4, 2, T, Q> type;$/;"	t	struct:glm::mat	typeref:typename:mat<4,2,T,Q>
type	./glm/detail/type_mat4x3.hpp	/^		typedef mat<4, 3, T, Q> type;$/;"	t	struct:glm::mat	typeref:typename:mat<4,3,T,Q>
type	./glm/detail/type_mat4x4.hpp	/^		typedef mat<4, 4, T, Q> type;$/;"	t	struct:glm::mat	typeref:typename:mat<4,4,T,Q>
type	./glm/detail/type_quat.hpp	/^		typedef qua<T, Q> type;$/;"	t	struct:glm::qua	typeref:typename:qua<T,Q>
type	./glm/detail/type_vec1.hpp	/^		typedef vec<1, T, Q> type;$/;"	t	struct:glm::vec	typeref:typename:vec<1,T,Q>
type	./glm/detail/type_vec2.hpp	/^		typedef vec<2, T, Q> type;$/;"	t	struct:glm::vec	typeref:typename:vec<2,T,Q>
type	./glm/detail/type_vec3.hpp	/^		typedef vec<3, T, Q> type;$/;"	t	struct:glm::vec	typeref:typename:vec<3,T,Q>
type	./glm/detail/type_vec4.hpp	/^		typedef vec<4, T, Q> type;$/;"	t	struct:glm::vec	typeref:typename:vec<4,T,Q>
type	./glm/gtx/type_trait.hpp	/^	struct type$/;"	s	namespace:glm
type	./glm/gtx/type_trait.hpp	/^	struct type<mat<C, R, T, Q> >$/;"	s	namespace:glm
type	./glm/gtx/type_trait.hpp	/^	struct type<qua<T, Q> >$/;"	s	namespace:glm
type	./glm/gtx/type_trait.hpp	/^	struct type<tdualquat<T, Q> >$/;"	s	namespace:glm
type	./glm/gtx/type_trait.hpp	/^	struct type<vec<L, T, Q> >$/;"	s	namespace:glm
type	./glm/matrix.hpp	/^		typedef mat<2, 2, T, Q> type;$/;"	t	struct:glm::detail::outerProduct_trait	typeref:typename:mat<2,2,T,Q>
type	./glm/matrix.hpp	/^		typedef mat<2, 3, T, Q> type;$/;"	t	struct:glm::detail::outerProduct_trait	typeref:typename:mat<2,3,T,Q>
type	./glm/matrix.hpp	/^		typedef mat<2, 4, T, Q> type;$/;"	t	struct:glm::detail::outerProduct_trait	typeref:typename:mat<2,4,T,Q>
type	./glm/matrix.hpp	/^		typedef mat<3, 2, T, Q> type;$/;"	t	struct:glm::detail::outerProduct_trait	typeref:typename:mat<3,2,T,Q>
type	./glm/matrix.hpp	/^		typedef mat<3, 3, T, Q> type;$/;"	t	struct:glm::detail::outerProduct_trait	typeref:typename:mat<3,3,T,Q>
type	./glm/matrix.hpp	/^		typedef mat<3, 4, T, Q> type;$/;"	t	struct:glm::detail::outerProduct_trait	typeref:typename:mat<3,4,T,Q>
type	./glm/matrix.hpp	/^		typedef mat<4, 2, T, Q> type;$/;"	t	struct:glm::detail::outerProduct_trait	typeref:typename:mat<4,2,T,Q>
type	./glm/matrix.hpp	/^		typedef mat<4, 3, T, Q> type;$/;"	t	struct:glm::detail::outerProduct_trait	typeref:typename:mat<4,3,T,Q>
type	./glm/matrix.hpp	/^		typedef mat<4, 4, T, Q> type;$/;"	t	struct:glm::detail::outerProduct_trait	typeref:typename:mat<4,4,T,Q>
u	./glm/gtc/bitfield.inl	/^			uint16 u;$/;"	m	union:glm::bitfieldInterleave::sign16	typeref:typename:uint16	file:
u	./glm/gtc/bitfield.inl	/^			uint32 u;$/;"	m	union:glm::bitfieldInterleave::sign16	typeref:typename:uint32	file:
u	./glm/gtc/bitfield.inl	/^			uint32 u;$/;"	m	union:glm::bitfieldInterleave::sign32	typeref:typename:uint32	file:
u	./glm/gtc/bitfield.inl	/^			uint64 u;$/;"	m	union:glm::bitfieldInterleave::sign64	typeref:typename:uint64	file:
u	./glm/gtc/bitfield.inl	/^			uint8 u;$/;"	m	union:glm::bitfieldInterleave::sign8	typeref:typename:uint8	file:
u10u10u10u2	./glm/gtc/packing.inl	/^	union u10u10u10u2$/;"	u	namespace:glm::detail	file:
u16	./glm/fwd.hpp	/^	typedef uint16					u16;$/;"	t	namespace:glm	typeref:typename:uint16
u16	./glm/gtc/type_precision.hpp	/^	typedef detail::uint16 u16;$/;"	t	namespace:glm	typeref:typename:detail::uint16
u16mat2	./glm/ext/matrix_uint2x2_sized.hpp	/^	typedef mat<2, 2, uint16, defaultp>				u16mat2;$/;"	t	namespace:glm	typeref:typename:mat<2,2,uint16,defaultp>
u16mat2x2	./glm/ext/matrix_uint2x2_sized.hpp	/^	typedef mat<2, 2, uint16, defaultp>				u16mat2x2;$/;"	t	namespace:glm	typeref:typename:mat<2,2,uint16,defaultp>
u16mat2x2	./glm/fwd.hpp	/^	typedef mat<2, 2, uint16, defaultp>	u16mat2x2;$/;"	t	namespace:glm	typeref:typename:mat<2,2,uint16,defaultp>
u16mat2x3	./glm/ext/matrix_uint2x3_sized.hpp	/^	typedef mat<2, 3, uint16, defaultp>				u16mat2x3;$/;"	t	namespace:glm	typeref:typename:mat<2,3,uint16,defaultp>
u16mat2x3	./glm/fwd.hpp	/^	typedef mat<2, 3, uint16, defaultp>	u16mat2x3;$/;"	t	namespace:glm	typeref:typename:mat<2,3,uint16,defaultp>
u16mat2x4	./glm/ext/matrix_uint2x4_sized.hpp	/^	typedef mat<2, 4, uint16, defaultp>				u16mat2x4;$/;"	t	namespace:glm	typeref:typename:mat<2,4,uint16,defaultp>
u16mat2x4	./glm/fwd.hpp	/^	typedef mat<2, 4, uint16, defaultp>	u16mat2x4;$/;"	t	namespace:glm	typeref:typename:mat<2,4,uint16,defaultp>
u16mat3	./glm/ext/matrix_uint3x3_sized.hpp	/^	typedef mat<3, 3, uint16, defaultp>				u16mat3;$/;"	t	namespace:glm	typeref:typename:mat<3,3,uint16,defaultp>
u16mat3x2	./glm/ext/matrix_uint3x2_sized.hpp	/^	typedef mat<3, 2, uint16, defaultp>				u16mat3x2;$/;"	t	namespace:glm	typeref:typename:mat<3,2,uint16,defaultp>
u16mat3x2	./glm/fwd.hpp	/^	typedef mat<3, 2, uint16, defaultp>	u16mat3x2;$/;"	t	namespace:glm	typeref:typename:mat<3,2,uint16,defaultp>
u16mat3x3	./glm/ext/matrix_uint3x3_sized.hpp	/^	typedef mat<3, 3, uint16, defaultp>				u16mat3x3;$/;"	t	namespace:glm	typeref:typename:mat<3,3,uint16,defaultp>
u16mat3x3	./glm/fwd.hpp	/^	typedef mat<3, 3, uint16, defaultp>	u16mat3x3;$/;"	t	namespace:glm	typeref:typename:mat<3,3,uint16,defaultp>
u16mat3x4	./glm/ext/matrix_uint3x4_sized.hpp	/^	typedef mat<3, 4, uint16, defaultp>				u16mat3x4;$/;"	t	namespace:glm	typeref:typename:mat<3,4,uint16,defaultp>
u16mat3x4	./glm/fwd.hpp	/^	typedef mat<3, 4, uint16, defaultp>	u16mat3x4;$/;"	t	namespace:glm	typeref:typename:mat<3,4,uint16,defaultp>
u16mat4	./glm/ext/matrix_uint4x4_sized.hpp	/^	typedef mat<4, 4, uint16, defaultp>				u16mat4;$/;"	t	namespace:glm	typeref:typename:mat<4,4,uint16,defaultp>
u16mat4x2	./glm/ext/matrix_uint4x2_sized.hpp	/^	typedef mat<4, 2, uint16, defaultp>				u16mat4x2;$/;"	t	namespace:glm	typeref:typename:mat<4,2,uint16,defaultp>
u16mat4x2	./glm/fwd.hpp	/^	typedef mat<4, 2, uint16, defaultp>	u16mat4x2;$/;"	t	namespace:glm	typeref:typename:mat<4,2,uint16,defaultp>
u16mat4x3	./glm/ext/matrix_uint4x3_sized.hpp	/^	typedef mat<4, 3, uint16, defaultp>				u16mat4x3;$/;"	t	namespace:glm	typeref:typename:mat<4,3,uint16,defaultp>
u16mat4x3	./glm/fwd.hpp	/^	typedef mat<4, 3, uint16, defaultp>	u16mat4x3;$/;"	t	namespace:glm	typeref:typename:mat<4,3,uint16,defaultp>
u16mat4x4	./glm/ext/matrix_uint4x4_sized.hpp	/^	typedef mat<4, 4, uint16, defaultp>				u16mat4x4;$/;"	t	namespace:glm	typeref:typename:mat<4,4,uint16,defaultp>
u16mat4x4	./glm/fwd.hpp	/^	typedef mat<4, 4, uint16, defaultp>	u16mat4x4;$/;"	t	namespace:glm	typeref:typename:mat<4,4,uint16,defaultp>
u16vec1	./glm/ext/vector_uint1_sized.hpp	/^	typedef vec<1, uint16, defaultp>	u16vec1;$/;"	t	namespace:glm	typeref:typename:vec<1,uint16,defaultp>
u16vec1	./glm/fwd.hpp	/^	typedef vec<1, u16, defaultp>	u16vec1;$/;"	t	namespace:glm	typeref:typename:vec<1,u16,defaultp>
u16vec2	./glm/ext/vector_uint2_sized.hpp	/^	typedef vec<2, uint16, defaultp>	u16vec2;$/;"	t	namespace:glm	typeref:typename:vec<2,uint16,defaultp>
u16vec2	./glm/fwd.hpp	/^	typedef vec<2, u16, defaultp>	u16vec2;$/;"	t	namespace:glm	typeref:typename:vec<2,u16,defaultp>
u16vec3	./glm/ext/vector_uint3_sized.hpp	/^	typedef vec<3, uint16, defaultp>	u16vec3;$/;"	t	namespace:glm	typeref:typename:vec<3,uint16,defaultp>
u16vec3	./glm/fwd.hpp	/^	typedef vec<3, u16, defaultp>	u16vec3;$/;"	t	namespace:glm	typeref:typename:vec<3,u16,defaultp>
u16vec4	./glm/ext/vector_uint4_sized.hpp	/^	typedef vec<4, uint16, defaultp>	u16vec4;$/;"	t	namespace:glm	typeref:typename:vec<4,uint16,defaultp>
u16vec4	./glm/fwd.hpp	/^	typedef vec<4, u16, defaultp>	u16vec4;$/;"	t	namespace:glm	typeref:typename:vec<4,u16,defaultp>
u32	./glm/fwd.hpp	/^	typedef uint32					u32;$/;"	t	namespace:glm	typeref:typename:uint32
u32	./glm/gtc/type_precision.hpp	/^	typedef detail::uint32 u32;$/;"	t	namespace:glm	typeref:typename:detail::uint32
u32mat2	./glm/ext/matrix_uint2x2_sized.hpp	/^	typedef mat<2, 2, uint32, defaultp>				u32mat2;$/;"	t	namespace:glm	typeref:typename:mat<2,2,uint32,defaultp>
u32mat2x2	./glm/ext/matrix_uint2x2_sized.hpp	/^	typedef mat<2, 2, uint32, defaultp>				u32mat2x2;$/;"	t	namespace:glm	typeref:typename:mat<2,2,uint32,defaultp>
u32mat2x2	./glm/fwd.hpp	/^	typedef mat<2, 2, uint32, defaultp>	u32mat2x2;$/;"	t	namespace:glm	typeref:typename:mat<2,2,uint32,defaultp>
u32mat2x3	./glm/ext/matrix_uint2x3_sized.hpp	/^	typedef mat<2, 3, uint32, defaultp>				u32mat2x3;$/;"	t	namespace:glm	typeref:typename:mat<2,3,uint32,defaultp>
u32mat2x3	./glm/fwd.hpp	/^	typedef mat<2, 3, uint32, defaultp>	u32mat2x3;$/;"	t	namespace:glm	typeref:typename:mat<2,3,uint32,defaultp>
u32mat2x4	./glm/ext/matrix_uint2x4_sized.hpp	/^	typedef mat<2, 4, uint32, defaultp>				u32mat2x4;$/;"	t	namespace:glm	typeref:typename:mat<2,4,uint32,defaultp>
u32mat2x4	./glm/fwd.hpp	/^	typedef mat<2, 4, uint32, defaultp>	u32mat2x4;$/;"	t	namespace:glm	typeref:typename:mat<2,4,uint32,defaultp>
u32mat3	./glm/ext/matrix_uint3x3_sized.hpp	/^	typedef mat<3, 3, uint32, defaultp>				u32mat3;$/;"	t	namespace:glm	typeref:typename:mat<3,3,uint32,defaultp>
u32mat3x2	./glm/ext/matrix_uint3x2_sized.hpp	/^	typedef mat<3, 2, uint32, defaultp>				u32mat3x2;$/;"	t	namespace:glm	typeref:typename:mat<3,2,uint32,defaultp>
u32mat3x2	./glm/fwd.hpp	/^	typedef mat<3, 2, uint32, defaultp>	u32mat3x2;$/;"	t	namespace:glm	typeref:typename:mat<3,2,uint32,defaultp>
u32mat3x3	./glm/ext/matrix_uint3x3_sized.hpp	/^	typedef mat<3, 3, uint32, defaultp>				u32mat3x3;$/;"	t	namespace:glm	typeref:typename:mat<3,3,uint32,defaultp>
u32mat3x3	./glm/fwd.hpp	/^	typedef mat<3, 3, uint32, defaultp>	u32mat3x3;$/;"	t	namespace:glm	typeref:typename:mat<3,3,uint32,defaultp>
u32mat3x4	./glm/ext/matrix_uint3x4_sized.hpp	/^	typedef mat<3, 4, uint32, defaultp>				u32mat3x4;$/;"	t	namespace:glm	typeref:typename:mat<3,4,uint32,defaultp>
u32mat3x4	./glm/fwd.hpp	/^	typedef mat<3, 4, uint32, defaultp>	u32mat3x4;$/;"	t	namespace:glm	typeref:typename:mat<3,4,uint32,defaultp>
u32mat4	./glm/ext/matrix_uint4x4_sized.hpp	/^	typedef mat<4, 4, uint32, defaultp>				u32mat4;$/;"	t	namespace:glm	typeref:typename:mat<4,4,uint32,defaultp>
u32mat4x2	./glm/ext/matrix_uint4x2_sized.hpp	/^	typedef mat<4, 2, uint32, defaultp>				u32mat4x2;$/;"	t	namespace:glm	typeref:typename:mat<4,2,uint32,defaultp>
u32mat4x2	./glm/fwd.hpp	/^	typedef mat<4, 2, uint32, defaultp>	u32mat4x2;$/;"	t	namespace:glm	typeref:typename:mat<4,2,uint32,defaultp>
u32mat4x3	./glm/ext/matrix_uint4x3_sized.hpp	/^	typedef mat<4, 3, uint32, defaultp>				u32mat4x3;$/;"	t	namespace:glm	typeref:typename:mat<4,3,uint32,defaultp>
u32mat4x3	./glm/fwd.hpp	/^	typedef mat<4, 3, uint32, defaultp>	u32mat4x3;$/;"	t	namespace:glm	typeref:typename:mat<4,3,uint32,defaultp>
u32mat4x4	./glm/ext/matrix_uint4x4_sized.hpp	/^	typedef mat<4, 4, uint32, defaultp>				u32mat4x4;$/;"	t	namespace:glm	typeref:typename:mat<4,4,uint32,defaultp>
u32mat4x4	./glm/fwd.hpp	/^	typedef mat<4, 4, uint32, defaultp>	u32mat4x4;$/;"	t	namespace:glm	typeref:typename:mat<4,4,uint32,defaultp>
u32vec1	./glm/ext/vector_uint1_sized.hpp	/^	typedef vec<1, uint32, defaultp>	u32vec1;$/;"	t	namespace:glm	typeref:typename:vec<1,uint32,defaultp>
u32vec1	./glm/fwd.hpp	/^	typedef vec<1, u32, defaultp>	u32vec1;$/;"	t	namespace:glm	typeref:typename:vec<1,u32,defaultp>
u32vec2	./glm/ext/vector_uint2_sized.hpp	/^	typedef vec<2, uint32, defaultp>	u32vec2;$/;"	t	namespace:glm	typeref:typename:vec<2,uint32,defaultp>
u32vec2	./glm/fwd.hpp	/^	typedef vec<2, u32, defaultp>	u32vec2;$/;"	t	namespace:glm	typeref:typename:vec<2,u32,defaultp>
u32vec3	./glm/ext/vector_uint3_sized.hpp	/^	typedef vec<3, uint32, defaultp>	u32vec3;$/;"	t	namespace:glm	typeref:typename:vec<3,uint32,defaultp>
u32vec3	./glm/fwd.hpp	/^	typedef vec<3, u32, defaultp>	u32vec3;$/;"	t	namespace:glm	typeref:typename:vec<3,u32,defaultp>
u32vec4	./glm/ext/vector_uint4_sized.hpp	/^	typedef vec<4, uint32, defaultp>	u32vec4;$/;"	t	namespace:glm	typeref:typename:vec<4,uint32,defaultp>
u32vec4	./glm/fwd.hpp	/^	typedef vec<4, u32, defaultp>	u32vec4;$/;"	t	namespace:glm	typeref:typename:vec<4,u32,defaultp>
u3u3u2	./glm/gtc/packing.inl	/^	union u3u3u2$/;"	u	namespace:glm::detail	file:
u4u4	./glm/gtc/packing.inl	/^	union u4u4$/;"	u	namespace:glm::detail	file:
u4u4u4u4	./glm/gtc/packing.inl	/^	union u4u4u4u4$/;"	u	namespace:glm::detail	file:
u5u5u5u1	./glm/gtc/packing.inl	/^	union u5u5u5u1$/;"	u	namespace:glm::detail	file:
u5u6u5	./glm/gtc/packing.inl	/^	union u5u6u5$/;"	u	namespace:glm::detail	file:
u64	./glm/fwd.hpp	/^	typedef uint64					u64;$/;"	t	namespace:glm	typeref:typename:uint64
u64	./glm/gtc/type_precision.hpp	/^	typedef detail::uint64 u64;$/;"	t	namespace:glm	typeref:typename:detail::uint64
u64mat2	./glm/ext/matrix_uint2x2_sized.hpp	/^	typedef mat<2, 2, uint64, defaultp>				u64mat2;$/;"	t	namespace:glm	typeref:typename:mat<2,2,uint64,defaultp>
u64mat2x2	./glm/ext/matrix_uint2x2_sized.hpp	/^	typedef mat<2, 2, uint64, defaultp>				u64mat2x2;$/;"	t	namespace:glm	typeref:typename:mat<2,2,uint64,defaultp>
u64mat2x2	./glm/fwd.hpp	/^	typedef mat<2, 2, uint64, defaultp>	u64mat2x2;$/;"	t	namespace:glm	typeref:typename:mat<2,2,uint64,defaultp>
u64mat2x3	./glm/ext/matrix_uint2x3_sized.hpp	/^	typedef mat<2, 3, uint64, defaultp>				u64mat2x3;$/;"	t	namespace:glm	typeref:typename:mat<2,3,uint64,defaultp>
u64mat2x3	./glm/fwd.hpp	/^	typedef mat<2, 3, uint64, defaultp>	u64mat2x3;$/;"	t	namespace:glm	typeref:typename:mat<2,3,uint64,defaultp>
u64mat2x4	./glm/ext/matrix_uint2x4_sized.hpp	/^	typedef mat<2, 4, uint64, defaultp>				u64mat2x4;$/;"	t	namespace:glm	typeref:typename:mat<2,4,uint64,defaultp>
u64mat2x4	./glm/fwd.hpp	/^	typedef mat<2, 4, uint64, defaultp>	u64mat2x4;$/;"	t	namespace:glm	typeref:typename:mat<2,4,uint64,defaultp>
u64mat3	./glm/ext/matrix_uint3x3_sized.hpp	/^	typedef mat<3, 3, uint64, defaultp>				u64mat3;$/;"	t	namespace:glm	typeref:typename:mat<3,3,uint64,defaultp>
u64mat3x2	./glm/ext/matrix_uint3x2_sized.hpp	/^	typedef mat<3, 2, uint64, defaultp>				u64mat3x2;$/;"	t	namespace:glm	typeref:typename:mat<3,2,uint64,defaultp>
u64mat3x2	./glm/fwd.hpp	/^	typedef mat<3, 2, uint64, defaultp>	u64mat3x2;$/;"	t	namespace:glm	typeref:typename:mat<3,2,uint64,defaultp>
u64mat3x3	./glm/ext/matrix_uint3x3_sized.hpp	/^	typedef mat<3, 3, uint64, defaultp>				u64mat3x3;$/;"	t	namespace:glm	typeref:typename:mat<3,3,uint64,defaultp>
u64mat3x3	./glm/fwd.hpp	/^	typedef mat<3, 3, uint64, defaultp>	u64mat3x3;$/;"	t	namespace:glm	typeref:typename:mat<3,3,uint64,defaultp>
u64mat3x4	./glm/ext/matrix_uint3x4_sized.hpp	/^	typedef mat<3, 4, uint64, defaultp>				u64mat3x4;$/;"	t	namespace:glm	typeref:typename:mat<3,4,uint64,defaultp>
u64mat3x4	./glm/fwd.hpp	/^	typedef mat<3, 4, uint64, defaultp>	u64mat3x4;$/;"	t	namespace:glm	typeref:typename:mat<3,4,uint64,defaultp>
u64mat4	./glm/ext/matrix_uint4x4_sized.hpp	/^	typedef mat<4, 4, uint64, defaultp>				u64mat4;$/;"	t	namespace:glm	typeref:typename:mat<4,4,uint64,defaultp>
u64mat4x2	./glm/ext/matrix_uint4x2_sized.hpp	/^	typedef mat<4, 2, uint64, defaultp>				u64mat4x2;$/;"	t	namespace:glm	typeref:typename:mat<4,2,uint64,defaultp>
u64mat4x2	./glm/fwd.hpp	/^	typedef mat<4, 2, uint64, defaultp>	u64mat4x2;$/;"	t	namespace:glm	typeref:typename:mat<4,2,uint64,defaultp>
u64mat4x3	./glm/ext/matrix_uint4x3_sized.hpp	/^	typedef mat<4, 3, uint64, defaultp>				u64mat4x3;$/;"	t	namespace:glm	typeref:typename:mat<4,3,uint64,defaultp>
u64mat4x3	./glm/fwd.hpp	/^	typedef mat<4, 3, uint64, defaultp>	u64mat4x3;$/;"	t	namespace:glm	typeref:typename:mat<4,3,uint64,defaultp>
u64mat4x4	./glm/ext/matrix_uint4x4_sized.hpp	/^	typedef mat<4, 4, uint64, defaultp>				u64mat4x4;$/;"	t	namespace:glm	typeref:typename:mat<4,4,uint64,defaultp>
u64mat4x4	./glm/fwd.hpp	/^	typedef mat<4, 4, uint64, defaultp>	u64mat4x4;$/;"	t	namespace:glm	typeref:typename:mat<4,4,uint64,defaultp>
u64vec1	./glm/ext/vector_uint1_sized.hpp	/^	typedef vec<1, uint64, defaultp>	u64vec1;$/;"	t	namespace:glm	typeref:typename:vec<1,uint64,defaultp>
u64vec1	./glm/fwd.hpp	/^	typedef vec<1, u64, defaultp>	u64vec1;$/;"	t	namespace:glm	typeref:typename:vec<1,u64,defaultp>
u64vec2	./glm/ext/vector_uint2_sized.hpp	/^	typedef vec<2, uint64, defaultp>	u64vec2;$/;"	t	namespace:glm	typeref:typename:vec<2,uint64,defaultp>
u64vec2	./glm/fwd.hpp	/^	typedef vec<2, u64, defaultp>	u64vec2;$/;"	t	namespace:glm	typeref:typename:vec<2,u64,defaultp>
u64vec3	./glm/ext/vector_uint3_sized.hpp	/^	typedef vec<3, uint64, defaultp>	u64vec3;$/;"	t	namespace:glm	typeref:typename:vec<3,uint64,defaultp>
u64vec3	./glm/fwd.hpp	/^	typedef vec<3, u64, defaultp>	u64vec3;$/;"	t	namespace:glm	typeref:typename:vec<3,u64,defaultp>
u64vec4	./glm/ext/vector_uint4_sized.hpp	/^	typedef vec<4, uint64, defaultp>	u64vec4;$/;"	t	namespace:glm	typeref:typename:vec<4,uint64,defaultp>
u64vec4	./glm/fwd.hpp	/^	typedef vec<4, u64, defaultp>	u64vec4;$/;"	t	namespace:glm	typeref:typename:vec<4,u64,defaultp>
u8	./glm/fwd.hpp	/^	typedef uint8					u8;$/;"	t	namespace:glm	typeref:typename:uint8
u8	./glm/gtc/type_precision.hpp	/^	typedef detail::uint8 u8;$/;"	t	namespace:glm	typeref:typename:detail::uint8
u8mat2	./glm/ext/matrix_uint2x2_sized.hpp	/^	typedef mat<2, 2, uint8, defaultp>				u8mat2;$/;"	t	namespace:glm	typeref:typename:mat<2,2,uint8,defaultp>
u8mat2x2	./glm/ext/matrix_uint2x2_sized.hpp	/^	typedef mat<2, 2, uint8, defaultp>				u8mat2x2;$/;"	t	namespace:glm	typeref:typename:mat<2,2,uint8,defaultp>
u8mat2x2	./glm/fwd.hpp	/^	typedef mat<2, 2, uint8, defaultp>	u8mat2x2;$/;"	t	namespace:glm	typeref:typename:mat<2,2,uint8,defaultp>
u8mat2x3	./glm/ext/matrix_uint2x3_sized.hpp	/^	typedef mat<2, 3, uint8, defaultp>				u8mat2x3;$/;"	t	namespace:glm	typeref:typename:mat<2,3,uint8,defaultp>
u8mat2x3	./glm/fwd.hpp	/^	typedef mat<2, 3, uint8, defaultp>	u8mat2x3;$/;"	t	namespace:glm	typeref:typename:mat<2,3,uint8,defaultp>
u8mat2x4	./glm/ext/matrix_uint2x4_sized.hpp	/^	typedef mat<2, 4, uint8, defaultp>				u8mat2x4;$/;"	t	namespace:glm	typeref:typename:mat<2,4,uint8,defaultp>
u8mat2x4	./glm/fwd.hpp	/^	typedef mat<2, 4, uint8, defaultp>	u8mat2x4;$/;"	t	namespace:glm	typeref:typename:mat<2,4,uint8,defaultp>
u8mat3	./glm/ext/matrix_uint3x3_sized.hpp	/^	typedef mat<3, 3, uint8, defaultp>				u8mat3;$/;"	t	namespace:glm	typeref:typename:mat<3,3,uint8,defaultp>
u8mat3x2	./glm/ext/matrix_uint3x2_sized.hpp	/^	typedef mat<3, 2, uint8, defaultp>				u8mat3x2;$/;"	t	namespace:glm	typeref:typename:mat<3,2,uint8,defaultp>
u8mat3x2	./glm/fwd.hpp	/^	typedef mat<3, 2, uint8, defaultp>	u8mat3x2;$/;"	t	namespace:glm	typeref:typename:mat<3,2,uint8,defaultp>
u8mat3x3	./glm/ext/matrix_uint3x3_sized.hpp	/^	typedef mat<3, 3, uint8, defaultp>				u8mat3x3;$/;"	t	namespace:glm	typeref:typename:mat<3,3,uint8,defaultp>
u8mat3x3	./glm/fwd.hpp	/^	typedef mat<3, 3, uint8, defaultp>	u8mat3x3;$/;"	t	namespace:glm	typeref:typename:mat<3,3,uint8,defaultp>
u8mat3x4	./glm/ext/matrix_uint3x4_sized.hpp	/^	typedef mat<3, 4, uint8, defaultp>				u8mat3x4;$/;"	t	namespace:glm	typeref:typename:mat<3,4,uint8,defaultp>
u8mat3x4	./glm/fwd.hpp	/^	typedef mat<3, 4, uint8, defaultp>	u8mat3x4;$/;"	t	namespace:glm	typeref:typename:mat<3,4,uint8,defaultp>
u8mat4	./glm/ext/matrix_uint4x4_sized.hpp	/^	typedef mat<4, 4, uint8, defaultp>				u8mat4;$/;"	t	namespace:glm	typeref:typename:mat<4,4,uint8,defaultp>
u8mat4x2	./glm/ext/matrix_uint4x2_sized.hpp	/^	typedef mat<4, 2, uint8, defaultp>				u8mat4x2;$/;"	t	namespace:glm	typeref:typename:mat<4,2,uint8,defaultp>
u8mat4x2	./glm/fwd.hpp	/^	typedef mat<4, 2, uint8, defaultp>	u8mat4x2;$/;"	t	namespace:glm	typeref:typename:mat<4,2,uint8,defaultp>
u8mat4x3	./glm/ext/matrix_uint4x3_sized.hpp	/^	typedef mat<4, 3, uint8, defaultp>				u8mat4x3;$/;"	t	namespace:glm	typeref:typename:mat<4,3,uint8,defaultp>
u8mat4x3	./glm/fwd.hpp	/^	typedef mat<4, 3, uint8, defaultp>	u8mat4x3;$/;"	t	namespace:glm	typeref:typename:mat<4,3,uint8,defaultp>
u8mat4x4	./glm/ext/matrix_uint4x4_sized.hpp	/^	typedef mat<4, 4, uint8, defaultp>				u8mat4x4;$/;"	t	namespace:glm	typeref:typename:mat<4,4,uint8,defaultp>
u8mat4x4	./glm/fwd.hpp	/^	typedef mat<4, 4, uint8, defaultp>	u8mat4x4;$/;"	t	namespace:glm	typeref:typename:mat<4,4,uint8,defaultp>
u8vec1	./glm/ext/vector_uint1_sized.hpp	/^	typedef vec<1, uint8, defaultp>		u8vec1;$/;"	t	namespace:glm	typeref:typename:vec<1,uint8,defaultp>
u8vec1	./glm/fwd.hpp	/^	typedef vec<1, u8, defaultp>	u8vec1;$/;"	t	namespace:glm	typeref:typename:vec<1,u8,defaultp>
u8vec2	./glm/ext/vector_uint2_sized.hpp	/^	typedef vec<2, uint8, defaultp>		u8vec2;$/;"	t	namespace:glm	typeref:typename:vec<2,uint8,defaultp>
u8vec2	./glm/fwd.hpp	/^	typedef vec<2, u8, defaultp>	u8vec2;$/;"	t	namespace:glm	typeref:typename:vec<2,u8,defaultp>
u8vec3	./glm/ext/vector_uint3_sized.hpp	/^	typedef vec<3, uint8, defaultp>		u8vec3;$/;"	t	namespace:glm	typeref:typename:vec<3,uint8,defaultp>
u8vec3	./glm/fwd.hpp	/^	typedef vec<3, u8, defaultp>	u8vec3;$/;"	t	namespace:glm	typeref:typename:vec<3,u8,defaultp>
u8vec4	./glm/ext/vector_uint4_sized.hpp	/^	typedef vec<4, uint8, defaultp>		u8vec4;$/;"	t	namespace:glm	typeref:typename:vec<4,uint8,defaultp>
u8vec4	./glm/fwd.hpp	/^	typedef vec<4, u8, defaultp>	u8vec4;$/;"	t	namespace:glm	typeref:typename:vec<4,u8,defaultp>
u9u9u9e5	./glm/gtc/packing.inl	/^	union u9u9u9e5$/;"	u	namespace:glm::detail	file:
uaddCarry	./glm/detail/func_integer.inl	/^	GLM_FUNC_QUALIFIER uint uaddCarry(uint const& x, uint const& y, uint & Carry)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER uint
uaddCarry	./glm/detail/func_integer.inl	/^	GLM_FUNC_QUALIFIER vec<L, uint, Q> uaddCarry(vec<L, uint, Q> const& x, vec<L, uint, Q> const& y/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<L,uint,Q>
uif32	./glm/detail/type_half.inl	/^		GLM_FUNC_QUALIFIER uif32() :$/;"	f	union:glm::detail::uif32	typeref:typename:GLM_FUNC_QUALIFIER	file:
uif32	./glm/detail/type_half.inl	/^		GLM_FUNC_QUALIFIER uif32(float f_) :$/;"	f	union:glm::detail::uif32	typeref:typename:GLM_FUNC_QUALIFIER	file:
uif32	./glm/detail/type_half.inl	/^		GLM_FUNC_QUALIFIER uif32(unsigned int i_) :$/;"	f	union:glm::detail::uif32	typeref:typename:GLM_FUNC_QUALIFIER	file:
uif32	./glm/detail/type_half.inl	/^	union uif32$/;"	u	namespace:glm::detail	file:
uint	./glm/detail/setup.hpp	/^	typedef unsigned int	uint;$/;"	t	namespace:glm	typeref:typename:unsigned int
uint	./glm/fwd.hpp	/^	typedef unsigned int			uint;$/;"	t	namespace:glm	typeref:typename:unsigned int
uint16	./glm/ext/scalar_uint_sized.hpp	/^		typedef std::uint16_t		uint16;$/;"	t	namespace:glm::detail	typeref:typename:std::uint16_t
uint16	./glm/ext/scalar_uint_sized.hpp	/^	typedef detail::uint16		uint16;$/;"	t	namespace:glm	typeref:typename:detail::uint16
uint16	./glm/fwd.hpp	/^	typedef std::uint16_t			uint16;$/;"	t	namespace:glm	typeref:typename:std::uint16_t
uint16_t	./glm/fwd.hpp	/^	typedef uint16					uint16_t;$/;"	t	namespace:glm	typeref:typename:uint16
uint16_t	./glm/gtc/type_precision.hpp	/^	typedef detail::uint16 uint16_t;$/;"	t	namespace:glm	typeref:typename:detail::uint16
uint32	./glm/ext/scalar_uint_sized.hpp	/^		typedef std::uint32_t		uint32;$/;"	t	namespace:glm::detail	typeref:typename:std::uint32_t
uint32	./glm/ext/scalar_uint_sized.hpp	/^	typedef detail::uint32		uint32;$/;"	t	namespace:glm	typeref:typename:detail::uint32
uint32	./glm/fwd.hpp	/^	typedef std::uint32_t			uint32;$/;"	t	namespace:glm	typeref:typename:std::uint32_t
uint32_t	./glm/fwd.hpp	/^	typedef uint32					uint32_t;$/;"	t	namespace:glm	typeref:typename:uint32
uint32_t	./glm/gtc/type_precision.hpp	/^	typedef detail::uint32 uint32_t;$/;"	t	namespace:glm	typeref:typename:detail::uint32
uint64	./glm/detail/setup.hpp	/^		typedef std::uint64_t						uint64;$/;"	t	namespace:glm::detail	typeref:typename:std::uint64_t
uint64	./glm/ext/scalar_uint_sized.hpp	/^	typedef detail::uint64		uint64;$/;"	t	namespace:glm	typeref:typename:detail::uint64
uint64	./glm/fwd.hpp	/^	typedef std::uint64_t			uint64;$/;"	t	namespace:glm	typeref:typename:std::uint64_t
uint64_t	./glm/fwd.hpp	/^	typedef uint64					uint64_t;$/;"	t	namespace:glm	typeref:typename:uint64
uint64_t	./glm/gtc/type_precision.hpp	/^	typedef detail::uint64 uint64_t;$/;"	t	namespace:glm	typeref:typename:detail::uint64
uint8	./glm/ext/scalar_uint_sized.hpp	/^		typedef std::uint8_t		uint8;$/;"	t	namespace:glm::detail	typeref:typename:std::uint8_t
uint8	./glm/ext/scalar_uint_sized.hpp	/^	typedef detail::uint8		uint8;$/;"	t	namespace:glm	typeref:typename:detail::uint8
uint8	./glm/fwd.hpp	/^	typedef std::uint8_t			uint8;$/;"	t	namespace:glm	typeref:typename:std::uint8_t
uint8_t	./glm/fwd.hpp	/^	typedef uint8					uint8_t;$/;"	t	namespace:glm	typeref:typename:uint8
uint8_t	./glm/gtc/type_precision.hpp	/^	typedef detail::uint8 uint8_t;$/;"	t	namespace:glm	typeref:typename:detail::uint8
uintBitsToFloat	./glm/detail/func_common.inl	/^	GLM_FUNC_QUALIFIER float uintBitsToFloat(uint v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER float
uintBitsToFloat	./glm/detail/func_common.inl	/^	GLM_FUNC_QUALIFIER vec<L, float, Q> uintBitsToFloat(vec<L, uint, Q> const& v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<L,float,Q>
umat2	./glm/ext/matrix_uint2x2.hpp	/^	typedef mat<2, 2, uint, defaultp>	umat2;$/;"	t	namespace:glm	typeref:typename:mat<2,2,uint,defaultp>
umat2	./glm/gtc/matrix_integer.hpp	/^	typedef mat<2, 2, uint, defaultp>				umat2;$/;"	t	namespace:glm	typeref:typename:mat<2,2,uint,defaultp>
umat2x2	./glm/ext/matrix_uint2x2.hpp	/^	typedef mat<2, 2, uint, defaultp>	umat2x2;$/;"	t	namespace:glm	typeref:typename:mat<2,2,uint,defaultp>
umat2x2	./glm/fwd.hpp	/^	typedef mat<2, 2, uint, defaultp>	umat2x2;$/;"	t	namespace:glm	typeref:typename:mat<2,2,uint,defaultp>
umat2x2	./glm/gtc/matrix_integer.hpp	/^	typedef mat<2, 2, uint, defaultp>				umat2x2;$/;"	t	namespace:glm	typeref:typename:mat<2,2,uint,defaultp>
umat2x3	./glm/ext/matrix_uint2x3.hpp	/^	typedef mat<2, 3, uint, defaultp>	umat2x3;$/;"	t	namespace:glm	typeref:typename:mat<2,3,uint,defaultp>
umat2x3	./glm/fwd.hpp	/^	typedef mat<2, 3, uint, defaultp>	umat2x3;$/;"	t	namespace:glm	typeref:typename:mat<2,3,uint,defaultp>
umat2x3	./glm/gtc/matrix_integer.hpp	/^	typedef mat<2, 3, uint, defaultp>				umat2x3;$/;"	t	namespace:glm	typeref:typename:mat<2,3,uint,defaultp>
umat2x4	./glm/ext/matrix_uint2x4.hpp	/^	typedef mat<2, 4, uint, defaultp>	umat2x4;$/;"	t	namespace:glm	typeref:typename:mat<2,4,uint,defaultp>
umat2x4	./glm/fwd.hpp	/^	typedef mat<2, 4, uint, defaultp>	umat2x4;$/;"	t	namespace:glm	typeref:typename:mat<2,4,uint,defaultp>
umat2x4	./glm/gtc/matrix_integer.hpp	/^	typedef mat<2, 4, uint, defaultp>				umat2x4;$/;"	t	namespace:glm	typeref:typename:mat<2,4,uint,defaultp>
umat3	./glm/ext/matrix_uint3x3.hpp	/^	typedef mat<3, 3, uint, defaultp>	umat3;$/;"	t	namespace:glm	typeref:typename:mat<3,3,uint,defaultp>
umat3	./glm/gtc/matrix_integer.hpp	/^	typedef mat<3, 3, uint, defaultp>				umat3;$/;"	t	namespace:glm	typeref:typename:mat<3,3,uint,defaultp>
umat3x2	./glm/ext/matrix_uint3x2.hpp	/^	typedef mat<3, 2, uint, defaultp>	umat3x2;$/;"	t	namespace:glm	typeref:typename:mat<3,2,uint,defaultp>
umat3x2	./glm/fwd.hpp	/^	typedef mat<3, 2, uint, defaultp>	umat3x2;$/;"	t	namespace:glm	typeref:typename:mat<3,2,uint,defaultp>
umat3x2	./glm/gtc/matrix_integer.hpp	/^	typedef mat<3, 2, uint, defaultp>				umat3x2;$/;"	t	namespace:glm	typeref:typename:mat<3,2,uint,defaultp>
umat3x3	./glm/ext/matrix_uint3x3.hpp	/^	typedef mat<3, 3, uint, defaultp>	umat3x3;$/;"	t	namespace:glm	typeref:typename:mat<3,3,uint,defaultp>
umat3x3	./glm/fwd.hpp	/^	typedef mat<3, 3, uint, defaultp>	umat3x3;$/;"	t	namespace:glm	typeref:typename:mat<3,3,uint,defaultp>
umat3x3	./glm/gtc/matrix_integer.hpp	/^	typedef mat<3, 3, uint, defaultp>				umat3x3;$/;"	t	namespace:glm	typeref:typename:mat<3,3,uint,defaultp>
umat3x4	./glm/ext/matrix_uint3x4.hpp	/^	typedef mat<3, 4, uint, defaultp>	umat3x4;$/;"	t	namespace:glm	typeref:typename:mat<3,4,uint,defaultp>
umat3x4	./glm/fwd.hpp	/^	typedef mat<3, 4, uint, defaultp>	umat3x4;$/;"	t	namespace:glm	typeref:typename:mat<3,4,uint,defaultp>
umat3x4	./glm/gtc/matrix_integer.hpp	/^	typedef mat<3, 4, uint, defaultp>				umat3x4;$/;"	t	namespace:glm	typeref:typename:mat<3,4,uint,defaultp>
umat4	./glm/ext/matrix_uint4x4.hpp	/^	typedef mat<4, 4, uint, defaultp>	umat4;$/;"	t	namespace:glm	typeref:typename:mat<4,4,uint,defaultp>
umat4	./glm/gtc/matrix_integer.hpp	/^	typedef mat<4, 4, uint, defaultp>				umat4;$/;"	t	namespace:glm	typeref:typename:mat<4,4,uint,defaultp>
umat4x2	./glm/ext/matrix_uint4x2.hpp	/^	typedef mat<4, 2, uint, defaultp>	umat4x2;$/;"	t	namespace:glm	typeref:typename:mat<4,2,uint,defaultp>
umat4x2	./glm/fwd.hpp	/^	typedef mat<4, 2, uint, defaultp>	umat4x2;$/;"	t	namespace:glm	typeref:typename:mat<4,2,uint,defaultp>
umat4x2	./glm/gtc/matrix_integer.hpp	/^	typedef mat<4, 2, uint, defaultp>				umat4x2;$/;"	t	namespace:glm	typeref:typename:mat<4,2,uint,defaultp>
umat4x3	./glm/ext/matrix_uint4x3.hpp	/^	typedef mat<4, 3, uint, defaultp>	umat4x3;$/;"	t	namespace:glm	typeref:typename:mat<4,3,uint,defaultp>
umat4x3	./glm/fwd.hpp	/^	typedef mat<4, 3, uint, defaultp>	umat4x3;$/;"	t	namespace:glm	typeref:typename:mat<4,3,uint,defaultp>
umat4x3	./glm/gtc/matrix_integer.hpp	/^	typedef mat<4, 3, uint, defaultp>				umat4x3;$/;"	t	namespace:glm	typeref:typename:mat<4,3,uint,defaultp>
umat4x4	./glm/ext/matrix_uint4x4.hpp	/^	typedef mat<4, 4, uint, defaultp>	umat4x4;$/;"	t	namespace:glm	typeref:typename:mat<4,4,uint,defaultp>
umat4x4	./glm/fwd.hpp	/^	typedef mat<4, 4, uint, defaultp>	umat4x4;$/;"	t	namespace:glm	typeref:typename:mat<4,4,uint,defaultp>
umat4x4	./glm/gtc/matrix_integer.hpp	/^	typedef mat<4, 4, uint, defaultp>				umat4x4;$/;"	t	namespace:glm	typeref:typename:mat<4,4,uint,defaultp>
umulExtended	./glm/detail/func_integer.inl	/^	GLM_FUNC_QUALIFIER void umulExtended(uint const& x, uint const& y, uint & msb, uint & lsb)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER void
umulExtended	./glm/detail/func_integer.inl	/^	GLM_FUNC_QUALIFIER void umulExtended(vec<L, uint, Q> const& x, vec<L, uint, Q> const& y, vec<L,/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER void
unProject	./glm/ext/matrix_projection.inl	/^	GLM_FUNC_QUALIFIER vec<3, T, Q> unProject(vec<3, T, Q> const& win, mat<4, 4, T, Q> const& model/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<3,T,Q>
unProjectNO	./glm/ext/matrix_projection.inl	/^	GLM_FUNC_QUALIFIER vec<3, T, Q> unProjectNO(vec<3, T, Q> const& win, mat<4, 4, T, Q> const& mod/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<3,T,Q>
unProjectZO	./glm/ext/matrix_projection.inl	/^	GLM_FUNC_QUALIFIER vec<3, T, Q> unProjectZO(vec<3, T, Q> const& win, mat<4, 4, T, Q> const& mod/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<3,T,Q>
unformatted	./glm/gtx/io.inl	/^	GLM_FUNC_QUALIFIER std::basic_ios<CTy, CTr>& unformatted(std::basic_ios<CTy, CTr>& ios)$/;"	f	namespace:glm::io	typeref:typename:GLM_FUNC_QUALIFIER std::basic_ios<CTy,CTr> &
unpack	./glm/gtc/packing.inl	/^		GLM_FUNC_QUALIFIER static vec<1, float, Q> unpack(vec<1, uint16, Q> const& v)$/;"	f	struct:glm::detail::compute_half	typeref:typename:GLM_FUNC_QUALIFIER vec<1,float,Q>	file:
unpack	./glm/gtc/packing.inl	/^		GLM_FUNC_QUALIFIER static vec<2, float, Q> unpack(vec<2, uint16, Q> const& v)$/;"	f	struct:glm::detail::compute_half	typeref:typename:GLM_FUNC_QUALIFIER vec<2,float,Q>	file:
unpack	./glm/gtc/packing.inl	/^		GLM_FUNC_QUALIFIER static vec<3, float, Q> unpack(vec<3, uint16, Q> const& v)$/;"	f	struct:glm::detail::compute_half	typeref:typename:GLM_FUNC_QUALIFIER vec<3,float,Q>	file:
unpack	./glm/gtc/packing.inl	/^		GLM_FUNC_QUALIFIER static vec<4, float, Q> unpack(vec<4, uint16, Q> const& v)$/;"	f	struct:glm::detail::compute_half	typeref:typename:GLM_FUNC_QUALIFIER vec<4,float,Q>	file:
unpackDouble2x32	./glm/detail/func_packing.inl	/^	GLM_FUNC_QUALIFIER uvec2 unpackDouble2x32(double v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER uvec2
unpackF2x11_1x10	./glm/gtc/packing.inl	/^	GLM_FUNC_QUALIFIER vec3 unpackF2x11_1x10(uint32 v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec3
unpackF3x9_E1x5	./glm/gtc/packing.inl	/^	GLM_FUNC_QUALIFIER vec3 unpackF3x9_E1x5(uint32 v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec3
unpackHalf	./glm/gtc/packing.inl	/^	GLM_FUNC_QUALIFIER vec<L, float, Q> unpackHalf(vec<L, uint16, Q> const& v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<L,float,Q>
unpackHalf1x16	./glm/gtc/packing.inl	/^	GLM_FUNC_QUALIFIER float unpackHalf1x16(uint16 v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER float
unpackHalf2x16	./glm/detail/func_packing.inl	/^	GLM_FUNC_QUALIFIER vec2 unpackHalf2x16(uint v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec2
unpackHalf4x16	./glm/gtc/packing.inl	/^	GLM_FUNC_QUALIFIER glm::vec4 unpackHalf4x16(uint64 v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec4
unpackI3x10_1x2	./glm/gtc/packing.inl	/^	GLM_FUNC_QUALIFIER ivec4 unpackI3x10_1x2(uint32 v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER ivec4
unpackInt2x16	./glm/gtc/packing.inl	/^	GLM_FUNC_QUALIFIER i16vec2 unpackInt2x16(int p)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER i16vec2
unpackInt2x32	./glm/gtc/packing.inl	/^	GLM_FUNC_QUALIFIER i32vec2 unpackInt2x32(int64 p)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER i32vec2
unpackInt2x8	./glm/gtc/packing.inl	/^	GLM_FUNC_QUALIFIER i8vec2 unpackInt2x8(int16 p)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER i8vec2
unpackInt4x16	./glm/gtc/packing.inl	/^	GLM_FUNC_QUALIFIER i16vec4 unpackInt4x16(int64 p)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER i16vec4
unpackInt4x8	./glm/gtc/packing.inl	/^	GLM_FUNC_QUALIFIER i8vec4 unpackInt4x8(int32 p)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER i8vec4
unpackRGBM	./glm/gtc/packing.inl	/^	GLM_FUNC_QUALIFIER vec<3, T, Q> unpackRGBM(vec<4, T, Q> const& rgbm)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<3,T,Q>
unpackSnorm	./glm/gtc/packing.inl	/^	GLM_FUNC_QUALIFIER vec<L, floatType, Q> unpackSnorm(vec<L, intType, Q> const& v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<L,floatType,Q>
unpackSnorm1x16	./glm/gtc/packing.inl	/^	GLM_FUNC_QUALIFIER float unpackSnorm1x16(uint16 p)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER float
unpackSnorm1x8	./glm/gtc/packing.inl	/^	GLM_FUNC_QUALIFIER float unpackSnorm1x8(uint8 p)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER float
unpackSnorm2x16	./glm/detail/func_packing.inl	/^	GLM_FUNC_QUALIFIER vec2 unpackSnorm2x16(uint p)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec2
unpackSnorm2x8	./glm/gtc/packing.inl	/^	GLM_FUNC_QUALIFIER vec2 unpackSnorm2x8(uint16 p)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec2
unpackSnorm3x10_1x2	./glm/gtc/packing.inl	/^	GLM_FUNC_QUALIFIER vec4 unpackSnorm3x10_1x2(uint32 v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec4
unpackSnorm4x16	./glm/gtc/packing.inl	/^	GLM_FUNC_QUALIFIER vec4 unpackSnorm4x16(uint64 p)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec4
unpackSnorm4x8	./glm/detail/func_packing.inl	/^	GLM_FUNC_QUALIFIER glm::vec4 unpackSnorm4x8(uint p)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec4
unpackU3x10_1x2	./glm/gtc/packing.inl	/^	GLM_FUNC_QUALIFIER uvec4 unpackU3x10_1x2(uint32 v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER uvec4
unpackUint2x16	./glm/gtc/packing.inl	/^	GLM_FUNC_QUALIFIER u16vec2 unpackUint2x16(uint p)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER u16vec2
unpackUint2x32	./glm/gtc/packing.inl	/^	GLM_FUNC_QUALIFIER u32vec2 unpackUint2x32(uint64 p)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER u32vec2
unpackUint2x8	./glm/gtc/packing.inl	/^	GLM_FUNC_QUALIFIER u8vec2 unpackUint2x8(uint16 p)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER u8vec2
unpackUint4x16	./glm/gtc/packing.inl	/^	GLM_FUNC_QUALIFIER u16vec4 unpackUint4x16(uint64 p)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER u16vec4
unpackUint4x8	./glm/gtc/packing.inl	/^	GLM_FUNC_QUALIFIER u8vec4 unpackUint4x8(uint32 p)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER u8vec4
unpackUnorm	./glm/gtc/packing.inl	/^	GLM_FUNC_QUALIFIER vec<L, floatType, Q> unpackUnorm(vec<L, uintType, Q> const& v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<L,floatType,Q>
unpackUnorm1x16	./glm/gtc/packing.inl	/^	GLM_FUNC_QUALIFIER float unpackUnorm1x16(uint16 p)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER float
unpackUnorm1x5_1x6_1x5	./glm/gtc/packing.inl	/^	GLM_FUNC_QUALIFIER vec3 unpackUnorm1x5_1x6_1x5(uint16 v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec3
unpackUnorm1x8	./glm/gtc/packing.inl	/^	GLM_FUNC_QUALIFIER float unpackUnorm1x8(uint8 p)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER float
unpackUnorm2x16	./glm/detail/func_packing.inl	/^	GLM_FUNC_QUALIFIER vec2 unpackUnorm2x16(uint p)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec2
unpackUnorm2x3_1x2	./glm/gtc/packing.inl	/^	GLM_FUNC_QUALIFIER vec3 unpackUnorm2x3_1x2(uint8 v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec3
unpackUnorm2x4	./glm/gtc/packing.inl	/^	GLM_FUNC_QUALIFIER vec2 unpackUnorm2x4(uint8 v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec2
unpackUnorm2x8	./glm/gtc/packing.inl	/^	GLM_FUNC_QUALIFIER vec2 unpackUnorm2x8(uint16 p)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec2
unpackUnorm3x10_1x2	./glm/gtc/packing.inl	/^	GLM_FUNC_QUALIFIER vec4 unpackUnorm3x10_1x2(uint32 v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec4
unpackUnorm3x5_1x1	./glm/gtc/packing.inl	/^	GLM_FUNC_QUALIFIER vec4 unpackUnorm3x5_1x1(uint16 v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec4
unpackUnorm4x16	./glm/gtc/packing.inl	/^	GLM_FUNC_QUALIFIER vec4 unpackUnorm4x16(uint64 p)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec4
unpackUnorm4x4	./glm/gtc/packing.inl	/^	GLM_FUNC_QUALIFIER vec4 unpackUnorm4x4(uint16 v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec4
unpackUnorm4x8	./glm/detail/func_packing.inl	/^	GLM_FUNC_QUALIFIER vec4 unpackUnorm4x8(uint p)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec4
uround	./glm/ext/scalar_common.inl	/^	GLM_FUNC_QUALIFIER uint uround(genType const& x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER uint
uround	./glm/ext/vector_common.inl	/^	GLM_FUNC_QUALIFIER vec<L, uint, Q> uround(vec<L, T, Q> const& x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<L,uint,Q>
usubBorrow	./glm/detail/func_integer.inl	/^	GLM_FUNC_QUALIFIER uint usubBorrow(uint const& x, uint const& y, uint & Borrow)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER uint
usubBorrow	./glm/detail/func_integer.inl	/^	GLM_FUNC_QUALIFIER vec<L, uint, Q> usubBorrow(vec<L, uint, Q> const& x, vec<L, uint, Q> const& /;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<L,uint,Q>
uvec1	./glm/ext/vector_uint1.hpp	/^	typedef vec<1, unsigned int, defaultp>			uvec1;$/;"	t	namespace:glm	typeref:typename:vec<1,unsigned int,defaultp>
uvec1	./glm/fwd.hpp	/^	typedef vec<1, uint, defaultp>	uvec1;$/;"	t	namespace:glm	typeref:typename:vec<1,uint,defaultp>
uvec2	./glm/ext/vector_uint2.hpp	/^	typedef vec<2, unsigned int, defaultp>		uvec2;$/;"	t	namespace:glm	typeref:typename:vec<2,unsigned int,defaultp>
uvec2	./glm/fwd.hpp	/^	typedef vec<2, uint, defaultp>	uvec2;$/;"	t	namespace:glm	typeref:typename:vec<2,uint,defaultp>
uvec3	./glm/ext/vector_uint3.hpp	/^	typedef vec<3, unsigned int, defaultp>		uvec3;$/;"	t	namespace:glm	typeref:typename:vec<3,unsigned int,defaultp>
uvec3	./glm/fwd.hpp	/^	typedef vec<3, uint, defaultp>	uvec3;$/;"	t	namespace:glm	typeref:typename:vec<3,uint,defaultp>
uvec4	./glm/ext/vector_uint4.hpp	/^	typedef vec<4, unsigned int, defaultp>		uvec4;$/;"	t	namespace:glm	typeref:typename:vec<4,unsigned int,defaultp>
uvec4	./glm/fwd.hpp	/^	typedef vec<4, uint, defaultp>	uvec4;$/;"	t	namespace:glm	typeref:typename:vec<4,uint,defaultp>
value	./glm/detail/qualifier.hpp	/^			static const bool value = true;$/;"	m	struct:glm::detail::is_aligned	typeref:typename:const bool
value	./glm/detail/qualifier.hpp	/^		static const bool value = false;$/;"	m	struct:glm::detail::is_aligned	typeref:typename:const bool
value	./glm/detail/setup.hpp	/^		enum test {value = 0};$/;"	e	enum:glm::detail::is_int::test
value	./glm/detail/setup.hpp	/^		enum test {value = ~0};$/;"	e	enum:glm::detail::is_int::test
value	./glm/detail/type_mat2x2.hpp	/^		col_type value[2];$/;"	m	struct:glm::mat	typeref:typename:col_type[2]
value	./glm/detail/type_mat2x3.hpp	/^		col_type value[2];$/;"	m	struct:glm::mat	typeref:typename:col_type[2]
value	./glm/detail/type_mat2x4.hpp	/^		col_type value[2];$/;"	m	struct:glm::mat	typeref:typename:col_type[2]
value	./glm/detail/type_mat3x2.hpp	/^		col_type value[3];$/;"	m	struct:glm::mat	typeref:typename:col_type[3]
value	./glm/detail/type_mat3x3.hpp	/^		col_type value[3];$/;"	m	struct:glm::mat	typeref:typename:col_type[3]
value	./glm/detail/type_mat3x4.hpp	/^		col_type value[3];$/;"	m	struct:glm::mat	typeref:typename:col_type[3]
value	./glm/detail/type_mat4x2.hpp	/^		col_type value[4];$/;"	m	struct:glm::mat	typeref:typename:col_type[4]
value	./glm/detail/type_mat4x3.hpp	/^		col_type value[4];$/;"	m	struct:glm::mat	typeref:typename:col_type[4]
value	./glm/detail/type_mat4x4.hpp	/^		col_type value[4];$/;"	m	struct:glm::mat	typeref:typename:col_type[4]
value	./glm/ext/scalar_int_sized.hpp	/^		enum test {value = ~0};$/;"	e	enum:glm::detail::is_int::test
value	./glm/ext/scalar_uint_sized.hpp	/^		enum test {value = ~0};$/;"	e	enum:glm::detail::is_int::test
value	./glm/ext/scalar_ulp.inl	/^	double value;$/;"	m	union:__anonb0ce8848020a	typeref:typename:double	file:
value	./glm/ext/scalar_ulp.inl	/^	float value;$/;"	m	union:__anonb0ce8848010a	typeref:typename:float	file:
value	./glm/gtx/io.hpp	/^			CTy value[3];$/;"	m	struct:glm::io::delimeter	typeref:typename:CTy[3]
value	./glm/gtx/io.hpp	/^			order_type value;$/;"	m	struct:glm::io::order	typeref:typename:order_type
value	./glm/gtx/io.hpp	/^			unsigned value;$/;"	m	struct:glm::io::precision	typeref:typename:unsigned
value	./glm/gtx/io.hpp	/^			unsigned value;$/;"	m	struct:glm::io::width	typeref:typename:unsigned
value	./glm/gtx/string_cast.inl	/^		GLM_FUNC_QUALIFIER static char const * value() {return "";}$/;"	f	struct:glm::detail::prefix	typeref:typename:GLM_FUNC_QUALIFIER char const *	file:
value	./glm/gtx/string_cast.inl	/^		GLM_FUNC_QUALIFIER static char const * value() {return "%d";}$/;"	f	struct:glm::detail::literal	typeref:typename:GLM_FUNC_QUALIFIER char const *	file:
value	./glm/gtx/string_cast.inl	/^		GLM_FUNC_QUALIFIER static char const * value() {return "%f";}$/;"	f	struct:glm::detail::literal	typeref:typename:GLM_FUNC_QUALIFIER char const *	file:
value	./glm/gtx/string_cast.inl	/^		GLM_FUNC_QUALIFIER static char const * value() {return "%lld";}$/;"	f	struct:glm::detail::literal	typeref:typename:GLM_FUNC_QUALIFIER char const *	file:
value	./glm/gtx/string_cast.inl	/^		GLM_FUNC_QUALIFIER static char const * value() {return "b";}$/;"	f	struct:glm::detail::prefix	typeref:typename:GLM_FUNC_QUALIFIER char const *	file:
value	./glm/gtx/string_cast.inl	/^		GLM_FUNC_QUALIFIER static char const * value() {return "d";}$/;"	f	struct:glm::detail::prefix	typeref:typename:GLM_FUNC_QUALIFIER char const *	file:
value	./glm/gtx/string_cast.inl	/^		GLM_FUNC_QUALIFIER static char const * value() {return "i";}$/;"	f	struct:glm::detail::prefix	typeref:typename:GLM_FUNC_QUALIFIER char const *	file:
value	./glm/gtx/string_cast.inl	/^		GLM_FUNC_QUALIFIER static char const * value() {return "i16";}$/;"	f	struct:glm::detail::prefix	typeref:typename:GLM_FUNC_QUALIFIER char const *	file:
value	./glm/gtx/string_cast.inl	/^		GLM_FUNC_QUALIFIER static char const * value() {return "i64";}$/;"	f	struct:glm::detail::prefix	typeref:typename:GLM_FUNC_QUALIFIER char const *	file:
value	./glm/gtx/string_cast.inl	/^		GLM_FUNC_QUALIFIER static char const * value() {return "i8";}$/;"	f	struct:glm::detail::prefix	typeref:typename:GLM_FUNC_QUALIFIER char const *	file:
value	./glm/gtx/string_cast.inl	/^		GLM_FUNC_QUALIFIER static char const * value() {return "u";}$/;"	f	struct:glm::detail::prefix	typeref:typename:GLM_FUNC_QUALIFIER char const *	file:
value	./glm/gtx/string_cast.inl	/^		GLM_FUNC_QUALIFIER static char const * value() {return "u16";}$/;"	f	struct:glm::detail::prefix	typeref:typename:GLM_FUNC_QUALIFIER char const *	file:
value	./glm/gtx/string_cast.inl	/^		GLM_FUNC_QUALIFIER static char const * value() {return "u64";}$/;"	f	struct:glm::detail::prefix	typeref:typename:GLM_FUNC_QUALIFIER char const *	file:
value	./glm/gtx/string_cast.inl	/^		GLM_FUNC_QUALIFIER static char const * value() {return "u8";}$/;"	f	struct:glm::detail::prefix	typeref:typename:GLM_FUNC_QUALIFIER char const *	file:
value_ptr	./glm/gtc/type_ptr.inl	/^	GLM_FUNC_QUALIFIER T * value_ptr(mat<4, 3, T, Q>& m)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER T *
value_ptr	./glm/gtc/type_ptr.inl	/^	GLM_FUNC_QUALIFIER T const * value_ptr(qua<T, Q> const& q)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER T const *
value_ptr	./glm/gtc/type_ptr.inl	/^	GLM_FUNC_QUALIFIER T const * value_ptr(vec<3, T, Q> const& v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER T const *
value_ptr	./glm/gtc/type_ptr.inl	/^	GLM_FUNC_QUALIFIER T const* value_ptr(mat<2, 2, T, Q> const& m)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER T const *
value_ptr	./glm/gtc/type_ptr.inl	/^	GLM_FUNC_QUALIFIER T const* value_ptr(mat<2, 3, T, Q> const& m)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER T const *
value_ptr	./glm/gtc/type_ptr.inl	/^	GLM_FUNC_QUALIFIER T const* value_ptr(mat<2, 4, T, Q> const& m)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER T const *
value_ptr	./glm/gtc/type_ptr.inl	/^	GLM_FUNC_QUALIFIER T const* value_ptr(mat<3, 2, T, Q> const& m)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER T const *
value_ptr	./glm/gtc/type_ptr.inl	/^	GLM_FUNC_QUALIFIER T const* value_ptr(mat<3, 3, T, Q> const& m)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER T const *
value_ptr	./glm/gtc/type_ptr.inl	/^	GLM_FUNC_QUALIFIER T const* value_ptr(mat<3, 4, T, Q> const& m)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER T const *
value_ptr	./glm/gtc/type_ptr.inl	/^	GLM_FUNC_QUALIFIER T const* value_ptr(mat<4, 2, T, Q> const& m)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER T const *
value_ptr	./glm/gtc/type_ptr.inl	/^	GLM_FUNC_QUALIFIER T const* value_ptr(mat<4, 3, T, Q> const& m)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER T const *
value_ptr	./glm/gtc/type_ptr.inl	/^	GLM_FUNC_QUALIFIER T const* value_ptr(mat<4, 4, T, Q> const& m)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER T const *
value_ptr	./glm/gtc/type_ptr.inl	/^	GLM_FUNC_QUALIFIER T const* value_ptr(vec<2, T, Q> const& v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER T const *
value_ptr	./glm/gtc/type_ptr.inl	/^	GLM_FUNC_QUALIFIER T const* value_ptr(vec<4, T, Q> const& v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER T const *
value_ptr	./glm/gtc/type_ptr.inl	/^	GLM_FUNC_QUALIFIER T* value_ptr(mat<2, 2, T, Q>& m)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER T *
value_ptr	./glm/gtc/type_ptr.inl	/^	GLM_FUNC_QUALIFIER T* value_ptr(mat<2, 3, T, Q>& m)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER T *
value_ptr	./glm/gtc/type_ptr.inl	/^	GLM_FUNC_QUALIFIER T* value_ptr(mat<2, 4, T, Q>& m)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER T *
value_ptr	./glm/gtc/type_ptr.inl	/^	GLM_FUNC_QUALIFIER T* value_ptr(mat<3, 2, T, Q>& m)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER T *
value_ptr	./glm/gtc/type_ptr.inl	/^	GLM_FUNC_QUALIFIER T* value_ptr(mat<3, 3, T, Q>& m)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER T *
value_ptr	./glm/gtc/type_ptr.inl	/^	GLM_FUNC_QUALIFIER T* value_ptr(mat<3, 4, T, Q>& m)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER T *
value_ptr	./glm/gtc/type_ptr.inl	/^	GLM_FUNC_QUALIFIER T* value_ptr(mat<4, 2, T, Q>& m)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER T *
value_ptr	./glm/gtc/type_ptr.inl	/^	GLM_FUNC_QUALIFIER T* value_ptr(mat<4, 4, T, Q>& m)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER T *
value_ptr	./glm/gtc/type_ptr.inl	/^	GLM_FUNC_QUALIFIER T* value_ptr(qua<T, Q>& q)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER T *
value_ptr	./glm/gtc/type_ptr.inl	/^	GLM_FUNC_QUALIFIER T* value_ptr(vec<2, T, Q>& v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER T *
value_ptr	./glm/gtc/type_ptr.inl	/^	GLM_FUNC_QUALIFIER T* value_ptr(vec<3, T, Q>& v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER T *
value_ptr	./glm/gtc/type_ptr.inl	/^	GLM_FUNC_QUALIFIER T* value_ptr(vec<4, T, Q>& v)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER T *
value_type	./glm/detail/type_mat2x2.hpp	/^		typedef T value_type;$/;"	t	struct:glm::mat	typeref:typename:T
value_type	./glm/detail/type_mat2x3.hpp	/^		typedef T value_type;$/;"	t	struct:glm::mat	typeref:typename:T
value_type	./glm/detail/type_mat2x4.hpp	/^		typedef T value_type;$/;"	t	struct:glm::mat	typeref:typename:T
value_type	./glm/detail/type_mat3x2.hpp	/^		typedef T value_type;$/;"	t	struct:glm::mat	typeref:typename:T
value_type	./glm/detail/type_mat3x3.hpp	/^		typedef T value_type;$/;"	t	struct:glm::mat	typeref:typename:T
value_type	./glm/detail/type_mat3x4.hpp	/^		typedef T value_type;$/;"	t	struct:glm::mat	typeref:typename:T
value_type	./glm/detail/type_mat4x2.hpp	/^		typedef T value_type;$/;"	t	struct:glm::mat	typeref:typename:T
value_type	./glm/detail/type_mat4x3.hpp	/^		typedef T value_type;$/;"	t	struct:glm::mat	typeref:typename:T
value_type	./glm/detail/type_mat4x4.hpp	/^		typedef T value_type;$/;"	t	struct:glm::mat	typeref:typename:T
value_type	./glm/detail/type_quat.hpp	/^		typedef T value_type;$/;"	t	struct:glm::qua	typeref:typename:T
value_type	./glm/detail/type_vec1.hpp	/^		typedef T value_type;$/;"	t	struct:glm::vec	typeref:typename:T
value_type	./glm/detail/type_vec2.hpp	/^		typedef T value_type;$/;"	t	struct:glm::vec	typeref:typename:T
value_type	./glm/detail/type_vec3.hpp	/^		typedef T value_type;$/;"	t	struct:glm::vec	typeref:typename:T
value_type	./glm/detail/type_vec4.hpp	/^		typedef T value_type;$/;"	t	struct:glm::vec	typeref:typename:T
value_type	./glm/gtx/dual_quaternion.hpp	/^		typedef T value_type;$/;"	t	struct:glm::tdualquat	typeref:typename:T
value_type	./glm/gtx/string_cast.inl	/^		typedef T value_type;$/;"	t	struct:glm::detail::cast	typeref:typename:T	file:
value_type	./glm/gtx/string_cast.inl	/^		typedef double value_type;$/;"	t	struct:glm::detail::cast	typeref:typename:double	file:
vec	./glm/detail/glm.cpp	/^template struct vec<1, float32, highp>;$/;"	v	namespace:glm	typeref:meta:struct
vec	./glm/detail/glm.cpp	/^template struct vec<1, float32, lowp>;$/;"	v	namespace:glm	typeref:meta:struct
vec	./glm/detail/glm.cpp	/^template struct vec<1, float32, mediump>;$/;"	v	namespace:glm	typeref:meta:struct
vec	./glm/detail/glm.cpp	/^template struct vec<1, float64, highp>;$/;"	v	namespace:glm	typeref:meta:struct
vec	./glm/detail/glm.cpp	/^template struct vec<1, float64, lowp>;$/;"	v	namespace:glm	typeref:meta:struct
vec	./glm/detail/glm.cpp	/^template struct vec<1, float64, mediump>;$/;"	v	namespace:glm	typeref:meta:struct
vec	./glm/detail/glm.cpp	/^template struct vec<1, int16, highp>;$/;"	v	namespace:glm	typeref:meta:struct
vec	./glm/detail/glm.cpp	/^template struct vec<1, int16, lowp>;$/;"	v	namespace:glm	typeref:meta:struct
vec	./glm/detail/glm.cpp	/^template struct vec<1, int16, mediump>;$/;"	v	namespace:glm	typeref:meta:struct
vec	./glm/detail/glm.cpp	/^template struct vec<1, int32, highp>;$/;"	v	namespace:glm	typeref:meta:struct
vec	./glm/detail/glm.cpp	/^template struct vec<1, int32, lowp>;$/;"	v	namespace:glm	typeref:meta:struct
vec	./glm/detail/glm.cpp	/^template struct vec<1, int32, mediump>;$/;"	v	namespace:glm	typeref:meta:struct
vec	./glm/detail/glm.cpp	/^template struct vec<1, int64, highp>;$/;"	v	namespace:glm	typeref:meta:struct
vec	./glm/detail/glm.cpp	/^template struct vec<1, int64, lowp>;$/;"	v	namespace:glm	typeref:meta:struct
vec	./glm/detail/glm.cpp	/^template struct vec<1, int64, mediump>;$/;"	v	namespace:glm	typeref:meta:struct
vec	./glm/detail/glm.cpp	/^template struct vec<1, int8, highp>;$/;"	v	namespace:glm	typeref:meta:struct
vec	./glm/detail/glm.cpp	/^template struct vec<1, int8, lowp>;$/;"	v	namespace:glm	typeref:meta:struct
vec	./glm/detail/glm.cpp	/^template struct vec<1, int8, mediump>;$/;"	v	namespace:glm	typeref:meta:struct
vec	./glm/detail/glm.cpp	/^template struct vec<1, uint16, highp>;$/;"	v	namespace:glm	typeref:meta:struct
vec	./glm/detail/glm.cpp	/^template struct vec<1, uint16, lowp>;$/;"	v	namespace:glm	typeref:meta:struct
vec	./glm/detail/glm.cpp	/^template struct vec<1, uint16, mediump>;$/;"	v	namespace:glm	typeref:meta:struct
vec	./glm/detail/glm.cpp	/^template struct vec<1, uint32, highp>;$/;"	v	namespace:glm	typeref:meta:struct
vec	./glm/detail/glm.cpp	/^template struct vec<1, uint32, lowp>;$/;"	v	namespace:glm	typeref:meta:struct
vec	./glm/detail/glm.cpp	/^template struct vec<1, uint32, mediump>;$/;"	v	namespace:glm	typeref:meta:struct
vec	./glm/detail/glm.cpp	/^template struct vec<1, uint64, highp>;$/;"	v	namespace:glm	typeref:meta:struct
vec	./glm/detail/glm.cpp	/^template struct vec<1, uint64, lowp>;$/;"	v	namespace:glm	typeref:meta:struct
vec	./glm/detail/glm.cpp	/^template struct vec<1, uint64, mediump>;$/;"	v	namespace:glm	typeref:meta:struct
vec	./glm/detail/glm.cpp	/^template struct vec<1, uint8, highp>;$/;"	v	namespace:glm	typeref:meta:struct
vec	./glm/detail/glm.cpp	/^template struct vec<1, uint8, lowp>;$/;"	v	namespace:glm	typeref:meta:struct
vec	./glm/detail/glm.cpp	/^template struct vec<1, uint8, mediump>;$/;"	v	namespace:glm	typeref:meta:struct
vec	./glm/detail/glm.cpp	/^template struct vec<2, float32, highp>;$/;"	v	namespace:glm	typeref:meta:struct
vec	./glm/detail/glm.cpp	/^template struct vec<2, float32, lowp>;$/;"	v	namespace:glm	typeref:meta:struct
vec	./glm/detail/glm.cpp	/^template struct vec<2, float32, mediump>;$/;"	v	namespace:glm	typeref:meta:struct
vec	./glm/detail/glm.cpp	/^template struct vec<2, float64, highp>;$/;"	v	namespace:glm	typeref:meta:struct
vec	./glm/detail/glm.cpp	/^template struct vec<2, float64, lowp>;$/;"	v	namespace:glm	typeref:meta:struct
vec	./glm/detail/glm.cpp	/^template struct vec<2, float64, mediump>;$/;"	v	namespace:glm	typeref:meta:struct
vec	./glm/detail/glm.cpp	/^template struct vec<2, int16, highp>;$/;"	v	namespace:glm	typeref:meta:struct
vec	./glm/detail/glm.cpp	/^template struct vec<2, int16, lowp>;$/;"	v	namespace:glm	typeref:meta:struct
vec	./glm/detail/glm.cpp	/^template struct vec<2, int16, mediump>;$/;"	v	namespace:glm	typeref:meta:struct
vec	./glm/detail/glm.cpp	/^template struct vec<2, int32, highp>;$/;"	v	namespace:glm	typeref:meta:struct
vec	./glm/detail/glm.cpp	/^template struct vec<2, int32, lowp>;$/;"	v	namespace:glm	typeref:meta:struct
vec	./glm/detail/glm.cpp	/^template struct vec<2, int32, mediump>;$/;"	v	namespace:glm	typeref:meta:struct
vec	./glm/detail/glm.cpp	/^template struct vec<2, int64, highp>;$/;"	v	namespace:glm	typeref:meta:struct
vec	./glm/detail/glm.cpp	/^template struct vec<2, int64, lowp>;$/;"	v	namespace:glm	typeref:meta:struct
vec	./glm/detail/glm.cpp	/^template struct vec<2, int64, mediump>;$/;"	v	namespace:glm	typeref:meta:struct
vec	./glm/detail/glm.cpp	/^template struct vec<2, int8, highp>;$/;"	v	namespace:glm	typeref:meta:struct
vec	./glm/detail/glm.cpp	/^template struct vec<2, int8, lowp>;$/;"	v	namespace:glm	typeref:meta:struct
vec	./glm/detail/glm.cpp	/^template struct vec<2, int8, mediump>;$/;"	v	namespace:glm	typeref:meta:struct
vec	./glm/detail/glm.cpp	/^template struct vec<2, uint16, highp>;$/;"	v	namespace:glm	typeref:meta:struct
vec	./glm/detail/glm.cpp	/^template struct vec<2, uint16, lowp>;$/;"	v	namespace:glm	typeref:meta:struct
vec	./glm/detail/glm.cpp	/^template struct vec<2, uint16, mediump>;$/;"	v	namespace:glm	typeref:meta:struct
vec	./glm/detail/glm.cpp	/^template struct vec<2, uint32, highp>;$/;"	v	namespace:glm	typeref:meta:struct
vec	./glm/detail/glm.cpp	/^template struct vec<2, uint32, lowp>;$/;"	v	namespace:glm	typeref:meta:struct
vec	./glm/detail/glm.cpp	/^template struct vec<2, uint32, mediump>;$/;"	v	namespace:glm	typeref:meta:struct
vec	./glm/detail/glm.cpp	/^template struct vec<2, uint64, highp>;$/;"	v	namespace:glm	typeref:meta:struct
vec	./glm/detail/glm.cpp	/^template struct vec<2, uint64, lowp>;$/;"	v	namespace:glm	typeref:meta:struct
vec	./glm/detail/glm.cpp	/^template struct vec<2, uint64, mediump>;$/;"	v	namespace:glm	typeref:meta:struct
vec	./glm/detail/glm.cpp	/^template struct vec<2, uint8, highp>;$/;"	v	namespace:glm	typeref:meta:struct
vec	./glm/detail/glm.cpp	/^template struct vec<2, uint8, lowp>;$/;"	v	namespace:glm	typeref:meta:struct
vec	./glm/detail/glm.cpp	/^template struct vec<2, uint8, mediump>;$/;"	v	namespace:glm	typeref:meta:struct
vec	./glm/detail/glm.cpp	/^template struct vec<3, float32, highp>;$/;"	v	namespace:glm	typeref:meta:struct
vec	./glm/detail/glm.cpp	/^template struct vec<3, float32, lowp>;$/;"	v	namespace:glm	typeref:meta:struct
vec	./glm/detail/glm.cpp	/^template struct vec<3, float32, mediump>;$/;"	v	namespace:glm	typeref:meta:struct
vec	./glm/detail/glm.cpp	/^template struct vec<3, float64, highp>;$/;"	v	namespace:glm	typeref:meta:struct
vec	./glm/detail/glm.cpp	/^template struct vec<3, float64, lowp>;$/;"	v	namespace:glm	typeref:meta:struct
vec	./glm/detail/glm.cpp	/^template struct vec<3, float64, mediump>;$/;"	v	namespace:glm	typeref:meta:struct
vec	./glm/detail/glm.cpp	/^template struct vec<3, int16, highp>;$/;"	v	namespace:glm	typeref:meta:struct
vec	./glm/detail/glm.cpp	/^template struct vec<3, int16, lowp>;$/;"	v	namespace:glm	typeref:meta:struct
vec	./glm/detail/glm.cpp	/^template struct vec<3, int16, mediump>;$/;"	v	namespace:glm	typeref:meta:struct
vec	./glm/detail/glm.cpp	/^template struct vec<3, int32, highp>;$/;"	v	namespace:glm	typeref:meta:struct
vec	./glm/detail/glm.cpp	/^template struct vec<3, int32, lowp>;$/;"	v	namespace:glm	typeref:meta:struct
vec	./glm/detail/glm.cpp	/^template struct vec<3, int32, mediump>;$/;"	v	namespace:glm	typeref:meta:struct
vec	./glm/detail/glm.cpp	/^template struct vec<3, int64, highp>;$/;"	v	namespace:glm	typeref:meta:struct
vec	./glm/detail/glm.cpp	/^template struct vec<3, int64, lowp>;$/;"	v	namespace:glm	typeref:meta:struct
vec	./glm/detail/glm.cpp	/^template struct vec<3, int64, mediump>;$/;"	v	namespace:glm	typeref:meta:struct
vec	./glm/detail/glm.cpp	/^template struct vec<3, int8, highp>;$/;"	v	namespace:glm	typeref:meta:struct
vec	./glm/detail/glm.cpp	/^template struct vec<3, int8, lowp>;$/;"	v	namespace:glm	typeref:meta:struct
vec	./glm/detail/glm.cpp	/^template struct vec<3, int8, mediump>;$/;"	v	namespace:glm	typeref:meta:struct
vec	./glm/detail/glm.cpp	/^template struct vec<3, uint16, highp>;$/;"	v	namespace:glm	typeref:meta:struct
vec	./glm/detail/glm.cpp	/^template struct vec<3, uint16, lowp>;$/;"	v	namespace:glm	typeref:meta:struct
vec	./glm/detail/glm.cpp	/^template struct vec<3, uint16, mediump>;$/;"	v	namespace:glm	typeref:meta:struct
vec	./glm/detail/glm.cpp	/^template struct vec<3, uint32, highp>;$/;"	v	namespace:glm	typeref:meta:struct
vec	./glm/detail/glm.cpp	/^template struct vec<3, uint32, lowp>;$/;"	v	namespace:glm	typeref:meta:struct
vec	./glm/detail/glm.cpp	/^template struct vec<3, uint32, mediump>;$/;"	v	namespace:glm	typeref:meta:struct
vec	./glm/detail/glm.cpp	/^template struct vec<3, uint64, highp>;$/;"	v	namespace:glm	typeref:meta:struct
vec	./glm/detail/glm.cpp	/^template struct vec<3, uint64, lowp>;$/;"	v	namespace:glm	typeref:meta:struct
vec	./glm/detail/glm.cpp	/^template struct vec<3, uint64, mediump>;$/;"	v	namespace:glm	typeref:meta:struct
vec	./glm/detail/glm.cpp	/^template struct vec<3, uint8, highp>;$/;"	v	namespace:glm	typeref:meta:struct
vec	./glm/detail/glm.cpp	/^template struct vec<3, uint8, lowp>;$/;"	v	namespace:glm	typeref:meta:struct
vec	./glm/detail/glm.cpp	/^template struct vec<3, uint8, mediump>;$/;"	v	namespace:glm	typeref:meta:struct
vec	./glm/detail/glm.cpp	/^template struct vec<4, float32, highp>;$/;"	v	namespace:glm	typeref:meta:struct
vec	./glm/detail/glm.cpp	/^template struct vec<4, float32, lowp>;$/;"	v	namespace:glm	typeref:meta:struct
vec	./glm/detail/glm.cpp	/^template struct vec<4, float32, mediump>;$/;"	v	namespace:glm	typeref:meta:struct
vec	./glm/detail/glm.cpp	/^template struct vec<4, float64, highp>;$/;"	v	namespace:glm	typeref:meta:struct
vec	./glm/detail/glm.cpp	/^template struct vec<4, float64, lowp>;$/;"	v	namespace:glm	typeref:meta:struct
vec	./glm/detail/glm.cpp	/^template struct vec<4, float64, mediump>;$/;"	v	namespace:glm	typeref:meta:struct
vec	./glm/detail/glm.cpp	/^template struct vec<4, int16, highp>;$/;"	v	namespace:glm	typeref:meta:struct
vec	./glm/detail/glm.cpp	/^template struct vec<4, int16, lowp>;$/;"	v	namespace:glm	typeref:meta:struct
vec	./glm/detail/glm.cpp	/^template struct vec<4, int16, mediump>;$/;"	v	namespace:glm	typeref:meta:struct
vec	./glm/detail/glm.cpp	/^template struct vec<4, int32, highp>;$/;"	v	namespace:glm	typeref:meta:struct
vec	./glm/detail/glm.cpp	/^template struct vec<4, int32, lowp>;$/;"	v	namespace:glm	typeref:meta:struct
vec	./glm/detail/glm.cpp	/^template struct vec<4, int32, mediump>;$/;"	v	namespace:glm	typeref:meta:struct
vec	./glm/detail/glm.cpp	/^template struct vec<4, int64, highp>;$/;"	v	namespace:glm	typeref:meta:struct
vec	./glm/detail/glm.cpp	/^template struct vec<4, int64, lowp>;$/;"	v	namespace:glm	typeref:meta:struct
vec	./glm/detail/glm.cpp	/^template struct vec<4, int64, mediump>;$/;"	v	namespace:glm	typeref:meta:struct
vec	./glm/detail/glm.cpp	/^template struct vec<4, int8, highp>;$/;"	v	namespace:glm	typeref:meta:struct
vec	./glm/detail/glm.cpp	/^template struct vec<4, int8, lowp>;$/;"	v	namespace:glm	typeref:meta:struct
vec	./glm/detail/glm.cpp	/^template struct vec<4, int8, mediump>;$/;"	v	namespace:glm	typeref:meta:struct
vec	./glm/detail/glm.cpp	/^template struct vec<4, uint16, highp>;$/;"	v	namespace:glm	typeref:meta:struct
vec	./glm/detail/glm.cpp	/^template struct vec<4, uint16, lowp>;$/;"	v	namespace:glm	typeref:meta:struct
vec	./glm/detail/glm.cpp	/^template struct vec<4, uint16, mediump>;$/;"	v	namespace:glm	typeref:meta:struct
vec	./glm/detail/glm.cpp	/^template struct vec<4, uint32, highp>;$/;"	v	namespace:glm	typeref:meta:struct
vec	./glm/detail/glm.cpp	/^template struct vec<4, uint32, lowp>;$/;"	v	namespace:glm	typeref:meta:struct
vec	./glm/detail/glm.cpp	/^template struct vec<4, uint32, mediump>;$/;"	v	namespace:glm	typeref:meta:struct
vec	./glm/detail/glm.cpp	/^template struct vec<4, uint64, highp>;$/;"	v	namespace:glm	typeref:meta:struct
vec	./glm/detail/glm.cpp	/^template struct vec<4, uint64, lowp>;$/;"	v	namespace:glm	typeref:meta:struct
vec	./glm/detail/glm.cpp	/^template struct vec<4, uint64, mediump>;$/;"	v	namespace:glm	typeref:meta:struct
vec	./glm/detail/glm.cpp	/^template struct vec<4, uint8, highp>;$/;"	v	namespace:glm	typeref:meta:struct
vec	./glm/detail/glm.cpp	/^template struct vec<4, uint8, lowp>;$/;"	v	namespace:glm	typeref:meta:struct
vec	./glm/detail/glm.cpp	/^template struct vec<4, uint8, mediump>;$/;"	v	namespace:glm	typeref:meta:struct
vec	./glm/detail/type_vec1.hpp	/^	struct vec<1, T, Q>$/;"	s	namespace:glm
vec	./glm/detail/type_vec1.inl	/^		GLM_DEFAULTED_DEFAULT_CTOR_QUALIFIER GLM_CONSTEXPR vec<1, T, Q>::vec()$/;"	f	class:glm::vec	typeref:typename:GLM_DEFAULTED_DEFAULT_CTOR_QUALIFIER GLM_CONSTEXPR
vec	./glm/detail/type_vec1.inl	/^		GLM_DEFAULTED_FUNC_QUALIFIER GLM_CONSTEXPR vec<1, T, Q>::vec(vec<1, T, Q> const& v)$/;"	f	class:glm::vec	typeref:typename:GLM_DEFAULTED_FUNC_QUALIFIER GLM_CONSTEXPR
vec	./glm/detail/type_vec1.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<1, T, Q>::vec(T scalar)$/;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
vec	./glm/detail/type_vec1.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<1, T, Q>::vec(vec<1, T, P> const& v)$/;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
vec	./glm/detail/type_vec1.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<1, T, Q>::vec(vec<1, U, P> const& v)$/;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
vec	./glm/detail/type_vec1.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<1, T, Q>::vec(vec<2, U, P> const& v)$/;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
vec	./glm/detail/type_vec1.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<1, T, Q>::vec(vec<3, U, P> const& v)$/;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
vec	./glm/detail/type_vec1.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<1, T, Q>::vec(vec<4, U, P> const& v)$/;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
vec	./glm/detail/type_vec2.hpp	/^			GLM_FUNC_DISCARD_DECL vec(detail::_swizzle<2, T, Q, E0, E1,-1,-2> const& that)$/;"	f	struct:glm::vec	typeref:typename:GLM_FUNC_DISCARD_DECL
vec	./glm/detail/type_vec2.hpp	/^	struct vec<2, T, Q>$/;"	s	namespace:glm
vec	./glm/detail/type_vec2.inl	/^		GLM_DEFAULTED_DEFAULT_CTOR_QUALIFIER GLM_CONSTEXPR vec<2, T, Q>::vec()$/;"	f	class:glm::vec	typeref:typename:GLM_DEFAULTED_DEFAULT_CTOR_QUALIFIER GLM_CONSTEXPR
vec	./glm/detail/type_vec2.inl	/^		GLM_DEFAULTED_FUNC_QUALIFIER GLM_CONSTEXPR vec<2, T, Q>::vec(vec<2, T, Q> const& v)$/;"	f	class:glm::vec	typeref:typename:GLM_DEFAULTED_FUNC_QUALIFIER GLM_CONSTEXPR
vec	./glm/detail/type_vec2.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<2, T, Q>::vec(A _x, B _y)$/;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
vec	./glm/detail/type_vec2.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<2, T, Q>::vec(A _x, vec<1, B, Q> const& _y)$/;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
vec	./glm/detail/type_vec2.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<2, T, Q>::vec(T _x, T _y)$/;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
vec	./glm/detail/type_vec2.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<2, T, Q>::vec(T scalar)$/;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
vec	./glm/detail/type_vec2.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<2, T, Q>::vec(vec<1, A, Q> const& _x, B _y)$/;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
vec	./glm/detail/type_vec2.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<2, T, Q>::vec(vec<1, A, Q> const& _x, vec<1, B, Q> const& /;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
vec	./glm/detail/type_vec2.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<2, T, Q>::vec(vec<1, U, P> const& v)$/;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
vec	./glm/detail/type_vec2.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<2, T, Q>::vec(vec<2, T, P> const& v)$/;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
vec	./glm/detail/type_vec2.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<2, T, Q>::vec(vec<2, U, P> const& v)$/;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
vec	./glm/detail/type_vec2.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<2, T, Q>::vec(vec<3, U, P> const& v)$/;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
vec	./glm/detail/type_vec2.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<2, T, Q>::vec(vec<4, U, P> const& v)$/;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
vec	./glm/detail/type_vec3.hpp	/^			GLM_FUNC_DISCARD_DECL GLM_CONSTEXPR vec(T const& scalar, detail::_swizzle<2, T, Q, E0, E1, -1/;"	f	struct:glm::vec	typeref:typename:GLM_FUNC_DISCARD_DECL GLM_CONSTEXPR
vec	./glm/detail/type_vec3.hpp	/^			GLM_FUNC_DISCARD_DECL GLM_CONSTEXPR vec(detail::_swizzle<2, T, Q, E0, E1, -1, -2> const& v, T/;"	f	struct:glm::vec	typeref:typename:GLM_FUNC_DISCARD_DECL GLM_CONSTEXPR
vec	./glm/detail/type_vec3.hpp	/^			GLM_FUNC_DISCARD_DECL GLM_CONSTEXPR vec(detail::_swizzle<3, T, Q, E0, E1, E2, -1> const& that/;"	f	struct:glm::vec	typeref:typename:GLM_FUNC_DISCARD_DECL GLM_CONSTEXPR
vec	./glm/detail/type_vec3.hpp	/^	struct vec<3, T, Q>$/;"	s	namespace:glm
vec	./glm/detail/type_vec3.inl	/^		GLM_DEFAULTED_DEFAULT_CTOR_QUALIFIER GLM_CONSTEXPR vec<3, T, Q>::vec()$/;"	f	class:glm::vec	typeref:typename:GLM_DEFAULTED_DEFAULT_CTOR_QUALIFIER GLM_CONSTEXPR
vec	./glm/detail/type_vec3.inl	/^		GLM_DEFAULTED_FUNC_QUALIFIER GLM_CONSTEXPR vec<3, T, Q>::vec(vec<3, T, Q> const& v)$/;"	f	class:glm::vec	typeref:typename:GLM_DEFAULTED_FUNC_QUALIFIER GLM_CONSTEXPR
vec	./glm/detail/type_vec3.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<3, T, Q>::vec(A _x, vec<2, B, P> const& _yz)$/;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
vec	./glm/detail/type_vec3.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<3, T, Q>::vec(T _x, T _y, T _z)$/;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
vec	./glm/detail/type_vec3.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<3, T, Q>::vec(T scalar)$/;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
vec	./glm/detail/type_vec3.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<3, T, Q>::vec(X _x, Y _y, Z _z)$/;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
vec	./glm/detail/type_vec3.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<3, T, Q>::vec(X _x, Y _y, vec<1, Z, Q> const& _z)$/;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
vec	./glm/detail/type_vec3.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<3, T, Q>::vec(X _x, vec<1, Y, Q> const& _y, Z _z)$/;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
vec	./glm/detail/type_vec3.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<3, T, Q>::vec(X _x, vec<1, Y, Q> const& _y, vec<1, Z, Q> c/;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
vec	./glm/detail/type_vec3.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<3, T, Q>::vec(vec<1, A, P> const& _x, vec<2, B, P> const& /;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
vec	./glm/detail/type_vec3.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<3, T, Q>::vec(vec<1, U, P> const& v)$/;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
vec	./glm/detail/type_vec3.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<3, T, Q>::vec(vec<1, X, Q> const& _x, Y _y, Z _z)$/;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
vec	./glm/detail/type_vec3.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<3, T, Q>::vec(vec<1, X, Q> const& _x, Y _y, vec<1, Z, Q> c/;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
vec	./glm/detail/type_vec3.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<3, T, Q>::vec(vec<1, X, Q> const& _x, vec<1, Y, Q> const& /;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
vec	./glm/detail/type_vec3.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<3, T, Q>::vec(vec<2, A, P> const& _xy, B _z)$/;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
vec	./glm/detail/type_vec3.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<3, T, Q>::vec(vec<2, A, P> const& _xy, vec<1, B, P> const&/;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
vec	./glm/detail/type_vec3.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<3, T, Q>::vec(vec<3, T, P> const& v)$/;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
vec	./glm/detail/type_vec3.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<3, T, Q>::vec(vec<3, U, P> const& v)$/;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
vec	./glm/detail/type_vec3.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<3, T, Q>::vec(vec<4, U, P> const& v)$/;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
vec	./glm/detail/type_vec4.hpp	/^			GLM_FUNC_DISCARD_DECL vec(T const& x, T const& y, detail::_swizzle<2, T, Q, E0, E1, -1, -2> c/;"	f	struct:glm::vec	typeref:typename:GLM_FUNC_DISCARD_DECL
vec	./glm/detail/type_vec4.hpp	/^			GLM_FUNC_DISCARD_DECL vec(T const& x, detail::_swizzle<2, T, Q, E0, E1, -1, -2> const& v, T c/;"	f	struct:glm::vec	typeref:typename:GLM_FUNC_DISCARD_DECL
vec	./glm/detail/type_vec4.hpp	/^			GLM_FUNC_DISCARD_DECL vec(T const& x, detail::_swizzle<3, T, Q, E0, E1, E2, -1> const& v)$/;"	f	struct:glm::vec	typeref:typename:GLM_FUNC_DISCARD_DECL
vec	./glm/detail/type_vec4.hpp	/^			GLM_FUNC_DISCARD_DECL vec(detail::_swizzle<2, T, Q, E0, E1, -1, -2> const& v, T const& z, T c/;"	f	struct:glm::vec	typeref:typename:GLM_FUNC_DISCARD_DECL
vec	./glm/detail/type_vec4.hpp	/^			GLM_FUNC_DISCARD_DECL vec(detail::_swizzle<2, T, Q, E0, E1, -1, -2> const& v, detail::_swizzl/;"	f	struct:glm::vec	typeref:typename:GLM_FUNC_DISCARD_DECL
vec	./glm/detail/type_vec4.hpp	/^			GLM_FUNC_DISCARD_DECL vec(detail::_swizzle<3, T, Q, E0, E1, E2, -1> const& v, T const& w)$/;"	f	struct:glm::vec	typeref:typename:GLM_FUNC_DISCARD_DECL
vec	./glm/detail/type_vec4.hpp	/^			GLM_FUNC_DISCARD_DECL vec(detail::_swizzle<4, T, Q, E0, E1, E2, E3> const& that)$/;"	f	struct:glm::vec	typeref:typename:GLM_FUNC_DISCARD_DECL
vec	./glm/detail/type_vec4.hpp	/^	struct vec<4, T, Q>$/;"	s	namespace:glm
vec	./glm/detail/type_vec4.inl	/^		GLM_DEFAULTED_DEFAULT_CTOR_QUALIFIER GLM_CONSTEXPR vec<4, T, Q>::vec()$/;"	f	class:glm::vec	typeref:typename:GLM_DEFAULTED_DEFAULT_CTOR_QUALIFIER GLM_CONSTEXPR
vec	./glm/detail/type_vec4.inl	/^		GLM_DEFAULTED_FUNC_QUALIFIER GLM_CONSTEXPR vec<4, T, Q>::vec(vec<4, T, Q> const& v)$/;"	f	class:glm::vec	typeref:typename:GLM_DEFAULTED_FUNC_QUALIFIER GLM_CONSTEXPR
vec	./glm/detail/type_vec4.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4, T, Q>::vec(A _x, B _y, vec<2, C, P> const& _zw)$/;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
vec	./glm/detail/type_vec4.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4, T, Q>::vec(A _x, vec<1, B, P> const& _y, vec<2, C, P> c/;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
vec	./glm/detail/type_vec4.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4, T, Q>::vec(A _x, vec<2, B, P> const& _yz, C _w)$/;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
vec	./glm/detail/type_vec4.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4, T, Q>::vec(A _x, vec<2, B, P> const& _yz, vec<1, C, P> /;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
vec	./glm/detail/type_vec4.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4, T, Q>::vec(A _x, vec<3, B, P> const& _yzw)$/;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
vec	./glm/detail/type_vec4.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4, T, Q>::vec(T _x, T _y, T _z, T _w)$/;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
vec	./glm/detail/type_vec4.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4, T, Q>::vec(T scalar)$/;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
vec	./glm/detail/type_vec4.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4, T, Q>::vec(X _x, Y _y, Z _z, W _w)$/;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
vec	./glm/detail/type_vec4.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4, T, Q>::vec(X _x, Y _y, vec<1, Z, Q> const& _z, W _w)$/;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
vec	./glm/detail/type_vec4.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4, T, Q>::vec(X _x, Y _y, vec<1, Z, Q> const& _z, vec<1, W/;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
vec	./glm/detail/type_vec4.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4, T, Q>::vec(X _x, vec<1, Y, Q> const& _y, Z _z, W _w)$/;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
vec	./glm/detail/type_vec4.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4, T, Q>::vec(X _x, vec<1, Y, Q> const& _y, Z _z, vec<1, W/;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
vec	./glm/detail/type_vec4.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4, T, Q>::vec(X _x, vec<1, Y, Q> const& _y, vec<1, Z, Q> c/;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
vec	./glm/detail/type_vec4.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4, T, Q>::vec(vec<1, A, P> const& _x, B _y, vec<2, C, P> c/;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
vec	./glm/detail/type_vec4.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4, T, Q>::vec(vec<1, A, P> const& _x, vec<1, B, P> const& /;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
vec	./glm/detail/type_vec4.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4, T, Q>::vec(vec<1, A, P> const& _x, vec<2, B, P> const& /;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
vec	./glm/detail/type_vec4.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4, T, Q>::vec(vec<1, A, P> const& _x, vec<3, B, P> const& /;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
vec	./glm/detail/type_vec4.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4, T, Q>::vec(vec<1, U, P> const& v)$/;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
vec	./glm/detail/type_vec4.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4, T, Q>::vec(vec<1, X, Q> const& _x, Y _y, Z _z, W _w)$/;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
vec	./glm/detail/type_vec4.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4, T, Q>::vec(vec<1, X, Q> const& _x, Y _y, Z _z, vec<1, W/;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
vec	./glm/detail/type_vec4.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4, T, Q>::vec(vec<1, X, Q> const& _x, Y _y, vec<1, Z, Q> c/;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
vec	./glm/detail/type_vec4.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4, T, Q>::vec(vec<1, X, Q> const& _x, vec<1, Y, Q> const& /;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
vec	./glm/detail/type_vec4.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4, T, Q>::vec(vec<2, A, P> const& _xy, B _z, C _w)$/;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
vec	./glm/detail/type_vec4.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4, T, Q>::vec(vec<2, A, P> const& _xy, B _z, vec<1, C, P> /;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
vec	./glm/detail/type_vec4.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4, T, Q>::vec(vec<2, A, P> const& _xy, vec<1, B, P> const&/;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
vec	./glm/detail/type_vec4.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4, T, Q>::vec(vec<2, A, P> const& _xy, vec<2, B, P> const&/;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
vec	./glm/detail/type_vec4.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4, T, Q>::vec(vec<3, A, P> const& _xyz, B _w)$/;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
vec	./glm/detail/type_vec4.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4, T, Q>::vec(vec<3, A, P> const& _xyz, vec<1, B, P> const/;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
vec	./glm/detail/type_vec4.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4, T, Q>::vec(vec<4, T, P> const& v)$/;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
vec	./glm/detail/type_vec4.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4, T, Q>::vec(vec<4, U, P> const& v)$/;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
vec	./glm/detail/type_vec4_simd.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4, detail::int64, aligned_highp>::vec(detail::int64 _s) :$/;"	f	class:glm::vec::int64	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
vec	./glm/detail/type_vec4_simd.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4, detail::int64, aligned_lowp>::vec(detail::int64 _s) :$/;"	f	class:glm::vec::int64	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
vec	./glm/detail/type_vec4_simd.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4, detail::int64, aligned_mediump>::vec(detail::int64 _s) /;"	f	class:glm::vec::int64	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
vec	./glm/detail/type_vec4_simd.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4, double, aligned_highp>::vec(double _s) :$/;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
vec	./glm/detail/type_vec4_simd.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4, double, aligned_lowp>::vec(double _s) :$/;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
vec	./glm/detail/type_vec4_simd.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4, double, aligned_mediump>::vec(double _s) :$/;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
vec	./glm/detail/type_vec4_simd.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4, float, aligned_highp>::vec(const vec<4, float, aligned_/;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
vec	./glm/detail/type_vec4_simd.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4, float, aligned_highp>::vec(const vec<4, int, aligned_hi/;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
vec	./glm/detail/type_vec4_simd.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4, float, aligned_highp>::vec(const vec<4, uint, aligned_h/;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
vec	./glm/detail/type_vec4_simd.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4, float, aligned_highp>::vec(float _s) :$/;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
vec	./glm/detail/type_vec4_simd.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4, float, aligned_highp>::vec(float _x, float _y, float _z/;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
vec	./glm/detail/type_vec4_simd.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4, float, aligned_highp>::vec(int _x, int _y, int _z, int /;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
vec	./glm/detail/type_vec4_simd.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4, float, aligned_highp>::vec(uint _x, uint _y, uint _z, u/;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
vec	./glm/detail/type_vec4_simd.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4, float, aligned_lowp>::vec(float _s) :$/;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
vec	./glm/detail/type_vec4_simd.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4, float, aligned_lowp>::vec(float _x, float _y, float _z,/;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
vec	./glm/detail/type_vec4_simd.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4, float, aligned_lowp>::vec(int _x, int _y, int _z, int _/;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
vec	./glm/detail/type_vec4_simd.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4, float, aligned_lowp>::vec(uint _x, uint _y, uint _z, ui/;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
vec	./glm/detail/type_vec4_simd.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4, float, aligned_mediump>::vec(float _s) :$/;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
vec	./glm/detail/type_vec4_simd.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4, float, aligned_mediump>::vec(float _x, float _y, float /;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
vec	./glm/detail/type_vec4_simd.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4, float, aligned_mediump>::vec(int _x, int _y, int _z, in/;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
vec	./glm/detail/type_vec4_simd.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4, float, aligned_mediump>::vec(uint _x, uint _y, uint _z,/;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
vec	./glm/detail/type_vec4_simd.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4, int, aligned_highp>::vec(int _s) :$/;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
vec	./glm/detail/type_vec4_simd.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4, int, aligned_highp>::vec(int _x, int _y, int _z, int _w/;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
vec	./glm/detail/type_vec4_simd.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4, int, aligned_lowp>::vec(int _s) :$/;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
vec	./glm/detail/type_vec4_simd.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4, int, aligned_lowp>::vec(int _x, int _y, int _z, int _w)/;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
vec	./glm/detail/type_vec4_simd.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4, int, aligned_mediump>::vec(int _s) :$/;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
vec	./glm/detail/type_vec4_simd.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4, int, aligned_mediump>::vec(int _x, int _y, int _z, int /;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
vec	./glm/detail/type_vec4_simd.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4, uint, aligned_highp>::vec(uint _s) :$/;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
vec	./glm/detail/type_vec4_simd.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4, uint, aligned_lowp>::vec(uint _s) :$/;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
vec	./glm/detail/type_vec4_simd.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4, uint, aligned_mediump>::vec(uint _s) :$/;"	f	class:glm::vec	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR
vec1	./glm/ext/vector_float1.hpp	/^	typedef vec<1, float, defaultp>		vec1;$/;"	t	namespace:glm	typeref:typename:vec<1,float,defaultp>
vec1	./glm/fwd.hpp	/^	typedef vec<1, float, defaultp>		vec1;$/;"	t	namespace:glm	typeref:typename:vec<1,float,defaultp>
vec2	./glm/ext/vector_float2.hpp	/^	typedef vec<2, float, defaultp>	vec2;$/;"	t	namespace:glm	typeref:typename:vec<2,float,defaultp>
vec2	./glm/fwd.hpp	/^	typedef vec<2, float, defaultp>		vec2;$/;"	t	namespace:glm	typeref:typename:vec<2,float,defaultp>
vec3	./glm/ext/vector_float3.hpp	/^	typedef vec<3, float, defaultp>		vec3;$/;"	t	namespace:glm	typeref:typename:vec<3,float,defaultp>
vec3	./glm/fwd.hpp	/^	typedef vec<3, float, defaultp>		vec3;$/;"	t	namespace:glm	typeref:typename:vec<3,float,defaultp>
vec4	./glm/ext/vector_float4.hpp	/^	typedef vec<4, float, defaultp>		vec4;$/;"	t	namespace:glm	typeref:typename:vec<4,float,defaultp>
vec4	./glm/fwd.hpp	/^	typedef vec<4, float, defaultp>		vec4;$/;"	t	namespace:glm	typeref:typename:vec<4,float,defaultp>
vertShader	main.cpp	/^const char* vertShader = $/;"	v	typeref:typename:const char *
vertexData	main.cpp	/^const GLfloat vertexData[] = {$/;"	v	typeref:typename:const GLfloat[]
volatile	./glm/build/CMakeFiles/3.31.0-rc1/CompilerIdC/CMakeCCompilerId.c	/^# define volatile$/;"	d	file:
w	./glm/detail/type_quat.hpp	/^					struct { T w, x, y, z; };$/;"	m	struct:glm::qua::__anon440bef85010a::__anon440bef850208	typeref:typename:T
w	./glm/detail/type_quat.hpp	/^				T w, x, y, z;$/;"	m	struct:glm::qua	typeref:typename:T
w	./glm/detail/type_quat.hpp	/^				T x, y, z, w;$/;"	m	struct:glm::qua	typeref:typename:T
w	./glm/detail/type_vec4.hpp	/^			T x, y, z, w;$/;"	m	struct:glm::vec	typeref:typename:T
w	./glm/gtc/packing.inl	/^			int w : 2;$/;"	m	struct:glm::detail::i10i10i10i2::Data	typeref:typename:int:2	file:
w	./glm/gtc/packing.inl	/^			uint w : 1;$/;"	m	struct:glm::detail::u5u5u5u1::Data	typeref:typename:uint:1	file:
w	./glm/gtc/packing.inl	/^			uint w : 2;$/;"	m	struct:glm::detail::u10u10u10u2::Data	typeref:typename:uint:2	file:
w	./glm/gtc/packing.inl	/^			uint w : 4;$/;"	m	struct:glm::detail::u4u4u4u4::Data	typeref:typename:uint:4	file:
w	./glm/gtc/packing.inl	/^			uint w : 5;$/;"	m	struct:glm::detail::u9u9u9e5::Data	typeref:typename:uint:5	file:
wchar_t	./GL/glew.h	/^typedef unsigned short wchar_t;$/;"	t	typeref:typename:unsigned short
wformat_saver	./glm/gtx/io.hpp	/^		typedef basic_format_saver<wchar_t> wformat_saver;$/;"	t	namespace:glm::io	typeref:typename:basic_format_saver<wchar_t>
wglAllocateMemoryNV	./GL/wglew.h	/^#define wglAllocateMemoryNV /;"	d
wglAssociateImageBufferEventsI3D	./GL/wglew.h	/^#define wglAssociateImageBufferEventsI3D /;"	d
wglBeginFrameTrackingI3D	./GL/wglew.h	/^#define wglBeginFrameTrackingI3D /;"	d
wglBindDisplayColorTableEXT	./GL/wglew.h	/^#define wglBindDisplayColorTableEXT /;"	d
wglBindSwapBarrierNV	./GL/wglew.h	/^#define wglBindSwapBarrierNV /;"	d
wglBindTexImageARB	./GL/wglew.h	/^#define wglBindTexImageARB /;"	d
wglBindVideoCaptureDeviceNV	./GL/wglew.h	/^#define wglBindVideoCaptureDeviceNV /;"	d
wglBindVideoDeviceNV	./GL/wglew.h	/^#define wglBindVideoDeviceNV /;"	d
wglBindVideoImageNV	./GL/wglew.h	/^#define wglBindVideoImageNV /;"	d
wglBlitContextFramebufferAMD	./GL/wglew.h	/^#define wglBlitContextFramebufferAMD /;"	d
wglChoosePixelFormatARB	./GL/wglew.h	/^#define wglChoosePixelFormatARB /;"	d
wglChoosePixelFormatEXT	./GL/wglew.h	/^#define wglChoosePixelFormatEXT /;"	d
wglCopyImageSubDataNV	./GL/wglew.h	/^#define wglCopyImageSubDataNV /;"	d
wglCreateAffinityDCNV	./GL/wglew.h	/^#define wglCreateAffinityDCNV /;"	d
wglCreateAssociatedContextAMD	./GL/wglew.h	/^#define wglCreateAssociatedContextAMD /;"	d
wglCreateAssociatedContextAttribsAMD	./GL/wglew.h	/^#define wglCreateAssociatedContextAttribsAMD /;"	d
wglCreateBufferRegionARB	./GL/wglew.h	/^#define wglCreateBufferRegionARB /;"	d
wglCreateContextAttribsARB	./GL/wglew.h	/^#define wglCreateContextAttribsARB /;"	d
wglCreateDisplayColorTableEXT	./GL/wglew.h	/^#define wglCreateDisplayColorTableEXT /;"	d
wglCreateImageBufferI3D	./GL/wglew.h	/^#define wglCreateImageBufferI3D /;"	d
wglCreatePbufferARB	./GL/wglew.h	/^#define wglCreatePbufferARB /;"	d
wglCreatePbufferEXT	./GL/wglew.h	/^#define wglCreatePbufferEXT /;"	d
wglDXCloseDeviceNV	./GL/wglew.h	/^#define wglDXCloseDeviceNV /;"	d
wglDXLockObjectsNV	./GL/wglew.h	/^#define wglDXLockObjectsNV /;"	d
wglDXObjectAccessNV	./GL/wglew.h	/^#define wglDXObjectAccessNV /;"	d
wglDXOpenDeviceNV	./GL/wglew.h	/^#define wglDXOpenDeviceNV /;"	d
wglDXRegisterObjectNV	./GL/wglew.h	/^#define wglDXRegisterObjectNV /;"	d
wglDXSetResourceShareHandleNV	./GL/wglew.h	/^#define wglDXSetResourceShareHandleNV /;"	d
wglDXUnlockObjectsNV	./GL/wglew.h	/^#define wglDXUnlockObjectsNV /;"	d
wglDXUnregisterObjectNV	./GL/wglew.h	/^#define wglDXUnregisterObjectNV /;"	d
wglDelayBeforeSwapNV	./GL/wglew.h	/^#define wglDelayBeforeSwapNV /;"	d
wglDeleteAssociatedContextAMD	./GL/wglew.h	/^#define wglDeleteAssociatedContextAMD /;"	d
wglDeleteBufferRegionARB	./GL/wglew.h	/^#define wglDeleteBufferRegionARB /;"	d
wglDeleteDCNV	./GL/wglew.h	/^#define wglDeleteDCNV /;"	d
wglDestroyDisplayColorTableEXT	./GL/wglew.h	/^#define wglDestroyDisplayColorTableEXT /;"	d
wglDestroyImageBufferI3D	./GL/wglew.h	/^#define wglDestroyImageBufferI3D /;"	d
wglDestroyPbufferARB	./GL/wglew.h	/^#define wglDestroyPbufferARB /;"	d
wglDestroyPbufferEXT	./GL/wglew.h	/^#define wglDestroyPbufferEXT /;"	d
wglDisableFrameLockI3D	./GL/wglew.h	/^#define wglDisableFrameLockI3D /;"	d
wglDisableGenlockI3D	./GL/wglew.h	/^#define wglDisableGenlockI3D /;"	d
wglEnableFrameLockI3D	./GL/wglew.h	/^#define wglEnableFrameLockI3D /;"	d
wglEnableGenlockI3D	./GL/wglew.h	/^#define wglEnableGenlockI3D /;"	d
wglEndFrameTrackingI3D	./GL/wglew.h	/^#define wglEndFrameTrackingI3D /;"	d
wglEnumGpuDevicesNV	./GL/wglew.h	/^#define wglEnumGpuDevicesNV /;"	d
wglEnumGpusFromAffinityDCNV	./GL/wglew.h	/^#define wglEnumGpusFromAffinityDCNV /;"	d
wglEnumGpusNV	./GL/wglew.h	/^#define wglEnumGpusNV /;"	d
wglEnumerateVideoCaptureDevicesNV	./GL/wglew.h	/^#define wglEnumerateVideoCaptureDevicesNV /;"	d
wglEnumerateVideoDevicesNV	./GL/wglew.h	/^#define wglEnumerateVideoDevicesNV /;"	d
wglFreeMemoryNV	./GL/wglew.h	/^#define wglFreeMemoryNV /;"	d
wglGenlockSampleRateI3D	./GL/wglew.h	/^#define wglGenlockSampleRateI3D /;"	d
wglGenlockSourceDelayI3D	./GL/wglew.h	/^#define wglGenlockSourceDelayI3D /;"	d
wglGenlockSourceEdgeI3D	./GL/wglew.h	/^#define wglGenlockSourceEdgeI3D /;"	d
wglGenlockSourceI3D	./GL/wglew.h	/^#define wglGenlockSourceI3D /;"	d
wglGetContextGPUIDAMD	./GL/wglew.h	/^#define wglGetContextGPUIDAMD /;"	d
wglGetCurrentAssociatedContextAMD	./GL/wglew.h	/^#define wglGetCurrentAssociatedContextAMD /;"	d
wglGetCurrentReadDCARB	./GL/wglew.h	/^#define wglGetCurrentReadDCARB /;"	d
wglGetCurrentReadDCEXT	./GL/wglew.h	/^#define wglGetCurrentReadDCEXT /;"	d
wglGetDigitalVideoParametersI3D	./GL/wglew.h	/^#define wglGetDigitalVideoParametersI3D /;"	d
wglGetExtensionsStringARB	./GL/wglew.h	/^#define wglGetExtensionsStringARB /;"	d
wglGetExtensionsStringEXT	./GL/wglew.h	/^#define wglGetExtensionsStringEXT /;"	d
wglGetFrameUsageI3D	./GL/wglew.h	/^#define wglGetFrameUsageI3D /;"	d
wglGetGPUIDsAMD	./GL/wglew.h	/^#define wglGetGPUIDsAMD /;"	d
wglGetGPUInfoAMD	./GL/wglew.h	/^#define wglGetGPUInfoAMD /;"	d
wglGetGammaTableI3D	./GL/wglew.h	/^#define wglGetGammaTableI3D /;"	d
wglGetGammaTableParametersI3D	./GL/wglew.h	/^#define wglGetGammaTableParametersI3D /;"	d
wglGetGenlockSampleRateI3D	./GL/wglew.h	/^#define wglGetGenlockSampleRateI3D /;"	d
wglGetGenlockSourceDelayI3D	./GL/wglew.h	/^#define wglGetGenlockSourceDelayI3D /;"	d
wglGetGenlockSourceEdgeI3D	./GL/wglew.h	/^#define wglGetGenlockSourceEdgeI3D /;"	d
wglGetGenlockSourceI3D	./GL/wglew.h	/^#define wglGetGenlockSourceI3D /;"	d
wglGetMscRateOML	./GL/wglew.h	/^#define wglGetMscRateOML /;"	d
wglGetPbufferDCARB	./GL/wglew.h	/^#define wglGetPbufferDCARB /;"	d
wglGetPbufferDCEXT	./GL/wglew.h	/^#define wglGetPbufferDCEXT /;"	d
wglGetPixelFormatAttribfvARB	./GL/wglew.h	/^#define wglGetPixelFormatAttribfvARB /;"	d
wglGetPixelFormatAttribfvEXT	./GL/wglew.h	/^#define wglGetPixelFormatAttribfvEXT /;"	d
wglGetPixelFormatAttribivARB	./GL/wglew.h	/^#define wglGetPixelFormatAttribivARB /;"	d
wglGetPixelFormatAttribivEXT	./GL/wglew.h	/^#define wglGetPixelFormatAttribivEXT /;"	d
wglGetSwapIntervalEXT	./GL/wglew.h	/^#define wglGetSwapIntervalEXT /;"	d
wglGetSyncValuesOML	./GL/wglew.h	/^#define wglGetSyncValuesOML /;"	d
wglGetVideoDeviceNV	./GL/wglew.h	/^#define wglGetVideoDeviceNV /;"	d
wglGetVideoInfoNV	./GL/wglew.h	/^#define wglGetVideoInfoNV /;"	d
wglIsEnabledFrameLockI3D	./GL/wglew.h	/^#define wglIsEnabledFrameLockI3D /;"	d
wglIsEnabledGenlockI3D	./GL/wglew.h	/^#define wglIsEnabledGenlockI3D /;"	d
wglJoinSwapGroupNV	./GL/wglew.h	/^#define wglJoinSwapGroupNV /;"	d
wglLoadDisplayColorTableEXT	./GL/wglew.h	/^#define wglLoadDisplayColorTableEXT /;"	d
wglLockVideoCaptureDeviceNV	./GL/wglew.h	/^#define wglLockVideoCaptureDeviceNV /;"	d
wglMakeAssociatedContextCurrentAMD	./GL/wglew.h	/^#define wglMakeAssociatedContextCurrentAMD /;"	d
wglMakeContextCurrentARB	./GL/wglew.h	/^#define wglMakeContextCurrentARB /;"	d
wglMakeContextCurrentEXT	./GL/wglew.h	/^#define wglMakeContextCurrentEXT /;"	d
wglQueryCurrentContextNV	./GL/wglew.h	/^#define wglQueryCurrentContextNV /;"	d
wglQueryFrameCountNV	./GL/wglew.h	/^#define wglQueryFrameCountNV /;"	d
wglQueryFrameLockMasterI3D	./GL/wglew.h	/^#define wglQueryFrameLockMasterI3D /;"	d
wglQueryFrameTrackingI3D	./GL/wglew.h	/^#define wglQueryFrameTrackingI3D /;"	d
wglQueryGenlockMaxSourceDelayI3D	./GL/wglew.h	/^#define wglQueryGenlockMaxSourceDelayI3D /;"	d
wglQueryMaxSwapGroupsNV	./GL/wglew.h	/^#define wglQueryMaxSwapGroupsNV /;"	d
wglQueryPbufferARB	./GL/wglew.h	/^#define wglQueryPbufferARB /;"	d
wglQueryPbufferEXT	./GL/wglew.h	/^#define wglQueryPbufferEXT /;"	d
wglQuerySwapGroupNV	./GL/wglew.h	/^#define wglQuerySwapGroupNV /;"	d
wglQueryVideoCaptureDeviceNV	./GL/wglew.h	/^#define wglQueryVideoCaptureDeviceNV /;"	d
wglReleaseImageBufferEventsI3D	./GL/wglew.h	/^#define wglReleaseImageBufferEventsI3D /;"	d
wglReleasePbufferDCARB	./GL/wglew.h	/^#define wglReleasePbufferDCARB /;"	d
wglReleasePbufferDCEXT	./GL/wglew.h	/^#define wglReleasePbufferDCEXT /;"	d
wglReleaseTexImageARB	./GL/wglew.h	/^#define wglReleaseTexImageARB /;"	d
wglReleaseVideoCaptureDeviceNV	./GL/wglew.h	/^#define wglReleaseVideoCaptureDeviceNV /;"	d
wglReleaseVideoDeviceNV	./GL/wglew.h	/^#define wglReleaseVideoDeviceNV /;"	d
wglReleaseVideoImageNV	./GL/wglew.h	/^#define wglReleaseVideoImageNV /;"	d
wglResetFrameCountNV	./GL/wglew.h	/^#define wglResetFrameCountNV /;"	d
wglRestoreBufferRegionARB	./GL/wglew.h	/^#define wglRestoreBufferRegionARB /;"	d
wglSaveBufferRegionARB	./GL/wglew.h	/^#define wglSaveBufferRegionARB /;"	d
wglSendPbufferToVideoNV	./GL/wglew.h	/^#define wglSendPbufferToVideoNV /;"	d
wglSetDigitalVideoParametersI3D	./GL/wglew.h	/^#define wglSetDigitalVideoParametersI3D /;"	d
wglSetGammaTableI3D	./GL/wglew.h	/^#define wglSetGammaTableI3D /;"	d
wglSetGammaTableParametersI3D	./GL/wglew.h	/^#define wglSetGammaTableParametersI3D /;"	d
wglSetPbufferAttribARB	./GL/wglew.h	/^#define wglSetPbufferAttribARB /;"	d
wglSetStereoEmitterState3DL	./GL/wglew.h	/^#define wglSetStereoEmitterState3DL /;"	d
wglSwapBuffersMscOML	./GL/wglew.h	/^#define wglSwapBuffersMscOML /;"	d
wglSwapIntervalEXT	./GL/wglew.h	/^#define wglSwapIntervalEXT /;"	d
wglSwapLayerBuffersMscOML	./GL/wglew.h	/^#define wglSwapLayerBuffersMscOML /;"	d
wglWaitForMscOML	./GL/wglew.h	/^#define wglWaitForMscOML /;"	d
wglWaitForSbcOML	./GL/wglew.h	/^#define wglWaitForSbcOML /;"	d
width	./GL/glxew.h	/^  int width, height; $/;"	m	struct:__anonb1a929810108	typeref:typename:int
width	./GL/glxew.h	/^typedef struct { int type; unsigned long serial; Bool send_event; Display *display; GLXDrawable /;"	m	struct:__anonb1a929810608	typeref:typename:int
width	./glm/gtx/io.hpp	/^			unsigned   width;$/;"	m	class:glm::io::format_punct	typeref:typename:unsigned
width	./glm/gtx/io.hpp	/^		struct width$/;"	s	namespace:glm::io
width	./glm/gtx/io.inl	/^	GLM_FUNC_QUALIFIER width::width(unsigned a)$/;"	f	class:glm::io::width	typeref:typename:GLM_FUNC_QUALIFIER
width_	./glm/gtx/io.hpp	/^			streamsize_type width_;$/;"	m	class:glm::io::basic_state_saver	typeref:typename:streamsize_type
word	./glm/ext/scalar_ulp.inl	/^	unsigned int word;$/;"	m	union:__anonb0ce8848010a	typeref:typename:unsigned int	file:
word	./glm/gtx/raw_data.hpp	/^	typedef detail::uint16		word;$/;"	t	namespace:glm	typeref:typename:detail::uint16
wrapAngle	./glm/gtx/fast_trigonometry.inl	/^	GLM_FUNC_QUALIFIER T wrapAngle(T angle)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER T
wrapAngle	./glm/gtx/fast_trigonometry.inl	/^	GLM_FUNC_QUALIFIER vec<L, T, Q> wrapAngle(vec<L, T, Q> const& x)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER vec<L,T,Q>
wstate_saver	./glm/gtx/io.hpp	/^		typedef basic_state_saver<wchar_t> wstate_saver;$/;"	t	namespace:glm::io	typeref:typename:basic_state_saver<wchar_t>
ww	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<2, T, Q> ww(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<2,T,Q>
www	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<3, T, Q> www(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<3,T,Q>
wwww	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<4, T, Q> wwww(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<4,T,Q>
wwwx	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<4, T, Q> wwwx(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<4,T,Q>
wwwy	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<4, T, Q> wwwy(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<4,T,Q>
wwwz	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<4, T, Q> wwwz(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<4,T,Q>
wwx	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<3, T, Q> wwx(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<3,T,Q>
wwxw	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<4, T, Q> wwxw(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<4,T,Q>
wwxx	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<4, T, Q> wwxx(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<4,T,Q>
wwxy	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<4, T, Q> wwxy(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<4,T,Q>
wwxz	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<4, T, Q> wwxz(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<4,T,Q>
wwy	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<3, T, Q> wwy(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<3,T,Q>
wwyw	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<4, T, Q> wwyw(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<4,T,Q>
wwyx	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<4, T, Q> wwyx(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<4,T,Q>
wwyy	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<4, T, Q> wwyy(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<4,T,Q>
wwyz	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<4, T, Q> wwyz(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<4,T,Q>
wwz	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<3, T, Q> wwz(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<3,T,Q>
wwzw	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<4, T, Q> wwzw(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<4,T,Q>
wwzx	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<4, T, Q> wwzx(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<4,T,Q>
wwzy	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<4, T, Q> wwzy(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<4,T,Q>
wwzz	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<4, T, Q> wwzz(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<4,T,Q>
wx	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<2, T, Q> wx(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<2,T,Q>
wxw	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<3, T, Q> wxw(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<3,T,Q>
wxww	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<4, T, Q> wxww(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<4,T,Q>
wxwx	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<4, T, Q> wxwx(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<4,T,Q>
wxwy	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<4, T, Q> wxwy(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<4,T,Q>
wxwz	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<4, T, Q> wxwz(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<4,T,Q>
wxx	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<3, T, Q> wxx(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<3,T,Q>
wxxw	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<4, T, Q> wxxw(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<4,T,Q>
wxxx	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<4, T, Q> wxxx(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<4,T,Q>
wxxy	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<4, T, Q> wxxy(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<4,T,Q>
wxxz	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<4, T, Q> wxxz(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<4,T,Q>
wxy	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<3, T, Q> wxy(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<3,T,Q>
wxyw	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<4, T, Q> wxyw(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<4,T,Q>
wxyx	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<4, T, Q> wxyx(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<4,T,Q>
wxyy	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<4, T, Q> wxyy(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<4,T,Q>
wxyz	./glm/detail/type_quat.inl	/^	GLM_CONSTEXPR qua<T, Q> qua<T, Q>::wxyz(T w, T x, T y, T z) {$/;"	f	class:glm::qua	typeref:typename:GLM_CONSTEXPR qua<T,Q>
wxyz	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<4, T, Q> wxyz(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<4,T,Q>
wxz	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<3, T, Q> wxz(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<3,T,Q>
wxzw	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<4, T, Q> wxzw(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<4,T,Q>
wxzx	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<4, T, Q> wxzx(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<4,T,Q>
wxzy	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<4, T, Q> wxzy(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<4,T,Q>
wxzz	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<4, T, Q> wxzz(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<4,T,Q>
wy	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<2, T, Q> wy(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<2,T,Q>
wyw	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<3, T, Q> wyw(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<3,T,Q>
wyww	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<4, T, Q> wyww(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<4,T,Q>
wywx	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<4, T, Q> wywx(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<4,T,Q>
wywy	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<4, T, Q> wywy(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<4,T,Q>
wywz	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<4, T, Q> wywz(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<4,T,Q>
wyx	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<3, T, Q> wyx(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<3,T,Q>
wyxw	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<4, T, Q> wyxw(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<4,T,Q>
wyxx	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<4, T, Q> wyxx(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<4,T,Q>
wyxy	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<4, T, Q> wyxy(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<4,T,Q>
wyxz	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<4, T, Q> wyxz(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<4,T,Q>
wyy	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<3, T, Q> wyy(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<3,T,Q>
wyyw	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<4, T, Q> wyyw(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<4,T,Q>
wyyx	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<4, T, Q> wyyx(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<4,T,Q>
wyyy	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<4, T, Q> wyyy(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<4,T,Q>
wyyz	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<4, T, Q> wyyz(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<4,T,Q>
wyz	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<3, T, Q> wyz(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<3,T,Q>
wyzw	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<4, T, Q> wyzw(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<4,T,Q>
wyzx	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<4, T, Q> wyzx(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<4,T,Q>
wyzy	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<4, T, Q> wyzy(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<4,T,Q>
wyzz	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<4, T, Q> wyzz(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<4,T,Q>
wz	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<2, T, Q> wz(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<2,T,Q>
wzw	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<3, T, Q> wzw(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<3,T,Q>
wzww	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<4, T, Q> wzww(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<4,T,Q>
wzwx	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<4, T, Q> wzwx(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<4,T,Q>
wzwy	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<4, T, Q> wzwy(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<4,T,Q>
wzwz	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<4, T, Q> wzwz(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<4,T,Q>
wzx	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<3, T, Q> wzx(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<3,T,Q>
wzxw	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<4, T, Q> wzxw(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<4,T,Q>
wzxx	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<4, T, Q> wzxx(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<4,T,Q>
wzxy	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<4, T, Q> wzxy(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<4,T,Q>
wzxz	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<4, T, Q> wzxz(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<4,T,Q>
wzy	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<3, T, Q> wzy(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<3,T,Q>
wzyw	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<4, T, Q> wzyw(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<4,T,Q>
wzyx	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<4, T, Q> wzyx(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<4,T,Q>
wzyy	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<4, T, Q> wzyy(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<4,T,Q>
wzyz	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<4, T, Q> wzyz(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<4,T,Q>
wzz	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<3, T, Q> wzz(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<3,T,Q>
wzzw	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<4, T, Q> wzzw(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<4,T,Q>
wzzx	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<4, T, Q> wzzx(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<4,T,Q>
wzzy	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<4, T, Q> wzzy(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<4,T,Q>
wzzz	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<4, T, Q> wzzz(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<4,T,Q>
x	./GL/glxew.h	/^  int x, y; $/;"	m	struct:__anonb1a929810108	typeref:typename:int
x	./GL/glxew.h	/^typedef struct { int type; unsigned long serial; Bool send_event; Display *display; GLXDrawable /;"	m	struct:__anonb1a929810608	typeref:typename:int
x	./glm/detail/type_quat.hpp	/^					struct { T w, x, y, z; };$/;"	m	struct:glm::qua::__anon440bef85010a::__anon440bef850208	typeref:typename:T
x	./glm/detail/type_quat.hpp	/^				T w, x, y, z;$/;"	m	struct:glm::qua	typeref:typename:T
x	./glm/detail/type_quat.hpp	/^				T x, y, z, w;$/;"	m	struct:glm::qua	typeref:typename:T
x	./glm/detail/type_vec1.hpp	/^				T x;$/;"	m	union:glm::vec::__anon119f3359010a	typeref:typename:T
x	./glm/detail/type_vec1.hpp	/^			T x;$/;"	m	struct:glm::vec	typeref:typename:T
x	./glm/detail/type_vec1.hpp	/^			union {T x, r, s;};$/;"	m	union:glm::vec::__anon119f3359020a	typeref:typename:T
x	./glm/detail/type_vec2.hpp	/^			T x, y;$/;"	m	struct:glm::vec	typeref:typename:T
x	./glm/detail/type_vec3.hpp	/^			T x, y, z;$/;"	m	struct:glm::vec	typeref:typename:T
x	./glm/detail/type_vec4.hpp	/^			T x, y, z, w;$/;"	m	struct:glm::vec	typeref:typename:T
x	./glm/gtc/packing.inl	/^			int x : 10;$/;"	m	struct:glm::detail::i10i10i10i2::Data	typeref:typename:int:10	file:
x	./glm/gtc/packing.inl	/^			uint x : 10;$/;"	m	struct:glm::detail::u10u10u10u2::Data	typeref:typename:uint:10	file:
x	./glm/gtc/packing.inl	/^			uint x : 3;$/;"	m	struct:glm::detail::u3u3u2::Data	typeref:typename:uint:3	file:
x	./glm/gtc/packing.inl	/^			uint x : 4;$/;"	m	struct:glm::detail::u4u4::Data	typeref:typename:uint:4	file:
x	./glm/gtc/packing.inl	/^			uint x : 4;$/;"	m	struct:glm::detail::u4u4u4u4::Data	typeref:typename:uint:4	file:
x	./glm/gtc/packing.inl	/^			uint x : 5;$/;"	m	struct:glm::detail::u5u5u5u1::Data	typeref:typename:uint:5	file:
x	./glm/gtc/packing.inl	/^			uint x : 5;$/;"	m	struct:glm::detail::u5u6u5::Data	typeref:typename:uint:5	file:
x	./glm/gtc/packing.inl	/^			uint x : 9;$/;"	m	struct:glm::detail::u9u9u9e5::Data	typeref:typename:uint:9	file:
xw	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<2, T, Q> xw(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<2,T,Q>
xww	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<3, T, Q> xww(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<3,T,Q>
xwww	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<4, T, Q> xwww(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<4,T,Q>
xwwx	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<4, T, Q> xwwx(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<4,T,Q>
xwwy	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<4, T, Q> xwwy(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<4,T,Q>
xwwz	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<4, T, Q> xwwz(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<4,T,Q>
xwx	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<3, T, Q> xwx(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<3,T,Q>
xwxw	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<4, T, Q> xwxw(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<4,T,Q>
xwxx	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<4, T, Q> xwxx(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<4,T,Q>
xwxy	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<4, T, Q> xwxy(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<4,T,Q>
xwxz	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<4, T, Q> xwxz(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<4,T,Q>
xwy	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<3, T, Q> xwy(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<3,T,Q>
xwyw	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<4, T, Q> xwyw(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<4,T,Q>
xwyx	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<4, T, Q> xwyx(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<4,T,Q>
xwyy	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<4, T, Q> xwyy(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<4,T,Q>
xwyz	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<4, T, Q> xwyz(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<4,T,Q>
xwz	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<3, T, Q> xwz(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<3,T,Q>
xwzw	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<4, T, Q> xwzw(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<4,T,Q>
xwzx	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<4, T, Q> xwzx(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<4,T,Q>
xwzy	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<4, T, Q> xwzy(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<4,T,Q>
xwzz	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<4, T, Q> xwzz(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<4,T,Q>
xx	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<2, T, Q> xx(const glm::vec<1, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<2,T,Q>
xx	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<2, T, Q> xx(const glm::vec<2, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<2,T,Q>
xx	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<2, T, Q> xx(const glm::vec<3, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<2,T,Q>
xx	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<2, T, Q> xx(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<2,T,Q>
xxw	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<3, T, Q> xxw(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<3,T,Q>
xxww	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<4, T, Q> xxww(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<4,T,Q>
xxwx	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<4, T, Q> xxwx(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<4,T,Q>
xxwy	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<4, T, Q> xxwy(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<4,T,Q>
xxwz	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<4, T, Q> xxwz(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<4,T,Q>
xxx	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<3, T, Q> xxx(const glm::vec<1, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<3,T,Q>
xxx	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<3, T, Q> xxx(const glm::vec<2, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<3,T,Q>
xxx	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<3, T, Q> xxx(const glm::vec<3, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<3,T,Q>
xxx	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<3, T, Q> xxx(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<3,T,Q>
xxxw	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<4, T, Q> xxxw(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<4,T,Q>
xxxx	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<4, T, Q> xxxx(const glm::vec<1, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<4,T,Q>
xxxx	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<4, T, Q> xxxx(const glm::vec<2, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<4,T,Q>
xxxx	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<4, T, Q> xxxx(const glm::vec<3, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<4,T,Q>
xxxx	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<4, T, Q> xxxx(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<4,T,Q>
xxxy	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<4, T, Q> xxxy(const glm::vec<2, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<4,T,Q>
xxxy	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<4, T, Q> xxxy(const glm::vec<3, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<4,T,Q>
xxxy	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<4, T, Q> xxxy(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<4,T,Q>
xxxz	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<4, T, Q> xxxz(const glm::vec<3, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<4,T,Q>
xxxz	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<4, T, Q> xxxz(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<4,T,Q>
xxy	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<3, T, Q> xxy(const glm::vec<2, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<3,T,Q>
xxy	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<3, T, Q> xxy(const glm::vec<3, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<3,T,Q>
xxy	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<3, T, Q> xxy(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<3,T,Q>
xxyw	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<4, T, Q> xxyw(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<4,T,Q>
xxyx	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<4, T, Q> xxyx(const glm::vec<2, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<4,T,Q>
xxyx	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<4, T, Q> xxyx(const glm::vec<3, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<4,T,Q>
xxyx	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<4, T, Q> xxyx(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<4,T,Q>
xxyy	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<4, T, Q> xxyy(const glm::vec<2, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<4,T,Q>
xxyy	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<4, T, Q> xxyy(const glm::vec<3, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<4,T,Q>
xxyy	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<4, T, Q> xxyy(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<4,T,Q>
xxyz	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<4, T, Q> xxyz(const glm::vec<3, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<4,T,Q>
xxyz	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<4, T, Q> xxyz(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<4,T,Q>
xxz	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<3, T, Q> xxz(const glm::vec<3, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<3,T,Q>
xxz	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<3, T, Q> xxz(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<3,T,Q>
xxzw	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<4, T, Q> xxzw(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<4,T,Q>
xxzx	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<4, T, Q> xxzx(const glm::vec<3, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<4,T,Q>
xxzx	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<4, T, Q> xxzx(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<4,T,Q>
xxzy	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<4, T, Q> xxzy(const glm::vec<3, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<4,T,Q>
xxzy	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<4, T, Q> xxzy(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<4,T,Q>
xxzz	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<4, T, Q> xxzz(const glm::vec<3, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<4,T,Q>
xxzz	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<4, T, Q> xxzz(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<4,T,Q>
xy	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<2, T, Q> xy(const glm::vec<2, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<2,T,Q>
xy	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<2, T, Q> xy(const glm::vec<3, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<2,T,Q>
xy	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<2, T, Q> xy(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<2,T,Q>
xyw	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<3, T, Q> xyw(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<3,T,Q>
xyww	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<4, T, Q> xyww(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<4,T,Q>
xywx	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<4, T, Q> xywx(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<4,T,Q>
xywy	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<4, T, Q> xywy(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<4,T,Q>
xywz	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<4, T, Q> xywz(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<4,T,Q>
xyx	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<3, T, Q> xyx(const glm::vec<2, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<3,T,Q>
xyx	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<3, T, Q> xyx(const glm::vec<3, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<3,T,Q>
xyx	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<3, T, Q> xyx(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<3,T,Q>
xyxw	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<4, T, Q> xyxw(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<4,T,Q>
xyxx	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<4, T, Q> xyxx(const glm::vec<2, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<4,T,Q>
xyxx	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<4, T, Q> xyxx(const glm::vec<3, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<4,T,Q>
xyxx	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<4, T, Q> xyxx(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<4,T,Q>
xyxy	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<4, T, Q> xyxy(const glm::vec<2, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<4,T,Q>
xyxy	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<4, T, Q> xyxy(const glm::vec<3, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<4,T,Q>
xyxy	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<4, T, Q> xyxy(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<4,T,Q>
xyxz	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<4, T, Q> xyxz(const glm::vec<3, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<4,T,Q>
xyxz	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<4, T, Q> xyxz(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<4,T,Q>
xyy	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<3, T, Q> xyy(const glm::vec<2, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<3,T,Q>
xyy	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<3, T, Q> xyy(const glm::vec<3, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<3,T,Q>
xyy	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<3, T, Q> xyy(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<3,T,Q>
xyyw	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<4, T, Q> xyyw(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<4,T,Q>
xyyx	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<4, T, Q> xyyx(const glm::vec<2, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<4,T,Q>
xyyx	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<4, T, Q> xyyx(const glm::vec<3, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<4,T,Q>
xyyx	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<4, T, Q> xyyx(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<4,T,Q>
xyyy	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<4, T, Q> xyyy(const glm::vec<2, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<4,T,Q>
xyyy	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<4, T, Q> xyyy(const glm::vec<3, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<4,T,Q>
xyyy	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<4, T, Q> xyyy(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<4,T,Q>
xyyz	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<4, T, Q> xyyz(const glm::vec<3, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<4,T,Q>
xyyz	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<4, T, Q> xyyz(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<4,T,Q>
xyz	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<3, T, Q> xyz(const glm::vec<3, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<3,T,Q>
xyz	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<3, T, Q> xyz(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<3,T,Q>
xyzw	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<4, T, Q> xyzw(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<4,T,Q>
xyzx	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<4, T, Q> xyzx(const glm::vec<3, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<4,T,Q>
xyzx	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<4, T, Q> xyzx(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<4,T,Q>
xyzy	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<4, T, Q> xyzy(const glm::vec<3, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<4,T,Q>
xyzy	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<4, T, Q> xyzy(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<4,T,Q>
xyzz	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<4, T, Q> xyzz(const glm::vec<3, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<4,T,Q>
xyzz	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<4, T, Q> xyzz(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<4,T,Q>
xz	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<2, T, Q> xz(const glm::vec<3, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<2,T,Q>
xz	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<2, T, Q> xz(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<2,T,Q>
xzw	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<3, T, Q> xzw(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<3,T,Q>
xzww	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<4, T, Q> xzww(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<4,T,Q>
xzwx	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<4, T, Q> xzwx(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<4,T,Q>
xzwy	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<4, T, Q> xzwy(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<4,T,Q>
xzwz	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<4, T, Q> xzwz(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<4,T,Q>
xzx	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<3, T, Q> xzx(const glm::vec<3, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<3,T,Q>
xzx	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<3, T, Q> xzx(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<3,T,Q>
xzxw	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<4, T, Q> xzxw(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<4,T,Q>
xzxx	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<4, T, Q> xzxx(const glm::vec<3, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<4,T,Q>
xzxx	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<4, T, Q> xzxx(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<4,T,Q>
xzxy	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<4, T, Q> xzxy(const glm::vec<3, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<4,T,Q>
xzxy	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<4, T, Q> xzxy(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<4,T,Q>
xzxz	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<4, T, Q> xzxz(const glm::vec<3, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<4,T,Q>
xzxz	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<4, T, Q> xzxz(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<4,T,Q>
xzy	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<3, T, Q> xzy(const glm::vec<3, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<3,T,Q>
xzy	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<3, T, Q> xzy(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<3,T,Q>
xzyw	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<4, T, Q> xzyw(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<4,T,Q>
xzyx	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<4, T, Q> xzyx(const glm::vec<3, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<4,T,Q>
xzyx	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<4, T, Q> xzyx(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<4,T,Q>
xzyy	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<4, T, Q> xzyy(const glm::vec<3, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<4,T,Q>
xzyy	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<4, T, Q> xzyy(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<4,T,Q>
xzyz	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<4, T, Q> xzyz(const glm::vec<3, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<4,T,Q>
xzyz	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<4, T, Q> xzyz(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<4,T,Q>
xzz	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<3, T, Q> xzz(const glm::vec<3, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<3,T,Q>
xzz	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<3, T, Q> xzz(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<3,T,Q>
xzzw	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<4, T, Q> xzzw(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<4,T,Q>
xzzx	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<4, T, Q> xzzx(const glm::vec<3, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<4,T,Q>
xzzx	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<4, T, Q> xzzx(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<4,T,Q>
xzzy	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<4, T, Q> xzzy(const glm::vec<3, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<4,T,Q>
xzzy	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<4, T, Q> xzzy(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<4,T,Q>
xzzz	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<4, T, Q> xzzz(const glm::vec<3, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<4,T,Q>
xzzz	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<4, T, Q> xzzz(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<4,T,Q>
y	./GL/glxew.h	/^  int x, y; $/;"	m	struct:__anonb1a929810108	typeref:typename:int
y	./GL/glxew.h	/^typedef struct { int type; unsigned long serial; Bool send_event; Display *display; GLXDrawable /;"	m	struct:__anonb1a929810608	typeref:typename:int
y	./glm/detail/type_quat.hpp	/^					struct { T w, x, y, z; };$/;"	m	struct:glm::qua::__anon440bef85010a::__anon440bef850208	typeref:typename:T
y	./glm/detail/type_quat.hpp	/^				T w, x, y, z;$/;"	m	struct:glm::qua	typeref:typename:T
y	./glm/detail/type_quat.hpp	/^				T x, y, z, w;$/;"	m	struct:glm::qua	typeref:typename:T
y	./glm/detail/type_vec2.hpp	/^			T x, y;$/;"	m	struct:glm::vec	typeref:typename:T
y	./glm/detail/type_vec3.hpp	/^			T x, y, z;$/;"	m	struct:glm::vec	typeref:typename:T
y	./glm/detail/type_vec4.hpp	/^			T x, y, z, w;$/;"	m	struct:glm::vec	typeref:typename:T
y	./glm/gtc/packing.inl	/^			int y : 10;$/;"	m	struct:glm::detail::i10i10i10i2::Data	typeref:typename:int:10	file:
y	./glm/gtc/packing.inl	/^			uint y : 10;$/;"	m	struct:glm::detail::u10u10u10u2::Data	typeref:typename:uint:10	file:
y	./glm/gtc/packing.inl	/^			uint y : 3;$/;"	m	struct:glm::detail::u3u3u2::Data	typeref:typename:uint:3	file:
y	./glm/gtc/packing.inl	/^			uint y : 4;$/;"	m	struct:glm::detail::u4u4::Data	typeref:typename:uint:4	file:
y	./glm/gtc/packing.inl	/^			uint y : 4;$/;"	m	struct:glm::detail::u4u4u4u4::Data	typeref:typename:uint:4	file:
y	./glm/gtc/packing.inl	/^			uint y : 5;$/;"	m	struct:glm::detail::u5u5u5u1::Data	typeref:typename:uint:5	file:
y	./glm/gtc/packing.inl	/^			uint y : 6;$/;"	m	struct:glm::detail::u5u6u5::Data	typeref:typename:uint:6	file:
y	./glm/gtc/packing.inl	/^			uint y : 9;$/;"	m	struct:glm::detail::u9u9u9e5::Data	typeref:typename:uint:9	file:
yaw	./glm/gtc/quaternion.inl	/^	GLM_FUNC_QUALIFIER T yaw(qua<T, Q> const& q)$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER T
yawPitchRoll	./glm/gtx/euler_angles.inl	/^	GLM_FUNC_QUALIFIER mat<4, 4, T, defaultp> yawPitchRoll$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER mat<4,4,T,defaultp>
yw	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<2, T, Q> yw(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<2,T,Q>
yww	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<3, T, Q> yww(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<3,T,Q>
ywww	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<4, T, Q> ywww(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<4,T,Q>
ywwx	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<4, T, Q> ywwx(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<4,T,Q>
ywwy	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<4, T, Q> ywwy(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<4,T,Q>
ywwz	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<4, T, Q> ywwz(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<4,T,Q>
ywx	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<3, T, Q> ywx(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<3,T,Q>
ywxw	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<4, T, Q> ywxw(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<4,T,Q>
ywxx	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<4, T, Q> ywxx(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<4,T,Q>
ywxy	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<4, T, Q> ywxy(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<4,T,Q>
ywxz	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<4, T, Q> ywxz(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<4,T,Q>
ywy	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<3, T, Q> ywy(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<3,T,Q>
ywyw	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<4, T, Q> ywyw(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<4,T,Q>
ywyx	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<4, T, Q> ywyx(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<4,T,Q>
ywyy	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<4, T, Q> ywyy(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<4,T,Q>
ywyz	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<4, T, Q> ywyz(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<4,T,Q>
ywz	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<3, T, Q> ywz(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<3,T,Q>
ywzw	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<4, T, Q> ywzw(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<4,T,Q>
ywzx	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<4, T, Q> ywzx(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<4,T,Q>
ywzy	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<4, T, Q> ywzy(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<4,T,Q>
ywzz	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<4, T, Q> ywzz(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<4,T,Q>
yx	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<2, T, Q> yx(const glm::vec<2, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<2,T,Q>
yx	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<2, T, Q> yx(const glm::vec<3, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<2,T,Q>
yx	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<2, T, Q> yx(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<2,T,Q>
yxw	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<3, T, Q> yxw(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<3,T,Q>
yxww	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<4, T, Q> yxww(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<4,T,Q>
yxwx	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<4, T, Q> yxwx(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<4,T,Q>
yxwy	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<4, T, Q> yxwy(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<4,T,Q>
yxwz	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<4, T, Q> yxwz(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<4,T,Q>
yxx	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<3, T, Q> yxx(const glm::vec<2, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<3,T,Q>
yxx	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<3, T, Q> yxx(const glm::vec<3, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<3,T,Q>
yxx	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<3, T, Q> yxx(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<3,T,Q>
yxxw	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<4, T, Q> yxxw(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<4,T,Q>
yxxx	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<4, T, Q> yxxx(const glm::vec<2, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<4,T,Q>
yxxx	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<4, T, Q> yxxx(const glm::vec<3, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<4,T,Q>
yxxx	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<4, T, Q> yxxx(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<4,T,Q>
yxxy	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<4, T, Q> yxxy(const glm::vec<2, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<4,T,Q>
yxxy	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<4, T, Q> yxxy(const glm::vec<3, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<4,T,Q>
yxxy	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<4, T, Q> yxxy(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<4,T,Q>
yxxz	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<4, T, Q> yxxz(const glm::vec<3, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<4,T,Q>
yxxz	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<4, T, Q> yxxz(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<4,T,Q>
yxy	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<3, T, Q> yxy(const glm::vec<2, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<3,T,Q>
yxy	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<3, T, Q> yxy(const glm::vec<3, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<3,T,Q>
yxy	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<3, T, Q> yxy(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<3,T,Q>
yxyw	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<4, T, Q> yxyw(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<4,T,Q>
yxyx	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<4, T, Q> yxyx(const glm::vec<2, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<4,T,Q>
yxyx	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<4, T, Q> yxyx(const glm::vec<3, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<4,T,Q>
yxyx	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<4, T, Q> yxyx(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<4,T,Q>
yxyy	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<4, T, Q> yxyy(const glm::vec<2, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<4,T,Q>
yxyy	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<4, T, Q> yxyy(const glm::vec<3, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<4,T,Q>
yxyy	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<4, T, Q> yxyy(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<4,T,Q>
yxyz	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<4, T, Q> yxyz(const glm::vec<3, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<4,T,Q>
yxyz	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<4, T, Q> yxyz(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<4,T,Q>
yxz	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<3, T, Q> yxz(const glm::vec<3, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<3,T,Q>
yxz	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<3, T, Q> yxz(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<3,T,Q>
yxzw	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<4, T, Q> yxzw(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<4,T,Q>
yxzx	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<4, T, Q> yxzx(const glm::vec<3, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<4,T,Q>
yxzx	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<4, T, Q> yxzx(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<4,T,Q>
yxzy	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<4, T, Q> yxzy(const glm::vec<3, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<4,T,Q>
yxzy	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<4, T, Q> yxzy(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<4,T,Q>
yxzz	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<4, T, Q> yxzz(const glm::vec<3, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<4,T,Q>
yxzz	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<4, T, Q> yxzz(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<4,T,Q>
yy	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<2, T, Q> yy(const glm::vec<2, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<2,T,Q>
yy	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<2, T, Q> yy(const glm::vec<3, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<2,T,Q>
yy	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<2, T, Q> yy(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<2,T,Q>
yyw	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<3, T, Q> yyw(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<3,T,Q>
yyww	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<4, T, Q> yyww(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<4,T,Q>
yywx	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<4, T, Q> yywx(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<4,T,Q>
yywy	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<4, T, Q> yywy(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<4,T,Q>
yywz	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<4, T, Q> yywz(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<4,T,Q>
yyx	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<3, T, Q> yyx(const glm::vec<2, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<3,T,Q>
yyx	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<3, T, Q> yyx(const glm::vec<3, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<3,T,Q>
yyx	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<3, T, Q> yyx(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<3,T,Q>
yyxw	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<4, T, Q> yyxw(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<4,T,Q>
yyxx	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<4, T, Q> yyxx(const glm::vec<2, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<4,T,Q>
yyxx	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<4, T, Q> yyxx(const glm::vec<3, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<4,T,Q>
yyxx	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<4, T, Q> yyxx(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<4,T,Q>
yyxy	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<4, T, Q> yyxy(const glm::vec<2, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<4,T,Q>
yyxy	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<4, T, Q> yyxy(const glm::vec<3, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<4,T,Q>
yyxy	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<4, T, Q> yyxy(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<4,T,Q>
yyxz	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<4, T, Q> yyxz(const glm::vec<3, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<4,T,Q>
yyxz	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<4, T, Q> yyxz(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<4,T,Q>
yyy	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<3, T, Q> yyy(const glm::vec<2, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<3,T,Q>
yyy	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<3, T, Q> yyy(const glm::vec<3, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<3,T,Q>
yyy	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<3, T, Q> yyy(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<3,T,Q>
yyyw	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<4, T, Q> yyyw(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<4,T,Q>
yyyx	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<4, T, Q> yyyx(const glm::vec<2, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<4,T,Q>
yyyx	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<4, T, Q> yyyx(const glm::vec<3, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<4,T,Q>
yyyx	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<4, T, Q> yyyx(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<4,T,Q>
yyyy	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<4, T, Q> yyyy(const glm::vec<2, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<4,T,Q>
yyyy	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<4, T, Q> yyyy(const glm::vec<3, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<4,T,Q>
yyyy	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<4, T, Q> yyyy(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<4,T,Q>
yyyz	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<4, T, Q> yyyz(const glm::vec<3, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<4,T,Q>
yyyz	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<4, T, Q> yyyz(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<4,T,Q>
yyz	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<3, T, Q> yyz(const glm::vec<3, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<3,T,Q>
yyz	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<3, T, Q> yyz(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<3,T,Q>
yyzw	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<4, T, Q> yyzw(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<4,T,Q>
yyzx	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<4, T, Q> yyzx(const glm::vec<3, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<4,T,Q>
yyzx	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<4, T, Q> yyzx(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<4,T,Q>
yyzy	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<4, T, Q> yyzy(const glm::vec<3, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<4,T,Q>
yyzy	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<4, T, Q> yyzy(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<4,T,Q>
yyzz	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<4, T, Q> yyzz(const glm::vec<3, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<4,T,Q>
yyzz	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<4, T, Q> yyzz(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<4,T,Q>
yz	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<2, T, Q> yz(const glm::vec<3, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<2,T,Q>
yz	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<2, T, Q> yz(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<2,T,Q>
yzw	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<3, T, Q> yzw(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<3,T,Q>
yzww	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<4, T, Q> yzww(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<4,T,Q>
yzwx	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<4, T, Q> yzwx(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<4,T,Q>
yzwy	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<4, T, Q> yzwy(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<4,T,Q>
yzwz	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<4, T, Q> yzwz(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<4,T,Q>
yzx	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<3, T, Q> yzx(const glm::vec<3, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<3,T,Q>
yzx	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<3, T, Q> yzx(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<3,T,Q>
yzxw	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<4, T, Q> yzxw(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<4,T,Q>
yzxx	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<4, T, Q> yzxx(const glm::vec<3, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<4,T,Q>
yzxx	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<4, T, Q> yzxx(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<4,T,Q>
yzxy	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<4, T, Q> yzxy(const glm::vec<3, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<4,T,Q>
yzxy	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<4, T, Q> yzxy(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<4,T,Q>
yzxz	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<4, T, Q> yzxz(const glm::vec<3, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<4,T,Q>
yzxz	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<4, T, Q> yzxz(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<4,T,Q>
yzy	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<3, T, Q> yzy(const glm::vec<3, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<3,T,Q>
yzy	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<3, T, Q> yzy(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<3,T,Q>
yzyw	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<4, T, Q> yzyw(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<4,T,Q>
yzyx	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<4, T, Q> yzyx(const glm::vec<3, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<4,T,Q>
yzyx	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<4, T, Q> yzyx(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<4,T,Q>
yzyy	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<4, T, Q> yzyy(const glm::vec<3, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<4,T,Q>
yzyy	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<4, T, Q> yzyy(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<4,T,Q>
yzyz	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<4, T, Q> yzyz(const glm::vec<3, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<4,T,Q>
yzyz	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<4, T, Q> yzyz(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<4,T,Q>
yzz	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<3, T, Q> yzz(const glm::vec<3, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<3,T,Q>
yzz	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<3, T, Q> yzz(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<3,T,Q>
yzzw	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<4, T, Q> yzzw(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<4,T,Q>
yzzx	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<4, T, Q> yzzx(const glm::vec<3, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<4,T,Q>
yzzx	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<4, T, Q> yzzx(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<4,T,Q>
yzzy	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<4, T, Q> yzzy(const glm::vec<3, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<4,T,Q>
yzzy	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<4, T, Q> yzzy(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<4,T,Q>
yzzz	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<4, T, Q> yzzz(const glm::vec<3, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<4,T,Q>
yzzz	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<4, T, Q> yzzz(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<4,T,Q>
z	./glm/detail/type_quat.hpp	/^					struct { T w, x, y, z; };$/;"	m	struct:glm::qua::__anon440bef85010a::__anon440bef850208	typeref:typename:T
z	./glm/detail/type_quat.hpp	/^				T w, x, y, z;$/;"	m	struct:glm::qua	typeref:typename:T
z	./glm/detail/type_quat.hpp	/^				T x, y, z, w;$/;"	m	struct:glm::qua	typeref:typename:T
z	./glm/detail/type_vec3.hpp	/^			T x, y, z;$/;"	m	struct:glm::vec	typeref:typename:T
z	./glm/detail/type_vec4.hpp	/^			T x, y, z, w;$/;"	m	struct:glm::vec	typeref:typename:T
z	./glm/gtc/packing.inl	/^			int z : 10;$/;"	m	struct:glm::detail::i10i10i10i2::Data	typeref:typename:int:10	file:
z	./glm/gtc/packing.inl	/^			uint z : 10;$/;"	m	struct:glm::detail::u10u10u10u2::Data	typeref:typename:uint:10	file:
z	./glm/gtc/packing.inl	/^			uint z : 2;$/;"	m	struct:glm::detail::u3u3u2::Data	typeref:typename:uint:2	file:
z	./glm/gtc/packing.inl	/^			uint z : 4;$/;"	m	struct:glm::detail::u4u4u4u4::Data	typeref:typename:uint:4	file:
z	./glm/gtc/packing.inl	/^			uint z : 5;$/;"	m	struct:glm::detail::u5u5u5u1::Data	typeref:typename:uint:5	file:
z	./glm/gtc/packing.inl	/^			uint z : 5;$/;"	m	struct:glm::detail::u5u6u5::Data	typeref:typename:uint:5	file:
z	./glm/gtc/packing.inl	/^			uint z : 9;$/;"	m	struct:glm::detail::u9u9u9e5::Data	typeref:typename:uint:9	file:
zero	./glm/gtc/constants.inl	/^	GLM_FUNC_QUALIFIER GLM_CONSTEXPR genType zero()$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER GLM_CONSTEXPR genType
zw	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<2, T, Q> zw(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<2,T,Q>
zww	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<3, T, Q> zww(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<3,T,Q>
zwww	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<4, T, Q> zwww(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<4,T,Q>
zwwx	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<4, T, Q> zwwx(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<4,T,Q>
zwwy	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<4, T, Q> zwwy(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<4,T,Q>
zwwz	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<4, T, Q> zwwz(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<4,T,Q>
zwx	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<3, T, Q> zwx(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<3,T,Q>
zwxw	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<4, T, Q> zwxw(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<4,T,Q>
zwxx	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<4, T, Q> zwxx(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<4,T,Q>
zwxy	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<4, T, Q> zwxy(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<4,T,Q>
zwxz	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<4, T, Q> zwxz(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<4,T,Q>
zwy	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<3, T, Q> zwy(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<3,T,Q>
zwyw	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<4, T, Q> zwyw(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<4,T,Q>
zwyx	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<4, T, Q> zwyx(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<4,T,Q>
zwyy	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<4, T, Q> zwyy(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<4,T,Q>
zwyz	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<4, T, Q> zwyz(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<4,T,Q>
zwz	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<3, T, Q> zwz(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<3,T,Q>
zwzw	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<4, T, Q> zwzw(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<4,T,Q>
zwzx	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<4, T, Q> zwzx(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<4,T,Q>
zwzy	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<4, T, Q> zwzy(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<4,T,Q>
zwzz	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<4, T, Q> zwzz(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<4,T,Q>
zx	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<2, T, Q> zx(const glm::vec<3, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<2,T,Q>
zx	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<2, T, Q> zx(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<2,T,Q>
zxw	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<3, T, Q> zxw(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<3,T,Q>
zxww	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<4, T, Q> zxww(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<4,T,Q>
zxwx	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<4, T, Q> zxwx(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<4,T,Q>
zxwy	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<4, T, Q> zxwy(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<4,T,Q>
zxwz	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<4, T, Q> zxwz(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<4,T,Q>
zxx	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<3, T, Q> zxx(const glm::vec<3, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<3,T,Q>
zxx	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<3, T, Q> zxx(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<3,T,Q>
zxxw	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<4, T, Q> zxxw(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<4,T,Q>
zxxx	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<4, T, Q> zxxx(const glm::vec<3, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<4,T,Q>
zxxx	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<4, T, Q> zxxx(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<4,T,Q>
zxxy	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<4, T, Q> zxxy(const glm::vec<3, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<4,T,Q>
zxxy	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<4, T, Q> zxxy(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<4,T,Q>
zxxz	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<4, T, Q> zxxz(const glm::vec<3, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<4,T,Q>
zxxz	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<4, T, Q> zxxz(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<4,T,Q>
zxy	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<3, T, Q> zxy(const glm::vec<3, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<3,T,Q>
zxy	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<3, T, Q> zxy(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<3,T,Q>
zxyw	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<4, T, Q> zxyw(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<4,T,Q>
zxyx	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<4, T, Q> zxyx(const glm::vec<3, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<4,T,Q>
zxyx	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<4, T, Q> zxyx(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<4,T,Q>
zxyy	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<4, T, Q> zxyy(const glm::vec<3, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<4,T,Q>
zxyy	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<4, T, Q> zxyy(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<4,T,Q>
zxyz	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<4, T, Q> zxyz(const glm::vec<3, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<4,T,Q>
zxyz	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<4, T, Q> zxyz(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<4,T,Q>
zxz	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<3, T, Q> zxz(const glm::vec<3, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<3,T,Q>
zxz	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<3, T, Q> zxz(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<3,T,Q>
zxzw	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<4, T, Q> zxzw(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<4,T,Q>
zxzx	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<4, T, Q> zxzx(const glm::vec<3, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<4,T,Q>
zxzx	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<4, T, Q> zxzx(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<4,T,Q>
zxzy	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<4, T, Q> zxzy(const glm::vec<3, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<4,T,Q>
zxzy	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<4, T, Q> zxzy(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<4,T,Q>
zxzz	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<4, T, Q> zxzz(const glm::vec<3, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<4,T,Q>
zxzz	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<4, T, Q> zxzz(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<4,T,Q>
zy	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<2, T, Q> zy(const glm::vec<3, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<2,T,Q>
zy	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<2, T, Q> zy(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<2,T,Q>
zyw	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<3, T, Q> zyw(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<3,T,Q>
zyww	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<4, T, Q> zyww(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<4,T,Q>
zywx	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<4, T, Q> zywx(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<4,T,Q>
zywy	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<4, T, Q> zywy(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<4,T,Q>
zywz	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<4, T, Q> zywz(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<4,T,Q>
zyx	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<3, T, Q> zyx(const glm::vec<3, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<3,T,Q>
zyx	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<3, T, Q> zyx(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<3,T,Q>
zyxw	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<4, T, Q> zyxw(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<4,T,Q>
zyxx	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<4, T, Q> zyxx(const glm::vec<3, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<4,T,Q>
zyxx	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<4, T, Q> zyxx(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<4,T,Q>
zyxy	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<4, T, Q> zyxy(const glm::vec<3, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<4,T,Q>
zyxy	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<4, T, Q> zyxy(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<4,T,Q>
zyxz	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<4, T, Q> zyxz(const glm::vec<3, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<4,T,Q>
zyxz	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<4, T, Q> zyxz(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<4,T,Q>
zyy	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<3, T, Q> zyy(const glm::vec<3, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<3,T,Q>
zyy	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<3, T, Q> zyy(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<3,T,Q>
zyyw	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<4, T, Q> zyyw(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<4,T,Q>
zyyx	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<4, T, Q> zyyx(const glm::vec<3, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<4,T,Q>
zyyx	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<4, T, Q> zyyx(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<4,T,Q>
zyyy	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<4, T, Q> zyyy(const glm::vec<3, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<4,T,Q>
zyyy	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<4, T, Q> zyyy(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<4,T,Q>
zyyz	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<4, T, Q> zyyz(const glm::vec<3, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<4,T,Q>
zyyz	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<4, T, Q> zyyz(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<4,T,Q>
zyz	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<3, T, Q> zyz(const glm::vec<3, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<3,T,Q>
zyz	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<3, T, Q> zyz(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<3,T,Q>
zyzw	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<4, T, Q> zyzw(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<4,T,Q>
zyzx	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<4, T, Q> zyzx(const glm::vec<3, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<4,T,Q>
zyzx	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<4, T, Q> zyzx(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<4,T,Q>
zyzy	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<4, T, Q> zyzy(const glm::vec<3, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<4,T,Q>
zyzy	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<4, T, Q> zyzy(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<4,T,Q>
zyzz	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<4, T, Q> zyzz(const glm::vec<3, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<4,T,Q>
zyzz	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<4, T, Q> zyzz(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<4,T,Q>
zz	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<2, T, Q> zz(const glm::vec<3, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<2,T,Q>
zz	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<2, T, Q> zz(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<2,T,Q>
zzw	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<3, T, Q> zzw(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<3,T,Q>
zzww	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<4, T, Q> zzww(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<4,T,Q>
zzwx	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<4, T, Q> zzwx(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<4,T,Q>
zzwy	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<4, T, Q> zzwy(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<4,T,Q>
zzwz	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<4, T, Q> zzwz(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<4,T,Q>
zzx	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<3, T, Q> zzx(const glm::vec<3, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<3,T,Q>
zzx	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<3, T, Q> zzx(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<3,T,Q>
zzxw	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<4, T, Q> zzxw(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<4,T,Q>
zzxx	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<4, T, Q> zzxx(const glm::vec<3, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<4,T,Q>
zzxx	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<4, T, Q> zzxx(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<4,T,Q>
zzxy	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<4, T, Q> zzxy(const glm::vec<3, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<4,T,Q>
zzxy	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<4, T, Q> zzxy(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<4,T,Q>
zzxz	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<4, T, Q> zzxz(const glm::vec<3, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<4,T,Q>
zzxz	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<4, T, Q> zzxz(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<4,T,Q>
zzy	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<3, T, Q> zzy(const glm::vec<3, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<3,T,Q>
zzy	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<3, T, Q> zzy(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<3,T,Q>
zzyw	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<4, T, Q> zzyw(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<4,T,Q>
zzyx	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<4, T, Q> zzyx(const glm::vec<3, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<4,T,Q>
zzyx	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<4, T, Q> zzyx(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<4,T,Q>
zzyy	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<4, T, Q> zzyy(const glm::vec<3, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<4,T,Q>
zzyy	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<4, T, Q> zzyy(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<4,T,Q>
zzyz	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<4, T, Q> zzyz(const glm::vec<3, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<4,T,Q>
zzyz	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<4, T, Q> zzyz(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<4,T,Q>
zzz	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<3, T, Q> zzz(const glm::vec<3, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<3,T,Q>
zzz	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<3, T, Q> zzz(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<3,T,Q>
zzzw	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<4, T, Q> zzzw(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<4,T,Q>
zzzx	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<4, T, Q> zzzx(const glm::vec<3, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<4,T,Q>
zzzx	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<4, T, Q> zzzx(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<4,T,Q>
zzzy	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<4, T, Q> zzzy(const glm::vec<3, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<4,T,Q>
zzzy	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<4, T, Q> zzzy(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<4,T,Q>
zzzz	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<4, T, Q> zzzz(const glm::vec<3, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<4,T,Q>
zzzz	./glm/gtx/vec_swizzle.hpp	/^	GLM_FUNC_QUALIFIER glm::vec<4, T, Q> zzzz(const glm::vec<4, T, Q> &v) {$/;"	f	namespace:glm	typeref:typename:GLM_FUNC_QUALIFIER glm::vec<4,T,Q>
~basic_format_saver	./glm/gtx/io.inl	/^	basic_format_saver<CTy, CTr>::~basic_format_saver()$/;"	f	class:glm::io::basic_format_saver	typeref:typename:GLM_FUNC_QUALIFIER
~basic_state_saver	./glm/gtx/io.inl	/^	GLM_FUNC_QUALIFIER basic_state_saver<CTy, CTr>::~basic_state_saver()$/;"	f	class:glm::io::basic_state_saver	typeref:typename:GLM_FUNC_QUALIFIER
